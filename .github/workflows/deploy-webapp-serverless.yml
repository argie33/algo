name: Deploy Serverless Webapp

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  STACK_NAME: stocks-serverless-webapp
  LAMBDA_CODE_KEY: api.zip
  APP_BUCKET: stocks-algo-app-code
  SITE_BUCKET: stocks-algo-site-code
  DB_STACK_NAME: stocks-db-lambda-stack
  CERT_ARN: ${{ secrets.CERT_ARN }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Package API Lambda
        run: |
          cd webapp/api
          zip -r ../../${{ env.LAMBDA_CODE_KEY }} .

      - name: Upload Lambda code
        run: |
          aws s3 cp \
            ${{ env.LAMBDA_CODE_KEY }} \
            s3://${{ env.APP_BUCKET }}/${{ env.LAMBDA_CODE_KEY }}

      - name: Sync SPA to site bucket
        run: |
          aws s3 sync webapp/spa/ s3://${{ env.SITE_BUCKET }} --delete

      - name: Deploy CloudFormation stack
        run: |
          aws cloudformation deploy \
            --stack-name ${{ env.STACK_NAME }} \
            --template-file webapp/template-webapp-serverless.yml \
            --parameter-overrides \
              LambdaCodeKey=${{ env.LAMBDA_CODE_KEY }} \
              DBStackName=${{ env.DB_STACK_NAME }} \
              CertificateArn=${{ env.CERT_ARN }} \
            --capabilities CAPABILITY_NAMED_IAM
