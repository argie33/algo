name: Deploy Infrastructure (RDS/ECS/Secrets)

on:
  push:
    branches:
      - main
    paths:
      - 'template-app-stocks.yml'
      - '.github/workflows/deploy-infrastructure.yml'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy-infrastructure:
    name: Deploy CloudFormation Stack
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsDeployRole
          role-session-name: github-deploy-infrastructure
          aws-region: us-east-1

      - name: Deploy stocks-app-stack
        run: |
          echo "🚀 Deploying stocks-app-stack with updated RDS storage..."

          # Try to update stack, capture output and exit code
          UPDATE_OUTPUT=$(aws cloudformation update-stack \
            --stack-name stocks-app-stack \
            --region us-east-1 \
            --template-body file://template-app-stocks.yml \
            --capabilities CAPABILITY_IAM \
            --parameters \
              ParameterKey=RDSUsername,UsePreviousValue=true \
              ParameterKey=RDSPassword,UsePreviousValue=true \
              ParameterKey=FREDApiKey,UsePreviousValue=true 2>&1) || true

          echo "CloudFormation output:"
          echo "$UPDATE_OUTPUT"

          # Check if update was successful or no changes needed
          if echo "$UPDATE_OUTPUT" | grep -iq "No updates"; then
            echo "ℹ️ No updates needed - stack is already up to date"
          elif echo "$UPDATE_OUTPUT" | grep -q "StackId"; then
            echo "⏳ Waiting for stack update to complete (this takes ~10-15 minutes)..."
            aws cloudformation wait stack-update-complete \
              --stack-name stocks-app-stack \
              --region us-east-1
            echo "✅ Stack update complete!"
          else
            echo "⚠️ Unexpected CloudFormation response"
            echo "Checking current stack status..."
            aws cloudformation describe-stacks \
              --stack-name stocks-app-stack \
              --region us-east-1 \
              --query 'Stacks[0].[StackStatus,StackStatusReason]' \
              --output table
          fi

      - name: Verify RDS status
        run: |
          echo "📊 Checking RDS status after deployment..."
          aws rds describe-db-instances \
            --db-instance-identifier stocks \
            --region us-east-1 \
            --query 'DBInstances[0].[DBInstanceStatus,AllocatedStorage,MaxAllocatedStorage]' \
            --output table

      - name: Summary
        if: success()
        run: |
          echo "### ✅ Infrastructure Deployment Successful" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Stack:** stocks-app-stack" >> $GITHUB_STEP_SUMMARY
          echo "**Region:** us-east-1" >> $GITHUB_STEP_SUMMARY
          echo "**RDS Storage:** Increased to 30GB with autoscaling to 100GB" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** UPDATE_COMPLETE" >> $GITHUB_STEP_SUMMARY
