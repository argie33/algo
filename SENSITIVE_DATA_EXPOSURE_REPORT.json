{
  "summary": {
    "totalFiles": 551,
    "filesWithIssues": 127,
    "totalFindings": 1064,
    "criticalCount": 18,
    "highCount": 214,
    "mediumCount": 832,
    "timestamp": "2025-07-18T21:46:30.078Z"
  },
  "findings": [
    {
      "file": "/home/stocks/algo/check-cognito-stack-status.js",
      "line": 201,
      "content": "console.log(`     - ${key}: ${field.present ? 'Present but invalid' : 'Missing'}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/check-cognito-stack-status.js",
      "line": 220,
      "content": "console.log('   This means authentication is not properly configured');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/check-data-loading-status.js",
      "line": 43,
      "content": "console.log('   Tables:', Object.keys(dbHealth.database.tables || {}).length);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/check-deployment-status.js",
      "line": 71,
      "content": "console.log('5. üîê API Gateway requires authentication');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/comprehensive-api-health-tests.js",
      "line": 234,
      "content": "console.log(`   üîê ${response.status} - Authentication required (${responseTime}ms)`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/comprehensive-api-health-tests.js",
      "line": 295,
      "content": "console.log('   - Review authentication requirements');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 15,
      "content": "console.log('üîê Creating API Key Encryption Secret...');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 15,
      "content": "console.log('üîê Creating API Key Encryption Secret...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 35,
      "content": "console.log('‚ö†Ô∏è  Secret already exists, updating...');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 35,
      "content": "console.log('‚ö†Ô∏è  Secret already exists, updating...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 40,
      "content": "console.log('üìù Creating new secret...');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 40,
      "content": "console.log('üìù Creating new secret...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 51,
      "content": "console.log('‚úÖ API Key encryption secret updated successfully');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 51,
      "content": "console.log('‚úÖ API Key encryption secret updated successfully');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 52,
      "content": "console.log(`üìã Secret ARN: ${response.ARN}`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 52,
      "content": "console.log(`üìã Secret ARN: ${response.ARN}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 67,
      "content": "console.log('‚úÖ API Key encryption secret created successfully');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 67,
      "content": "console.log('‚úÖ API Key encryption secret created successfully');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 68,
      "content": "console.log(`üìã Secret ARN: ${response.ARN}`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 68,
      "content": "console.log(`üìã Secret ARN: ${response.ARN}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 71,
      "content": "console.log('üîë Secret Details:');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 71,
      "content": "console.log('üîë Secret Details:');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 72,
      "content": "console.log(`   Name: ${secretName}`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 72,
      "content": "console.log(`   Name: ${secretName}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 73,
      "content": "console.log(`   Key Length: ${encryptionKey.length} characters (${crypto.randomBytes(32).length * 8} bits)`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 77,
      "content": "console.log('1. Restart Lambda function to pick up new secret');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 77,
      "content": "console.log('1. Restart Lambda function to pick up new secret');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 78,
      "content": "console.log('2. Test API key encryption service');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 79,
      "content": "console.log('3. Verify /settings/api-keys endpoint works');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 88,
      "content": "console.error('‚ùå Failed to create API key encryption secret:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 92,
      "content": "console.log('üí° Try running with AWS credentials configured');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 104,
      "content": "console.log('üîê Creating JWT Secret...');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 104,
      "content": "console.log('üîê Creating JWT Secret...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 123,
      "content": "console.log('‚ö†Ô∏è  JWT secret already exists, updating...');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 123,
      "content": "console.log('‚ö†Ô∏è  JWT secret already exists, updating...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 128,
      "content": "console.log('üìù Creating new JWT secret...');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 128,
      "content": "console.log('üìù Creating new JWT secret...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 138,
      "content": "console.log('‚úÖ JWT secret updated successfully');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 138,
      "content": "console.log('‚úÖ JWT secret updated successfully');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 152,
      "content": "console.log('‚úÖ JWT secret created successfully');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 152,
      "content": "console.log('‚úÖ JWT secret created successfully');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 158,
      "content": "console.error('‚ùå Failed to create JWT secret:', error.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 164,
      "content": "console.log('üöÄ Setting up AWS Secrets for API Key Integration...\\n');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 164,
      "content": "console.log('üöÄ Setting up AWS Secrets for API Key Integration...\\n');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 173,
      "content": "console.log(`‚úÖ API Key Encryption Secret: ${apiKeyResult.success ? 'SUCCESS' : 'FAILED'}`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 173,
      "content": "console.log(`‚úÖ API Key Encryption Secret: ${apiKeyResult.success ? 'SUCCESS' : 'FAILED'}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 174,
      "content": "console.log(`‚úÖ JWT Secret: ${jwtResult.success ? 'SUCCESS' : 'FAILED'}`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 174,
      "content": "console.log(`‚úÖ JWT Secret: ${jwtResult.success ? 'SUCCESS' : 'FAILED'}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 177,
      "content": "console.log('\\nüéâ All secrets created successfully!');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 177,
      "content": "console.log('\\nüéâ All secrets created successfully!');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 178,
      "content": "console.log('\\nüîÑ Next: Restart the Lambda function to load new secrets');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 178,
      "content": "console.log('\\nüîÑ Next: Restart the Lambda function to load new secrets');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 179,
      "content": "console.log('   The API key service should then work properly');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 181,
      "content": "console.log('\\n‚ö†Ô∏è  Some secrets failed to create - check errors above');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/create-api-key-secret.js",
      "line": 181,
      "content": "console.log('\\n‚ö†Ô∏è  Some secrets failed to create - check errors above');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/debug-auth-flow.js",
      "line": 5,
      "content": "console.log('üß™ Starting authentication flow debug...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/debug-auth-flow.js",
      "line": 77,
      "content": "console.log('1. Open browser to: http://localhost:3000/portfolio/performance');",
      "severity": "HIGH",
      "type": "DATABASE_HOST",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-auth-flow.js",
      "line": 82,
      "content": "console.log('   - Authentication loading hanging');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/debug-auth-flow.js",
      "line": 88,
      "content": "console.log('1. Try navigating to: http://localhost:3000/test-api');",
      "severity": "HIGH",
      "type": "DATABASE_HOST",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-auth-flow.js",
      "line": 94,
      "content": "console.log('- Authentication context loading indefinitely');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/debug-auth-flow.js",
      "line": 95,
      "content": "console.log('- CORS issues between localhost:3000 and AWS API');",
      "severity": "HIGH",
      "type": "DATABASE_HOST",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-auth-flow.js",
      "line": 96,
      "content": "console.log('- Missing authentication tokens');",
      "severity": "HIGH",
      "type": "TOKEN",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-auth-flow.js",
      "line": 96,
      "content": "console.log('- Missing authentication tokens');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/debug-db-init.js",
      "line": 9,
      "content": "console.log('  - DB_SECRET_ARN:', process.env.DB_SECRET_ARN ? 'SET' : 'NOT SET');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-db-init.js",
      "line": 9,
      "content": "console.log('  - DB_SECRET_ARN:', process.env.DB_SECRET_ARN ? 'SET' : 'NOT SET');",
      "severity": "HIGH",
      "type": "ENV_VARS",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-db-init.js",
      "line": 9,
      "content": "console.log('  - DB_SECRET_ARN:', process.env.DB_SECRET_ARN ? 'SET' : 'NOT SET');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/debug-db-init.js",
      "line": 10,
      "content": "console.log('  - AWS_REGION:', process.env.AWS_REGION || 'NOT SET');",
      "severity": "HIGH",
      "type": "ENV_VARS",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-db-init.js",
      "line": 11,
      "content": "console.log('  - ENVIRONMENT:', process.env.ENVIRONMENT || 'NOT SET');",
      "severity": "HIGH",
      "type": "ENV_VARS",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-db-init.js",
      "line": 50,
      "content": "console.log('  üîß Fetching database credentials...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/debug-db-init.js",
      "line": 60,
      "content": "console.log('  ‚úÖ Database credentials fetched successfully');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/debug-ecs-tasks.js",
      "line": 32,
      "content": "console.log(`üåç AWS Region: ${process.env.AWS_REGION || 'us-east-1'}`);",
      "severity": "HIGH",
      "type": "ENV_VARS",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 19,
      "content": "console.log('üîç AWS Secrets Manager Diagnostic Script');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 19,
      "content": "console.log('üîç AWS Secrets Manager Diagnostic Script');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 23,
      "content": "console.log(`üîë Secret ARN: ${secretArn}`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 23,
      "content": "console.log(`üîë Secret ARN: ${secretArn}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 24,
      "content": "console.log(`üåç AWS Region: ${process.env.AWS_REGION || 'us-east-1'}`);",
      "severity": "HIGH",
      "type": "ENV_VARS",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 25,
      "content": "console.log(`üîß Node Environment: ${process.env.NODE_ENV || 'development'}`);",
      "severity": "HIGH",
      "type": "ENV_VARS",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 28,
      "content": "console.error('‚ùå DB_SECRET_ARN environment variable not set');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 29,
      "content": "console.log('üí° Expected format: arn:aws:secretsmanager:region:account:secret:name');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 29,
      "content": "console.log('üí° Expected format: arn:aws:secretsmanager:region:account:secret:name');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 34,
      "content": "console.log('\\nüîÑ Step 1: Testing Secrets Manager connectivity...');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 34,
      "content": "console.log('\\nüîÑ Step 1: Testing Secrets Manager connectivity...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 37,
      "content": "console.log('üì° Sending GetSecretValueCommand...');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 37,
      "content": "console.log('üì° Sending GetSecretValueCommand...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 42,
      "content": "console.log(`‚úÖ Secrets Manager responded in ${responseTime}ms`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 42,
      "content": "console.log(`‚úÖ Secrets Manager responded in ${responseTime}ms`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 51,
      "content": "console.log('\\nüîÑ Step 2: Analyzing SecretString...');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 51,
      "content": "console.log('\\nüîÑ Step 2: Analyzing SecretString...');",
      "severity": "CRITICAL",
      "type": "SECRET_STRING",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 51,
      "content": "console.log('\\nüîÑ Step 2: Analyzing SecretString...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 52,
      "content": "console.log(`üìù SecretString type: ${typeof response.SecretString}`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 52,
      "content": "console.log(`üìù SecretString type: ${typeof response.SecretString}`);",
      "severity": "CRITICAL",
      "type": "SECRET_STRING",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 52,
      "content": "console.log(`üìù SecretString type: ${typeof response.SecretString}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 53,
      "content": "console.log(`üìè SecretString length: ${response.SecretString?.length || 'undefined'}`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 53,
      "content": "console.log(`üìè SecretString length: ${response.SecretString?.length || 'undefined'}`);",
      "severity": "CRITICAL",
      "type": "SECRET_STRING",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 53,
      "content": "console.log(`üìè SecretString length: ${response.SecretString?.length || 'undefined'}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 63,
      "content": "console.error('‚ùå ISSUE: SecretString starts with \"object\" - likely stringified object');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 67,
      "content": "console.error('‚ùå ISSUE: SecretString does not start with \"{\" - not valid JSON');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 70,
      "content": "console.error('‚ùå ISSUE: SecretString is undefined or null');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 78,
      "content": "console.log('üîë Secret keys:', Object.keys(secret));",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 78,
      "content": "console.log('üîë Secret keys:', Object.keys(secret));",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 85,
      "content": "console.error(`‚ùå Missing required keys: ${missingKeys.join(', ')}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 87,
      "content": "console.log('‚úÖ All required keys present');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 92,
      "content": "console.log(`   Host: ${secret.host || 'MISSING'}`);",
      "severity": "HIGH",
      "type": "DATABASE_HOST",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 92,
      "content": "console.log(`   Host: ${secret.host || 'MISSING'}`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 92,
      "content": "console.log(`   Host: ${secret.host || 'MISSING'}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 93,
      "content": "console.log(`   Port: ${secret.port || 5432}`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 93,
      "content": "console.log(`   Port: ${secret.port || 5432}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 94,
      "content": "console.log(`   Database: ${secret.dbname || 'stocks'}`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 94,
      "content": "console.log(`   Database: ${secret.dbname || 'stocks'}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 95,
      "content": "console.log(`   Username: ${secret.username || 'MISSING'}`);",
      "severity": "HIGH",
      "type": "DATABASE_USERNAME",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 95,
      "content": "console.log(`   Username: ${secret.username || 'MISSING'}`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 95,
      "content": "console.log(`   Username: ${secret.username || 'MISSING'}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 96,
      "content": "console.log(`   Password: ${secret.password ? '[SET]' : 'MISSING'}`);",
      "severity": "CRITICAL",
      "type": "DATABASE_PASSWORD",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 96,
      "content": "console.log(`   Password: ${secret.password ? '[SET]' : 'MISSING'}`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 96,
      "content": "console.log(`   Password: ${secret.password ? '[SET]' : 'MISSING'}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "password"
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 122,
      "content": "console.error('‚ùå Secrets Manager access failed:', error.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 132,
      "content": "console.log('1. Verify the secret exists in the specified region');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 132,
      "content": "console.log('1. Verify the secret exists in the specified region');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 133,
      "content": "console.log('2. Check IAM permissions for SecretsManager:GetSecretValue');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 133,
      "content": "console.log('2. Check IAM permissions for SecretsManager:GetSecretValue');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 134,
      "content": "console.log('3. Ensure the secret ARN is correctly formatted');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 134,
      "content": "console.log('3. Ensure the secret ARN is correctly formatted');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 135,
      "content": "console.log('4. Verify the AWS credentials have access to this secret');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 135,
      "content": "console.log('4. Verify the AWS credentials have access to this secret');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 143,
      "content": "console.log('\\n‚úÖ Secrets Manager diagnostic complete');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-secrets-manager.js",
      "line": 143,
      "content": "console.log('\\n‚úÖ Secrets Manager diagnostic complete');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/debug-user-auth.js",
      "line": 14,
      "content": "console.log('üîç DEBUG: User Authentication and API Key Analysis');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/debug-user-auth.js",
      "line": 23,
      "content": "console.log('   Username:', session.user?.username);",
      "severity": "HIGH",
      "type": "DATABASE_USERNAME",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-user-auth.js",
      "line": 24,
      "content": "console.log('   Email:', session.user?.email);",
      "severity": "MEDIUM",
      "type": "EMAIL",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-user-auth.js",
      "line": 26,
      "content": "console.log('   Access token format:', session.tokens?.accessToken?.substring(0, 30) + '...');",
      "severity": "HIGH",
      "type": "TOKEN",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/debug-user-auth.js",
      "line": 26,
      "content": "console.log('   Access token format:', session.tokens?.accessToken?.substring(0, 30) + '...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/debug-user-auth.js",
      "line": 32,
      "content": "console.log('\\\\nüîë All Auth-Related LocalStorage Items:');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/debug-user-auth.js",
      "line": 39,
      "content": "console.log('   ' + key + ':', typeof parsed === 'object' ? 'Object with keys: ' + Object.keys(parsed).join(', ') : parsed);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/debug-user-auth.js",
      "line": 41,
      "content": "console.log('   ' + key + ':', value.substring(0, 50) + (value.length > 50 ? '...' : ''));",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/debug-user-auth.js",
      "line": 47,
      "content": "console.log('\\\\nüîç Testing Backend Authentication...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/debug-user-auth.js",
      "line": 56,
      "content": "console.log('\\\\nüìä Backend API Keys Response:');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/debug-user-auth.js",
      "line": 58,
      "content": "console.log('   Total API keys in DB:', data.totalInDatabase || 'unknown');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/debug-user-auth.js",
      "line": 59,
      "content": "console.log('   API keys for this user:', data.apiKeys?.length || 0);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/debug-user-auth.js",
      "line": 61,
      "content": "console.log('   API Key Details:');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/debug-user-auth.js",
      "line": 63,
      "content": "console.log('     ' + (index + 1) + '. Provider:', key.provider, 'ID:', key.id, 'Sandbox:', key.isSandbox, 'Active:', key.isActive);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/debug-user-auth.js",
      "line": 76,
      "content": "console.log('\\\\nüíº Testing Portfolio Import Authentication...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/debug-user-auth.js",
      "line": 96,
      "content": "console.log('2. Look for API keys in the database for the correct user ID');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/debug-user-auth.js",
      "line": 97,
      "content": "console.log('3. If user IDs mismatch, you may need to re-save your API key');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/debug-user-auth.js",
      "line": 104,
      "content": "console.log('To debug the \"API key not found\" issue:');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/debug-user-auth.js",
      "line": 120,
      "content": "console.log('- API key was saved with old session, now using new session');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/debug-user-auth.js",
      "line": 121,
      "content": "console.log('- Switched between development auth and Cognito auth');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/debug-user-auth.js",
      "line": 122,
      "content": "console.log('- API key was saved but for different provider/user combination');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/debug-user-auth.js",
      "line": 125,
      "content": "console.log('- Delete API key in Settings and re-add it');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/debug-user-auth.js",
      "line": 127,
      "content": "console.log('- Check that you\\\\'re using consistent authentication method');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/extract-cognito-config.js",
      "line": 156,
      "content": "console.error('   2. Check that your AWS credentials have CloudFormation and Cognito permissions');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/fix-cognito-authentication.js",
      "line": 24,
      "content": "console.log('üîß FIXING COGNITO AUTHENTICATION INFRASTRUCTURE');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/fix-cognito-authentication.js",
      "line": 214,
      "content": "console.log('üîç STEP 5: Verifying authentication configuration...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/fix-cognito-authentication.js",
      "line": 229,
      "content": "console.log(`‚ö†Ô∏è  Found placeholder values in: ${authPath}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/fix-cognito-authentication.js",
      "line": 232,
      "content": "console.log(`‚úÖ Auth file looks good: ${authPath}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/fix-cognito-authentication.js",
      "line": 238,
      "content": "console.log('‚úÖ Authentication middleware configuration verified');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/fix-cognito-authentication.js",
      "line": 241,
      "content": "console.log('‚ö†Ô∏è  Some authentication files may need updates');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/fix-cognito-authentication.js",
      "line": 260,
      "content": "console.log('üéâ COGNITO AUTHENTICATION FIX COMPLETED');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/fix-cognito-authentication.js",
      "line": 269,
      "content": "console.log(`   Auth Flow Configuration: ${results.authFlow ? '‚úÖ' : '‚ùå'}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/fix-cognito-authentication.js",
      "line": 292,
      "content": "console.log('   3. üß™ Test authentication flow in the application');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/fix-cognito-authentication.js",
      "line": 293,
      "content": "console.log('   4. üîç Monitor authentication logs for any issues');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/fix-cognito-authentication.js",
      "line": 298,
      "content": "console.log('   Cognito authentication infrastructure is now properly configured.');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/fix-cognito-authentication.js",
      "line": 312,
      "content": "console.error('‚ùå COGNITO AUTHENTICATION FIX FAILED');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/fix-cognito-authentication.js",
      "line": 318,
      "content": "console.error('   1. Verify AWS credentials have CloudFormation and Cognito permissions');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/fix-cognito-authentication.js",
      "line": 338,
      "content": "console.log('‚úÖ Cognito authentication fix completed successfully!');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/fix-cognito-authentication.js",
      "line": 341,
      "content": "console.error('‚ùå Cognito authentication fix failed');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/fix-database-connection-crisis.js",
      "line": 40,
      "content": "console.log('   ‚ùå JSON parsing errors in AWS Secrets Manager responses');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/fix-database-connection-crisis.js",
      "line": 40,
      "content": "console.log('   ‚ùå JSON parsing errors in AWS Secrets Manager responses');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/fix-database-connection-crisis.js",
      "line": 294,
      "content": "console.log('üîß Using AWS Secrets Manager fallback');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/fix-database-connection-crisis.js",
      "line": 294,
      "content": "console.log('üîß Using AWS Secrets Manager fallback');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/fix-database-connection-crisis.js",
      "line": 311,
      "content": "console.error('‚ùå JSON parsing error for secret:', parseError);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/fix-database-connection-crisis.js",
      "line": 312,
      "content": "console.error('Secret string length:', response.SecretString?.length);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/fix-database-connection-crisis.js",
      "line": 313,
      "content": "console.error('Secret string preview:', response.SecretString?.substring(0, 100));",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/fix-database-connection-crisis.js",
      "line": 326,
      "content": "console.error('‚ùå Failed to get secret from AWS Secrets Manager:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/fix-db-connection-simple.js",
      "line": 248,
      "content": "console.log('üîß Using AWS Secrets Manager fallback');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/fix-db-connection-simple.js",
      "line": 248,
      "content": "console.log('üîß Using AWS Secrets Manager fallback');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/fix-db-connection-simple.js",
      "line": 265,
      "content": "console.error('‚ùå JSON parsing error for secret:', parseError);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/fix-db-connection-simple.js",
      "line": 266,
      "content": "console.error('Secret string length:', response.SecretString?.length);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/fix-db-connection-simple.js",
      "line": 267,
      "content": "console.error('Secret string preview:', response.SecretString?.substring(0, 100));",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/fix-db-connection-simple.js",
      "line": 280,
      "content": "console.error('‚ùå Failed to get secret from AWS Secrets Manager:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/manual-cognito-fix.js",
      "line": 254,
      "content": "console.log('   4. Test authentication flow in the application');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/monitor-deployment-workflow.js",
      "line": 236,
      "content": "console.log(`   ${value ? '‚úÖ' : '‚ùå'} ${key}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/test-enhanced-api-key-validation.js",
      "line": 1,
      "content": "#!/usr/bin/env node\\n\\n/**\\n * Enhanced API Key Validation Test Suite\\n * Tests the comprehensive validation and connection testing features\\n */\\n\\nconst path = require('path');\\n\\n// Import the enhanced API key service\\nconst apiKeyService = require('./webapp/lambda/utils/apiKeyService');\\nconst apiKeyTesting = require('./webapp/lambda/utils/apiKeyTesting');\\n\\n/**\\n * Test data for validation scenarios\\n */\\nconst testCases = {\\n  alpaca: {\\n    valid: {\\n      keyId: 'PKABCDEFGHIJKLMNOPQR',\\n      secretKey: 'abcdefghijklmnopqrstuvwxyz1234567890+/=='\\n    },\\n    invalid: {\\n      keyIdTooShort: 'PK12345',\\n      keyIdWrongPrefix: 'ABCDEFGHIJKLMNOPQRST',\\n      keyIdLowercase: 'pkabcdefghijklmnopqr',\\n      secretKeyTooShort: 'short',\\n      secretKeyInvalidChars: 'abcd@#$%invalid_chars_here_1234567890'\\n    },\\n    placeholder: {\\n      keyId: 'test',\\n      secretKey: 'password'\\n    }\\n  },\\n  td_ameritrade: {\\n    valid: {\\n      keyId: 'ABCDEFGHIJKLMNOPQRST@AMER.OAUTHAP',\\n      keyIdShort: 'CONSUMER_KEY_1234567890'\\n    },\\n    invalid: {\\n      keyIdTooShort: 'SHORT',\\n      keyIdTooLong: 'THIS_IS_A_VERY_LONG_CONSUMER_KEY_THAT_EXCEEDS_FIFTY_CHARACTERS_LIMIT',\\n      keyIdInvalidChars: 'INVALID#CHARS!HERE'\\n    }\\n  },\\n  polygon: {\\n    valid: {\\n      keyId: 'abcdefghijklmnopqrstuvwxyz123456'\\n    },\\n    invalid: {\\n      keyIdTooShort: 'short_key',\\n      keyIdTooLong: 'this_key_is_way_too_long_for_polygon',\\n      keyIdInvalidChars: 'invalid@chars#here!'\\n    }\\n  },\\n  finnhub: {\\n    valid: {\\n      keyId: 'abcdefghijklmnopqrst'\\n    },\\n    invalid: {\\n      keyIdTooShort: 'short',\\n      keyIdTooLong: 'this_key_is_too_long_for_finnhub',\\n      keyIdUppercase: 'ABCDEFGHIJKLMNOPQRST',\\n      keyIdInvalidChars: 'invalid_chars@here!'\\n    }\\n  }\\n};\\n\\n/**\\n * Run validation tests for a specific provider\\n */\\nfunction testProviderValidation(provider, cases) {\\n  console.log(`\\\\nüß™ Testing ${provider.toUpperCase()} validation:`);\\n  console.log('‚îÄ'.repeat(50));\\n  \\n  let passed = 0;\\n  let failed = 0;\\n  \\n  // Test valid cases\\n  if (cases.valid) {\\n    Object.entries(cases.valid).forEach(([testName, value]) => {\\n      try {\\n        const result = apiKeyService.validateApiKeyFormat(\\n          provider, \\n          value, \\n          testName === 'secretKey' ? null : cases.valid.secretKey\\n        );\\n        \\n        if (result.valid) {\\n          console.log(`   ‚úÖ Valid ${testName}: PASS`);\\n          passed++;\\n        } else {\\n          console.log(`   ‚ùå Valid ${testName}: FAIL - ${result.error}`);\\n          failed++;\\n        }\\n      } catch (error) {\\n        console.log(`   üí• Valid ${testName}: ERROR - ${error.message}`);\\n        failed++;\\n      }\\n    });\\n  }\\n  \\n  // Test invalid cases\\n  if (cases.invalid) {\\n    Object.entries(cases.invalid).forEach(([testName, value]) => {\\n      try {\\n        const result = apiKeyService.validateApiKeyFormat(\\n          provider, \\n          value, \\n          testName.includes('secret') ? null : cases.valid?.secretKey\\n        );\\n        \\n        if (!result.valid) {\\n          console.log(`   ‚úÖ Invalid ${testName}: PASS (correctly rejected)`);\\n          passed++;\\n        } else {\\n          console.log(`   ‚ùå Invalid ${testName}: FAIL (should be rejected)`);\\n          failed++;\\n        }\\n      } catch (error) {\\n        console.log(`   üí• Invalid ${testName}: ERROR - ${error.message}`);\\n        failed++;\\n      }\\n    });\\n  }\\n  \\n  // Test placeholder cases\\n  if (cases.placeholder) {\\n    Object.entries(cases.placeholder).forEach(([testName, value]) => {\\n      try {\\n        const result = apiKeyService.validateApiKeyFormat(provider, value);\\n        \\n        if (!result.valid && result.errorCode === 'PLACEHOLDER_VALUE') {\\n          console.log(`   ‚úÖ Placeholder ${testName}: PASS (correctly detected)`);\\n          passed++;\\n        } else {\\n          console.log(`   ‚ùå Placeholder ${testName}: FAIL (should detect placeholder)`);\\n          failed++;\\n        }\\n      } catch (error) {\\n        console.log(`   üí• Placeholder ${testName}: ERROR - ${error.message}`);\\n        failed++;\\n      }\\n    });\\n  }\\n  \\n  const total = passed + failed;\\n  const successRate = total > 0 ? ((passed / total) * 100).toFixed(1) : 0;\\n  console.log(`\\\\n   üìä ${provider.toUpperCase()} Results: ${passed}/${total} passed (${successRate}%)`);\\n  \\n  return { passed, failed, total };\\n}\\n\\n/**\\n * Test connection testing functionality\\n */\\nasync function testConnectionTesting() {\\n  console.log(`\\\\nüåê Testing API Connection Testing:`);\\n  console.log('‚îÄ'.repeat(50));\\n  \\n  const providers = ['alpaca', 'td_ameritrade', 'polygon', 'finnhub', 'unsupported'];\\n  \\n  for (const provider of providers) {\\n    try {\\n      console.log(`\\\\n   üîç Testing ${provider} connection support:`);\\n      \\n      const isSupported = apiKeyTesting.isProviderSupported(provider);\\n      console.log(`     Supported: ${isSupported ? '‚úÖ Yes' : '‚ùå No'}`);\\n      \\n      if (isSupported) {\\n        // Test with dummy credentials (should fail gracefully)\\n        const testKey = provider === 'alpaca' ? 'PKTEST12345678901234' : 'TESTKEY1234567890';\\n        const testSecret = provider === 'alpaca' ? 'testsecret1234567890123456789012345678' : null;\\n        \\n        console.log(`     Testing connection with dummy credentials...`);\\n        const result = await apiKeyTesting.testConnection(provider, testKey, testSecret);\\n        \\n        console.log(`     Result: ${result.success ? '‚úÖ Success' : '‚ùå Failed'} (${result.testTime}ms)`);\\n        if (!result.success) {\\n          console.log(`     Error: ${result.error}`);\\n          console.log(`     Error Code: ${result.errorCode}`);\\n          if (result.suggestions && result.suggestions.length > 0) {\\n            console.log(`     Suggestions: ${result.suggestions.slice(0, 2).join(', ')}`);\\n          }\\n        }\\n      }\\n    } catch (error) {\\n      console.log(`     üí• Error testing ${provider}: ${error.message}`);\\n    }\\n    \\n    // Small delay to avoid overwhelming APIs\\n    await new Promise(resolve => setTimeout(resolve, 100));\\n  }\\n}\\n\\n/**\\n * Test error code and suggestion system\\n */\\nfunction testErrorHandling() {\\n  console.log(`\\\\nüö® Testing Error Handling System:`);\\n  console.log('‚îÄ'.repeat(50));\\n  \\n  const errorTestCases = [\\n    { provider: '', apiKey: '', expected: 'MISSING_REQUIRED_FIELDS' },\\n    { provider: 'alpaca', apiKey: 'test', expected: 'PLACEHOLDER_VALUE' },\\n    { provider: 'alpaca', apiKey: 'WRONGFORMAT', expected: 'INVALID_ALPACA_KEY_FORMAT' },\\n    { provider: 'td_ameritrade', apiKey: 'X', expected: 'INVALID_TD_KEY_LENGTH' },\\n    { provider: 'unknown', apiKey: 'X', expected: 'INVALID_GENERIC_KEY_LENGTH' }\\n  ];\\n  \\n  let passed = 0;\\n  let failed = 0;\\n  \\n  errorTestCases.forEach(({ provider, apiKey, expected }, index) => {\\n    try {\\n      const result = apiKeyService.validateApiKeyFormat(provider, apiKey);\\n      \\n      if (!result.valid && result.errorCode === expected) {\\n        console.log(`   ‚úÖ Error Test ${index + 1}: PASS (${expected})`);\\n        passed++;\\n      } else {\\n        console.log(`   ‚ùå Error Test ${index + 1}: FAIL - Expected ${expected}, got ${result.errorCode}`);\\n        failed++;\\n      }\\n      \\n      // Check if suggestions are provided\\n      if (result.suggestions && result.suggestions.length > 0) {\\n        console.log(`     üí° Has suggestions: Yes (${result.suggestions.length})`);\\n      }\\n    } catch (error) {\\n      console.log(`   üí• Error Test ${index + 1}: ERROR - ${error.message}`);\\n      failed++;\\n    }\\n  });\\n  \\n  const total = passed + failed;\\n  const successRate = total > 0 ? ((passed / total) * 100).toFixed(1) : 0;\\n  console.log(`\\\\n   üìä Error Handling Results: ${passed}/${total} passed (${successRate}%)`);\\n  \\n  return { passed, failed, total };\\n}\\n\\n/**\\n * Main test execution\\n */\\nasync function runTestSuite() {\\n  console.log('üöÄ Enhanced API Key Validation Test Suite');\\n  console.log('üéØ Testing format validation, error handling, and connection testing');\\n  console.log('=' .repeat(80));\\n  \\n  let totalPassed = 0;\\n  let totalFailed = 0;\\n  let totalTests = 0;\\n  \\n  try {\\n    // Test validation for each provider\\n    for (const [provider, cases] of Object.entries(testCases)) {\\n      const result = testProviderValidation(provider, cases);\\n      totalPassed += result.passed;\\n      totalFailed += result.failed;\\n      totalTests += result.total;\\n    }\\n    \\n    // Test error handling system\\n    const errorResult = testErrorHandling();\\n    totalPassed += errorResult.passed;\\n    totalFailed += errorResult.failed;\\n    totalTests += errorResult.total;\\n    \\n    // Test connection testing functionality\\n    await testConnectionTesting();\\n    \\n    // Generate summary report\\n    console.log('\\\\n' + '=' .repeat(80));\\n    console.log('üìã TEST SUITE SUMMARY REPORT');\\n    console.log('=' .repeat(80));\\n    \\n    const overallSuccessRate = totalTests > 0 ? ((totalPassed / totalTests) * 100).toFixed(1) : 0;\\n    \\n    console.log(`\\\\nüìä Overall Results:`);\\n    console.log(`   Total Tests: ${totalTests}`);\\n    console.log(`   ‚úÖ Passed: ${totalPassed} (${overallSuccessRate}%)`);\\n    console.log(`   ‚ùå Failed: ${totalFailed}`);\\n    \\n    console.log(`\\\\nüîß Enhanced Features Tested:`);\\n    console.log(`   ‚úÖ Format validation with specific provider rules`);\\n    console.log(`   ‚úÖ Placeholder value detection`);\\n    console.log(`   ‚úÖ Detailed error codes and messages`);\\n    console.log(`   ‚úÖ Contextual suggestions for each error type`);\\n    console.log(`   ‚úÖ Real-time connection testing support`);\\n    console.log(`   ‚úÖ Network error handling and timeouts`);\\n    \\n    console.log(`\\\\nüéØ Provider Support:`);\\n    const supportedProviders = apiKeyTesting.getSupportedProviders();\\n    supportedProviders.forEach(provider => {\\n      console.log(`   ‚úÖ ${provider.toUpperCase()}: Format validation + Connection testing`);\\n    });\\n    \\n    console.log('\\\\n' + '=' .repeat(80));\\n    console.log('üèÅ Enhanced API Key Validation Test Complete');\\n    \\n    if (totalFailed === 0) {\\n      console.log('üéâ All tests passed! Enhanced validation system is working correctly.');\\n      return true;\\n    } else {\\n      console.log(`‚ö†Ô∏è  ${totalFailed} tests failed. Review implementation.`);\\n      return false;\\n    }\\n    \\n  } catch (error) {\\n    console.error('üí• Test suite crashed:', error);\\n    return false;\\n  }\\n}\\n\\n// Run the test suite\\nif (require.main === module) {\\n  runTestSuite()\\n    .then(success => {\\n      process.exit(success ? 0 : 1);\\n    })\\n    .catch(error => {\\n      console.error('üí• Test execution failed:', error);\\n      process.exit(1);\\n    });\\n}\\n\\nmodule.exports = { runTestSuite, testProviderValidation, testConnectionTesting };",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/test-enhanced-api-key-validation.js",
      "line": 1,
      "content": "#!/usr/bin/env node\\n\\n/**\\n * Enhanced API Key Validation Test Suite\\n * Tests the comprehensive validation and connection testing features\\n */\\n\\nconst path = require('path');\\n\\n// Import the enhanced API key service\\nconst apiKeyService = require('./webapp/lambda/utils/apiKeyService');\\nconst apiKeyTesting = require('./webapp/lambda/utils/apiKeyTesting');\\n\\n/**\\n * Test data for validation scenarios\\n */\\nconst testCases = {\\n  alpaca: {\\n    valid: {\\n      keyId: 'PKABCDEFGHIJKLMNOPQR',\\n      secretKey: 'abcdefghijklmnopqrstuvwxyz1234567890+/=='\\n    },\\n    invalid: {\\n      keyIdTooShort: 'PK12345',\\n      keyIdWrongPrefix: 'ABCDEFGHIJKLMNOPQRST',\\n      keyIdLowercase: 'pkabcdefghijklmnopqr',\\n      secretKeyTooShort: 'short',\\n      secretKeyInvalidChars: 'abcd@#$%invalid_chars_here_1234567890'\\n    },\\n    placeholder: {\\n      keyId: 'test',\\n      secretKey: 'password'\\n    }\\n  },\\n  td_ameritrade: {\\n    valid: {\\n      keyId: 'ABCDEFGHIJKLMNOPQRST@AMER.OAUTHAP',\\n      keyIdShort: 'CONSUMER_KEY_1234567890'\\n    },\\n    invalid: {\\n      keyIdTooShort: 'SHORT',\\n      keyIdTooLong: 'THIS_IS_A_VERY_LONG_CONSUMER_KEY_THAT_EXCEEDS_FIFTY_CHARACTERS_LIMIT',\\n      keyIdInvalidChars: 'INVALID#CHARS!HERE'\\n    }\\n  },\\n  polygon: {\\n    valid: {\\n      keyId: 'abcdefghijklmnopqrstuvwxyz123456'\\n    },\\n    invalid: {\\n      keyIdTooShort: 'short_key',\\n      keyIdTooLong: 'this_key_is_way_too_long_for_polygon',\\n      keyIdInvalidChars: 'invalid@chars#here!'\\n    }\\n  },\\n  finnhub: {\\n    valid: {\\n      keyId: 'abcdefghijklmnopqrst'\\n    },\\n    invalid: {\\n      keyIdTooShort: 'short',\\n      keyIdTooLong: 'this_key_is_too_long_for_finnhub',\\n      keyIdUppercase: 'ABCDEFGHIJKLMNOPQRST',\\n      keyIdInvalidChars: 'invalid_chars@here!'\\n    }\\n  }\\n};\\n\\n/**\\n * Run validation tests for a specific provider\\n */\\nfunction testProviderValidation(provider, cases) {\\n  console.log(`\\\\nüß™ Testing ${provider.toUpperCase()} validation:`);\\n  console.log('‚îÄ'.repeat(50));\\n  \\n  let passed = 0;\\n  let failed = 0;\\n  \\n  // Test valid cases\\n  if (cases.valid) {\\n    Object.entries(cases.valid).forEach(([testName, value]) => {\\n      try {\\n        const result = apiKeyService.validateApiKeyFormat(\\n          provider, \\n          value, \\n          testName === 'secretKey' ? null : cases.valid.secretKey\\n        );\\n        \\n        if (result.valid) {\\n          console.log(`   ‚úÖ Valid ${testName}: PASS`);\\n          passed++;\\n        } else {\\n          console.log(`   ‚ùå Valid ${testName}: FAIL - ${result.error}`);\\n          failed++;\\n        }\\n      } catch (error) {\\n        console.log(`   üí• Valid ${testName}: ERROR - ${error.message}`);\\n        failed++;\\n      }\\n    });\\n  }\\n  \\n  // Test invalid cases\\n  if (cases.invalid) {\\n    Object.entries(cases.invalid).forEach(([testName, value]) => {\\n      try {\\n        const result = apiKeyService.validateApiKeyFormat(\\n          provider, \\n          value, \\n          testName.includes('secret') ? null : cases.valid?.secretKey\\n        );\\n        \\n        if (!result.valid) {\\n          console.log(`   ‚úÖ Invalid ${testName}: PASS (correctly rejected)`);\\n          passed++;\\n        } else {\\n          console.log(`   ‚ùå Invalid ${testName}: FAIL (should be rejected)`);\\n          failed++;\\n        }\\n      } catch (error) {\\n        console.log(`   üí• Invalid ${testName}: ERROR - ${error.message}`);\\n        failed++;\\n      }\\n    });\\n  }\\n  \\n  // Test placeholder cases\\n  if (cases.placeholder) {\\n    Object.entries(cases.placeholder).forEach(([testName, value]) => {\\n      try {\\n        const result = apiKeyService.validateApiKeyFormat(provider, value);\\n        \\n        if (!result.valid && result.errorCode === 'PLACEHOLDER_VALUE') {\\n          console.log(`   ‚úÖ Placeholder ${testName}: PASS (correctly detected)`);\\n          passed++;\\n        } else {\\n          console.log(`   ‚ùå Placeholder ${testName}: FAIL (should detect placeholder)`);\\n          failed++;\\n        }\\n      } catch (error) {\\n        console.log(`   üí• Placeholder ${testName}: ERROR - ${error.message}`);\\n        failed++;\\n      }\\n    });\\n  }\\n  \\n  const total = passed + failed;\\n  const successRate = total > 0 ? ((passed / total) * 100).toFixed(1) : 0;\\n  console.log(`\\\\n   üìä ${provider.toUpperCase()} Results: ${passed}/${total} passed (${successRate}%)`);\\n  \\n  return { passed, failed, total };\\n}\\n\\n/**\\n * Test connection testing functionality\\n */\\nasync function testConnectionTesting() {\\n  console.log(`\\\\nüåê Testing API Connection Testing:`);\\n  console.log('‚îÄ'.repeat(50));\\n  \\n  const providers = ['alpaca', 'td_ameritrade', 'polygon', 'finnhub', 'unsupported'];\\n  \\n  for (const provider of providers) {\\n    try {\\n      console.log(`\\\\n   üîç Testing ${provider} connection support:`);\\n      \\n      const isSupported = apiKeyTesting.isProviderSupported(provider);\\n      console.log(`     Supported: ${isSupported ? '‚úÖ Yes' : '‚ùå No'}`);\\n      \\n      if (isSupported) {\\n        // Test with dummy credentials (should fail gracefully)\\n        const testKey = provider === 'alpaca' ? 'PKTEST12345678901234' : 'TESTKEY1234567890';\\n        const testSecret = provider === 'alpaca' ? 'testsecret1234567890123456789012345678' : null;\\n        \\n        console.log(`     Testing connection with dummy credentials...`);\\n        const result = await apiKeyTesting.testConnection(provider, testKey, testSecret);\\n        \\n        console.log(`     Result: ${result.success ? '‚úÖ Success' : '‚ùå Failed'} (${result.testTime}ms)`);\\n        if (!result.success) {\\n          console.log(`     Error: ${result.error}`);\\n          console.log(`     Error Code: ${result.errorCode}`);\\n          if (result.suggestions && result.suggestions.length > 0) {\\n            console.log(`     Suggestions: ${result.suggestions.slice(0, 2).join(', ')}`);\\n          }\\n        }\\n      }\\n    } catch (error) {\\n      console.log(`     üí• Error testing ${provider}: ${error.message}`);\\n    }\\n    \\n    // Small delay to avoid overwhelming APIs\\n    await new Promise(resolve => setTimeout(resolve, 100));\\n  }\\n}\\n\\n/**\\n * Test error code and suggestion system\\n */\\nfunction testErrorHandling() {\\n  console.log(`\\\\nüö® Testing Error Handling System:`);\\n  console.log('‚îÄ'.repeat(50));\\n  \\n  const errorTestCases = [\\n    { provider: '', apiKey: '', expected: 'MISSING_REQUIRED_FIELDS' },\\n    { provider: 'alpaca', apiKey: 'test', expected: 'PLACEHOLDER_VALUE' },\\n    { provider: 'alpaca', apiKey: 'WRONGFORMAT', expected: 'INVALID_ALPACA_KEY_FORMAT' },\\n    { provider: 'td_ameritrade', apiKey: 'X', expected: 'INVALID_TD_KEY_LENGTH' },\\n    { provider: 'unknown', apiKey: 'X', expected: 'INVALID_GENERIC_KEY_LENGTH' }\\n  ];\\n  \\n  let passed = 0;\\n  let failed = 0;\\n  \\n  errorTestCases.forEach(({ provider, apiKey, expected }, index) => {\\n    try {\\n      const result = apiKeyService.validateApiKeyFormat(provider, apiKey);\\n      \\n      if (!result.valid && result.errorCode === expected) {\\n        console.log(`   ‚úÖ Error Test ${index + 1}: PASS (${expected})`);\\n        passed++;\\n      } else {\\n        console.log(`   ‚ùå Error Test ${index + 1}: FAIL - Expected ${expected}, got ${result.errorCode}`);\\n        failed++;\\n      }\\n      \\n      // Check if suggestions are provided\\n      if (result.suggestions && result.suggestions.length > 0) {\\n        console.log(`     üí° Has suggestions: Yes (${result.suggestions.length})`);\\n      }\\n    } catch (error) {\\n      console.log(`   üí• Error Test ${index + 1}: ERROR - ${error.message}`);\\n      failed++;\\n    }\\n  });\\n  \\n  const total = passed + failed;\\n  const successRate = total > 0 ? ((passed / total) * 100).toFixed(1) : 0;\\n  console.log(`\\\\n   üìä Error Handling Results: ${passed}/${total} passed (${successRate}%)`);\\n  \\n  return { passed, failed, total };\\n}\\n\\n/**\\n * Main test execution\\n */\\nasync function runTestSuite() {\\n  console.log('üöÄ Enhanced API Key Validation Test Suite');\\n  console.log('üéØ Testing format validation, error handling, and connection testing');\\n  console.log('=' .repeat(80));\\n  \\n  let totalPassed = 0;\\n  let totalFailed = 0;\\n  let totalTests = 0;\\n  \\n  try {\\n    // Test validation for each provider\\n    for (const [provider, cases] of Object.entries(testCases)) {\\n      const result = testProviderValidation(provider, cases);\\n      totalPassed += result.passed;\\n      totalFailed += result.failed;\\n      totalTests += result.total;\\n    }\\n    \\n    // Test error handling system\\n    const errorResult = testErrorHandling();\\n    totalPassed += errorResult.passed;\\n    totalFailed += errorResult.failed;\\n    totalTests += errorResult.total;\\n    \\n    // Test connection testing functionality\\n    await testConnectionTesting();\\n    \\n    // Generate summary report\\n    console.log('\\\\n' + '=' .repeat(80));\\n    console.log('üìã TEST SUITE SUMMARY REPORT');\\n    console.log('=' .repeat(80));\\n    \\n    const overallSuccessRate = totalTests > 0 ? ((totalPassed / totalTests) * 100).toFixed(1) : 0;\\n    \\n    console.log(`\\\\nüìä Overall Results:`);\\n    console.log(`   Total Tests: ${totalTests}`);\\n    console.log(`   ‚úÖ Passed: ${totalPassed} (${overallSuccessRate}%)`);\\n    console.log(`   ‚ùå Failed: ${totalFailed}`);\\n    \\n    console.log(`\\\\nüîß Enhanced Features Tested:`);\\n    console.log(`   ‚úÖ Format validation with specific provider rules`);\\n    console.log(`   ‚úÖ Placeholder value detection`);\\n    console.log(`   ‚úÖ Detailed error codes and messages`);\\n    console.log(`   ‚úÖ Contextual suggestions for each error type`);\\n    console.log(`   ‚úÖ Real-time connection testing support`);\\n    console.log(`   ‚úÖ Network error handling and timeouts`);\\n    \\n    console.log(`\\\\nüéØ Provider Support:`);\\n    const supportedProviders = apiKeyTesting.getSupportedProviders();\\n    supportedProviders.forEach(provider => {\\n      console.log(`   ‚úÖ ${provider.toUpperCase()}: Format validation + Connection testing`);\\n    });\\n    \\n    console.log('\\\\n' + '=' .repeat(80));\\n    console.log('üèÅ Enhanced API Key Validation Test Complete');\\n    \\n    if (totalFailed === 0) {\\n      console.log('üéâ All tests passed! Enhanced validation system is working correctly.');\\n      return true;\\n    } else {\\n      console.log(`‚ö†Ô∏è  ${totalFailed} tests failed. Review implementation.`);\\n      return false;\\n    }\\n    \\n  } catch (error) {\\n    console.error('üí• Test suite crashed:', error);\\n    return false;\\n  }\\n}\\n\\n// Run the test suite\\nif (require.main === module) {\\n  runTestSuite()\\n    .then(success => {\\n      process.exit(success ? 0 : 1);\\n    })\\n    .catch(error => {\\n      console.error('üí• Test execution failed:', error);\\n      process.exit(1);\\n    });\\n}\\n\\nmodule.exports = { runTestSuite, testProviderValidation, testConnectionTesting };",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "password"
    },
    {
      "file": "/home/stocks/algo/test_api_key_fix.js",
      "line": 16,
      "content": "console.log('üß™ Testing API Key Workflow Fix');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/test_api_key_fix.js",
      "line": 19,
      "content": "console.log(`Key ID: ${testKeyId} (${typeof testKeyId})`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/test_api_key_fix.js",
      "line": 45,
      "content": "console.log('  - This allows one API key per user per provider');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/test_api_key_fix.js",
      "line": 46,
      "content": "console.log('  - User can have multiple providers, but only one key per provider');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/test_api_key_fix.js",
      "line": 67,
      "content": "console.log('- User 54884408-1031-70cf-8c81-b5f09860e6fc can store API keys');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/test_api_key_fix.js",
      "line": 68,
      "content": "console.log('- Portfolio import can find keyId=3 for this user');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/test_api_key_workflow.js",
      "line": 104,
      "content": "console.log('‚úÖ Decryption successful:', { decrypted: decrypted === testApiKey });",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/test_api_key_workflow.js",
      "line": 110,
      "content": "console.error('‚ùå Decryption mismatch:', { original: testApiKey, decrypted });",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/test_api_key_workflow.js",
      "line": 141,
      "content": "console.log('\\nüîí Testing Authentication Flow...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/test_api_key_workflow.js",
      "line": 167,
      "content": "console.log('\\nüîÑ Testing API Key Workflow Simulation...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/test_api_key_workflow.js",
      "line": 171,
      "content": "console.log('1. üìù Frontend: User adds API key in Settings page');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/test_api_key_workflow.js",
      "line": 179,
      "content": "console.log('   Form data:', { ...formData, apiKey: '****', apiSecret: '****' });",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/test_api_key_workflow.js",
      "line": 179,
      "content": "console.log('   Form data:', { ...formData, apiKey: '****', apiSecret: '****' });",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/test_api_key_workflow.js",
      "line": 182,
      "content": "console.log('2. üîê Backend: Encrypting and storing API key');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/test_api_key_workflow.js",
      "line": 187,
      "content": "console.log('3. üìä Portfolio: Retrieving API credentials for broker integration');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/test_api_key_workflow.js",
      "line": 189,
      "content": "console.log('   Retrieved credentials:', {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/test_api_key_workflow.js",
      "line": 196,
      "content": "console.log('4. üåê Frontend Service: Getting decrypted credentials');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/test_api_key_workflow.js",
      "line": 197,
      "content": "console.log('   API call: GET /api/settings/api-keys/alpaca/credentials');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/test_api_key_workflow.js",
      "line": 198,
      "content": "console.log('   Expected response: { success: true, credentials: {...} }');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/test_api_key_workflow.js",
      "line": 211,
      "content": "console.log('üß™ API Key Workflow Integration Test');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/test_api_key_workflow.js",
      "line": 248,
      "content": "console.log('üéâ All tests passed! API key workflow should be working correctly.');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/test_api_key_workflow.js",
      "line": 250,
      "content": "console.log('   1. Run database migration to create user_api_keys table');",
      "severity": "CRITICAL",
      "type": "API_KEY",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/test_api_key_workflow.js",
      "line": 250,
      "content": "console.log('   1. Run database migration to create user_api_keys table');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/test_api_key_workflow.js",
      "line": 252,
      "content": "console.log('   3. Test with real user authentication and API keys');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/tests/test-api-key-endpoints.js",
      "line": 54,
      "content": "console.log('üîë Testing API Key Management Endpoints...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/tests/test-api-key-endpoints.js",
      "line": 163,
      "content": "console.log('\\nüìä API KEY ENDPOINTS TEST RESULTS');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/tests/test-api-key-endpoints.js",
      "line": 169,
      "content": "console.log('\\nüîç KEY ENDPOINT STATUS:');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/tests/test-api-key-endpoints.js",
      "line": 179,
      "content": "console.log(`${status} ${auth} ${r.endpoint} - ${r.actual}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/tests/test-portfolio-auth.js",
      "line": 50,
      "content": "console.log('üîê Testing Portfolio Authentication Requirements...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/tests/test-portfolio-auth.js",
      "line": 89,
      "content": "console.log(`‚úÖ ${endpoint} - Properly requires authentication (401)`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/tests/test-portfolio-auth.js",
      "line": 91,
      "content": "console.log(`‚ùå ${endpoint} - Security issue! Returns ${response.statusCode} without auth`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/tests/test-portfolio-auth.js",
      "line": 111,
      "content": "console.log('\\nüìä PORTFOLIO AUTHENTICATION TEST RESULTS');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/tests/test-portfolio-auth.js",
      "line": 117,
      "content": "console.log('üéâ All portfolio endpoints properly require authentication!');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/tests/test-portfolio-auth.js",
      "line": 120,
      "content": "console.log('‚ö†Ô∏è  SECURITY ISSUES FOUND - Some endpoints are accessible without authentication');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/tests/test-portfolio-import-workflow.js",
      "line": 101,
      "content": "console.log('\\n2. Testing API Key Endpoints Authentication...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/tests/test-portfolio-import-workflow.js",
      "line": 104,
      "content": "console.log('üìä API Keys Status:', apiKeysResponse.status);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/tests/test-portfolio-import-workflow.js",
      "line": 106,
      "content": "console.log('‚úÖ Properly rejecting unauthenticated requests');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/tests/test-portfolio-import-workflow.js",
      "line": 108,
      "content": "console.log('‚ö†Ô∏è Unexpected response for unauthenticated request');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/tests/test-portfolio-import-workflow.js",
      "line": 111,
      "content": "console.error('‚ùå API Keys test failed:', error.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/tests/test-portfolio-import-workflow.js",
      "line": 115,
      "content": "console.log('\\n3. Testing Database API Keys Table...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/tests/test-portfolio-import-workflow.js",
      "line": 121,
      "content": "console.log('üìä Total API keys in system:', debugResponse.data.total_records);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/tests/test-portfolio-import-workflow.js",
      "line": 136,
      "content": "console.log('‚úÖ Portfolio import properly requires authentication');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/tests/test-portfolio-import-workflow.js",
      "line": 138,
      "content": "console.log('‚ö†Ô∏è Portfolio import authentication issue');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/tests/test-portfolio-import-workflow.js",
      "line": 149,
      "content": "console.log('‚úÖ API key encryption/decryption system verified');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/tests/test-portfolio-import-workflow.js",
      "line": 150,
      "content": "console.log('‚úÖ userApiKeyHelper.js functionality verified');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/tests/test-portfolio-import-workflow.js",
      "line": 161,
      "content": "console.log('‚úÖ Trade history properly requires authentication');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/tests/test-portfolio-import-workflow.js",
      "line": 163,
      "content": "console.log('‚ö†Ô∏è Trade history authentication issue');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/tests/test-portfolio-import-workflow.js",
      "line": 175,
      "content": "console.log('‚úÖ Portfolio service properly requires authentication');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/tests/test-portfolio-import-workflow.js",
      "line": 202,
      "content": "console.log('‚úÖ Authentication properly enforced across all endpoints');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/tests/test-portfolio-import-workflow.js",
      "line": 203,
      "content": "console.log('‚úÖ Database API keys table structure verified');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/tests/test-portfolio-import-workflow.js",
      "line": 208,
      "content": "console.log('1. üîë Add real Alpaca paper trading API keys via Settings page');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/tests/test-portfolio-import-workflow.js",
      "line": 209,
      "content": "console.log('2. üîê Authenticate with Cognito to get JWT token');",
      "severity": "HIGH",
      "type": "TOKEN",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/tests/test-portfolio-import-workflow.js",
      "line": 209,
      "content": "console.log('2. üîê Authenticate with Cognito to get JWT token');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/tests/test-portfolio-import-workflow.js",
      "line": 210,
      "content": "console.log('3. üìä Test API key addition: POST /api/settings/api-keys');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/tests/test-portfolio-import-workflow.js",
      "line": 213,
      "content": "console.log('6. üîÑ Test WebSocket real-time data with stored API keys');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/tests/test-portfolio-import-workflow.js",
      "line": 217,
      "content": "console.log('‚úÖ All sensitive endpoints properly require authentication');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/tests/test-portfolio-import-workflow.js",
      "line": 218,
      "content": "console.log('‚úÖ API key storage system ready for production');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/tests/test-portfolio-import-workflow.js",
      "line": 221,
      "content": "console.log('\\nüìã Authentication Required for Full Test:');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/tests/test-portfolio-import-workflow.js",
      "line": 224,
      "content": "console.log('- Valid Cognito user credentials');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/tests/test-portfolio-import-workflow.js",
      "line": 225,
      "content": "console.log('- Alpaca paper trading API keys');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/tests/test-portfolio-import-workflow.js",
      "line": 226,
      "content": "console.log('- Replace TEST_CONFIG values with real credentials');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/update-frontend-cognito.js",
      "line": 177,
      "content": "console.log('   4. Test authentication flow in the application');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/update-frontend-cognito.js",
      "line": 193,
      "content": "console.error('   3. Verify AWS credentials have CloudFormation and Cognito permissions');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/validate-environment.js",
      "line": 210,
      "content": "console.log(`   ${output.OutputKey}: ${output.OutputValue}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/index.js",
      "line": 385,
      "content": "console.log('üîë POST API Keys endpoint hit');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/index.js",
      "line": 421,
      "content": "console.error('‚ùå POST API Keys error:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/index.js",
      "line": 432,
      "content": "console.log('üîë DELETE API Key endpoint hit for:', req.params.provider);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/index.js",
      "line": 458,
      "content": "console.error('‚ùå DELETE API Key error:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/index.js",
      "line": 634,
      "content": "console.log('üîë ALIAS: GET API Keys endpoint hit via /settings/api-keys');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/index.js",
      "line": 643,
      "content": "console.log('üîë ALIAS: POST API Keys endpoint hit via /settings/api-keys');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/index.js",
      "line": 650,
      "content": "console.log('üîë ALIAS: DELETE API Key endpoint hit via /settings/api-keys');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/middleware/auth.js",
      "line": 30,
      "content": "console.log('Loading Cognito config from Secrets Manager...');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/middleware/auth.js",
      "line": 30,
      "content": "console.log('Loading Cognito config from Secrets Manager...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/middleware/auth.js",
      "line": 44,
      "content": "console.log('Cognito config loaded from Secrets Manager');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/middleware/auth.js",
      "line": 44,
      "content": "console.log('Cognito config loaded from Secrets Manager');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/middleware/auth.js",
      "line": 118,
      "content": "console.log(`üîê [${requestId}] Authentication middleware called for ${req.method} ${req.path}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/api/middleware/auth.js",
      "line": 138,
      "content": "console.log(`üé´ [${requestId}] Authorization header present:`, !!authHeader);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/api/middleware/auth.js",
      "line": 139,
      "content": "console.log(`üé´ [${requestId}] Token extracted:`, !!token);",
      "severity": "HIGH",
      "type": "TOKEN",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/middleware/auth.js",
      "line": 139,
      "content": "console.log(`üé´ [${requestId}] Token extracted:`, !!token);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/api/middleware/auth.js",
      "line": 171,
      "content": "console.error(`‚ùå [${requestId}] No token found in Authorization header`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/api/middleware/auth.js",
      "line": 183,
      "content": "console.log(`‚úÖ [${requestId}] Token found, verifying with Cognito...`);",
      "severity": "HIGH",
      "type": "TOKEN",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/middleware/auth.js",
      "line": 183,
      "content": "console.log(`‚úÖ [${requestId}] Token found, verifying with Cognito...`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/api/middleware/auth.js",
      "line": 186,
      "content": "console.log(`üéØ [${requestId}] Token verified successfully`);",
      "severity": "HIGH",
      "type": "TOKEN",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/middleware/auth.js",
      "line": 186,
      "content": "console.log(`üéØ [${requestId}] Token verified successfully`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/api/middleware/auth.js",
      "line": 198,
      "content": "console.log(`üë§ [${requestId}] User authenticated in ${duration}ms:`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/api/middleware/auth.js",
      "line": 208,
      "content": "console.error(`‚ùå [${requestId}] Authentication error after ${duration}ms:`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/api/middleware/auth.js",
      "line": 216,
      "content": "console.error(`üïê [${requestId}] Token expired`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/api/middleware/auth.js",
      "line": 225,
      "content": "console.error(`üö´ [${requestId}] Invalid token format`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/api/middleware/auth.js",
      "line": 244,
      "content": "console.error(`üåê [${requestId}] Network error during token verification`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/api/middleware/auth.js",
      "line": 252,
      "content": "console.error(`üî• [${requestId}] Generic authentication failure:`, error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/api/middleware/auth.js",
      "line": 317,
      "content": "console.log('Optional auth failed:', error.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/financials.js",
      "line": 480,
      "content": "console.log(`Key metrics request for ${ticker}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/financials.js",
      "line": 700,
      "content": "console.error('Key metrics fetch error:', error.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/health-old.js",
      "line": 83,
      "content": "console.log('  Lambda Function:', process.env.AWS_LAMBDA_FUNCTION_NAME || 'unknown');",
      "severity": "HIGH",
      "type": "ENV_VARS",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/health-old.js",
      "line": 84,
      "content": "console.log('  Lambda Region:', process.env.AWS_REGION || 'unknown');",
      "severity": "HIGH",
      "type": "ENV_VARS",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/health-old.js",
      "line": 85,
      "content": "console.log('  VPC Subnets:', process.env.AWS_LAMBDA_VPC_SUBNET_IDS || 'not configured');",
      "severity": "HIGH",
      "type": "ENV_VARS",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/health-old.js",
      "line": 86,
      "content": "console.log('  Security Groups:', process.env.AWS_LAMBDA_VPC_SECURITY_GROUP_IDS || 'not configured');",
      "severity": "HIGH",
      "type": "ENV_VARS",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/health-old.js",
      "line": 87,
      "content": "console.log('  DB Endpoint:', process.env.DB_ENDPOINT || 'not set');",
      "severity": "HIGH",
      "type": "ENV_VARS",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/health-old.js",
      "line": 88,
      "content": "console.log('  DB Secret ARN:', process.env.DB_SECRET_ARN ? '[CONFIGURED]' : 'not set');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/health-old.js",
      "line": 88,
      "content": "console.log('  DB Secret ARN:', process.env.DB_SECRET_ARN ? '[CONFIGURED]' : 'not set');",
      "severity": "HIGH",
      "type": "ENV_VARS",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/health-old.js",
      "line": 88,
      "content": "console.log('  DB Secret ARN:', process.env.DB_SECRET_ARN ? '[CONFIGURED]' : 'not set');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/health-old.js",
      "line": 102,
      "content": "console.log('  DB Host:', dbConfig.host || 'unknown');",
      "severity": "HIGH",
      "type": "DATABASE_HOST",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/health-old.js",
      "line": 146,
      "content": "console.log('‚úÖ NETWORK CONNECTIVITY: Lambda can reach database host:port');",
      "severity": "HIGH",
      "type": "DATABASE_HOST",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/health-old.js",
      "line": 154,
      "content": "console.log('‚ùå SECRETS MANAGER ACCESS FAILED:', secretError.message);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/health-old.js",
      "line": 154,
      "content": "console.log('‚ùå SECRETS MANAGER ACCESS FAILED:', secretError.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/health-old.js",
      "line": 179,
      "content": "console.log('  ‚Üí Authentication failed - credential issue');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/health-old.js",
      "line": 180,
      "content": "console.log('  ‚Üí Check: Database user permissions, password correctness');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "password"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/health.js",
      "line": 1047,
      "content": "console.log('‚ö†Ô∏è Could not fetch test credentials from database:', dbError.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/health.js",
      "line": 1115,
      "content": "console.log('üîç Checking AWS Secrets Manager health...');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/health.js",
      "line": 1115,
      "content": "console.log('üîç Checking AWS Secrets Manager health...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/health.js",
      "line": 1156,
      "content": "console.error('‚ùå AWS Secrets Manager health check failed:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/liveData.js",
      "line": 90,
      "content": "console.error('Authentication failed:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/market-data.js",
      "line": 158,
      "content": "console.log(`üîë [${requestId}] Testing API key availability for market data access`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/market-data.js",
      "line": 177,
      "content": "console.error(`‚ùå [${requestId}] No API credentials found for market data access`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/market-data.js",
      "line": 191,
      "content": "console.log(`‚úÖ [${requestId}] API credentials found`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/market-data.js",
      "line": 411,
      "content": "console.log(`üìä [MARKET-DATA] Quotes request for user ${userId}, symbols: ${symbols}`);",
      "severity": "MEDIUM",
      "type": "USER_ID",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/market-data.js",
      "line": 568,
      "content": "console.log('‚úÖ Valid API credentials found, fetching real market status...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/market-data.js",
      "line": 585,
      "content": "console.error('‚ùå API credentials failed:', apiError.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/market.js",
      "line": 925,
      "content": "console.log(`Processed ${Object.keys(indicators).length} economic indicators`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 245,
      "content": "console.error(`‚ùå [${requestId}] Authentication failure - no user ID found`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 359,
      "content": "console.log(`üîë [${requestId}] Retrieving user API credentials for Alpaca`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 365,
      "content": "console.log(`‚úÖ [${requestId}] API credentials retrieved in ${credentialsDuration}ms`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 799,
      "content": "console.error(`‚ùå [${requestId}] No API credentials found after ${credentialsDuration}ms`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 822,
      "content": "console.log(`‚úÖ [${requestId}] API credentials retrieved in ${credentialsDuration}ms`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 831,
      "content": "console.error(`‚ùå [${requestId}] Failed to retrieve API credentials after ${credentialsDuration}ms:`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 853,
      "content": "console.log(`üîë [HOLDINGS] Found credentials: account_type=${credentials.isSandbox ? 'sandbox' : 'live'}, requested=${isSandbox ? 'sandbox' : 'live'}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 856,
      "content": "console.log(`üîë [${requestId}] Using API key: alpaca (${credentials.isSandbox ? 'sandbox' : 'live'})`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 1507,
      "content": "console.log(`Portfolio analytics endpoint called for authenticated user: ${userId}, timeframe: ${timeframe}`);",
      "severity": "MEDIUM",
      "type": "USER_ID",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 1507,
      "content": "console.log(`Portfolio analytics endpoint called for authenticated user: ${userId}, timeframe: ${timeframe}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 2070,
      "content": "console.log(`‚ö†Ô∏è [${requestId}] No authenticated user`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 2223,
      "content": "console.log(`üîÑ [IMPORT START] Portfolio import requested for broker: ${broker}, account: ${accountType}, keyId: ${keyId || 'auto-select'}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 2224,
      "content": "console.log(`üîÑ [IMPORT] Request headers:`, Object.keys(req.headers));",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 2238,
      "content": "console.error(`‚ùå [IMPORT] Missing user ID - authentication may have failed`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 2247,
      "content": "console.log(`üîë [IMPORT] Step 1: Fetching API keys for ${broker}...`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 2248,
      "content": "console.log(`üîë [IMPORT] User ID: ${userId}, Broker: ${broker}`);",
      "severity": "MEDIUM",
      "type": "USER_ID",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 2252,
      "content": "console.log(`üîë [IMPORT] API key service enabled: ${apiKeyService.isEnabled}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 2255,
      "content": "console.error(`‚ùå [IMPORT] API key service is disabled. Cannot retrieve API keys.`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 2267,
      "content": "console.log(`üîë [IMPORT] Calling apiKeyService.getDecryptedApiKey with userId=${userId}, broker=${broker}...`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 2268,
      "content": "console.log(`üîë [IMPORT] API Key Service enabled: ${apiKeyService.isEnabled}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 2273,
      "content": "console.log(`üîç [IMPORT DEBUG] User has ${debugResult.rows.length} API keys:`, debugResult.rows.map(k => `ID:${k.id} ${k.provider}(${k.is_active ? 'active' : 'inactive'})`));",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 2278,
      "content": "console.log(`üîç [IMPORT DEBUG] KeyId ${keyId} check: found=${specificKeyCheck.rows.length > 0}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 2281,
      "content": "console.log(`üîç [IMPORT DEBUG] KeyId ${keyId} details: user_id=${key.user_id}, provider=${key.provider}, active=${key.is_active}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 2282,
      "content": "console.log(`üîç [IMPORT DEBUG] User ID match: ${key.user_id === userId} (${key.user_id} vs ${userId})`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 2283,
      "content": "console.log(`üîç [IMPORT DEBUG] Provider match: ${key.provider === broker} (${key.provider} vs ${broker})`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 2285,
      "content": "console.log(`‚ùå [IMPORT DEBUG] KeyId ${keyId} does not exist in database`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 2291,
      "content": "console.log(`üîç [IMPORT DEBUG] No API keys found for user. User must add API key in Settings.`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 2295,
      "content": "console.log(`üîç [IMPORT DEBUG] Total API keys in system: ${totalKeysResult.rows[0]?.total || 0}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 2299,
      "content": "console.log(`üîç [IMPORT DEBUG] User has ${userAlpacaKeys.length} ${broker} keys:`, userAlpacaKeys.map(k => `ID:${k.id}(${k.is_active ? 'active' : 'inactive'})`));",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 2302,
      "content": "console.log(`üîç [IMPORT DEBUG] Failed to query user API keys:`, debugError.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 2306,
      "content": "console.log(`üîë [IMPORT] Calling apiKeyService.getDecryptedApiKey with userId=${userId}, broker=${broker}...`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 2310,
      "content": "console.log(`üîë [IMPORT] Fetching specific API key with ID: ${keyId}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 2353,
      "content": "console.log(`‚úÖ [IMPORT] Retrieved specific key ${keyId}: ${credentials.provider} (${credentials.isSandbox ? 'sandbox' : 'live'})`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 2355,
      "content": "console.error(`‚ùå [IMPORT] Specific key ${keyId} not found for user ${userId}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 2358,
      "content": "console.error(`‚ùå [IMPORT] Error fetching specific key ${keyId}:`, keyError.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 2363,
      "content": "console.log(`üîë [IMPORT] API key service returned credentials:`, !!credentials);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 2365,
      "content": "console.log(`üîë [IMPORT] Credentials provider: ${credentials.provider}, sandbox: ${credentials.isSandbox}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 2369,
      "content": "console.error(`‚ùå [IMPORT] Error fetching API key for ${broker}:`, error.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 2380,
      "content": "console.log(`‚ùå No API key found for broker ${broker}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 2382,
      "content": "console.log(`‚ùå Recommended action: Check that user has saved API keys in Settings and they are active`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 2395,
      "content": "console.log(`‚úÖ Found API key for ${broker} (sandbox: ${credentials.isSandbox})`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 2396,
      "content": "console.log(`üìä [IMPORT] API key setting is authoritative - using ${credentials.isSandbox ? 'PAPER' : 'LIVE'} account`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 2400,
      "content": "console.log(`üì° [IMPORT] API endpoint will be: ${credentials.isSandbox ? 'paper-api.alpaca.markets' : 'api.alpaca.markets'}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/portfolio.js",
      "line": 2727,
      "content": "console.error('Error fetching API keys:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/screener.js",
      "line": 1011,
      "content": "console.log('üîç Request headers authorization:', req.headers.authorization ? 'Present' : 'Missing');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/screener.js",
      "line": 1019,
      "content": "console.error('‚ùå Auth header:', req.headers.authorization);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/screener.js",
      "line": 1023,
      "content": "console.log('üîÑ Providing fallback watchlists for unauthenticated request');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 310,
      "content": "console.log('üîç [DEBUG] Checking user_api_keys table structure...');",
      "severity": "CRITICAL",
      "type": "API_KEY",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 310,
      "content": "console.log('üîç [DEBUG] Checking user_api_keys table structure...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 354,
      "content": "console.error('‚ùå [DEBUG] Error checking API keys table:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 366,
      "content": "console.log('üîç API Keys fetch requested');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 397,
      "content": "console.error('‚ùå No user object in request - authentication failed');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 415,
      "content": "console.error('‚ùå No user ID found in authentication token');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 424,
      "content": "console.log('üîÑ Attempting to query user_api_keys table...');",
      "severity": "CRITICAL",
      "type": "API_KEY",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 424,
      "content": "console.log('üîÑ Attempting to query user_api_keys table...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 425,
      "content": "console.log('üîç Query params - userId:', userId, 'type:', typeof userId);",
      "severity": "MEDIUM",
      "type": "USER_ID",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 429,
      "content": "console.log('üìä Total API keys in database (all users):', allKeysResult.rows[0]?.total_keys || 0);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 448,
      "content": "console.log('üìä Found API keys for user', userId, ':', result.rows.length);",
      "severity": "MEDIUM",
      "type": "USER_ID",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 448,
      "content": "console.log('üìä Found API keys for user', userId, ':', result.rows.length);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 467,
      "content": "console.log('üéØ Returning API keys response');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 473,
      "content": "console.error('‚ùå Database error in API keys fetch:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 510,
      "content": "console.log('üîÑ Database failed, returning empty API keys list as fallback');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 526,
      "content": "console.log(`üîê [${requestId}] POST /api-keys - Starting API key creation`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 531,
      "content": "console.error(`‚ùå [${requestId}] API Key encryption service is disabled`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 591,
      "content": "console.error(`‚ùå [${requestId}] Missing required fields: provider=${!!provider}, apiKey=${!!apiKey} after ${Date.now() - startTime}ms`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 601,
      "content": "console.error(`‚ùå [${requestId}] Invalid API key format for ${provider}: ${formatValidation.error}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 643,
      "content": "console.log(`üîê [${requestId}] Encrypting API credentials after ${Date.now() - startTime}ms...`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 652,
      "content": "console.error(`‚ùå [${requestId}] Failed to encrypt API credentials:`, encryptError);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 717,
      "content": "console.error('‚ùå Error adding API key:', error.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 813,
      "content": "console.error('Error updating API key:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 845,
      "content": "console.error('Error deleting API key:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 861,
      "content": "console.log(`üöÄ [${requestId}] API key connection test initiated`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 870,
      "content": "console.error(`‚ùå [${requestId}] Invalid keyId format:`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 884,
      "content": "console.log(`üîç [${requestId}] Retrieving API key from database`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 910,
      "content": "console.error(`‚ùå [${requestId}] API key not found or unauthorized:`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 924,
      "content": "console.log(`‚úÖ [${requestId}] API key found for provider: ${keyData.provider}`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 933,
      "content": "console.log(`üîì [${requestId}] Decrypting API credentials`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 951,
      "content": "console.log(`‚úÖ [${requestId}] Credentials decrypted successfully in ${decryptDuration}ms`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 959,
      "content": "console.error(`‚ùå [${requestId}] Credential decryption FAILED after ${decryptDuration}ms:`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 975,
      "content": "console.log(`üì° [${requestId}] Testing connection to ${keyData.provider} API`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 1061,
      "content": "console.log(`üîç [${requestId}] API key connection test completed in ${totalDuration}ms`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 1097,
      "content": "console.error(`‚ùå [${requestId}] API key connection test FAILED after ${errorDuration}ms:`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 1161,
      "content": "console.error('Error validating API key:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 1188,
      "content": "console.error('Error validating all API keys:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 1253,
      "content": "console.log(`üîì Credentials decrypted successfully for ${provider}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 1266,
      "content": "console.error('Error getting API credentials:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 1749,
      "content": "console.log('üîë Generated 2FA secret for user');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 1749,
      "content": "console.log('üîë Generated 2FA secret for user');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 1764,
      "content": "console.log('‚úÖ 2FA secret stored in database, awaiting verification');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 1764,
      "content": "console.log('‚úÖ 2FA secret stored in database, awaiting verification');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 1778,
      "content": "console.error('‚ùå Error enabling two-factor auth:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/settings.js",
      "line": 1929,
      "content": "console.error('Error disabling two-factor auth:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/stocks.js",
      "line": 1708,
      "content": "console.log('Initializing user_api_keys table...');",
      "severity": "CRITICAL",
      "type": "API_KEY",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/stocks.js",
      "line": 1708,
      "content": "console.log('Initializing user_api_keys table...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/stocks.js",
      "line": 1731,
      "content": "console.log('user_api_keys table created successfully');",
      "severity": "CRITICAL",
      "type": "API_KEY",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/stocks.js",
      "line": 1731,
      "content": "console.log('user_api_keys table created successfully');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/stocks.js",
      "line": 1744,
      "content": "console.log('user_api_keys indexes created successfully');",
      "severity": "CRITICAL",
      "type": "API_KEY",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/stocks.js",
      "line": 1744,
      "content": "console.log('user_api_keys indexes created successfully');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/stocks.js",
      "line": 1778,
      "content": "console.error('Error initializing user_api_keys table:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/trades.js",
      "line": 148,
      "content": "console.log(`‚úÖ [TRADES] Found Alpaca credentials (sandbox: ${credentials.isSandbox})`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/trades.js",
      "line": 474,
      "content": "console.log('üîë Retrieving API credentials for Alpaca...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/trades.js",
      "line": 478,
      "content": "console.log('‚úÖ Valid Alpaca credentials found, fetching real trade history...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/trades.js",
      "line": 658,
      "content": "console.log(`üìä Trade analytics requested for user ${userId}, timeframe: ${timeframe}`);",
      "severity": "MEDIUM",
      "type": "USER_ID",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/trades.js",
      "line": 684,
      "content": "console.log(`üîë Found ${apiKeysResult.rows.length} active API keys for analytics`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/trading.js",
      "line": 2230,
      "content": "console.error(`‚ùå [${requestId}] Authentication failure - no user ID found`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/trading.js",
      "line": 2261,
      "content": "console.log(`üîë [${requestId}] Retrieving user API credentials for trade history`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/trading.js",
      "line": 2270,
      "content": "console.error(`‚ùå [${requestId}] No API credentials found after ${credentialsDuration}ms`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/trading.js",
      "line": 2296,
      "content": "console.log(`‚úÖ [${requestId}] API credentials retrieved in ${credentialsDuration}ms`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/trading.js",
      "line": 2305,
      "content": "console.error(`‚ùå [${requestId}] Failed to retrieve API credentials after ${credentialsDuration}ms:`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/websocket.js",
      "line": 107,
      "content": "console.error(`‚ùå [${requestId}] Authentication failure - no authorization header provided`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/websocket.js",
      "line": 116,
      "content": "console.error(`‚ùå [${requestId}] Authentication failure - invalid authorization header format`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/websocket.js",
      "line": 125,
      "content": "console.log(`üîç [${requestId}] Verifying JWT token`, {",
      "severity": "HIGH",
      "type": "TOKEN",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/websocket.js",
      "line": 125,
      "content": "console.log(`üîç [${requestId}] Verifying JWT token`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/websocket.js",
      "line": 144,
      "content": "console.log(`‚úÖ [${requestId}] JWT token verified successfully in ${verifyDuration}ms`, {",
      "severity": "HIGH",
      "type": "TOKEN",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/websocket.js",
      "line": 144,
      "content": "console.log(`‚úÖ [${requestId}] JWT token verified successfully in ${verifyDuration}ms`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/websocket.js",
      "line": 197,
      "content": "console.log(`üîë [${requestId}] Retrieving user API credentials for live data access`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/websocket.js",
      "line": 206,
      "content": "console.error(`‚ùå [${requestId}] No API credentials found after ${credentialsDuration}ms`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/websocket.js",
      "line": 232,
      "content": "console.log(`‚úÖ [${requestId}] API credentials retrieved in ${credentialsDuration}ms`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/websocket.js",
      "line": 241,
      "content": "console.error(`‚ùå [${requestId}] Failed to retrieve API credentials after ${credentialsDuration}ms:`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes/websocket.js",
      "line": 842,
      "content": "console.log(`Cleaned up ${expiredKeys.length} expired cache entries`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes-backup/screener.js",
      "line": 1011,
      "content": "console.log('üîç Request headers authorization:', req.headers.authorization ? 'Present' : 'Missing');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes-backup/screener.js",
      "line": 1019,
      "content": "console.error('‚ùå Auth header:', req.headers.authorization);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes-backup/screener.js",
      "line": 1023,
      "content": "console.log('üîÑ Providing fallback watchlists for unauthenticated request');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes-backup/stocks.js",
      "line": 2200,
      "content": "console.log('Initializing user_api_keys table...');",
      "severity": "CRITICAL",
      "type": "API_KEY",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes-backup/stocks.js",
      "line": 2200,
      "content": "console.log('Initializing user_api_keys table...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes-backup/stocks.js",
      "line": 2223,
      "content": "console.log('user_api_keys table created successfully');",
      "severity": "CRITICAL",
      "type": "API_KEY",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes-backup/stocks.js",
      "line": 2223,
      "content": "console.log('user_api_keys table created successfully');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes-backup/stocks.js",
      "line": 2236,
      "content": "console.log('user_api_keys indexes created successfully');",
      "severity": "CRITICAL",
      "type": "API_KEY",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes-backup/stocks.js",
      "line": 2236,
      "content": "console.log('user_api_keys indexes created successfully');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes-backup/stocks.js",
      "line": 2270,
      "content": "console.error('Error initializing user_api_keys table:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes-backup/websocket.js",
      "line": 107,
      "content": "console.error(`‚ùå [${requestId}] Authentication failure - no authorization header provided`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes-backup/websocket.js",
      "line": 116,
      "content": "console.error(`‚ùå [${requestId}] Authentication failure - invalid authorization header format`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes-backup/websocket.js",
      "line": 125,
      "content": "console.log(`üîç [${requestId}] Verifying JWT token`, {",
      "severity": "HIGH",
      "type": "TOKEN",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes-backup/websocket.js",
      "line": 125,
      "content": "console.log(`üîç [${requestId}] Verifying JWT token`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes-backup/websocket.js",
      "line": 144,
      "content": "console.log(`‚úÖ [${requestId}] JWT token verified successfully in ${verifyDuration}ms`, {",
      "severity": "HIGH",
      "type": "TOKEN",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes-backup/websocket.js",
      "line": 144,
      "content": "console.log(`‚úÖ [${requestId}] JWT token verified successfully in ${verifyDuration}ms`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes-backup/websocket.js",
      "line": 197,
      "content": "console.log(`üîë [${requestId}] Retrieving user API credentials for live data access`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes-backup/websocket.js",
      "line": 206,
      "content": "console.error(`‚ùå [${requestId}] No API credentials found after ${credentialsDuration}ms`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes-backup/websocket.js",
      "line": 232,
      "content": "console.log(`‚úÖ [${requestId}] API credentials retrieved in ${credentialsDuration}ms`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes-backup/websocket.js",
      "line": 241,
      "content": "console.error(`‚ùå [${requestId}] Failed to retrieve API credentials after ${credentialsDuration}ms:`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/routes-backup/websocket.js",
      "line": 842,
      "content": "console.log(`Cleaned up ${expiredKeys.length} expired cache entries`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/alpacaService.js",
      "line": 488,
      "content": "console.error('Alpaca credential validation error:', error.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/apiKeyService.js",
      "line": 27,
      "content": "console.error('‚ùå API_KEY_ENCRYPTION_SECRET_ARN environment variable not set');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/apiKeyService.js",
      "line": 31,
      "content": "console.log('üîß Using fallback encryption secret from environment');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/apiKeyService.js",
      "line": 31,
      "content": "console.log('üîß Using fallback encryption secret from environment');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/apiKeyService.js",
      "line": 38,
      "content": "console.log('üîê Loading API key encryption secret from AWS Secrets Manager...');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/apiKeyService.js",
      "line": 38,
      "content": "console.log('üîê Loading API key encryption secret from AWS Secrets Manager...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/apiKeyService.js",
      "line": 54,
      "content": "console.log('‚úÖ API key encryption secret loaded successfully');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/apiKeyService.js",
      "line": 54,
      "content": "console.log('‚úÖ API key encryption secret loaded successfully');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/apiKeyService.js",
      "line": 58,
      "content": "console.error('‚ùå Failed to load encryption secret:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/apiKeyService.js",
      "line": 471,
      "content": "console.error('Error getting user API keys:', error.message); // Security: Only log error message",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/apiKeyService.js",
      "line": 487,
      "content": "console.error('Error checking API key existence:', error.message); // Security: Only log error message",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/database-old.js",
      "line": 45,
      "content": "console.log('Getting DB credentials from Secrets Manager...');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/database-old.js",
      "line": 45,
      "content": "console.log('Getting DB credentials from Secrets Manager...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/database-old.js",
      "line": 65,
      "content": "console.log(`‚úÖ Database config loaded from Secrets Manager:`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/database-old.js",
      "line": 65,
      "content": "console.log(`‚úÖ Database config loaded from Secrets Manager:`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/database-old.js",
      "line": 66,
      "content": "console.log(`   üè† Host: ${dbConfig.host}`);",
      "severity": "HIGH",
      "type": "DATABASE_HOST",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/database-old.js",
      "line": 97,
      "content": "console.log(`   üè† Host: ${dbConfig.host}`);",
      "severity": "HIGH",
      "type": "DATABASE_HOST",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/database-old.js",
      "line": 174,
      "content": "console.log(`üîå Attempting to connect to ${config.host}:${config.port}...`);",
      "severity": "HIGH",
      "type": "DATABASE_HOST",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/database-old.js",
      "line": 428,
      "content": "console.log(`üåê Testing network connectivity to ${config.host}:${config.port}...`);",
      "severity": "HIGH",
      "type": "DATABASE_HOST",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/database.js",
      "line": 34,
      "content": "console.log(`üîë Getting DB credentials from Secrets Manager: ${secretArn}`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/database.js",
      "line": 34,
      "content": "console.log(`üîë Getting DB credentials from Secrets Manager: ${secretArn}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/database.js",
      "line": 38,
      "content": "console.log(`‚úÖ Secrets Manager responded in ${Date.now() - secretStart}ms`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/database.js",
      "line": 38,
      "content": "console.log(`‚úÖ Secrets Manager responded in ${Date.now() - secretStart}ms`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/database.js",
      "line": 54,
      "content": "console.log('‚úÖ Database config loaded from Secrets Manager successfully');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/database.js",
      "line": 54,
      "content": "console.log('‚úÖ Database config loaded from Secrets Manager successfully');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/keyGenerator.js",
      "line": 103,
      "content": "console.log('üîê Generating cryptographically secure keys...\\n');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/keyGenerator.js",
      "line": 107,
      "content": "console.log('‚úÖ Generated keys with the following entropy:');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/keyGenerator.js",
      "line": 108,
      "content": "console.log(`   ‚Ä¢ API Encryption Key: ${keys.entropy_info.api_encryption_bits} bits`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/keyGenerator.js",
      "line": 109,
      "content": "console.log(`   ‚Ä¢ JWT Secret: ${keys.entropy_info.jwt_secret_bits} bits`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/keyGenerator.js",
      "line": 109,
      "content": "console.log(`   ‚Ä¢ JWT Secret: ${keys.entropy_info.jwt_secret_bits} bits`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/keyGenerator.js",
      "line": 110,
      "content": "console.log(`   ‚Ä¢ Session Secret: ${keys.entropy_info.session_secret_bits} bits\\n`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/keyGenerator.js",
      "line": 110,
      "content": "console.log(`   ‚Ä¢ Session Secret: ${keys.entropy_info.session_secret_bits} bits\\n`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/keyGenerator.js",
      "line": 114,
      "content": "console.log(generateEnvFormat(keys));",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/keyGenerator.js",
      "line": 117,
      "content": "console.log('‚Ä¢ Store these keys in AWS Secrets Manager or secure environment variables');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/keyGenerator.js",
      "line": 117,
      "content": "console.log('‚Ä¢ Store these keys in AWS Secrets Manager or secure environment variables');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/keyGenerator.js",
      "line": 118,
      "content": "console.log('‚Ä¢ Never commit these keys to version control');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/keyGenerator.js",
      "line": 119,
      "content": "console.log('‚Ä¢ Implement key rotation every 90 days');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/keyGenerator.js",
      "line": 120,
      "content": "console.log('‚Ä¢ Use the backup key for seamless rotation');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/keyGenerator.js",
      "line": 121,
      "content": "console.log('‚Ä¢ Monitor key usage and access patterns\\n');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/keyGenerator.js",
      "line": 131,
      "content": "console.log('üß™ Key Validation:');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/keyGenerator.js",
      "line": 137,
      "content": "console.log(`\\n${allValid ? 'üéâ All keys generated successfully!' : '‚ùå Some keys failed validation!'}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 18,
      "content": "console.log('‚úÖ Secrets already loaded');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 18,
      "content": "console.log('‚úÖ Secrets already loaded');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 22,
      "content": "console.log('üîê Loading application secrets...');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 22,
      "content": "console.log('üîê Loading application secrets...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 36,
      "content": "console.log(`‚úÖ All secrets loaded successfully in ${Date.now() - startTime}ms`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 36,
      "content": "console.log(`‚úÖ All secrets loaded successfully in ${Date.now() - startTime}ms`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 39,
      "content": "console.error('‚ùå Failed to load secrets:', error.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 52,
      "content": "console.log('üîë Loading database secrets...');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 52,
      "content": "console.log('üîë Loading database secrets...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 58,
      "content": "console.log('‚úÖ Database secrets accessible');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 58,
      "content": "console.log('‚úÖ Database secrets accessible');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 68,
      "content": "console.log('üîê Loading API key encryption secret...');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 68,
      "content": "console.log('üîê Loading API key encryption secret...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 97,
      "content": "console.log(`‚úÖ Found encryption secret from AWS Secrets Manager`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 97,
      "content": "console.log(`‚úÖ Found encryption secret from AWS Secrets Manager`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 102,
      "content": "console.log(`üîç Secret not found: ${secretName}`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 102,
      "content": "console.log(`üîç Secret not found: ${secretName}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 109,
      "content": "console.log('‚úÖ API key encryption secret loaded and injected');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 109,
      "content": "console.log('‚úÖ API key encryption secret loaded and injected');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 111,
      "content": "console.error('‚ùå CRITICAL: No API key encryption secret found - API key service will be disabled');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 112,
      "content": "console.error('üí° REQUIRED: Create a secret named \"stocks-app/api-key-encryption\" in AWS Secrets Manager');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 118,
      "content": "console.error('‚ùå Failed to load API key encryption secret:', error.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 119,
      "content": "console.error('üí° REQUIRED: Create a secret named \"stocks-app/api-key-encryption\" in AWS Secrets Manager');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 127,
      "content": "console.log('üîê Loading JWT secrets...');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 127,
      "content": "console.log('üîê Loading JWT secrets...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 153,
      "content": "console.log(`‚úÖ Found JWT secret from AWS Secrets Manager`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 153,
      "content": "console.log(`‚úÖ Found JWT secret from AWS Secrets Manager`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 164,
      "content": "console.log('‚úÖ JWT secret loaded and injected');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 164,
      "content": "console.log('‚úÖ JWT secret loaded and injected');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 201,
      "content": "console.log(`üîç Secret not found: ${secretId}`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 201,
      "content": "console.log(`üîç Secret not found: ${secretId}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 203,
      "content": "console.error(`‚ùå Error getting secret ${secretId}:`, error.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 214,
      "content": "console.log('üîê Validating required production secrets...');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 214,
      "content": "console.log('üîê Validating required production secrets...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 220,
      "content": "console.log('‚úÖ Required secrets validation passed');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 220,
      "content": "console.log('‚úÖ Required secrets validation passed');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/secretsLoader.js",
      "line": 238,
      "content": "console.error('‚ùå CRITICAL: Missing required secrets:', missing);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/timeoutHelper.js",
      "line": 277,
      "content": "console.log(`üîÑ Circuit breaker half-open for ${serviceKey}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/userApiKeyHelper.js",
      "line": 21,
      "content": "console.log(`üîë [API-KEY] Getting API key for user: ${userId}, broker: ${broker}, keyId: ${keyId || 'auto'}`);",
      "severity": "MEDIUM",
      "type": "USER_ID",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/userApiKeyHelper.js",
      "line": 21,
      "content": "console.log(`üîë [API-KEY] Getting API key for user: ${userId}, broker: ${broker}, keyId: ${keyId || 'auto'}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/userApiKeyHelper.js",
      "line": 24,
      "content": "console.error('‚ùå [API-KEY] No user ID provided');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/userApiKeyHelper.js",
      "line": 29,
      "content": "console.error('‚ùå [API-KEY] No broker specified');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/userApiKeyHelper.js",
      "line": 36,
      "content": "console.error('‚ùå [API-KEY] API key service is disabled');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/userApiKeyHelper.js",
      "line": 47,
      "content": "console.log(`üîç [API-KEY] User has ${debugResult.rows.length} total API keys`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/userApiKeyHelper.js",
      "line": 49,
      "content": "console.log(`üîç [API-KEY] Available keys: ${debugResult.rows.length} keys found for ${broker || 'all brokers'}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/userApiKeyHelper.js",
      "line": 51,
      "content": "console.log(`üîç [API-KEY] No API keys found for user`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/userApiKeyHelper.js",
      "line": 61,
      "content": "console.log(`üîç [API-KEY] Users with API keys in database:`,",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/userApiKeyHelper.js",
      "line": 70,
      "content": "console.log(`üîë [API-KEY] Retrieving specific key ID: ${keyId}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/userApiKeyHelper.js",
      "line": 82,
      "content": "console.log(`‚ùå [API-KEY] Specific key ${keyId} not found or inactive`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/userApiKeyHelper.js",
      "line": 87,
      "content": "console.log(`‚úÖ [API-KEY] Found specific key: ${broker} (sandbox: ${keyData.is_sandbox})`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/userApiKeyHelper.js",
      "line": 104,
      "content": "console.error(`‚ùå [API-KEY] Failed to decrypt credentials for key ${keyId}:`, decryptError);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/userApiKeyHelper.js",
      "line": 119,
      "content": "console.log(`üîë [API-KEY] Getting default key for broker: ${broker}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/userApiKeyHelper.js",
      "line": 123,
      "content": "console.log(`‚úÖ [API-KEY] Retrieved credentials for ${broker} (sandbox: ${credentials.isSandbox})`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/userApiKeyHelper.js",
      "line": 126,
      "content": "console.log(`‚ùå [API-KEY] No credentials found for user ${userId}, broker ${broker}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/userApiKeyHelper.js",
      "line": 131,
      "content": "console.error(`‚ùå [API-KEY] Error retrieving API key:`, error.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/userApiKeyHelper.js",
      "line": 151,
      "content": "console.log(`üë§ [AUTH] Validated user: ${userId}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/userApiKeyHelper.js",
      "line": 163,
      "content": "console.error(`‚ùå [API-KEY-ERROR] ${error} (user: ${userId}, broker: ${broker})`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/userApiKeyHelper.js",
      "line": 205,
      "content": "console.log(`üìä [API-KEY-SUMMARY] User ${userId}:`, summary);",
      "severity": "MEDIUM",
      "type": "USER_ID",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/userApiKeyHelper.js",
      "line": 205,
      "content": "console.log(`üìä [API-KEY-SUMMARY] User ${userId}:`, summary);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/userApiKeyHelper.js",
      "line": 208,
      "content": "console.error(`‚ùå [API-KEY-SUMMARY] Error getting summary:`, error.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/api/utils/watchlistAlerts.js",
      "line": 409,
      "content": "console.log('Email notification would be sent:', {",
      "severity": "MEDIUM",
      "type": "EMAIL",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/dev-server.js",
      "line": 60,
      "content": "console.log(`üöÄ Development API server running on http://localhost:${PORT}`);",
      "severity": "HIGH",
      "type": "DATABASE_HOST",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/dev-server.js",
      "line": 61,
      "content": "console.log(`üìä Health check: http://localhost:${PORT}/health`);",
      "severity": "HIGH",
      "type": "DATABASE_HOST",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/ApiKeyOnboarding.jsx",
      "line": 121,
      "content": "console.log(`‚úÖ API key validation passed for ${selectedProvider}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/ApiKeyOnboarding.jsx",
      "line": 124,
      "content": "console.error('‚ùå API key validation failed:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/ApiKeyOnboarding.jsx",
      "line": 139,
      "content": "console.log(`‚úÖ API key saved for ${selectedProvider}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/ApiKeyOnboarding.jsx",
      "line": 142,
      "content": "console.error('‚ùå Failed to save API key:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/ApiKeyProvider.jsx",
      "line": 90,
      "content": "console.log('üîë Loading API keys from backend...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/ApiKeyProvider.jsx",
      "line": 116,
      "content": "console.log('‚úÖ API keys loaded from backend:', Object.keys(keysFromBackend));",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/ApiKeyProvider.jsx",
      "line": 142,
      "content": "console.log('üîÑ Checking for localStorage API keys to migrate...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/ApiKeyProvider.jsx",
      "line": 158,
      "content": "console.log('üì¶ Found localStorage keys to migrate:', Object.keys(localKeys));",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/ApiKeyProvider.jsx",
      "line": 171,
      "content": "console.log('‚úÖ Successfully migrated API keys from localStorage to backend');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/ApiKeyProvider.jsx",
      "line": 212,
      "content": "console.log('üì± Loaded from localStorage:', Object.keys(localKeys));",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/ApiKeyProvider.jsx",
      "line": 225,
      "content": "console.log(`üíæ Saving ${provider} API key to backend...`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/ApiKeyProvider.jsx",
      "line": 236,
      "content": "console.log(`‚úÖ Successfully saved ${provider} API key to backend`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/ApiKeyProvider.jsx",
      "line": 243,
      "content": "console.error(`‚ùå Failed to save ${provider} API key:`, error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/ApiKeyProvider.jsx",
      "line": 309,
      "content": "console.log(`‚úÖ API key saved for ${provider}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/ApiKeyProvider.jsx",
      "line": 313,
      "content": "console.error(`‚ùå Failed to save API key for ${provider}:`, error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/ApiKeyProvider.jsx",
      "line": 340,
      "content": "console.log(`‚úÖ API key removed for ${provider}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/ApiKeyProvider.jsx",
      "line": 344,
      "content": "console.error(`‚ùå Failed to remove API key for ${provider}:`, error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/ApiKeyProvider.jsx",
      "line": 359,
      "content": "console.log('üéâ API key onboarding marked as complete');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/PortfolioManager.jsx",
      "line": 289,
      "content": "console.log('Portfolio Manager - API Key Status:', status);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/RequiresApiKeys.jsx",
      "line": 71,
      "content": "console.log('üéâ API key onboarding completed');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/SettingsManager.jsx",
      "line": 136,
      "content": "console.log('üîÑ Loading API keys from backend...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/SettingsManager.jsx",
      "line": 187,
      "content": "console.log('üíæ Saving API key for provider:', provider);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/SettingsManager.jsx",
      "line": 220,
      "content": "console.error('‚ùå Error saving API key:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/WatchlistAlerts.jsx",
      "line": 188,
      "content": "console.log('Email notification:', message);",
      "severity": "MEDIUM",
      "type": "EMAIL",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/auth/BiometricAuth.jsx",
      "line": 125,
      "content": "console.error('Biometric credential creation failed:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/auth/BiometricAuth.jsx",
      "line": 176,
      "content": "console.error('Biometric authentication failed:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/auth/BiometricAuth.jsx",
      "line": 268,
      "content": "console.error('Biometric authentication error:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/auth/LoginForm.jsx",
      "line": 76,
      "content": "console.log('Biometric authentication successful:', authResult);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/auth/LoginForm.jsx",
      "line": 82,
      "content": "console.log('Biometric setup completed:', credentialData);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/auth/MFASetupModal.jsx",
      "line": 174,
      "content": "console.error('Failed to copy secret:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/auth/ProtectedRoute.jsx",
      "line": 35,
      "content": "console.error('Error checking API keys:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/auth/SecurityDashboard.jsx",
      "line": 476,
      "content": "console.log('Biometric auth success:', result);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/auth/SecurityDashboard.jsx",
      "line": 479,
      "content": "console.log('Biometric setup complete:', credentials);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/auth/SessionManager.jsx",
      "line": 190,
      "content": "console.log('Attempting token refresh...');",
      "severity": "HIGH",
      "type": "TOKEN",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/auth/SessionManager.jsx",
      "line": 190,
      "content": "console.log('Attempting token refresh...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/auth/SessionManager.jsx",
      "line": 213,
      "content": "console.log('Token refreshed successfully');",
      "severity": "HIGH",
      "type": "TOKEN",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/auth/SessionManager.jsx",
      "line": 213,
      "content": "console.log('Token refreshed successfully');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/components/auth/SessionManager.jsx",
      "line": 216,
      "content": "console.error('Token refresh failed:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/config/amplify.js",
      "line": 90,
      "content": "console.error('Authentication is required for all functionality');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/contexts/AuthContext.jsx",
      "line": 135,
      "content": "console.log('üöÄ Using AWS Cognito authentication');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/contexts/AuthContext.jsx",
      "line": 168,
      "content": "console.log('‚úÖ User authenticated with Cognito');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/contexts/AuthContext.jsx",
      "line": 178,
      "content": "console.error('Error checking auth state:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/contexts/AuthContext.jsx",
      "line": 321,
      "content": "console.log('üîÑ Requesting password reset...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "password"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/contexts/AuthContext.jsx",
      "line": 330,
      "content": "console.error('‚ùå Password reset error:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "password"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/contexts/AuthContext.jsx",
      "line": 342,
      "content": "console.log('üîÑ Confirming password reset...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "password"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/contexts/AuthContext.jsx",
      "line": 347,
      "content": "console.error('‚ùå Password reset confirmation error:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "password"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/contexts/AuthContext.jsx",
      "line": 374,
      "content": "console.error('‚ùå Token refresh error:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/pages/AuthTest.jsx",
      "line": 12,
      "content": "console.log('üîê AUTH DEBUG:', logMessage);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/pages/Dashboard.jsx",
      "line": 877,
      "content": "console.log('Dashboard - API Key Status:', status);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/pages/Portfolio.jsx",
      "line": 767,
      "content": "console.log('üîí User not authenticated, cannot load portfolio data');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/pages/Portfolio.jsx",
      "line": 784,
      "content": "console.log('üîë Auth state:', {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/pages/Portfolio.jsx",
      "line": 1335,
      "content": "console.log(`üîÑ Importing portfolio from ${provider} (${accountType}) using key ID: ${selectedKeyId || 'auto-select'}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/pages/Portfolio.jsx",
      "line": 2037,
      "content": "console.log('Portfolio - API Key Status:', status);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/pages/PortfolioHoldings.jsx",
      "line": 342,
      "content": "console.log('Portfolio Holdings - API Key Status:', status);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/pages/PortfolioOptimization.jsx",
      "line": 630,
      "content": "console.log(`‚úÖ Historical data loaded for ${Object.keys(histData).length} symbols`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/pages/PortfolioOptimization.jsx",
      "line": 658,
      "content": "console.log(`‚úÖ Market data loaded for ${Object.keys(marketDataMap).length} symbols`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/pages/PortfolioOptimization.jsx",
      "line": 784,
      "content": "console.log('Portfolio Optimization - API Key Status:', status);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/pages/PortfolioPerformance.jsx",
      "line": 266,
      "content": "console.log('Portfolio Performance - API Key Status:', status);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/pages/PortfolioPerformanceDebug.jsx",
      "line": 106,
      "content": "console.log('Portfolio Performance Debug - API Key Status:', status);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/pages/PortfolioPerformanceSimple.jsx",
      "line": 89,
      "content": "console.log('Portfolio Performance Simple - API Key Status:', status);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/pages/ServiceHealth.jsx",
      "line": 161,
      "content": "console.log('üìã Tables found:', Object.keys(response.data.database?.tables || {}).length);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/pages/ServiceHealth.jsx",
      "line": 743,
      "content": "console.log('Service Health - API Key Status:', status);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/pages/SettingsApiKeys.jsx",
      "line": 130,
      "content": "console.log('API Key service setup required:', response);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/pages/SettingsApiKeys.jsx",
      "line": 147,
      "content": "console.error('API keys fetch error:', err);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/pages/SettingsApiKeys.jsx",
      "line": 177,
      "content": "console.error('Add API key error:', err);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/pages/SettingsApiKeys.jsx",
      "line": 193,
      "content": "console.error('Update API key error:', err);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/pages/SettingsApiKeys.jsx",
      "line": 204,
      "content": "console.error('Delete API key error:', err);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/pages/StockDetail.jsx",
      "line": 225,
      "content": "console.log('Stock Detail - API Key Status:', status);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/pages/TradingSignals.jsx",
      "line": 1191,
      "content": "console.log('Trading Signals - API Key Status:', status);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/api.js",
      "line": 466,
      "content": "console.error('Error fetching API keys:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/api.js",
      "line": 481,
      "content": "console.error('Error adding API key:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/api.js",
      "line": 483,
      "content": "console.error('API Key Error Details:', {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/api.js",
      "line": 498,
      "content": "console.error('Error updating API key:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/api.js",
      "line": 516,
      "content": "console.error('Error deleting API key:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/api.js",
      "line": 534,
      "content": "console.error('Error testing API key connection:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/api.js",
      "line": 699,
      "content": "console.log('Could not retrieve auth token:', error.message);",
      "severity": "HIGH",
      "type": "TOKEN",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/api.js",
      "line": 699,
      "content": "console.log('Could not retrieve auth token:', error.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/apiKeyService.js",
      "line": 27,
      "content": "console.error('Error fetching API keys:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/apiKeyService.js",
      "line": 38,
      "content": "console.error(`Error getting API key for ${provider}:`, error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/apiKeyService.js",
      "line": 62,
      "content": "console.error('Error testing API key connection:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/apiKeyService.js",
      "line": 76,
      "content": "console.error('Error getting Alpaca API key:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/apiKeyService.js",
      "line": 90,
      "content": "console.error('Error getting TD Ameritrade API key:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/apiKeyService.js",
      "line": 101,
      "content": "console.error(`Error checking API key for ${provider}:`, error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/apiKeyService.js",
      "line": 163,
      "content": "console.error(`Error getting decrypted credentials for ${provider}:`, error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/economicDataService.js",
      "line": 167,
      "content": "console.error(`Failed to fetch ${key}:`, error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/enhancedWebSocketService.js",
      "line": 213,
      "content": "console.error(`${providerName} API credentials not found`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/enhancedWebSocketService.js",
      "line": 233,
      "content": "console.error(`${providerName} OAuth token not found`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/latencyMonitor.js",
      "line": 128,
      "content": "console.log(`‚ö° Starting latency monitoring for ${key} (${dataType})`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/latencyMonitor.js",
      "line": 532,
      "content": "console.log(`‚ö° Stopped latency monitoring for ${key}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/realTimeDataService.js",
      "line": 280,
      "content": "console.log(`‚úÖ Polled data for ${Object.keys(marketData.data || {}).length} symbols`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/realTimeDataService.js",
      "line": 291,
      "content": "console.error('üîê Authentication error - user needs to log in again');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/settingsService.js",
      "line": 18,
      "content": "console.log('üì° Fetching API keys from backend...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/settingsService.js",
      "line": 22,
      "content": "console.log('‚úÖ Successfully fetched API keys:', response.data.data.length, 'keys');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/settingsService.js",
      "line": 28,
      "content": "console.error('‚ùå Error fetching API keys:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/settingsService.js",
      "line": 32,
      "content": "console.log('üìù No API keys found or service unavailable, returning empty array');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/settingsService.js",
      "line": 45,
      "content": "console.log('üì° Adding new API key:', { provider: apiKeyData.provider });",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/settingsService.js",
      "line": 58,
      "content": "console.log('‚úÖ Successfully added API key:', response.data.data.id);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/settingsService.js",
      "line": 64,
      "content": "console.error('‚ùå Error adding API key:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/settingsService.js",
      "line": 74,
      "content": "console.log('üì° Updating API key:', keyId);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/settingsService.js",
      "line": 79,
      "content": "console.log('‚úÖ Successfully updated API key:', keyId);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/settingsService.js",
      "line": 85,
      "content": "console.error('‚ùå Error updating API key:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/settingsService.js",
      "line": 95,
      "content": "console.log('üì° Deleting API key:', keyId);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/settingsService.js",
      "line": 100,
      "content": "console.log('‚úÖ Successfully deleted API key:', keyId);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/settingsService.js",
      "line": 106,
      "content": "console.error('‚ùå Error deleting API key:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/settingsService.js",
      "line": 116,
      "content": "console.log('üì° Validating API key:', keyId, 'for provider:', provider);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/settingsService.js",
      "line": 123,
      "content": "console.log('‚úÖ API key validation result:', response.data.data.valid);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/settingsService.js",
      "line": 129,
      "content": "console.error('‚ùå Error validating API key:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/settingsService.js",
      "line": 164,
      "content": "console.log('üì° Validating all API keys...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/settingsService.js",
      "line": 169,
      "content": "console.log('‚úÖ Validated all API keys:', response.data.data.validationResults);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/settingsService.js",
      "line": 175,
      "content": "console.error('‚ùå Error validating all API keys:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/settingsService.js",
      "line": 185,
      "content": "console.log('üì° Getting credentials for provider:', provider);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/settingsService.js",
      "line": 190,
      "content": "console.log('‚úÖ Got credentials for provider:', provider);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/settingsService.js",
      "line": 196,
      "content": "console.error('‚ùå Error getting provider credentials:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/settingsService.js",
      "line": 263,
      "content": "console.log('üìù No API keys in localStorage to migrate');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/settingsService.js",
      "line": 318,
      "content": "console.log('‚úÖ Successfully migrated API keys:', migrations);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/simpleAlpacaWebSocket.js",
      "line": 41,
      "content": "console.log('üîê Loading Alpaca credentials from user settings...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/simpleAlpacaWebSocket.js",
      "line": 55,
      "content": "console.log('‚úÖ Alpaca credentials loaded successfully', {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/simpleAlpacaWebSocket.js",
      "line": 63,
      "content": "console.error('‚ùå Error loading Alpaca credentials:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/simpleAlpacaWebSocket.js",
      "line": 82,
      "content": "console.error('‚ùå Alpaca API credentials not available after loading from settings');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/simpleAlpacaWebSocket.js",
      "line": 315,
      "content": "console.log('üîÑ Reloading Alpaca credentials...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/services/simpleAlpacaWebSocket.js",
      "line": 319,
      "content": "console.log('üîÑ Reconnecting with new credentials...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/tests/global-setup.js",
      "line": 104,
      "content": "console.log('Created test data:', Object.keys(testData));",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/frontend/src/utils/themeUtils.js",
      "line": 1,
      "content": "/**\\n * Theme utilities WITHOUT MUI createTheme to prevent createPalette errors\\n * Direct theme object creation to avoid MUI theme initialization\\n */\\n\\n/**\\n * Check MUI version and compatibility\\n */\\nexport function checkMuiVersion() {\\n  try {\\n    // Try to access MUI version info\\n    const muiVersion = require('@mui/material/package.json').version;\\n    console.log('üîç MUI Version detected:', muiVersion);\\n    return muiVersion;\\n  } catch (error) {\\n    console.warn('‚ö†Ô∏è Could not detect MUI version:', error);\\n    return 'unknown';\\n  }\\n}\\n\\n/**\\n * Create a safe theme without MUI createTheme to avoid createPalette errors\\n */\\nexport function createSafeTheme(mode = 'light') {\\n  console.log('üé® Creating safe theme object directly (no MUI createTheme) with mode:', mode);\\n  \\n  const isDark = mode === 'dark';\\n  \\n  // Create theme object directly without MUI createTheme\\n  return {\\n    palette: {\\n      mode,\\n      primary: {\\n        main: '#1976d2',\\n        light: '#42a5f5',\\n        dark: '#1565c0',\\n        contrastText: '#fff'\\n      },\\n      secondary: {\\n        main: '#dc004e',\\n        light: '#ff5983',\\n        dark: '#9a0036',\\n        contrastText: '#fff'\\n      },\\n      background: {\\n        default: isDark ? '#121212' : '#f5f5f5',\\n        paper: isDark ? '#1e1e1e' : '#ffffff'\\n      },\\n      text: {\\n        primary: isDark ? '#ffffff' : '#000000',\\n        secondary: isDark ? '#b3b3b3' : '#666666'\\n      },\\n      success: {\\n        main: '#2e7d32',\\n        light: '#4caf50',\\n        dark: '#1b5e20'\\n      },\\n      error: {\\n        main: '#d32f2f',\\n        light: '#ef5350',\\n        dark: '#c62828'\\n      },\\n      warning: {\\n        main: '#ed6c02',\\n        light: '#ff9800',\\n        dark: '#e65100'\\n      },\\n      info: {\\n        main: '#0288d1',\\n        light: '#03a9f4',\\n        dark: '#01579b'\\n      }\\n    },\\n    typography: {\\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", \\\"Roboto\\\", \\\"Oxygen\\\", \\\"Ubuntu\\\", \\\"Cantarell\\\", \\\"Fira Sans\\\", \\\"Droid Sans\\\", \\\"Helvetica Neue\\\", sans-serif',\\n      h1: { fontSize: '2.5rem', fontWeight: 600 },\\n      h2: { fontSize: '2rem', fontWeight: 600 },\\n      h3: { fontSize: '1.75rem', fontWeight: 600 },\\n      h4: { fontSize: '1.5rem', fontWeight: 600 },\\n      h5: { fontSize: '1.25rem', fontWeight: 600 },\\n      h6: { fontSize: '1rem', fontWeight: 600 },\\n      body1: { fontSize: '1rem' },\\n      body2: { fontSize: '0.875rem' }\\n    },\\n    spacing: (factor) => factor * 8,\\n    breakpoints: {\\n      values: { xs: 0, sm: 600, md: 960, lg: 1280, xl: 1920 },\\n      up: (key) => `@media (min-width:${key === 'xs' ? 0 : key === 'sm' ? 600 : key === 'md' ? 960 : key === 'lg' ? 1280 : 1920}px)`,\\n      down: (key) => `@media (max-width:${key === 'xs' ? 599 : key === 'sm' ? 959 : key === 'md' ? 1279 : key === 'lg' ? 1919 : 2559}px)`\\n    },\\n    shape: {\\n      borderRadius: 4\\n    },\\n    shadows: [\\n      'none',\\n      '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\\n      '0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)',\\n      '0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)',\\n      '0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)',\\n      '0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)',\\n      '0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)',\\n      '0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)',\\n      '0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)',\\n      '0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)',\\n      '0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)',\\n      '0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)',\\n      '0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)',\\n      '0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)',\\n      '0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)',\\n      '0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)',\\n      '0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)',\\n      '0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)',\\n      '0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)',\\n      '0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)',\\n      '0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)',\\n      '0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)',\\n      '0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)',\\n      '0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)',\\n      '0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)'\\n    ],\\n    transitions: {\\n      duration: {\\n        shortest: 150,\\n        shorter: 200,\\n        short: 250,\\n        standard: 300,\\n        complex: 375,\\n        enteringScreen: 225,\\n        leavingScreen: 195\\n      },\\n      easing: {\\n        easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',\\n        easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',\\n        easeIn: 'cubic-bezier(0.4, 0, 1, 1)',\\n        sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'\\n      }\\n    },\\n    zIndex: {\\n      mobileStepper: 1000,\\n      speedDial: 1050,\\n      appBar: 1100,\\n      drawer: 1200,\\n      modal: 1300,\\n      snackbar: 1400,\\n      tooltip: 1500\\n    }\\n  };\\n}\\n\\n/**\\n * Debug theme creation process - now without createTheme\\n */\\nexport function debugThemeCreation() {\\n  console.log('üîç Starting theme debug (without MUI createTheme)...');\\n  \\n  // Check MUI version\\n  checkMuiVersion();\\n  \\n  // Test direct theme object creation\\n  try {\\n    const basicTheme = createSafeTheme('light');\\n    console.log('‚úÖ Direct theme object creation works');\\n    console.log('üé® Theme palette:', basicTheme.palette);\\n    return basicTheme;\\n  } catch (error) {\\n    console.error('‚ùå Direct theme object creation failed:', error);\\n    throw error;\\n  }\\n}\\n\\n/**\\n * Get CSS variables for theme colors\\n */\\nexport function getThemeCSSVariables(theme) {\\n  return {\\n    '--primary-main': theme.palette.primary.main,\\n    '--primary-light': theme.palette.primary.light,\\n    '--primary-dark': theme.palette.primary.dark,\\n    '--secondary-main': theme.palette.secondary.main,\\n    '--background-default': theme.palette.background.default,\\n    '--background-paper': theme.palette.background.paper,\\n    '--text-primary': theme.palette.text.primary,\\n    '--text-secondary': theme.palette.text.secondary,\\n    '--success-main': theme.palette.success.main,\\n    '--error-main': theme.palette.error.main,\\n    '--warning-main': theme.palette.warning.main,\\n    '--info-main': theme.palette.info.main\\n  };\\n}\\n\\n/**\\n * Apply theme CSS variables to document\\n */\\nexport function applyThemeToDocument(theme) {\\n  const variables = getThemeCSSVariables(theme);\\n  const root = document.documentElement;\\n  \\n  Object.entries(variables).forEach(([property, value]) => {\\n    root.style.setProperty(property, value);\\n  });\\n  \\n  console.log('‚úÖ Applied theme CSS variables to document');\\n}",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/check-cloudformation-status.js",
      "line": 20,
      "content": "console.log(`üåç AWS Region: ${process.env.AWS_REGION || 'us-east-1'}`);",
      "severity": "HIGH",
      "type": "ENV_VARS",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/check-cloudformation-status.js",
      "line": 70,
      "content": "console.log(`      ${output.OutputKey}: ${output.OutputValue}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/check-cloudformation-status.js",
      "line": 84,
      "content": "console.log(`      ${param.ParameterKey}: ${value}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/check-cloudformation-status.js",
      "line": 95,
      "content": "console.log(`   üéØ Found needed outputs: ${foundOutputs.map(o => o.OutputKey).join(', ')}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/index.js",
      "line": 91,
      "content": "console.log('‚úÖ Enhanced auth middleware initialized');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/index.js",
      "line": 93,
      "content": "console.error('‚ö†Ô∏è Enhanced auth middleware initialization failed:', error.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth-backup.js",
      "line": 31,
      "content": "console.log('Loading Cognito config from Secrets Manager...');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth-backup.js",
      "line": 31,
      "content": "console.log('Loading Cognito config from Secrets Manager...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth-backup.js",
      "line": 45,
      "content": "console.log('Cognito config loaded from Secrets Manager');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth-backup.js",
      "line": 45,
      "content": "console.log('Cognito config loaded from Secrets Manager');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth-backup.js",
      "line": 121,
      "content": "console.log(`üîê [${requestId}] Authentication middleware called for ${req.method} ${req.path}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth-backup.js",
      "line": 143,
      "content": "console.log(`üé´ [${requestId}] Authorization header present:`, !!authHeader);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth-backup.js",
      "line": 144,
      "content": "console.log(`üé´ [${requestId}] Token extracted:`, !!token);",
      "severity": "HIGH",
      "type": "TOKEN",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth-backup.js",
      "line": 144,
      "content": "console.log(`üé´ [${requestId}] Token extracted:`, !!token);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth-backup.js",
      "line": 176,
      "content": "console.error(`‚ùå [${requestId}] No token found in Authorization header`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth-backup.js",
      "line": 188,
      "content": "console.log(`‚úÖ [${requestId}] Token found, verifying with Cognito...`);",
      "severity": "HIGH",
      "type": "TOKEN",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth-backup.js",
      "line": 188,
      "content": "console.log(`‚úÖ [${requestId}] Token found, verifying with Cognito...`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth-backup.js",
      "line": 191,
      "content": "console.log(`üéØ [${requestId}] Token verified successfully`);",
      "severity": "HIGH",
      "type": "TOKEN",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth-backup.js",
      "line": 191,
      "content": "console.log(`üéØ [${requestId}] Token verified successfully`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth-backup.js",
      "line": 221,
      "content": "console.log(`‚úÖ [${requestId}] User authenticated successfully:`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth-backup.js",
      "line": 232,
      "content": "console.log(`üë§ [${requestId}] User authenticated in ${duration}ms:`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth-backup.js",
      "line": 242,
      "content": "console.error(`‚ùå [${requestId}] Authentication error after ${duration}ms:`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth-backup.js",
      "line": 250,
      "content": "console.error(`üïê [${requestId}] Token expired`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth-backup.js",
      "line": 259,
      "content": "console.error(`üö´ [${requestId}] Invalid token format`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth-backup.js",
      "line": 278,
      "content": "console.error(`üåê [${requestId}] Network error during token verification`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth-backup.js",
      "line": 286,
      "content": "console.error(`üî• [${requestId}] Generic authentication failure:`, error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth-backup.js",
      "line": 351,
      "content": "console.log('Optional auth failed:', error.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth.js",
      "line": 42,
      "content": "console.log('üì° Loading Cognito config from Secrets Manager...');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth.js",
      "line": 42,
      "content": "console.log('üì° Loading Cognito config from Secrets Manager...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth.js",
      "line": 56,
      "content": "console.log('‚úÖ Cognito config loaded from Secrets Manager');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth.js",
      "line": 56,
      "content": "console.log('‚úÖ Cognito config loaded from Secrets Manager');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth.js",
      "line": 169,
      "content": "console.log(`üîê [${requestId}] Authentication middleware called for ${req.method} ${req.path}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth.js",
      "line": 175,
      "content": "console.log(`üé´ [${requestId}] Token present: ${!!token}`);",
      "severity": "HIGH",
      "type": "TOKEN",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth.js",
      "line": 175,
      "content": "console.log(`üé´ [${requestId}] Token present: ${!!token}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth.js",
      "line": 180,
      "content": "console.log(`üîß [${requestId}] No token provided, using development bypass`);",
      "severity": "HIGH",
      "type": "TOKEN",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth.js",
      "line": 180,
      "content": "console.log(`üîß [${requestId}] No token provided, using development bypass`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth.js",
      "line": 200,
      "content": "console.log(`‚úÖ [${requestId}] Development authentication successful`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth.js",
      "line": 203,
      "content": "console.error(`‚ùå [${requestId}] No token found and development bypass disabled`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth.js",
      "line": 220,
      "content": "console.log(`üîß [${requestId}] Valid development token detected`);",
      "severity": "HIGH",
      "type": "TOKEN",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth.js",
      "line": 220,
      "content": "console.log(`üîß [${requestId}] Valid development token detected`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth.js",
      "line": 239,
      "content": "console.log(`‚úÖ [${requestId}] Development token authentication successful`);",
      "severity": "HIGH",
      "type": "TOKEN",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth.js",
      "line": 239,
      "content": "console.log(`‚úÖ [${requestId}] Development token authentication successful`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth.js",
      "line": 271,
      "content": "console.log(`‚úÖ [${requestId}] Development fallback authentication successful`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth.js",
      "line": 289,
      "content": "console.log(`üéØ [${requestId}] Cognito token verified successfully`);",
      "severity": "HIGH",
      "type": "TOKEN",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth.js",
      "line": 289,
      "content": "console.log(`üéØ [${requestId}] Cognito token verified successfully`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth.js",
      "line": 319,
      "content": "console.log(`‚úÖ [${requestId}] Cognito authentication successful in ${duration}ms`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth.js",
      "line": 325,
      "content": "console.error(`‚ùå [${requestId}] Authentication error after ${duration}ms:`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth.js",
      "line": 333,
      "content": "console.error(`üïê [${requestId}] Token expired`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth.js",
      "line": 342,
      "content": "console.error(`üö´ [${requestId}] Invalid token format`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth.js",
      "line": 361,
      "content": "console.error(`üåê [${requestId}] Network error during token verification`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth.js",
      "line": 395,
      "content": "console.error(`üî• [${requestId}] Final authentication failure:`, error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/auth.js",
      "line": 455,
      "content": "console.log('Optional auth failed:', error.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/authEnhanced.js",
      "line": 42,
      "content": "console.log('üì° Loading Cognito config from Secrets Manager...');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/authEnhanced.js",
      "line": 42,
      "content": "console.log('üì° Loading Cognito config from Secrets Manager...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/authEnhanced.js",
      "line": 56,
      "content": "console.log('‚úÖ Cognito config loaded from Secrets Manager');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/authEnhanced.js",
      "line": 56,
      "content": "console.log('‚úÖ Cognito config loaded from Secrets Manager');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/authEnhanced.js",
      "line": 169,
      "content": "console.log(`üîê [${requestId}] Authentication middleware called for ${req.method} ${req.path}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/authEnhanced.js",
      "line": 175,
      "content": "console.log(`üé´ [${requestId}] Token present: ${!!token}`);",
      "severity": "HIGH",
      "type": "TOKEN",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/authEnhanced.js",
      "line": 175,
      "content": "console.log(`üé´ [${requestId}] Token present: ${!!token}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/authEnhanced.js",
      "line": 180,
      "content": "console.log(`üîß [${requestId}] No token provided, using development bypass`);",
      "severity": "HIGH",
      "type": "TOKEN",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/authEnhanced.js",
      "line": 180,
      "content": "console.log(`üîß [${requestId}] No token provided, using development bypass`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/authEnhanced.js",
      "line": 200,
      "content": "console.log(`‚úÖ [${requestId}] Development authentication successful`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/authEnhanced.js",
      "line": 203,
      "content": "console.error(`‚ùå [${requestId}] No token found and development bypass disabled`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/authEnhanced.js",
      "line": 220,
      "content": "console.log(`üîß [${requestId}] Valid development token detected`);",
      "severity": "HIGH",
      "type": "TOKEN",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/authEnhanced.js",
      "line": 220,
      "content": "console.log(`üîß [${requestId}] Valid development token detected`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/authEnhanced.js",
      "line": 239,
      "content": "console.log(`‚úÖ [${requestId}] Development token authentication successful`);",
      "severity": "HIGH",
      "type": "TOKEN",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/authEnhanced.js",
      "line": 239,
      "content": "console.log(`‚úÖ [${requestId}] Development token authentication successful`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/authEnhanced.js",
      "line": 271,
      "content": "console.log(`‚úÖ [${requestId}] Development fallback authentication successful`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/authEnhanced.js",
      "line": 289,
      "content": "console.log(`üéØ [${requestId}] Cognito token verified successfully`);",
      "severity": "HIGH",
      "type": "TOKEN",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/authEnhanced.js",
      "line": 289,
      "content": "console.log(`üéØ [${requestId}] Cognito token verified successfully`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/authEnhanced.js",
      "line": 319,
      "content": "console.log(`‚úÖ [${requestId}] Cognito authentication successful in ${duration}ms`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/authEnhanced.js",
      "line": 325,
      "content": "console.error(`‚ùå [${requestId}] Authentication error after ${duration}ms:`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/authEnhanced.js",
      "line": 333,
      "content": "console.error(`üïê [${requestId}] Token expired`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/authEnhanced.js",
      "line": 342,
      "content": "console.error(`üö´ [${requestId}] Invalid token format`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/authEnhanced.js",
      "line": 361,
      "content": "console.error(`üåê [${requestId}] Network error during token verification`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/authEnhanced.js",
      "line": 395,
      "content": "console.error(`üî• [${requestId}] Final authentication failure:`, error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/authEnhanced.js",
      "line": 455,
      "content": "console.log('Optional auth failed:', error.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/enhancedAuth.js",
      "line": 442,
      "content": "console.error('üö® Authentication error:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/middleware/enhancedAuth.js",
      "line": 991,
      "content": "console.log(`üßπ Auth cleanup: ${cleanedSessions} sessions, ${cleanedAttempts} attempts, ${cleanedDevices} devices, ${cleanedRateLimit} rate limits, ${cleanedSuspicious} suspicious`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/production-readiness-analysis.js",
      "line": 236,
      "content": "console.log('‚úÖ User authentication working end-to-end');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/auth-status.js",
      "line": 53,
      "content": "console.error('Failed to generate development token:', err);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/auth-status.js",
      "line": 102,
      "content": "console.error('Token validation error:', err);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/diagnostics.js",
      "line": 57,
      "content": "console.log(`üè• [${diagnosticId}] Testing AWS Secrets Manager...`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/diagnostics.js",
      "line": 57,
      "content": "console.log(`üè• [${diagnosticId}] Testing AWS Secrets Manager...`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/diagnostics.js",
      "line": 214,
      "content": "console.log(`üîë [${diagnosticId}] Secrets Manager diagnostic requested...`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/diagnostics.js",
      "line": 214,
      "content": "console.log(`üîë [${diagnosticId}] Secrets Manager diagnostic requested...`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/diagnostics.js",
      "line": 229,
      "content": "console.log(`üîë [${diagnosticId}] Secrets Manager test completed: ${result.success ? 'SUCCESS' : 'FAILED'}`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/diagnostics.js",
      "line": 229,
      "content": "console.log(`üîë [${diagnosticId}] Secrets Manager test completed: ${result.success ? 'SUCCESS' : 'FAILED'}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/diagnostics.js",
      "line": 251,
      "content": "console.error(`‚ùå [${diagnosticId}] Secrets Manager test failed:`, error.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/financials.js",
      "line": 502,
      "content": "console.log(`Key metrics request for ${ticker}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/financials.js",
      "line": 722,
      "content": "console.error('Key metrics fetch error:', error.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/health-old.js",
      "line": 83,
      "content": "console.log('  Lambda Function:', process.env.AWS_LAMBDA_FUNCTION_NAME || 'unknown');",
      "severity": "HIGH",
      "type": "ENV_VARS",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/health-old.js",
      "line": 84,
      "content": "console.log('  Lambda Region:', process.env.AWS_REGION || 'unknown');",
      "severity": "HIGH",
      "type": "ENV_VARS",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/health-old.js",
      "line": 85,
      "content": "console.log('  VPC Subnets:', process.env.AWS_LAMBDA_VPC_SUBNET_IDS || 'not configured');",
      "severity": "HIGH",
      "type": "ENV_VARS",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/health-old.js",
      "line": 86,
      "content": "console.log('  Security Groups:', process.env.AWS_LAMBDA_VPC_SECURITY_GROUP_IDS || 'not configured');",
      "severity": "HIGH",
      "type": "ENV_VARS",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/health-old.js",
      "line": 87,
      "content": "console.log('  DB Endpoint:', process.env.DB_ENDPOINT || 'not set');",
      "severity": "HIGH",
      "type": "ENV_VARS",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/health-old.js",
      "line": 88,
      "content": "console.log('  DB Secret ARN:', process.env.DB_SECRET_ARN ? '[CONFIGURED]' : 'not set');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/health-old.js",
      "line": 88,
      "content": "console.log('  DB Secret ARN:', process.env.DB_SECRET_ARN ? '[CONFIGURED]' : 'not set');",
      "severity": "HIGH",
      "type": "ENV_VARS",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/health-old.js",
      "line": 88,
      "content": "console.log('  DB Secret ARN:', process.env.DB_SECRET_ARN ? '[CONFIGURED]' : 'not set');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/health-old.js",
      "line": 102,
      "content": "console.log('  DB Host:', dbConfig.host || 'unknown');",
      "severity": "HIGH",
      "type": "DATABASE_HOST",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/health-old.js",
      "line": 146,
      "content": "console.log('‚úÖ NETWORK CONNECTIVITY: Lambda can reach database host:port');",
      "severity": "HIGH",
      "type": "DATABASE_HOST",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/health-old.js",
      "line": 154,
      "content": "console.log('‚ùå SECRETS MANAGER ACCESS FAILED:', secretError.message);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/health-old.js",
      "line": 154,
      "content": "console.log('‚ùå SECRETS MANAGER ACCESS FAILED:', secretError.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/health-old.js",
      "line": 179,
      "content": "console.log('  ‚Üí Authentication failed - credential issue');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/health-old.js",
      "line": 180,
      "content": "console.log('  ‚Üí Check: Database user permissions, password correctness');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "password"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/health.js",
      "line": 1107,
      "content": "console.log('‚ö†Ô∏è Could not fetch test credentials from database:', dbError.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/health.js",
      "line": 1175,
      "content": "console.log('üîç Checking AWS Secrets Manager health...');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/health.js",
      "line": 1175,
      "content": "console.log('üîç Checking AWS Secrets Manager health...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/health.js",
      "line": 1216,
      "content": "console.error('‚ùå AWS Secrets Manager health check failed:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/health.js",
      "line": 1365,
      "content": "console.log('üîç Checking JWT secret service health...');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/health.js",
      "line": 1365,
      "content": "console.log('üîç Checking JWT secret service health...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/health.js",
      "line": 1390,
      "content": "console.error('‚ùå JWT secret service health check failed:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/liveData.js",
      "line": 104,
      "content": "console.error('Authentication failed:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/market-data.js",
      "line": 161,
      "content": "console.log(`üîë [${requestId}] Testing API key availability for market data access`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/market-data.js",
      "line": 180,
      "content": "console.error(`‚ùå [${requestId}] No API credentials found for market data access`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/market-data.js",
      "line": 194,
      "content": "console.log(`‚úÖ [${requestId}] API credentials found`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/market-data.js",
      "line": 417,
      "content": "console.log(`üìä [MARKET-DATA] Quotes request for user ${userId}, symbols: ${symbols}`);",
      "severity": "MEDIUM",
      "type": "USER_ID",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/market-data.js",
      "line": 583,
      "content": "console.log('‚úÖ Valid API credentials found, fetching real market status...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/market-data.js",
      "line": 600,
      "content": "console.error('‚ùå API credentials failed:', apiError.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/market.js",
      "line": 871,
      "content": "console.log(`Processed ${Object.keys(indicators).length} economic indicators`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 244,
      "content": "console.error(`‚ùå [${requestId}] Authentication failure - no user ID found`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 358,
      "content": "console.log(`üîë [${requestId}] Retrieving user API credentials for Alpaca`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 364,
      "content": "console.log(`‚úÖ [${requestId}] API credentials retrieved in ${credentialsDuration}ms`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 801,
      "content": "console.error(`‚ùå [${requestId}] No API credentials found after ${credentialsDuration}ms`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 824,
      "content": "console.log(`‚úÖ [${requestId}] API credentials retrieved in ${credentialsDuration}ms`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 833,
      "content": "console.error(`‚ùå [${requestId}] Failed to retrieve API credentials after ${credentialsDuration}ms:`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 855,
      "content": "console.log(`üîë [HOLDINGS] Found credentials: account_type=${credentials.isSandbox ? 'sandbox' : 'live'}, requested=${isSandbox ? 'sandbox' : 'live'}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 858,
      "content": "console.log(`üîë [${requestId}] Using API key: alpaca (${credentials.isSandbox ? 'sandbox' : 'live'})`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 1512,
      "content": "console.log(`Portfolio analytics endpoint called for authenticated user: ${userId}, timeframe: ${timeframe}`);",
      "severity": "MEDIUM",
      "type": "USER_ID",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 1512,
      "content": "console.log(`Portfolio analytics endpoint called for authenticated user: ${userId}, timeframe: ${timeframe}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 2078,
      "content": "console.log(`‚ö†Ô∏è [${requestId}] No authenticated user`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 2231,
      "content": "console.log(`üîÑ [IMPORT START] Portfolio import requested for broker: ${broker}, account: ${accountType}, keyId: ${keyId || 'auto-select'}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 2232,
      "content": "console.log(`üîÑ [IMPORT] Request headers:`, Object.keys(req.headers));",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 2246,
      "content": "console.error(`‚ùå [IMPORT] Missing user ID - authentication may have failed`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 2255,
      "content": "console.log(`üîë [IMPORT] Step 1: Fetching API keys for ${broker}...`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 2256,
      "content": "console.log(`üîë [IMPORT] User ID: ${userId}, Broker: ${broker}`);",
      "severity": "MEDIUM",
      "type": "USER_ID",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 2260,
      "content": "console.log(`üîë [IMPORT] API key service enabled: ${apiKeyService.isEnabled}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 2263,
      "content": "console.error(`‚ùå [IMPORT] API key service is disabled. Cannot retrieve API keys.`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 2275,
      "content": "console.log(`üîë [IMPORT] Calling apiKeyService.getDecryptedApiKey with userId=${userId}, broker=${broker}...`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 2276,
      "content": "console.log(`üîë [IMPORT] API Key Service enabled: ${apiKeyService.isEnabled}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 2281,
      "content": "console.log(`üîç [IMPORT DEBUG] User has ${debugResult.rows.length} API keys:`, debugResult.rows.map(k => `ID:${k.id} ${k.provider}(${k.is_active ? 'active' : 'inactive'})`));",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 2286,
      "content": "console.log(`üîç [IMPORT DEBUG] KeyId ${keyId} check: found=${specificKeyCheck.rows.length > 0}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 2289,
      "content": "console.log(`üîç [IMPORT DEBUG] KeyId ${keyId} details: user_id=${key.user_id}, provider=${key.provider}, active=${key.is_active}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 2290,
      "content": "console.log(`üîç [IMPORT DEBUG] User ID match: ${key.user_id === userId} (${key.user_id} vs ${userId})`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 2291,
      "content": "console.log(`üîç [IMPORT DEBUG] Provider match: ${key.provider === broker} (${key.provider} vs ${broker})`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 2293,
      "content": "console.log(`‚ùå [IMPORT DEBUG] KeyId ${keyId} does not exist in database`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 2299,
      "content": "console.log(`üîç [IMPORT DEBUG] No API keys found for user. User must add API key in Settings.`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 2303,
      "content": "console.log(`üîç [IMPORT DEBUG] Total API keys in system: ${totalKeysResult.rows[0]?.total || 0}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 2307,
      "content": "console.log(`üîç [IMPORT DEBUG] User has ${userAlpacaKeys.length} ${broker} keys:`, userAlpacaKeys.map(k => `ID:${k.id}(${k.is_active ? 'active' : 'inactive'})`));",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 2310,
      "content": "console.log(`üîç [IMPORT DEBUG] Failed to query user API keys:`, debugError.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 2314,
      "content": "console.log(`üîë [IMPORT] Calling apiKeyService.getDecryptedApiKey with userId=${userId}, broker=${broker}...`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 2318,
      "content": "console.log(`üîë [IMPORT] Fetching specific API key with ID: ${keyId}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 2361,
      "content": "console.log(`‚úÖ [IMPORT] Retrieved specific key ${keyId}: ${credentials.provider} (${credentials.isSandbox ? 'sandbox' : 'live'})`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 2363,
      "content": "console.error(`‚ùå [IMPORT] Specific key ${keyId} not found for user ${userId}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 2366,
      "content": "console.error(`‚ùå [IMPORT] Error fetching specific key ${keyId}:`, keyError.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 2371,
      "content": "console.log(`üîë [IMPORT] API key service returned credentials:`, !!credentials);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 2373,
      "content": "console.log(`üîë [IMPORT] Credentials provider: ${credentials.provider}, sandbox: ${credentials.isSandbox}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 2377,
      "content": "console.error(`‚ùå [IMPORT] Error fetching API key for ${broker}:`, error.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 2388,
      "content": "console.log(`‚ùå No API key found for broker ${broker}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 2390,
      "content": "console.log(`‚ùå Recommended action: Check that user has saved API keys in Settings and they are active`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 2403,
      "content": "console.log(`‚úÖ Found API key for ${broker} (sandbox: ${credentials.isSandbox})`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 2404,
      "content": "console.log(`üìä [IMPORT] API key setting is authoritative - using ${credentials.isSandbox ? 'PAPER' : 'LIVE'} account`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 2408,
      "content": "console.log(`üì° [IMPORT] API endpoint will be: ${credentials.isSandbox ? 'paper-api.alpaca.markets' : 'api.alpaca.markets'}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/portfolio.js",
      "line": 2735,
      "content": "console.error('Error fetching API keys:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/screener.js",
      "line": 1011,
      "content": "console.log('üîç Request headers authorization:', req.headers.authorization ? 'Present' : 'Missing');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/screener.js",
      "line": 1019,
      "content": "console.error('‚ùå Auth header:', req.headers.authorization);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/screener.js",
      "line": 1023,
      "content": "console.log('üîÑ Providing fallback watchlists for unauthenticated request');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 303,
      "content": "console.log('üîç [DEBUG] Checking user_api_keys table structure...');",
      "severity": "CRITICAL",
      "type": "API_KEY",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 303,
      "content": "console.log('üîç [DEBUG] Checking user_api_keys table structure...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 347,
      "content": "console.error('‚ùå [DEBUG] Error checking API keys table:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 359,
      "content": "console.log('üîç API Keys fetch requested');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 390,
      "content": "console.error('‚ùå No user object in request - authentication failed');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 408,
      "content": "console.error('‚ùå No user ID found in authentication token');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 417,
      "content": "console.log('üîÑ Fetching API keys from Parameter Store...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 422,
      "content": "console.log('‚úÖ API keys fetched successfully');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 423,
      "content": "console.log('üìä Found API keys for user', userId, ':', apiKeys.length);",
      "severity": "MEDIUM",
      "type": "USER_ID",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 423,
      "content": "console.log('üìä Found API keys for user', userId, ':', apiKeys.length);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 437,
      "content": "console.log('üéØ Returning API keys response');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 443,
      "content": "console.error('‚ùå API Key service error:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 446,
      "content": "console.log('üîÑ API Key service failed, returning empty list as fallback');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 462,
      "content": "console.log(`üîê [${requestId}] POST /api-keys - Starting API key creation`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 467,
      "content": "console.error(`‚ùå [${requestId}] API Key service is disabled`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 501,
      "content": "console.error(`‚ùå [${requestId}] Missing required fields: provider=${!!provider}, apiKey=${!!apiKey} after ${Date.now() - startTime}ms`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 511,
      "content": "console.error(`‚ùå [${requestId}] Invalid API key format for ${provider}: ${formatValidation.error}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 520,
      "content": "console.log(`üîê [${requestId}] Storing API key using Parameter Store after ${Date.now() - startTime}ms...`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 525,
      "content": "console.log(`‚úÖ [${requestId}] API key stored successfully after ${Date.now() - storeStart}ms`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 551,
      "content": "console.error('‚ùå Error adding API key:', error.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 647,
      "content": "console.error('Error updating API key:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 669,
      "content": "console.error('Error deleting API key:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 710,
      "content": "console.error('Error retrieving API key:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 727,
      "content": "console.log(`üöÄ [${requestId}] API key connection test initiated`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 743,
      "content": "console.log(`üîç [${requestId}] Retrieving API key from Parameter Store`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 755,
      "content": "console.log(`‚úÖ [${requestId}] API key found for provider: ${provider}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 820,
      "content": "console.error(`‚ùå [${requestId}] API key connection test FAILED:`, error.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 897,
      "content": "console.error('Error validating API key:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 944,
      "content": "console.error('Error validating all API keys:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 970,
      "content": "console.log(`üîì Credentials retrieved successfully for ${provider}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 983,
      "content": "console.error('Error getting API credentials:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 1445,
      "content": "console.log('üîë Generated 2FA secret for user');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 1445,
      "content": "console.log('üîë Generated 2FA secret for user');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 1460,
      "content": "console.log('‚úÖ 2FA secret stored in database, awaiting verification');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 1460,
      "content": "console.log('‚úÖ 2FA secret stored in database, awaiting verification');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 1474,
      "content": "console.error('‚ùå Error enabling two-factor auth:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/settings.js",
      "line": 1625,
      "content": "console.error('Error disabling two-factor auth:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/stocks.js",
      "line": 2200,
      "content": "console.log('Initializing user_api_keys table...');",
      "severity": "CRITICAL",
      "type": "API_KEY",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/stocks.js",
      "line": 2200,
      "content": "console.log('Initializing user_api_keys table...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/stocks.js",
      "line": 2223,
      "content": "console.log('user_api_keys table created successfully');",
      "severity": "CRITICAL",
      "type": "API_KEY",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/stocks.js",
      "line": 2223,
      "content": "console.log('user_api_keys table created successfully');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/stocks.js",
      "line": 2236,
      "content": "console.log('user_api_keys indexes created successfully');",
      "severity": "CRITICAL",
      "type": "API_KEY",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/stocks.js",
      "line": 2236,
      "content": "console.log('user_api_keys indexes created successfully');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/stocks.js",
      "line": 2270,
      "content": "console.error('Error initializing user_api_keys table:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/trades.js",
      "line": 158,
      "content": "console.log(`‚úÖ [TRADES] Found Alpaca credentials for user`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/trades.js",
      "line": 499,
      "content": "console.log('üîë Retrieving API credentials for Alpaca...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/trades.js",
      "line": 503,
      "content": "console.log('‚úÖ Valid Alpaca credentials found, fetching real trade history...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/trades.js",
      "line": 686,
      "content": "console.log(`üìä Trade analytics requested for user ${userId}, timeframe: ${timeframe}`);",
      "severity": "MEDIUM",
      "type": "USER_ID",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/trades.js",
      "line": 712,
      "content": "console.log(`üîë Found ${apiKeysResult.rows.length} active API keys for analytics`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/trading.js",
      "line": 2294,
      "content": "console.error(`‚ùå [${requestId}] Authentication failure - no user ID found`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/trading.js",
      "line": 2325,
      "content": "console.log(`üîë [${requestId}] Retrieving user API credentials for trade history`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/trading.js",
      "line": 2334,
      "content": "console.error(`‚ùå [${requestId}] No API credentials found after ${credentialsDuration}ms`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/trading.js",
      "line": 2360,
      "content": "console.log(`‚úÖ [${requestId}] API credentials retrieved in ${credentialsDuration}ms`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/trading.js",
      "line": 2369,
      "content": "console.error(`‚ùå [${requestId}] Failed to retrieve API credentials after ${credentialsDuration}ms:`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/websocket.js",
      "line": 206,
      "content": "console.log(`‚úÖ [${connectionId}] User authenticated: ${payload.sub.substring(0, 8)}...`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/websocket.js",
      "line": 215,
      "content": "console.error(`‚ùå [${connectionId}] Authentication failed:`, error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/websocket.js",
      "line": 451,
      "content": "console.error(`‚ùå [${requestId}] Authentication failure - no authorization header provided`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/websocket.js",
      "line": 460,
      "content": "console.error(`‚ùå [${requestId}] Authentication failure - invalid authorization header format`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/websocket.js",
      "line": 469,
      "content": "console.log(`üîç [${requestId}] Verifying JWT token`, {",
      "severity": "HIGH",
      "type": "TOKEN",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/websocket.js",
      "line": 469,
      "content": "console.log(`üîç [${requestId}] Verifying JWT token`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/websocket.js",
      "line": 488,
      "content": "console.log(`‚úÖ [${requestId}] JWT token verified successfully in ${verifyDuration}ms`, {",
      "severity": "HIGH",
      "type": "TOKEN",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/websocket.js",
      "line": 488,
      "content": "console.log(`‚úÖ [${requestId}] JWT token verified successfully in ${verifyDuration}ms`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "token"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/websocket.js",
      "line": 541,
      "content": "console.log(`üîë [${requestId}] Retrieving user API credentials for live data access`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/websocket.js",
      "line": 550,
      "content": "console.error(`‚ùå [${requestId}] No API credentials found after ${credentialsDuration}ms`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/websocket.js",
      "line": 576,
      "content": "console.log(`‚úÖ [${requestId}] API credentials retrieved in ${credentialsDuration}ms`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/routes/websocket.js",
      "line": 585,
      "content": "console.error(`‚ùå [${requestId}] Failed to retrieve API credentials after ${credentialsDuration}ms:`, {",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/server.js",
      "line": 267,
      "content": "console.log(`üìä Environment: ${process.env.NODE_ENV || 'development'}`);",
      "severity": "HIGH",
      "type": "ENV_VARS",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/server.js",
      "line": 268,
      "content": "console.log(`üåê Health check: http://localhost:${PORT}/health`);",
      "severity": "HIGH",
      "type": "DATABASE_HOST",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/server.js",
      "line": 269,
      "content": "console.log(`üìã API info: http://localhost:${PORT}/api`);",
      "severity": "HIGH",
      "type": "DATABASE_HOST",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/services/complianceService.js",
      "line": 113,
      "content": "console.log(`[AUDIT] ${auditEntry.action} by ${auditEntry.userId}:`, auditEntry.details);",
      "severity": "MEDIUM",
      "type": "USER_ID",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/services/optimizationEngine.js",
      "line": 31,
      "content": "console.log(`Starting optimization for user ${userId} with objective: ${objective}`);",
      "severity": "MEDIUM",
      "type": "USER_ID",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/services/webSocketManager.js",
      "line": 190,
      "content": "console.log(`üîê Sent authentication to ${provider}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/alpacaService.js",
      "line": 488,
      "content": "console.error('Alpaca credential validation error:', error.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/circuitBreakerReset.js",
      "line": 28,
      "content": "console.log(`üîÑ Resetting circuit breaker for ${serviceKey} (was ${breaker.state})`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/circuitBreakerReset.js",
      "line": 38,
      "content": "console.log(`‚úÖ Circuit breaker for ${serviceKey} reset to closed`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/circuitBreakerReset.js",
      "line": 57,
      "content": "console.log(`üîÑ Resetting circuit breaker for ${serviceKey}...`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/circuitBreakerReset.js",
      "line": 62,
      "content": "console.log(`‚ÑπÔ∏è No circuit breaker found for ${serviceKey}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/circuitBreakerReset.js",
      "line": 74,
      "content": "console.log(`‚úÖ Circuit breaker for ${serviceKey} reset: ${oldState} (${oldFailures} failures) ‚Üí closed (0 failures)`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/database-old.js",
      "line": 45,
      "content": "console.log('Getting DB credentials from Secrets Manager...');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/database-old.js",
      "line": 45,
      "content": "console.log('Getting DB credentials from Secrets Manager...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/database-old.js",
      "line": 65,
      "content": "console.log(`‚úÖ Database config loaded from Secrets Manager:`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/database-old.js",
      "line": 65,
      "content": "console.log(`‚úÖ Database config loaded from Secrets Manager:`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/database-old.js",
      "line": 66,
      "content": "console.log(`   üè† Host: ${dbConfig.host}`);",
      "severity": "HIGH",
      "type": "DATABASE_HOST",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/database-old.js",
      "line": 97,
      "content": "console.log(`   üè† Host: ${dbConfig.host}`);",
      "severity": "HIGH",
      "type": "DATABASE_HOST",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/database-old.js",
      "line": 174,
      "content": "console.log(`üîå Attempting to connect to ${config.host}:${config.port}...`);",
      "severity": "HIGH",
      "type": "DATABASE_HOST",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/database-old.js",
      "line": 428,
      "content": "console.log(`üåê Testing network connectivity to ${config.host}:${config.port}...`);",
      "severity": "HIGH",
      "type": "DATABASE_HOST",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/database.js",
      "line": 61,
      "content": "console.log(`   üèóÔ∏è Host: ${dbConfig.host}:${dbConfig.port}`);",
      "severity": "HIGH",
      "type": "DATABASE_HOST",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/database.js",
      "line": 70,
      "content": "console.log('üîß Using hybrid approach: env vars + secret for password');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/database.js",
      "line": 70,
      "content": "console.log('üîß Using hybrid approach: env vars + secret for password');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "password"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/database.js",
      "line": 73,
      "content": "console.log(`üîë Getting password from Secrets Manager: ${secretArn}`);",
      "severity": "CRITICAL",
      "type": "DATABASE_PASSWORD",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/database.js",
      "line": 73,
      "content": "console.log(`üîë Getting password from Secrets Manager: ${secretArn}`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/database.js",
      "line": 73,
      "content": "console.log(`üîë Getting password from Secrets Manager: ${secretArn}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "password"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/database.js",
      "line": 98,
      "content": "console.log('‚úÖ Database config loaded from hybrid env vars + secret');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/database.js",
      "line": 98,
      "content": "console.log('‚úÖ Database config loaded from hybrid env vars + secret');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/database.js",
      "line": 101,
      "content": "console.log(`   üèóÔ∏è Host: ${dbConfig.host}:${dbConfig.port}`);",
      "severity": "HIGH",
      "type": "DATABASE_HOST",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/database.js",
      "line": 114,
      "content": "console.log(`üîë Getting DB credentials from Secrets Manager: ${secretArn}`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/database.js",
      "line": 114,
      "content": "console.log(`üîë Getting DB credentials from Secrets Manager: ${secretArn}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/database.js",
      "line": 122,
      "content": "console.log(`‚úÖ Secrets Manager responded in ${Date.now() - secretStart}ms using method: ${diagnosis.method}`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/database.js",
      "line": 122,
      "content": "console.log(`‚úÖ Secrets Manager responded in ${Date.now() - secretStart}ms using method: ${diagnosis.method}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/database.js",
      "line": 136,
      "content": "console.error('‚ùå Available fields:', Object.keys(secret));",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/database.js",
      "line": 152,
      "content": "console.log('‚úÖ Database config loaded from Secrets Manager successfully');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/database.js",
      "line": 152,
      "content": "console.log('‚úÖ Database config loaded from Secrets Manager successfully');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/database.js",
      "line": 155,
      "content": "console.log(`   üèóÔ∏è Host: ${dbConfig.host}:${dbConfig.port}`);",
      "severity": "HIGH",
      "type": "DATABASE_HOST",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/database.js",
      "line": 169,
      "content": "console.error('   Set DB_HOST, DB_USER, DB_PASSWORD environment variables');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "password"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/databaseConnectionManager.js",
      "line": 75,
      "content": "console.log('üîß Using AWS Secrets Manager fallback');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/databaseConnectionManager.js",
      "line": 75,
      "content": "console.log('üîß Using AWS Secrets Manager fallback');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/databaseConnectionManager.js",
      "line": 92,
      "content": "console.error('‚ùå JSON parsing error for secret:', parseError);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/databaseConnectionManager.js",
      "line": 93,
      "content": "console.error('Secret string length:', response.SecretString?.length);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/databaseConnectionManager.js",
      "line": 94,
      "content": "console.error('Secret string preview:', response.SecretString?.substring(0, 100));",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/databaseConnectionManager.js",
      "line": 107,
      "content": "console.error('‚ùå Failed to get secret from AWS Secrets Manager:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/jwtSecretManager.js",
      "line": 37,
      "content": "console.log('üîê Initializing JWT secret management...');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/jwtSecretManager.js",
      "line": 37,
      "content": "console.log('üîê Initializing JWT secret management...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/jwtSecretManager.js",
      "line": 41,
      "content": "console.log('üîß Using JWT secret from environment variable');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/jwtSecretManager.js",
      "line": 41,
      "content": "console.log('üîß Using JWT secret from environment variable');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/jwtSecretManager.js",
      "line": 50,
      "content": "console.log('üì° Loading JWT secret from AWS Secrets Manager...');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/jwtSecretManager.js",
      "line": 50,
      "content": "console.log('üì° Loading JWT secret from AWS Secrets Manager...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/jwtSecretManager.js",
      "line": 55,
      "content": "console.log('‚úÖ JWT secret loaded from Secrets Manager');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/jwtSecretManager.js",
      "line": 55,
      "content": "console.log('‚úÖ JWT secret loaded from Secrets Manager');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/jwtSecretManager.js",
      "line": 62,
      "content": "console.log(`üîç Attempting to load JWT secret with default name: ${defaultSecretName}`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/jwtSecretManager.js",
      "line": 62,
      "content": "console.log(`üîç Attempting to load JWT secret with default name: ${defaultSecretName}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/jwtSecretManager.js",
      "line": 68,
      "content": "console.log('‚úÖ JWT secret loaded from default secret name');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/jwtSecretManager.js",
      "line": 68,
      "content": "console.log('‚úÖ JWT secret loaded from default secret name');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/jwtSecretManager.js",
      "line": 73,
      "content": "console.log('üÜï No existing JWT secret found, creating new one...');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/jwtSecretManager.js",
      "line": 73,
      "content": "console.log('üÜï No existing JWT secret found, creating new one...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/jwtSecretManager.js",
      "line": 78,
      "content": "console.log('‚úÖ New JWT secret created and cached');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/jwtSecretManager.js",
      "line": 78,
      "content": "console.log('‚úÖ New JWT secret created and cached');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/jwtSecretManager.js",
      "line": 83,
      "content": "console.error('‚ùå Failed to initialize JWT secret:', error.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/jwtSecretManager.js",
      "line": 121,
      "content": "console.log(`üìù Secret not found: ${secretId}`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/jwtSecretManager.js",
      "line": 121,
      "content": "console.log(`üìù Secret not found: ${secretId}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/jwtSecretManager.js",
      "line": 157,
      "content": "console.log(`‚úÖ Created new JWT secret: ${response.ARN}`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/jwtSecretManager.js",
      "line": 157,
      "content": "console.log(`‚úÖ Created new JWT secret: ${response.ARN}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/jwtSecretManager.js",
      "line": 161,
      "content": "console.log(`üí° Consider setting JWT_SECRET_ARN=${response.ARN} in your environment`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/jwtSecretManager.js",
      "line": 161,
      "content": "console.log(`üí° Consider setting JWT_SECRET_ARN=${response.ARN} in your environment`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/jwtSecretManager.js",
      "line": 167,
      "content": "console.error('‚ùå Failed to create JWT secret:', error.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/jwtSecretManager.js",
      "line": 192,
      "content": "console.log('üîÑ Starting JWT secret rotation...');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/jwtSecretManager.js",
      "line": 192,
      "content": "console.log('üîÑ Starting JWT secret rotation...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/jwtSecretManager.js",
      "line": 217,
      "content": "console.log('‚úÖ JWT secret rotated successfully');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/jwtSecretManager.js",
      "line": 217,
      "content": "console.log('‚úÖ JWT secret rotated successfully');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/jwtSecretManager.js",
      "line": 221,
      "content": "console.error('‚ùå JWT secret rotation failed:', error.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/jwtSecretManager.js",
      "line": 307,
      "content": "console.log('üßπ JWT secret cache cleared');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/jwtSecretManager.js",
      "line": 307,
      "content": "console.log('üßπ JWT secret cache cleared');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/keyGenerator.js",
      "line": 103,
      "content": "console.log('üîê Generating cryptographically secure keys...\\n');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/keyGenerator.js",
      "line": 107,
      "content": "console.log('‚úÖ Generated keys with the following entropy:');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/keyGenerator.js",
      "line": 108,
      "content": "console.log(`   ‚Ä¢ API Encryption Key: ${keys.entropy_info.api_encryption_bits} bits`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/keyGenerator.js",
      "line": 109,
      "content": "console.log(`   ‚Ä¢ JWT Secret: ${keys.entropy_info.jwt_secret_bits} bits`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/keyGenerator.js",
      "line": 109,
      "content": "console.log(`   ‚Ä¢ JWT Secret: ${keys.entropy_info.jwt_secret_bits} bits`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/keyGenerator.js",
      "line": 110,
      "content": "console.log(`   ‚Ä¢ Session Secret: ${keys.entropy_info.session_secret_bits} bits\\n`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/keyGenerator.js",
      "line": 110,
      "content": "console.log(`   ‚Ä¢ Session Secret: ${keys.entropy_info.session_secret_bits} bits\\n`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/keyGenerator.js",
      "line": 114,
      "content": "console.log(generateEnvFormat(keys));",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/keyGenerator.js",
      "line": 117,
      "content": "console.log('‚Ä¢ Store these keys in AWS Secrets Manager or secure environment variables');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/keyGenerator.js",
      "line": 117,
      "content": "console.log('‚Ä¢ Store these keys in AWS Secrets Manager or secure environment variables');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/keyGenerator.js",
      "line": 118,
      "content": "console.log('‚Ä¢ Never commit these keys to version control');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/keyGenerator.js",
      "line": 119,
      "content": "console.log('‚Ä¢ Implement key rotation every 90 days');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/keyGenerator.js",
      "line": 120,
      "content": "console.log('‚Ä¢ Use the backup key for seamless rotation');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/keyGenerator.js",
      "line": 121,
      "content": "console.log('‚Ä¢ Monitor key usage and access patterns\\n');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/keyGenerator.js",
      "line": 131,
      "content": "console.log('üß™ Key Validation:');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/keyGenerator.js",
      "line": 137,
      "content": "console.log(`\\n${allValid ? 'üéâ All keys generated successfully!' : '‚ùå Some keys failed validation!'}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 18,
      "content": "console.log('‚úÖ Secrets already loaded');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 18,
      "content": "console.log('‚úÖ Secrets already loaded');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 22,
      "content": "console.log('üîê Loading application secrets...');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 22,
      "content": "console.log('üîê Loading application secrets...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 36,
      "content": "console.log(`‚úÖ All secrets loaded successfully in ${Date.now() - startTime}ms`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 36,
      "content": "console.log(`‚úÖ All secrets loaded successfully in ${Date.now() - startTime}ms`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 39,
      "content": "console.error('‚ùå Failed to load secrets:', error.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 52,
      "content": "console.log('üîë Loading database secrets...');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 52,
      "content": "console.log('üîë Loading database secrets...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 58,
      "content": "console.log('‚úÖ Database secrets accessible');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 58,
      "content": "console.log('‚úÖ Database secrets accessible');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 68,
      "content": "console.log('üîê Loading API key encryption secret...');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 68,
      "content": "console.log('üîê Loading API key encryption secret...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 97,
      "content": "console.log(`‚úÖ Found encryption secret from AWS Secrets Manager`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 97,
      "content": "console.log(`‚úÖ Found encryption secret from AWS Secrets Manager`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 102,
      "content": "console.log(`üîç Secret not found: ${secretName}`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 102,
      "content": "console.log(`üîç Secret not found: ${secretName}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 109,
      "content": "console.log('‚úÖ API key encryption secret loaded and injected');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 109,
      "content": "console.log('‚úÖ API key encryption secret loaded and injected');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 111,
      "content": "console.error('‚ùå CRITICAL: No API key encryption secret found - API key service will be disabled');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 112,
      "content": "console.error('üí° REQUIRED: Create a secret named \"stocks-app/api-key-encryption\" in AWS Secrets Manager');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 118,
      "content": "console.error('‚ùå Failed to load API key encryption secret:', error.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 119,
      "content": "console.error('üí° REQUIRED: Create a secret named \"stocks-app/api-key-encryption\" in AWS Secrets Manager');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 127,
      "content": "console.log('üîê Loading JWT secrets...');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 127,
      "content": "console.log('üîê Loading JWT secrets...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 153,
      "content": "console.log(`‚úÖ Found JWT secret from AWS Secrets Manager`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 153,
      "content": "console.log(`‚úÖ Found JWT secret from AWS Secrets Manager`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 164,
      "content": "console.log('‚úÖ JWT secret loaded and injected');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 164,
      "content": "console.log('‚úÖ JWT secret loaded and injected');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 201,
      "content": "console.log(`üîç Secret not found: ${secretId}`);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 201,
      "content": "console.log(`üîç Secret not found: ${secretId}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 203,
      "content": "console.error(`‚ùå Error getting secret ${secretId}:`, error.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 214,
      "content": "console.log('üîê Validating required production secrets...');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 214,
      "content": "console.log('üîê Validating required production secrets...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 220,
      "content": "console.log('‚úÖ Required secrets validation passed');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 220,
      "content": "console.log('‚úÖ Required secrets validation passed');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/secretsLoader.js",
      "line": 238,
      "content": "console.error('‚ùå CRITICAL: Missing required secrets:', missing);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/simpleApiKeyService.js",
      "line": 35,
      "content": "console.log(`üîê Storing API key for user: ${userId}, provider: ${provider}`);",
      "severity": "MEDIUM",
      "type": "USER_ID",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/simpleApiKeyService.js",
      "line": 35,
      "content": "console.log(`üîê Storing API key for user: ${userId}, provider: ${provider}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/simpleApiKeyService.js",
      "line": 74,
      "content": "console.log(`‚úÖ API key stored successfully for ${provider}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/simpleApiKeyService.js",
      "line": 78,
      "content": "console.error(`‚ùå Failed to store API key for ${provider}:`, error.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/simpleApiKeyService.js",
      "line": 91,
      "content": "console.log(`üîç Retrieving API key for user: ${userId}, provider: ${provider}`);",
      "severity": "MEDIUM",
      "type": "USER_ID",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/simpleApiKeyService.js",
      "line": 91,
      "content": "console.log(`üîç Retrieving API key for user: ${userId}, provider: ${provider}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/simpleApiKeyService.js",
      "line": 110,
      "content": "console.log(`üì≠ No API key found for ${provider}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/simpleApiKeyService.js",
      "line": 115,
      "content": "console.log(`‚úÖ API key retrieved successfully for ${provider}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/simpleApiKeyService.js",
      "line": 127,
      "content": "console.log(`üì≠ No API key found for ${provider}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/simpleApiKeyService.js",
      "line": 131,
      "content": "console.error(`‚ùå Failed to retrieve API key for ${provider}:`, error.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/simpleApiKeyService.js",
      "line": 144,
      "content": "console.log(`üóëÔ∏è Deleting API key for user: ${userId}, provider: ${provider}`);",
      "severity": "MEDIUM",
      "type": "USER_ID",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/simpleApiKeyService.js",
      "line": 144,
      "content": "console.log(`üóëÔ∏è Deleting API key for user: ${userId}, provider: ${provider}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/simpleApiKeyService.js",
      "line": 160,
      "content": "console.log(`‚úÖ API key deleted successfully for ${provider}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/simpleApiKeyService.js",
      "line": 165,
      "content": "console.log(`üì≠ API key not found for deletion: ${provider}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/simpleApiKeyService.js",
      "line": 169,
      "content": "console.error(`‚ùå Failed to delete API key for ${provider}:`, error.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/simpleApiKeyService.js",
      "line": 181,
      "content": "console.log(`üìã Listing API keys for user: ${userId}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/simpleApiKeyService.js",
      "line": 204,
      "content": "console.log(`‚úÖ Found ${availableProviders.length} API keys for user`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/simpleApiKeyService.js",
      "line": 208,
      "content": "console.error(`‚ùå Failed to list API keys:`, error.message);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/timeoutHelper.js",
      "line": 311,
      "content": "console.log(`üîÑ Circuit breaker half-open for ${serviceKey}`);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "key"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda/utils/watchlistAlerts.js",
      "line": 409,
      "content": "console.log('Email notification would be sent:', {",
      "severity": "MEDIUM",
      "type": "EMAIL",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda-config-check.js",
      "line": 39,
      "content": "console.log('Testing Secrets Manager access...');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda-config-check.js",
      "line": 39,
      "content": "console.log('Testing Secrets Manager access...');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda-config-check.js",
      "line": 42,
      "content": "console.log('‚úÖ Secrets Manager access successful');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda-config-check.js",
      "line": 42,
      "content": "console.log('‚úÖ Secrets Manager access successful');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda-config-check.js",
      "line": 53,
      "content": "console.log('Database config from secret:', dbConfig);",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/lambda-config-check.js",
      "line": 53,
      "content": "console.log('Database config from secret:', dbConfig);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/lambda-config-check.js",
      "line": 57,
      "content": "console.error('‚ùå Secrets Manager test failed:', error);",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/security-audit-fix.js",
      "line": 52,
      "content": "console.log('   - AWS Secrets Manager content redacted');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/security-audit-fix.js",
      "line": 52,
      "content": "console.log('   - AWS Secrets Manager content redacted');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/security-audit-fix.js",
      "line": 54,
      "content": "console.log('   - Biometric authentication data masked');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "auth"
    },
    {
      "file": "/home/stocks/algo/webapp/security-audit-fix.js",
      "line": 59,
      "content": "console.log('   - CloudWatch logs no longer expose secrets');",
      "severity": "HIGH",
      "type": "SECRET",
      "matches": 1
    },
    {
      "file": "/home/stocks/algo/webapp/security-audit-fix.js",
      "line": 59,
      "content": "console.log('   - CloudWatch logs no longer expose secrets');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "secret"
    },
    {
      "file": "/home/stocks/algo/webapp/security-audit-fix.js",
      "line": 60,
      "content": "console.log('   - Browser console protected from credential exposure');",
      "severity": "MEDIUM",
      "type": "POTENTIAL_SENSITIVE",
      "keyword": "credential"
    }
  ],
  "recommendations": "## IMMEDIATE ACTION REQUIRED (CRITICAL)\n**8 files with CRITICAL sensitive data exposure:**\n- /home/stocks/algo/debug-secrets-manager.js: 4 critical exposures\n- /home/stocks/algo/test_api_key_workflow.js: 1 critical exposures\n- /home/stocks/algo/webapp/api/routes/settings.js: 2 critical exposures\n- /home/stocks/algo/webapp/api/routes/stocks.js: 3 critical exposures\n- /home/stocks/algo/webapp/api/routes-backup/stocks.js: 3 critical exposures\n- /home/stocks/algo/webapp/lambda/routes/settings.js: 1 critical exposures\n- /home/stocks/algo/webapp/lambda/routes/stocks.js: 3 critical exposures\n- /home/stocks/algo/webapp/lambda/utils/database.js: 1 critical exposures\n\n## HIGH PRIORITY\n**43 files with HIGH severity exposures:**\n- /home/stocks/algo/create-api-key-secret.js: 21 high severity exposures\n- /home/stocks/algo/debug-auth-flow.js: 4 high severity exposures\n- /home/stocks/algo/debug-db-init.js: 4 high severity exposures\n- /home/stocks/algo/debug-ecs-tasks.js: 1 high severity exposures\n- /home/stocks/algo/debug-secrets-manager.js: 24 high severity exposures\n- /home/stocks/algo/debug-user-auth.js: 2 high severity exposures\n- /home/stocks/algo/fix-database-connection-crisis.js: 2 high severity exposures\n- /home/stocks/algo/fix-db-connection-simple.js: 1 high severity exposures\n- /home/stocks/algo/test-enhanced-api-key-validation.js: 1 high severity exposures\n- /home/stocks/algo/test_api_key_workflow.js: 1 high severity exposures\n- /home/stocks/algo/tests/test-portfolio-import-workflow.js: 1 high severity exposures\n- /home/stocks/algo/webapp/api/middleware/auth.js: 5 high severity exposures\n- /home/stocks/algo/webapp/api/routes/health-old.js: 10 high severity exposures\n- /home/stocks/algo/webapp/api/routes/health.js: 1 high severity exposures\n- /home/stocks/algo/webapp/api/routes/settings.js: 2 high severity exposures\n- /home/stocks/algo/webapp/api/routes/websocket.js: 2 high severity exposures\n- /home/stocks/algo/webapp/api/routes-backup/websocket.js: 2 high severity exposures\n- /home/stocks/algo/webapp/api/utils/apiKeyService.js: 3 high severity exposures\n- /home/stocks/algo/webapp/api/utils/database-old.js: 6 high severity exposures\n- /home/stocks/algo/webapp/api/utils/database.js: 3 high severity exposures\n- /home/stocks/algo/webapp/api/utils/keyGenerator.js: 3 high severity exposures\n- /home/stocks/algo/webapp/api/utils/secretsLoader.js: 15 high severity exposures\n- /home/stocks/algo/webapp/dev-server.js: 2 high severity exposures\n- /home/stocks/algo/webapp/frontend/src/components/auth/SessionManager.jsx: 2 high severity exposures\n- /home/stocks/algo/webapp/frontend/src/services/api.js: 1 high severity exposures\n- /home/stocks/algo/webapp/lambda/check-cloudformation-status.js: 1 high severity exposures\n- /home/stocks/algo/webapp/lambda/middleware/auth-backup.js: 5 high severity exposures\n- /home/stocks/algo/webapp/lambda/middleware/auth.js: 7 high severity exposures\n- /home/stocks/algo/webapp/lambda/middleware/authEnhanced.js: 7 high severity exposures\n- /home/stocks/algo/webapp/lambda/routes/diagnostics.js: 3 high severity exposures\n- /home/stocks/algo/webapp/lambda/routes/health-old.js: 10 high severity exposures\n- /home/stocks/algo/webapp/lambda/routes/health.js: 2 high severity exposures\n- /home/stocks/algo/webapp/lambda/routes/settings.js: 2 high severity exposures\n- /home/stocks/algo/webapp/lambda/routes/websocket.js: 2 high severity exposures\n- /home/stocks/algo/webapp/lambda/server.js: 3 high severity exposures\n- /home/stocks/algo/webapp/lambda/utils/database-old.js: 6 high severity exposures\n- /home/stocks/algo/webapp/lambda/utils/database.js: 9 high severity exposures\n- /home/stocks/algo/webapp/lambda/utils/databaseConnectionManager.js: 1 high severity exposures\n- /home/stocks/algo/webapp/lambda/utils/jwtSecretManager.js: 14 high severity exposures\n- /home/stocks/algo/webapp/lambda/utils/keyGenerator.js: 3 high severity exposures\n- /home/stocks/algo/webapp/lambda/utils/secretsLoader.js: 15 high severity exposures\n- /home/stocks/algo/webapp/lambda-config-check.js: 3 high severity exposures\n- /home/stocks/algo/webapp/security-audit-fix.js: 2 high severity exposures\n\n## RECOMMENDED FIXES\n1. **Import SecureLogger**: Add `const { secureLogger } = require(\"./secureLogger\");` to each file\n2. **Replace console.log**: Use `secureLogger.info()`, `secureLogger.error()`, etc.\n3. **Add context**: Include component and operation context for better debugging\n4. **Remove sensitive data**: Ensure no passwords, tokens, or keys are logged"
}