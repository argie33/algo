AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Financial Dashboard API - Serverless Lambda Function

Parameters:
  EnvironmentName:
    Type: String
    Default: dev
    AllowedValues: [dev, staging, prod]
    Description: Environment name for deployment

  DatabaseSecretArn:
    Type: String
    Description: ARN of the Secrets Manager secret containing database credentials
    
  DatabaseEndpoint:
    Type: String
    Description: RDS database endpoint
    
  CognitoUserPoolId:
    Type: String
    Description: Cognito User Pool ID for authentication
    
  CognitoClientId:
    Type: String
    Description: Cognito App Client ID for authentication

Globals:
  Function:
    Timeout: 45
    MemorySize: 512
    Runtime: nodejs18.x
    Environment:
      Variables:
        NODE_ENV: !Ref EnvironmentName
        DB_SECRET_ARN: !Ref DatabaseSecretArn
        DB_ENDPOINT: !Ref DatabaseEndpoint
        WEBAPP_AWS_REGION: !Ref AWS::Region
        COGNITO_USER_POOL_ID: !Ref CognitoUserPoolId
        COGNITO_CLIENT_ID: !Ref CognitoClientId

Resources:
  # API Lambda Function
  ApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'financial-dashboard-api-${EnvironmentName}'
      CodeUri: lambda/
      Handler: index.handler
      Description: Financial Dashboard API Lambda Function
      Policies:
        - SecretsManagerReadWrite
        - VPCAccessPolicy: {}
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue StocksCore-LambdaSecurityGroupId
        SubnetIds:
          - !ImportValue StocksCore-PublicSubnet1Id
          - !ImportValue StocksCore-PublicSubnet2Id
      Events:
        ApiGateway:
          Type: HttpApi
          Properties:
            Path: /{proxy+}
            Method: ANY
            ApiId: !Ref HttpApi

  # HTTP API Gateway
  HttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: !Ref EnvironmentName
      Description: Financial Dashboard HTTP API
      CorsConfiguration:
        AllowOrigins:
          - "*"
        AllowHeaders:
          - "*"
        AllowMethods:
          - "*"
        MaxAge: 600
        AllowCredentials: false


Outputs:
  ApiGatewayUrl:
    Description: HTTP API Gateway URL
    Value: !Sub 'https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/${EnvironmentName}'
    Export:
      Name: !Sub '${AWS::StackName}-ApiUrl'

  LambdaFunctionArn:
    Description: Lambda Function ARN
    Value: !GetAtt ApiFunction.Arn
    Export:
      Name: !Sub '${AWS::StackName}-LambdaArn'

  HttpApiId:
    Description: HTTP API ID
    Value: !Ref HttpApi
    Export:
      Name: !Sub '${AWS::StackName}-HttpApiId'