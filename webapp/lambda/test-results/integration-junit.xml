<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="469" failures="28" errors="0" time="15.016">
  <testsuite name="Portfolio Service Pure Unit Tests" errors="0" failures="0" skipped="0" timestamp="2025-07-21T22:15:30" time="2.73" tests="11">
    <testcase classname="Portfolio Service Pure Unit Tests › Service Initialization" name="should initialize without AlpacaService API keys" time="0.014">
    </testcase>
    <testcase classname="Portfolio Service Pure Unit Tests › Service Initialization" name="should initialize AlpacaService on demand" time="0.003">
    </testcase>
    <testcase classname="Portfolio Service Pure Unit Tests › Service Initialization" name="should not initialize AlpacaService without API keys" time="0.003">
    </testcase>
    <testcase classname="Portfolio Service Pure Unit Tests › Database Operations (Mocked)" name="should retrieve user portfolio with mocked database" time="0.004">
    </testcase>
    <testcase classname="Portfolio Service Pure Unit Tests › Database Operations (Mocked)" name="should update portfolio holdings with mocked database" time="0.004">
    </testcase>
    <testcase classname="Portfolio Service Pure Unit Tests › Database Operations (Mocked)" name="should save portfolio metadata with mocked database" time="0.003">
    </testcase>
    <testcase classname="Portfolio Service Pure Unit Tests › Database Operations (Mocked)" name="should return health check status" time="0.003">
    </testcase>
    <testcase classname="Portfolio Service Pure Unit Tests › AlpacaService Integration" name="should sync portfolio from broker with valid API keys" time="0.004">
    </testcase>
    <testcase classname="Portfolio Service Pure Unit Tests › AlpacaService Integration" name="should fail to sync portfolio without API keys" time="0.034">
    </testcase>
    <testcase classname="Portfolio Service Pure Unit Tests › Error Handling" name="should handle database errors gracefully" time="0.007">
    </testcase>
    <testcase classname="Portfolio Service Pure Unit Tests › Error Handling" name="should handle transaction errors gracefully" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="AdvancedPerformanceAnalytics" errors="0" failures="0" skipped="0" timestamp="2025-07-21T22:15:30" time="2.862" tests="11">
    <testcase classname="AdvancedPerformanceAnalytics › calculateBaseMetrics" name="calculates basic performance metrics correctly" time="0.116">
    </testcase>
    <testcase classname="AdvancedPerformanceAnalytics › calculateBaseMetrics" name="handles empty portfolio history" time="0.002">
    </testcase>
    <testcase classname="AdvancedPerformanceAnalytics › calculateRiskMetrics" name="calculates risk metrics correctly" time="0.003">
    </testcase>
    <testcase classname="AdvancedPerformanceAnalytics › calculateMaxDrawdown" name="calculates maximum drawdown correctly" time="0.002">
    </testcase>
    <testcase classname="AdvancedPerformanceAnalytics › calculateAttributionAnalysis" name="calculates attribution analysis correctly" time="0.003">
    </testcase>
    <testcase classname="AdvancedPerformanceAnalytics › calculateSectorAnalysis" name="calculates sector analysis correctly" time="0.005">
    </testcase>
    <testcase classname="AdvancedPerformanceAnalytics › calculateDiversificationScore" name="calculates diversification score correctly" time="0.004">
    </testcase>
    <testcase classname="AdvancedPerformanceAnalytics › generatePerformanceReport" name="generates comprehensive performance report" time="0.021">
    </testcase>
    <testcase classname="AdvancedPerformanceAnalytics › getPerformanceGrade" name="assigns correct performance grades" time="0.003">
    </testcase>
    <testcase classname="AdvancedPerformanceAnalytics › assessRiskProfile" name="assesses risk profile correctly" time="0.002">
    </testcase>
    <testcase classname="AdvancedPerformanceAnalytics › calculateDaysInPeriod" name="calculates days in period correctly" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Database Utilities Unit Tests" errors="0" failures="19" skipped="0" timestamp="2025-07-21T22:15:30" time="2.894" tests="39">
    <testcase classname="Database Utilities Unit Tests › Database Configuration Management" name="loads configuration from complete environment variables" time="0.019">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Database Configuration Management" name="calculates optimal pool configuration for Lambda environment" time="0.001">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Database Configuration Management" name="handles missing database configuration gracefully" time="0.036">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Database Configuration Management" name="validates SSL configuration settings" time="0">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Connection Pool Management" name="initializes connection pool with proper configuration" time="0.001">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Connection Pool Management" name="tests database connection during initialization" time="0.001">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Connection Pool Management" name="handles connection pool initialization errors" time="0.001">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Connection Pool Management" name="provides pool status and metrics" time="0.003">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Connection Pool Management" name="handles pool warming for Lambda optimization" time="0.001">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Query Execution and Management" name="executes queries through database manager with circuit breaker" time="0.002">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Query Execution and Management" name="handles query errors and provides detailed logging" time="0.002">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Query Execution and Management" name="extracts table names from SQL queries correctly" time="0">
      <failure>TypeError: db.extractTableName is not a function
    at extractTableName (/home/stocks/algo/webapp/lambda/tests/unit/database-utils.test.js:373:27)
    at Array.forEach (&lt;anonymous&gt;)
    at Object.forEach (/home/stocks/algo/webapp/lambda/tests/unit/database-utils.test.js:372:17)
    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Query Execution and Management" name="handles safe queries with table existence validation" time="0.002">
      <failure>Error: expect(received).rejects.toThrow()

Received promise resolved instead of rejected
Resolved to value: undefined
    at expect (/home/stocks/algo/webapp/lambda/node_modules/expect/build/index.js:113:15)
    at Object.expect (/home/stocks/algo/webapp/lambda/tests/unit/database-utils.test.js:402:15)
    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Query Execution and Management" name="rejects safe queries when required tables are missing" time="0.002">
      <failure>Error: expect(received).rejects.toThrow()

Received promise resolved instead of rejected
Resolved to value: {&quot;rows&quot;: [{&quot;test_result&quot;: 1}]}
    at expect (/home/stocks/algo/webapp/lambda/node_modules/expect/build/index.js:113:15)
    at Object.expect (/home/stocks/algo/webapp/lambda/tests/unit/database-utils.test.js:412:13)
    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Transaction Management" name="executes successful transactions with proper commit" time="0.001">
      <failure>Error: Property `transaction` does not exist in the provided object
    at ModuleMocker.spyOn (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:731:13)
    at Object.spyOn (/home/stocks/algo/webapp/lambda/tests/unit/database-utils.test.js:431:12)
    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Transaction Management" name="rolls back transactions on errors" time="0.002">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Transaction Management" name="ensures client release even on transaction errors" time="0">
      <failure>Error: Property `transaction` does not exist in the provided object
    at ModuleMocker.spyOn (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:731:13)
    at Object.spyOn (/home/stocks/algo/webapp/lambda/tests/unit/database-utils.test.js:518:12)
    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Schema Validation and Table Management" name="validates database schema comprehensively" time="0.001">
      <failure>Error: Property `validateDatabaseSchema` does not exist in the provided object
    at ModuleMocker.spyOn (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:731:13)
    at Object.spyOn (/home/stocks/algo/webapp/lambda/tests/unit/database-utils.test.js:562:12)
    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Schema Validation and Table Management" name="checks individual table existence" time="0.001">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Schema Validation and Table Management" name="checks multiple table existence efficiently" time="0.005">
      <failure>Error: expect(received).toMatchObject(expected)

- Expected  - 2
+ Received  + 0

  Object {
-   &quot;orders&quot;: Any&lt;Boolean&gt;,
-   &quot;symbols&quot;: Any&lt;Boolean&gt;,
    &quot;users&quot;: Any&lt;Boolean&gt;,
  }
    at Object.toMatchObject (/home/stocks/algo/webapp/lambda/tests/unit/database-utils.test.js:647:27)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)</failure>
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Schema Validation and Table Management" name="provides detailed schema requirements structure" time="0.001">
      <failure>Error: expect(received).toMatchObject(expected)

Matcher error: received value must be a non-null object

Received has value: undefined
    at Object.toMatchObject (/home/stocks/algo/webapp/lambda/tests/unit/database-utils.test.js:658:30)
    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Schema Validation and Table Management" name="handles schema validation errors gracefully" time="0.001">
      <failure>Error: Property `validateDatabaseSchema` does not exist in the provided object
    at ModuleMocker.spyOn (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:731:13)
    at Object.spyOn (/home/stocks/algo/webapp/lambda/tests/unit/database-utils.test.js:671:12)
    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Health Checks and Monitoring" name="performs comprehensive health checks" time="0.001">
      <failure>TypeError: db.healthCheck is not a function
    at Object.healthCheck (/home/stocks/algo/webapp/lambda/tests/unit/database-utils.test.js:717:33)
    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Health Checks and Monitoring" name="handles circuit breaker open state in health checks" time="0">
      <failure>TypeError: dbWithInvalidConfig.healthCheck is not a function
    at Object.healthCheck (/home/stocks/algo/webapp/lambda/tests/unit/database-utils.test.js:738:48)
    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Health Checks and Monitoring" name="reports unhealthy state for database connection failures" time="0">
      <failure>TypeError: dbWithTimeoutConfig.healthCheck is not a function
    at Object.healthCheck (/home/stocks/algo/webapp/lambda/tests/unit/database-utils.test.js:762:48)
    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Lambda Optimization Features" name="initializes database optimally for Lambda environment" time="0.004">
      <failure>Error: Property `initForLambda` does not exist in the provided object
    at ModuleMocker.spyOn (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:731:13)
    at Object.spyOn (/home/stocks/algo/webapp/lambda/tests/unit/database-utils.test.js:796:12)
    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Lambda Optimization Features" name="handles Lambda initialization failures gracefully" time="0.001">
      <failure>Error: Property `initForLambda` does not exist in the provided object
    at ModuleMocker.spyOn (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:731:13)
    at Object.spyOn (/home/stocks/algo/webapp/lambda/tests/unit/database-utils.test.js:814:12)
    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Lambda Optimization Features" name="calculates appropriate pool sizes for Lambda concurrency" time="0">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Connection Cleanup and Resource Management" name="closes database connections properly" time="0">
      <failure>Error: expect(jest.fn()).toHaveBeenCalled()

Expected number of calls: &gt;= 1
Received number of calls:    0
    at Object.toHaveBeenCalled (/home/stocks/algo/webapp/lambda/tests/unit/database-utils.test.js:848:28)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)</failure>
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Connection Cleanup and Resource Management" name="handles connection cleanup errors gracefully" time="0.001">
      <failure>Error: expect(received).resolves.toBeUndefined()

Received: true
    at Object.toBeUndefined (/home/stocks/algo/webapp/lambda/node_modules/expect/build/index.js:174:22)
    at Object.toBeUndefined (/home/stocks/algo/webapp/lambda/tests/unit/database-utils.test.js:862:51)
    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Connection Cleanup and Resource Management" name="provides pool instance access with validation" time="0.018">
      <failure>Error: expect(received).toThrow(expected)

Expected pattern: /Database not initialized/
Received message: &quot;db.getPool is not a function&quot;

      868 |       
      869 |       // Should throw error when not initialized
    &gt; 870 |       expect(() =&gt; db.getPool()).toThrow(/Database not initialized/);
          |                       ^
      871 |       
      872 |       await db.initializeDatabase();
      873 |       

      at getPool (tests/unit/database-utils.test.js:870:23)
      at Object.&lt;anonymous&gt; (node_modules/expect/build/toThrowMatchers.js:74:11)
      at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:320:21)
      at Object.toThrow (tests/unit/database-utils.test.js:870:34)
    at Object.toThrow (/home/stocks/algo/webapp/lambda/tests/unit/database-utils.test.js:870:34)
    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Performance Monitoring and Metrics" name="tracks pool utilization metrics" time="0.001">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Performance Monitoring and Metrics" name="provides adaptive pool sizing recommendations" time="0.001">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Performance Monitoring and Metrics" name="monitors pool events and connections" time="0.001">
      <failure>Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)

Expected: &quot;connect&quot;, Any&lt;Function&gt;

Number of calls: 0
    at Object.toHaveBeenCalledWith (/home/stocks/algo/webapp/lambda/tests/unit/database-utils.test.js:925:27)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)</failure>
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Edge Cases and Error Scenarios" name="handles malformed SQL queries gracefully" time="0.001">
      <failure>TypeError: database.extractTableName is not a function
    at extractTableName (/home/stocks/algo/webapp/lambda/tests/unit/database-utils.test.js:944:36)
    at Array.forEach (&lt;anonymous&gt;)
    at Object.forEach (/home/stocks/algo/webapp/lambda/tests/unit/database-utils.test.js:943:17)
    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Edge Cases and Error Scenarios" name="handles concurrent initialization requests" time="0.001">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Edge Cases and Error Scenarios" name="validates environment variable data types" time="0.001">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Edge Cases and Error Scenarios" name="handles missing optional configuration gracefully" time="0.001">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Edge Cases and Error Scenarios" name="preserves state consistency during error recovery" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Database Utilities Unit Tests (Industry Standard)" errors="0" failures="0" skipped="0" timestamp="2025-07-21T22:15:30" time="2.887" tests="12">
    <testcase classname="Database Utilities Unit Tests (Industry Standard) › Table Name Extraction" name="extracts table names from simple SELECT queries" time="0.037">
    </testcase>
    <testcase classname="Database Utilities Unit Tests (Industry Standard) › Table Name Extraction" name="extracts table names from INSERT queries" time="0.003">
    </testcase>
    <testcase classname="Database Utilities Unit Tests (Industry Standard) › Table Name Extraction" name="extracts table names from CTE queries" time="0.002">
    </testcase>
    <testcase classname="Database Utilities Unit Tests (Industry Standard) › Table Name Extraction" name="returns &quot;unknown&quot; for malformed queries" time="0.002">
    </testcase>
    <testcase classname="Database Utilities Unit Tests (Industry Standard) › Query Validation" name="validates safe queries with required tables" time="0.002">
    </testcase>
    <testcase classname="Database Utilities Unit Tests (Industry Standard) › Query Validation" name="rejects queries when required tables are missing" time="0.024">
    </testcase>
    <testcase classname="Database Utilities Unit Tests (Industry Standard) › Connection Pool Configuration" name="calculates optimal pool size for Lambda environment" time="0.018">
    </testcase>
    <testcase classname="Database Utilities Unit Tests (Industry Standard) › Connection Pool Configuration" name="uses default configuration for non-Lambda environment" time="0.003">
    </testcase>
    <testcase classname="Database Utilities Unit Tests (Industry Standard) › Transaction Management" name="executes transaction with proper commit" time="0.004">
    </testcase>
    <testcase classname="Database Utilities Unit Tests (Industry Standard) › Transaction Management" name="rolls back transaction on error" time="0.005">
    </testcase>
    <testcase classname="Database Utilities Unit Tests (Industry Standard) › Health Checks" name="reports healthy status when database is responsive" time="0.003">
    </testcase>
    <testcase classname="Database Utilities Unit Tests (Industry Standard) › Health Checks" name="reports unhealthy status on database error" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="BacktestingService REAL Implementation Tests" errors="0" failures="5" skipped="0" timestamp="2025-07-21T22:15:30" time="2.919" tests="13">
    <testcase classname="BacktestingService REAL Implementation Tests › Real Service Initialization" name="initializes with correct strategy mappings from YOUR implementation" time="0.046">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: [Function rsiStrategy]
Received: [Function bound rsiStrategy]
    at Object.toBe (/home/stocks/algo/webapp/lambda/tests/unit/backtesting-service-REAL.test.js:19:61)
    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real Service Initialization" name="has real TechnicalAnalysisService instance" time="0.008">
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real RSI Strategy Implementation" name="RSI strategy generates BUY signal when RSI &lt; 30 (YOUR implementation)" time="0.005">
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real RSI Strategy Implementation" name="RSI strategy generates SELL signal when RSI &gt; 70 (YOUR implementation)" time="0.005">
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real RSI Strategy Implementation" name="RSI strategy returns null when RSI is neutral (30-70 range)" time="0.004">
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real MACD Strategy Implementation" name="MACD strategy detects bullish crossover (YOUR implementation)" time="0.004">
      <failure>ReferenceError: createTestPriceData is not defined
    at Object.createTestPriceData (/home/stocks/algo/webapp/lambda/tests/unit/backtesting-service-REAL.test.js:133:24)
    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real MACD Strategy Implementation" name="MACD strategy handles insufficient data gracefully" time="0.003">
      <failure>ReferenceError: createTestPriceData is not defined
    at Object.createTestPriceData (/home/stocks/algo/webapp/lambda/tests/unit/backtesting-service-REAL.test.js:150:24)
    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real Bollinger Bands Strategy Implementation" name="Bollinger strategy generates BUY when price below lower band" time="0.003">
      <failure>ReferenceError: createTestPriceData is not defined
    at Object.createTestPriceData (/home/stocks/algo/webapp/lambda/tests/unit/backtesting-service-REAL.test.js:177:24)
    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real Backtest Execution" name="runs complete backtest with YOUR actual implementation" time="0.009">
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real Backtest Execution" name="validates input parameters according to YOUR implementation" time="0.019">
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real Backtest Execution" name="processes trade execution with YOUR actual logic" time="0.021">
      <failure>Error: expect(received).toHaveProperty(path)

Expected path: &quot;size&quot;
Received path: []

Received value: {&quot;confidence&quot;: 36.412546579080356, &quot;duration&quot;: 0, &quot;entryDate&quot;: &quot;2023-03-21&quot;, &quot;entryPrice&quot;: 168.28987266576144, &quot;entryReason&quot;: &quot;RSI overbought at 73.64&quot;, &quot;exitDate&quot;: &quot;2023-03-21&quot;, &quot;exitPrice&quot;: 168.62678932775495, &quot;exitReason&quot;: &quot;END_OF_BACKTEST&quot;, &quot;indicator&quot;: &quot;RSI&quot;, &quot;pnl&quot;: -29.33129075983145, &quot;pnlPercent&quot;: -0.601001001000999, &quot;shares&quot;: 29, &quot;type&quot;: &quot;SHORT&quot;}
    at toHaveProperty (/home/stocks/algo/webapp/lambda/tests/unit/backtesting-service-REAL.test.js:297:25)
    at Array.forEach (&lt;anonymous&gt;)
    at Object.forEach (/home/stocks/algo/webapp/lambda/tests/unit/backtesting-service-REAL.test.js:291:23)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)</failure>
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real Portfolio History Tracking" name="tracks portfolio value changes through YOUR implementation" time="0.007">
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real Filter Data by Date" name="filters data by date range using YOUR implementation" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="Database Circuit Breaker Unit Tests" errors="0" failures="0" skipped="0" timestamp="2025-07-21T22:15:30" time="2.93" tests="29">
    <testcase classname="Database Circuit Breaker Unit Tests › Circuit Breaker Initialization" name="initializes with correct default state" time="0.133">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Circuit Breaker Initialization" name="sets production-ready configuration values" time="0.004">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Closed State Operations" name="executes operations successfully when circuit is closed" time="0.004">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Closed State Operations" name="records failure but stays closed below threshold" time="0.019">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Closed State Operations" name="decrements failure count on successful operations" time="0.001">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Closed State Operations" name="opens circuit when failure threshold is reached" time="0.002">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Open State Operations" name="rejects operations immediately when circuit is open" time="0.006">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Open State Operations" name="includes remaining time in error message" time="0.004">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Open State Operations" name="transitions to half-open after recovery timeout" time="0.005">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Half-Open State Operations" name="allows limited operations in half-open state" time="0.002">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Half-Open State Operations" name="closes circuit after sufficient successes" time="0.003">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Half-Open State Operations" name="reopens circuit on failure in half-open state" time="0.003">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Half-Open State Operations" name="tracks success count correctly in half-open state" time="0.002">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Metrics and History Tracking" name="tracks comprehensive metrics" time="0.002">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Metrics and History Tracking" name="maintains request history with limited size" time="0.004">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Metrics and History Tracking" name="records operation duration in history" time="0.053">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Metrics and History Tracking" name="records error details in failure history" time="0.001">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Health Assessment" name="reports healthy when failures are below 50% of threshold" time="0">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Health Assessment" name="reports unhealthy when failures are above 50% of threshold" time="0.001">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Health Assessment" name="reports unhealthy when circuit is not closed" time="0.001">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Health Assessment" name="calculates time to recovery correctly" time="0.001">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Force Reset Functionality" name="resets circuit breaker to clean state" time="0.002">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Force Reset Functionality" name="allows operations after force reset" time="0.001">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Concurrent Operations" name="handles concurrent operations safely" time="0.001">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Concurrent Operations" name="handles mixed concurrent success and failure operations" time="0.001">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Edge Cases and Error Scenarios" name="handles operations that throw non-Error objects" time="0.001">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Edge Cases and Error Scenarios" name="handles operations that return undefined" time="0.001">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Edge Cases and Error Scenarios" name="maintains state consistency during rapid state transitions" time="0.001">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Edge Cases and Error Scenarios" name="handles timestamp edge cases" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Risk Manager Unit Tests" errors="0" failures="0" skipped="0" timestamp="2025-07-21T22:15:30" time="2.935" tests="30">
    <testcase classname="Risk Manager Unit Tests › Position Size Calculation" name="calculates position size with valid parameters" time="0.034">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Position Size Calculation" name="validates input parameters" time="0.053">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Position Size Calculation" name="applies signal confidence adjustments correctly" time="0.003">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Position Size Calculation" name="respects maximum position size limits" time="0.004">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Position Size Calculation" name="handles missing signal gracefully" time="0.004">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Base Position Size Calculation" name="calculates base size from risk per trade" time="0.003">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Base Position Size Calculation" name="adjusts for signal confidence" time="0.006">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Base Position Size Calculation" name="adjusts for signal strength" time="0.006">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Base Position Size Calculation" name="respects maximum position size cap" time="0.009">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Volatility Adjustment" name="reduces position size for high volatility assets" time="0.004">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Volatility Adjustment" name="allows larger position size for low volatility assets" time="0.004">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Volatility Adjustment" name="handles missing volatility data gracefully" time="0.004">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Volatility Adjustment" name="applies volatility adjustment bounds" time="0.004">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Portfolio Risk Assessment" name="calculates comprehensive risk metrics" time="0.006">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Portfolio Risk Assessment" name="identifies high concentration risk" time="0.003">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Portfolio Risk Assessment" name="identifies high correlation risk" time="0.004">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Concentration Limits" name="applies concentration limits correctly" time="0.003">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Concentration Limits" name="allows position when concentration is within limits" time="0.003">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Concentration Limits" name="handles new positions correctly" time="0.004">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Sector Limits" name="applies sector concentration limits" time="0.003">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Sector Limits" name="allows position in underweight sectors" time="0.004">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Risk Recommendation Generation" name="generates conservative recommendation for high risk" time="0.004">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Risk Recommendation Generation" name="generates positive recommendation for low risk" time="0.003">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Risk Recommendation Generation" name="provides actionable recommendations" time="0.004">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Error Handling" name="handles database errors gracefully" time="0.004">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Error Handling" name="handles invalid volatility data" time="0.008">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Error Handling" name="handles empty portfolio composition" time="0.004">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Performance and Edge Cases" name="completes position sizing calculation within reasonable time" time="0.004">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Performance and Edge Cases" name="handles very small portfolio values" time="0.003">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Performance and Edge Cases" name="handles very large portfolio values" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="PortfolioService REAL Implementation Tests" errors="0" failures="0" skipped="0" timestamp="2025-07-21T22:15:30" time="2.956" tests="14">
    <testcase classname="PortfolioService REAL Implementation Tests › Real Database Portfolio Operations" name="getUserPortfolio returns correct structure for YOUR implementation" time="0.014">
    </testcase>
    <testcase classname="PortfolioService REAL Implementation Tests › Real Database Portfolio Operations" name="updatePortfolioHoldings performs real UPSERT operations per YOUR implementation" time="0.005">
    </testcase>
    <testcase classname="PortfolioService REAL Implementation Tests › Real Database Portfolio Operations" name="real portfolio calculations match YOUR mathematical implementation" time="0.005">
    </testcase>
    <testcase classname="PortfolioService REAL Implementation Tests › Real Portfolio Performance Calculations" name="getPortfolioPerformance calculates real financial metrics per YOUR implementation" time="0.004">
    </testcase>
    <testcase classname="PortfolioService REAL Implementation Tests › Real Portfolio Performance Calculations" name="real volatility and Sharpe ratio calculations match financial formulas" time="0.003">
    </testcase>
    <testcase classname="PortfolioService REAL Implementation Tests › Real Portfolio Optimization Integration" name="getPortfolioForOptimization formats data correctly for YOUR optimization algorithms" time="0.004">
    </testcase>
    <testcase classname="PortfolioService REAL Implementation Tests › Real Portfolio Optimization Integration" name="saveOptimizationResults stores real optimization data per YOUR implementation" time="0.007">
    </testcase>
    <testcase classname="PortfolioService REAL Implementation Tests › Real AlpacaService Integration Logic" name="getAlpacaService initializes correctly with YOUR implementation" time="0.011">
    </testcase>
    <testcase classname="PortfolioService REAL Implementation Tests › Real AlpacaService Integration Logic" name="syncPortfolioFromBroker handles broker data transformation per YOUR implementation" time="0.002">
    </testcase>
    <testcase classname="PortfolioService REAL Implementation Tests › Real AlpacaService Integration Logic" name="syncPortfolioFromBroker handles broker API errors per YOUR error handling" time="0.001">
    </testcase>
    <testcase classname="PortfolioService REAL Implementation Tests › Real Portfolio History and Analysis" name="getPortfolioHistory returns real database historical data per YOUR implementation" time="0.002">
    </testcase>
    <testcase classname="PortfolioService REAL Implementation Tests › Real Error Handling and Edge Cases" name="handles invalid user ID gracefully per YOUR implementation" time="0.001">
    </testcase>
    <testcase classname="PortfolioService REAL Implementation Tests › Real Error Handling and Edge Cases" name="validates required portfolio fields per YOUR validation logic" time="0.002">
    </testcase>
    <testcase classname="PortfolioService REAL Implementation Tests › Real Health Check Implementation" name="healthCheck returns correct status per YOUR implementation" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="OptimizationEngine REAL Tests" errors="0" failures="0" skipped="0" timestamp="2025-07-21T22:15:30" time="2.97" tests="8">
    <testcase classname="OptimizationEngine REAL Tests › Real Portfolio Math Integration" name="generates realistic mock price data with proper format" time="0.065">
    </testcase>
    <testcase classname="OptimizationEngine REAL Tests › Real Portfolio Math Integration" name="calculates returns matrix from real price data" time="0.021">
    </testcase>
    <testcase classname="OptimizationEngine REAL Tests › Real Portfolio Math Integration" name="REAL covariance matrix calculation with actual data" time="0.003">
    </testcase>
    <testcase classname="OptimizationEngine REAL Tests › Real Rebalancing Calculations" name="calculates real rebalancing with actual portfolio data" time="0.008">
    </testcase>
    <testcase classname="OptimizationEngine REAL Tests › Real Portfolio Insights Generation" name="generates real insights from actual optimization data" time="0.002">
    </testcase>
    <testcase classname="OptimizationEngine REAL Tests › Real Demo Portfolio Logic" name="demo portfolio has realistic financial data structure" time="0.004">
    </testcase>
    <testcase classname="OptimizationEngine REAL Tests › Real Data Quality Assessment" name="assesses actual price data quality correctly" time="0.002">
    </testcase>
    <testcase classname="OptimizationEngine REAL Tests › Real Error Handling" name="handles missing portfolio data gracefully with real fallback" time="0.061">
    </testcase>
  </testsuite>
  <testsuite name="PortfolioService REAL Implementation Tests" errors="0" failures="0" skipped="0" timestamp="2025-07-21T22:15:30" time="2.968" tests="14">
    <testcase classname="PortfolioService REAL Implementation Tests › Real Database Portfolio Operations" name="getUserPortfolio returns correct structure for YOUR implementation" time="0.01">
    </testcase>
    <testcase classname="PortfolioService REAL Implementation Tests › Real Database Portfolio Operations" name="updatePortfolioHoldings performs real UPSERT operations per YOUR implementation" time="0.003">
    </testcase>
    <testcase classname="PortfolioService REAL Implementation Tests › Real Database Portfolio Operations" name="real portfolio calculations match YOUR mathematical implementation" time="0.003">
    </testcase>
    <testcase classname="PortfolioService REAL Implementation Tests › Real Portfolio Performance Calculations" name="getPortfolioPerformance calculates real financial metrics per YOUR implementation" time="0.003">
    </testcase>
    <testcase classname="PortfolioService REAL Implementation Tests › Real Portfolio Performance Calculations" name="real volatility and Sharpe ratio calculations match financial formulas" time="0.003">
    </testcase>
    <testcase classname="PortfolioService REAL Implementation Tests › Real Portfolio Optimization Integration" name="getPortfolioForOptimization formats data correctly for YOUR optimization algorithms" time="0.003">
    </testcase>
    <testcase classname="PortfolioService REAL Implementation Tests › Real Portfolio Optimization Integration" name="saveOptimizationResults stores real optimization data per YOUR implementation" time="0.003">
    </testcase>
    <testcase classname="PortfolioService REAL Implementation Tests › Real AlpacaService Integration Logic" name="getAlpacaService initializes correctly with YOUR implementation" time="0.017">
    </testcase>
    <testcase classname="PortfolioService REAL Implementation Tests › Real AlpacaService Integration Logic" name="syncPortfolioFromBroker handles broker data transformation per YOUR implementation" time="0.002">
    </testcase>
    <testcase classname="PortfolioService REAL Implementation Tests › Real AlpacaService Integration Logic" name="syncPortfolioFromBroker handles broker API errors per YOUR error handling" time="0.002">
    </testcase>
    <testcase classname="PortfolioService REAL Implementation Tests › Real Portfolio History and Analysis" name="getPortfolioHistory returns real database historical data per YOUR implementation" time="0.002">
    </testcase>
    <testcase classname="PortfolioService REAL Implementation Tests › Real Error Handling and Edge Cases" name="handles invalid user ID gracefully per YOUR implementation" time="0.002">
    </testcase>
    <testcase classname="PortfolioService REAL Implementation Tests › Real Error Handling and Edge Cases" name="validates required portfolio fields per YOUR validation logic" time="0.002">
    </testcase>
    <testcase classname="PortfolioService REAL Implementation Tests › Real Health Check Implementation" name="healthCheck returns correct status per YOUR implementation" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Optimization Engine Unit Tests" errors="0" failures="1" skipped="0" timestamp="2025-07-21T22:15:30" time="2.977" tests="36">
    <testcase classname="Optimization Engine Unit Tests › Service Initialization" name="initializes with default risk-free rate" time="0.025">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Service Initialization" name="has all required methods" time="0.009">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Current Portfolio Retrieval" name="retrieves portfolio from database successfully" time="0.011">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Current Portfolio Retrieval" name="returns demo portfolio when database query fails" time="0.064">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Current Portfolio Retrieval" name="returns demo portfolio when no holdings found" time="0.003">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Current Portfolio Retrieval" name="calculates portfolio weights correctly" time="0.007">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Demo Portfolio" name="generates consistent demo portfolio" time="0.003">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Demo Portfolio" name="demo portfolio weights sum to 1" time="0.003">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Optimization Universe" name="creates universe from current holdings" time="0.003">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Optimization Universe" name="includes additional assets for diversification" time="0.003">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Optimization Universe" name="respects include and exclude assets" time="0.003">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Optimization Universe" name="limits universe size to 20 assets" time="0.004">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Historical Price Data" name="generates mock price data for symbols" time="0.006">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Historical Price Data" name="generates realistic price movements" time="0.019">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Returns Matrix Calculation" name="calculates returns matrix from price data" time="0.004">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Returns Matrix Calculation" name="handles empty price data" time="0.003">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Returns Matrix Calculation" name="handles single price point" time="0.002">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Rebalancing Calculations" name="calculates rebalancing trades correctly" time="0.002">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Rebalancing Calculations" name="ignores small weight differences" time="0.002">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Rebalancing Calculations" name="sorts trades by priority and value" time="0.002">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Optimization Insights" name="generates risk warning for high volatility" time="0.002">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Optimization Insights" name="generates diversification insight for small portfolios" time="0.002">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Optimization Insights" name="generates positive insight for high Sharpe ratio" time="0.002">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Optimization Insights" name="generates concentration warning for large positions" time="0.001">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Formatting Functions" name="formats weights correctly" time="0.002">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Formatting Functions" name="formats portfolio summary correctly" time="0.003">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Formatting Functions" name="formats correlation matrix correctly" time="0.003">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Data Quality Assessment" name="assesses high-quality data correctly" time="0.002">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Data Quality Assessment" name="identifies missing data points" time="0.005">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Fallback Optimization" name="generates fallback optimization with demo data" time="0.004">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Fallback Optimization" name="uses equal weights for equalWeight objective" time="0.003">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Fallback Optimization" name="generates mock efficient frontier" time="0.014">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Full Optimization Integration" name="runs complete optimization successfully" time="0.021">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Full Optimization Integration" name="falls back to demo optimization on error" time="0.02">
      <failure>Error: expect(received).toHaveLength(expected)

Expected length: 1
Received length: 0
Received array:  []
    at Object.toHaveLength (/home/stocks/algo/webapp/lambda/tests/unit/optimization-engine.test.js:695:31)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)</failure>
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Mock Price Data Generation" name="generates price data with correct structure" time="0.007">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Mock Price Data Generation" name="applies different volatility for different assets" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="PortfolioMath REAL Financial Calculations" errors="0" failures="3" skipped="0" timestamp="2025-07-21T22:15:30" time="2.975" tests="10">
    <testcase classname="PortfolioMath REAL Financial Calculations › Real Covariance Matrix Calculations" name="calculates covariance matrix from real return data" time="0.141">
    </testcase>
    <testcase classname="PortfolioMath REAL Financial Calculations › Real Covariance Matrix Calculations" name="handles edge cases in real covariance calculation" time="0.003">
    </testcase>
    <testcase classname="PortfolioMath REAL Financial Calculations › Real Covariance Matrix Calculations" name="throws real error for invalid input" time="0.032">
    </testcase>
    <testcase classname="PortfolioMath REAL Financial Calculations › Real Expected Returns Calculations" name="calculates simple average expected returns from real data" time="0.003">
    </testcase>
    <testcase classname="PortfolioMath REAL Financial Calculations › Real Expected Returns Calculations" name="calculates EWMA expected returns with real decay" time="0.002">
    </testcase>
    <testcase classname="PortfolioMath REAL Financial Calculations › Real Correlation Matrix Calculations" name="calculates real correlation from covariance matrix" time="0.004">
    </testcase>
    <testcase classname="PortfolioMath REAL Financial Calculations › Real Mean Variance Optimization" name="performs real portfolio optimization with actual constraints" time="0.029">
      <failure>Error: expect(received).toBeCloseTo(expected, precision)

Expected: 0.565685424949238
Received: 0.7071067811865476

Expected precision:    8
Expected difference: &lt; 0.000000005
Received difference:   0.14142135623730956
    at Object.toBeCloseTo (/home/stocks/algo/webapp/lambda/tests/unit/portfolioMath-REAL.test.js:209:40)
    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="PortfolioMath REAL Financial Calculations › Real Mean Variance Optimization" name="handles different optimization objectives" time="0.009">
    </testcase>
    <testcase classname="PortfolioMath REAL Financial Calculations › Real Risk Metrics Calculations" name="calculates real portfolio risk metrics" time="0.003">
      <failure>Error: expect(received).toHaveProperty(path)

Expected path: &quot;beta&quot;
Received path: []

Received value: {&quot;expectedReturn&quot;: 0.10200000000000001, &quot;sharpeRatio&quot;: 0.7072427501871672, &quot;variance&quot;: 0.0208, &quot;volatility&quot;: 0.14422205101855956}
    at Object.toHaveProperty (/home/stocks/algo/webapp/lambda/tests/unit/portfolioMath-REAL.test.js:260:27)
    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="PortfolioMath REAL Financial Calculations › Real Efficient Frontier Generation" name="generates real efficient frontier points" time="0.012">
      <failure>Error: expect(received).toHaveProperty(path)

Expected path: &quot;weights&quot;
Received path: []

Received value: {&quot;expectedReturn&quot;: 0.10250000000000001, &quot;sharpeRatio&quot;: 0.7473096819909015, &quot;volatility&quot;: 0.13715866724345202}
    at toHaveProperty (/home/stocks/algo/webapp/lambda/tests/unit/portfolioMath-REAL.test.js:303:23)
    at Array.forEach (&lt;anonymous&gt;)
    at Object.forEach (/home/stocks/algo/webapp/lambda/tests/unit/portfolioMath-REAL.test.js:299:16)
    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
  </testsuite>
  <testsuite name="Technical Analysis Service Unit Tests" errors="0" failures="0" skipped="0" timestamp="2025-07-21T22:15:30" time="3.014" tests="39">
    <testcase classname="Technical Analysis Service Unit Tests › Service Initialization" name="initializes with correct indicators" time="0.126">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Service Initialization" name="indicators are callable functions" time="0.004">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Multiple Indicators Calculation" name="calculates multiple indicators successfully" time="0.006">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Multiple Indicators Calculation" name="handles invalid data input" time="0.05">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Multiple Indicators Calculation" name="handles unknown indicators gracefully" time="0.003">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Multiple Indicators Calculation" name="continues calculation when one indicator fails" time="0.003">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › RSI (Relative Strength Index)" name="calculates RSI with default period" time="0.023">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › RSI (Relative Strength Index)" name="calculates RSI with custom period" time="0.009">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › RSI (Relative Strength Index)" name="generates correct RSI signals" time="0.002">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › RSI (Relative Strength Index)" name="requires sufficient data" time="0.002">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › RSI (Relative Strength Index)" name="handles flat price data" time="0.004">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › MACD (Moving Average Convergence Divergence)" name="calculates MACD with default parameters" time="0.009">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › MACD (Moving Average Convergence Divergence)" name="calculates MACD with custom parameters" time="0.003">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › MACD (Moving Average Convergence Divergence)" name="generates MACD buy/sell signals" time="0.004">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › MACD (Moving Average Convergence Divergence)" name="requires sufficient data for MACD" time="0.002">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Bollinger Bands" name="calculates Bollinger Bands with default parameters" time="0.009">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Bollinger Bands" name="validates band relationships" time="0.002">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Bollinger Bands" name="generates Bollinger Band signals" time="0.002">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Bollinger Bands" name="calculates with custom standard deviation" time="0.003">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Simple Moving Average (SMA)" name="calculates SMA correctly" time="0.002">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Simple Moving Average (SMA)" name="handles period larger than data length" time="0.002">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Simple Moving Average (SMA)" name="calculates SMA with timestamps" time="0.002">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Exponential Moving Average (EMA)" name="calculates EMA correctly" time="0.004">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Exponential Moving Average (EMA)" name="EMA responds faster than SMA to price changes" time="0.003">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Exponential Moving Average (EMA)" name="requires sufficient data" time="0.002">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Stochastic Oscillator" name="calculates Stochastic with default parameters" time="0.009">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Stochastic Oscillator" name="validates Stochastic value ranges" time="0.008">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Stochastic Oscillator" name="generates overbought/oversold signals" time="0.002">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Williams %R" name="calculates Williams %R correctly" time="0.009">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Williams %R" name="generates Williams %R signals" time="0.002">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Williams %R" name="requires sufficient data" time="0.002">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Edge Cases and Error Handling" name="handles missing price data fields" time="0.003">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Edge Cases and Error Handling" name="handles zero and negative prices" time="0.002">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Edge Cases and Error Handling" name="handles single data point" time="0.002">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Edge Cases and Error Handling" name="handles very large datasets efficiently" time="0.008">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Signal Generation" name="generates consistent signals across indicators" time="0.003">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Signal Generation" name="signal timestamps match data timestamps" time="0.003">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Mathematical Accuracy" name="SMA calculation matches manual calculation" time="0.001">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Mathematical Accuracy" name="RSI boundary conditions" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="BacktestingService REAL Implementation Tests" errors="0" failures="0" skipped="0" timestamp="2025-07-21T22:15:30" time="2.989" tests="25">
    <testcase classname="BacktestingService REAL Implementation Tests › Real Service Initialization" name="initializes with YOUR actual strategy mappings" time="0.031">
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real Service Initialization" name="has real TechnicalAnalysisService instance" time="0.003">
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real Service Initialization" name="returns available strategies matching YOUR implementation" time="0.008">
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real RSI Strategy Implementation" name="RSI strategy generates BUY signal when RSI &lt; 30 using YOUR implementation" time="0.005">
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real RSI Strategy Implementation" name="RSI strategy generates SELL signal when RSI &gt; 70 using YOUR implementation" time="0.005">
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real RSI Strategy Implementation" name="RSI strategy returns null when RSI is neutral (30-70 range)" time="0.004">
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real MACD Strategy Implementation" name="MACD strategy detects bullish crossover using YOUR implementation" time="0.005">
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real MACD Strategy Implementation" name="MACD strategy handles insufficient data gracefully" time="0.004">
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real Bollinger Bands Strategy Implementation" name="Bollinger strategy generates BUY when price below lower band" time="0.006">
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real Mean Reversion Strategy Implementation" name="Mean reversion strategy detects oversold conditions" time="0.005">
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real Mean Reversion Strategy Implementation" name="Mean reversion strategy detects overbought conditions" time="0.004">
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real Momentum Strategy Implementation" name="Momentum strategy detects bullish momentum (SMA10 &gt; SMA20)" time="0.005">
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real Backtest Execution" name="runs complete backtest with YOUR actual implementation" time="0.049">
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real Backtest Execution" name="validates input parameters according to YOUR implementation" time="0.048">
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real Backtest Execution" name="processes trade execution with YOUR actual logic" time="0.002">
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real Portfolio History Tracking" name="tracks portfolio value changes through YOUR implementation" time="0.007">
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real Filter Data by Date" name="filters data by date range using YOUR implementation" time="0.003">
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real Strategy Descriptions" name="provides accurate strategy descriptions matching YOUR implementation" time="0.001">
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real Multi-Indicator Strategy Implementation" name="Multi-indicator strategy combines YOUR real technical analysis" time="0.002">
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real Trade Execution Logic" name="executeEntry creates positions according to YOUR implementation" time="0.002">
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real Trade Execution Logic" name="executeExit closes positions and records trades per YOUR implementation" time="0.002">
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real Exit Conditions Logic" name="checkExitConditions triggers stop loss per YOUR implementation" time="0.001">
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real Exit Conditions Logic" name="checkExitConditions triggers take profit per YOUR implementation" time="0.001">
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real Portfolio Value Calculation" name="calculatePortfolioValue computes correctly per YOUR implementation" time="0.001">
    </testcase>
    <testcase classname="BacktestingService REAL Implementation Tests › Real Portfolio Value Calculation" name="calculatePortfolioValue handles short positions per YOUR implementation" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Circuit Breaker Utilities Unit Tests" errors="0" failures="0" skipped="0" timestamp="2025-07-21T22:15:30" time="3.023" tests="19">
    <testcase classname="Circuit Breaker Utilities Unit Tests › TimeoutHelper Circuit Breaker" name="should initialize with production-ready thresholds" time="0.125">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › TimeoutHelper Circuit Breaker" name="should track failure counts correctly" time="0.014">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › TimeoutHelper Circuit Breaker" name="should transition states correctly (closed -&gt; open -&gt; half-open -&gt; closed)" time="0.021">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › TimeoutHelper Circuit Breaker" name="should record event history correctly" time="0.007">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › TimeoutHelper Circuit Breaker" name="should calculate metrics correctly" time="0.008">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › TimeoutHelper Circuit Breaker" name="should handle recent activity tracking" time="0.004">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › TimeoutHelper Circuit Breaker" name="should calculate risk levels accurately" time="0.015">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › DatabaseCircuitBreaker Class" name="should initialize with correct production configuration" time="0.006">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › DatabaseCircuitBreaker Class" name="should execute operations and track results" time="0.003">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › DatabaseCircuitBreaker Class" name="should handle operation failures correctly" time="0.004">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › DatabaseCircuitBreaker Class" name="should open circuit after threshold failures" time="0.015">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › DatabaseCircuitBreaker Class" name="should provide detailed status information" time="0.007">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › DatabaseCircuitBreaker Class" name="should force reset correctly" time="0.045">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › Circuit Breaker Reset Utilities" name="should reset all circuit breakers" time="0.019">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › Circuit Breaker Reset Utilities" name="should reset specific circuit breaker" time="0.006">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › Circuit Breaker Reset Utilities" name="should get comprehensive circuit breaker status" time="0.009">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › Circuit Breaker Reset Utilities" name="should handle non-existent circuit breaker reset gracefully" time="0.007">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › Performance and Memory Management" name="should limit history size to prevent memory leaks" time="0.004">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › Performance and Memory Management" name="should handle rapid state changes efficiently" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="Authentication Middleware Unit Tests" errors="0" failures="0" skipped="0" timestamp="2025-07-21T22:15:30" time="3.053" tests="33">
    <testcase classname="Authentication Middleware Unit Tests › Development Mode Authentication" name="allows access without token in development mode" time="0.179">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Development Mode Authentication" name="validates development JWT tokens correctly" time="0.013">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Development Mode Authentication" name="generates valid development tokens" time="0.006">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Development Mode Authentication" name="falls back to development mode when Cognito is unavailable" time="0.003">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Production Mode Authentication" name="requires authentication token in production mode" time="0.005">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Production Mode Authentication" name="rejects invalid tokens in production mode" time="0.003">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Production Mode Authentication" name="handles malformed authorization headers" time="0.003">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › JWT Token Validation" name="handles expired JWT tokens" time="0.005">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › JWT Token Validation" name="validates JWT token structure and claims" time="0.009">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › JWT Token Validation" name="handles malformed JWT tokens gracefully" time="0.004">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Role-Based Authorization" name="allows access when user has required role" time="0.004">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Role-Based Authorization" name="allows access when user is in required group" time="0.002">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Role-Based Authorization" name="denies access when user lacks required role" time="0.007">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Role-Based Authorization" name="denies access when user is not authenticated" time="0.003">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Role-Based Authorization" name="handles multiple role requirements" time="0.002">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Optional Authentication" name="continues without authentication when no token provided" time="0.002">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Optional Authentication" name="authenticates when valid token is provided" time="0.005">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Optional Authentication" name="continues silently when authentication fails" time="0.003">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Request Context Enhancement" name="enriches user object with request context" time="0.003">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Request Context Enhancement" name="generates request ID when not provided" time="0.003">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Request Context Enhancement" name="handles missing client IP gracefully" time="0.002">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Cognito Configuration Management" name="loads configuration from environment variables" time="0.002">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Cognito Configuration Management" name="handles missing Cognito configuration gracefully" time="0.002">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Cognito Configuration Management" name="uses default region when not specified" time="0.001">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Authentication Status Endpoint" name="returns comprehensive authentication status" time="0.003">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Authentication Status Endpoint" name="handles status check errors gracefully" time="0.002">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Error Handling and Edge Cases" name="handles network errors during token verification" time="0.022">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Error Handling and Edge Cases" name="handles concurrent authentication requests safely" time="0.002">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Error Handling and Edge Cases" name="preserves original user data when authentication fails in development" time="0.001">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Error Handling and Edge Cases" name="handles missing authorization header gracefully" time="0.001">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Token Generation and Validation" name="generates tokens with correct expiration" time="0.002">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Token Generation and Validation" name="generates unique tokens for different users" time="0.003">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Token Generation and Validation" name="uses custom JWT secret when provided" time="0.022">
    </testcase>
  </testsuite>
  <testsuite name="Enhanced Authentication Service Unit Tests" errors="0" failures="0" skipped="0" timestamp="2025-07-21T22:15:30" time="3.169" tests="37">
    <testcase classname="Enhanced Authentication Service Unit Tests › User Validation" name="validates credentials for local user successfully" time="0.022">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › User Validation" name="rejects invalid password" time="0.005">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › User Validation" name="handles Cognito user validation" time="0.007">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › User Validation" name="handles user not found" time="0.002">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › User Validation" name="handles user without password hash" time="0.003">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › User Management" name="retrieves user by ID successfully" time="0.004">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › User Management" name="returns null for non-existent user" time="0.004">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › User Management" name="creates new user successfully" time="0.013">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Session Management" name="stores session in database successfully" time="0.007">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Session Management" name="updates session in database successfully" time="0.005">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Session Management" name="retrieves session from database successfully" time="0.005">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Session Management" name="returns null for non-existent session" time="0.003">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Session Management" name="invalidates session in database successfully" time="0.005">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Security Event Logging" name="stores security event successfully" time="0.005">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Security Event Logging" name="handles security event logging errors gracefully" time="0.032">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › MFA Code Sending" name="sends SMS code in development mode" time="0.004">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › MFA Code Sending" name="sends email code in development mode" time="0.003">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › MFA Code Sending" name="sends SMS code using AWS SNS in production" time="0.163">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › MFA Code Sending" name="sends email code using AWS SES in production" time="0.079">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › MFA Code Sending" name="handles SMS sending failure and logs security event" time="0.023">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › JWT Token Management" name="generates access token with correct payload" time="0.004">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › JWT Token Management" name="generates refresh token" time="0.003">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › JWT Token Management" name="validates JWT token successfully" time="0.003">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › JWT Token Management" name="rejects invalid JWT token" time="0.002">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › JWT Token Management" name="checks if token is blacklisted" time="0.001">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Session Management" name="creates session successfully" time="0.002">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Session Management" name="validates active session" time="0.002">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Session Management" name="rejects expired session" time="0.002">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Session Management" name="invalidates session successfully" time="0.002">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Rate Limiting" name="allows requests within rate limit" time="0.002">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Rate Limiting" name="blocks requests exceeding rate limit" time="0.001">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Rate Limiting" name="tracks login attempts correctly" time="0.005">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Rate Limiting" name="locks account after max failed attempts" time="0.003">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Rate Limiting" name="resets login attempts after successful login" time="0.005">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Service Statistics" name="returns comprehensive statistics" time="0.002">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Error Handling" name="handles database connection errors gracefully" time="0.002">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Error Handling" name="handles invalid JSON in session data" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Universal Error Handler Unit Tests" errors="0" failures="0" skipped="0" timestamp="2025-07-21T22:15:30" time="4.034" tests="48">
    <testcase classname="Universal Error Handler Unit Tests › Error Categorization" name="categorizes circuit breaker errors correctly" time="0.16">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Categorization" name="categorizes database errors correctly" time="0.004">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Categorization" name="categorizes timeout errors correctly" time="0.003">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Categorization" name="categorizes authentication errors correctly" time="0.003">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Categorization" name="categorizes authorization errors correctly" time="0.005">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Categorization" name="categorizes validation errors correctly" time="0.002">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Categorization" name="categorizes external service errors correctly" time="0.002">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Categorization" name="categorizes rate limit errors correctly" time="0.003">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Categorization" name="categorizes business logic errors correctly" time="0.003">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Categorization" name="categorizes server errors correctly" time="0.003">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Categorization" name="returns UNKNOWN_ERROR for unrecognized errors" time="0.001">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Severity Determination" name="assigns CRITICAL severity to database and server errors" time="0.002">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Severity Determination" name="assigns HIGH severity to external service and circuit breaker errors" time="0.002">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Severity Determination" name="assigns MEDIUM severity to auth and timeout errors" time="0.001">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Severity Determination" name="assigns LOW severity to validation and rate limit errors" time="0.002">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Severity Determination" name="returns UNKNOWN for unrecognized error types" time="0.001">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Recoverability Assessment" name="identifies recoverable errors correctly" time="0.003">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Recoverability Assessment" name="identifies non-recoverable errors correctly" time="0.001">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › User Message Generation" name="generates appropriate user messages for each category" time="0.002">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › User Message Generation" name="uses custom message for business logic errors" time="0.001">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › User Message Generation" name="falls back to default message for unknown categories" time="0.001">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Context Enrichment" name="enriches error with comprehensive context" time="0.032">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Context Enrichment" name="handles missing user context gracefully" time="0.01">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Context Enrichment" name="calculates performance metrics correctly" time="0.003">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Response Formatting" name="formats error response with correct structure" time="0.003">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Response Formatting" name="includes development details when NODE_ENV is development" time="0.003">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Response Formatting" name="excludes development details in production" time="0.003">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Response Formatting" name="includes retry information for recoverable errors" time="0.003">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Response Formatting" name="maps status codes correctly by category" time="0.004">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Async Handler Wrapper" name="catches async errors and passes them to next" time="0.004">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Async Handler Wrapper" name="handles non-promise functions gracefully" time="0.002">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Async Handler Wrapper" name="handles functions that return non-promise values" time="0.002">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Handler Middleware" name="processes error and sends formatted response" time="0.003">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Handler Middleware" name="handles errors without correlation ID gracefully" time="0.003">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Database Error Handler" name="executes fallback function when provided" time="0.003">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Database Error Handler" name="throws original error when fallback fails" time="0.003">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Database Error Handler" name="throws original error when no fallback provided" time="0.003">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › External Service Error Handler" name="throws retry error for retryable errors within retry limit" time="2.195">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › External Service Error Handler" name="throws original error when retry limit exceeded" time="0.001">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › External Service Error Handler" name="throws original error for non-retryable errors" time="0.001">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › External Service Error Handler" name="applies exponential backoff with maximum delay" time="0.002">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Logging" name="logs errors with appropriate severity levels" time="0.001">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Logging" name="triggers critical error alert for critical errors" time="0.001">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Logging" name="uses fallback logger when request logger not available" time="0.001">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Edge Cases and Error Handling" name="handles errors with undefined message" time="0.001">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Edge Cases and Error Handling" name="handles errors with null properties" time="0.001">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Edge Cases and Error Handling" name="handles request objects with missing properties gracefully" time="0.001">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Edge Cases and Error Handling" name="handles circular reference in error objects" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Timeout Helper Unit Tests" errors="0" failures="0" skipped="0" timestamp="2025-07-21T22:15:30" time="14.675" tests="41">
    <testcase classname="Timeout Helper Unit Tests › Default Configuration" name="has correct default timeout values" time="0.151">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Default Configuration" name="initializes with empty circuit breakers map" time="0.004">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Basic Timeout Functionality" name="executes operation successfully within timeout" time="0.003">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Basic Timeout Functionality" name="throws timeout error when operation exceeds timeout" time="0.087">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Basic Timeout Functionality" name="propagates operation errors correctly" time="0.015">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Basic Timeout Functionality" name="uses default timeout when not specified" time="0.003">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Retry Logic" name="retries failed operations according to retry count" time="0.032">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Retry Logic" name="succeeds on retry after initial failure" time="0.012">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Retry Logic" name="applies exponential backoff for retry delays" time="0.156">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Retry Logic" name="does not retry without explicit retry count" time="0.002">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Circuit Breaker Integration" name="records success and resets circuit breaker" time="0.002">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Circuit Breaker Integration" name="records failure and updates circuit breaker" time="0.002">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Circuit Breaker Integration" name="opens circuit after threshold failures" time="0.002">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Circuit Breaker Integration" name="rejects operations when circuit is open" time="0.002">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Circuit Breaker Integration" name="transitions to half-open after timeout period" time="0.001">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › HTTP Request Functionality" name="makes successful HTTP request with default options" time="0.002">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › HTTP Request Functionality" name="handles POST requests with JSON body" time="0.001">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › HTTP Request Functionality" name="throws error for non-OK HTTP responses" time="0.001">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › HTTP Request Functionality" name="handles request timeout with AbortController" time="4.344">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Database Query Functionality" name="executes database query with circuit breaker" time="0.001">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Database Query Functionality" name="applies database-specific timeout" time="1.103">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Database Query Functionality" name="retries failed database queries" time="1.004">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Alpaca API Integration" name="executes Alpaca API call with service-specific settings" time="0.001">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Alpaca API Integration" name="uses Alpaca-specific timeout and retry settings" time="6.004">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › News API Integration" name="executes news API call without circuit breaker" time="0.002">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Batch Processing" name="processes items in batches with concurrency limit" time="0.002">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Batch Processing" name="handles errors in batch processing" time="0.002">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Batch Processing" name="stops on first error when continueOnError is false" time="0.002">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Multiple Promise Handling" name="handles Promise.all with timeout and fail-fast" time="0.001">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Multiple Promise Handling" name="handles Promise.allSettled for partial success" time="0.002">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Multiple Promise Handling" name="times out batch operations" time="0.101">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Circuit Breaker Metrics and Monitoring" name="provides comprehensive circuit breaker status" time="0.004">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Circuit Breaker Metrics and Monitoring" name="provides detailed metrics with performance data" time="0.002">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Circuit Breaker Metrics and Monitoring" name="calculates recent activity correctly" time="0.002">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Circuit Breaker Metrics and Monitoring" name="provides risk level assessment" time="0.003">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Circuit Breaker Metrics and Monitoring" name="provides recovery predictions" time="0.002">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Delay Utility" name="provides accurate delay functionality" time="0.052">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Edge Cases and Error Scenarios" name="handles operations that return null or undefined" time="0.001">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Edge Cases and Error Scenarios" name="handles concurrent access to circuit breakers safely" time="0.002">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Edge Cases and Error Scenarios" name="maintains circuit breaker history size limit" time="0.003">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Edge Cases and Error Scenarios" name="handles malformed options gracefully" time="0">
    </testcase>
  </testsuite>
</testsuites>