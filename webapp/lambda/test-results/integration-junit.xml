<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="444" failures="1" errors="0" time="14.854">
  <testsuite name="Portfolio Service Pure Unit Tests" errors="0" failures="0" skipped="0" timestamp="2025-07-21T15:02:05" time="1.491" tests="11">
    <testcase classname="Portfolio Service Pure Unit Tests › Service Initialization" name="should initialize without AlpacaService API keys" time="0.013">
    </testcase>
    <testcase classname="Portfolio Service Pure Unit Tests › Service Initialization" name="should initialize AlpacaService on demand" time="0.003">
    </testcase>
    <testcase classname="Portfolio Service Pure Unit Tests › Service Initialization" name="should not initialize AlpacaService without API keys" time="0.003">
    </testcase>
    <testcase classname="Portfolio Service Pure Unit Tests › Database Operations (Mocked)" name="should retrieve user portfolio with mocked database" time="0.003">
    </testcase>
    <testcase classname="Portfolio Service Pure Unit Tests › Database Operations (Mocked)" name="should update portfolio holdings with mocked database" time="0.003">
    </testcase>
    <testcase classname="Portfolio Service Pure Unit Tests › Database Operations (Mocked)" name="should save portfolio metadata with mocked database" time="0.003">
    </testcase>
    <testcase classname="Portfolio Service Pure Unit Tests › Database Operations (Mocked)" name="should return health check status" time="0.002">
    </testcase>
    <testcase classname="Portfolio Service Pure Unit Tests › AlpacaService Integration" name="should sync portfolio from broker with valid API keys" time="0.003">
    </testcase>
    <testcase classname="Portfolio Service Pure Unit Tests › AlpacaService Integration" name="should fail to sync portfolio without API keys" time="0.023">
    </testcase>
    <testcase classname="Portfolio Service Pure Unit Tests › Error Handling" name="should handle database errors gracefully" time="0.006">
    </testcase>
    <testcase classname="Portfolio Service Pure Unit Tests › Error Handling" name="should handle transaction errors gracefully" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="AdvancedPerformanceAnalytics" errors="0" failures="0" skipped="0" timestamp="2025-07-21T15:02:05" time="1.6" tests="11">
    <testcase classname="AdvancedPerformanceAnalytics › calculateBaseMetrics" name="calculates basic performance metrics correctly" time="0.114">
    </testcase>
    <testcase classname="AdvancedPerformanceAnalytics › calculateBaseMetrics" name="handles empty portfolio history" time="0.005">
    </testcase>
    <testcase classname="AdvancedPerformanceAnalytics › calculateRiskMetrics" name="calculates risk metrics correctly" time="0.006">
    </testcase>
    <testcase classname="AdvancedPerformanceAnalytics › calculateMaxDrawdown" name="calculates maximum drawdown correctly" time="0.003">
    </testcase>
    <testcase classname="AdvancedPerformanceAnalytics › calculateAttributionAnalysis" name="calculates attribution analysis correctly" time="0.007">
    </testcase>
    <testcase classname="AdvancedPerformanceAnalytics › calculateSectorAnalysis" name="calculates sector analysis correctly" time="0.002">
    </testcase>
    <testcase classname="AdvancedPerformanceAnalytics › calculateDiversificationScore" name="calculates diversification score correctly" time="0.002">
    </testcase>
    <testcase classname="AdvancedPerformanceAnalytics › generatePerformanceReport" name="generates comprehensive performance report" time="0.024">
    </testcase>
    <testcase classname="AdvancedPerformanceAnalytics › getPerformanceGrade" name="assigns correct performance grades" time="0.003">
    </testcase>
    <testcase classname="AdvancedPerformanceAnalytics › assessRiskProfile" name="assesses risk profile correctly" time="0.002">
    </testcase>
    <testcase classname="AdvancedPerformanceAnalytics › calculateDaysInPeriod" name="calculates days in period correctly" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Risk Manager Unit Tests" errors="0" failures="0" skipped="0" timestamp="2025-07-21T15:02:05" time="1.628" tests="30">
    <testcase classname="Risk Manager Unit Tests › Position Size Calculation" name="calculates position size with valid parameters" time="0.033">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Position Size Calculation" name="validates input parameters" time="0.056">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Position Size Calculation" name="applies signal confidence adjustments correctly" time="0.006">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Position Size Calculation" name="respects maximum position size limits" time="0.006">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Position Size Calculation" name="handles missing signal gracefully" time="0.006">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Base Position Size Calculation" name="calculates base size from risk per trade" time="0.006">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Base Position Size Calculation" name="adjusts for signal confidence" time="0.005">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Base Position Size Calculation" name="adjusts for signal strength" time="0.007">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Base Position Size Calculation" name="respects maximum position size cap" time="0.003">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Volatility Adjustment" name="reduces position size for high volatility assets" time="0.002">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Volatility Adjustment" name="allows larger position size for low volatility assets" time="0.002">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Volatility Adjustment" name="handles missing volatility data gracefully" time="0.001">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Volatility Adjustment" name="applies volatility adjustment bounds" time="0.002">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Portfolio Risk Assessment" name="calculates comprehensive risk metrics" time="0.009">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Portfolio Risk Assessment" name="identifies high concentration risk" time="0.005">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Portfolio Risk Assessment" name="identifies high correlation risk" time="0.002">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Concentration Limits" name="applies concentration limits correctly" time="0.002">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Concentration Limits" name="allows position when concentration is within limits" time="0.002">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Concentration Limits" name="handles new positions correctly" time="0.002">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Sector Limits" name="applies sector concentration limits" time="0.002">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Sector Limits" name="allows position in underweight sectors" time="0.002">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Risk Recommendation Generation" name="generates conservative recommendation for high risk" time="0.003">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Risk Recommendation Generation" name="generates positive recommendation for low risk" time="0.002">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Risk Recommendation Generation" name="provides actionable recommendations" time="0.003">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Error Handling" name="handles database errors gracefully" time="0.007">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Error Handling" name="handles invalid volatility data" time="0.003">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Error Handling" name="handles empty portfolio composition" time="0.004">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Performance and Edge Cases" name="completes position sizing calculation within reasonable time" time="0.004">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Performance and Edge Cases" name="handles very small portfolio values" time="0.002">
    </testcase>
    <testcase classname="Risk Manager Unit Tests › Performance and Edge Cases" name="handles very large portfolio values" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Database Utilities Unit Tests (Industry Standard)" errors="0" failures="0" skipped="0" timestamp="2025-07-21T15:02:05" time="1.644" tests="12">
    <testcase classname="Database Utilities Unit Tests (Industry Standard) › Table Name Extraction" name="extracts table names from simple SELECT queries" time="0.035">
    </testcase>
    <testcase classname="Database Utilities Unit Tests (Industry Standard) › Table Name Extraction" name="extracts table names from INSERT queries" time="0.004">
    </testcase>
    <testcase classname="Database Utilities Unit Tests (Industry Standard) › Table Name Extraction" name="extracts table names from CTE queries" time="0.003">
    </testcase>
    <testcase classname="Database Utilities Unit Tests (Industry Standard) › Table Name Extraction" name="returns &quot;unknown&quot; for malformed queries" time="0.005">
    </testcase>
    <testcase classname="Database Utilities Unit Tests (Industry Standard) › Query Validation" name="validates safe queries with required tables" time="0.006">
    </testcase>
    <testcase classname="Database Utilities Unit Tests (Industry Standard) › Query Validation" name="rejects queries when required tables are missing" time="0.012">
    </testcase>
    <testcase classname="Database Utilities Unit Tests (Industry Standard) › Connection Pool Configuration" name="calculates optimal pool size for Lambda environment" time="0.015">
    </testcase>
    <testcase classname="Database Utilities Unit Tests (Industry Standard) › Connection Pool Configuration" name="uses default configuration for non-Lambda environment" time="0.002">
    </testcase>
    <testcase classname="Database Utilities Unit Tests (Industry Standard) › Transaction Management" name="executes transaction with proper commit" time="0.004">
    </testcase>
    <testcase classname="Database Utilities Unit Tests (Industry Standard) › Transaction Management" name="rolls back transaction on error" time="0.004">
    </testcase>
    <testcase classname="Database Utilities Unit Tests (Industry Standard) › Health Checks" name="reports healthy status when database is responsive" time="0.002">
    </testcase>
    <testcase classname="Database Utilities Unit Tests (Industry Standard) › Health Checks" name="reports unhealthy status on database error" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Portfolio Service Unit Tests" errors="0" failures="0" skipped="0" timestamp="2025-07-21T15:02:05" time="1.667" tests="12">
    <testcase classname="Portfolio Service Unit Tests › Portfolio CRUD Operations" name="should retrieve empty portfolio for new user" time="0.013">
    </testcase>
    <testcase classname="Portfolio Service Unit Tests › Portfolio CRUD Operations" name="should update portfolio holdings successfully" time="0.006">
    </testcase>
    <testcase classname="Portfolio Service Unit Tests › Portfolio CRUD Operations" name="should save portfolio metadata successfully" time="0.005">
    </testcase>
    <testcase classname="Portfolio Service Unit Tests › Portfolio CRUD Operations" name="should handle upsert for existing holdings" time="0.004">
    </testcase>
    <testcase classname="Portfolio Service Unit Tests › Portfolio Performance Calculations" name="should calculate portfolio performance metrics" time="0.004">
    </testcase>
    <testcase classname="Portfolio Service Unit Tests › Portfolio Performance Calculations" name="should handle empty portfolio history gracefully" time="0.004">
    </testcase>
    <testcase classname="Portfolio Service Unit Tests › Portfolio Optimization Integration" name="should format portfolio for optimization service" time="0.004">
    </testcase>
    <testcase classname="Portfolio Service Unit Tests › Portfolio Optimization Integration" name="should save optimization results to database" time="0.004">
    </testcase>
    <testcase classname="Portfolio Service Unit Tests › Error Handling" name="should handle invalid user ID gracefully" time="0.004">
    </testcase>
    <testcase classname="Portfolio Service Unit Tests › Error Handling" name="should handle database connection errors" time="0.004">
    </testcase>
    <testcase classname="Portfolio Service Unit Tests › Error Handling" name="should validate required fields" time="0.003">
    </testcase>
    <testcase classname="Portfolio Service Unit Tests › Service Health Check" name="should return healthy status when database is available" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Backtesting Service Unit Tests" errors="0" failures="0" skipped="0" timestamp="2025-07-21T15:02:05" time="1.74" tests="47">
    <testcase classname="Backtesting Service Unit Tests › Service Initialization" name="initializes with correct strategy mappings" time="0.1">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Service Initialization" name="binds strategy methods correctly" time="0.004">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Input Validation" name="throws error for empty data" time="0.046">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Input Validation" name="throws error for null data" time="0.002">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Input Validation" name="throws error for unknown strategy" time="0.003">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Input Validation" name="throws error for insufficient data" time="0.002">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › RSI Strategy" name="generates buy signal when RSI is oversold" time="0.003">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › RSI Strategy" name="generates sell signal when RSI is overbought" time="0.002">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › RSI Strategy" name="returns null when RSI is in neutral range" time="0.002">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › MACD Strategy" name="generates buy signal on bullish crossover" time="0.002">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › MACD Strategy" name="generates sell signal on bearish crossover" time="0.002">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › MACD Strategy" name="returns null when no crossover detected" time="0.001">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › MACD Strategy" name="returns null when MACD calculation fails" time="0.002">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Bollinger Bands Strategy" name="generates buy signal when price is below lower band" time="0.003">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Bollinger Bands Strategy" name="generates sell signal when price is above upper band" time="0.003">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Bollinger Bands Strategy" name="returns null when price is within bands" time="0.003">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Multi-Indicator Strategy" name="generates buy signal with high confidence" time="0.003">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Multi-Indicator Strategy" name="generates sell signal with high confidence" time="0.005">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Multi-Indicator Strategy" name="returns null when confidence is too low" time="0.001">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Mean Reversion Strategy" name="generates buy signal when price is below mean" time="0.002">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Mean Reversion Strategy" name="generates sell signal when price is above mean" time="0.001">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Mean Reversion Strategy" name="returns null when price is close to mean" time="0.001">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Mean Reversion Strategy" name="returns null when insufficient data" time="0.002">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Momentum Strategy" name="generates buy signal when SMA10 &gt; SMA20" time="0.003">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Momentum Strategy" name="generates sell signal when SMA10 &lt; SMA20" time="0.002">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Momentum Strategy" name="returns null when SMAs are too close" time="0.002">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Momentum Strategy" name="returns null when insufficient data" time="0.001">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Trade Execution" name="executes entry trade correctly for buy signal" time="0.016">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Trade Execution" name="executes entry trade correctly for sell signal" time="0.002">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Trade Execution" name="does not execute trade with insufficient capital" time="0.001">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Exit Conditions" name="triggers stop loss for long position" time="0.001">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Exit Conditions" name="triggers take profit for long position" time="0">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Exit Conditions" name="triggers stop loss for short position" time="0">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Exit Conditions" name="does not trigger exit when within thresholds" time="0">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Portfolio Calculations" name="calculates portfolio value with long position" time="0.001">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Portfolio Calculations" name="calculates portfolio value with short position" time="0.001">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Portfolio Calculations" name="calculates portfolio value with no position" time="0.001">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Performance Metrics" name="calculates basic metrics correctly" time="0.001">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Performance Metrics" name="handles empty trades gracefully" time="0.001">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Utility Functions" name="filters data by date range correctly" time="0.003">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Utility Functions" name="calculates trade duration correctly" time="0.001">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Utility Functions" name="returns available strategies" time="0.002">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Utility Functions" name="generates strategy descriptions" time="0.001">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Full Backtest Integration" name="runs complete backtest successfully" time="0.007">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Recommendation Generation" name="generates strong buy recommendation for excellent performance" time="0.001">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Recommendation Generation" name="generates buy recommendation for good performance" time="0.001">
    </testcase>
    <testcase classname="Backtesting Service Unit Tests › Recommendation Generation" name="generates avoid recommendation for poor performance" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Database Circuit Breaker Unit Tests" errors="0" failures="0" skipped="0" timestamp="2025-07-21T15:02:05" time="1.732" tests="29">
    <testcase classname="Database Circuit Breaker Unit Tests › Circuit Breaker Initialization" name="initializes with correct default state" time="0.116">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Circuit Breaker Initialization" name="sets production-ready configuration values" time="0.003">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Closed State Operations" name="executes operations successfully when circuit is closed" time="0.002">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Closed State Operations" name="records failure but stays closed below threshold" time="0.021">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Closed State Operations" name="decrements failure count on successful operations" time="0.003">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Closed State Operations" name="opens circuit when failure threshold is reached" time="0.002">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Open State Operations" name="rejects operations immediately when circuit is open" time="0.004">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Open State Operations" name="includes remaining time in error message" time="0.002">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Open State Operations" name="transitions to half-open after recovery timeout" time="0.003">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Half-Open State Operations" name="allows limited operations in half-open state" time="0.002">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Half-Open State Operations" name="closes circuit after sufficient successes" time="0.003">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Half-Open State Operations" name="reopens circuit on failure in half-open state" time="0.003">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Half-Open State Operations" name="tracks success count correctly in half-open state" time="0.002">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Metrics and History Tracking" name="tracks comprehensive metrics" time="0.003">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Metrics and History Tracking" name="maintains request history with limited size" time="0.004">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Metrics and History Tracking" name="records operation duration in history" time="0.052">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Metrics and History Tracking" name="records error details in failure history" time="0.002">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Health Assessment" name="reports healthy when failures are below 50% of threshold" time="0">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Health Assessment" name="reports unhealthy when failures are above 50% of threshold" time="0">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Health Assessment" name="reports unhealthy when circuit is not closed" time="0.001">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Health Assessment" name="calculates time to recovery correctly" time="0.001">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Force Reset Functionality" name="resets circuit breaker to clean state" time="0.001">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Force Reset Functionality" name="allows operations after force reset" time="0">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Concurrent Operations" name="handles concurrent operations safely" time="0.001">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Concurrent Operations" name="handles mixed concurrent success and failure operations" time="0.001">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Edge Cases and Error Scenarios" name="handles operations that throw non-Error objects" time="0.001">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Edge Cases and Error Scenarios" name="handles operations that return undefined" time="0.001">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Edge Cases and Error Scenarios" name="maintains state consistency during rapid state transitions" time="0.001">
    </testcase>
    <testcase classname="Database Circuit Breaker Unit Tests › Edge Cases and Error Scenarios" name="handles timestamp edge cases" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Technical Analysis Service Unit Tests" errors="0" failures="0" skipped="0" timestamp="2025-07-21T15:02:05" time="1.715" tests="39">
    <testcase classname="Technical Analysis Service Unit Tests › Service Initialization" name="initializes with correct indicators" time="0.117">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Service Initialization" name="indicators are callable functions" time="0.004">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Multiple Indicators Calculation" name="calculates multiple indicators successfully" time="0.005">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Multiple Indicators Calculation" name="handles invalid data input" time="0.046">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Multiple Indicators Calculation" name="handles unknown indicators gracefully" time="0.003">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Multiple Indicators Calculation" name="continues calculation when one indicator fails" time="0.003">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › RSI (Relative Strength Index)" name="calculates RSI with default period" time="0.014">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › RSI (Relative Strength Index)" name="calculates RSI with custom period" time="0.006">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › RSI (Relative Strength Index)" name="generates correct RSI signals" time="0.001">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › RSI (Relative Strength Index)" name="requires sufficient data" time="0.001">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › RSI (Relative Strength Index)" name="handles flat price data" time="0.002">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › MACD (Moving Average Convergence Divergence)" name="calculates MACD with default parameters" time="0.004">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › MACD (Moving Average Convergence Divergence)" name="calculates MACD with custom parameters" time="0.002">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › MACD (Moving Average Convergence Divergence)" name="generates MACD buy/sell signals" time="0.003">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › MACD (Moving Average Convergence Divergence)" name="requires sufficient data for MACD" time="0.002">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Bollinger Bands" name="calculates Bollinger Bands with default parameters" time="0.005">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Bollinger Bands" name="validates band relationships" time="0.003">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Bollinger Bands" name="generates Bollinger Band signals" time="0.001">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Bollinger Bands" name="calculates with custom standard deviation" time="0.002">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Simple Moving Average (SMA)" name="calculates SMA correctly" time="0.001">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Simple Moving Average (SMA)" name="handles period larger than data length" time="0.002">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Simple Moving Average (SMA)" name="calculates SMA with timestamps" time="0.001">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Exponential Moving Average (EMA)" name="calculates EMA correctly" time="0.002">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Exponential Moving Average (EMA)" name="EMA responds faster than SMA to price changes" time="0.001">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Exponential Moving Average (EMA)" name="requires sufficient data" time="0.001">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Stochastic Oscillator" name="calculates Stochastic with default parameters" time="0.004">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Stochastic Oscillator" name="validates Stochastic value ranges" time="0.003">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Stochastic Oscillator" name="generates overbought/oversold signals" time="0.001">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Williams %R" name="calculates Williams %R correctly" time="0.003">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Williams %R" name="generates Williams %R signals" time="0.002">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Williams %R" name="requires sufficient data" time="0.001">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Edge Cases and Error Handling" name="handles missing price data fields" time="0.003">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Edge Cases and Error Handling" name="handles zero and negative prices" time="0.001">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Edge Cases and Error Handling" name="handles single data point" time="0.001">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Edge Cases and Error Handling" name="handles very large datasets efficiently" time="0.005">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Signal Generation" name="generates consistent signals across indicators" time="0.001">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Signal Generation" name="signal timestamps match data timestamps" time="0.001">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Mathematical Accuracy" name="SMA calculation matches manual calculation" time="0.001">
    </testcase>
    <testcase classname="Technical Analysis Service Unit Tests › Mathematical Accuracy" name="RSI boundary conditions" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Database Utilities Unit Tests" errors="0" failures="0" skipped="0" timestamp="2025-07-21T15:02:05" time="1.774" tests="39">
    <testcase classname="Database Utilities Unit Tests › Database Configuration Management" name="loads configuration from complete environment variables" time="0.073">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Database Configuration Management" name="calculates optimal pool configuration for Lambda environment" time="0.017">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Database Configuration Management" name="handles missing database configuration gracefully" time="0.076">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Database Configuration Management" name="validates SSL configuration settings" time="0.001">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Connection Pool Management" name="initializes connection pool with proper configuration" time="0.014">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Connection Pool Management" name="tests database connection during initialization" time="0.008">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Connection Pool Management" name="handles connection pool initialization errors" time="0.009">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Connection Pool Management" name="provides pool status and metrics" time="0.017">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Connection Pool Management" name="handles pool warming for Lambda optimization" time="0.022">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Query Execution and Management" name="executes queries through database manager with circuit breaker" time="0.002">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Query Execution and Management" name="handles query errors and provides detailed logging" time="0.003">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Query Execution and Management" name="extracts table names from SQL queries correctly" time="0.002">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Query Execution and Management" name="handles safe queries with table existence validation" time="0.003">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Query Execution and Management" name="rejects safe queries when required tables are missing" time="0.002">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Transaction Management" name="executes successful transactions with proper commit" time="0.001">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Transaction Management" name="rolls back transactions on errors" time="0.001">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Transaction Management" name="ensures client release even on transaction errors" time="0.001">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Schema Validation and Table Management" name="validates database schema comprehensively" time="0.001">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Schema Validation and Table Management" name="checks individual table existence" time="0.001">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Schema Validation and Table Management" name="checks multiple table existence efficiently" time="0.002">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Schema Validation and Table Management" name="provides detailed schema requirements structure" time="0.002">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Schema Validation and Table Management" name="handles schema validation errors gracefully" time="0.001">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Health Checks and Monitoring" name="performs comprehensive health checks" time="0.001">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Health Checks and Monitoring" name="handles circuit breaker open state in health checks" time="0.001">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Health Checks and Monitoring" name="reports unhealthy state for database connection failures" time="0.002">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Lambda Optimization Features" name="initializes database optimally for Lambda environment" time="0.004">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Lambda Optimization Features" name="handles Lambda initialization failures gracefully" time="0.001">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Lambda Optimization Features" name="calculates appropriate pool sizes for Lambda concurrency" time="0.001">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Connection Cleanup and Resource Management" name="closes database connections properly" time="0.008">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Connection Cleanup and Resource Management" name="handles connection cleanup errors gracefully" time="0.001">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Connection Cleanup and Resource Management" name="provides pool instance access with validation" time="0.009">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Performance Monitoring and Metrics" name="tracks pool utilization metrics" time="0.011">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Performance Monitoring and Metrics" name="provides adaptive pool sizing recommendations" time="0.013">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Performance Monitoring and Metrics" name="monitors pool events and connections" time="0.009">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Edge Cases and Error Scenarios" name="handles malformed SQL queries gracefully" time="0.001">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Edge Cases and Error Scenarios" name="handles concurrent initialization requests" time="0.001">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Edge Cases and Error Scenarios" name="validates environment variable data types" time="0">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Edge Cases and Error Scenarios" name="handles missing optional configuration gracefully" time="0.001">
    </testcase>
    <testcase classname="Database Utilities Unit Tests › Edge Cases and Error Scenarios" name="preserves state consistency during error recovery" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Authentication Middleware Unit Tests" errors="0" failures="0" skipped="0" timestamp="2025-07-21T15:02:05" time="1.779" tests="33">
    <testcase classname="Authentication Middleware Unit Tests › Development Mode Authentication" name="allows access without token in development mode" time="0.164">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Development Mode Authentication" name="validates development JWT tokens correctly" time="0.01">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Development Mode Authentication" name="generates valid development tokens" time="0.005">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Development Mode Authentication" name="falls back to development mode when Cognito is unavailable" time="0.006">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Production Mode Authentication" name="requires authentication token in production mode" time="0.006">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Production Mode Authentication" name="rejects invalid tokens in production mode" time="0.004">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Production Mode Authentication" name="handles malformed authorization headers" time="0.004">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › JWT Token Validation" name="handles expired JWT tokens" time="0.006">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › JWT Token Validation" name="validates JWT token structure and claims" time="0.007">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › JWT Token Validation" name="handles malformed JWT tokens gracefully" time="0.003">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Role-Based Authorization" name="allows access when user has required role" time="0.004">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Role-Based Authorization" name="allows access when user is in required group" time="0.003">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Role-Based Authorization" name="denies access when user lacks required role" time="0.005">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Role-Based Authorization" name="denies access when user is not authenticated" time="0.002">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Role-Based Authorization" name="handles multiple role requirements" time="0.002">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Optional Authentication" name="continues without authentication when no token provided" time="0.002">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Optional Authentication" name="authenticates when valid token is provided" time="0.002">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Optional Authentication" name="continues silently when authentication fails" time="0.001">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Request Context Enhancement" name="enriches user object with request context" time="0.001">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Request Context Enhancement" name="generates request ID when not provided" time="0.001">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Request Context Enhancement" name="handles missing client IP gracefully" time="0.001">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Cognito Configuration Management" name="loads configuration from environment variables" time="0.001">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Cognito Configuration Management" name="handles missing Cognito configuration gracefully" time="0.001">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Cognito Configuration Management" name="uses default region when not specified" time="0.001">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Authentication Status Endpoint" name="returns comprehensive authentication status" time="0.001">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Authentication Status Endpoint" name="handles status check errors gracefully" time="0.001">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Error Handling and Edge Cases" name="handles network errors during token verification" time="0.016">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Error Handling and Edge Cases" name="handles concurrent authentication requests safely" time="0.002">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Error Handling and Edge Cases" name="preserves original user data when authentication fails in development" time="0.001">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Error Handling and Edge Cases" name="handles missing authorization header gracefully" time="0.001">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Token Generation and Validation" name="generates tokens with correct expiration" time="0.003">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Token Generation and Validation" name="generates unique tokens for different users" time="0.003">
    </testcase>
    <testcase classname="Authentication Middleware Unit Tests › Token Generation and Validation" name="uses custom JWT secret when provided" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="Circuit Breaker Utilities Unit Tests" errors="0" failures="0" skipped="0" timestamp="2025-07-21T15:02:05" time="1.784" tests="19">
    <testcase classname="Circuit Breaker Utilities Unit Tests › TimeoutHelper Circuit Breaker" name="should initialize with production-ready thresholds" time="0.146">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › TimeoutHelper Circuit Breaker" name="should track failure counts correctly" time="0.013">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › TimeoutHelper Circuit Breaker" name="should transition states correctly (closed -&gt; open -&gt; half-open -&gt; closed)" time="0.015">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › TimeoutHelper Circuit Breaker" name="should record event history correctly" time="0.006">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › TimeoutHelper Circuit Breaker" name="should calculate metrics correctly" time="0.007">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › TimeoutHelper Circuit Breaker" name="should handle recent activity tracking" time="0.004">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › TimeoutHelper Circuit Breaker" name="should calculate risk levels accurately" time="0.011">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › DatabaseCircuitBreaker Class" name="should initialize with correct production configuration" time="0.004">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › DatabaseCircuitBreaker Class" name="should execute operations and track results" time="0.002">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › DatabaseCircuitBreaker Class" name="should handle operation failures correctly" time="0.003">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › DatabaseCircuitBreaker Class" name="should open circuit after threshold failures" time="0.016">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › DatabaseCircuitBreaker Class" name="should provide detailed status information" time="0.006">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › DatabaseCircuitBreaker Class" name="should force reset correctly" time="0.04">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › Circuit Breaker Reset Utilities" name="should reset all circuit breakers" time="0.018">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › Circuit Breaker Reset Utilities" name="should reset specific circuit breaker" time="0.005">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › Circuit Breaker Reset Utilities" name="should get comprehensive circuit breaker status" time="0.005">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › Circuit Breaker Reset Utilities" name="should handle non-existent circuit breaker reset gracefully" time="0.004">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › Performance and Memory Management" name="should limit history size to prevent memory leaks" time="0.002">
    </testcase>
    <testcase classname="Circuit Breaker Utilities Unit Tests › Performance and Memory Management" name="should handle rapid state changes efficiently" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Optimization Engine Unit Tests" errors="0" failures="1" skipped="0" timestamp="2025-07-21T15:02:05" time="1.86" tests="36">
    <testcase classname="Optimization Engine Unit Tests › Service Initialization" name="initializes with default risk-free rate" time="0.01">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Service Initialization" name="has all required methods" time="0.003">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Current Portfolio Retrieval" name="retrieves portfolio from database successfully" time="0.005">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Current Portfolio Retrieval" name="returns demo portfolio when database query fails" time="0.031">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Current Portfolio Retrieval" name="returns demo portfolio when no holdings found" time="0.002">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Current Portfolio Retrieval" name="calculates portfolio weights correctly" time="0.004">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Demo Portfolio" name="generates consistent demo portfolio" time="0.003">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Demo Portfolio" name="demo portfolio weights sum to 1" time="0.002">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Optimization Universe" name="creates universe from current holdings" time="0.002">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Optimization Universe" name="includes additional assets for diversification" time="0.004">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Optimization Universe" name="respects include and exclude assets" time="0.003">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Optimization Universe" name="limits universe size to 20 assets" time="0.003">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Historical Price Data" name="generates mock price data for symbols" time="0.002">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Historical Price Data" name="generates realistic price movements" time="0.006">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Returns Matrix Calculation" name="calculates returns matrix from price data" time="0.002">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Returns Matrix Calculation" name="handles empty price data" time="0.002">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Returns Matrix Calculation" name="handles single price point" time="0.001">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Rebalancing Calculations" name="calculates rebalancing trades correctly" time="0.001">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Rebalancing Calculations" name="ignores small weight differences" time="0.002">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Rebalancing Calculations" name="sorts trades by priority and value" time="0.001">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Optimization Insights" name="generates risk warning for high volatility" time="0.002">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Optimization Insights" name="generates diversification insight for small portfolios" time="0.001">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Optimization Insights" name="generates positive insight for high Sharpe ratio" time="0.002">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Optimization Insights" name="generates concentration warning for large positions" time="0.001">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Formatting Functions" name="formats weights correctly" time="0.002">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Formatting Functions" name="formats portfolio summary correctly" time="0.001">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Formatting Functions" name="formats correlation matrix correctly" time="0.002">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Data Quality Assessment" name="assesses high-quality data correctly" time="0.002">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Data Quality Assessment" name="identifies missing data points" time="0.001">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Fallback Optimization" name="generates fallback optimization with demo data" time="0.004">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Fallback Optimization" name="uses equal weights for equalWeight objective" time="0.002">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Fallback Optimization" name="generates mock efficient frontier" time="0.005">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Full Optimization Integration" name="runs complete optimization successfully" time="0.007">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Full Optimization Integration" name="falls back to demo optimization on error" time="0.01">
      <failure>Error: expect(received).toHaveLength(expected)

Expected length: 1
Received length: 0
Received array:  []
    at Object.toHaveLength (/home/stocks/algo/webapp/lambda/tests/unit/optimization-engine.test.js:695:31)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)</failure>
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Mock Price Data Generation" name="generates price data with correct structure" time="0.003">
    </testcase>
    <testcase classname="Optimization Engine Unit Tests › Mock Price Data Generation" name="applies different volatility for different assets" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Enhanced Authentication Service Unit Tests" errors="0" failures="0" skipped="0" timestamp="2025-07-21T15:02:05" time="1.901" tests="37">
    <testcase classname="Enhanced Authentication Service Unit Tests › User Validation" name="validates credentials for local user successfully" time="0.018">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › User Validation" name="rejects invalid password" time="0.003">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › User Validation" name="handles Cognito user validation" time="0.006">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › User Validation" name="handles user not found" time="0.004">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › User Validation" name="handles user without password hash" time="0.003">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › User Management" name="retrieves user by ID successfully" time="0.003">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › User Management" name="returns null for non-existent user" time="0.005">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › User Management" name="creates new user successfully" time="0.008">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Session Management" name="stores session in database successfully" time="0.006">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Session Management" name="updates session in database successfully" time="0.003">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Session Management" name="retrieves session from database successfully" time="0.002">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Session Management" name="returns null for non-existent session" time="0.001">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Session Management" name="invalidates session in database successfully" time="0.002">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Security Event Logging" name="stores security event successfully" time="0.003">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Security Event Logging" name="handles security event logging errors gracefully" time="0.026">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › MFA Code Sending" name="sends SMS code in development mode" time="0.003">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › MFA Code Sending" name="sends email code in development mode" time="0.003">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › MFA Code Sending" name="sends SMS code using AWS SNS in production" time="0.144">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › MFA Code Sending" name="sends email code using AWS SES in production" time="0.078">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › MFA Code Sending" name="handles SMS sending failure and logs security event" time="0.021">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › JWT Token Management" name="generates access token with correct payload" time="0.005">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › JWT Token Management" name="generates refresh token" time="0.002">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › JWT Token Management" name="validates JWT token successfully" time="0.003">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › JWT Token Management" name="rejects invalid JWT token" time="0.002">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › JWT Token Management" name="checks if token is blacklisted" time="0.001">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Session Management" name="creates session successfully" time="0.002">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Session Management" name="validates active session" time="0.002">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Session Management" name="rejects expired session" time="0.002">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Session Management" name="invalidates session successfully" time="0.002">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Rate Limiting" name="allows requests within rate limit" time="0.002">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Rate Limiting" name="blocks requests exceeding rate limit" time="0.001">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Rate Limiting" name="tracks login attempts correctly" time="0.006">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Rate Limiting" name="locks account after max failed attempts" time="0.003">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Rate Limiting" name="resets login attempts after successful login" time="0.004">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Service Statistics" name="returns comprehensive statistics" time="0.003">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Error Handling" name="handles database connection errors gracefully" time="0.003">
    </testcase>
    <testcase classname="Enhanced Authentication Service Unit Tests › Error Handling" name="handles invalid JSON in session data" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Universal Error Handler Unit Tests" errors="0" failures="0" skipped="0" timestamp="2025-07-21T15:02:05" time="2.711" tests="48">
    <testcase classname="Universal Error Handler Unit Tests › Error Categorization" name="categorizes circuit breaker errors correctly" time="0.102">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Categorization" name="categorizes database errors correctly" time="0.002">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Categorization" name="categorizes timeout errors correctly" time="0.001">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Categorization" name="categorizes authentication errors correctly" time="0.003">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Categorization" name="categorizes authorization errors correctly" time="0.002">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Categorization" name="categorizes validation errors correctly" time="0.006">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Categorization" name="categorizes external service errors correctly" time="0.002">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Categorization" name="categorizes rate limit errors correctly" time="0.002">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Categorization" name="categorizes business logic errors correctly" time="0.002">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Categorization" name="categorizes server errors correctly" time="0.002">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Categorization" name="returns UNKNOWN_ERROR for unrecognized errors" time="0.002">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Severity Determination" name="assigns CRITICAL severity to database and server errors" time="0.003">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Severity Determination" name="assigns HIGH severity to external service and circuit breaker errors" time="0.001">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Severity Determination" name="assigns MEDIUM severity to auth and timeout errors" time="0.002">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Severity Determination" name="assigns LOW severity to validation and rate limit errors" time="0.002">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Severity Determination" name="returns UNKNOWN for unrecognized error types" time="0.003">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Recoverability Assessment" name="identifies recoverable errors correctly" time="0.004">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Recoverability Assessment" name="identifies non-recoverable errors correctly" time="0.004">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › User Message Generation" name="generates appropriate user messages for each category" time="0.005">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › User Message Generation" name="uses custom message for business logic errors" time="0.003">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › User Message Generation" name="falls back to default message for unknown categories" time="0.003">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Context Enrichment" name="enriches error with comprehensive context" time="0.031">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Context Enrichment" name="handles missing user context gracefully" time="0.004">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Context Enrichment" name="calculates performance metrics correctly" time="0.005">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Response Formatting" name="formats error response with correct structure" time="0.002">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Response Formatting" name="includes development details when NODE_ENV is development" time="0.001">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Response Formatting" name="excludes development details in production" time="0.002">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Response Formatting" name="includes retry information for recoverable errors" time="0.001">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Response Formatting" name="maps status codes correctly by category" time="0.002">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Async Handler Wrapper" name="catches async errors and passes them to next" time="0.003">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Async Handler Wrapper" name="handles non-promise functions gracefully" time="0.002">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Async Handler Wrapper" name="handles functions that return non-promise values" time="0.002">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Handler Middleware" name="processes error and sends formatted response" time="0.003">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Handler Middleware" name="handles errors without correlation ID gracefully" time="0.003">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Database Error Handler" name="executes fallback function when provided" time="0.002">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Database Error Handler" name="throws original error when fallback fails" time="0.002">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Database Error Handler" name="throws original error when no fallback provided" time="0.002">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › External Service Error Handler" name="throws retry error for retryable errors within retry limit" time="1.004">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › External Service Error Handler" name="throws original error when retry limit exceeded" time="0.001">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › External Service Error Handler" name="throws original error for non-retryable errors" time="0.001">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › External Service Error Handler" name="applies exponential backoff with maximum delay" time="0.002">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Logging" name="logs errors with appropriate severity levels" time="0.002">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Logging" name="triggers critical error alert for critical errors" time="0.001">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Error Logging" name="uses fallback logger when request logger not available" time="0.001">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Edge Cases and Error Handling" name="handles errors with undefined message" time="0.001">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Edge Cases and Error Handling" name="handles errors with null properties" time="0.001">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Edge Cases and Error Handling" name="handles request objects with missing properties gracefully" time="0.001">
    </testcase>
    <testcase classname="Universal Error Handler Unit Tests › Edge Cases and Error Handling" name="handles circular reference in error objects" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Timeout Helper Unit Tests" errors="0" failures="0" skipped="0" timestamp="2025-07-21T15:02:05" time="14.563" tests="41">
    <testcase classname="Timeout Helper Unit Tests › Default Configuration" name="has correct default timeout values" time="0.148">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Default Configuration" name="initializes with empty circuit breakers map" time="0.002">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Basic Timeout Functionality" name="executes operation successfully within timeout" time="0.002">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Basic Timeout Functionality" name="throws timeout error when operation exceeds timeout" time="0.085">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Basic Timeout Functionality" name="propagates operation errors correctly" time="0.015">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Basic Timeout Functionality" name="uses default timeout when not specified" time="0.004">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Retry Logic" name="retries failed operations according to retry count" time="0.035">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Retry Logic" name="succeeds on retry after initial failure" time="0.012">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Retry Logic" name="applies exponential backoff for retry delays" time="0.153">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Retry Logic" name="does not retry without explicit retry count" time="0.001">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Circuit Breaker Integration" name="records success and resets circuit breaker" time="0.002">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Circuit Breaker Integration" name="records failure and updates circuit breaker" time="0.002">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Circuit Breaker Integration" name="opens circuit after threshold failures" time="0.001">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Circuit Breaker Integration" name="rejects operations when circuit is open" time="0.001">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Circuit Breaker Integration" name="transitions to half-open after timeout period" time="0.002">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › HTTP Request Functionality" name="makes successful HTTP request with default options" time="0.002">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › HTTP Request Functionality" name="handles POST requests with JSON body" time="0.001">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › HTTP Request Functionality" name="throws error for non-OK HTTP responses" time="0.001">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › HTTP Request Functionality" name="handles request timeout with AbortController" time="3.157">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Database Query Functionality" name="executes database query with circuit breaker" time="0.002">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Database Query Functionality" name="applies database-specific timeout" time="1.105">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Database Query Functionality" name="retries failed database queries" time="1.005">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Alpaca API Integration" name="executes Alpaca API call with service-specific settings" time="0.003">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Alpaca API Integration" name="uses Alpaca-specific timeout and retry settings" time="7.21">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › News API Integration" name="executes news API call without circuit breaker" time="0.003">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Batch Processing" name="processes items in batches with concurrency limit" time="0.003">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Batch Processing" name="handles errors in batch processing" time="0.002">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Batch Processing" name="stops on first error when continueOnError is false" time="0.002">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Multiple Promise Handling" name="handles Promise.all with timeout and fail-fast" time="0.002">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Multiple Promise Handling" name="handles Promise.allSettled for partial success" time="0.002">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Multiple Promise Handling" name="times out batch operations" time="0.102">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Circuit Breaker Metrics and Monitoring" name="provides comprehensive circuit breaker status" time="0.005">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Circuit Breaker Metrics and Monitoring" name="provides detailed metrics with performance data" time="0.002">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Circuit Breaker Metrics and Monitoring" name="calculates recent activity correctly" time="0.004">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Circuit Breaker Metrics and Monitoring" name="provides risk level assessment" time="0.003">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Circuit Breaker Metrics and Monitoring" name="provides recovery predictions" time="0.003">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Delay Utility" name="provides accurate delay functionality" time="0.053">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Edge Cases and Error Scenarios" name="handles operations that return null or undefined" time="0.002">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Edge Cases and Error Scenarios" name="handles concurrent access to circuit breakers safely" time="0.001">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Edge Cases and Error Scenarios" name="maintains circuit breaker history size limit" time="0.004">
    </testcase>
    <testcase classname="Timeout Helper Unit Tests › Edge Cases and Error Scenarios" name="handles malformed options gracefully" time="0.001">
    </testcase>
  </testsuite>
</testsuites>