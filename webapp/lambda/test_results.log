
> financial-dashboard-lambda@1.0.0 test
> jest --coverage --coverageReporters=text --coverageReporters=html --coverageReporters=lcov

🔧 Global Setup: Creating tables from setup_test_database.sql...
Using database config from environment variables
Database config loaded from environment: localhost:5432/stocks
✅ Database connection pool initialized successfully
✅ Real database schema loaded successfully - no mocks or demo data
🔧 Setting up webapp-specific database tables...
Using database config from environment variables
Database config loaded from environment: localhost:5432/stocks
✅ Database setup complete - custom matchers disabled for now
✅ Database connection pool initialized successfully
🔧 Setting up webapp-specific tables from setup_database.sql...
✅ Database schema loaded from setup_database.sql
✅ Python loader tables created for testing
✅ Economic test data populated for testing
Database query error: {
  error: 'there is no unique or exclusion constraint matching the ON CONFLICT specification',
  query: '\n' +
    '      INSERT INTO market_data (ticker, symbol, current_price, market_cap, volume, name, date, price...',
  params: 'no parameters',
  code: '42P10'
}
⚠️  Could not populate test data for loader tables: there is no unique or exclusion constraint matching the ON CONFLICT specification
✅ Database tables created matching Python loader structure
  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

  console.log
    🚨 Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic HTTP/1.1" 200 1902 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic?page=1&limit=10 HTTP/1.1" 200 837 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic?series=GDPC1 HTTP/1.1" 200 482 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic?series=UNRATE HTTP/1.1" 200 529 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic?series=VIXCLS HTTP/1.1" 200 472 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic?series=FEDFUNDS HTTP/1.1" 200 543 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic?series=CPIAUCSL HTTP/1.1" 200 567 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic?limit=5 HTTP/1.1" 200 466 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic?page=-1&limit=10 HTTP/1.1" 400 100 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic?page=0&limit=10 HTTP/1.1" 400 100 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic?page=1&limit=-5 HTTP/1.1" 400 101 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic?page=abc&limit=def HTTP/1.1" 400 100 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic?page=999999&limit=1000 HTTP/1.1" 404 56 "-" "-"
  console.log
    📊 Economic indicators requested, category: all

      at log (routes/economic.js:266:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/indicators HTTP/1.1" 200 3118 "-" "-"
  console.log
    📊 Economic indicators requested, category: all

      at log (routes/economic.js:266:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/indicators HTTP/1.1" 200 3118 "-" "-"
  console.log
    📊 Economic indicators requested, category: growth

      at log (routes/economic.js:266:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/indicators?category=growth HTTP/1.1" 200 851 "-" "-"
  console.log
    📊 Economic indicators requested, category: inflation

      at log (routes/economic.js:266:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/indicators?category=inflation HTTP/1.1" 200 857 "-" "-"
  console.log
    📊 Economic indicators requested, category: employment

      at log (routes/economic.js:266:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/indicators?category=employment HTTP/1.1" 200 335 "-" "-"
  console.log
    📊 Economic indicators requested, category: monetary

      at log (routes/economic.js:266:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/indicators?category=monetary HTTP/1.1" 200 337 "-" "-"
  console.log
    📅 Economic calendar requested - start: undefined, end: undefined, importance: undefined, country: undefined

      at log (routes/economic.js:358:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/calendar HTTP/1.1" 200 1614 "-" "-"
  console.log
    📅 Economic calendar requested - start: 2025-01-01, end: 2025-12-31, importance: undefined, country: undefined

      at log (routes/economic.js:358:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/calendar?start_date=2025-01-01&end_date=2025-12-31 HTTP/1.1" 200 2694 "-" "-"
  console.log
    📅 Economic calendar requested - start: undefined, end: undefined, importance: high, country: undefined

      at log (routes/economic.js:358:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/calendar?importance=high HTTP/1.1" 200 556 "-" "-"
  console.log
    📅 Economic calendar requested - start: undefined, end: undefined, importance: medium, country: undefined

      at log (routes/economic.js:358:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/calendar?importance=medium HTTP/1.1" 200 104 "-" "-"
  console.log
    📅 Economic calendar requested - start: undefined, end: undefined, importance: low, country: undefined

      at log (routes/economic.js:358:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/calendar?importance=low HTTP/1.1" 200 397 "-" "-"
  console.log
    📅 Economic calendar requested - start: undefined, end: undefined, importance: undefined, country: US

      at log (routes/economic.js:358:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/calendar?country=US HTTP/1.1" 200 1614 "-" "-"
  console.log
    📅 Economic calendar requested - start: undefined, end: undefined, importance: undefined, country: EU

      at log (routes/economic.js:358:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/calendar?country=EU HTTP/1.1" 200 1614 "-" "-"
  console.log
    📅 Economic calendar requested - start: undefined, end: undefined, importance: undefined, country: JP

      at log (routes/economic.js:358:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/calendar?country=JP HTTP/1.1" 200 1614 "-" "-"
  console.log
    📅 Economic calendar requested - start: undefined, end: undefined, importance: undefined, country: GB

      at log (routes/economic.js:358:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/calendar?country=GB HTTP/1.1" 200 1614 "-" "-"
  console.log
    📅 Economic calendar requested - start: undefined, end: undefined, importance: undefined, country: CA

      at log (routes/economic.js:358:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/calendar?country=CA HTTP/1.1" 200 1614 "-" "-"
  console.log
    📈 Economic series requested - series: GDPC1, timeframe: undefined

      at log (routes/economic.js:421:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/series/GDPC1 HTTP/1.1" 200 781 "-" "-"
  console.log
    📈 Economic series requested - series: UNRATE, timeframe: undefined

      at log (routes/economic.js:421:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/series/UNRATE HTTP/1.1" 200 818 "-" "-"
  console.log
    📈 Economic series requested - series: VIXCLS, timeframe: undefined

      at log (routes/economic.js:421:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/series/VIXCLS HTTP/1.1" 200 755 "-" "-"
  console.log
    📈 Economic series requested - series: FEDFUNDS, timeframe: undefined

      at log (routes/economic.js:421:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/series/FEDFUNDS HTTP/1.1" 200 837 "-" "-"
  console.log
    📈 Economic series requested - series: GDPC1, timeframe: 1Y

      at log (routes/economic.js:421:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/series/GDPC1?timeframe=1Y HTTP/1.1" 200 781 "-" "-"
  console.log
    📈 Economic series requested - series: GDPC1, timeframe: 2Y

      at log (routes/economic.js:421:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/series/GDPC1?timeframe=2Y HTTP/1.1" 200 781 "-" "-"
  console.log
    📈 Economic series requested - series: GDPC1, timeframe: 5Y

      at log (routes/economic.js:421:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/series/GDPC1?timeframe=5Y HTTP/1.1" 200 781 "-" "-"
  console.log
    📈 Economic series requested - series: GDPC1, timeframe: 10Y

      at log (routes/economic.js:421:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/series/GDPC1?timeframe=10Y HTTP/1.1" 200 781 "-" "-"
  console.log
    📈 Economic series requested - series: GDPC1, timeframe: max

      at log (routes/economic.js:421:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/series/GDPC1?timeframe=max HTTP/1.1" 200 781 "-" "-"
  console.log
    📈 Economic series requested - series: UNEMPLOYMENT_RATE, timeframe: undefined

      at log (routes/economic.js:421:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/series/UNEMPLOYMENT_RATE?frequency=daily HTTP/1.1" 200 829 "-" "-"
  console.log
    📈 Economic series requested - series: UNEMPLOYMENT_RATE, timeframe: undefined

      at log (routes/economic.js:421:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/series/UNEMPLOYMENT_RATE?frequency=weekly HTTP/1.1" 200 829 "-" "-"
  console.log
    📈 Economic series requested - series: UNEMPLOYMENT_RATE, timeframe: undefined

      at log (routes/economic.js:421:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/series/UNEMPLOYMENT_RATE?frequency=monthly HTTP/1.1" 200 829 "-" "-"
  console.log
    📈 Economic series requested - series: UNEMPLOYMENT_RATE, timeframe: undefined

      at log (routes/economic.js:421:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/series/UNEMPLOYMENT_RATE?frequency=quarterly HTTP/1.1" 200 829 "-" "-"
  console.log
    📈 Economic series requested - series: UNEMPLOYMENT_RATE, timeframe: undefined

      at log (routes/economic.js:421:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/series/UNEMPLOYMENT_RATE?frequency=annual HTTP/1.1" 200 829 "-" "-"
  console.log
    📈 Economic series requested - series: INVALID_SERIES, timeframe: undefined

      at log (routes/economic.js:421:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/series/INVALID_SERIES HTTP/1.1" 404 416 "-" "-"
  console.log
    ⚖️ Economic comparison requested - series: GDPC1,UNRATE,VIXCLS

      at log (routes/economic.js:713:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/compare?series=GDPC1,UNRATE,VIXCLS HTTP/1.1" 200 1494 "-" "-"
  console.log
    ⚖️ Economic comparison requested - series: GDPC1,UNRATE

      at log (routes/economic.js:713:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/compare?series=GDPC1,UNRATE&normalize=true HTTP/1.1" 200 1018 "-" "-"
  console.log
    ⚖️ Economic comparison requested - series: GDPC1,UNRATE

      at log (routes/economic.js:713:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/compare?series=GDPC1,UNRATE&align_period=quarterly HTTP/1.1" 200 1021 "-" "-"
  console.log
    🔮 Economic forecast requested - series: GDPC1, horizon: undefined

      at log (routes/economic.js:505:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/forecast?series=GDPC1 HTTP/1.1" 200 396 "-" "-"
  console.log
    🔮 Economic forecast requested - series: UNRATE, horizon: 1Q

      at log (routes/economic.js:505:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/forecast?series=UNRATE&horizon=1Q HTTP/1.1" 200 377 "-" "-"
  console.log
    🔮 Economic forecast requested - series: UNRATE, horizon: 2Q

      at log (routes/economic.js:505:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/forecast?series=UNRATE&horizon=2Q HTTP/1.1" 200 377 "-" "-"
  console.log
    🔮 Economic forecast requested - series: UNRATE, horizon: 1Y

      at log (routes/economic.js:505:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/forecast?series=UNRATE&horizon=1Y HTTP/1.1" 200 377 "-" "-"
  console.log
    🔮 Economic forecast requested - series: UNRATE, horizon: 2Y

      at log (routes/economic.js:505:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/forecast?series=UNRATE&horizon=2Y HTTP/1.1" 200 377 "-" "-"
  console.log
    🔮 Economic forecast requested - series: UNRATE, horizon: undefined

      at log (routes/economic.js:505:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/forecast?series=UNRATE&confidence=0.95 HTTP/1.1" 200 377 "-" "-"
  console.log
    🔗 Economic correlations requested - series: FEDFUNDS, timeframe: undefined

      at log (routes/economic.js:603:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/correlations?series=FEDFUNDS HTTP/1.1" 200 244 "-" "-"
  console.log
    🔗 Economic correlations requested - series: UNRATE, timeframe: 5Y

      at log (routes/economic.js:603:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/correlations?series=UNRATE&timeframe=5Y HTTP/1.1" 200 242 "-" "-"
  console.log
    📊 Economic indicators requested, category: all

      at log (routes/economic.js:266:13)

  console.log
    📅 Economic calendar requested - start: undefined, end: undefined, importance: undefined, country: undefined

      at log (routes/economic.js:358:13)

  console.log
    📈 Economic series requested - series: GDP, timeframe: undefined

      at log (routes/economic.js:421:13)

  console.log
    🔮 Economic forecast requested - series: UNEMPLOYMENT_RATE, horizon: undefined

      at log (routes/economic.js:505:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic HTTP/1.1" 200 1902 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/calendar HTTP/1.1" 200 1614 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/series/GDP HTTP/1.1" 200 862 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/forecast?series=UNEMPLOYMENT_RATE HTTP/1.1" 200 377 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/indicators HTTP/1.1" 200 3118 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic?limit=1000 HTTP/1.1" 200 3318 "-" "-"
  console.log
    📊 Economic indicators requested, category: all

      at log (routes/economic.js:266:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/indicators HTTP/1.1" 200 3118 "-" "-"
  console.log
    📅 Economic calendar requested - start: invalid-date, end: undefined, importance: undefined, country: undefined

      at log (routes/economic.js:358:13)

  console.error
    Database query error: {
      error: 'invalid input syntax for type date: "invalid-date"',
      query: '\n' +
        '      SELECT\n' +
        '        series_id as event_name,\n' +
        '        date as event_date,\n' +
        '        value as forecast...',
      params: '3 parameters',
      code: '22007'
    }

      1335 |     return result;
      1336 |   } catch (error) {
    > 1337 |     console.error("Database query error:", {
           |             ^
      1338 |       error: error.message,
      1339 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      1340 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1337:13)
      at routes/economic.js:369:28

  console.error
    Economic calendar error: error: invalid input syntax for type date: "invalid-date"
        at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at query (/home/stocks/algo/webapp/lambda/utils/database.js:1308:20)
        at /home/stocks/algo/webapp/lambda/routes/economic.js:369:28 {
      length: 116,
      severity: 'ERROR',
      code: '22007',
      detail: undefined,
      hint: undefined,
      position: undefined,
      internalPosition: undefined,
      internalQuery: undefined,
      where: undefined,
      schema: undefined,
      table: undefined,
      column: undefined,
      dataType: undefined,
      constraint: undefined,
      file: 'datetime.c',
      line: '4026',
      routine: 'DateTimeParseError'
    }

      403 |     });
      404 |   } catch (error) {
    > 405 |     console.error("Economic calendar error:", error);
          |             ^
      406 |     return res.status(500).json({
      407 |       success: false,
      408 |       error: "Failed to fetch economic calendar data",

      at error (routes/economic.js:405:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/calendar?start_date=invalid-date HTTP/1.1" 500 247 "-" "-"
  console.log
    📅 Economic calendar requested - start: undefined, end: 2025-13-40, importance: undefined, country: undefined

      at log (routes/economic.js:358:13)

  console.error
    Database query error: {
      error: 'date/time field value out of range: "2025-13-40"',
      query: '\n' +
        '      SELECT\n' +
        '        series_id as event_name,\n' +
        '        date as event_date,\n' +
        '        value as forecast...',
      params: '3 parameters',
      code: '22008'
    }

      1335 |     return result;
      1336 |   } catch (error) {
    > 1337 |     console.error("Database query error:", {
           |             ^
      1338 |       error: error.message,
      1339 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      1340 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1337:13)
      at routes/economic.js:369:28

  console.error
    Economic calendar error: error: date/time field value out of range: "2025-13-40"
        at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at query (/home/stocks/algo/webapp/lambda/utils/database.js:1308:20)
        at /home/stocks/algo/webapp/lambda/routes/economic.js:369:28 {
      length: 165,
      severity: 'ERROR',
      code: '22008',
      detail: undefined,
      hint: 'Perhaps you need a different "datestyle" setting.',
      position: undefined,
      internalPosition: undefined,
      internalQuery: undefined,
      where: undefined,
      schema: undefined,
      table: undefined,
      column: undefined,
      dataType: undefined,
      constraint: undefined,
      file: 'datetime.c',
      line: '3992',
      routine: 'DateTimeParseError'
    }

      403 |     });
      404 |   } catch (error) {
    > 405 |     console.error("Economic calendar error:", error);
          |             ^
      406 |     return res.status(500).json({
      407 |       success: false,
      408 |       error: "Failed to fetch economic calendar data",

      at error (routes/economic.js:405:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/calendar?end_date=2025-13-40 HTTP/1.1" 500 245 "-" "-"
  console.log
    📅 Economic calendar requested - start: 2025-12-31, end: 2025-01-01, importance: undefined, country: undefined

      at log (routes/economic.js:358:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/calendar?start_date=2025-12-31&end_date=2025-01-01 HTTP/1.1" 200 116 "-" "-"
  console.log
    📅 Economic calendar requested - start: , end: , importance: undefined, country: undefined

      at log (routes/economic.js:358:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/calendar?start_date=&end_date= HTTP/1.1" 200 1614 "-" "-"
  console.log
    📈 Economic series requested - series: UNEMPLOYMENT_RATE, timeframe: undefined

      at log (routes/economic.js:421:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/series/UNEMPLOYMENT_RATE?limit=10 HTTP/1.1" 200 829 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic HTTP/1.1" 200 1902 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic?series=GDP%27%3B%20DROP%20TABLE%20economic_data%3B%20-- HTTP/1.1" 404 56 "-" "-"
  console.log
    ⚖️ Economic comparison requested - series: GDP,UNEMPLOYMENT_RATE,FEDERAL_FUNDS_RATE,INFLATION_RATE

      at log (routes/economic.js:713:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/compare?series=GDP,UNEMPLOYMENT_RATE,FEDERAL_FUNDS_RATE,INFLATION_RATE&timeframe=max HTTP/1.1" 200 1393 "-" "-"
  console.log
    🔮 Economic forecast requested - series: GDP, horizon: 1Y

      at log (routes/economic.js:505:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/economic/forecast?series=GDP&horizon=1Y HTTP/1.1" 200 399 "-" "-"
  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/integration/routes/economic.integration.test.js
  Economic Routes Integration Tests
    GET /api/economic (Economic Data)
      ✓ should return economic data with pagination (18 ms)
      ✓ should handle page and limit parameters (4 ms)
      ✓ should filter by economic series (12 ms)
      ✓ should validate economic data structure (2 ms)
      ✓ should handle invalid pagination parameters (7 ms)
    GET /api/economic/indicators
      ✓ should return available economic indicators (7 ms)
      ✓ should categorize economic indicators (5 ms)
      ✓ should handle category filter for indicators (14 ms)
    GET /api/economic/calendar
      ✓ should return economic calendar events (4 ms)
      ✓ should handle date range for calendar (6 ms)
      ✓ should filter by importance level (12 ms)
      ✓ should handle country filter (17 ms)
    GET /api/economic/series/:seriesId
      ✓ should return specific economic series data (15 ms)
      ✓ should handle timeframe parameter for series (17 ms)
      ✓ should handle frequency parameter (16 ms)
      ✓ should handle invalid series ID (3 ms)
    GET /api/economic/compare
      ✓ should compare multiple economic series (4 ms)
      ✓ should handle normalization parameter (3 ms)
      ✓ should handle period alignment (4 ms)
    GET /api/economic/forecast
      ✓ should return economic forecasts (4 ms)
      ✓ should handle forecast horizon parameter (13 ms)
      ✓ should handle confidence level parameter (3 ms)
    GET /api/economic/correlations
      ✓ should return correlations with market indices (4 ms)
      ✓ should handle timeframe for correlations (3 ms)
    Performance and Edge Cases
      ✓ should handle concurrent requests to economic endpoints (16 ms)
      ✓ should handle large data requests gracefully (2 ms)
      ✓ should maintain response time consistency (3 ms)
      ✓ should handle malformed date parameters (32 ms)
      ✓ should validate economic data value ranges (4 ms)
      ✓ should handle database connection failures gracefully (6 ms)
      ✕ should handle SQL injection attempts (4 ms)
      ✓ should handle memory pressure with large datasets (4 ms)
      ✓ should validate forecast accuracy metadata (4 ms)

  ● Economic Routes Integration Tests › Performance and Edge Cases › should handle SQL injection attempts

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      454 |       );
      455 |
    > 456 |       expect([200, 400].includes(response.status)).toBe(true);
          |                                                    ^
      457 |     });
      458 |
      459 |     test("should handle memory pressure with large datasets", async () => {

      at Object.toBe (tests/integration/routes/economic.integration.test.js:456:52)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

  console.log
    🚨 Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "POST /api/strategies/ai-generate HTTP/1.1" 401 74 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    AI strategy generation request { userId: undefined, prompt: undefined, symbolCount: 1 }

      at log (routes/strategyBuilder.js:167:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "POST /api/strategies/ai-generate HTTP/1.1" 400 84 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    AI strategy generation request {
      userId: undefined,
      prompt: 'Create a momentum trading strategy for high-volume stocks',
      symbolCount: 0
    }

      at log (routes/strategyBuilder.js:167:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "POST /api/strategies/ai-generate HTTP/1.1" 400 110 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    AI strategy generation request { userId: undefined, prompt: 'short', symbolCount: 1 }

      at log (routes/strategyBuilder.js:167:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "POST /api/strategies/ai-generate HTTP/1.1" 400 84 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    AI strategy generation request {
      userId: undefined,
      prompt: 'Create a momentum trading strategy based on RSI and moving averages',
      symbolCount: 2
    }

      at log (routes/strategyBuilder.js:167:13)

  console.log
    {"timestamp":"2025-09-26T12:00:11.893Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Generating AI-powered strategy from natural language","correlationId":"ai-strategy-1758888011842-j1q1cciyj","prompt":"Create a momentum trading strategy based on RSI and moving averages","symbolCount":2,"aiEnabled":true,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

  console.log
    {"timestamp":"2025-09-26T12:00:11.903Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Generating AI strategy using advanced NLP engine","correlationId":"ai-strategy-1758888011842-j1q1cciyj","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

  console.log
    {"timestamp":"2025-09-26T12:00:11.905Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"AI strategy generation successful","correlationId":"ai-strategy-1758888011842-j1q1cciyj","strategyType":"volatility_trading","confidence":0.9,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

  console.log
    {"timestamp":"2025-09-26T12:00:11.905Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Successfully parsed AI response","correlationId":"ai-strategy-1758888011842-j1q1cciyj","strategyName":"Trend_following-APPLE-VolatilityTrading-AI-Q4NZ","confidence":0.9,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

  console.log
    {"timestamp":"2025-09-26T12:00:11.906Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"AI strategy generation successful","correlationId":"ai-strategy-1758888011842-j1q1cciyj","strategyName":"Trend_following-APPLE-VolatilityTrading-AI-Q4NZ","strategyType":"volatility_trading","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

  console.log
    {"timestamp":"2025-09-26T12:00:11.906Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"AI strategy generated successfully","correlationId":"940605ac","strategyName":"Trend_following-APPLE-VolatilityTrading-AI-Q4NZ","strategyType":"volatility_trading","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "POST /api/strategies/ai-generate HTTP/1.1" 200 11127 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    AI strategy generation request {
      userId: undefined,
      prompt: 'Create a momentum trading strategy',
      symbolCount: 0
    }

      at log (routes/strategyBuilder.js:167:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "POST /api/strategies/ai-generate HTTP/1.1" 400 110 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    AI strategy generation request {
      userId: undefined,
      prompt: 'Create a scalping strategy for high frequency trading',
      symbolCount: 1
    }

      at log (routes/strategyBuilder.js:167:13)

  console.log
    {"timestamp":"2025-09-26T12:00:11.916Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Generating AI-powered strategy from natural language","correlationId":"ai-strategy-1758888011842-j1q1cciyj","prompt":"Create a scalping strategy for high frequency trading","symbolCount":1,"aiEnabled":true,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

  console.log
    {"timestamp":"2025-09-26T12:00:11.917Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Generating AI strategy using advanced NLP engine","correlationId":"ai-strategy-1758888011842-j1q1cciyj","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

  console.log
    {"timestamp":"2025-09-26T12:00:11.918Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"AI strategy generation successful","correlationId":"ai-strategy-1758888011842-j1q1cciyj","strategyType":"hft_scalping","confidence":0.9,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

  console.log
    {"timestamp":"2025-09-26T12:00:11.918Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Successfully parsed AI response","correlationId":"ai-strategy-1758888011842-j1q1cciyj","strategyName":"Balanced-SPY-HftScalping-AI-RTGR","confidence":0.9,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

  console.log
    {"timestamp":"2025-09-26T12:00:11.918Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"AI strategy generation successful","correlationId":"ai-strategy-1758888011842-j1q1cciyj","strategyName":"Balanced-SPY-HftScalping-AI-RTGR","strategyType":"hft_scalping","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

  console.log
    {"timestamp":"2025-09-26T12:00:11.919Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"AI strategy generated successfully","correlationId":"b2f5c42e","strategyName":"Balanced-SPY-HftScalping-AI-RTGR","strategyType":"hft_scalping","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "POST /api/strategies/ai-generate HTTP/1.1" 200 10632 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "POST /api/strategies/validate HTTP/1.1" 401 74 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    {"timestamp":"2025-09-26T12:00:11.923Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Strategy validation request","correlationId":"fb37eb23","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "POST /api/strategies/validate HTTP/1.1" 400 68 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    {"timestamp":"2025-09-26T12:00:11.926Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Strategy validation request","correlationId":"4c89dd33","strategyName":"Test Strategy","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "POST /api/strategies/validate HTTP/1.1" 400 68 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    {"timestamp":"2025-09-26T12:00:11.929Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Strategy validation request","correlationId":"29674e6e","strategyName":"Test Momentum Strategy","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

  console.log
    {"timestamp":"2025-09-26T12:00:11.930Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Strategy validation completed","correlationId":"759c32de","isValid":false,"errorCount":2,"warningCount":2,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "POST /api/strategies/validate HTTP/1.1" 200 246 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    {"timestamp":"2025-09-26T12:00:11.934Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Strategy validation request","correlationId":"dc9db1c3","strategyName":"Empty Strategy","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "POST /api/strategies/validate HTTP/1.1" 400 68 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "POST /api/strategies/run-ai-strategy HTTP/1.1" 401 74 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    {"timestamp":"2025-09-26T12:00:11.938Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"AI strategy backtest request","correlationId":"6ddbe3d4","strategyName":"Test Strategy","symbolCount":1,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "POST /api/strategies/run-ai-strategy HTTP/1.1" 200 490 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    {"timestamp":"2025-09-26T12:00:11.945Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"AI strategy backtest request","correlationId":"3c9c6bb2","symbolCount":0,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "POST /api/strategies/run-ai-strategy HTTP/1.1" 400 64 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    {"timestamp":"2025-09-26T12:00:11.948Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"AI strategy backtest request","correlationId":"8c939a82","strategyName":"Test Strategy","symbolCount":0,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "POST /api/strategies/run-ai-strategy HTTP/1.1" 400 64 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    {"timestamp":"2025-09-26T12:00:11.951Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"AI strategy backtest request","correlationId":"2eae0e6e","strategyName":"Test Strategy","symbolCount":2,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "POST /api/strategies/run-ai-strategy HTTP/1.1" 200 487 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    {"timestamp":"2025-09-26T12:00:11.962Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"AI strategy backtest request","correlationId":"45b16330","strategyName":"Test Strategy","symbolCount":0,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

  console.log
    {"timestamp":"2025-09-26T12:00:11.962Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"AI strategy backtest error","correlationId":"2f6dedb6","error":"Cannot read properties of undefined (reading 'length')","severity":"ERROR"}

      at Logger.log [as output] (utils/logger.js:91:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "POST /api/strategies/run-ai-strategy HTTP/1.1" 500 75 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "POST /api/strategies/deploy-hft HTTP/1.1" 401 74 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    {"timestamp":"2025-09-26T12:00:11.967Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"HFT deployment request","correlationId":"c57c74e1","strategyName":"High Performance Strategy","sharpeRatio":1.5,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "POST /api/strategies/deploy-hft HTTP/1.1" 200 401 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    {"timestamp":"2025-09-26T12:00:11.972Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"HFT deployment request","correlationId":"9b0bc74e","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "POST /api/strategies/deploy-hft HTTP/1.1" 400 89 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    {"timestamp":"2025-09-26T12:00:11.975Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"HFT deployment request","correlationId":"2a3f28a9","strategyName":"Poor Performance Strategy","sharpeRatio":0.5,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "POST /api/strategies/deploy-hft HTTP/1.1" 400 246 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    {"timestamp":"2025-09-26T12:00:11.978Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"HFT deployment request","correlationId":"36354d9a","strategyName":"High Performance Strategy","sharpeRatio":1.5,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "POST /api/strategies/deploy-hft HTTP/1.1" 200 401 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    {"timestamp":"2025-09-26T12:00:11.983Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"HFT deployment request","correlationId":"604b8612","strategyName":"Edge Case Strategy","sharpeRatio":1,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "POST /api/strategies/deploy-hft HTTP/1.1" 200 394 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/strategies/available-symbols HTTP/1.1" 401 74 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    {"timestamp":"2025-09-26T12:00:11.990Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Available symbols request","correlationId":"4c43d7d0","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/strategies/available-symbols HTTP/1.1" 200 71 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    {"timestamp":"2025-09-26T12:00:11.995Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Available symbols request","correlationId":"75d25da0","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/strategies/available-symbols HTTP/1.1" 200 71 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:11 +0000] "GET /api/strategies/list HTTP/1.1" 401 74 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    {"timestamp":"2025-09-26T12:00:12.001Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"User strategies list request","correlationId":"cb6b6264","includeBacktests":false,"includeDeployments":false,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:12 +0000] "GET /api/strategies/list HTTP/1.1" 200 80506 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    {"timestamp":"2025-09-26T12:00:12.008Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"User strategies list request","correlationId":"19ced778","includeBacktests":"true","includeDeployments":"true","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:12 +0000] "GET /api/strategies/list?includeBacktests=true&includeDeployments=true HTTP/1.1" 200 80506 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    {"timestamp":"2025-09-26T12:00:12.013Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"User strategies list request","correlationId":"996bae31","includeBacktests":"false","includeDeployments":"false","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:12 +0000] "GET /api/strategies/list?includeBacktests=false&includeDeployments=false HTTP/1.1" 200 80506 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:12 +0000] "GET /api/strategies/templates HTTP/1.1" 401 74 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:12 +0000] "GET /api/strategies/templates HTTP/1.1" 200 994 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:12 +0000] "GET /api/strategies/templates HTTP/1.1" 200 994 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:12 +0000] "GET /api/strategies/templates HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:12 +0000] "POST /api/strategies/ai-generate HTTP/1.1" 401 74 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    {"timestamp":"2025-09-26T12:00:12.050Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Strategy validation request","correlationId":"1fbdf406","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:12 +0000] "POST /api/strategies/validate HTTP/1.1" 400 68 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    AI strategy generation request { userId: undefined, prompt: undefined, symbolCount: 0 }

      at log (routes/strategyBuilder.js:167:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:12 +0000] "POST /api/strategies/ai-generate HTTP/1.1" 400 84 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:12 +0000] "GET /api/strategies/templates HTTP/1.1" 200 994 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:12 +0000] "GET /api/strategies/templates HTTP/1.1" 200 994 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    {"timestamp":"2025-09-26T12:00:12.063Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Available symbols request","correlationId":"f4adf66f","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    {"timestamp":"2025-09-26T12:00:12.066Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"User strategies list request","correlationId":"b0562c1b","includeBacktests":false,"includeDeployments":false,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:12 +0000] "GET /api/strategies/available-symbols HTTP/1.1" 200 71 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:12 +0000] "GET /api/strategies/list HTTP/1.1" 200 80506 "-" "-"
  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/integration/routes/strategyBuilder.integration.test.js
  Strategy Builder Routes
    POST /api/strategies/ai-generate
      ✓ should require authentication (6 ms)
      ✓ should require prompt parameter (8 ms)
      ✓ should require symbols parameter (3 ms)
      ✓ should validate prompt length (3 ms)
      ✓ should handle valid AI generation request (20 ms)
      ✓ should handle empty symbols array (3 ms)
      ✓ should handle preferences parameter (7 ms)
    POST /api/strategies/validate
      ✓ should require authentication (1 ms)
      ✓ should require strategy parameter (3 ms)
      ✓ should require strategy code (3 ms)
      ✓ should validate strategy with code (4 ms)
      ✓ should handle empty strategy code (3 ms)
    POST /api/strategies/run-ai-strategy
      ✓ should require authentication (2 ms)
      ✓ should run AI strategy backtest successfully (6 ms)
      ✓ should require strategy parameter (4 ms)
      ✓ should require strategy code (3 ms)
      ✕ should handle config parameters (4 ms)
      ✕ should handle missing symbols (4 ms)
    POST /api/strategies/deploy-hft
      ✓ should require authentication (1 ms)
      ✕ should return 501 not implemented (5 ms)
      ✓ should require strategy and backtest results (3 ms)
      ✓ should validate HFT qualification requirements (4 ms)
      ✕ should handle qualifying strategy (4 ms)
      ✕ should handle edge case qualification values (5 ms)
    GET /api/strategies/available-symbols
      ✓ should require authentication (1 ms)
      ✓ should return available symbols (6 ms)
      ✓ should handle database connection issues (5 ms)
    GET /api/strategies/list
      ✓ should require authentication (1 ms)
      ✓ should return 501 not implemented (6 ms)
      ✕ should handle query parameters (6 ms)
      ✓ should handle boolean query parameters (8 ms)
    GET /api/strategies/templates
      ✓ should require authentication (2 ms)
      ✓ should return strategy templates (3 ms)
      ✓ should handle empty templates (3 ms)
    Authentication and Error Handling
      ✓ should handle invalid authentication tokens (19 ms)
      ✓ should handle missing authorization header (2 ms)
      ✓ should handle malformed request bodies (3 ms)
      ✓ should handle empty request bodies (3 ms)
    Performance and Concurrency
      ✓ should respond within reasonable time (4 ms)
      ✓ should handle concurrent requests (17 ms)

  ● Strategy Builder Routes › POST /api/strategies/run-ai-strategy › should handle config parameters

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      307 |         });
      308 |
    > 309 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      310 |       expect(response.body.error).toContain("not implemented");
      311 |     });
      312 |

      at Object.toContain (tests/integration/routes/strategyBuilder.integration.test.js:309:41)

  ● Strategy Builder Routes › POST /api/strategies/run-ai-strategy › should handle missing symbols

    expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [400, 422]

      323 |         });
      324 |
    > 325 |       expect([400, 422]).toContain(response.status);
          |                          ^
      326 |       expect(response.body).toHaveProperty("success", false);
      327 |       expect(response.body).toHaveProperty("error");
      328 |       expect(response.body.error).toContain("symbol");

      at Object.toContain (tests/integration/routes/strategyBuilder.integration.test.js:325:26)

  ● Strategy Builder Routes › POST /api/strategies/deploy-hft › should return 501 not implemented

    expect(received).toHaveProperty(path)

    Expected path: "error"
    Received path: []

    Received value: {"data": {"created_at": "2025-09-26T12:00:11.968Z", "deployment_id": 244, "message": "Strategy submitted for HFT deployment review", "next_steps": ["Strategy will be reviewed for risk compliance", "Upon approval, strategy will be deployed to paper trading", "After successful paper trading, can be deployed to live trading"], "status": "pending_review", "strategy_name": "High Performance Strategy"}, "success": true}

      366 |       expect([200, 400, 401, 404, 422, 500]).toContain(response.status);
      367 |       expect(response.body).toHaveProperty("success");
    > 368 |       expect(response.body).toHaveProperty("error");
          |                             ^
      369 |     });
      370 |
      371 |     test("should require strategy and backtest results", async () => {

      at Object.toHaveProperty (tests/integration/routes/strategyBuilder.integration.test.js:368:29)

  ● Strategy Builder Routes › POST /api/strategies/deploy-hft › should handle qualifying strategy

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      429 |         });
      430 |
    > 431 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      432 |       expect(response.body.error).toContain("not implemented");
      433 |     });
      434 |

      at Object.toContain (tests/integration/routes/strategyBuilder.integration.test.js:431:41)

  ● Strategy Builder Routes › POST /api/strategies/deploy-hft › should handle edge case qualification values

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      451 |         });
      452 |
    > 453 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      454 |       expect(response.body.error).toContain("not implemented");
      455 |     });
      456 |   });

      at Object.toContain (tests/integration/routes/strategyBuilder.integration.test.js:453:41)

  ● Strategy Builder Routes › GET /api/strategies/list › should handle query parameters

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      520 |         .set("Authorization", "Bearer dev-bypass-token");
      521 |
    > 522 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      523 |       expect(response.body.error).toContain("not implemented");
      524 |     });
      525 |

      at Object.toContain (tests/integration/routes/strategyBuilder.integration.test.js:522:41)

  console.log
    JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

  console.log
    🚨 Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    Processing request: GET /api/insider/trades/AAPL

      at log (index.js:429:11)

  console.log
    Initializing database connection...

      at log (index.js:388:13)

  console.log
    Database connection established successfully

      at log (index.js:414:17)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    👥 Insider trades requested for AAPL

      at log (routes/insider.js:25:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:12 +0000] "GET /api/insider/trades/AAPL HTTP/1.1" 200 265 "-" "-"
  console.log
    Processing request: GET /api/insider/trades/GOOGL

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    👥 Insider trades requested for GOOGL

      at log (routes/insider.js:25:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:12 +0000] "GET /api/insider/trades/GOOGL HTTP/1.1" 200 267 "-" "-"
  console.log
    Processing request: GET /api/insider/trades/INVALID123

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    👥 Insider trades requested for INVALID123

      at log (routes/insider.js:25:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:12 +0000] "GET /api/insider/trades/INVALID123 HTTP/1.1" 200 277 "-" "-"
  console.log
    Processing request: GET /api/insider/trades/AAPL

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    👥 Insider trades requested for AAPL

      at log (routes/insider.js:25:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:12 +0000] "GET /api/insider/trades/AAPL HTTP/1.1" 200 265 "-" "-"
  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/integration/routes/insider.integration.test.js
  Insider Trading API
    Insider Trades
      ✓ should return insider trades data (may be empty) (9 ms)
      ✓ should handle different symbols correctly (4 ms)
    Error handling
      ✕ should handle invalid symbols (6 ms)
      ✕ should handle server errors gracefully (4 ms)

  ● Insider Trading API › Error handling › should handle invalid symbols

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      37 |       const response = await request(app).get("/api/insider/trades/INVALID123");
      38 |
    > 39 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
         |                                         ^
      40 |       expect(response.body).toHaveProperty("success", false);
      41 |       expect(response.body).toHaveProperty(
      42 |         "error",

      at Object.toContain (tests/integration/routes/insider.integration.test.js:39:41)

  ● Insider Trading API › Error handling › should handle server errors gracefully

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [501]

      50 |
      51 |       // Should return 501 for not implemented, not crash with 500
    > 52 |       expect([501]).toContain(response.status);
         |                     ^
      53 |       if (response.status === 501) {
      54 |         expect(response.body).toHaveProperty("success", false);
      55 |         expect(response.body).toHaveProperty("error");

      at Object.toContain (tests/integration/routes/insider.integration.test.js:52:21)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

  console.log
    🚨 Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:12 +0000] "GET /api/recommendations HTTP/1.1" 200 2011 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📊 Stock recommendations requested - symbol: AAPL, category: all

      at log (routes/recommendations.js:20:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:12 +0000] "GET /api/recommendations?symbol=AAPL HTTP/1.1" 200 500 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📊 Stock recommendations requested - symbol: all, category: buy

      at log (routes/recommendations.js:20:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:12 +0000] "GET /api/recommendations?category=buy HTTP/1.1" 200 902 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:12 +0000] "GET /api/recommendations?analyst=goldman_sachs HTTP/1.1" 200 494 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:12 +0000] "GET /api/recommendations?limit=50 HTTP/1.1" 200 2011 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:12 +0000] "GET /api/recommendations?timeframe=weekly HTTP/1.1" 200 4581 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📊 Stock recommendations requested - symbol: MSFT, category: hold

      at log (routes/recommendations.js:20:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:12 +0000] "GET /api/recommendations?symbol=MSFT&category=hold&limit=10 HTTP/1.1" 200 298 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:12 +0000] "GET /api/recommendations HTTP/1.1" 200 2011 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:12 +0000] "GET /api/recommendations HTTP/1.1" 200 2011 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:12 +0000] "GET /api/recommendations HTTP/1.1" 200 2011 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📊 Stock recommendations requested - symbol: aapl, category: all

      at log (routes/recommendations.js:20:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:12 +0000] "GET /api/recommendations?symbol=aapl HTTP/1.1" 200 500 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📊 Stock recommendations requested - symbol: BRK.A, category: all

      at log (routes/recommendations.js:20:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:12 +0000] "GET /api/recommendations?symbol=BRK.A HTTP/1.1" 200 299 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    👨‍💼 Analyst coverage requested for AAPL

      at log (routes/recommendations.js:194:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:12 +0000] "GET /api/recommendations/analysts/AAPL HTTP/1.1" 200 2412 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    👨‍💼 Analyst coverage requested for AAPL

      at log (routes/recommendations.js:194:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:12 +0000] "GET /api/recommendations/analysts/aapl HTTP/1.1" 200 2412 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    👨‍💼 Analyst coverage requested for MSFT

      at log (routes/recommendations.js:194:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:12 +0000] "GET /api/recommendations/analysts/MSFT?limit=5 HTTP/1.1" 200 1390 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    👨‍💼 Analyst coverage requested for TSLA

      at log (routes/recommendations.js:194:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:12 +0000] "GET /api/recommendations/analysts/TSLA HTTP/1.1" 200 2530 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    👨‍💼 Analyst coverage requested for BRK.A

      at log (routes/recommendations.js:194:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:12 +0000] "GET /api/recommendations/analysts/BRK.A HTTP/1.1" 200 270 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    👨‍💼 Analyst coverage requested for GOOGL

      at log (routes/recommendations.js:194:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/recommendations/analysts/GOOGL HTTP/1.1" 200 2452 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    👨‍💼 Analyst coverage requested for NVDA

      at log (routes/recommendations.js:194:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/recommendations/analysts/NVDA HTTP/1.1" 200 439 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    👨‍💼 Analyst coverage requested for 123

      at log (routes/recommendations.js:194:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/recommendations/analysts/123 HTTP/1.1" 200 266 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    👨‍💼 Analyst coverage requested for AAPL

      at log (routes/recommendations.js:194:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/recommendations/analysts/AAPL?limit=invalid HTTP/1.1" 200 2412 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    👨‍💼 Analyst coverage requested for AAPL

      at log (routes/recommendations.js:194:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/recommendations/analysts/AAPL?limit=-5 HTTP/1.1" 200 439 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    👨‍💼 Analyst coverage requested for AAPL

      at log (routes/recommendations.js:194:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/recommendations/analysts/AAPL?limit=99999 HTTP/1.1" 200 22124 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/recommendations HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/recommendations/analysts/AAPL HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/recommendations HTTP/1.1" 401 64 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📊 Stock recommendations requested - symbol:  invalid , category: all

      at log (routes/recommendations.js:20:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/recommendations?symbol=%20invalid%20 HTTP/1.1" 200 307 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📊 Stock recommendations requested - symbol: all, category:

      at log (routes/recommendations.js:20:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/recommendations?symbol=&category=&analyst= HTTP/1.1" 200 2017 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📊 Stock recommendations requested - symbol: BRK.A, category: all

      at log (routes/recommendations.js:20:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/recommendations?symbol=BRK%2EA HTTP/1.1" 200 299 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/recommendations HTTP/1.1" 200 2011 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    👨‍💼 Analyst coverage requested for AAPL

      at log (routes/recommendations.js:194:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/recommendations/analysts/AAPL HTTP/1.1" 200 2412 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/recommendations HTTP/1.1" 200 2011 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    👨‍💼 Analyst coverage requested for AAPL

      at log (routes/recommendations.js:194:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📊 Stock recommendations requested - symbol: MSFT, category: all

      at log (routes/recommendations.js:20:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/recommendations HTTP/1.1" 200 2011 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/recommendations?symbol=MSFT HTTP/1.1" 200 515 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/recommendations/analysts/AAPL HTTP/1.1" 200 2412 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/recommendations HTTP/1.1" 200 2011 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    👨‍💼 Analyst coverage requested for AAPL

      at log (routes/recommendations.js:194:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/recommendations/analysts/AAPL HTTP/1.1" 200 2412 "-" "-"
  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/integration/routes/recommendations.integration.test.js
  Recommendations Routes
    GET /api/recommendations
      ✓ should fetch stock recommendations successfully (11 ms)
      ✓ should handle symbol parameter (5 ms)
      ✓ should handle category parameter (6 ms)
      ✓ should handle analyst parameter (5 ms)
      ✓ should handle limit parameter (6 ms)
      ✓ should handle timeframe parameter (6 ms)
      ✓ should handle multiple parameters (5 ms)
      ✓ should use default values for missing parameters (5 ms)
      ✓ should include proper response structure (5 ms)
      ✓ should have valid timestamp (5 ms)
      ✓ should handle mixed case symbol (6 ms)
      ✓ should handle special characters in symbol (5 ms)
    GET /api/recommendations/analysts/:symbol
      ✓ should fetch analyst coverage successfully (5 ms)
      ✓ should convert symbol to uppercase (5 ms)
      ✓ should handle limit parameter (5 ms)
      ✓ should use default limit when not specified (6 ms)
      ✓ should handle special characters in symbol (5 ms)
      ✓ should include analyst coverage response structure (6 ms)
      ✓ should have valid timestamp (5 ms)
      ✓ should handle numeric symbols (5 ms)
      ✓ should handle malformed limit parameter (5 ms)
      ✓ should handle negative limit parameter (5 ms)
      ✕ should handle extremely large limit (6 ms)
    Authentication
      ✓ should require authentication for recommendations (1 ms)
      ✓ should require authentication for analyst coverage
      ✓ should handle invalid authentication (4 ms)
    Error Handling
      ✕ should handle malformed URLs gracefully (5 ms)
      ✕ should handle empty parameters (6 ms)
      ✕ should handle URL encoded parameters (5 ms)
    Response Structure Validation
      ✕ should have consistent error response structure (5 ms)
      ✕ should have consistent analyst coverage response structure (7 ms)
    Performance
      ✕ should respond within reasonable time (5 ms)
      ✕ should handle concurrent requests (17 ms)
    Required Setup Documentation
      ✕ should document required setup for recommendations (5 ms)
      ✕ should document required setup for analyst coverage (7 ms)

  ● Recommendations Routes › GET /api/recommendations/analysts/:symbol › should handle extremely large limit

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      278 |         .set("Authorization", "Bearer dev-bypass-token");
      279 |
    > 280 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      281 |       expect(response.body.limit).toBe(99999);
      282 |     });
      283 |   });

      at Object.toContain (tests/integration/routes/recommendations.integration.test.js:280:41)

  ● Recommendations Routes › Error Handling › should handle malformed URLs gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      315 |         .set("Authorization", "Bearer dev-bypass-token");
      316 |
    > 317 |       expect([501, 500].includes(response.status)).toBe(true);
          |                                                    ^
      318 |     });
      319 |
      320 |     test("should handle empty parameters", async () => {

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:317:52)

  ● Recommendations Routes › Error Handling › should handle empty parameters

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      323 |         .set("Authorization", "Bearer dev-bypass-token");
      324 |
    > 325 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      326 |     });
      327 |
      328 |     test("should handle URL encoded parameters", async () => {

      at Object.toContain (tests/integration/routes/recommendations.integration.test.js:325:41)

  ● Recommendations Routes › Error Handling › should handle URL encoded parameters

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      331 |         .set("Authorization", "Bearer dev-bypass-token");
      332 |
    > 333 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      334 |       expect(response.body.symbol).toBe("BRK.A");
      335 |     });
      336 |   });

      at Object.toContain (tests/integration/routes/recommendations.integration.test.js:333:41)

  ● Recommendations Routes › Response Structure Validation › should have consistent error response structure

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      342 |         .set("Authorization", "Bearer dev-bypass-token");
      343 |
    > 344 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      345 |       expect(response.body).toHaveProperty("success", false);
      346 |       expect(response.body).toHaveProperty("error");
      347 |       expect(response.body).toHaveProperty("details");

      at Object.toContain (tests/integration/routes/recommendations.integration.test.js:344:41)

  ● Recommendations Routes › Response Structure Validation › should have consistent analyst coverage response structure

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      367 |         .set("Authorization", "Bearer dev-bypass-token");
      368 |
    > 369 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      370 |       expect(response.body).toHaveProperty("success", false);
      371 |       expect(response.body).toHaveProperty("error");
      372 |       expect(response.body).toHaveProperty("details");

      at Object.toContain (tests/integration/routes/recommendations.integration.test.js:369:41)

  ● Recommendations Routes › Performance › should respond within reasonable time

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      389 |
      390 |       expect(responseTime).toBeLessThan(3000);
    > 391 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      392 |     });
      393 |
      394 |     test("should handle concurrent requests", async () => {

      at Object.toContain (tests/integration/routes/recommendations.integration.test.js:391:41)

  ● Recommendations Routes › Performance › should handle concurrent requests

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      408 |
      409 |       responses.forEach((response) => {
    > 410 |         expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                           ^
      411 |       });
      412 |     });
      413 |   });

      at toContain (tests/integration/routes/recommendations.integration.test.js:410:43)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/routes/recommendations.integration.test.js:409:17)

  ● Recommendations Routes › Required Setup Documentation › should document required setup for recommendations

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      419 |         .set("Authorization", "Bearer dev-bypass-token");
      420 |
    > 421 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      422 |       const setup = response.body.troubleshooting.required_setup;
      423 |
      424 |       // Should include key requirements

      at Object.toContain (tests/integration/routes/recommendations.integration.test.js:421:41)

  ● Recommendations Routes › Required Setup Documentation › should document required setup for analyst coverage

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      439 |         .set("Authorization", "Bearer dev-bypass-token");
      440 |
    > 441 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      442 |       const setup = response.body.troubleshooting.required_setup;
      443 |
      444 |       // Should include key requirements

      at Object.toContain (tests/integration/routes/recommendations.integration.test.js:441:41)

  console.log
    JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123', role: 'user' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

  console.log
    Getting trade import status for user: test-user-123

      at log (routes/trades.js:657:13)

  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123', role: 'user' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

  console.log
    🔄 [TRADES] Generic import requested for user: test-user-123, format: undefined, broker: alpaca

      at log (routes/trades.js:763:13)

  console.log
    JWT verification failed in test mode: jwt malformed

      at ApiKeyService.log [as validateJwtToken] (utils/apiKeyService.js:172:19)

  console.error
    API key retrieval error: Error: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)
        at ApiKeyService.getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:831:15)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1404:14)
        at getUserApiKey (/home/stocks/algo/webapp/lambda/routes/trades.js:432:10)
        at /home/stocks/algo/webapp/lambda/routes/trades.js:797:27

      939 |     } catch (error) {
      940 |       this.recordFailure(error);
    > 941 |       console.error("API key retrieval error:", error);
          |               ^
      942 |
      943 |       if (error.message.includes("circuit breaker")) {
      944 |         throw error;

      at ApiKeyService.error [as getApiKey] (utils/apiKeyService.js:941:15)
      at getApiKey (utils/apiKeyService.js:1404:14)
      at getUserApiKey (routes/trades.js:432:10)
      at routes/trades.js:797:27

  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123', role: 'user' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

  console.log
    🔄 [TRADES] Generic import requested for user: test-user-123, format: invalid, broker: alpaca

      at log (routes/trades.js:763:13)

  console.log
    JWT verification failed in test mode: jwt malformed

      at ApiKeyService.log [as validateJwtToken] (utils/apiKeyService.js:172:19)

  console.error
    API key retrieval error: Error: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)
        at ApiKeyService.getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:831:15)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1404:14)
        at getUserApiKey (/home/stocks/algo/webapp/lambda/routes/trades.js:432:10)
        at /home/stocks/algo/webapp/lambda/routes/trades.js:797:27

      939 |     } catch (error) {
      940 |       this.recordFailure(error);
    > 941 |       console.error("API key retrieval error:", error);
          |               ^
      942 |
      943 |       if (error.message.includes("circuit breaker")) {
      944 |         throw error;

      at ApiKeyService.error [as getApiKey] (utils/apiKeyService.js:941:15)
      at getApiKey (utils/apiKeyService.js:1404:14)
      at getUserApiKey (routes/trades.js:432:10)
      at routes/trades.js:797:27

  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123', role: 'user' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

  console.log
    🔄 [TRADES] Generic import requested for user: test-user-123, format: undefined, broker: alpaca

      at log (routes/trades.js:763:13)

  console.log
    JWT verification failed in test mode: jwt malformed

      at ApiKeyService.log [as validateJwtToken] (utils/apiKeyService.js:172:19)

  console.error
    API key retrieval error: Error: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)
        at ApiKeyService.getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:831:15)
        at getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1404:14)
        at getUserApiKey (/home/stocks/algo/webapp/lambda/routes/trades.js:432:10)
        at /home/stocks/algo/webapp/lambda/routes/trades.js:797:27

      939 |     } catch (error) {
      940 |       this.recordFailure(error);
    > 941 |       console.error("API key retrieval error:", error);
          |               ^
      942 |
      943 |       if (error.message.includes("circuit breaker")) {
      944 |         throw error;

      at ApiKeyService.error [as getApiKey] (utils/apiKeyService.js:941:15)
      at getApiKey (utils/apiKeyService.js:1404:14)
      at getUserApiKey (routes/trades.js:432:10)
      at routes/trades.js:797:27

  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123', role: 'user' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

  console.log
    📈 Trade history request received for user: test-user-123

      at log (routes/trades.js:1873:13)

  console.log
    🔑 Retrieving API credentials for Alpaca...

      at log (routes/trades.js:1898:15)

  console.log
    JWT verification failed in test mode: jwt malformed

      at ApiKeyService.log [as validateJwtToken] (utils/apiKeyService.js:172:19)

  console.error
    API key retrieval error: Error: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)
        at ApiKeyService.getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:831:15)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1404:14)
        at getUserApiKey (/home/stocks/algo/webapp/lambda/routes/trades.js:432:10)
        at /home/stocks/algo/webapp/lambda/routes/trades.js:1899:27

      939 |     } catch (error) {
      940 |       this.recordFailure(error);
    > 941 |       console.error("API key retrieval error:", error);
          |               ^
      942 |
      943 |       if (error.message.includes("circuit breaker")) {
      944 |         throw error;

      at ApiKeyService.error [as getApiKey] (utils/apiKeyService.js:941:15)
      at getApiKey (utils/apiKeyService.js:1404:14)
      at getUserApiKey (routes/trades.js:432:10)
      at routes/trades.js:1899:27

  console.log
    🔄 No broker API credentials found, falling back to database trade data...

      at log (routes/trades.js:2004:13)

  console.error
    Database query error: {
      error: 'invalid input syntax for type bigint: "NaN"',
      query: '\n' +
        '        SELECT\n' +
        '          transaction_id as id,\n' +
        '          symbol,\n' +
        '          transaction_type as acti...',
      params: '3 parameters',
      code: '22P02'
    }

      1335 |     return result;
      1336 |   } catch (error) {
    > 1337 |     console.error("Database query error:", {
           |             ^
      1338 |       error: error.message,
      1339 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      1340 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1337:13)
          at async Promise.all (index 0)
      at routes/trades.js:2031:44

  console.error
    Database fallback failed: invalid input syntax for type bigint: "NaN"

      2068 |       });
      2069 |     } catch (dbError) {
    > 2070 |       console.error("Database fallback failed:", dbError.message);
           |               ^
      2071 |       // If database fallback also fails, return the original 503 error
      2072 |       return res.status(503).json({
      2073 |         success: false,

      at error (routes/trades.js:2070:15)

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/unit/routes/trades.test.js
  Trades Routes - Testing Your Actual Site
    GET /trades/health - Health check
      ✓ should return trade service health status (9 ms)
    GET /trades/ - Root endpoint
      ✓ should return trade API ready message (1 ms)
    GET /trades/import/status - Trade import status
      ✓ should return import status information (6 ms)
    GET /trades/history - Trade history
      ✕ should return user trade history with pagination
      ✕ should handle date range filtering
      ✕ should filter by symbol
      ✕ should support pagination parameters
    GET /trades/analytics - Trade analytics
      ✕ should return trade performance analytics
      ✕ should handle time period filters
      ✕ should include benchmark comparison
    POST /trades/import - Import trades
      ✕ should import trades from CSV data
      ✓ should validate required fields (34 ms)
      ✕ should handle duplicate trades
      ✕ should handle invalid data formats (6 ms)
    GET /trades/export - Export trades
      ✕ should export trades in CSV format
      ✕ should export trades in JSON format
      ✕ should handle date range for export
    GET /trades/brokers - Broker integration status
      ✕ should return connected brokers status
    POST /trades/sync/:broker - Sync trades from broker
      ✕ should sync trades from Alpaca
      ✕ should handle unsupported broker (2 ms)
      ✕ should validate date parameters (1 ms)
    GET /trades/performance - Performance analysis
      ✕ should return detailed performance metrics
      ✕ should include benchmark comparison
      ✕ should support different time periods
    GET /trades/performance/attribution - Performance attribution
      ✕ should return performance attribution analysis
    GET /trades/stats - Trade statistics
      ✕ should return comprehensive trade statistics
      ✕ should filter stats by date range (1 ms)
      ✕ should group stats by time period
    POST /trades/validate - Trade validation
      ✕ should validate trade data before import (4 ms)
      ✕ should identify invalid trade data (1 ms)
    POST /trades/search - Advanced trade search
      ✕ should search trades by multiple criteria
      ✕ should handle empty search criteria (1 ms)
    Error handling
      ✕ should handle database connection errors (1 ms)
      ✕ should handle transaction rollback on import errors
      ✓ should handle malformed request data (6 ms)
      ✕ should handle missing authentication
      ✕ should handle various error scenarios
      ✕ should validate request parameters (11 ms)

  ● Trades Routes - Testing Your Actual Site › GET /trades/history - Trade history › should return user trade history with pagination

    TypeError: query.mockResolvedValue is not a function

      132 |       ];
      133 |
    > 134 |       query.mockResolvedValue({ rows: mockTrades });
          |             ^
      135 |
      136 |       const response = await request(app).get("/trades/history").expect(200);
      137 |

      at Object.mockResolvedValue (tests/unit/routes/trades.test.js:134:13)

  ● Trades Routes - Testing Your Actual Site › GET /trades/history - Trade history › should handle date range filtering

    TypeError: query.mockResolvedValue is not a function

      152 |
      153 |     test("should handle date range filtering", async () => {
    > 154 |       query.mockResolvedValue({ rows: [] });
          |             ^
      155 |
      156 |       const response = await request(app)
      157 |         .get("/trades/history?start_date=2024-01-01&end_date=2024-01-31")

      at Object.mockResolvedValue (tests/unit/routes/trades.test.js:154:13)

  ● Trades Routes - Testing Your Actual Site › GET /trades/history - Trade history › should filter by symbol

    TypeError: query.mockResolvedValue is not a function

      163 |
      164 |     test("should filter by symbol", async () => {
    > 165 |       query.mockResolvedValue({ rows: [] });
          |             ^
      166 |
      167 |       const response = await request(app)
      168 |         .get("/trades/history?symbol=AAPL")

      at Object.mockResolvedValue (tests/unit/routes/trades.test.js:165:13)

  ● Trades Routes - Testing Your Actual Site › GET /trades/history - Trade history › should support pagination parameters

    TypeError: query.mockResolvedValue is not a function

      174 |
      175 |     test("should support pagination parameters", async () => {
    > 176 |       query.mockResolvedValue({ rows: [] });
          |             ^
      177 |
      178 |       const response = await request(app)
      179 |         .get("/trades/history?page=2&limit=25")

      at Object.mockResolvedValue (tests/unit/routes/trades.test.js:176:13)

  ● Trades Routes - Testing Your Actual Site › GET /trades/analytics - Trade analytics › should return trade performance analytics

    TypeError: query.mockResolvedValue is not a function

      201 |       };
      202 |
    > 203 |       query.mockResolvedValue({ rows: [mockAnalytics] });
          |             ^
      204 |
      205 |       const response = await request(app).get("/trades/analytics").expect(200);
      206 |

      at Object.mockResolvedValue (tests/unit/routes/trades.test.js:203:13)

  ● Trades Routes - Testing Your Actual Site › GET /trades/analytics - Trade analytics › should handle time period filters

    TypeError: query.mockResolvedValue is not a function

      217 |
      218 |     test("should handle time period filters", async () => {
    > 219 |       query.mockResolvedValue({ rows: [{}] });
          |             ^
      220 |
      221 |       const response = await request(app)
      222 |         .get("/trades/analytics?period=30d")

      at Object.mockResolvedValue (tests/unit/routes/trades.test.js:219:13)

  ● Trades Routes - Testing Your Actual Site › GET /trades/analytics - Trade analytics › should include benchmark comparison

    TypeError: query.mockResolvedValue is not a function

      228 |
      229 |     test("should include benchmark comparison", async () => {
    > 230 |       query.mockResolvedValue({ rows: [{}] });
          |             ^
      231 |
      232 |       const response = await request(app)
      233 |         .get("/trades/analytics?benchmark=SPY")

      at Object.mockResolvedValue (tests/unit/routes/trades.test.js:230:13)

  ● Trades Routes - Testing Your Actual Site › POST /trades/import - Import trades › should import trades from CSV data

    TypeError: query.mockResolvedValue is not a function

      249 | MSFT,sell,50,300.00,2024-01-16`;
      250 |
    > 251 |       query.mockResolvedValue({ rows: [{ imported: 2 }] });
          |             ^
      252 |       _transaction.mockImplementation(async (callback) => {
      253 |         return await callback({ query });
      254 |       });

      at Object.mockResolvedValue (tests/unit/routes/trades.test.js:251:13)

  ● Trades Routes - Testing Your Actual Site › POST /trades/import - Import trades › should handle duplicate trades

    TypeError: query.mockResolvedValue is not a function

      291 |       };
      292 |
    > 293 |       query.mockResolvedValue({ rows: [{ imported: 0, duplicates: 1 }] });
          |             ^
      294 |       _transaction.mockImplementation(async (callback) => {
      295 |         return await callback({ query });
      296 |       });

      at Object.mockResolvedValue (tests/unit/routes/trades.test.js:293:13)

  ● Trades Routes - Testing Your Actual Site › POST /trades/import - Import trades › should handle invalid data formats

    expect(received).toContain(expected) // indexOf

    Expected substring: "format"
    Received string:    "No active Alpaca API keys found"

      312 |
      313 |       expect(response.body.success).toBe(false);
    > 314 |       expect(response.body.error).toContain("format");
          |                                   ^
      315 |     });
      316 |   });
      317 |

      at Object.toContain (tests/unit/routes/trades.test.js:314:35)

  ● Trades Routes - Testing Your Actual Site › GET /trades/export - Export trades › should export trades in CSV format

    TypeError: query.mockResolvedValue is not a function

      328 |       ];
      329 |
    > 330 |       query.mockResolvedValue({ rows: mockTrades });
          |             ^
      331 |
      332 |       const response = await request(app)
      333 |         .get("/trades/export?format=csv")

      at Object.mockResolvedValue (tests/unit/routes/trades.test.js:330:13)

  ● Trades Routes - Testing Your Actual Site › GET /trades/export - Export trades › should export trades in JSON format

    TypeError: query.mockResolvedValue is not a function

      351 |       ];
      352 |
    > 353 |       query.mockResolvedValue({ rows: mockTrades });
          |             ^
      354 |
      355 |       const response = await request(app)
      356 |         .get("/trades/export?format=json")

      at Object.mockResolvedValue (tests/unit/routes/trades.test.js:353:13)

  ● Trades Routes - Testing Your Actual Site › GET /trades/export - Export trades › should handle date range for export

    TypeError: query.mockResolvedValue is not a function

      363 |
      364 |     test("should handle date range for export", async () => {
    > 365 |       query.mockResolvedValue({ rows: [] });
          |             ^
      366 |
      367 |       const response = await request(app)
      368 |         .get(

      at Object.mockResolvedValue (tests/unit/routes/trades.test.js:365:13)

  ● Trades Routes - Testing Your Actual Site › GET /trades/brokers - Broker integration status › should return connected brokers status

    TypeError: query.mockResolvedValue is not a function

      397 |       ];
      398 |
    > 399 |       query.mockResolvedValue({ rows: mockBrokers });
          |             ^
      400 |
      401 |       const response = await request(app).get("/trades/brokers").expect(200);
      402 |

      at Object.mockResolvedValue (tests/unit/routes/trades.test.js:399:13)

  ● Trades Routes - Testing Your Actual Site › POST /trades/sync/:broker - Sync trades from broker › should sync trades from Alpaca

    TypeError: query.mockResolvedValue is not a function

      425 |       };
      426 |
    > 427 |       query.mockResolvedValue({ rows: [mockSyncResult] });
          |             ^
      428 |       _transaction.mockImplementation(async (callback) => {
      429 |         return await callback({ query });
      430 |       });

      at Object.mockResolvedValue (tests/unit/routes/trades.test.js:427:13)

  ● Trades Routes - Testing Your Actual Site › POST /trades/sync/:broker - Sync trades from broker › should handle unsupported broker

    expected 400 "Bad Request", got 404 "Not Found"

      446 |         .post("/trades/sync/unsupported_broker")
      447 |         .send({ start_date: "2024-01-01" })
    > 448 |         .expect(400);
          |          ^
      449 |
      450 |       expect(response.body.success).toBe(false);
      451 |       expect(response.body.error).toContain("broker");

      at Object.expect (tests/unit/routes/trades.test.js:448:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Trades Routes - Testing Your Actual Site › POST /trades/sync/:broker - Sync trades from broker › should validate date parameters

    expected 400 "Bad Request", got 404 "Not Found"

      456 |         .post("/trades/sync/alpaca")
      457 |         .send({ start_date: "invalid-date" })
    > 458 |         .expect(400);
          |          ^
      459 |
      460 |       expect(response.body.success).toBe(false);
      461 |       expect(response.body.error).toContain("date");

      at Object.expect (tests/unit/routes/trades.test.js:458:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Trades Routes - Testing Your Actual Site › GET /trades/performance - Performance analysis › should return detailed performance metrics

    TypeError: query.mockResolvedValue is not a function

      481 |       };
      482 |
    > 483 |       query.mockResolvedValue({ rows: [mockPerformance] });
          |             ^
      484 |
      485 |       const response = await request(app)
      486 |         .get("/trades/performance")

      at Object.mockResolvedValue (tests/unit/routes/trades.test.js:483:13)

  ● Trades Routes - Testing Your Actual Site › GET /trades/performance - Performance analysis › should include benchmark comparison

    TypeError: query.mockResolvedValue is not a function

      499 |
      500 |     test("should include benchmark comparison", async () => {
    > 501 |       query.mockResolvedValue({ rows: [{}] });
          |             ^
      502 |
      503 |       const response = await request(app)
      504 |         .get("/trades/performance?benchmark=SPY")

      at Object.mockResolvedValue (tests/unit/routes/trades.test.js:501:13)

  ● Trades Routes - Testing Your Actual Site › GET /trades/performance - Performance analysis › should support different time periods

    TypeError: query.mockResolvedValue is not a function

      513 |
      514 |     test("should support different time periods", async () => {
    > 515 |       query.mockResolvedValue({ rows: [{}] });
          |             ^
      516 |
      517 |       const response = await request(app)
      518 |         .get("/trades/performance?period=1y")

      at Object.mockResolvedValue (tests/unit/routes/trades.test.js:515:13)

  ● Trades Routes - Testing Your Actual Site › GET /trades/performance/attribution - Performance attribution › should return performance attribution analysis

    TypeError: query.mockResolvedValue is not a function

      544 |       };
      545 |
    > 546 |       query.mockResolvedValue({ rows: [mockAttribution] });
          |             ^
      547 |
      548 |       const response = await request(app)
      549 |         .get("/trades/performance/attribution")

      at Object.mockResolvedValue (tests/unit/routes/trades.test.js:546:13)

  ● Trades Routes - Testing Your Actual Site › GET /trades/stats - Trade statistics › should return comprehensive trade statistics

    TypeError: query.mockResolvedValue is not a function

      580 |       };
      581 |
    > 582 |       query.mockResolvedValue({ rows: [mockStats] });
          |             ^
      583 |
      584 |       const response = await request(app).get("/trades/stats").expect(200);
      585 |

      at Object.mockResolvedValue (tests/unit/routes/trades.test.js:582:13)

  ● Trades Routes - Testing Your Actual Site › GET /trades/stats - Trade statistics › should filter stats by date range

    TypeError: query.mockResolvedValue is not a function

      596 |
      597 |     test("should filter stats by date range", async () => {
    > 598 |       query.mockResolvedValue({ rows: [{}] });
          |             ^
      599 |
      600 |       const response = await request(app)
      601 |         .get("/trades/stats?start_date=2024-01-01&end_date=2024-01-31")

      at Object.mockResolvedValue (tests/unit/routes/trades.test.js:598:13)

  ● Trades Routes - Testing Your Actual Site › GET /trades/stats - Trade statistics › should group stats by time period

    TypeError: query.mockResolvedValue is not a function

      607 |
      608 |     test("should group stats by time period", async () => {
    > 609 |       query.mockResolvedValue({ rows: [] });
          |             ^
      610 |
      611 |       const response = await request(app)
      612 |         .get("/trades/stats?group_by=month")

      at Object.mockResolvedValue (tests/unit/routes/trades.test.js:609:13)

  ● Trades Routes - Testing Your Actual Site › POST /trades/validate - Trade validation › should validate trade data before import

    expected 200 "OK", got 404 "Not Found"

      635 |         .post("/trades/validate")
      636 |         .send({ trades: [tradeData] })
    > 637 |         .expect(200);
          |          ^
      638 |
      639 |       expect(response.body).toHaveProperty("success", true);
      640 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/trades.test.js:637:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Trades Routes - Testing Your Actual Site › POST /trades/validate - Trade validation › should identify invalid trade data

    expected 200 "OK", got 404 "Not Found"

      656 |         .post("/trades/validate")
      657 |         .send({ trades: [invalidTrade] })
    > 658 |         .expect(200);
          |          ^
      659 |
      660 |       expect(response.body.success).toBe(true);
      661 |       expect(response.body.data.invalid_trades.length).toBeGreaterThan(0);

      at Object.expect (tests/unit/routes/trades.test.js:658:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Trades Routes - Testing Your Actual Site › POST /trades/search - Advanced trade search › should search trades by multiple criteria

    TypeError: query.mockResolvedValue is not a function

      683 |       };
      684 |
    > 685 |       query.mockResolvedValue({ rows: [] });
          |             ^
      686 |
      687 |       const response = await request(app)
      688 |         .post("/trades/search")

      at Object.mockResolvedValue (tests/unit/routes/trades.test.js:685:13)

  ● Trades Routes - Testing Your Actual Site › POST /trades/search - Advanced trade search › should handle empty search criteria

    expected 400 "Bad Request", got 404 "Not Found"

      701 |         .post("/trades/search")
      702 |         .send({})
    > 703 |         .expect(400);
          |          ^
      704 |
      705 |       expect(response.body.success).toBe(false);
      706 |       expect(response.body.error).toContain("criteria");

      at Object.expect (tests/unit/routes/trades.test.js:703:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Trades Routes - Testing Your Actual Site › Error handling › should handle database connection errors

    TypeError: query.mockRejectedValue is not a function

      714 |   describe("Error handling", () => {
      715 |     test("should handle database connection errors", async () => {
    > 716 |       query.mockRejectedValue(new Error("Connection timeout"));
          |             ^
      717 |
      718 |       const response = await request(app).get("/trades/history").expect(500);
      719 |

      at Object.mockRejectedValue (tests/unit/routes/trades.test.js:716:13)

  ● Trades Routes - Testing Your Actual Site › Error handling › should handle transaction rollback on import errors

    ReferenceError: _transaction is not defined

      723 |
      724 |     test("should handle transaction rollback on import errors", async () => {
    > 725 |       _transaction.mockRejectedValue(new Error("Transaction failed"));
          |       ^
      726 |
      727 |       const response = await request(app)
      728 |         .post("/trades/import")

      at Object._transaction (tests/unit/routes/trades.test.js:725:7)

  ● Trades Routes - Testing Your Actual Site › Error handling › should handle missing authentication

    TypeError: authenticateToken.mockImplementation is not a function

      744 |
      745 |     test("should handle missing authentication", async () => {
    > 746 |       authenticateToken.mockImplementation((req, res, _next) => {
          |                         ^
      747 |         res.status(401).json({ success: false, error: "Unauthorized" });
      748 |       });
      749 |

      at Object.mockImplementation (tests/unit/routes/trades.test.js:746:25)

  ● Trades Routes - Testing Your Actual Site › Error handling › should handle various error scenarios

    TypeError: query.mockImplementation is not a function

      756 |     test("should handle various error scenarios", async () => {
      757 |       // Test that the route handles different types of errors
    > 758 |       query.mockImplementation(() => {
          |             ^
      759 |         throw new Error("Database error");
      760 |       });
      761 |

      at Object.mockImplementation (tests/unit/routes/trades.test.js:758:13)

  ● Trades Routes - Testing Your Actual Site › Error handling › should validate request parameters

    expected one of "200, 400", got 503 "Service Unavailable"

      770 |       const response = await request(app)
      771 |         .get("/trades/history?page=invalid&limit=abc")
    > 772 |         .expect([200, 400]); // May succeed with defaults or return validation error
          |          ^
      773 |
      774 |       expect(response.body).toHaveProperty("success");
      775 |     });

      at Object.expect (tests/unit/routes/trades.test.js:772:10)
      ----
      at Test._assertStatusArray (node_modules/supertest/lib/test.js:268:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

  console.log
    🚨 Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

  console.log
    📊 Data API info requested

      at log (routes/data.js:18:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/data HTTP/1.1" 200 306 "-" "-"
  console.log
    📊 Data API info requested

      at log (routes/data.js:18:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/data HTTP/1.1" 200 306 "-" "-"
  console.log
    📊 [DATA] Fetching comprehensive data for AAPL

      at log (routes/data.js:233:15)

  console.log
    ✅ [DATA] Successfully fetched data for AAPL

      at log (routes/data.js:290:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/data/AAPL HTTP/1.1" 200 223 "-" "-"
  console.log
    📊 [DATA] Fetching comprehensive data for AAPL

      at log (routes/data.js:233:15)

  console.log
    ✅ [DATA] Successfully fetched data for AAPL

      at log (routes/data.js:290:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/data/aapl HTTP/1.1" 200 223 "-" "-"
  console.log
    📊 [DATA] Fetching comprehensive data for TSLA

      at log (routes/data.js:233:15)

  console.log
    ✅ [DATA] Successfully fetched data for TSLA

      at log (routes/data.js:290:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/data/TsLa HTTP/1.1" 200 225 "-" "-"
  console.log
    📊 [DATA] Fetching comprehensive data for NONEXISTENT

      at log (routes/data.js:233:15)

  console.log
    ❌ [DATA] No data found for symbol NONEXISTENT

      at log (routes/data.js:268:17)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/data/NONEXISTENT HTTP/1.1" 404 656 "-" "-"
  console.log
    📊 Data API info requested

      at log (routes/data.js:18:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/data/ HTTP/1.1" 200 306 "-" "-"
  console.log
    📊 [DATA] Fetching comprehensive data for AAPL

      at log (routes/data.js:233:15)

  console.log
    ✅ [DATA] Successfully fetched data for AAPL

      at log (routes/data.js:290:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/data/AAPL HTTP/1.1" 200 223 "-" "-"
  console.log
    📊 [DATA] Fetching comprehensive data for TEST123

      at log (routes/data.js:233:15)

  console.log
    ❌ [DATA] No data found for symbol TEST123

      at log (routes/data.js:268:17)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/data/TEST123 HTTP/1.1" 404 644 "-" "-"
  console.log
    📊 [DATA] Fetching comprehensive data for BRK.A

      at log (routes/data.js:233:15)

  console.log
    ❌ [DATA] No data found for symbol BRK.A

      at log (routes/data.js:268:17)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/data/BRK.A HTTP/1.1" 404 638 "-" "-"
  console.log
    📊 [DATA] Fetching comprehensive data for 123

      at log (routes/data.js:233:15)

  console.log
    ❌ [DATA] No data found for symbol 123

      at log (routes/data.js:268:17)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/data/123 HTTP/1.1" 404 632 "-" "-"
  console.log
    📊 [DATA] Fetching comprehensive data for  INVALID

      at log (routes/data.js:233:15)

  console.log
    ❌ [DATA] No data found for symbol  INVALID

      at log (routes/data.js:268:17)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/data/%20invalid%20 HTTP/1.1" 404 650 "-" "-"
  console.log
    📊 [DATA] Fetching comprehensive data for DEFINITELY_NONEXISTENT_SYMBOL

      at log (routes/data.js:233:15)

  console.log
    ❌ [DATA] No data found for symbol DEFINITELY_NONEXISTENT_SYMBOL

      at log (routes/data.js:268:17)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/data/DEFINITELY_NONEXISTENT_SYMBOL HTTP/1.1" 404 710 "-" "-"
  console.log
    📊 [DATA] Fetching comprehensive data for AAPL

      at log (routes/data.js:233:15)

  console.log
    ✅ [DATA] Successfully fetched data for AAPL

      at log (routes/data.js:290:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/data/AAPL HTTP/1.1" 200 223 "-" "-"
  console.log
    📊 [DATA] Fetching comprehensive data for AAPL

      at log (routes/data.js:233:15)

  console.log
    📊 [DATA] Fetching comprehensive data for GOOGL

      at log (routes/data.js:233:15)

  console.log
    📊 [DATA] Fetching comprehensive data for MSFT

      at log (routes/data.js:233:15)

  console.log
    📊 [DATA] Fetching comprehensive data for TSLA

      at log (routes/data.js:233:15)

  console.log
    ✅ [DATA] Successfully fetched data for AAPL

      at log (routes/data.js:290:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/data/AAPL HTTP/1.1" 200 223 "-" "-"
  console.log
    ✅ [DATA] Successfully fetched data for MSFT

      at log (routes/data.js:290:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/data/MSFT HTTP/1.1" 200 221 "-" "-"
  console.log
    ✅ [DATA] Successfully fetched data for TSLA

      at log (routes/data.js:290:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/data/TSLA HTTP/1.1" 200 225 "-" "-"
  console.log
    ✅ [DATA] Successfully fetched data for GOOGL

      at log (routes/data.js:290:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:13 +0000] "GET /api/data/GOOGL HTTP/1.1" 200 225 "-" "-"
  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

PASS tests/integration/routes/data.integration.test.js
  Data Routes
    GET /api/data
      ✓ should return data API information (10 ms)
      ✓ should include endpoint documentation (4 ms)
    GET /api/data/:symbol
      ✓ should handle valid symbol request (10 ms)
      ✓ should convert symbol to uppercase (4 ms)
      ✓ should handle symbol with mixed case (6 ms)
      ✓ should return 404 for non-existent symbol (4 ms)
      ✓ should handle empty symbol gracefully (3 ms)
      ✓ should validate response structure when data exists (4 ms)
      ✓ should handle database errors gracefully (3 ms)
      ✓ should handle special characters in symbol (3 ms)
      ✓ should handle numeric symbols (4 ms)
    Data API Error Handling
      ✓ should handle malformed requests gracefully (3 ms)
      ✓ should return consistent error format (3 ms)
    Data API Performance
      ✓ should respond within reasonable time (3 ms)
      ✓ should handle concurrent requests (15 ms)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

  console.log
    🚨 Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📋 Orders endpoint called for user: dev-user-bypass

      at log (routes/orders.js:71:11)

  console.log
    Executing orders query with timeout protection

      at log (routes/orders.js:144:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/orders HTTP/1.1" 200 453 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📋 Orders endpoint called for user: dev-user-bypass

      at log (routes/orders.js:71:11)

  console.log
    Executing orders query with timeout protection

      at log (routes/orders.js:144:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/orders?status=filled HTTP/1.1" 200 453 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📋 Orders endpoint called for user: dev-user-bypass

      at log (routes/orders.js:71:11)

  console.log
    Executing orders query with timeout protection

      at log (routes/orders.js:144:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/orders?side=buy HTTP/1.1" 200 453 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📋 Orders endpoint called for user: dev-user-bypass

      at log (routes/orders.js:71:11)

  console.log
    Executing orders query with timeout protection

      at log (routes/orders.js:144:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/orders?limit=10&offset=5 HTTP/1.1" 200 453 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/orders HTTP/1.1" 200 819 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    Order details request for user: dev-user-bypass, order: test-order-123

      at log (routes/orders.js:1964:11)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/orders/test-order-123 HTTP/1.1" 404 173 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    Order details request for user: dev-user-bypass, order: non-existent-order

      at log (routes/orders.js:1964:11)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/orders/non-existent-order HTTP/1.1" 404 181 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/orders/test-order-123 HTTP/1.1" 401 74 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📝 New order submission for user: dev-user-bypass, symbol: AAPL, side: buy

      at log (routes/orders.js:399:11)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "POST /api/orders HTTP/1.1" 400 85 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📝 New order submission for user: dev-user-bypass, symbol: AAPL, side: undefined

      at log (routes/orders.js:399:11)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "POST /api/orders HTTP/1.1" 400 91 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📝 New order submission for user: dev-user-bypass, symbol: AAPL, side: buy

      at log (routes/orders.js:399:11)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "POST /api/orders HTTP/1.1" 400 101 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📝 New order submission for user: dev-user-bypass, symbol: AAPL, side: buy

      at log (routes/orders.js:399:11)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "POST /api/orders HTTP/1.1" 400 85 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "POST /api/orders HTTP/1.1" 401 74 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    Update order request for user: dev-user-bypass, order: test-order-123

      at log (routes/orders.js:1739:11)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "PUT /api/orders/test-order-123 HTTP/1.1" 400 163 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    Update order request for user: dev-user-bypass, order: test-order-123

      at log (routes/orders.js:1739:11)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "PUT /api/orders/test-order-123 HTTP/1.1" 400 163 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "PUT /api/orders/test-order-123 HTTP/1.1" 401 74 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    Delete order request for user: dev-user-bypass, order: test-order-123

      at log (routes/orders.js:1874:11)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "DELETE /api/orders/test-order-123 HTTP/1.1" 400 163 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    Delete order request for user: dev-user-bypass, order: non-existent-order

      at log (routes/orders.js:1874:11)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "DELETE /api/orders/non-existent-order HTTP/1.1" 400 167 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "DELETE /api/orders/test-order-123 HTTP/1.1" 401 74 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📋 Order history requested for user: dev-user-bypass

      at log (routes/orders.js:810:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/orders/history HTTP/1.1" 200 139 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📋 Order history requested for user: dev-user-bypass

      at log (routes/orders.js:810:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/orders/history?from=2023-01-01&to=2023-12-31 HTTP/1.1" 200 139 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📋 Order history requested for user: dev-user-bypass

      at log (routes/orders.js:810:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/orders/history?include_summary=true HTTP/1.1" 200 139 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/orders/history HTTP/1.1" 401 74 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📋 Orders endpoint called for user: dev-user-bypass

      at log (routes/orders.js:71:11)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📋 Order history requested for user: dev-user-bypass

      at log (routes/orders.js:810:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📝 New order submission for user: dev-user-bypass, symbol: AAPL, side: buy

      at log (routes/orders.js:399:11)

  console.log
    Executing orders query with timeout protection

      at log (routes/orders.js:144:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/orders HTTP/1.1" 200 453 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "POST /api/orders HTTP/1.1" 400 85 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/orders/history HTTP/1.1" 200 139 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📋 Orders endpoint called for user: dev-user-bypass

      at log (routes/orders.js:71:11)

  console.log
    Executing orders query with timeout protection

      at log (routes/orders.js:144:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/orders?limit=invalid HTTP/1.1" 200 453 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📋 Orders endpoint called for user: dev-user-bypass

      at log (routes/orders.js:71:11)

  console.log
    Executing orders query with timeout protection

      at log (routes/orders.js:144:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/orders?offset=-1 HTTP/1.1" 200 453 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📋 Orders endpoint called for user: dev-user-bypass

      at log (routes/orders.js:71:11)

  console.log
    Executing orders query with timeout protection

      at log (routes/orders.js:144:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/orders?status=invalid_status HTTP/1.1" 200 453 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📋 Orders endpoint called for user: dev-user-bypass

      at log (routes/orders.js:71:11)

  console.log
    Executing orders query with timeout protection

      at log (routes/orders.js:144:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/orders HTTP/1.1" 200 453 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    Order details request for user: dev-user-bypass, order: '; DROP TABLE orders; --

      at log (routes/orders.js:1964:11)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/orders/%27%3B%20DROP%20TABLE%20orders%3B%20-- HTTP/1.1" 404 193 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📋 Orders endpoint called for user: dev-user-bypass

      at log (routes/orders.js:71:11)

  console.log
    Executing orders query with timeout protection

      at log (routes/orders.js:144:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/orders HTTP/1.1" 200 453 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📋 Order history requested for user: dev-user-bypass

      at log (routes/orders.js:810:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/orders/history HTTP/1.1" 200 139 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📋 Orders endpoint called for user: dev-user-bypass

      at log (routes/orders.js:71:11)

  console.log
    Executing orders query with timeout protection

      at log (routes/orders.js:144:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/orders HTTP/1.1" 200 453 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📋 Orders endpoint called for user: dev-user-bypass

      at log (routes/orders.js:71:11)

  console.log
    Executing orders query with timeout protection

      at log (routes/orders.js:144:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/orders HTTP/1.1" 200 453 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/orders HTTP/1.1" 401 78 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/orders HTTP/1.1" 200 819 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📋 Recent orders requested - limit: 20, days: 7, status: all

      at log (routes/orders.js:1049:13)

  console.error
    Database query error: {
      error: 'column o.status does not exist',
      query: '\n' +
        '      SELECT \n' +
        '        o.*,\n' +
        '        CASE \n' +
        '          WHEN p.close IS NOT NULL THEN p.close\n' +
        '          ...',
      params: '2 parameters',
      code: '42703'
    }

      1335 |     return result;
      1336 |   } catch (error) {
    > 1337 |     console.error("Database query error:", {
           |             ^
      1338 |       error: error.message,
      1339 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      1340 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1337:13)
      at routes/orders.js:1112:20

  console.error
    Recent orders error: error: column o.status does not exist
        at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at query (/home/stocks/algo/webapp/lambda/utils/database.js:1308:20)
        at /home/stocks/algo/webapp/lambda/routes/orders.js:1112:20 {
      length: 107,
      severity: 'ERROR',
      code: '42703',
      detail: undefined,
      hint: undefined,
      position: '316',
      internalPosition: undefined,
      internalQuery: undefined,
      where: undefined,
      schema: undefined,
      table: undefined,
      column: undefined,
      dataType: undefined,
      constraint: undefined,
      file: 'parse_relation.c',
      line: '3722',
      routine: 'errorMissingColumn'
    }

      1165 |     });
      1166 |   } catch (error) {
    > 1167 |     console.error("Recent orders error:", error);
           |             ^
      1168 |
      1169 |     // Handle database errors gracefully (table not found, column mismatch, etc.)
      1170 |     if (error.code === "42P01" || error.message?.includes("column") || error.message?.includes("relation")) {

      at error (routes/orders.js:1167:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/orders/recent HTTP/1.1" 200 228 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📋 Recent orders requested - limit: 10, days: 30, status: filled

      at log (routes/orders.js:1049:13)

  console.error
    Database query error: {
      error: 'column o.status does not exist',
      query: '\n' +
        '      SELECT \n' +
        '        o.*,\n' +
        '        CASE \n' +
        '          WHEN p.close IS NOT NULL THEN p.close\n' +
        '          ...',
      params: '3 parameters',
      code: '42703'
    }

      1335 |     return result;
      1336 |   } catch (error) {
    > 1337 |     console.error("Database query error:", {
           |             ^
      1338 |       error: error.message,
      1339 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      1340 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1337:13)
      at routes/orders.js:1112:20

  console.error
    Recent orders error: error: column o.status does not exist
        at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at query (/home/stocks/algo/webapp/lambda/utils/database.js:1308:20)
        at /home/stocks/algo/webapp/lambda/routes/orders.js:1112:20 {
      length: 107,
      severity: 'ERROR',
      code: '42703',
      detail: undefined,
      hint: undefined,
      position: '316',
      internalPosition: undefined,
      internalQuery: undefined,
      where: undefined,
      schema: undefined,
      table: undefined,
      column: undefined,
      dataType: undefined,
      constraint: undefined,
      file: 'parse_relation.c',
      line: '3722',
      routine: 'errorMissingColumn'
    }

      1165 |     });
      1166 |   } catch (error) {
    > 1167 |     console.error("Recent orders error:", error);
           |             ^
      1168 |
      1169 |     // Handle database errors gracefully (table not found, column mismatch, etc.)
      1170 |     if (error.code === "42P01" || error.message?.includes("column") || error.message?.includes("relation")) {

      at error (routes/orders.js:1167:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/orders/recent?limit=10&days=30&status=filled HTTP/1.1" 200 232 "-" "-"
  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/integration/routes/orders.integration.test.js
  Orders Routes Integration Tests
    GET /api/orders (List Orders)
      ✓ should return user orders (23 ms)
      ✓ should handle status filter (10 ms)
      ✓ should handle side filter (6 ms)
      ✓ should handle pagination parameters (7 ms)
      ✓ should require authentication (2 ms)
    GET /api/orders/:orderId (Get Specific Order)
      ✕ should handle order lookup (5 ms)
      ✓ should return 404 for non-existent order (5 ms)
      ✓ should require authentication (2 ms)
    POST /api/orders (Create Order)
      ✓ should create new order with valid data (5 ms)
      ✓ should validate required fields (5 ms)
      ✓ should validate quantity is positive (4 ms)
      ✓ should validate order types (3 ms)
      ✓ should require authentication (1 ms)
    PUT /api/orders/:orderId (Update Order)
      ✓ should update order (3 ms)
      ✓ should validate numeric fields (3 ms)
      ✓ should require authentication (1 ms)
    DELETE /api/orders/:orderId (Cancel Order)
      ✕ should cancel order (5 ms)
      ✕ should return 404 for non-existent order (4 ms)
      ✓ should require authentication (1 ms)
    GET /api/orders/history (Order History)
      ✓ should return order history (5 ms)
      ✓ should handle date filtering (6 ms)
      ✓ should include performance summary (6 ms)
      ✓ should require authentication (1 ms)
    Performance and Edge Cases
      ✓ should handle concurrent requests (16 ms)
      ✓ should handle invalid parameters gracefully (21 ms)
      ✓ should maintain response time consistency (5 ms)
      ✕ should handle SQL injection attempts safely (4 ms)
      ✓ should validate response content types (10 ms)
      ✓ should handle database connection issues gracefully (5 ms)
    Authentication and Trading Mode
      ✓ should respect trading mode restrictions (7 ms)
      ✓ should handle malformed authorization headers (1 ms)
      ✓ should handle empty authorization headers (1 ms)
    GET /api/orders/recent (Recent Orders)
      ✓ should return recent orders with sample data (23 ms)
      ✓ should handle query parameters for recent orders (7 ms)

  ● Orders Routes Integration Tests › GET /api/orders/:orderId (Get Specific Order) › should handle order lookup

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      81 |         .set("Authorization", "Bearer dev-bypass-token");
      82 |
    > 83 |       expect([200, 401].includes(response.status)).toBe(true);
         |                                                    ^
      84 |
      85 |       if (response.status === 200) {
      86 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/orders.integration.test.js:83:52)

  ● Orders Routes Integration Tests › DELETE /api/orders/:orderId (Cancel Order) › should cancel order

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      234 |         .set("Authorization", "Bearer dev-bypass-token");
      235 |
    > 236 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      237 |
      238 |       if (response.status === 200) {
      239 |         // Order deletion successful - no additional validation needed for this test

      at Object.toBe (tests/integration/routes/orders.integration.test.js:236:52)

  ● Orders Routes Integration Tests › DELETE /api/orders/:orderId (Cancel Order) › should return 404 for non-existent order

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      246 |         .set("Authorization", "Bearer dev-bypass-token");
      247 |
    > 248 |       expect([404, 401, 403, 500].includes(response.status)).toBe(true);
          |                                                              ^
      249 |     });
      250 |
      251 |     test("should require authentication", async () => {

      at Object.toBe (tests/integration/routes/orders.integration.test.js:248:62)

  ● Orders Routes Integration Tests › Performance and Edge Cases › should handle SQL injection attempts safely

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      375 |           .set("Authorization", "Bearer dev-bypass-token");
      376 |
    > 377 |         expect([200, 400, 401].includes(response.status)).toBe(true);
          |                                                           ^
      378 |       }
      379 |     });
      380 |

      at Object.toBe (tests/integration/routes/orders.integration.test.js:377:59)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

  console.log
    🚨 Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/settings HTTP/1.1" 200 472 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/settings HTTP/1.1" 401 74 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    ⚙️ Dashboard settings requested for user: dev-user-bypass

      at log (routes/settings.js:44:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/settings/dashboard HTTP/1.1" 200 2899 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    ⚙️ Dashboard settings requested for user: dev-user-bypass

      at log (routes/settings.js:44:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/settings/dashboard HTTP/1.1" 200 2899 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/settings/dashboard HTTP/1.1" 401 74 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📊 Trading mode requested for user: dev-user-bypass

      at log (routes/settings.js:259:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/settings/trading-mode HTTP/1.1" 200 232 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/settings/trading-mode HTTP/1.1" 401 74 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔄 Trading mode toggle requested for user: dev-user-bypass

      at log (routes/settings.js:310:13)

  console.log
    ✅ Trading mode updated to paper for user: dev-user-bypass

      at log (routes/settings.js:353:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "POST /api/settings/trading-mode HTTP/1.1" 200 323 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔄 Trading mode toggle requested for user: dev-user-bypass

      at log (routes/settings.js:310:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "POST /api/settings/trading-mode HTTP/1.1" 400 130 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "POST /api/settings/trading-mode HTTP/1.1" 401 74 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    JWT verification failed in test mode: jwt malformed

      at ApiKeyService.log [as validateJwtToken] (utils/apiKeyService.js:172:19)

  console.error
    Provider listing error: Error: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)
        at ApiKeyService.listProviders (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1216:15)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at listProviders (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1429:14)
        at /home/stocks/algo/webapp/lambda/routes/settings.js:398:23

      1254 |     } catch (error) {
      1255 |       this.recordFailure(error);
    > 1256 |       console.error("Provider listing error:", error);
           |               ^
      1257 |       throw error; // Re-throw error so wrapper can handle it
      1258 |     }
      1259 |   }

      at ApiKeyService.error [as listProviders] (utils/apiKeyService.js:1256:15)
      at listProviders (utils/apiKeyService.js:1429:14)
      at routes/settings.js:398:23

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/settings/api-keys HTTP/1.1" 200 331 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    JWT verification failed in test mode: jwt malformed

      at ApiKeyService.log [as validateJwtToken] (utils/apiKeyService.js:172:19)

  console.error
    Provider listing error: Error: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)
        at ApiKeyService.listProviders (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1216:15)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at listProviders (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1429:14)
        at /home/stocks/algo/webapp/lambda/routes/settings.js:398:23

      1254 |     } catch (error) {
      1255 |       this.recordFailure(error);
    > 1256 |       console.error("Provider listing error:", error);
           |               ^
      1257 |       throw error; // Re-throw error so wrapper can handle it
      1258 |     }
      1259 |   }

      at ApiKeyService.error [as listProviders] (utils/apiKeyService.js:1256:15)
      at listProviders (utils/apiKeyService.js:1429:14)
      at routes/settings.js:398:23

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/settings/api-keys HTTP/1.1" 200 331 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/settings/api-keys HTTP/1.1" 401 74 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "POST /api/settings/api-keys HTTP/1.1" 400 100 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "POST /api/settings/api-keys HTTP/1.1" 400 100 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "POST /api/settings/api-keys HTTP/1.1" 400 100 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "POST /api/settings/api-keys HTTP/1.1" 401 74 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    JWT verification failed in test mode: jwt malformed

      at ApiKeyService.log [as validateJwtToken] (utils/apiKeyService.js:172:19)

  console.error
    API key retrieval error: Error: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)
        at ApiKeyService.getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:831:15)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1404:14)
        at /home/stocks/algo/webapp/lambda/routes/settings.js:421:24

      939 |     } catch (error) {
      940 |       this.recordFailure(error);
    > 941 |       console.error("API key retrieval error:", error);
          |               ^
      942 |
      943 |       if (error.message.includes("circuit breaker")) {
      944 |         throw error;

      at ApiKeyService.error [as getApiKey] (utils/apiKeyService.js:941:15)
      at getApiKey (utils/apiKeyService.js:1404:14)
      at routes/settings.js:421:24

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/settings/api-keys/alpaca HTTP/1.1" 404 65 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/settings/api-keys/alpaca HTTP/1.1" 401 74 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    JWT verification failed in test mode: jwt malformed

      at ApiKeyService.log [as validateJwtToken] (utils/apiKeyService.js:172:19)

  console.error
    API key retrieval error: Error: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)
        at ApiKeyService.getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:831:15)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1404:14)
        at /home/stocks/algo/webapp/lambda/routes/settings.js:536:26

      939 |     } catch (error) {
      940 |       this.recordFailure(error);
    > 941 |       console.error("API key retrieval error:", error);
          |               ^
      942 |
      943 |       if (error.message.includes("circuit breaker")) {
      944 |         throw error;

      at ApiKeyService.error [as getApiKey] (utils/apiKeyService.js:941:15)
      at getApiKey (utils/apiKeyService.js:1404:14)
      at routes/settings.js:536:26

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "PUT /api/settings/api-keys/alpaca HTTP/1.1" 404 79 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "PUT /api/settings/api-keys/alpaca HTTP/1.1" 401 74 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    JWT verification failed in test mode: jwt malformed

      at ApiKeyService.log [as validateJwtToken] (utils/apiKeyService.js:172:19)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "DELETE /api/settings/api-keys/alpaca HTTP/1.1" 404 65 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "DELETE /api/settings/api-keys/alpaca HTTP/1.1" 401 74 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/settings HTTP/1.1" 200 472 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    ⚙️ Dashboard settings requested for user: dev-user-bypass

      at log (routes/settings.js:44:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📊 Trading mode requested for user: dev-user-bypass

      at log (routes/settings.js:259:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    JWT verification failed in test mode: jwt malformed

      at ApiKeyService.log [as validateJwtToken] (utils/apiKeyService.js:172:19)

  console.error
    API key circuit breaker OPENED after 5 failures: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)

      559 |     if (this.circuitBreaker.failures >= this.circuitBreaker.maxFailures) {
      560 |       this.circuitBreaker.state = "OPEN";
    > 561 |       console.error(
          |               ^
      562 |         `API key circuit breaker OPENED after ${this.circuitBreaker.failures} failures:`,
      563 |         error.message
      564 |       );

      at ApiKeyService.error [as recordFailure] (utils/apiKeyService.js:561:15)
      at ApiKeyService.recordFailure (utils/apiKeyService.js:1255:12)
      at listProviders (utils/apiKeyService.js:1429:14)
      at routes/settings.js:398:23

  console.error
    Provider listing error: Error: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)
        at ApiKeyService.listProviders (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1216:15)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at listProviders (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1429:14)
        at /home/stocks/algo/webapp/lambda/routes/settings.js:398:23

      1254 |     } catch (error) {
      1255 |       this.recordFailure(error);
    > 1256 |       console.error("Provider listing error:", error);
           |               ^
      1257 |       throw error; // Re-throw error so wrapper can handle it
      1258 |     }
      1259 |   }

      at ApiKeyService.error [as listProviders] (utils/apiKeyService.js:1256:15)
      at listProviders (utils/apiKeyService.js:1429:14)
      at routes/settings.js:398:23

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/settings/api-keys HTTP/1.1" 200 331 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/settings/dashboard HTTP/1.1" 200 2899 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/settings/trading-mode HTTP/1.1" 200 232 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    ⚙️ Dashboard settings requested for user: dev-user-bypass

      at log (routes/settings.js:44:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/settings/dashboard HTTP/1.1" 200 2899 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔄 Trading mode toggle requested for user: dev-user-bypass

      at log (routes/settings.js:310:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "POST /api/settings/trading-mode HTTP/1.1" 400 130 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    JWT verification failed in test mode: jwt malformed

      at ApiKeyService.log [as validateJwtToken] (utils/apiKeyService.js:172:19)

  console.error
    API key circuit breaker OPENED after 6 failures: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)

      559 |     if (this.circuitBreaker.failures >= this.circuitBreaker.maxFailures) {
      560 |       this.circuitBreaker.state = "OPEN";
    > 561 |       console.error(
          |               ^
      562 |         `API key circuit breaker OPENED after ${this.circuitBreaker.failures} failures:`,
      563 |         error.message
      564 |       );

      at ApiKeyService.error [as recordFailure] (utils/apiKeyService.js:561:15)
      at ApiKeyService.recordFailure [as getApiKey] (utils/apiKeyService.js:940:12)
      at getApiKey (utils/apiKeyService.js:1404:14)
      at routes/settings.js:421:24

  console.error
    API key retrieval error: Error: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)
        at ApiKeyService.getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:831:15)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1404:14)
        at /home/stocks/algo/webapp/lambda/routes/settings.js:421:24

      939 |     } catch (error) {
      940 |       this.recordFailure(error);
    > 941 |       console.error("API key retrieval error:", error);
          |               ^
      942 |
      943 |       if (error.message.includes("circuit breaker")) {
      944 |         throw error;

      at ApiKeyService.error [as getApiKey] (utils/apiKeyService.js:941:15)
      at getApiKey (utils/apiKeyService.js:1404:14)
      at routes/settings.js:421:24

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/settings/api-keys/invalid-provider-name HTTP/1.1" 404 80 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "POST /api/settings/api-keys HTTP/1.1" 400 100 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    JWT verification failed in test mode: jwt malformed

      at ApiKeyService.log [as validateJwtToken] (utils/apiKeyService.js:172:19)

  console.error
    API key circuit breaker OPENED after 7 failures: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)

      559 |     if (this.circuitBreaker.failures >= this.circuitBreaker.maxFailures) {
      560 |       this.circuitBreaker.state = "OPEN";
    > 561 |       console.error(
          |               ^
      562 |         `API key circuit breaker OPENED after ${this.circuitBreaker.failures} failures:`,
      563 |         error.message
      564 |       );

      at ApiKeyService.error [as recordFailure] (utils/apiKeyService.js:561:15)
      at ApiKeyService.recordFailure [as getApiKey] (utils/apiKeyService.js:940:12)
      at getApiKey (utils/apiKeyService.js:1404:14)
      at routes/settings.js:421:24

  console.error
    API key retrieval error: Error: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)
        at ApiKeyService.getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:831:15)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1404:14)
        at /home/stocks/algo/webapp/lambda/routes/settings.js:421:24

      939 |     } catch (error) {
      940 |       this.recordFailure(error);
    > 941 |       console.error("API key retrieval error:", error);
          |               ^
      942 |
      943 |       if (error.message.includes("circuit breaker")) {
      944 |         throw error;

      at ApiKeyService.error [as getApiKey] (utils/apiKeyService.js:941:15)
      at getApiKey (utils/apiKeyService.js:1404:14)
      at routes/settings.js:421:24

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/settings/api-keys/%27%3B%20DROP%20TABLE%20user_api_keys%3B%20-- HTTP/1.1" 404 90 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    JWT verification failed in test mode: jwt malformed

      at ApiKeyService.log [as validateJwtToken] (utils/apiKeyService.js:172:19)

  console.error
    API key circuit breaker OPENED after 8 failures: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)

      559 |     if (this.circuitBreaker.failures >= this.circuitBreaker.maxFailures) {
      560 |       this.circuitBreaker.state = "OPEN";
    > 561 |       console.error(
          |               ^
      562 |         `API key circuit breaker OPENED after ${this.circuitBreaker.failures} failures:`,
      563 |         error.message
      564 |       );

      at ApiKeyService.error [as recordFailure] (utils/apiKeyService.js:561:15)
      at ApiKeyService.recordFailure [as getApiKey] (utils/apiKeyService.js:940:12)
      at getApiKey (utils/apiKeyService.js:1404:14)
      at routes/settings.js:421:24

  console.error
    API key retrieval error: Error: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)
        at ApiKeyService.getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:831:15)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1404:14)
        at /home/stocks/algo/webapp/lambda/routes/settings.js:421:24

      939 |     } catch (error) {
      940 |       this.recordFailure(error);
    > 941 |       console.error("API key retrieval error:", error);
          |               ^
      942 |
      943 |       if (error.message.includes("circuit breaker")) {
      944 |         throw error;

      at ApiKeyService.error [as getApiKey] (utils/apiKeyService.js:941:15)
      at getApiKey (utils/apiKeyService.js:1404:14)
      at routes/settings.js:421:24

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/settings/api-keys/1%27%20OR%20%271%27%3D%271 HTTP/1.1" 404 71 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    JWT verification failed in test mode: jwt malformed

      at ApiKeyService.log [as validateJwtToken] (utils/apiKeyService.js:172:19)

  console.error
    API key circuit breaker OPENED after 9 failures: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)

      559 |     if (this.circuitBreaker.failures >= this.circuitBreaker.maxFailures) {
      560 |       this.circuitBreaker.state = "OPEN";
    > 561 |       console.error(
          |               ^
      562 |         `API key circuit breaker OPENED after ${this.circuitBreaker.failures} failures:`,
      563 |         error.message
      564 |       );

      at ApiKeyService.error [as recordFailure] (utils/apiKeyService.js:561:15)
      at ApiKeyService.recordFailure [as getApiKey] (utils/apiKeyService.js:940:12)
      at getApiKey (utils/apiKeyService.js:1404:14)
      at routes/settings.js:421:24

  console.error
    API key retrieval error: Error: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)
        at ApiKeyService.getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:831:15)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1404:14)
        at /home/stocks/algo/webapp/lambda/routes/settings.js:421:24

      939 |     } catch (error) {
      940 |       this.recordFailure(error);
    > 941 |       console.error("API key retrieval error:", error);
          |               ^
      942 |
      943 |       if (error.message.includes("circuit breaker")) {
      944 |         throw error;

      at ApiKeyService.error [as getApiKey] (utils/apiKeyService.js:941:15)
      at getApiKey (utils/apiKeyService.js:1404:14)
      at routes/settings.js:421:24

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/settings/api-keys/UNION%20SELECT%20*%20FROM%20users HTTP/1.1" 404 84 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    JWT verification failed in test mode: jwt malformed

      at ApiKeyService.log [as validateJwtToken] (utils/apiKeyService.js:172:19)

  console.error
    API key circuit breaker OPENED after 10 failures: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)

      559 |     if (this.circuitBreaker.failures >= this.circuitBreaker.maxFailures) {
      560 |       this.circuitBreaker.state = "OPEN";
    > 561 |       console.error(
          |               ^
      562 |         `API key circuit breaker OPENED after ${this.circuitBreaker.failures} failures:`,
      563 |         error.message
      564 |       );

      at ApiKeyService.error [as recordFailure] (utils/apiKeyService.js:561:15)
      at ApiKeyService.recordFailure [as getApiKey] (utils/apiKeyService.js:940:12)
      at getApiKey (utils/apiKeyService.js:1404:14)
      at routes/settings.js:421:24

  console.error
    API key retrieval error: Error: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)
        at ApiKeyService.getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:831:15)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1404:14)
        at /home/stocks/algo/webapp/lambda/routes/settings.js:421:24

      939 |     } catch (error) {
      940 |       this.recordFailure(error);
    > 941 |       console.error("API key retrieval error:", error);
          |               ^
      942 |
      943 |       if (error.message.includes("circuit breaker")) {
      944 |         throw error;

      at ApiKeyService.error [as getApiKey] (utils/apiKeyService.js:941:15)
      at getApiKey (utils/apiKeyService.js:1404:14)
      at routes/settings.js:421:24

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/settings/api-keys/%3Cscript%3Ealert(%27xss%27)%3C%2Fscript%3E HTTP/1.1" 404 88 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/settings HTTP/1.1" 200 472 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    ⚙️ Dashboard settings requested for user: dev-user-bypass

      at log (routes/settings.js:44:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/settings/dashboard HTTP/1.1" 200 2899 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📊 Trading mode requested for user: dev-user-bypass

      at log (routes/settings.js:259:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/settings/trading-mode HTTP/1.1" 200 232 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    JWT verification failed in test mode: jwt malformed

      at ApiKeyService.log [as validateJwtToken] (utils/apiKeyService.js:172:19)

  console.error
    API key circuit breaker OPENED after 11 failures: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)

      559 |     if (this.circuitBreaker.failures >= this.circuitBreaker.maxFailures) {
      560 |       this.circuitBreaker.state = "OPEN";
    > 561 |       console.error(
          |               ^
      562 |         `API key circuit breaker OPENED after ${this.circuitBreaker.failures} failures:`,
      563 |         error.message
      564 |       );

      at ApiKeyService.error [as recordFailure] (utils/apiKeyService.js:561:15)
      at ApiKeyService.recordFailure (utils/apiKeyService.js:1255:12)
      at listProviders (utils/apiKeyService.js:1429:14)
      at routes/settings.js:398:23

  console.error
    Provider listing error: Error: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)
        at ApiKeyService.listProviders (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1216:15)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at listProviders (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1429:14)
        at /home/stocks/algo/webapp/lambda/routes/settings.js:398:23

      1254 |     } catch (error) {
      1255 |       this.recordFailure(error);
    > 1256 |       console.error("Provider listing error:", error);
           |               ^
      1257 |       throw error; // Re-throw error so wrapper can handle it
      1258 |     }
      1259 |   }

      at ApiKeyService.error [as listProviders] (utils/apiKeyService.js:1256:15)
      at listProviders (utils/apiKeyService.js:1429:14)
      at routes/settings.js:398:23

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/settings/api-keys HTTP/1.1" 200 331 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    ⚙️ Dashboard settings requested for user: dev-user-bypass

      at log (routes/settings.js:44:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/settings/dashboard HTTP/1.1" 200 2899 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/settings HTTP/1.1" 401 78 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/settings HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:14 +0000] "GET /api/settings HTTP/1.1" 401 78 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:15 +0000] "GET /api/settings/apikeys HTTP/1.1" 302 44 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:15 +0000] "GET /api/settings/apikeys?broker=test&active=true HTTP/1.1" 302 68 "-" "-"
  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/integration/routes/settings.integration.test.js
  Settings Routes Integration Tests
    GET /api/settings (Root Endpoint)
      ✓ should return settings API information (7 ms)
      ✓ should require authentication (2 ms)
    GET /api/settings/dashboard (Dashboard Settings)
      ✓ should return dashboard settings (10 ms)
      ✓ should handle database connection issues (5 ms)
      ✓ should require authentication (2 ms)
    GET /api/settings/trading-mode (Trading Mode)
      ✓ should return current trading mode (7 ms)
      ✓ should require authentication (1 ms)
    POST /api/settings/trading-mode (Toggle Trading Mode)
      ✓ should toggle trading mode (6 ms)
      ✓ should validate trading mode values (3 ms)
      ✓ should require authentication (1 ms)
    GET /api/settings/api-keys (API Keys)
      ✕ should return user API keys (29 ms)
      ✓ should mask sensitive API key data (9 ms)
      ✓ should require authentication (1 ms)
    POST /api/settings/api-keys (Create API Key)
      ✓ should create new API key (3 ms)
      ✓ should validate required fields (2 ms)
      ✓ should validate provider types (2 ms)
      ✓ should require authentication (1 ms)
    GET /api/settings/api-keys/:provider (Get Specific API Key)
      ✕ should return specific provider API key status (5 ms)
      ✓ should require authentication (1 ms)
    PUT /api/settings/api-keys/:provider (Update API Key)
      ✓ should update API key (3 ms)
      ✓ should require authentication (1 ms)
    DELETE /api/settings/api-keys/:provider (Delete API Key)
      ✕ should delete API key (7 ms)
      ✓ should require authentication (1 ms)
    Performance and Edge Cases
      ✓ should handle concurrent requests to settings endpoints (20 ms)
      ✓ should maintain response time consistency (5 ms)
      ✓ should handle invalid parameters gracefully (12 ms)
      ✓ should handle SQL injection attempts safely (21 ms)
      ✓ should validate response content types (19 ms)
      ✓ should handle database connection issues gracefully (5 ms)
    Authentication Edge Cases
      ✓ should handle malformed authorization headers (1 ms)
      ✓ should handle empty authorization headers (1 ms)
      ✓ should handle missing bearer token (1 ms)
    GET /api/settings/apikeys (Redirect Endpoint)
      ✓ should redirect to /api/settings/api-keys (3 ms)
      ✓ should handle query parameters in redirect (3 ms)

  ● Settings Routes Integration Tests › GET /api/settings/api-keys (API Keys) › should return user API keys

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      145 |       if (response.status === 200) {
      146 |         expect(response.body).toHaveProperty("providers");
    > 147 |         expect(Array.isArray(response.body.providers)).toBe(true);
          |                                                        ^
      148 |       }
      149 |     });
      150 |

      at Object.toBe (tests/integration/routes/settings.integration.test.js:147:56)

  ● Settings Routes Integration Tests › GET /api/settings/api-keys/:provider (Get Specific API Key) › should return specific provider API key status

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      232 |         .set("Authorization", "Bearer dev-bypass-token");
      233 |
    > 234 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      235 |
      236 |       if (response.status === 200) {
      237 |         expect(response.body).toHaveProperty("provider", "alpaca");

      at Object.toBe (tests/integration/routes/settings.integration.test.js:234:52)

  ● Settings Routes Integration Tests › DELETE /api/settings/api-keys/:provider (Delete API Key) › should delete API key

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      281 |         .set("Authorization", "Bearer dev-bypass-token");
      282 |
    > 283 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      284 |
      285 |       if (response.status === 200) {
      286 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/settings.integration.test.js:283:52)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

  console.log
    🚨 Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

  console.log
    📊 Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:29:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:15 +0000] "GET /api/positioning/stocks HTTP/1.1" 200 4476 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: AAPL, timeframe: daily

      at log (routes/positioning.js:29:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:15 +0000] "GET /api/positioning/stocks?symbol=AAPL HTTP/1.1" 200 1336 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: all, timeframe: weekly

      at log (routes/positioning.js:29:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:15 +0000] "GET /api/positioning/stocks?timeframe=weekly HTTP/1.1" 200 4477 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:29:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:15 +0000] "GET /api/positioning/stocks?limit=10&page=1 HTTP/1.1" 200 4476 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:29:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:15 +0000] "GET /api/positioning/stocks?limit=5&page=2 HTTP/1.1" 200 3290 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:29:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:15 +0000] "GET /api/positioning/stocks HTTP/1.1" 200 4476 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: aapl, timeframe: daily

      at log (routes/positioning.js:29:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:15 +0000] "GET /api/positioning/stocks?symbol=aapl HTTP/1.1" 404 174 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: BRK.A, timeframe: daily

      at log (routes/positioning.js:29:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:15 +0000] "GET /api/positioning/stocks?symbol=BRK.A HTTP/1.1" 404 174 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: NONEXISTENT, timeframe: daily

      at log (routes/positioning.js:29:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:15 +0000] "GET /api/positioning/stocks?symbol=NONEXISTENT HTTP/1.1" 404 174 "-" "-"
  console.error
    Database query error: {
      error: 'column s.quarterly_revenue_growth does not exist',
      query: '\n' +
        '      SELECT\n' +
        '        AVG(COALESCE(s.quarterly_revenue_growth, 0)) as avg_change,\n' +
        '        COUNT(CASE...',
      params: 'no parameters',
      code: '42703'
    }

      1335 |     return result;
      1336 |   } catch (error) {
    > 1337 |     console.error("Database query error:", {
           |             ^
      1338 |       error: error.message,
      1339 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      1340 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1337:13)
      at routes/positioning.js:118:34

  console.error
    Error fetching positioning summary: error: column s.quarterly_revenue_growth does not exist
        at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at query (/home/stocks/algo/webapp/lambda/utils/database.js:1308:20)
        at /home/stocks/algo/webapp/lambda/routes/positioning.js:118:34 {
      length: 124,
      severity: 'ERROR',
      code: '42703',
      detail: undefined,
      hint: undefined,
      position: '36',
      internalPosition: undefined,
      internalQuery: undefined,
      where: undefined,
      schema: undefined,
      table: undefined,
      column: undefined,
      dataType: undefined,
      constraint: undefined,
      file: 'parse_relation.c',
      line: '3722',
      routine: 'errorMissingColumn'
    }

      177 |     });
      178 |   } catch (error) {
    > 179 |     console.error("Error fetching positioning summary:", error);
          |             ^
      180 |     res
      181 |       .status(500)
      182 |       .json({ success: false, error: "Failed to fetch positioning summary" });

      at error (routes/positioning.js:179:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:15 +0000] "GET /api/positioning/summary HTTP/1.1" 500 63 "-" "-"
  console.error
    Database query error: {
      error: 'column s.quarterly_revenue_growth does not exist',
      query: '\n' +
        '      SELECT\n' +
        '        AVG(COALESCE(s.quarterly_revenue_growth, 0)) as avg_change,\n' +
        '        COUNT(CASE...',
      params: 'no parameters',
      code: '42703'
    }

      1335 |     return result;
      1336 |   } catch (error) {
    > 1337 |     console.error("Database query error:", {
           |             ^
      1338 |       error: error.message,
      1339 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      1340 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1337:13)
      at routes/positioning.js:118:34

  console.error
    Error fetching positioning summary: error: column s.quarterly_revenue_growth does not exist
        at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at query (/home/stocks/algo/webapp/lambda/utils/database.js:1308:20)
        at /home/stocks/algo/webapp/lambda/routes/positioning.js:118:34 {
      length: 124,
      severity: 'ERROR',
      code: '42703',
      detail: undefined,
      hint: undefined,
      position: '36',
      internalPosition: undefined,
      internalQuery: undefined,
      where: undefined,
      schema: undefined,
      table: undefined,
      column: undefined,
      dataType: undefined,
      constraint: undefined,
      file: 'parse_relation.c',
      line: '3722',
      routine: 'errorMissingColumn'
    }

      177 |     });
      178 |   } catch (error) {
    > 179 |     console.error("Error fetching positioning summary:", error);
          |             ^
      180 |     res
      181 |       .status(500)
      182 |       .json({ success: false, error: "Failed to fetch positioning summary" });

      at error (routes/positioning.js:179:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:15 +0000] "GET /api/positioning/summary HTTP/1.1" 500 63 "-" "-"
  console.error
    Database query error: {
      error: 'column s.quarterly_revenue_growth does not exist',
      query: '\n' +
        '      SELECT\n' +
        '        AVG(COALESCE(s.quarterly_revenue_growth, 0)) as avg_change,\n' +
        '        COUNT(CASE...',
      params: 'no parameters',
      code: '42703'
    }

      1335 |     return result;
      1336 |   } catch (error) {
    > 1337 |     console.error("Database query error:", {
           |             ^
      1338 |       error: error.message,
      1339 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      1340 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1337:13)
      at routes/positioning.js:118:34

  console.error
    Error fetching positioning summary: error: column s.quarterly_revenue_growth does not exist
        at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at query (/home/stocks/algo/webapp/lambda/utils/database.js:1308:20)
        at /home/stocks/algo/webapp/lambda/routes/positioning.js:118:34 {
      length: 124,
      severity: 'ERROR',
      code: '42703',
      detail: undefined,
      hint: undefined,
      position: '36',
      internalPosition: undefined,
      internalQuery: undefined,
      where: undefined,
      schema: undefined,
      table: undefined,
      column: undefined,
      dataType: undefined,
      constraint: undefined,
      file: 'parse_relation.c',
      line: '3722',
      routine: 'errorMissingColumn'
    }

      177 |     });
      178 |   } catch (error) {
    > 179 |     console.error("Error fetching positioning summary:", error);
          |             ^
      180 |     res
      181 |       .status(500)
      182 |       .json({ success: false, error: "Failed to fetch positioning summary" });

      at error (routes/positioning.js:179:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:15 +0000] "GET /api/positioning/summary HTTP/1.1" 500 63 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:29:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:15 +0000] "GET /api/positioning/stocks HTTP/1.1" 200 4476 "-" "-"
  console.error
    Database query error: {
      error: 'column s.quarterly_revenue_growth does not exist',
      query: '\n' +
        '      SELECT\n' +
        '        AVG(COALESCE(s.quarterly_revenue_growth, 0)) as avg_change,\n' +
        '        COUNT(CASE...',
      params: 'no parameters',
      code: '42703'
    }

      1335 |     return result;
      1336 |   } catch (error) {
    > 1337 |     console.error("Database query error:", {
           |             ^
      1338 |       error: error.message,
      1339 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      1340 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1337:13)
      at routes/positioning.js:118:34

  console.error
    Error fetching positioning summary: error: column s.quarterly_revenue_growth does not exist
        at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at query (/home/stocks/algo/webapp/lambda/utils/database.js:1308:20)
        at /home/stocks/algo/webapp/lambda/routes/positioning.js:118:34 {
      length: 124,
      severity: 'ERROR',
      code: '42703',
      detail: undefined,
      hint: undefined,
      position: '36',
      internalPosition: undefined,
      internalQuery: undefined,
      where: undefined,
      schema: undefined,
      table: undefined,
      column: undefined,
      dataType: undefined,
      constraint: undefined,
      file: 'parse_relation.c',
      line: '3722',
      routine: 'errorMissingColumn'
    }

      177 |     });
      178 |   } catch (error) {
    > 179 |     console.error("Error fetching positioning summary:", error);
          |             ^
      180 |     res
      181 |       .status(500)
      182 |       .json({ success: false, error: "Failed to fetch positioning summary" });

      at error (routes/positioning.js:179:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:15 +0000] "GET /api/positioning/summary HTTP/1.1" 500 63 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:29:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:15 +0000] "GET /api/positioning/stocks HTTP/1.1" 200 4476 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: INVALID_TEST_SYMBOL, timeframe: daily

      at log (routes/positioning.js:29:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:15 +0000] "GET /api/positioning/stocks?symbol=INVALID_TEST_SYMBOL HTTP/1.1" 404 174 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:29:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:15 +0000] "GET /api/positioning/stocks?limit=invalid&page=invalid HTTP/1.1" 200 4476 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:29:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:15 +0000] "GET /api/positioning/stocks?limit=99999 HTTP/1.1" 200 4476 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:29:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:15 +0000] "GET /api/positioning/stocks?limit=-1&page=-1 HTTP/1.1" 200 2322 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:29:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:15 +0000] "GET /api/positioning/stocks HTTP/1.1" 200 4476 "-" "-"
  console.error
    Database query error: {
      error: 'column s.quarterly_revenue_growth does not exist',
      query: '\n' +
        '      SELECT\n' +
        '        AVG(COALESCE(s.quarterly_revenue_growth, 0)) as avg_change,\n' +
        '        COUNT(CASE...',
      params: 'no parameters',
      code: '42703'
    }

      1335 |     return result;
      1336 |   } catch (error) {
    > 1337 |     console.error("Database query error:", {
           |             ^
      1338 |       error: error.message,
      1339 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      1340 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1337:13)
      at routes/positioning.js:118:34

  console.error
    Error fetching positioning summary: error: column s.quarterly_revenue_growth does not exist
        at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at query (/home/stocks/algo/webapp/lambda/utils/database.js:1308:20)
        at /home/stocks/algo/webapp/lambda/routes/positioning.js:118:34 {
      length: 124,
      severity: 'ERROR',
      code: '42703',
      detail: undefined,
      hint: undefined,
      position: '36',
      internalPosition: undefined,
      internalQuery: undefined,
      where: undefined,
      schema: undefined,
      table: undefined,
      column: undefined,
      dataType: undefined,
      constraint: undefined,
      file: 'parse_relation.c',
      line: '3722',
      routine: 'errorMissingColumn'
    }

      177 |     });
      178 |   } catch (error) {
    > 179 |     console.error("Error fetching positioning summary:", error);
          |             ^
      180 |     res
      181 |       .status(500)
      182 |       .json({ success: false, error: "Failed to fetch positioning summary" });

      at error (routes/positioning.js:179:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:15 +0000] "GET /api/positioning/summary HTTP/1.1" 500 63 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:29:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:15 +0000] "GET /api/positioning/stocks HTTP/1.1" 200 4476 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:29:13)

  console.log
    📊 Stock positioning data requested - symbol: AAPL, timeframe: daily

      at log (routes/positioning.js:29:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:15 +0000] "GET /api/positioning/stocks HTTP/1.1" 200 4476 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:15 +0000] "GET /api/positioning/stocks?symbol=AAPL HTTP/1.1" 200 1336 "-" "-"
  console.error
    Database query error: {
      error: 'column s.quarterly_revenue_growth does not exist',
      query: '\n' +
        '      SELECT\n' +
        '        AVG(COALESCE(s.quarterly_revenue_growth, 0)) as avg_change,\n' +
        '        COUNT(CASE...',
      params: 'no parameters',
      code: '42703'
    }

      1335 |     return result;
      1336 |   } catch (error) {
    > 1337 |     console.error("Database query error:", {
           |             ^
      1338 |       error: error.message,
      1339 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      1340 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1337:13)
      at routes/positioning.js:118:34

  console.error
    Error fetching positioning summary: error: column s.quarterly_revenue_growth does not exist
        at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at query (/home/stocks/algo/webapp/lambda/utils/database.js:1308:20)
        at /home/stocks/algo/webapp/lambda/routes/positioning.js:118:34 {
      length: 124,
      severity: 'ERROR',
      code: '42703',
      detail: undefined,
      hint: undefined,
      position: '36',
      internalPosition: undefined,
      internalQuery: undefined,
      where: undefined,
      schema: undefined,
      table: undefined,
      column: undefined,
      dataType: undefined,
      constraint: undefined,
      file: 'parse_relation.c',
      line: '3722',
      routine: 'errorMissingColumn'
    }

      177 |     });
      178 |   } catch (error) {
    > 179 |     console.error("Error fetching positioning summary:", error);
          |             ^
      180 |     res
      181 |       .status(500)
      182 |       .json({ success: false, error: "Failed to fetch positioning summary" });

      at error (routes/positioning.js:179:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:15 +0000] "GET /api/positioning/summary HTTP/1.1" 500 63 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:29:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:15 +0000] "GET /api/positioning/stocks HTTP/1.1" 200 4476 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: all, timeframe:

      at log (routes/positioning.js:29:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:15 +0000] "GET /api/positioning/stocks?symbol=&timeframe= HTTP/1.1" 200 4471 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: BRK.A, timeframe: daily

      at log (routes/positioning.js:29:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:15 +0000] "GET /api/positioning/stocks?symbol=BRK%2EA HTTP/1.1" 404 174 "-" "-"
  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/integration/routes/positioning.integration.test.js
  Positioning Routes
    GET /api/positioning/stocks
      ✓ should return stock positioning data (10 ms)
      ✓ should support symbol parameter (7 ms)
      ✓ should support timeframe parameter (3 ms)
      ✓ should support pagination parameters (3 ms)
      ✓ should handle pagination with different page numbers (4 ms)
      ✓ should validate response structure when data exists (4 ms)
      ✓ should handle mixed case symbol parameter (3 ms)
      ✓ should handle special characters in symbol (5 ms)
      ✓ should return 404 for non-existent symbol (3 ms)
    GET /api/positioning/summary
      ✓ should return positioning summary (12 ms)
      ✓ should include valid positioning values (3 ms)
      ✓ should have valid timestamp format (7 ms)
    Authentication
      ✓ should require authentication for stock positioning (8 ms)
      ✕ should require authentication for positioning summary (3 ms)
      ✓ should handle invalid authentication (8 ms)
    Error Handling
      ✓ should handle database errors gracefully (3 ms)
      ✓ should handle malformed parameters (3 ms)
      ✓ should handle extremely large limit values (5 ms)
      ✓ should handle negative pagination values (3 ms)
    Data Validation
      ✓ should return consistent data structure (3 ms)
      ✓ should include data freshness indicators (3 ms)
    Performance
      ✓ should respond within reasonable time (9 ms)
      ✓ should handle concurrent requests (12 ms)
    Query Parameter Validation
      ✓ should use default values for missing parameters (3 ms)
      ✓ should handle empty string parameters (3 ms)
      ✓ should handle URL encoded parameters (6 ms)

  ● Positioning Routes › Authentication › should require authentication for positioning summary

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      264 |       // No auth header
      265 |
    > 266 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      267 |     });
      268 |
      269 |     test("should handle invalid authentication", async () => {

      at Object.toBe (tests/integration/routes/positioning.integration.test.js:266:52)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

  console.log
    🚨 Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:15 +0000] "GET /api/calendar HTTP/1.1" 200 120 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:15 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:15 +0000] "GET /api/calendar/earnings?start_date=2024-01-01&end_date=2024-01-31 HTTP/1.1" 200 3290 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: AAPL, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/calendar/earnings?symbol=AAPL HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 7

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/calendar/earnings?days_ahead=7 HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/calendar/earnings?limit=10 HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: AAPL, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/calendar/earnings?symbol=AAPL&days_ahead=30&limit=25 HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: NONEXISTENT, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/calendar/earnings?symbol=NONEXISTENT&start_date=2050-01-01&end_date=2050-01-02 HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/calendar/earnings?start_date=invalid-date HTTP/1.1" 400 120 "-" "-"
  console.log
    💰 Dividends calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:867:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/calendar/dividends HTTP/1.1" 200 11732 "-" "-"
  console.log
    💰 Dividends calendar requested - symbol: AAPL, days_ahead: 30

      at log (routes/calendar.js:867:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/calendar/dividends?symbol=AAPL HTTP/1.1" 200 1353 "-" "-"
  console.log
    📊 Economic calendar requested - country: US, importance: all

      at log (routes/calendar.js:1147:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/calendar/economic HTTP/1.1" 200 9562 "-" "-"
  console.log
    📊 Economic calendar requested - country: US, importance: all

      at log (routes/calendar.js:1147:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/calendar/economic?country=US HTTP/1.1" 200 9055 "-" "-"
  console.log
    📅 Upcoming calendar events requested - days: 30, country: US, importance: all

      at log (routes/calendar.js:1560:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/calendar/upcoming HTTP/1.1" 200 7137 "-" "-"
  console.log
    📅 Upcoming calendar events requested - days: 7, country: US, importance: all

      at log (routes/calendar.js:1560:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/calendar/upcoming?days=7 HTTP/1.1" 200 2727 "-" "-"
  console.log
    📅 Upcoming calendar events requested - days: 14, country: US, importance: all

      at log (routes/calendar.js:1560:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/calendar/upcoming?days=14&type=earnings&symbol=AAPL&limit=25 HTTP/1.1" 200 3522 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/calendar/health HTTP/1.1" 200 157 "-" "-"
  console.log
    Calendar debug endpoint called

      at log (routes/calendar.js:272:13)

  console.log
    Table exists check: { exists: true }

      at log (routes/calendar.js:284:13)

  console.log
    Total earnings reports: { total: '5' }

      at log (routes/calendar.js:290:15)

  console.log
    Sample records: [
      {
        symbol: 'AMZN',
        event_type: 'earnings',
        start_date: 2024-02-05T06:00:00.000Z,
        title: 'AMZN Q1 2024 Earnings Report',
        eps_estimate: '0.80',
        eps_actual: '1.00'
      },
      {
        symbol: 'TSLA',
        event_type: 'earnings',
        start_date: 2024-01-30T06:00:00.000Z,
        title: 'TSLA Q1 2024 Earnings Report',
        eps_estimate: '0.73',
        eps_actual: '0.71'
      },
      {
        symbol: 'GOOGL',
        event_type: 'earnings',
        start_date: 2024-01-25T06:00:00.000Z,
        title: 'GOOGL Q1 2024 Earnings Report',
        eps_estimate: '1.59',
        eps_actual: '1.64'
      },
      {
        symbol: 'MSFT',
        event_type: 'earnings',
        start_date: 2024-01-20T06:00:00.000Z,
        title: 'MSFT Q1 2024 Earnings Report',
        eps_estimate: '2.87',
        eps_actual: '2.93'
      },
      {
        symbol: 'AAPL',
        event_type: 'earnings',
        start_date: 2024-01-15T06:00:00.000Z,
        title: 'AAPL Q1 2024 Earnings Report',
        eps_estimate: '2.10',
        eps_actual: '2.18'
      }
    ]

      at log (routes/calendar.js:302:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/calendar/debug HTTP/1.1" 200 1007 "-" "-"
  console.log
    Calendar debug endpoint called

      at log (routes/calendar.js:272:13)

  console.log
    Table exists check: { exists: true }

      at log (routes/calendar.js:284:13)

  console.log
    Total earnings reports: { total: '5' }

      at log (routes/calendar.js:290:15)

  console.log
    Sample records: [
      {
        symbol: 'AMZN',
        event_type: 'earnings',
        start_date: 2024-02-05T06:00:00.000Z,
        title: 'AMZN Q1 2024 Earnings Report',
        eps_estimate: '0.80',
        eps_actual: '1.00'
      },
      {
        symbol: 'TSLA',
        event_type: 'earnings',
        start_date: 2024-01-30T06:00:00.000Z,
        title: 'TSLA Q1 2024 Earnings Report',
        eps_estimate: '0.73',
        eps_actual: '0.71'
      },
      {
        symbol: 'GOOGL',
        event_type: 'earnings',
        start_date: 2024-01-25T06:00:00.000Z,
        title: 'GOOGL Q1 2024 Earnings Report',
        eps_estimate: '1.59',
        eps_actual: '1.64'
      },
      {
        symbol: 'MSFT',
        event_type: 'earnings',
        start_date: 2024-01-20T06:00:00.000Z,
        title: 'MSFT Q1 2024 Earnings Report',
        eps_estimate: '2.87',
        eps_actual: '2.93'
      },
      {
        symbol: 'AAPL',
        event_type: 'earnings',
        start_date: 2024-01-15T06:00:00.000Z,
        title: 'AAPL Q1 2024 Earnings Report',
        eps_estimate: '2.10',
        eps_actual: '2.18'
      }
    ]

      at log (routes/calendar.js:302:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/calendar/debug HTTP/1.1" 200 1007 "-" "-"
  console.log
    Calendar test endpoint called

      at log (routes/calendar.js:333:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/calendar/test HTTP/1.1" 200 1142 "-" "-"
  console.log
    Calendar events endpoint called with params: {}

      at log (routes/calendar.js:372:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/calendar/events HTTP/1.1" 200 223 "-" "-"
  console.log
    Calendar events endpoint called with params: { page: '2' }

      at log (routes/calendar.js:372:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/calendar/events?page=2 HTTP/1.1" 200 222 "-" "-"
  console.log
    Calendar events endpoint called with params: { limit: '10' }

      at log (routes/calendar.js:372:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/calendar/events?limit=10 HTTP/1.1" 200 223 "-" "-"
  console.log
    Calendar events endpoint called with params: { type: 'upcoming' }

      at log (routes/calendar.js:372:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/calendar/events?type=upcoming HTTP/1.1" 200 223 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/calendar/earnings-estimates HTTP/1.1" 200 1442 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/calendar/earnings-estimates?page=1&limit=5 HTTP/1.1" 200 1581 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/calendar/earnings-history HTTP/1.1" 200 2118 "-" "-"
  console.error
    Database query error: {
      error: 'column "date" does not exist',
      query: '\n' +
        '      SELECT\n' +
        '        symbol,\n' +
        '        symbol as company_name,\n' +
        '        quarter as report_date,\n' +
        '      ...',
      params: '2 parameters',
      code: '42703'
    }

      1335 |     return result;
      1336 |   } catch (error) {
    > 1337 |     console.error("Database query error:", {
           |             ^
      1338 |       error: error.message,
      1339 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      1340 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1337:13)
          at async Promise.all (index 0)
      at routes/calendar.js:792:57

  console.error
    Error fetching earnings metrics: error: column "date" does not exist
        at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at query (/home/stocks/algo/webapp/lambda/utils/database.js:1308:20)
        at async Promise.all (index 0)
        at /home/stocks/algo/webapp/lambda/routes/calendar.js:792:57 {
      length: 105,
      severity: 'ERROR',
      code: '42703',
      detail: undefined,
      hint: undefined,
      position: '880',
      internalPosition: undefined,
      internalQuery: undefined,
      where: undefined,
      schema: undefined,
      table: undefined,
      column: undefined,
      dataType: undefined,
      constraint: undefined,
      file: 'parse_relation.c',
      line: '3722',
      routine: 'errorMissingColumn'
    }

      836 |     });
      837 |   } catch (error) {
    > 838 |     console.error("Error fetching earnings metrics:", error);
          |             ^
      839 |     res.status(500).json({
      840 |       success: false,
      841 |       error: "Failed to fetch earnings metrics",

      at error (routes/calendar.js:838:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/calendar/earnings-metrics HTTP/1.1" 500 176 "-" "-"
  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/integration/routes/calendar.integration.test.js
  Calendar Routes
    GET /api/calendar
      ✓ should return calendar endpoints (3 ms)
    GET /api/calendar/earnings
      ✓ should return comprehensive earnings calendar data (12 ms)
      ✓ should handle date range parameters (6 ms)
      ✓ should handle symbol parameter (3 ms)
      ✓ should handle days_ahead parameter (3 ms)
      ✓ should handle limit parameter (3 ms)
      ✓ should handle multiple parameters together (3 ms)
      ✓ should return valid response structure for empty results (5 ms)
      ✕ should handle invalid dates gracefully (1 ms)
    GET /api/calendar/dividends
      ✓ should return dividend calendar data (4 ms)
      ✓ should handle symbol parameter in dividend calendar (3 ms)
    GET /api/calendar/economic
      ✕ should return economic calendar data (5 ms)
      ✕ should handle country parameter in 501 response (3 ms)
    GET /api/calendar/upcoming
      ✕ should return 501 not implemented (3 ms)
      ✕ should handle days parameter in 501 response (3 ms)
      ✕ should handle multiple parameters in 501 response (2 ms)
    GET /api/calendar/health
      ✓ should return health status (2 ms)
    GET /api/calendar/debug
      ✓ should return debug information (6 ms)
      ✓ should include table information when table exists (4 ms)
    GET /api/calendar/test
      ✓ should return test data (3 ms)
    GET /api/calendar/events
      ✓ should handle database errors gracefully (4 ms)
      ✓ should handle page parameter (3 ms)
      ✓ should handle limit parameter (3 ms)
      ✓ should handle type filter parameter (3 ms)
    GET /api/calendar/earnings-estimates
      ✓ should handle database dependencies gracefully (7 ms)
      ✓ should handle pagination parameters (2 ms)
    GET /api/calendar/earnings-history
      ✓ should handle database dependencies gracefully (2 ms)
    GET /api/calendar/earnings-metrics
      ✕ should handle database dependencies gracefully (19 ms)

  ● Calendar Routes › GET /api/calendar/earnings › should handle invalid dates gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 400

      126 |       );
      127 |
    > 128 |       expect(response.status).toBe(200);
          |                               ^
      129 |       expect(response.body.success).toBe(true);
      130 |       expect(response.body).toHaveProperty("data");
      131 |     });

      at Object.toBe (tests/integration/routes/calendar.integration.test.js:128:31)

  ● Calendar Routes › GET /api/calendar/economic › should return economic calendar data

    expect(received).toHaveProperty(path)

    Expected path: "troubleshooting"
    Received path: []

    Received value: {"data": {"available_filters": {"categories": ["monetary_policy", "inflation", "employment", "gdp", "consumption", "manufacturing", "sentiment", "housing"], "countries": ["US", "EU", "GB", "JP", "CA", "AU"], "importance_levels": ["all", "high", "medium", "low"]}, "economic_events": [{"actual": null, "category": "employment", "country": "US", "currency": "USD", "date": "2025-09-26", "description": "Weekly unemployment insurance claims", "event_id": "US_employment_2025-09-26", "forecast": "241K", "frequency": "weekly", "impact": "low", "importance": "low", "is_tentative": false, "local_time": "08:30", "previous": "339K", "source": "Bureau of Labor Statistics", "time": "2025-09-26T13:30:00.000Z", "title": "Initial Jobless Claims", "unit": "jobs", "volatility_expected": "low"}, {"actual": null, "category": "sentiment", "country": "US", "currency": "USD", "date": "2025-09-29", "description": "Consumer sentiment and economic outlook confidence", "event_id": "US_sentiment_2025-09-29", "forecast": "104.5", "frequency": "monthly", "impact": "low", "importance": "low", "is_tentative": true, "local_time": "10:00", "previous": "110.4", "source": "Bureau of Labor Statistics", "time": "2025-09-29T15:00:00.000Z", "title": "Consumer Confidence Index", "unit": "index", "volatility_expected": "low"}, {"actual": "4.98%", "category": "monetary_policy", "country": "US", "currency": "USD", "date": "2025-09-30", "description": "FOMC monetary policy decision and rate announcement", "event_id": "US_monetary_policy_2025-09-30", "forecast": "3.06%", "frequency": "monthly", "impact": "high", "importance": "high", "is_tentative": false, "local_time": "14:00", "previous": "4.12%", "source": "Bureau of Labor Statistics", "time": "2025-09-30T19:00:00.000Z", "title": "Federal Reserve Interest Rate Decision", "unit": "index", "volatility_expected": "high"}, {"actual": null, "category": "employment", "country": "US", "currency": "USD", "date": "2025-09-30", "description": "Monthly employment report and unemployment rate", "event_id": "US_employment_2025-09-30", "forecast": "232K", "frequency": "monthly", "impact": "high", "importance": "high", "is_tentative": false, "local_time": "08:30", "previous": "303K", "source": "Bureau of Labor Statistics", "time": "2025-09-30T13:30:00.000Z", "title": "Non-Farm Payrolls", "unit": "jobs", "volatility_expected": "high"}, {"actual": null, "category": "consumption", "country": "US", "currency": "USD", "date": "2025-09-30", "description": "Monthly consumer spending and retail sector activity", "event_id": "US_consumption_2025-09-30", "forecast": "-0.0%", "frequency": "monthly", "impact": "medium", "importance": "medium", "is_tentative": false, "local_time": "08:30", "previous": "1.6%", "source": "Bureau of Labor Statistics", "time": "2025-09-30T13:30:00.000Z", "title": "Retail Sales", "unit": "index", "volatility_expected": "medium"}, {"actual": null, "category": "consumption", "country": "US", "currency": "USD", "date": "2025-10-01", "description": "Monthly consumer spending and retail sector activity", "event_id": "US_consumption_2025-10-01", "forecast": "0.8%", "frequency": "monthly", "impact": "medium", "importance": "medium", "is_tentative": false, "local_time": "08:30", "previous": "0.5%", "source": "Bureau of Labor Statistics", "time": "2025-10-01T13:30:00.000Z", "title": "Retail Sales", "unit": "index", "volatility_expected": "medium"}, {"actual": "61.5", "category": "manufacturing", "country": "US", "currency": "USD", "date": "2025-10-01", "description": "Manufacturing sector purchasing managers index", "event_id": "US_manufacturing_2025-10-01", "forecast": "49.2", "frequency": "monthly", "impact": "medium", "importance": "medium", "is_tentative": false, "local_time": "10:00", "previous": "51.3", "source": "Bureau of Labor Statistics", "time": "2025-10-01T15:00:00.000Z", "title": "ISM Manufacturing PMI", "unit": "index", "volatility_expected": "medium"}, {"actual": "108.0", "category": "sentiment", "country": "US", "currency": "USD", "date": "2025-10-02", "description": "Consumer sentiment and economic outlook confidence", "event_id": "US_sentiment_2025-10-02", "forecast": "103.4", "frequency": "monthly", "impact": "low", "importance": "low", "is_tentative": false, "local_time": "10:00", "previous": "93.9", "source": "Bureau of Labor Statistics", "time": "2025-10-02T15:00:00.000Z", "title": "Consumer Confidence Index", "unit": "index", "volatility_expected": "low"}, {"actual": "175K", "category": "employment", "country": "US", "currency": "USD", "date": "2025-10-02", "description": "Weekly unemployment insurance claims", "event_id": "US_employment_2025-10-02", "forecast": "342K", "frequency": "weekly", "impact": "low", "importance": "low", "is_tentative": false, "local_time": "08:30", "previous": "212K", "source": "Bureau of Labor Statistics", "time": "2025-10-02T13:30:00.000Z", "title": "Initial Jobless Claims", "unit": "jobs", "volatility_expected": "low"}, {"actual": null, "category": "sentiment", "country": "US", "currency": "USD", "date": "2025-10-03", "description": "Consumer sentiment and economic outlook confidence", "event_id": "US_sentiment_2025-10-03", "forecast": "101.7", "frequency": "monthly", "impact": "low", "importance": "low", "is_tentative": false, "local_time": "10:00", "previous": "122.7", "source": "Bureau of Labor Statistics", "time": "2025-10-03T15:00:00.000Z", "title": "Consumer Confidence Index", "unit": "index", "volatility_expected": "low"}, …], "filters": {"country": "US", "days_ahead": 14, "importance": "all", "limit": 30}, "summary": {"by_category": {"consumption": 2, "employment": 4, "gdp": 1, "housing": 1, "inflation": 1, "manufacturing": 3, "monetary_policy": 2, "sentiment": 4}, "by_importance": {"high": 5, "low": 8, "medium": 5}, "country": "US", "date_range": {"days_covered": 14, "from": "2025-09-26", "to": "2025-10-10"}, "next_24h": 1, "this_week": 9, "total_events": 18, "upcoming_high_impact": 4}}, "metadata": {"currency_focus": "USD", "data_source": "simulated_economic_data", "generated_at": "2025-09-26T12:00:16.034Z", "timezone": "UTC", "total_returned": 18}, "success": true, "timestamp": "2025-09-26T12:00:16.034Z"}

      168 |       expect(response.body.data).toHaveProperty("summary");
      169 |       expect(Array.isArray(response.body.data.economic_events)).toBe(true);
    > 170 |       expect(response.body).toHaveProperty("troubleshooting");
          |                             ^
      171 |     });
      172 |
      173 |     test("should handle country parameter in 501 response", async () => {

      at Object.toHaveProperty (tests/integration/routes/calendar.integration.test.js:170:29)

  ● Calendar Routes › GET /api/calendar/economic › should handle country parameter in 501 response

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      176 |       );
      177 |
    > 178 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      179 |       expect(response.body.success).toBe(false);
      180 |       expect(response.body.country).toBe("US");
      181 |     });

      at Object.toContain (tests/integration/routes/calendar.integration.test.js:178:41)

  ● Calendar Routes › GET /api/calendar/upcoming › should return 501 not implemented

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      186 |       const response = await request(app).get("/api/calendar/upcoming");
      187 |
    > 188 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      189 |       expect(response.body.success).toBe(false);
      190 |       expect(response.body.error).toBe(
      191 |         "Calendar upcoming events not implemented"

      at Object.toContain (tests/integration/routes/calendar.integration.test.js:188:41)

  ● Calendar Routes › GET /api/calendar/upcoming › should handle days parameter in 501 response

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      197 |       const response = await request(app).get("/api/calendar/upcoming?days=7");
      198 |
    > 199 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      200 |       expect(response.body.success).toBe(false);
      201 |     });
      202 |

      at Object.toContain (tests/integration/routes/calendar.integration.test.js:199:41)

  ● Calendar Routes › GET /api/calendar/upcoming › should handle multiple parameters in 501 response

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      206 |       );
      207 |
    > 208 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      209 |       expect(response.body.success).toBe(false);
      210 |       expect(response.body.symbol).toBe("AAPL");
      211 |     });

      at Object.toContain (tests/integration/routes/calendar.integration.test.js:208:41)

  ● Calendar Routes › GET /api/calendar/earnings-metrics › should handle database dependencies gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      348 |
      349 |       // Earnings metrics requires earnings_history table
    > 350 |       expect(response.status).toBe(200);
          |                               ^
      351 |
      352 |       if (response.status === 200) {
      353 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/calendar.integration.test.js:350:31)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

  console.log
    🚨 Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities HTTP/1.1" 200 415 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities HTTP/1.1" 200 415 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/health HTTP/1.1" 200 130 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/categories HTTP/1.1" 200 1344 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/categories HTTP/1.1" 200 1344 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/categories HTTP/1.1" 200 1344 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/prices HTTP/1.1" 200 1372 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/prices?limit=5 HTTP/1.1" 200 1372 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/prices?category=energy HTTP/1.1" 200 575 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/prices?category=metals HTTP/1.1" 200 178 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/prices?category=agriculture HTTP/1.1" 200 381 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/market-summary HTTP/1.1" 200 517 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/market-summary HTTP/1.1" 200 517 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/market-summary HTTP/1.1" 200 517 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/correlations HTTP/1.1" 200 1252 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/correlations?timeframe=1W HTTP/1.1" 200 1252 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/correlations?timeframe=1M HTTP/1.1" 200 1252 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/correlations?timeframe=3M HTTP/1.1" 200 1252 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/correlations?timeframe=1Y HTTP/1.1" 200 1252 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/correlations HTTP/1.1" 200 1252 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/news HTTP/1.1" 200 484 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/news?category=energy HTTP/1.1" 200 297 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/news?limit=5 HTTP/1.1" 200 483 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/news HTTP/1.1" 200 484 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities HTTP/1.1" 200 415 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/categories HTTP/1.1" 200 1344 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/prices HTTP/1.1" 200 1372 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/market-summary HTTP/1.1" 200 517 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/correlations HTTP/1.1" 200 1252 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/market-summary HTTP/1.1" 200 517 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/prices?limit=-1 HTTP/1.1" 200 1372 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/prices?limit=abc HTTP/1.1" 200 1372 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/prices?category=invalid-category HTTP/1.1" 200 188 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/prices?timeframe=invalid-timeframe HTTP/1.1" 200 1372 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/prices HTTP/1.1" 200 1372 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/prices?limit=1000 HTTP/1.1" 200 1372 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities HTTP/1.1" 200 415 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/categories HTTP/1.1" 200 1344 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/prices HTTP/1.1" 200 1372 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/market-summary HTTP/1.1" 200 517 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/correlations HTTP/1.1" 200 1252 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/news HTTP/1.1" 200 484 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/prices HTTP/1.1" 200 1372 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/prices?category=%27%3B%20DROP%20TABLE%20commodities%3B%20-- HTTP/1.1" 200 201 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/prices?category=1%27%20OR%20%271%27%3D%271 HTTP/1.1" 200 184 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/prices?category=UNION%20SELECT%20*%20FROM%20users HTTP/1.1" 200 197 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:16 +0000] "GET /api/commodities/prices?category=%3Cscript%3Ealert(%27xss%27)%3C%2Fscript%3E HTTP/1.1" 200 201 "-" "-"
  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/integration/routes/commodities.integration.test.js
  Commodities Routes Integration Tests
    GET /api/commodities (Root Endpoint)
      ✓ should return commodities system information (7 ms)
      ✓ should include expected endpoint information (2 ms)
    GET /api/commodities/health (Health Check)
      ✓ should return health status (2 ms)
    GET /api/commodities/categories (Commodity Categories)
      ✓ should return commodity categories (1 ms)
      ✓ should validate category performance data (1 ms)
      ✓ should include major commodity categories (1 ms)
    GET /api/commodities/prices (Current Prices)
      ✓ should return current commodity prices (2 ms)
      ✕ should handle limit parameter (1 ms)
      ✓ should handle category filter (3 ms)
    GET /api/commodities/market-summary (Market Summary)
      ✓ should return market summary data (3 ms)
      ✓ should validate market overview structure (2 ms)
      ✓ should validate top gainers and losers (1 ms)
    GET /api/commodities/correlations (Price Correlations)
      ✓ should return correlation analysis (1 ms)
      ✓ should handle timeframe parameter (3 ms)
      ✕ should validate correlation strength classifications (1 ms)
    GET /api/commodities/news (Commodity News)
      ✕ should return commodity-related news (2 ms)
      ✕ should handle category filter for news (2 ms)
      ✕ should handle limit parameter for news (1 ms)
      ✕ should validate news article timestamps (1 ms)
    Performance and Edge Cases
      ✓ should handle concurrent requests to commodity endpoints (3 ms)
      ✓ should maintain response time consistency (1 ms)
      ✓ should handle invalid parameters gracefully (4 ms)
      ✓ should validate numeric data integrity (2 ms)
      ✓ should handle memory pressure with large data requests (1 ms)
      ✓ should validate response content types (7 ms)
      ✓ should handle database connection issues gracefully (1 ms)
      ✓ should handle SQL injection attempts safely (4 ms)

  ● Commodities Routes Integration Tests › GET /api/commodities/prices (Current Prices) › should handle limit parameter

    expect(received).toBeLessThanOrEqual(expected)

    Expected: <= 5
    Received:    6

      163 |
      164 |       if (response.status === 200 && response.body.data.length > 0) {
    > 165 |         expect(response.body.data.length).toBeLessThanOrEqual(5);
          |                                           ^
      166 |       }
      167 |     });
      168 |

      at Object.toBeLessThanOrEqual (tests/integration/routes/commodities.integration.test.js:165:43)

  ● Commodities Routes Integration Tests › GET /api/commodities/correlations (Price Correlations) › should validate correlation strength classifications

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      295 |         response.body.data.correlations.forEach((corr) => {
      296 |           if (corr.strength) {
    > 297 |             expect(validStrengths.includes(corr.strength.toLowerCase())).toBe(
          |                                                                          ^
      298 |               true
      299 |             );
      300 |           }

      at toBe (tests/integration/routes/commodities.integration.test.js:297:74)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/routes/commodities.integration.test.js:295:41)

  ● Commodities Routes Integration Tests › GET /api/commodities/news (Commodity News) › should return commodity-related news

    expect(received).toHaveProperty(path)

    Expected path: "articles"
    Received path: []

    Received value: [{"category": "commodities", "id": 7, "publishedAt": "2025-09-22T04:00:05.183Z", "source": "WSJ", "symbol": "GLD", "title": "Gold Prices Surge on Economic Uncertainty", "url": "https://example.com/4"}, {"category": "energy", "id": 8, "publishedAt": "2025-09-22T03:00:05.183Z", "source": "MarketWatch", "symbol": "OIL", "title": "Oil Futures Rise Due to Supply Concerns", "url": "https://example.com/5"}]

      312 |       if (response.status === 200) {
      313 |         expect(response.body).toHaveProperty("data");
    > 314 |         expect(response.body.data).toHaveProperty("articles");
          |                                    ^
      315 |         expect(Array.isArray(response.body.data.articles)).toBe(true);
      316 |
      317 |         if (response.body.data.articles.length > 0) {

      at Object.toHaveProperty (tests/integration/routes/commodities.integration.test.js:314:36)

  ● Commodities Routes Integration Tests › GET /api/commodities/news (Commodity News) › should handle category filter for news

    TypeError: Cannot read properties of undefined (reading 'length')

      339 |         expect([200, 400].includes(response.status)).toBe(true);
      340 |
    > 341 |         if (response.status === 200 && response.body.data.articles.length > 0) {
          |                                                                    ^
      342 |           response.body.data.articles.forEach((article) => {
      343 |             expect(article.category.toLowerCase()).toBe(category.toLowerCase());
      344 |           });

      at Object.length (tests/integration/routes/commodities.integration.test.js:341:68)

  ● Commodities Routes Integration Tests › GET /api/commodities/news (Commodity News) › should handle limit parameter for news

    TypeError: Cannot read properties of undefined (reading 'length')

      353 |
      354 |       if (response.status === 200) {
    > 355 |         expect(response.body.data.articles.length).toBeLessThanOrEqual(5);
          |                                            ^
      356 |       }
      357 |     });
      358 |

      at Object.length (tests/integration/routes/commodities.integration.test.js:355:44)

  ● Commodities Routes Integration Tests › GET /api/commodities/news (Commodity News) › should validate news article timestamps

    TypeError: Cannot read properties of undefined (reading 'length')

      360 |       const response = await request(app).get("/api/commodities/news");
      361 |
    > 362 |       if (response.status === 200 && response.body.data.articles.length > 0) {
          |                                                                  ^
      363 |         response.body.data.articles.forEach((article) => {
      364 |           if (article.published_at) {
      365 |             expect(new Date(article.published_at)).toBeInstanceOf(Date);

      at Object.length (tests/integration/routes/commodities.integration.test.js:362:66)

  console.log
    JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

  console.log
    🚨 Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    Processing request: GET /api/scoring

      at log (index.js:429:11)

  console.log
    Initializing database connection...

      at log (index.js:388:13)

  console.log
    Database connection established successfully

      at log (index.js:414:17)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:17 +0000] "GET /api/scoring HTTP/1.1" 200 383 "-" "-"
  console.log
    Processing request: GET /api/scoring/factors

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    🎯 Scoring factors requested - category: all, symbol: none

      at log (routes/scoring.js:32:13)

  console.error
    Database query error: {
      error: 'column "updated_at" does not exist',
      query: '\n' +
        '        SELECT \n' +
        "          'quality' as factor,\n" +
        '          AVG(quality_score) as avg_score,\n' +
        '         ...',
      params: 'no parameters',
      code: '42703'
    }

      1335 |     return result;
      1336 |   } catch (error) {
    > 1337 |     console.error("Database query error:", {
           |             ^
      1338 |       error: error.message,
      1339 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      1340 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1337:13)
      at routes/scoring.js:271:27

  console.warn
    Could not fetch factor statistics: column "updated_at" does not exist

      341 |       });
      342 |     } catch (statsError) {
    > 343 |       console.warn("Could not fetch factor statistics:", statsError.message);
          |               ^
      344 |     }
      345 |
      346 |     // Enhanced factor analysis with symbol-specific scores

      at warn (routes/scoring.js:343:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:17 +0000] "GET /api/scoring/factors HTTP/1.1" 200 5050 "-" "-"
  console.log
    Processing request: GET /api/scoring/factors

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    🎯 Scoring factors requested - category: fundamental, symbol: none

      at log (routes/scoring.js:32:13)

  console.error
    Database query error: {
      error: 'column "updated_at" does not exist',
      query: '\n' +
        '        SELECT \n' +
        "          'quality' as factor,\n" +
        '          AVG(quality_score) as avg_score,\n' +
        '         ...',
      params: 'no parameters',
      code: '42703'
    }

      1335 |     return result;
      1336 |   } catch (error) {
    > 1337 |     console.error("Database query error:", {
           |             ^
      1338 |       error: error.message,
      1339 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      1340 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1337:13)
      at routes/scoring.js:271:27

  console.warn
    Could not fetch factor statistics: column "updated_at" does not exist

      341 |       });
      342 |     } catch (statsError) {
    > 343 |       console.warn("Could not fetch factor statistics:", statsError.message);
          |               ^
      344 |     }
      345 |
      346 |     // Enhanced factor analysis with symbol-specific scores

      at warn (routes/scoring.js:343:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:17 +0000] "GET /api/scoring/factors?category=fundamental HTTP/1.1" 200 5059 "-" "-"
  console.log
    Processing request: GET /api/scoring/AAPL

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:17 +0000] "GET /api/scoring/AAPL HTTP/1.1" 404 614 "-" "-"
  console.log
    Processing request: GET /api/scoring/AAPL/factors

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:17 +0000] "GET /api/scoring/AAPL/factors HTTP/1.1" 404 638 "-" "-"
  console.log
    Processing request: GET /api/scoring/compare

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:17 +0000] "GET /api/scoring/compare?symbols=AAPL,GOOGL,MSFT HTTP/1.1" 404 695 "-" "-"
  console.log
    Processing request: GET /api/scoring/sectors

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    📊 Sector scoring requested

      at log (routes/scoring.js:827:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:17 +0000] "GET /api/scoring/sectors HTTP/1.1" 200 340 "-" "-"
  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/integration/routes/scoring.integration.test.js
  Scoring Analysis API
    Scoring Overview
      ✓ should retrieve scoring endpoints (7 ms)
    Scoring Factors
      ✓ should retrieve scoring factors analysis (11 ms)
      ✕ should filter scoring factors by category (9 ms)
    Symbol Scoring
      ✕ should calculate scoring metrics for symbol (4 ms)
      ✕ should provide factor-based scoring breakdown (3 ms)
    Score Comparison
      ✕ should compare scores between multiple symbols (3 ms)
    Sector Scoring
      ✕ should provide sector-based scoring analysis (4 ms)

  ● Scoring Analysis API › Scoring Factors › should filter scoring factors by category

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      52 |       if (response.status === 200) {
      53 |         expect(response.body).toHaveProperty("success", true);
    > 54 |         expect(Array.isArray(response.body.data)).toBe(true);
         |                                                   ^
      55 |       }
      56 |     });
      57 |   });

      at Object.toBe (tests/integration/routes/scoring.integration.test.js:54:51)

  ● Scoring Analysis API › Symbol Scoring › should calculate scoring metrics for symbol

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      61 |       const response = await request(app).get("/api/scoring/AAPL");
      62 |
    > 63 |       expect(response.status).toBe(200);
         |                               ^
      64 |
      65 |       if (response.status === 200) {
      66 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/scoring.integration.test.js:63:31)

  ● Scoring Analysis API › Symbol Scoring › should provide factor-based scoring breakdown

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      87 |       const response = await request(app).get("/api/scoring/AAPL/factors");
      88 |
    > 89 |       expect(response.status).toBe(200);
         |                               ^
      90 |
      91 |       if (response.status === 200) {
      92 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/scoring.integration.test.js:89:31)

  ● Scoring Analysis API › Score Comparison › should compare scores between multiple symbols

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      113 |       );
      114 |
    > 115 |       expect(response.status).toBe(200);
          |                               ^
      116 |
      117 |       if (response.status === 200) {
      118 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/scoring.integration.test.js:115:31)

  ● Scoring Analysis API › Sector Scoring › should provide sector-based scoring analysis

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      136 |       if (response.status === 200) {
      137 |         expect(response.body).toHaveProperty("success", true);
    > 138 |         expect(Array.isArray(response.body.data)).toBe(true);
          |                                                   ^
      139 |
      140 |         if (response.body.data.length > 0) {
      141 |           const sectorScoring = response.body.data[0];

      at Object.toBe (tests/integration/routes/scoring.integration.test.js:138:51)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

  console.log
    🚨 Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:17 +0000] "GET /api/sectors HTTP/1.1" 200 120 "-" "-"
  console.log
    📈 Sector performance requested, period: 1m, limit: 10

      at log (routes/sectors.js:339:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:17 +0000] "GET /api/sectors/performance HTTP/1.1" 200 499 "-" "-"
  console.log
    📈 Sector performance requested, period: 1M, limit: 10

      at log (routes/sectors.js:339:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:17 +0000] "GET /api/sectors/performance?period=1M HTTP/1.1" 400 82 "-" "-"
  console.log
    🏆 Sector leaders requested, period: 1d

      at log (routes/sectors.js:888:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:17 +0000] "GET /api/sectors/leaders HTTP/1.1" 200 443 "-" "-"
  console.log
    🔄 Sector rotation analysis requested, timeframe: 3m

      at log (routes/sectors.js:817:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:17 +0000] "GET /api/sectors/rotation HTTP/1.1" 200 734 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:17 +0000] "GET /api/sectors/Technology HTTP/1.1" 401 74 "-" "-"
  console.log
    📊 Fetching stocks for sector: Technology

      at log (routes/sectors.js:38:13)

  console.log
    ✅ Found 2 stocks in Technology sector

      at log (routes/sectors.js:75:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:17 +0000] "GET /api/sectors/Technology/stocks HTTP/1.1" 200 357 "-" "-"
  console.log
    📊 Fetching stocks for sector: Technology

      at log (routes/sectors.js:38:13)

  console.log
    ✅ Found 2 stocks in Technology sector

      at log (routes/sectors.js:75:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:17 +0000] "GET /api/sectors/Technology/stocks?limit=10 HTTP/1.1" 200 357 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:17 +0000] "GET /api/sectors/heatmap HTTP/1.1" 401 74 "-" "-"
  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/integration/routes/sectors.integration.test.js
  Sectors Routes
    GET /api/sectors
      ✓ should return sector performance data (3 ms)
    GET /api/sectors/performance
      ✓ should return detailed sector performance (9 ms)
      ✕ should handle period parameter (3 ms)
    GET /api/sectors/leaders
      ✕ should return sector leaders (3 ms)
    GET /api/sectors/rotation
      ✕ should return sector rotation analysis (4 ms)
    GET /api/sectors/:sector
      ✕ should return specific sector data (1 ms)
    GET /api/sectors/:sector/stocks
      ✓ should return stocks in sector (4 ms)
      ✓ should handle limit parameter (4 ms)
    GET /api/sectors/heatmap
      ✕ should return sector heatmap data (1 ms)

  ● Sectors Routes › GET /api/sectors/performance › should handle period parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 400

      47 |       );
      48 |
    > 49 |       expect(response.status).toBe(200);
         |                               ^
      50 |       expect(response.body.success).toBe(true);
      51 |     });
      52 |   });

      at Object.toBe (tests/integration/routes/sectors.integration.test.js:49:31)

  ● Sectors Routes › GET /api/sectors/leaders › should return sector leaders

    expect(received).toHaveProperty(path)

    Expected path: "gainers"
    Received path: []

    Received value: {"last_updated": "2025-09-26T12:00:17.476Z", "period": "1d", "sector_breadth": {"advancing_sectors": 7, "breadth_ratio": 1.75, "declining_sectors": 4, "neutral_sectors": 0}, "top_performing_sectors": [{"return": 0, "sector": "Technology", "volume_flow": 2400000000}, {"return": 0, "sector": "Healthcare", "volume_flow": 1800000000}, {"return": 0, "sector": "Consumer Discretionary", "volume_flow": 1500000000}]}

      58 |       expect(response.status).toBe(200);
      59 |       expect(response.body.success).toBe(true);
    > 60 |       expect(response.body.data).toHaveProperty("gainers");
         |                                  ^
      61 |       expect(response.body.data).toHaveProperty("losers");
      62 |     });
      63 |   });

      at Object.toHaveProperty (tests/integration/routes/sectors.integration.test.js:60:34)

  ● Sectors Routes › GET /api/sectors/rotation › should return sector rotation analysis

    expect(received).toHaveProperty(path)

    Expected path: "rotation"
    Received path: []

    Received value: {"analysis_date": "2025-09-26T12:00:17.480Z", "last_updated": "2025-09-26T12:00:17.480Z", "market_cycle": {"confidence": 0, "current_phase": "EARLY_CYCLE", "duration_estimate": 60}, "sector_rankings": [{"flow_direction": "INFLOW", "momentum": 8.2, "relative_strength": 92.5, "sector": "Technology"}, {"flow_direction": "INFLOW", "momentum": 6.1, "relative_strength": 87.3, "sector": "Healthcare"}, {"flow_direction": "OUTFLOW", "momentum": -2.4, "relative_strength": 45.8, "sector": "Financials"}, {"flow_direction": "OUTFLOW", "momentum": -4.7, "relative_strength": 38.2, "sector": "Energy"}, {"flow_direction": "NEUTRAL", "momentum": 3.8, "relative_strength": 74.1, "sector": "Consumer Discretionary"}], "timeframe": "3m"}

      69 |       expect(response.status).toBe(200);
      70 |       expect(response.body.success).toBe(true);
    > 71 |       expect(response.body.data).toHaveProperty("rotation");
         |                                  ^
      72 |       expect(response.body.data).toHaveProperty("momentum");
      73 |     });
      74 |   });

      at Object.toHaveProperty (tests/integration/routes/sectors.integration.test.js:71:34)

  ● Sectors Routes › GET /api/sectors/:sector › should return specific sector data

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      78 |       const response = await request(app).get("/api/sectors/Technology");
      79 |
    > 80 |       expect(response.status).toBe(200);
         |                               ^
      81 |       expect(response.body.success).toBe(true);
      82 |       expect(response.body.data).toHaveProperty("sector");
      83 |       expect(response.body.data).toHaveProperty("stocks");

      at Object.toBe (tests/integration/routes/sectors.integration.test.js:80:31)

  ● Sectors Routes › GET /api/sectors/heatmap › should return sector heatmap data

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      109 |       const response = await request(app).get("/api/sectors/heatmap");
      110 |
    > 111 |       expect(response.status).toBe(200);
          |                               ^
      112 |       expect(response.body.success).toBe(true);
      113 |       expect(Array.isArray(response.body.data)).toBe(true);
      114 |     });

      at Object.toBe (tests/integration/routes/sectors.integration.test.js:111:31)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    AI strategy generation request { userId: 'test-user-123', prompt: 'short', symbolCount: 2 }

      at log (routes/strategyBuilder.js:167:13)

  console.log
    AI strategy generation request {
      userId: 'test-user-123',
      prompt: 'Create a momentum strategy for AAPL',
      symbolCount: 0
    }

      at log (routes/strategyBuilder.js:167:13)

  console.log
    AI strategy generation request { userId: 'test-user-123', prompt: '', symbolCount: 2 }

      at log (routes/strategyBuilder.js:167:13)

  console.log
    AI strategy generation request {
      userId: 'test-user-123',
      prompt: 'Create a momentum strategy',
      symbolCount: 0
    }

      at log (routes/strategyBuilder.js:167:13)

  console.log
    AI strategy generation request { userId: 'test-user-123', prompt: 'Test strategy', symbolCount: 1 }

      at log (routes/strategyBuilder.js:167:13)

  console.error
    AI strategy generation error {
      userId: 'test-user-123',
      error: "Cannot read properties of undefined (reading 'success')"
    }

      219 |     }
      220 |   } catch (err) {
    > 221 |     console.error("AI strategy generation error", {
          |             ^
      222 |       userId: req.user?.id,
      223 |       error: err.message,
      224 |     });

      at error (routes/strategyBuilder.js:221:13)

  console.log
    AI strategy generation request {
      userId: 'test-user-123',
      prompt: 'Create a test strategy',
      symbolCount: 1
    }

      at log (routes/strategyBuilder.js:167:13)

  console.error
    AI strategy generation error {
      userId: 'test-user-123',
      error: "Cannot read properties of undefined (reading 'success')"
    }

      219 |     }
      220 |   } catch (err) {
    > 221 |     console.error("AI strategy generation error", {
          |             ^
      222 |       userId: req.user?.id,
      223 |       error: err.message,
      224 |     });

      at error (routes/strategyBuilder.js:221:13)

  console.log
    AI strategy generation request { userId: 'test-user-123', prompt: 'short', symbolCount: 0 }

      at log (routes/strategyBuilder.js:167:13)

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/unit/routes/strategyBuilder.test.js
  Strategy Builder Routes
    POST /api/strategies/ai-generate
      ✓ should return 400 for short prompt (14 ms)
      ✓ should return error when no symbols provided (3 ms)
      ✓ should handle empty prompt (2 ms)
      ✓ should use default symbols array when not provided (2 ms)
      ○ skipped should generate strategy successfully (skipped - AI service mock hanging)
      ○ skipped should handle AI generation failure (skipped - AI service mock hanging)
      ○ skipped should handle AI generation service error (skipped - AI service mock hanging)
    POST /api/strategies/validate
      ✕ should validate strategy successfully (1 ms)
      ✓ should return 400 when strategy is missing (4 ms)
      ✓ should return 400 when strategy code is missing (1 ms)
      ✓ should handle validation service error (1 ms)
      ✕ should handle validation with errors and warnings (1 ms)
    POST /api/strategies/run-ai-strategy
      ✕ should return 501 for backtest (not implemented) (2 ms)
      ✓ should return 400 when strategy is missing (2 ms)
      ✓ should return 400 when strategy code is missing (1 ms)
      ✕ should handle missing symbols (1 ms)
    POST /api/strategies/deploy-hft
      ✕ should return 501 for HFT deployment (not implemented) (2 ms)
      ✓ should return 400 when strategy is missing (1 ms)
      ✓ should return 400 when backtest results are missing (1 ms)
      ✓ should reject strategy that doesn't meet HFT requirements (2 ms)
      ✓ should format requirement failures correctly (1 ms)
    GET /api/strategies/available-symbols
      ✕ should return available symbols successfully (2 ms)
      ✕ should handle database error (2 ms)
      ✕ should handle null database result (1 ms)
      ✓ should handle empty symbol result (2 ms)
    GET /api/strategies/list
      ✕ should return 501 for user strategies list (not implemented) (2 ms)
      ✕ should handle query parameters (2 ms)
    GET /api/strategies/templates
      ✓ should return strategy templates successfully (1 ms)
      ✕ should handle missing strategy templates (2 ms)
    Error handling and middleware
      ✓ should handle authentication errors gracefully (2 ms)
      ✓ should handle malformed JSON gracefully (5 ms)
      ✕ should log user actions properly (3 ms)
    Response format consistency
      ✓ should maintain consistent success response format (1 ms)
      ✓ should maintain consistent error response format (2 ms)
      ✓ should handle all route parameter combinations (3 ms)

  ● Strategy Builder Routes › POST /api/strategies/validate › should validate strategy successfully

    expected 200 "OK", got 500 "Internal Server Error"

      215 |         .post("/api/strategies/validate")
      216 |         .send({ strategy: validStrategy })
    > 217 |         .expect(200);
          |          ^
      218 |
      219 |       expect(response.body).toEqual({
      220 |         success: true,

      at Object.expect (tests/unit/routes/strategyBuilder.test.js:217:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Strategy Builder Routes › POST /api/strategies/validate › should handle validation with errors and warnings

    expected 200 "OK", got 500 "Internal Server Error"

      280 |         .post("/api/strategies/validate")
      281 |         .send({ strategy: validStrategy })
    > 282 |         .expect(200);
          |          ^
      283 |
      284 |       expect(response.body.validation.isValid).toBe(false);
      285 |       expect(response.body.validation.errors).toHaveLength(2);

      at Object.expect (tests/unit/routes/strategyBuilder.test.js:282:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Strategy Builder Routes › POST /api/strategies/run-ai-strategy › should return 501 for backtest (not implemented)

    expected 501 "Not Implemented", got 200 "OK"

      306 |         .post("/api/strategies/run-ai-strategy")
      307 |         .send(validBacktestRequest)
    > 308 |         .expect(501);
          |          ^
      309 |
      310 |       expect(response.body.success).toBe(false);
      311 |       expect(response.body.error).toBe(

      at Object.expect (tests/unit/routes/strategyBuilder.test.js:308:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Strategy Builder Routes › POST /api/strategies/run-ai-strategy › should handle missing symbols

    expected 400 "Bad Request", got 500 "Internal Server Error"

      351 |         .post("/api/strategies/run-ai-strategy")
      352 |         .send(requestWithoutSymbols)
    > 353 |         .expect(400);
          |          ^
      354 |
      355 |       expect(response.body).toEqual({
      356 |         success: false,

      at Object.expect (tests/unit/routes/strategyBuilder.test.js:353:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Strategy Builder Routes › POST /api/strategies/deploy-hft › should return 501 for HFT deployment (not implemented)

    expected 501 "Not Implemented", got 500 "Internal Server Error"

      383 |         .post("/api/strategies/deploy-hft")
      384 |         .send(validDeployRequest)
    > 385 |         .expect(501);
          |          ^
      386 |
      387 |       expect(response.body.success).toBe(false);
      388 |       expect(response.body.error).toBe(

      at Object.expect (tests/unit/routes/strategyBuilder.test.js:385:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Strategy Builder Routes › GET /api/strategies/available-symbols › should return available symbols successfully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "SELECT DISTINCT symbol FROM stock_symbols WHERE is_active = true ORDER BY symbol LIMIT 100"
    Received: "SELECT DISTINCT symbol FROM stocks WHERE market_cap > 0 ORDER BY symbol LIMIT 100"

    Number of calls: 1

      493 |       });
      494 |
    > 495 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      496 |         "SELECT DISTINCT symbol FROM stock_symbols WHERE is_active = true ORDER BY symbol LIMIT 100"
      497 |       );
      498 |     });

      at Object.toHaveBeenCalledWith (tests/unit/routes/strategyBuilder.test.js:495:25)

  ● Strategy Builder Routes › GET /api/strategies/available-symbols › should handle database error

    expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 3

      Object {
    -   "error": "Failed to retrieve available symbols",
    +   "details": "Database connection failed",
    +   "error": "Available symbols query failed",
        "success": false,
    +   "timestamp": "2025-09-26T12:00:17.869Z",
      }

      505 |         .expect(500);
      506 |
    > 507 |       expect(response.body).toEqual({
          |                             ^
      508 |         success: false,
      509 |         error: "Failed to retrieve available symbols",
      510 |       });

      at Object.toEqual (tests/unit/routes/strategyBuilder.test.js:507:29)

  ● Strategy Builder Routes › GET /api/strategies/available-symbols › should handle null database result

    expected 503 "Service Unavailable", got 500 "Internal Server Error"

      516 |       const response = await request(app)
      517 |         .get("/api/strategies/available-symbols")
    > 518 |         .expect(503);
          |          ^
      519 |
      520 |       expect(response.body.success).toBe(false);
      521 |       expect(response.body.error).toBe(

      at Object.expect (tests/unit/routes/strategyBuilder.test.js:518:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Strategy Builder Routes › GET /api/strategies/list › should return 501 for user strategies list (not implemented)

    expected 501 "Not Implemented", got 200 "OK"

      543 |       const response = await request(app)
      544 |         .get("/api/strategies/list")
    > 545 |         .expect(501);
          |          ^
      546 |
      547 |       expect(response.body.success).toBe(false);
      548 |       expect(response.body.error).toBe(

      at Object.expect (tests/unit/routes/strategyBuilder.test.js:545:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Strategy Builder Routes › GET /api/strategies/list › should handle query parameters

    expected 501 "Not Implemented", got 200 "OK"

      556 |           "/api/strategies/list?includeBacktests=true&includeDeployments=true"
      557 |         )
    > 558 |         .expect(501);
          |          ^
      559 |
      560 |       expect(response.body.success).toBe(false);
      561 |     });

      at Object.expect (tests/unit/routes/strategyBuilder.test.js:558:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Strategy Builder Routes › GET /api/strategies/templates › should handle missing strategy templates

    expect(received).toEqual(expected) // deep equality

    - Expected  -  1
    + Received  + 26

    - Array []
    + Array [
    +   Object {
    +     "aiEnhanced": true,
    +     "complexity": "medium",
    +     "description": "Mean reversion strategy",
    +     "id": "meanReversion",
    +     "name": "Mean reversion strategy",
    +     "parameters": Array [
    +       "period",
    +       "threshold",
    +     ],
    +     "type": "meanReversion",
    +   },
    +   Object {
    +     "aiEnhanced": true,
    +     "complexity": "high",
    +     "description": "Momentum strategy",
    +     "id": "momentum",
    +     "name": "Momentum strategy",
    +     "parameters": Array [
    +       "window",
    +       "signal",
    +     ],
    +     "type": "momentum",
    +   },
    + ]

      598 |
      599 |       expect(response.body.success).toBe(true);
    > 600 |       expect(response.body.templates).toEqual([]);
          |                                       ^
      601 |       expect(response.body.count).toBe(0);
      602 |     });
      603 |   });

      at Object.toEqual (tests/unit/routes/strategyBuilder.test.js:600:39)

  ● Strategy Builder Routes › Error handling and middleware › should log user actions properly

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      644 |       // Logger should be called for the request
      645 |       // Since we're mocking the logger, we can't easily verify this without more complex setup
    > 646 |       expect(mockAiGenerator.generateFromNaturalLanguage).toHaveBeenCalled();
          |                                                           ^
      647 |     });
      648 |   });
      649 |

      at Object.toHaveBeenCalled (tests/unit/routes/strategyBuilder.test.js:646:59)

  console.log
    JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

  console.log
    🚨 Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    Processing request: POST /auth/register

      at log (index.js:429:11)

  console.log
    Initializing database connection...

      at log (index.js:388:13)

  console.log
    Database connection established successfully

      at log (index.js:414:17)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    🔧 DEV: Using development auth for registration

      at log (routes/auth.js:259:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:18 +0000] "POST /auth/register HTTP/1.1" 400 80 "-" "-"
  console.log
    Processing request: POST /auth/register

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    🔧 DEV: Using development auth for registration

      at log (routes/auth.js:259:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:18 +0000] "POST /auth/register HTTP/1.1" 400 80 "-" "-"
  console.log
    Processing request: POST /auth/register

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:18 +0000] "POST /auth/register HTTP/1.1" 400 51 "-" "-"
  console.log
    Processing request: POST /auth/register

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    🔧 DEV: Using development auth for registration

      at log (routes/auth.js:259:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:18 +0000] "POST /auth/register HTTP/1.1" 400 79 "-" "-"
  console.log
    Processing request: POST /auth/register

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    🔧 DEV: Using development auth for registration

      at log (routes/auth.js:259:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:18 +0000] "POST /auth/register HTTP/1.1" 400 97 "-" "-"
  console.log
    Processing request: POST /auth/login

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    🔧 DEV: Using development auth for login

      at log (routes/auth.js:40:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:18 +0000] "POST /auth/login HTTP/1.1" 401 47 "-" "-"
  console.log
    Processing request: POST /auth/login

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:18 +0000] "POST /auth/login HTTP/1.1" 400 47 "-" "-"
  console.log
    Processing request: POST /auth/login

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    🔧 DEV: Using development auth for login

      at log (routes/auth.js:40:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:18 +0000] "POST /auth/login HTTP/1.1" 401 47 "-" "-"
  console.log
    Processing request: GET /auth/me

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:18 +0000] "GET /auth/me HTTP/1.1" 200 144 "-" "-"
  console.log
    Processing request: GET /auth/me

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:18 +0000] "GET /auth/me HTTP/1.1" 401 74 "-" "-"
  console.log
    Processing request: GET /auth/me

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:18 +0000] "GET /auth/me HTTP/1.1" 401 64 "-" "-"
  console.log
    Processing request: POST /auth/confirm

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    🔧 DEV: Using development auth for confirmation

      at log (routes/auth.js:384:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:18 +0000] "POST /auth/confirm HTTP/1.1" 400 47 "-" "-"
  console.log
    Processing request: POST /auth/confirm

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    🔧 DEV: Using development auth for confirmation

      at log (routes/auth.js:384:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:18 +0000] "POST /auth/confirm HTTP/1.1" 200 59 "-" "-"
  console.log
    Processing request: POST /auth/confirm

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:18 +0000] "POST /auth/confirm HTTP/1.1" 400 46 "-" "-"
  console.log
    Processing request: POST /auth/forgot-password

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    🔧 DEV: Using development auth for forgot password

      at log (routes/auth.js:439:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:18 +0000] "POST /auth/forgot-password HTTP/1.1" 200 53 "-" "-"
  console.log
    Processing request: POST /auth/forgot-password

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:18 +0000] "POST /auth/forgot-password HTTP/1.1" 400 44 "-" "-"
  console.log
    Processing request: POST /auth/reset-password

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    🔧 DEV: Using development auth for password reset

      at log (routes/auth.js:472:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:18 +0000] "POST /auth/reset-password HTTP/1.1" 200 56 "-" "-"
  console.log
    Processing request: POST /auth/reset-password

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    🔧 DEV: Using development auth for password reset

      at log (routes/auth.js:472:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:18 +0000] "POST /auth/reset-password HTTP/1.1" 400 46 "-" "-"
  console.log
    Processing request: POST /auth/login

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    🔧 DEV: Using development auth for login

      at log (routes/auth.js:40:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:18 +0000] "POST /auth/login HTTP/1.1" 401 47 "-" "-"
  console.log
    Processing request: POST /auth/register

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    🔧 DEV: Using development auth for registration

      at log (routes/auth.js:259:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:18 +0000] "POST /auth/register HTTP/1.1" 422 86 "-" "-"
  console.log
    Processing request: GET /auth/me

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:18 +0000] "GET /auth/me HTTP/1.1" 401 78 "-" "-"
  console.log
    Processing request: POST /auth/register

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:18 +0000] "POST /auth/register HTTP/1.1" 400 51 "-" "-"
  console.log
    Processing request: POST /auth/register

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    🔧 DEV: Using development auth for registration

      at log (routes/auth.js:259:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:18 +0000] "POST /auth/register HTTP/1.1" 422 73 "-" "-"
  console.log
    Processing request: GET /auth/health

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:18 +0000] "GET /auth/health HTTP/1.1" 200 138 "-" "-"
  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/integration/routes/auth.integration.test.js
  Authentication Routes Integration
    POST /auth/register
      ✓ should register new user successfully (10 ms)
      ✓ should reject duplicate email registration (3 ms)
      ✓ should validate required fields (3 ms)
      ✓ should validate email format (3 ms)
      ✓ should validate password strength (3 ms)
    POST /auth/login
      ✓ should login user with valid credentials (8 ms)
      ✓ should reject missing credentials (2 ms)
      ✓ should reject invalid credentials (3 ms)
    GET /auth/me
      ✓ should return user profile with dev bypass token (4 ms)
      ✕ should require valid token (5 ms)
      ✓ should reject invalid token (8 ms)
    POST /auth/confirm
      ✓ should confirm user registration (7 ms)
      ✓ should require confirmation parameters (2 ms)
    POST /auth/forgot-password
      ✓ should initiate password reset (6 ms)
      ✓ should require username (3 ms)
    POST /auth/reset-password
      ✓ should reset password with valid code (3 ms)
      ✓ should require all parameters (2 ms)
    Security and edge cases
      ✓ should handle SQL injection attempts (3 ms)
      ✓ should handle XSS attempts in registration (2 ms)
      ✓ should handle malformed Authorization header (3 ms)
      ✓ should handle empty password (2 ms)
      ✓ should handle extremely long inputs (3 ms)
    Health check
      ✓ should return auth service health (3 ms)

  ● Authentication Routes Integration › GET /auth/me › should require valid token

    expect(received).toBe(expected) // Object.is equality

    Expected: "Access token required"
    Received: "Authentication required"

      171 |       expect(response.status).toBe(401);
      172 |       expect(response.body.success).toBe(false);
    > 173 |       expect(response.body.error).toBe("Access token required");
          |                                   ^
      174 |     });
      175 |
      176 |     test("should reject invalid token", async () => {

      at Object.toBe (tests/integration/routes/auth.integration.test.js:173:35)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.warn
    Economic data count query returned null result, database may be unavailable

      145 |     // Add null safety check
      146 |     if (!countResult || !countResult.rows || countResult.rows.length === 0) {
    > 147 |       console.warn(
          |               ^
      148 |         "Economic data count query returned null result, database may be unavailable"
      149 |       );
      150 |       return res.status(503).json({

      at warn (routes/economic.js:147:15)

  console.error
    Economic data query failed: Database connection failed

      134 |       ]);
      135 |     } catch (error) {
    > 136 |       console.error("Economic data query failed:", error.message);
          |               ^
      137 |       return res.status(500).json({
      138 |         success: false,
      139 |         error: "Failed to fetch economic data",

      at error (routes/economic.js:136:15)

  console.warn
    Economic data count query returned null result, database may be unavailable

      145 |     // Add null safety check
      146 |     if (!countResult || !countResult.rows || countResult.rows.length === 0) {
    > 147 |       console.warn(
          |               ^
      148 |         "Economic data count query returned null result, database may be unavailable"
      149 |       );
      150 |       return res.status(503).json({

      at warn (routes/economic.js:147:15)

  console.log
    Economic data endpoint called with limit: 50

      at log (routes/economic.js:224:13)

  console.log
    Economic data endpoint called with limit: 100

      at log (routes/economic.js:224:13)

  console.log
    Economic data endpoint called with limit: 10

      at log (routes/economic.js:224:13)

  console.log
    Economic data endpoint called with limit: 50

      at log (routes/economic.js:224:13)

  console.log
    Economic data endpoint called with limit: 50

      at log (routes/economic.js:224:13)

  console.log
    Economic data endpoint called with limit: 50

      at log (routes/economic.js:224:13)

  console.log
    Economic data endpoint called with limit: 50

      at log (routes/economic.js:224:13)

  console.log
    Economic data endpoint called with limit: 50

      at log (routes/economic.js:224:13)

  console.error
    Error fetching economic data: Error: Query timeout
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/economic.test.js:326:35)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      247 |     });
      248 |   } catch (error) {
    > 249 |     console.error("Error fetching economic data:", error);
          |             ^
      250 |     // Return 200 with empty data instead of 500
      251 |     res.json({
      252 |       success: true,

      at error (routes/economic.js:249:13)

  console.log
    Economic data endpoint called with limit: 50

      at log (routes/economic.js:224:13)

  console.log
    Economic data endpoint called with limit: 50

      at log (routes/economic.js:224:13)

  console.log
    Economic data endpoint called with limit: 50

      at log (routes/economic.js:224:13)

  console.log
    Economic data endpoint called with limit: 50

      at log (routes/economic.js:224:13)

  console.log
    Economic data endpoint called with limit: 100

      at log (routes/economic.js:224:13)

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/unit/routes/economic.test.js
  Economic Routes Unit Tests
    GET /economic
      ✓ should return economic data with pagination (4 ms)
      ✓ should handle pagination parameters (1 ms)
      ✓ should filter by series parameter (1 ms)
      ✓ should handle database unavailable gracefully (1 ms)
      ✓ should return 404 when no economic data found (1 ms)
      ✓ should return 404 when null economic data result (1 ms)
      ✕ should handle database errors (2 ms)
      ✓ should handle count query returning empty result (2 ms)
    GET /economic/data
      ✓ should return economic data for DataValidation page (3 ms)
      ✓ should handle limit parameter with maximum cap (1 ms)
      ✓ should handle small limit parameter (4 ms)
      ✓ should use default limit when not provided (2 ms)
      ✓ should return 404 when no data found (2 ms)
      ✓ should return 404 when null result (2 ms)
      ✓ should return 404 when undefined rows (2 ms)
      ✕ should handle database errors (3 ms)
      ✓ should include timestamp in ISO format (2 ms)
    Edge cases and error handling
      ✕ should handle invalid page numbers (1 ms)
      ✕ should handle negative page and limit (1 ms)
      ✕ should handle very large page numbers (2 ms)
      ✓ should handle special characters in series parameter (1 ms)
      ✕ should handle empty series parameter (1 ms)
      ✓ should handle invalid limit in data endpoint (1 ms)
    Response format validation
      ✓ should return consistent JSON response format (2 ms)
      ✓ should maintain consistent error response format (1 ms)
      ✕ should return proper data structure (2 ms)
    Data integrity tests
      ✓ should preserve numeric values correctly (2 ms)
      ✓ should handle large datasets (2 ms)
      ✓ should calculate pagination correctly (1 ms)

  ● Economic Routes Unit Tests › GET /economic › should handle database errors

    expect(received).toHaveProperty(path, value)

    Expected path: "error"

    Expected value: "Database error"
    Received value: "Failed to fetch economic data"

      189 |       expect([200, 404, 500]).toContain(response.status);
      190 |       expect([true, false]).toContain(response.body.success);
    > 191 |       expect(response.body).toHaveProperty("error", "Database error");
          |                             ^
      192 |       expect(response.body).toHaveProperty(
      193 |         "message",
      194 |         "Database connection failed"

      at Object.toHaveProperty (tests/unit/routes/economic.test.js:191:29)

  ● Economic Routes Unit Tests › GET /economic/data › should handle database errors

    expect(received).toHaveProperty(path, value)

    Expected path: "error"
    Received path: []

    Expected value: "Database error"
    Received value: {"count": 0, "data": [], "limit": 25, "message": "Economic data temporarily unavailable", "success": true, "timestamp": "2025-09-26T12:00:18.524Z"}

      330 |       expect([200, 404, 500]).toContain(response.status);
      331 |       expect([true, false]).toContain(response.body.success);
    > 332 |       expect(response.body).toHaveProperty("error", "Database error");
          |                             ^
      333 |       expect(response.body).toHaveProperty("message", "Query timeout");
      334 |     });
      335 |

      at Object.toHaveProperty (tests/unit/routes/economic.test.js:332:29)

  ● Economic Routes Unit Tests › Edge cases and error handling › should handle invalid page numbers

    TypeError: Cannot read properties of undefined (reading 'limit')

      367 |
      368 |       expect(response.body.pagination?.page || 1).toBe(1); // Default page
    > 369 |       expect(response.body.pagination.limit).toBe(25); // Default limit
          |                                       ^
      370 |     });
      371 |
      372 |     test("should handle negative page and limit", async () => {

      at Object.limit (tests/unit/routes/economic.test.js:369:39)

  ● Economic Routes Unit Tests › Edge cases and error handling › should handle negative page and limit

    TypeError: Cannot read properties of undefined (reading 'limit')

      383 |
      384 |       expect(response.body.pagination?.page || 1).toBe(1); // Defaults to 1
    > 385 |       expect(response.body.pagination.limit).toBe(25); // Defaults to 25
          |                                       ^
      386 |     });
      387 |
      388 |     test("should handle very large page numbers", async () => {

      at Object.limit (tests/unit/routes/economic.test.js:385:39)

  ● Economic Routes Unit Tests › Edge cases and error handling › should handle very large page numbers

    expect(received).toMatchObject(expected)

    - Expected  - 2
    + Received  + 2

      Object {
        "hasNext": false,
        "hasPrev": true,
        "limit": 25,
        "page": 999,
    -   "total": 10,
    -   "totalPages": 1,
    +   "total": 50,
    +   "totalPages": 2,
      }

      398 |       const response = await request(app).get("/economic?page=999&limit=25");
      399 |
    > 400 |       expect(response.body.pagination).toMatchObject({
          |                                        ^
      401 |         page: 999,
      402 |         limit: 25,
      403 |         total: 10,

      at Object.toMatchObject (tests/unit/routes/economic.test.js:400:40)

  ● Economic Routes Unit Tests › Edge cases and error handling › should handle empty series parameter

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "WHERE series_id = $1", ["", 25, 0]
    Received
           1
              "
          SELECT·
            series_id,
            date,
            value
          FROM economic_data·······
          ORDER BY series_id, date DESC
          LIMIT $1 OFFSET $2
        ",
              Array [
            -   "",
                25,
                0,
              ],
           2
              "
          SELECT COUNT(*) as total FROM economic_data·
        ",
            - Array [
            -   "",
            -   25,
            -   0,
            - ]
            + Array [],

    Number of calls: 2

      443 |       const response = await request(app).get("/economic?series=");
      444 |
    > 445 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      446 |         expect.stringContaining("WHERE series_id = $1"),
      447 |         ["", 25, 0]
      448 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/economic.test.js:445:25)

  ● Economic Routes Unit Tests › Response format validation › should return proper data structure

    expect(received).toHaveProperty(path)

    Expected path: "date"
    Received path: []

    Received value: {"total": "1"}

      506 |       expect(response.body.data.length).toBeGreaterThanOrEqual(0);
      507 |       expect(response.body.data[0] || {}).toBeDefined();
    > 508 |       expect(response.body.data[0]).toHaveProperty("date");
          |                                     ^
      509 |       expect(response.body.data[0]).toHaveProperty("value");
      510 |     });
      511 |   });

      at Object.toHaveProperty (tests/unit/routes/economic.test.js:508:37)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

  console.log
    🚨 Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

  console.log
    💰 Current price requested for AAPL

      at log (routes/price.js:64:13)

  console.error
    Price error for AAPL: ReferenceError: priceData is not defined
        at priceData (/home/stocks/algo/webapp/lambda/routes/price.js:128:16)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)

      139 |     });
      140 |   } catch (error) {
    > 141 |     console.error(`Price error for ${req.params.symbol}:`, error);
          |             ^
      142 |     return res.status(500).json({
      143 |       success: false,
      144 |       error: "Failed to fetch price data",

      at error (routes/price.js:141:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:18 +0000] "GET /api/price/AAPL HTTP/1.1" 500 93 "-" "-"
  console.log
    💰 Current price requested for INVALID

      at log (routes/price.js:64:13)

  console.log
    ❌ Invalid symbol format: INVALID

      at log (routes/price.js:94:17)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:18 +0000] "GET /api/price/INVALID HTTP/1.1" 404 131 "-" "-"
  console.log
    📈 Price history requested for AAPL (period: 1Y)

      at log (routes/price.js:157:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:18 +0000] "GET /api/price/AAPL/history HTTP/1.1" 200 275 "-" "-"
  console.log
    📈 Price history requested for AAPL (period: 1M)

      at log (routes/price.js:157:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:18 +0000] "GET /api/price/AAPL/history?period=1M HTTP/1.1" 200 275 "-" "-"
  console.log
    ⏰ Intraday data requested for AAPL (interval: 5m)

      at log (routes/price.js:227:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:18 +0000] "GET /api/price/AAPL/intraday HTTP/1.1" 200 393 "-" "-"
  console.log
    ⏰ Intraday data requested for AAPL (interval: 5min)

      at log (routes/price.js:227:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:18 +0000] "GET /api/price/AAPL/intraday?interval=5min HTTP/1.1" 200 393 "-" "-"
  console.log
    📊 Batch price request for 3 symbols

      at log (routes/price.js:309:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:18 +0000] "POST /api/price/batch HTTP/1.1" 200 657 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:18 +0000] "POST /api/price/batch HTTP/1.1" 400 92 "-" "-"
  console.log
    💰 Current price requested for ALERTS

      at log (routes/price.js:64:13)

  console.log
    ❌ Invalid symbol format: ALERTS

      at log (routes/price.js:94:17)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:18 +0000] "GET /api/price/alerts HTTP/1.1" 404 130 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:18 +0000] "POST /api/price/alerts HTTP/1.1" 400 179 "-" "-"
  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/integration/routes/price.integration.test.js
  Price Routes
    GET /api/price/:symbol
      ✕ should return current price for symbol (34 ms)
      ✓ should handle invalid symbol (5 ms)
    GET /api/price/:symbol/history
      ✓ should return price history (4 ms)
      ✓ should handle period parameter (3 ms)
    GET /api/price/:symbol/intraday
      ✓ should return intraday prices (4 ms)
      ✓ should handle interval parameter (3 ms)
    POST /api/price/batch
      ✓ should return prices for multiple symbols (5 ms)
      ✓ should validate symbols array (2 ms)
    GET /api/price/alerts
      ✕ should return price alerts (6 ms)
    POST /api/price/alerts
      ✓ should create price alert (1 ms)

  ● Price Routes › GET /api/price/:symbol › should return current price for symbol

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      21 |       const response = await request(app).get("/api/price/AAPL");
      22 |
    > 23 |       expect(response.status).toBe(200);
         |                               ^
      24 |       expect(response.body.success).toBe(true);
      25 |       expect(response.body.data).toHaveProperty("symbol");
      26 |       expect(response.body.data).toHaveProperty("price");

      at Object.toBe (tests/integration/routes/price.integration.test.js:23:31)

  ● Price Routes › GET /api/price/alerts › should return price alerts

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

       96 |       const response = await request(app).get("/api/price/alerts");
       97 |
    >  98 |       expect(response.status).toBe(200);
          |                               ^
       99 |
      100 |       if (response.status === 200) {
      101 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/price.integration.test.js:98:31)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

  console.log
    🚨 Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:19 +0000] "GET /api/screener HTTP/1.1" 200 447 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:19 +0000] "GET /api/screener/screen?market_cap_min=1000000000 HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:19 +0000] "GET /api/screener/screen?market_cap_min=1000000000&pe_max=25&volume_min=1000000 HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:19 +0000] "GET /api/screener/screen?sector=Technology HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:19 +0000] "GET /api/screener/presets HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:19 +0000] "GET /api/screener/presets/growth HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:19 +0000] "GET /api/screener/growth HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:19 +0000] "GET /api/screener/momentum?timeframe=1M HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:19 +0000] "GET /api/screener/value HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:19 +0000] "GET /api/screener/growth HTTP/1.1" 401 74 "-" "-"
  console.log
    Screening dividend stocks with min yield: 2%

      at log (routes/screener.js:53:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:19 +0000] "GET /api/screener/dividend HTTP/1.1" 200 1247 "-" "-"
  console.log
    Screening dividend stocks with min yield: 3%

      at log (routes/screener.js:53:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:19 +0000] "GET /api/screener/dividend?min_yield=3 HTTP/1.1" 200 595 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:19 +0000] "GET /api/screener/technical?rsi_min=30&rsi_max=70 HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:19 +0000] "POST /api/screener/custom HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:19 +0000] "POST /api/screener/custom HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:19 +0000] "GET /api/screener/backtest?strategy=momentum&start_date=2023-01-01 HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:19 +0000] "GET /api/screener/backtest HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:19 +0000] "GET /api/screener/export?market_cap_min=1000000000&format=csv HTTP/1.1" 401 74 "-" "-"
  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/integration/routes/screener.integration.test.js
  Screener Routes
    GET /api/screener
      ✕ should return screener endpoints (2 ms)
    GET /api/screener/screen
      ✕ should screen stocks with basic criteria (6 ms)
      ✕ should handle multiple criteria (1 ms)
      ✕ should handle sector filter (1 ms)
    GET /api/screener/presets
      ✕ should return screening presets (1 ms)
    GET /api/screener/presets/:presetName
      ✕ should return specific preset (1 ms)
    GET /api/screener/growth
      ✕ should return growth stocks (1 ms)
      ✕ should handle timeframe parameter (1 ms)
      ✕ should return growth stocks (1 ms)
    GET /api/screener/value
      ✕ should return value stocks (1 ms)
    GET /api/screener/dividend
      ✓ should return dividend stocks (11 ms)
      ✓ should handle minimum yield parameter (7 ms)
    GET /api/screener/technical
      ✕ should return technical screening results (2 ms)
    POST /api/screener/custom
      ✓ should create custom screen (3 ms)
      ✓ should validate criteria (1 ms)
    GET /api/screener/backtest
      ✕ should return backtesting results (1 ms)
      ✕ should require strategy parameter (1 ms)
    GET /api/screener/export
      ✕ should export screening results (1 ms)

  ● Screener Routes › GET /api/screener › should return screener endpoints

    expect(received).toHaveProperty(path)

    Expected path: "message"
    Received path: []

    Received value: {"data": {"available_endpoints": ["GET /screener/screen - Main stock screening with filters", "GET /screener/ai-scan - AI-powered market scanner", "GET /screener/ai-strategies - Available AI scanning strategies", "GET /screener/templates - Pre-built screening templates", "GET /screener/factors - Available screening factors"], "status": "operational", "system": "Stock Screener API", "timestamp": "2025-09-26T12:00:19.198Z", "version": "1.0.0"}, "success": true}

      22 |
      23 |       expect(response.status).toBe(200);
    > 24 |       expect(response.body).toHaveProperty("message");
         |                             ^
      25 |       expect(response.body).toHaveProperty("endpoints");
      26 |     });
      27 |   });

      at Object.toHaveProperty (tests/integration/routes/screener.integration.test.js:24:29)

  ● Screener Routes › GET /api/screener/screen › should screen stocks with basic criteria

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      33 |       );
      34 |
    > 35 |       expect(response.status).toBe(200);
         |                               ^
      36 |       expect(response.body.success).toBe(true);
      37 |       expect(Array.isArray(response.body.data)).toBe(true);
      38 |       expect(response.body.data.length).toBeLessThanOrEqual(100);

      at Object.toBe (tests/integration/routes/screener.integration.test.js:35:31)

  ● Screener Routes › GET /api/screener/screen › should handle multiple criteria

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      44 |       );
      45 |
    > 46 |       expect(response.status).toBe(200);
         |                               ^
      47 |       expect(response.body.success).toBe(true);
      48 |       expect(Array.isArray(response.body.data)).toBe(true);
      49 |     });

      at Object.toBe (tests/integration/routes/screener.integration.test.js:46:31)

  ● Screener Routes › GET /api/screener/screen › should handle sector filter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      54 |       );
      55 |
    > 56 |       expect(response.status).toBe(200);
         |                               ^
      57 |       expect(response.body.success).toBe(true);
      58 |     });
      59 |   });

      at Object.toBe (tests/integration/routes/screener.integration.test.js:56:31)

  ● Screener Routes › GET /api/screener/presets › should return screening presets

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      63 |       const response = await request(app).get("/api/screener/presets");
      64 |
    > 65 |       expect(response.status).toBe(200);
         |                               ^
      66 |       expect(response.body.success).toBe(true);
      67 |       expect(Array.isArray(response.body.data)).toBe(true);
      68 |

      at Object.toBe (tests/integration/routes/screener.integration.test.js:65:31)

  ● Screener Routes › GET /api/screener/presets/:presetName › should return specific preset

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      79 |       const response = await request(app).get("/api/screener/presets/growth");
      80 |
    > 81 |       expect(response.status).toBe(200);
         |                               ^
      82 |
      83 |       if (response.status === 200) {
      84 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/screener.integration.test.js:81:31)

  ● Screener Routes › GET /api/screener/growth › should return growth stocks

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      93 |       const response = await request(app).get("/api/screener/growth");
      94 |
    > 95 |       expect(response.status).toBe(200);
         |                               ^
      96 |       expect(response.body.success).toBe(true);
      97 |       expect(Array.isArray(response.body.data)).toBe(true);
      98 |     });

      at Object.toBe (tests/integration/routes/screener.integration.test.js:95:31)

  ● Screener Routes › GET /api/screener/growth › should handle timeframe parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      103 |       );
      104 |
    > 105 |       expect(response.status).toBe(200);
          |                               ^
      106 |       expect(response.body.success).toBe(true);
      107 |     });
      108 |   });

      at Object.toBe (tests/integration/routes/screener.integration.test.js:105:31)

  ● Screener Routes › GET /api/screener/value › should return value stocks

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      112 |       const response = await request(app).get("/api/screener/value");
      113 |
    > 114 |       expect(response.status).toBe(200);
          |                               ^
      115 |       expect(response.body.success).toBe(true);
      116 |       expect(Array.isArray(response.body.data)).toBe(true);
      117 |     });

      at Object.toBe (tests/integration/routes/screener.integration.test.js:114:31)

  ● Screener Routes › GET /api/screener/growth › should return growth stocks

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      122 |       const response = await request(app).get("/api/screener/growth");
      123 |
    > 124 |       expect(response.status).toBe(200);
          |                               ^
      125 |       expect(response.body.success).toBe(true);
      126 |       expect(Array.isArray(response.body.data)).toBe(true);
      127 |     });

      at Object.toBe (tests/integration/routes/screener.integration.test.js:124:31)

  ● Screener Routes › GET /api/screener/technical › should return technical screening results

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      153 |       );
      154 |
    > 155 |       expect(response.status).toBe(200);
          |                               ^
      156 |       expect(response.body.success).toBe(true);
      157 |       expect(Array.isArray(response.body.data)).toBe(true);
      158 |     });

      at Object.toBe (tests/integration/routes/screener.integration.test.js:155:31)

  ● Screener Routes › GET /api/screener/backtest › should return backtesting results

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      196 |       );
      197 |
    > 198 |       expect(response.status).toBe(200);
          |                               ^
      199 |
      200 |       if (response.status === 200) {
      201 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/screener.integration.test.js:198:31)

  ● Screener Routes › GET /api/screener/backtest › should require strategy parameter

    expect(received).toContain(expected) // indexOf

    Expected value: 401
    Received array: [400, 422]

      208 |       const response = await request(app).get("/api/screener/backtest");
      209 |
    > 210 |       expect([400, 422]).toContain(response.status);
          |                          ^
      211 |     });
      212 |   });
      213 |

      at Object.toContain (tests/integration/routes/screener.integration.test.js:210:26)

  ● Screener Routes › GET /api/screener/export › should export screening results

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      218 |       );
      219 |
    > 220 |       expect(response.status).toBe(200);
          |                               ^
      221 |
      222 |       if (response.status === 200) {
      223 |         expect(response.headers["content-type"]).toContain("text/csv");

      at Object.toBe (tests/integration/routes/screener.integration.test.js:220:31)

  console.log
    JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

  console.log
    🚨 Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    Processing request: GET /api/earnings

      at log (index.js:429:11)

  console.log
    Initializing database connection...

      at log (index.js:388:13)

  console.log
    Database connection established successfully

      at log (index.js:414:17)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    📈 Earnings data requested

      at log (routes/earnings.js:35:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:19 +0000] "GET /api/earnings HTTP/1.1" 200 2618 "-" "-"
  console.log
    Processing request: GET /api/earnings/AAPL

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    📈 Earnings details requested for symbol: AAPL

      at log (routes/earnings.js:400:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:19 +0000] "GET /api/earnings/AAPL HTTP/1.1" 200 320 "-" "-"
  console.log
    Processing request: GET /api/earnings

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    📈 Earnings data requested

      at log (routes/earnings.js:35:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:19 +0000] "GET /api/earnings?period=upcoming&limit=5 HTTP/1.1" 200 2204 "-" "-"
  console.log
    Processing request: GET /api/calendar/earnings

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:19 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    Processing request: GET /api/calendar/earnings-history

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:19 +0000] "GET /api/calendar/earnings-history HTTP/1.1" 200 2118 "-" "-"
  console.log
    Processing request: GET /api/calendar/earnings-estimates

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:19 +0000] "GET /api/calendar/earnings-estimates HTTP/1.1" 200 1442 "-" "-"
  console.log
    Processing request: GET /api/earnings/INVALID_SYMBOL

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    📈 Earnings details requested for symbol: INVALID_SYMBOL

      at log (routes/earnings.js:400:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:19 +0000] "GET /api/earnings/INVALID_SYMBOL HTTP/1.1" 404 126 "-" "-"
  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/integration/routes/earnings.integration.test.js
  Earnings Data Integration
    Earnings Calendar (Delegated)
      ✓ should delegate to calendar earnings endpoint (10 ms)
      ✕ should delegate symbol-specific requests to calendar (5 ms)
      ✓ should handle query parameters for delegation (8 ms)
    Direct Calendar Earnings Access
      ✕ should access earnings via calendar route directly (4 ms)
      ✓ should access earnings history via calendar route (10 ms)
      ✓ should access earnings estimates via calendar route (4 ms)
    Error Handling
      ✓ should handle delegation errors gracefully (5 ms)

  ● Earnings Data Integration › Earnings Calendar (Delegated) › should delegate symbol-specific requests to calendar

    expect(received).toHaveProperty(path)

    Expected path: "earnings"
    Received path: []

    Received value: {"count": 1, "data": [{"eps_actual": "2.18", "eps_difference": "0.08", "eps_estimate": "2.10", "last_updated": "2025-09-25T03:26:22.135Z", "quarter": "2024-01-15T06:00:00.000Z", "report_date": "2024-01-15T06:00:00.000Z", "surprise_percent": "3.81", "symbol": "AAPL"}], "success": true, "symbol": "AAPL", "timestamp": "2025-09-26T12:00:19.691Z"}

      28 |
      29 |       if (response.status === 200) {
    > 30 |         expect(response.body).toHaveProperty("earnings");
         |                               ^
      31 |         expect(Array.isArray(response.body.earnings)).toBe(true);
      32 |       }
      33 |     });

      at Object.toHaveProperty (tests/integration/routes/earnings.integration.test.js:30:31)

  ● Earnings Data Integration › Direct Calendar Earnings Access › should access earnings via calendar route directly

    expect(received).toHaveProperty(path)

    Expected path: "earnings"
    Received path: []

    Received value: {"data": {"earnings": [], "grouped_by_date": {}, "summary": {"completed_reports": 0, "message": "No earnings data found for the specified criteria", "sectors_represented": 0, "total_earnings": 0, "upcoming_reports": 0}}, "success": true, "timestamp": "2025-09-26T12:00:19.706Z"}

      56 |
      57 |       if (response.status === 200) {
    > 58 |         expect(response.body).toHaveProperty("earnings");
         |                               ^
      59 |         expect(Array.isArray(response.body.earnings)).toBe(true);
      60 |       }
      61 |     });

      at Object.toHaveProperty (tests/integration/routes/earnings.integration.test.js:58:31)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

  console.log
    🚨 Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:20 +0000] "GET /api/watchlist HTTP/1.1" 200 971 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:20 +0000] "POST /api/watchlist HTTP/1.1" 400 44 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:20 +0000] "POST /api/watchlist HTTP/1.1" 400 44 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:20 +0000] "DELETE /api/watchlist/AAPL HTTP/1.1" 400 203 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:20 +0000] "GET /api/watchlist/1 HTTP/1.1" 404 47 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:20 +0000] "PUT /api/watchlist/AAPL HTTP/1.1" 400 178 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🎯 Watchlist performance endpoint called

      at log (routes/watchlist.js:363:11)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:20 +0000] "GET /api/watchlist/performance HTTP/1.1" 200 261 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:20 +0000] "GET /api/watchlist/alerts HTTP/1.1" 200 131 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📥 Watchlist import requested for user: dev-user-bypass

      at log (routes/watchlist.js:479:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:20 +0000] "POST /api/watchlist/import HTTP/1.1" 400 93 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:20 +0000] "GET /api/watchlist/export HTTP/1.1" 200 131 "-" "-"
  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/integration/routes/watchlist.integration.test.js
  Watchlist Routes
    GET /api/watchlist
      ✓ should return user watchlist (6 ms)
    POST /api/watchlist
      ✓ should return validation error for missing name (4 ms)
      ✓ should validate required symbol (3 ms)
    DELETE /api/watchlist/:id
      ✓ should return validation error for invalid ID format (2 ms)
    GET /api/watchlist/:listId
      ✓ should return specific watchlist (3 ms)
    PUT /api/watchlist/:id
      ✓ should return validation error for invalid ID format (5 ms)
    GET /api/watchlist/performance
      ✕ should return watchlist performance (10 ms)
    GET /api/watchlist/alerts
      ✕ should return price alerts (3 ms)
    POST /api/watchlist/import
      ✕ should import watchlist from CSV (6 ms)
    GET /api/watchlist/export
      ✕ should export watchlist to CSV (4 ms)

  ● Watchlist Routes › GET /api/watchlist/performance › should return watchlist performance

    expect(received).toHaveProperty(path)

    Matcher error: received value must not be null nor undefined

    Received has value: undefined

      109 |       if (response.status === 200) {
      110 |         expect(response.body.success).toBe(true);
    > 111 |         expect(response.body.data).toHaveProperty("performance");
          |                                    ^
      112 |       }
      113 |     });
      114 |   });

      at Object.toHaveProperty (tests/integration/routes/watchlist.integration.test.js:111:36)

  ● Watchlist Routes › GET /api/watchlist/alerts › should return price alerts

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      124 |       if (response.status === 200) {
      125 |         expect(response.body.success).toBe(true);
    > 126 |         expect(Array.isArray(response.body.data)).toBe(true);
          |                                                   ^
      127 |       }
      128 |     });
      129 |   });

      at Object.toBe (tests/integration/routes/watchlist.integration.test.js:126:51)

  ● Watchlist Routes › POST /api/watchlist/import › should import watchlist from CSV

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [200, 401, 422]

      138 |         .attach("file", Buffer.from(csvData), "watchlist.csv");
      139 |
    > 140 |       expect([200, 401, 422]).toContain(response.status);
          |                               ^
      141 |
      142 |       if (response.status === 200) {
      143 |         expect(response.body.success).toBe(true);

      at Object.toContain (tests/integration/routes/watchlist.integration.test.js:140:31)

  ● Watchlist Routes › GET /api/watchlist/export › should export watchlist to CSV

    expect(received).toContain(expected) // indexOf

    Expected substring: "text/csv"
    Received string:    "application/json; charset=utf-8"

      155 |
      156 |       if (response.status === 200) {
    > 157 |         expect(response.headers["content-type"]).toContain("text/csv");
          |                                                  ^
      158 |       }
      159 |     });
      160 |   });

      at Object.toContain (tests/integration/routes/watchlist.integration.test.js:157:50)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/unit/routes/insider.test.js
  Insider Routes
    GET /api/insider/trades/:symbol
      ✕ should return 501 status for not implemented endpoint (7 ms)
      ✕ should convert symbol to uppercase (2 ms)
      ✕ should log the request with symbol (2 ms)
      ✕ should include valid ISO timestamp (2 ms)
      ✕ should handle symbols with special characters (1 ms)
      ✕ should handle long symbol names (1 ms)
      ✕ should handle empty symbol gracefully (2 ms)
      ✕ should handle route error and return 500 (1 ms)
      ✕ should maintain consistent response structure for different symbols (7 ms)
      ✕ should have consistent error message structure (1 ms)
      ✕ should handle numeric symbol inputs (2 ms)

  ● Insider Routes › GET /api/insider/trades/:symbol › should return 501 status for not implemented endpoint

    expected 501 "Not Implemented", got 200 "OK"

      24 |       const response = await request(app)
      25 |         .get("/api/insider/trades/AAPL")
    > 26 |         .expect(501);
         |          ^
      27 |
      28 |       expect(response.body).toEqual({
      29 |         success: false,

      at Object.expect (tests/unit/routes/insider.test.js:26:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Insider Routes › GET /api/insider/trades/:symbol › should convert symbol to uppercase

    expected 501 "Not Implemented", got 200 "OK"

      49 |       const response = await request(app)
      50 |         .get("/api/insider/trades/aapl")
    > 51 |         .expect(501);
         |          ^
      52 |
      53 |       expect(response.body.symbol).toBe("AAPL");
      54 |     });

      at Object.expect (tests/unit/routes/insider.test.js:51:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Insider Routes › GET /api/insider/trades/:symbol › should log the request with symbol

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "👥 Insider trades requested for TSLA - not implemented"
    Received: "👥 Insider trades requested for TSLA"

    Number of calls: 1

      57 |       await request(app).get("/api/insider/trades/TSLA");
      58 |
    > 59 |       expect(consoleSpy).toHaveBeenCalledWith(
         |                          ^
      60 |         "👥 Insider trades requested for TSLA - not implemented"
      61 |       );
      62 |     });

      at Object.toHaveBeenCalledWith (tests/unit/routes/insider.test.js:59:26)

  ● Insider Routes › GET /api/insider/trades/:symbol › should include valid ISO timestamp

    expected 501 "Not Implemented", got 200 "OK"

      65 |       const response = await request(app)
      66 |         .get("/api/insider/trades/GOOGL")
    > 67 |         .expect(501);
         |          ^
      68 |
      69 |       const timestamp = response.body.timestamp;
      70 |       expect(timestamp).toMatch(

      at Object.expect (tests/unit/routes/insider.test.js:67:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Insider Routes › GET /api/insider/trades/:symbol › should handle symbols with special characters

    expected 501 "Not Implemented", got 200 "OK"

      78 |       const response = await request(app)
      79 |         .get("/api/insider/trades/BRK.A")
    > 80 |         .expect(501);
         |          ^
      81 |
      82 |       expect(response.body.symbol).toBe("BRK.A");
      83 |       expect(response.body.success).toBe(false);

      at Object.expect (tests/unit/routes/insider.test.js:80:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Insider Routes › GET /api/insider/trades/:symbol › should handle long symbol names

    expected 501 "Not Implemented", got 200 "OK"

      88 |       const response = await request(app)
      89 |         .get(`/api/insider/trades/${longSymbol}`)
    > 90 |         .expect(501);
         |          ^
      91 |
      92 |       expect(response.body.symbol).toBe(longSymbol);
      93 |       expect(consoleSpy).toHaveBeenCalledWith(

      at Object.expect (tests/unit/routes/insider.test.js:90:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Insider Routes › GET /api/insider/trades/:symbol › should handle empty symbol gracefully

    expected 404 "Not Found", got 500 "Internal Server Error"

       99 |       const response = await request(app)
      100 |         .get("/api/insider/trades/")
    > 101 |         .expect(404); // Express router will return 404 for missing route parameter
          |          ^
      102 |     });
      103 |
      104 |     it("should handle route error and return 500", async () => {

      at Object.expect (tests/unit/routes/insider.test.js:101:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Insider Routes › GET /api/insider/trades/:symbol › should handle route error and return 500

    expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 3

      Object {
    +   "details": "Console logging failed",
        "error": "Failed to fetch insider trades",
    -   "message": "Console logging failed",
        "success": false,
    +   "symbol": "AAPL",
    +   "timestamp": "2025-09-26T12:00:20.605Z",
      }

      112 |         .expect(500);
      113 |
    > 114 |       expect(response.body).toEqual({
          |                             ^
      115 |         success: false,
      116 |         error: "Failed to fetch insider trades",
      117 |         message: "Console logging failed",

      at Object.toEqual (tests/unit/routes/insider.test.js:114:29)

  ● Insider Routes › GET /api/insider/trades/:symbol › should maintain consistent response structure for different symbols

    expected 501 "Not Implemented", got 200 "OK"

      130 |         const response = await request(app)
      131 |           .get(`/api/insider/trades/${symbol}`)
    > 132 |           .expect(501);
          |            ^
      133 |
      134 |         expect(response.body).toHaveProperty("success", false);
      135 |         expect(response.body.error || response.body.success).toBeDefined();

      at Object.expect (tests/unit/routes/insider.test.js:132:12)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Insider Routes › GET /api/insider/trades/:symbol › should have consistent error message structure

    expected 501 "Not Implemented", got 200 "OK"

      148 |       const response = await request(app)
      149 |         .get("/api/insider/trades/TEST")
    > 150 |         .expect(501);
          |          ^
      151 |
      152 |       expect(response.body.troubleshooting.required_setup).toHaveLength(3);
      153 |       expect(response.body.troubleshooting.required_setup).toContain(

      at Object.expect (tests/unit/routes/insider.test.js:150:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Insider Routes › GET /api/insider/trades/:symbol › should handle numeric symbol inputs

    expected 501 "Not Implemented", got 200 "OK"

      165 |       const response = await request(app)
      166 |         .get("/api/insider/trades/123")
    > 167 |         .expect(501);
          |          ^
      168 |
      169 |       expect(response.body.symbol).toBe("123");
      170 |       expect(response.body.success).toBe(false);

      at Object.expect (tests/unit/routes/insider.test.js:167:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

  console.log
    🚨 Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:20 +0000] "GET /api/analytics HTTP/1.1" 200 827 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:20 +0000] "GET /api/analytics/performance HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:20 +0000] "GET /api/analytics/risk HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:20 +0000] "GET /api/analytics/allocation HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:20 +0000] "GET /api/analytics/returns HTTP/1.1" 401 74 "-" "-"
  console.log
    🏭 Public sectors analytics requested

      at log (routes/analytics.js:967:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:20 +0000] "GET /api/analytics/sectors HTTP/1.1" 200 382 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔗 Correlation analytics requested for user: dev-user-bypass, period: 3m

      at log (routes/analytics.js:573:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:20 +0000] "GET /api/analytics/correlation HTTP/1.1" 200 485 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:20 +0000] "GET /api/analytics/volatility HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:20 +0000] "GET /api/analytics/trends HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:20 +0000] "POST /api/analytics/custom HTTP/1.1" 401 74 "-" "-"
  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/integration/routes/analytics.integration.test.js
  Analytics Routes
    GET /api/analytics
      ✓ should return analytics endpoints (3 ms)
    GET /api/analytics/performance
      ✕ should return performance analytics (2 ms)
    GET /api/analytics/risk
      ✕ should return risk analytics (1 ms)
    GET /api/analytics/allocation
      ✕ should return allocation analytics (2 ms)
    GET /api/analytics/returns
      ✕ should return returns analysis (1 ms)
    GET /api/analytics/sectors
      ✓ should return sector analysis (12 ms)
    GET /api/analytics/correlation
      ✓ should return correlation analysis (15 ms)
    GET /api/analytics/volatility
      ✕ should return volatility analysis (2 ms)
    GET /api/analytics/trends
      ✕ should return trend analysis (1 ms)
    POST /api/analytics/custom
      ✕ should handle custom analytics request (3 ms)

  ● Analytics Routes › GET /api/analytics/performance › should return performance analytics

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      34 |       const response = await request(app).get("/api/analytics/performance");
      35 |
    > 36 |       expect(response.status).toBe(200);
         |                               ^
      37 |
      38 |       if (response.status === 200) {
      39 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/analytics.integration.test.js:36:31)

  ● Analytics Routes › GET /api/analytics/risk › should return risk analytics

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      47 |       const response = await request(app).get("/api/analytics/risk");
      48 |
    > 49 |       expect(response.status).toBe(200);
         |                               ^
      50 |
      51 |       if (response.status === 200) {
      52 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/analytics.integration.test.js:49:31)

  ● Analytics Routes › GET /api/analytics/allocation › should return allocation analytics

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      60 |       const response = await request(app).get("/api/analytics/allocation");
      61 |
    > 62 |       expect(response.status).toBe(200);
         |                               ^
      63 |
      64 |       if (response.status === 200) {
      65 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/analytics.integration.test.js:62:31)

  ● Analytics Routes › GET /api/analytics/returns › should return returns analysis

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      73 |       const response = await request(app).get("/api/analytics/returns");
      74 |
    > 75 |       expect(response.status).toBe(200);
         |                               ^
      76 |
      77 |       if (response.status === 200) {
      78 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/analytics.integration.test.js:75:31)

  ● Analytics Routes › GET /api/analytics/volatility › should return volatility analysis

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      114 |       const response = await request(app).get("/api/analytics/volatility");
      115 |
    > 116 |       expect(response.status).toBe(200);
          |                               ^
      117 |
      118 |       if (response.status === 200) {
      119 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/analytics.integration.test.js:116:31)

  ● Analytics Routes › GET /api/analytics/trends › should return trend analysis

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      127 |       const response = await request(app).get("/api/analytics/trends");
      128 |
    > 129 |       expect(response.status).toBe(200);
          |                               ^
      130 |
      131 |       if (response.status === 200) {
      132 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/analytics.integration.test.js:129:31)

  ● Analytics Routes › POST /api/analytics/custom › should handle custom analytics request

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      148 |         .send(analyticsRequest);
      149 |
    > 150 |       expect(response.status).toBe(200);
          |                               ^
      151 |
      152 |       if (response.status === 200 || response.status === 201) {
      153 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/analytics.integration.test.js:150:31)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=undefined, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    ❌ Symbol parameter missing

      at log (routes/sentiment.js:39:15)

  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=AAPL, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: AAPL, period: 7d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for AAPL, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 1 rows

      at log (routes/sentiment.js:90:15)

  console.log
    Sentiment data structure: [
      {
        "symbol": "AAPL",
        "sentiment_score": 0.75,
        "positive_mentions": 45,
        "negative_mentions": 12,
        "neutral_mentions": 23,
        "total_mentions": 80,
        "period_days": 7,
        "confidence_score": 0.85,
        "trend_direction": "positive"
      }
    ]

      at log (routes/sentiment.js:159:13)

  console.log
    Number of sentiment data rows: 1

      at log (routes/sentiment.js:160:13)

  console.log
    Validation results: 1 invalid items out of 1 total items

      at log (routes/sentiment.js:193:13)

  console.error
    Data validation failed. All items have invalid data structure, using fallback mock data

      195 |     if (invalidItems.length > 0 && invalidItems.length === sentimentData.length) {
      196 |       // If ALL items are invalid, use fallback data instead of throwing error
    > 197 |       console.error('Data validation failed. All items have invalid data structure, using fallback mock data');
          |               ^
      198 |       console.log('Mock data will be used to ensure tests pass');
      199 |
      200 |       // Don't throw error - instead use the mock data that was already created

      at error (routes/sentiment.js:197:15)

  console.log
    Mock data will be used to ensure tests pass

      at log (routes/sentiment.js:198:15)

  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=AAPL, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: AAPL, period: 7d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for AAPL, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 0 rows

      at log (routes/sentiment.js:90:15)

  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=AAPL, period=1d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: AAPL, period: 1d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for AAPL, period: 1 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 0 rows

      at log (routes/sentiment.js:90:15)

  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=AAPL, period=invalid_period

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: AAPL, period: invalid_period

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for AAPL, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 0 rows

      at log (routes/sentiment.js:90:15)

  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=aapl, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: aapl, period: 7d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for aapl, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 0 rows

      at log (routes/sentiment.js:90:15)

  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=INVALID, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: INVALID, period: 7d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for INVALID, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 0 rows

      at log (routes/sentiment.js:90:15)

  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=AAPL, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: AAPL, period: 7d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for AAPL, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.error
    Sentiment analysis query failed: Database connection failed

      90 |       console.log(`📊 Query successful, got ${sentimentResult?.rows?.length || 0} rows`);
      91 |     } catch (e) {
    > 92 |       console.error('Sentiment analysis query failed:', e.message);
         |               ^
      93 |
      94 |       // Check if this is a critical database error that should return 500
      95 |       if (e.message.includes('Database connection failed') || e.message.includes('connection failed')) {

      at error (routes/sentiment.js:92:15)

  console.log
    😊 Sentiment analysis for history, period: 7d

      at log (routes/sentiment.js:1963:13)

  console.log
    😊 Sentiment analysis for history, period: 7d

      at log (routes/sentiment.js:1963:13)

  console.log
    📱 Social sentiment overview requested - not implemented

      at log (routes/sentiment.js:407:13)

  console.log
    📱 Social sentiment overview requested - not implemented

      at log (routes/sentiment.js:407:13)

  console.log
    📱 Social sentiment overview requested - not implemented

      at log (routes/sentiment.js:407:13)

  console.log
    📈 Trending sentiment requested - not implemented

      at log (routes/sentiment.js:1198:13)

  console.log
    📈 Trending sentiment requested - not implemented

      at log (routes/sentiment.js:1198:13)

  console.log
    📈 Trending sentiment requested - not implemented

      at log (routes/sentiment.js:1198:13)

  console.log
    📈 Trending sentiment requested - not implemented

      at log (routes/sentiment.js:1198:13)

  console.log
    📈 Trending sentiment requested - not implemented

      at log (routes/sentiment.js:1198:13)

  console.log
    📈 Trending sentiment requested - not implemented

      at log (routes/sentiment.js:1198:13)

  console.log
    📊 Market sentiment analysis requested, period: 7d

      at log (routes/sentiment.js:1909:13)

  console.log
    📊 Market sentiment analysis requested, period: 7d

      at log (routes/sentiment.js:1909:13)

  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=AAPL'; DROP TABLE sentiment; --, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: AAPL'; DROP TABLE sentiment; --, period: 7d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for AAPL'; DROP TABLE sentiment; --, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 1 rows

      at log (routes/sentiment.js:90:15)

  console.log
    Sentiment data structure: [
      {
        "overall_sentiment": 0.62,
        "bullish_stocks": 145,
        "bearish_stocks": 78,
        "neutral_stocks": 92,
        "market_mood": "cautiously_optimistic",
        "fear_greed_index": 58,
        "updated_at": "2023-01-15T16:30:00Z"
      }
    ]

      at log (routes/sentiment.js:159:13)

  console.log
    Number of sentiment data rows: 1

      at log (routes/sentiment.js:160:13)

  console.log
    Validation results: 1 invalid items out of 1 total items

      at log (routes/sentiment.js:193:13)

  console.error
    Data validation failed. All items have invalid data structure, using fallback mock data

      195 |     if (invalidItems.length > 0 && invalidItems.length === sentimentData.length) {
      196 |       // If ALL items are invalid, use fallback data instead of throwing error
    > 197 |       console.error('Data validation failed. All items have invalid data structure, using fallback mock data');
          |               ^
      198 |       console.log('Mock data will be used to ensure tests pass');
      199 |
      200 |       // Don't throw error - instead use the mock data that was already created

      at error (routes/sentiment.js:197:15)

  console.log
    Mock data will be used to ensure tests pass

      at log (routes/sentiment.js:198:15)

  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=invalid-symbol-format!@#$%, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: invalid-symbol-format!@#$%, period: 7d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for invalid-symbol-format!@#$%, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 0 rows

      at log (routes/sentiment.js:90:15)

  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA, period: 7d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 0 rows

      at log (routes/sentiment.js:90:15)

  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=AAPL, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: AAPL, period: 7d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for AAPL, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 0 rows

      at log (routes/sentiment.js:90:15)

  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=AAPL, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: AAPL, period: 7d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for AAPL, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.error
    Sentiment analysis query failed: Query timeout

      90 |       console.log(`📊 Query successful, got ${sentimentResult?.rows?.length || 0} rows`);
      91 |     } catch (e) {
    > 92 |       console.error('Sentiment analysis query failed:', e.message);
         |               ^
      93 |
      94 |       // Check if this is a critical database error that should return 500
      95 |       if (e.message.includes('Database connection failed') || e.message.includes('connection failed')) {

      at error (routes/sentiment.js:92:15)

  console.log
    📦 Using fallback mock data instead

      at log (routes/sentiment.js:104:15)

  console.log
    Sentiment data structure: [
      {
        "symbol": "AAPL",
        "date": "2025-09-26T12:00:21.280Z",
        "recommendation_mean": 2.1,
        "price_target_vs_current": 5.5,
        "sentiment": 0.75,
        "reddit_sentiment_score": 0.68,
        "search_volume_index": 85,
        "news_article_count": 152,
        "title": "AAPL Shows Strong Performance",
        "source": "Financial News Today",
        "published_at": "2025-09-26T12:00:21.280Z"
      }
    ]

      at log (routes/sentiment.js:159:13)

  console.log
    Number of sentiment data rows: 2

      at log (routes/sentiment.js:160:13)

  console.log
    Validation results: 0 invalid items out of 2 total items

      at log (routes/sentiment.js:193:13)

  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=AAPL, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: AAPL, period: 7d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for AAPL, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 0 rows

      at log (routes/sentiment.js:90:15)

  console.log
    ⚠️ No sentiment result, using empty array

      at log (routes/sentiment.js:143:15)

  console.log
    Sentiment data structure: []

      at log (routes/sentiment.js:159:13)

  console.log
    Number of sentiment data rows: 0

      at log (routes/sentiment.js:160:13)

  console.log
    Validation results: 0 invalid items out of 0 total items

      at log (routes/sentiment.js:193:13)

  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=AAPL, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: AAPL, period: 7d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for AAPL, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 1 rows

      at log (routes/sentiment.js:90:15)

  console.log
    Sentiment data structure: [
      {
        "symbol": "AAPL",
        "sentiment_score": "invalid_number",
        "positive_mentions": null
      }
    ]

      at log (routes/sentiment.js:159:13)

  console.log
    Number of sentiment data rows: 1

      at log (routes/sentiment.js:160:13)

  console.log
    Validation results: 1 invalid items out of 1 total items

      at log (routes/sentiment.js:193:13)

  console.error
    Data validation failed. All items have invalid data structure, using fallback mock data

      195 |     if (invalidItems.length > 0 && invalidItems.length === sentimentData.length) {
      196 |       // If ALL items are invalid, use fallback data instead of throwing error
    > 197 |       console.error('Data validation failed. All items have invalid data structure, using fallback mock data');
          |               ^
      198 |       console.log('Mock data will be used to ensure tests pass');
      199 |
      200 |       // Don't throw error - instead use the mock data that was already created

      at error (routes/sentiment.js:197:15)

  console.log
    Mock data will be used to ensure tests pass

      at log (routes/sentiment.js:198:15)

  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=AAPL, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: AAPL, period: 7d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for AAPL, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 0 rows

      at log (routes/sentiment.js:90:15)

  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=AAPL, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: AAPL, period: 7d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for AAPL, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 1 rows

      at log (routes/sentiment.js:90:15)

  console.log
    Sentiment data structure: [
      {
        "symbol": "AAPL",
        "sentiment_score": 0.75,
        "positive_mentions": 45,
        "negative_mentions": 12,
        "neutral_mentions": 23
      }
    ]

      at log (routes/sentiment.js:159:13)

  console.log
    Number of sentiment data rows: 1

      at log (routes/sentiment.js:160:13)

  console.log
    Validation results: 1 invalid items out of 1 total items

      at log (routes/sentiment.js:193:13)

  console.error
    Data validation failed. All items have invalid data structure, using fallback mock data

      195 |     if (invalidItems.length > 0 && invalidItems.length === sentimentData.length) {
      196 |       // If ALL items are invalid, use fallback data instead of throwing error
    > 197 |       console.error('Data validation failed. All items have invalid data structure, using fallback mock data');
          |               ^
      198 |       console.log('Mock data will be used to ensure tests pass');
      199 |
      200 |       // Don't throw error - instead use the mock data that was already created

      at error (routes/sentiment.js:197:15)

  console.log
    Mock data will be used to ensure tests pass

      at log (routes/sentiment.js:198:15)

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/unit/routes/sentiment.test.js
  Sentiment Routes Unit Tests
    GET /sentiment/health
      ✓ should return health status without authentication (5 ms)
    GET /sentiment
      ✓ should return sentiment API information without authentication (1 ms)
    GET /sentiment/analysis
      ✓ should require symbol parameter (14 ms)
      ✕ should return sentiment analysis with valid symbol (8 ms)
      ✕ should handle default period parameter (9 ms)
      ✕ should handle different period parameters (5 ms)
      ✕ should handle invalid period gracefully (4 ms)
      ✓ should handle lowercase symbol conversion (5 ms)
      ✓ should handle empty sentiment data (7 ms)
      ✓ should handle database query errors (6 ms)
    GET /sentiment/history
      ✕ should return sentiment history for symbol (3 ms)
      ✕ should handle history limit parameter (2 ms)
    GET /sentiment/social
      ✓ should return social sentiment analysis with proper structure (2 ms)
      ✓ should handle timeframe parameter for social sentiment (2 ms)
      ✓ should handle invalid symbol for social sentiment (2 ms)
    GET /sentiment/trending
      ✓ should return trending sentiment analysis with proper structure (2 ms)
      ✓ should handle limit parameter for trending sentiment (2 ms)
      ✓ should handle timeframe parameter for trending sentiment (2 ms)
      ✓ should handle sorting for trending sentiment (1 ms)
      ✓ should handle sector filter for trending sentiment (2 ms)
      ✓ should handle minimum trending score filter (2 ms)
    GET /sentiment/market
      ✕ should return overall market sentiment (2 ms)
      ✕ should handle empty market sentiment data (2 ms)
    Parameter validation
      ✕ should sanitize symbol parameter (8 ms)
      ✕ should handle invalid symbol format (5 ms)
      ✕ should handle extremely long symbol parameter (4 ms)
    Authentication handling
      ✓ should allow public access to health endpoint (1 ms)
      ✓ should allow public access to root endpoint (1 ms)
      ✕ should allow public access to analysis endpoint (5 ms)
    Error handling
      ✕ should handle database connection timeout (5 ms)
      ✕ should handle malformed database results (5 ms)
      ✕ should handle sentiment calculation errors (7 ms)
    Response format
      ✓ should return consistent JSON response format (1 ms)
      ✓ should include metadata in sentiment responses (5 ms)
      ✕ should include analysis metadata (5 ms)

  ● Sentiment Routes Unit Tests › GET /sentiment/analysis › should return sentiment analysis with valid symbol

    expect(received).toHaveProperty(path, value)

    Expected path: "sentiment_score"

    Expected value: 0.75
    Received value: 0

      138 |       expect(response.body).toHaveProperty("data");
      139 |       expect(response.body.data).toHaveProperty("symbol", "AAPL");
    > 140 |       expect(response.body.data).toHaveProperty("sentiment_score", 0.75);
          |                                  ^
      141 |       expect(response.body.data).toHaveProperty("total_mentions", 80);
      142 |       expect(mockQuery).toHaveBeenCalledWith(
      143 |         expect.stringContaining("sentiment_analysis"),

      at Object.toHaveProperty (tests/unit/routes/sentiment.test.js:140:34)

  ● Sentiment Routes Unit Tests › GET /sentiment/analysis › should handle default period parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      153 |         .query({ symbol: "AAPL" });
      154 |
    > 155 |       expect(response.status).toBe(200);
          |                               ^
      156 |       // Should use default period of 7 days
      157 |       expect(mockQuery).toHaveBeenCalledWith(
      158 |         expect.any(String),

      at Object.toBe (tests/unit/routes/sentiment.test.js:155:31)

  ● Sentiment Routes Unit Tests › GET /sentiment/analysis › should handle different period parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      173 |           .query({ symbol: "AAPL", period: periods[i] });
      174 |
    > 175 |         expect(response.status).toBe(200);
          |                                 ^
      176 |         expect(mockQuery).toHaveBeenCalledWith(
      177 |           expect.any(String),
      178 |           expect.arrayContaining(["AAPL", expectedDays[i]])

      at Object.toBe (tests/unit/routes/sentiment.test.js:175:33)

  ● Sentiment Routes Unit Tests › GET /sentiment/analysis › should handle invalid period gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      188 |         .query({ symbol: "AAPL", period: "invalid_period" });
      189 |
    > 190 |       expect(response.status).toBe(200);
          |                               ^
      191 |       // Should default to 7 days for invalid period
      192 |       expect(mockQuery).toHaveBeenCalledWith(
      193 |         expect.any(String),

      at Object.toBe (tests/unit/routes/sentiment.test.js:190:31)

  ● Sentiment Routes Unit Tests › GET /sentiment/history › should return sentiment history for symbol

    expect(received).toHaveProperty(path)

    Expected path: "data"
    Received path: []

    Received value: {"metadata": {"data_quality": "simulated", "last_updated": "2025-09-26T12:00:21.227Z", "period": "7d", "period_days": 7, "symbol": "HISTORY"}, "sentiment": {"confidence": 21, "last_updated": "2025-09-26T12:00:21.227Z", "metrics": {"mention_velocity": 30, "negative_mentions": 82, "neutral_mentions": 42, "positive_mentions": 129, "sentiment_volatility": 0.27, "total_mentions": 212}, "overall_sentiment": 0.61, "period": "7d", "sentiment_label": "Slightly Bullish", "sources": {"discord": 21, "reddit": 63, "stocktwits": 31, "twitter": 95}, "symbol": "HISTORY", "trending_keywords": ["history", "bullish", "earnings", "price", "target"]}, "success": true}

      262 |       expect(response.status).toBe(200);
      263 |       expect(response.body).toHaveProperty("success", true);
    > 264 |       expect(response.body).toHaveProperty("data");
          |                             ^
      265 |       expect(response.body.data).toHaveProperty("symbol", "GOOGL");
      266 |       expect(response.body.data).toHaveProperty("history");
      267 |       expect(Array.isArray(response.body.data.history)).toBe(true);

      at Object.toHaveProperty (tests/unit/routes/sentiment.test.js:264:29)

  ● Sentiment Routes Unit Tests › GET /sentiment/history › should handle history limit parameter

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "LIMIT", ArrayContaining ["AAPL", 50]

    Number of calls: 0

      281 |
      282 |       expect(response.status).toBe(200);
    > 283 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      284 |         expect.stringContaining("LIMIT"),
      285 |         expect.arrayContaining(["AAPL", 50])
      286 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/sentiment.test.js:283:25)

  ● Sentiment Routes Unit Tests › GET /sentiment/market › should return overall market sentiment

    expect(received).toHaveProperty(path, value)

    Expected path: "overall_sentiment"
    Received path: []

    Expected value: 0.62
    Received value: {"date": "2023-01-15", "period": "7d", "sentiment_score": 0.68, "symbol": "GOOGL", "trend": "positive", "volume_mentions": 125}

      507 |       expect(response.body).toHaveProperty("success", true);
      508 |       expect(response.body).toHaveProperty("data");
    > 509 |       expect(response.body.data).toHaveProperty("overall_sentiment", 0.62);
          |                                  ^
      510 |       expect(response.body.data).toHaveProperty(
      511 |         "market_mood",
      512 |         "cautiously_optimistic"

      at Object.toHaveProperty (tests/unit/routes/sentiment.test.js:509:34)

  ● Sentiment Routes Unit Tests › GET /sentiment/market › should handle empty market sentiment data

    expect(received).toHaveProperty(path, value)

    Expected path: "message"
    Received path: []

    Expected value: "No market sentiment data available"
    Received value: {"bearish_stocks": 81, "bullish_stocks": 170, "fear_greed_index": 6, "market_mood": "cautiously_optimistic", "neutral_stocks": 62, "overall_sentiment": 0.654, "period": "7d", "updated_at": "2025-09-26T12:00:21.251Z", "vix_level": 36.69}

      526 |       expect(response.status).toBe(200);
      527 |       expect(response.body).toHaveProperty("success", true);
    > 528 |       expect(response.body.data).toHaveProperty(
          |                                  ^
      529 |         "message",
      530 |         "No market sentiment data available"
      531 |       );

      at Object.toHaveProperty (tests/unit/routes/sentiment.test.js:528:34)

  ● Sentiment Routes Unit Tests › Parameter validation › should sanitize symbol parameter

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ArrayContaining ["AAPL'; DROP TABLE sentiment; --"]
    Received: "
            SELECT
              a.symbol,
              a.date,
              a.recommendation_mean,
              a.price_target_vs_current,
              s.news_sentiment_score as sentiment,
              s.reddit_sentiment_score,
              s.search_volume_index,
              s.news_article_count
            FROM analyst_sentiment_analysis a
            LEFT JOIN social_sentiment_analysis s ON a.symbol = s.symbol AND a.date = s.date
            WHERE a.symbol = $1
              AND a.date >= CURRENT_DATE - INTERVAL '1 day' * $2
            ORDER BY a.date DESC
            LIMIT 50
            ", ["AAPL'; DROP TABLE SENTIMENT; --", 7]

    Number of calls: 1

      543 |       expect(response.status).toBe(200);
      544 |       // Symbol should be sanitized and used safely in prepared statement
    > 545 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      546 |         expect.any(String),
      547 |         expect.arrayContaining(["AAPL'; DROP TABLE sentiment; --"])
      548 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/sentiment.test.js:545:25)

  ● Sentiment Routes Unit Tests › Parameter validation › should handle invalid symbol format

    expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 404

      554 |         .query({ symbol: "invalid-symbol-format!@#$%" });
      555 |
    > 556 |       expect(response.status).toBe(400);
          |                               ^
      557 |       expect(response.body).toHaveProperty("success", false);
      558 |       expect(response.body.error).toContain("Invalid symbol format");
      559 |     });

      at Object.toBe (tests/unit/routes/sentiment.test.js:556:31)

  ● Sentiment Routes Unit Tests › Parameter validation › should handle extremely long symbol parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 404

      566 |         .query({ symbol: longSymbol });
      567 |
    > 568 |       expect(response.status).toBe(400);
          |                               ^
      569 |       expect(response.body).toHaveProperty("success", false);
      570 |       expect(response.body.error).toContain("Symbol too long");
      571 |     });

      at Object.toBe (tests/unit/routes/sentiment.test.js:568:31)

  ● Sentiment Routes Unit Tests › Authentication handling › should allow public access to analysis endpoint

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      594 |         .query({ symbol: "AAPL" });
      595 |
    > 596 |       expect(response.status).toBe(200);
          |                               ^
      597 |       // Should work without authentication for public sentiment data
      598 |     });
      599 |   });

      at Object.toBe (tests/unit/routes/sentiment.test.js:596:31)

  ● Sentiment Routes Unit Tests › Error handling › should handle database connection timeout

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      609 |         .query({ symbol: "AAPL" });
      610 |
    > 611 |       expect(response.status).toBe(500);
          |                               ^
      612 |       expect(response.body).toHaveProperty("success", false);
      613 |       expect(response.body.error).toContain("timeout");
      614 |     });

      at Object.toBe (tests/unit/routes/sentiment.test.js:611:31)

  ● Sentiment Routes Unit Tests › Error handling › should handle malformed database results

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      621 |         .query({ symbol: "AAPL" });
      622 |
    > 623 |       expect(response.status).toBe(500);
          |                               ^
      624 |       expect(response.body).toHaveProperty("success", false);
      625 |     });
      626 |

      at Object.toBe (tests/unit/routes/sentiment.test.js:623:31)

  ● Sentiment Routes Unit Tests › Error handling › should handle sentiment calculation errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      644 |         .query({ symbol: "AAPL" });
      645 |
    > 646 |       expect(response.status).toBe(500);
          |                               ^
      647 |       expect(response.body).toHaveProperty("success", false);
      648 |       expect(response.body.error).toContain("Sentiment calculation failed");
      649 |     });

      at Object.toBe (tests/unit/routes/sentiment.test.js:646:31)

  ● Sentiment Routes Unit Tests › Response format › should include analysis metadata

    expect(received).toHaveProperty(path, value)

    Expected path: "analysis_period"
    Received path: []

    Expected value: "7d"
    Received value: {"articles_analyzed": 1, "daily_sentiment": {"2025-09-26": {"negative": 0, "neutral": 1, "positive": 0, "total": 1}}, "period": "7d", "recent_articles": [{}], "sentiment_breakdown": {"negative": 0, "negative_pct": "0.0", "neutral": 1, "neutral_pct": "100.0", "positive": 0, "positive_pct": "0.0"}, "sentiment_grade": "Neutral", "sentiment_score": 0, "symbol": "AAPL", "trend": "stable"}

      692 |       expect(response.status).toBe(200);
      693 |       expect(response.body.data).toHaveProperty("symbol");
    > 694 |       expect(response.body.data).toHaveProperty("analysis_period", "7d");
          |                                  ^
      695 |       expect(response.body.data).toHaveProperty("last_updated");
      696 |     });
      697 |   });

      at Object.toHaveProperty (tests/unit/routes/sentiment.test.js:694:34)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    Stock screening with filters: {}

      at log (routes/screener.js:119:13)

  console.log
    Stock screening with filters: { priceMin: '100', priceMax: '500' }

      at log (routes/screener.js:119:13)

  console.log
    Stock screening with filters: { marketCapMin: '1000000000', marketCapMax: '100000000000' }

      at log (routes/screener.js:119:13)

  console.warn
    Error checking table existence for stocks: TypeError: Cannot read properties of undefined (reading 'exists')
        at exists (/home/stocks/algo/webapp/lambda/routes/screener.js:20:27)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at /home/stocks/algo/webapp/lambda/routes/screener.js:122:26

      20 |     return result.rows[0].exists;
      21 |   } catch (error) {
    > 22 |     console.warn(`Error checking table existence for ${tableName}:`, error);
         |             ^
      23 |     return false;
      24 |   }
      25 | }

      at warn (routes/screener.js:22:13)
      at routes/screener.js:122:26

  console.log
    Stock screening with filters: { volumeMin: '1000000' }

      at log (routes/screener.js:119:13)

  console.warn
    Error checking table existence for stocks: TypeError: Cannot read properties of undefined (reading 'exists')
        at exists (/home/stocks/algo/webapp/lambda/routes/screener.js:20:27)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at /home/stocks/algo/webapp/lambda/routes/screener.js:122:26

      20 |     return result.rows[0].exists;
      21 |   } catch (error) {
    > 22 |     console.warn(`Error checking table existence for ${tableName}:`, error);
         |             ^
      23 |     return false;
      24 |   }
      25 | }

      at warn (routes/screener.js:22:13)
      at routes/screener.js:122:26

  console.log
    Stock screening with filters: { sector: 'Technology' }

      at log (routes/screener.js:119:13)

  console.warn
    Error checking table existence for stocks: TypeError: Cannot read properties of undefined (reading 'exists')
        at exists (/home/stocks/algo/webapp/lambda/routes/screener.js:20:27)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at /home/stocks/algo/webapp/lambda/routes/screener.js:122:26

      20 |     return result.rows[0].exists;
      21 |   } catch (error) {
    > 22 |     console.warn(`Error checking table existence for ${tableName}:`, error);
         |             ^
      23 |     return false;
      24 |   }
      25 | }

      at warn (routes/screener.js:22:13)
      at routes/screener.js:122:26

  console.log
    Stock screening with filters: { peRatioMin: '10', peRatioMax: '30' }

      at log (routes/screener.js:119:13)

  console.log
    Stock screening with filters: { dividendYieldMin: '2', dividendYieldMax: '8' }

      at log (routes/screener.js:119:13)

  console.warn
    Error checking table existence for stocks: TypeError: Cannot read properties of undefined (reading 'exists')
        at exists (/home/stocks/algo/webapp/lambda/routes/screener.js:20:27)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at /home/stocks/algo/webapp/lambda/routes/screener.js:122:26

      20 |     return result.rows[0].exists;
      21 |   } catch (error) {
    > 22 |     console.warn(`Error checking table existence for ${tableName}:`, error);
         |             ^
      23 |     return false;
      24 |   }
      25 | }

      at warn (routes/screener.js:22:13)
      at routes/screener.js:122:26

  console.log
    Stock screening with filters: { page: '3', limit: '100' }

      at log (routes/screener.js:119:13)

  console.warn
    Error checking table existence for stocks: TypeError: Cannot read properties of undefined (reading 'exists')
        at exists (/home/stocks/algo/webapp/lambda/routes/screener.js:20:27)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at /home/stocks/algo/webapp/lambda/routes/screener.js:122:26

      20 |     return result.rows[0].exists;
      21 |   } catch (error) {
    > 22 |     console.warn(`Error checking table existence for ${tableName}:`, error);
         |             ^
      23 |     return false;
      24 |   }
      25 | }

      at warn (routes/screener.js:22:13)
      at routes/screener.js:122:26

  console.log
    Stock screening with filters: { limit: '1000' }

      at log (routes/screener.js:119:13)

  console.log
    Stock screening with filters: {
      priceMin: '50',
      priceMax: '200',
      marketCapMin: '5000000000',
      sector: 'Technology',
      peRatioMin: '15',
      peRatioMax: '25'
    }

      at log (routes/screener.js:119:13)

  console.warn
    Error checking table existence for stocks: TypeError: Cannot read properties of undefined (reading 'exists')
        at exists (/home/stocks/algo/webapp/lambda/routes/screener.js:20:27)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at /home/stocks/algo/webapp/lambda/routes/screener.js:122:26

      20 |     return result.rows[0].exists;
      21 |   } catch (error) {
    > 22 |     console.warn(`Error checking table existence for ${tableName}:`, error);
         |             ^
      23 |     return false;
      24 |   }
      25 | }

      at warn (routes/screener.js:22:13)
      at routes/screener.js:122:26

  console.log
    Stock screening with filters: { priceMin: 'not_a_number', marketCapMax: 'also_not_a_number' }

      at log (routes/screener.js:119:13)

  console.log
    Stock screening with filters: { priceMin: '10000' }

      at log (routes/screener.js:119:13)

  console.warn
    Error checking table existence for stocks: TypeError: Cannot read properties of undefined (reading 'exists')
        at exists (/home/stocks/algo/webapp/lambda/routes/screener.js:20:27)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at /home/stocks/algo/webapp/lambda/routes/screener.js:122:26

      20 |     return result.rows[0].exists;
      21 |   } catch (error) {
    > 22 |     console.warn(`Error checking table existence for ${tableName}:`, error);
         |             ^
      23 |     return false;
      24 |   }
      25 | }

      at warn (routes/screener.js:22:13)
      at routes/screener.js:122:26

  console.log
    Stock screening with filters: {}

      at log (routes/screener.js:119:13)

  console.warn
    Error checking table existence for stocks: TypeError: Cannot read properties of undefined (reading 'exists')
        at exists (/home/stocks/algo/webapp/lambda/routes/screener.js:20:27)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at /home/stocks/algo/webapp/lambda/routes/screener.js:122:26

      20 |     return result.rows[0].exists;
      21 |   } catch (error) {
    > 22 |     console.warn(`Error checking table existence for ${tableName}:`, error);
         |             ^
      23 |     return false;
      24 |   }
      25 | }

      at warn (routes/screener.js:22:13)
      at routes/screener.js:122:26

  console.log
    Stock screening with filters: {
      sector: "Technology'; DROP TABLE stocks; --",
      priceMin: '50; DELETE FROM screener_templates; --'
    }

      at log (routes/screener.js:119:13)

  console.warn
    Error checking table existence for stocks: TypeError: Cannot read properties of undefined (reading 'exists')
        at exists (/home/stocks/algo/webapp/lambda/routes/screener.js:20:27)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at /home/stocks/algo/webapp/lambda/routes/screener.js:122:26

      20 |     return result.rows[0].exists;
      21 |   } catch (error) {
    > 22 |     console.warn(`Error checking table existence for ${tableName}:`, error);
         |             ^
      23 |     return false;
      24 |   }
      25 | }

      at warn (routes/screener.js:22:13)
      at routes/screener.js:122:26

  console.log
    Stock screening with filters: { priceMin: '-1000000', priceMax: '999999999999', marketCapMin: '0' }

      at log (routes/screener.js:119:13)

  console.log
    Stock screening with filters: {}

      at log (routes/screener.js:119:13)

  console.warn
    Error checking table existence for stocks: TypeError: Cannot read properties of undefined (reading 'exists')
        at exists (/home/stocks/algo/webapp/lambda/routes/screener.js:20:27)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at /home/stocks/algo/webapp/lambda/routes/screener.js:122:26

      20 |     return result.rows[0].exists;
      21 |   } catch (error) {
    > 22 |     console.warn(`Error checking table existence for ${tableName}:`, error);
         |             ^
      23 |     return false;
      24 |   }
      25 | }

      at warn (routes/screener.js:22:13)
      at routes/screener.js:122:26

  console.log
    Stock screening with filters: { page: '2', limit: '50' }

      at log (routes/screener.js:119:13)

  console.warn
    Error checking table existence for stocks: TypeError: Cannot read properties of undefined (reading 'exists')
        at exists (/home/stocks/algo/webapp/lambda/routes/screener.js:20:27)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at /home/stocks/algo/webapp/lambda/routes/screener.js:122:26

      20 |     return result.rows[0].exists;
      21 |   } catch (error) {
    > 22 |     console.warn(`Error checking table existence for ${tableName}:`, error);
         |             ^
      23 |     return false;
      24 |   }
      25 | }

      at warn (routes/screener.js:22:13)
      at routes/screener.js:122:26

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/unit/routes/screener.test.js
  Screener Routes Unit Tests
    GET /screener
      ✓ should return screener API overview without authentication (5 ms)
    GET /screener/screen (authenticated)
      ✕ should screen stocks with default parameters (5 ms)
      ✕ should handle price filter parameters (3 ms)
      ✕ should handle market cap filter parameters (15 ms)
      ✕ should handle volume filter parameters (7 ms)
      ✕ should handle sector filter (4 ms)
      ✕ should handle PE ratio filters (3 ms)
      ✕ should handle dividend yield filters (3 ms)
      ✕ should handle pagination parameters (3 ms)
      ✕ should cap limit at 500 (2 ms)
      ✕ should handle multiple filters combined (3 ms)
      ✓ should handle invalid numeric parameters gracefully (2 ms)
      ✕ should handle empty results (3 ms)
      ✕ should handle database query errors (3 ms)
    GET /screener/templates (authenticated)
      ○ skipped should return pre-built screening templates
      ○ skipped should filter templates by category
      ○ skipped should handle empty templates
    GET /screener/factors (authenticated)
      ○ skipped should return available screening factors
    Authentication
      ✓ should allow public access to root endpoint (1 ms)
      ✓ should require authentication for screening endpoint (1 ms)
    Parameter validation
      ✕ should sanitize SQL injection attempts (6 ms)
      ✓ should handle extreme numeric values (2 ms)
    Error handling
      ✕ should handle database timeout errors (3 ms)
      ○ skipped should handle factor scoring engine errors
    Response format
      ✓ should return consistent JSON response format (1 ms)
      ✕ should include pagination metadata (3 ms)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should screen stocks with default parameters

    expect(received).toHaveProperty(path)

    Expected path: "stocks"
    Received path: []

    Received value: []

      149 |       expect(response.body).toHaveProperty("success", true);
      150 |       expect(response.body).toHaveProperty("data");
    > 151 |       expect(response.body.data).toHaveProperty("stocks"); // Changed from 'results' to 'stocks'
          |                                  ^
      152 |       expect(Array.isArray(response.body.data.stocks)).toBe(true);
      153 |       expect(response.body.data.stocks).toHaveLength(2);
      154 |       expect(response.body.data.stocks[0]).toHaveProperty("symbol", "AAPL");

      at Object.toHaveProperty (tests/unit/routes/screener.test.js:151:34)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should handle price filter parameters

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "close >=", ArrayContaining [100, 500, 50, 0]
    Received: "
          SELECT EXISTS (
            SELECT FROM information_schema.tables
            WHERE table_name = $1
          );
        ", ["stocks"]

    Number of calls: 1

      170 |
      171 |       expect(response.status).toBe(200);
    > 172 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      173 |         expect.stringContaining("close >="),
      174 |         expect.arrayContaining([100, 500, 50, 0])
      175 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/screener.test.js:172:25)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should handle market cap filter parameters

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "market_cap >=", ArrayContaining [1000000000, 100000000000]
    Received: "
          SELECT EXISTS (
            SELECT FROM information_schema.tables
            WHERE table_name = $1
          );
        ", ["stocks"]

    Number of calls: 1

      185 |
      186 |       expect(response.status).toBe(200);
    > 187 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      188 |         expect.stringContaining("market_cap >="),
      189 |         expect.arrayContaining([1000000000, 100000000000])
      190 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/screener.test.js:187:25)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should handle volume filter parameters

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "COALESCE(md.volume, pd.volume) >=", ArrayContaining [1000000]
    Received: "
          SELECT EXISTS (
            SELECT FROM information_schema.tables
            WHERE table_name = $1
          );
        ", ["stocks"]

    Number of calls: 1

      200 |
      201 |       expect(response.status).toBe(200);
    > 202 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      203 |         expect.stringContaining("COALESCE(md.volume, pd.volume) >="),
      204 |         expect.arrayContaining([1000000])
      205 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/screener.test.js:202:25)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should handle sector filter

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "sector =", ArrayContaining ["Technology"]
    Received: "
          SELECT EXISTS (
            SELECT FROM information_schema.tables
            WHERE table_name = $1
          );
        ", ["stocks"]

    Number of calls: 1

      214 |
      215 |       expect(response.status).toBe(200);
    > 216 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      217 |         expect.stringContaining("sector ="),
      218 |         expect.arrayContaining(["Technology"])
      219 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/screener.test.js:216:25)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should handle PE ratio filters

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "km.trailing_pe >=", ArrayContaining [10, 30]
    Received: "
          SELECT EXISTS (
            SELECT FROM information_schema.tables
            WHERE table_name = $1
          );
        ", ["stocks"]

    Number of calls: 1

      230 |
      231 |       expect(response.status).toBe(200);
    > 232 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      233 |         expect.stringContaining("km.trailing_pe >="),
      234 |         expect.arrayContaining([10, 30])
      235 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/screener.test.js:232:25)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should handle dividend yield filters

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "km.dividend_yield >=", ArrayContaining [2, 8]
    Received: "
          SELECT EXISTS (
            SELECT FROM information_schema.tables
            WHERE table_name = $1
          );
        ", ["stocks"]

    Number of calls: 1

      246 |
      247 |       expect(response.status).toBe(200);
    > 248 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      249 |         expect.stringContaining("km.dividend_yield >="),
      250 |         expect.arrayContaining([2, 8])
      251 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/screener.test.js:248:25)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should handle pagination parameters

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ArrayContaining [100, 200]
    Received: "
          SELECT EXISTS (
            SELECT FROM information_schema.tables
            WHERE table_name = $1
          );
        ", ["stocks"]

    Number of calls: 1

      260 |
      261 |       expect(response.status).toBe(200);
    > 262 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      263 |         expect.any(String),
      264 |         expect.arrayContaining([100, 200]) // limit 100, offset 200 (page 3)
      265 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/screener.test.js:262:25)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should cap limit at 500

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ArrayContaining [500, 0]
    Received: "
          SELECT EXISTS (
            SELECT FROM information_schema.tables
            WHERE table_name = $1
          );
        ", ["stocks"]

    Number of calls: 1

      274 |
      275 |       expect(response.status).toBe(200);
    > 276 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      277 |         expect.any(String),
      278 |         expect.arrayContaining([500, 0]) // Should be capped at 500
      279 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/screener.test.js:276:25)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should handle multiple filters combined

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringMatching /pd\.close >= .* AND pd\.close <= .* AND cp\.market_cap >= .* AND cp\.sector = .* AND km\.trailing_pe >= .* AND km\.trailing_pe <=/, ArrayContaining [50, 200, 5000000000, "Technology", 15, 25]
    Received: "
          SELECT EXISTS (
            SELECT FROM information_schema.tables
            WHERE table_name = $1
          );
        ", ["stocks"]

    Number of calls: 1

      294 |
      295 |       expect(response.status).toBe(200);
    > 296 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      297 |         expect.stringMatching(
      298 |           /pd\.close >= .* AND pd\.close <= .* AND cp\.market_cap >= .* AND cp\.sector = .* AND km\.trailing_pe >= .* AND km\.trailing_pe <=/
      299 |         ),

      at Object.toHaveBeenCalledWith (tests/unit/routes/screener.test.js:296:25)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should handle empty results

    expect(received).toHaveProperty(path, value)

    Expected path: "stocks"
    Received path: []

    Expected value: []
    Received value: []

      324 |       expect(response.status).toBe(200);
      325 |       expect(response.body).toHaveProperty("success", true);
    > 326 |       expect(response.body.data).toHaveProperty("stocks", []);
          |                                  ^
      327 |       expect(response.body.data.pagination).toHaveProperty("totalCount", 0);
      328 |     });
      329 |

      at Object.toHaveProperty (tests/unit/routes/screener.test.js:326:34)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should handle database query errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      334 |       const response = await request(app).get("/screener/screen");
      335 |
    > 336 |       expect(response.status).toBe(500);
          |                               ^
      337 |       expect(response.body).toHaveProperty("success", false);
      338 |       expect(response.body.error).toBeDefined();
      339 |     });

      at Object.toBe (tests/unit/routes/screener.test.js:336:31)

  ● Screener Routes Unit Tests › Parameter validation › should sanitize SQL injection attempts

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ArrayContaining ["Technology'; DROP TABLE stocks; --", 50]
    Received: "
          SELECT EXISTS (
            SELECT FROM information_schema.tables
            WHERE table_name = $1
          );
        ", ["stocks"]

    Number of calls: 1

      388 |       expect(response.status).toBe(200);
      389 |       // Parameters should be safely passed as prepared statement params
    > 390 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      391 |         expect.any(String),
      392 |         expect.arrayContaining([
      393 |           "Technology'; DROP TABLE stocks; --",

      at Object.toHaveBeenCalledWith (tests/unit/routes/screener.test.js:390:25)

  ● Screener Routes Unit Tests › Error handling › should handle database timeout errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      424 |       const response = await request(app).get("/screener/screen");
      425 |
    > 426 |       expect(response.status).toBe(500);
          |                               ^
      427 |       expect(response.body).toHaveProperty("success", false);
      428 |       expect(response.body.error).toBe("Database query failed");
      429 |     });

      at Object.toBe (tests/unit/routes/screener.test.js:426:31)

  ● Screener Routes Unit Tests › Response format › should include pagination metadata

    expect(received).toHaveProperty(path)

    Expected path: "pagination"
    Received path: []

    Received value: []

      447 |
      448 |       expect(response.status).toBe(200);
    > 449 |       expect(response.body.data).toHaveProperty("pagination");
          |                                  ^
      450 |       expect(response.body.data.pagination).toHaveProperty("page", 2);
      451 |       expect(response.body.data.pagination).toHaveProperty("limit", 50);
      452 |       expect(response.body.data.pagination).toHaveProperty("totalCount", 250);

      at Object.toHaveProperty (tests/unit/routes/screener.test.js:449:34)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.error
    Technical data table for daily timeframe not found

      1425 |
      1426 |     if (!tableExists.rows[0].exists) {
    > 1427 |       console.error(
           |               ^
      1428 |         `Technical data table for ${timeframe} timeframe not found`
      1429 |       );
      1430 |       return res.status(404).json({

      at error (routes/technical.js:1427:15)

  console.log
    📊 Daily technical data requested - page: 1, limit: 50, sortBy: symbol, sortOrder: asc

      at log (routes/technical.js:138:13)

  console.log
    📊 Daily technical data requested - page: 1, limit: 10, sortBy: symbol, sortOrder: asc

      at log (routes/technical.js:138:13)

  console.log
    📊 Daily technical data requested - page: 1, limit: 10, sortBy: symbol, sortOrder: asc

      at log (routes/technical.js:138:13)

  console.log
    📊 Weekly technical analysis requested for: SUMMARY

      at log (routes/technical.js:379:13)

  console.log
    📊 [TECHNICAL] Fetching technical data for AAPL

      at log (routes/technical.js:1474:11)

  console.log
    📊 [TECHNICAL] Fetching technical data for NONEXISTENT

      at log (routes/technical.js:1474:11)

  console.log
    📊 [TECHNICAL] Fetching technical data for AAPL

      at log (routes/technical.js:1474:11)

  console.log
    Technical data table not found for symbol AAPL, returning empty data

      at log (routes/technical.js:1490:15)

  console.log
    📈 [TECHNICAL] Fetching technical indicators for AAPL

      at log (routes/technical.js:1591:11)

  console.log
    📊 [TECHNICAL] Fetching technical history for AAPL (60 days)

      at log (routes/technical.js:1695:11)

  console.log
    📊 Daily technical data requested - page: 1, limit: 25, sortBy: symbol, sortOrder: asc

      at log (routes/technical.js:138:13)

  console.log
    📊 Daily technical data requested - page: 1, limit: 10, sortBy: symbol, sortOrder: asc

      at log (routes/technical.js:138:13)

  console.log
    🔍 [PATTERNS] Analyzing patterns for AAPL on 1D timeframe

      at log (routes/technical.js:2239:11)

  console.log
    🔍 [PATTERNS] Analyzing patterns for AAPL on 1D timeframe

      at log (routes/technical.js:2239:11)

  console.error
    Error getting price data for patterns: Error: Database connection failed
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/technical.test.js:804:35)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      2578 |     return null;
      2579 |   } catch (error) {
    > 2580 |     console.error("Error getting price data for patterns:", error);
           |             ^
      2581 |     // Return null instead of throwing
      2582 |     return null;
      2583 |   }

      at error (routes/technical.js:2580:13)
      at analyzePatterns (routes/technical.js:2282:23)
      at routes/technical.js:2245:29

  console.error
    Error in technical overview endpoint: Error: Connection timeout
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/technical.test.js:829:35)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      1458 |     });
      1459 |   } catch (error) {
    > 1460 |     console.error("Error in technical overview endpoint:", error);
           |             ^
      1461 |     return res.status(500).json({
      1462 |       success: false,
      1463 |       error: "Failed to retrieve technical overview data",

      at error (routes/technical.js:1460:13)

  console.log
    📊 Daily technical data requested - page: 1, limit: 500, sortBy: symbol, sortOrder: asc

      at log (routes/technical.js:138:13)

  console.log
    📊 Technical chart requested - symbol: AAPL, period: 1M, interval: 1d

      at log (routes/technical.js:681:13)

  console.log
    📊 Technical chart requested - symbol: MSFT, period: 1Y, interval: 1d

      at log (routes/technical.js:681:13)

  console.log
    📊 Technical chart requested - symbol: AAPL, period: 1M, interval: 1d

      at log (routes/technical.js:681:13)

  console.log
    📊 Technical chart requested - symbol: AAPL, period: 1M, interval: 1d

      at log (routes/technical.js:681:13)

  console.log
    📊 Technical chart requested - symbol: AAPL, period: 1M, interval: 1d

      at log (routes/technical.js:681:13)

  console.log
    📊 Technical chart requested - symbol: AAPL, period: 1M, interval: 1d

      at log (routes/technical.js:681:13)

  console.log
    📊 Technical chart requested - symbol: AAPL, period: 1M, interval: 1d

      at log (routes/technical.js:681:13)

  console.log
    📊 Technical chart requested - symbol: AAPL, period: 1M, interval: 1d

      at log (routes/technical.js:681:13)

  console.error
    Chart data tables not available or database connection failed

      698 |       !tableCheck.rows[0].exists
      699 |     ) {
    > 700 |       console.error(
          |               ^
      701 |         "Chart data tables not available or database connection failed"
      702 |       );
      703 |       return res.status(404).json({

      at error (routes/technical.js:700:15)

  console.log
    📊 Technical chart requested - symbol: AAPL, timeframe: invalid, period: 1m

      at log (routes/technical.js:784:13)

  console.log
    📊 Technical chart requested - symbol: AAPL, timeframe: daily, period: invalid

      at log (routes/technical.js:784:13)

  console.log
    📊 Technical chart requested - symbol: AAPL, timeframe: daily, period: 1m

      at log (routes/technical.js:784:13)

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

PASS tests/unit/routes/technical.test.js
  Technical Analysis Routes - Testing Your Actual Site
    GET /technical/ping - Basic endpoint
      ✓ should return ping response (11 ms)
    GET /technical/ - Root technical endpoint
      ✓ should return latest technical data for all symbols using daily timeframe (2 ms)
      ✓ should return 404 when technical_data_daily table doesn't exist (19 ms)
    GET /technical/:timeframe - Timeframe-based data
      ✓ should return daily technical data with pagination (4 ms)
      ✓ should validate timeframe parameter (1 ms)
      ✓ should handle symbol filtering (6 ms)
      ✓ should handle RSI filtering (2 ms)
    GET /technical/:timeframe/summary - Technical summary
      ✓ should return technical summary statistics (2 ms)
      ✓ should return fallback summary when table doesn't exist (2 ms)
    GET /technical/data/:symbol - Individual symbol data
      ✓ should return latest technical data for specific symbol (2 ms)
      ✓ should return 404 for non-existent symbol (3 ms)
      ✓ should return fallback data when table missing (2 ms)
    GET /technical/indicators/:symbol - Technical indicators
      ✓ should return 30-day technical indicators for symbol (3 ms)
    GET /technical/history/:symbol - Technical history
      ✓ should return technical history with custom days parameter (4 ms)
    GET /technical/support-resistance/:symbol - Support/Resistance levels
      ✓ should return support and resistance levels (1 ms)
      ✓ should validate timeframe for support/resistance (1 ms)
    GET /technical/daily - Filtered technical data
      ✓ should handle filtered technical data requests (6 ms)
      ✓ should handle technical data queries safely (2 ms)
    GET /technical/patterns/:symbol - Pattern recognition
      ✓ should return technical pattern analysis (2 ms)
      ✓ should return fallback patterns on database errors (2 ms)
    Error handling - Your site's error patterns
      ✓ should handle database errors gracefully with fallback data (2 ms)
      ✓ should return structured error responses for invalid timeframes (1 ms)
      ✓ should handle large limit values safely (2 ms)
    GET /technical/chart/:symbol - Chart data for symbol
      ✓ should return chart data with default parameters (3 ms)
      ✓ should return chart data with custom parameters (2 ms)
      ✓ should include proper OHLCV structure (2 ms)
      ✓ should include complete chart metadata (2 ms)
      ✓ should include chart data with proper timestamp (2 ms)
      ✓ should handle volume inclusion correctly (6 ms)
      ✓ should handle table not exists gracefully (3 ms)
    GET /technical/chart - Query-based chart endpoint
      ✓ should validate timeframe parameter (2 ms)
      ✓ should validate period parameter (2 ms)
      ✓ should filter indicators correctly (2 ms)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📋 All alerts requested for user: dev-user-bypass, status: all

      at log (routes/alerts.js:325:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔔 Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:38:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔔 Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:38:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔔 Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:38:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔔 Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:38:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔔 Active alerts requested for user: dev-user-bypass, status: triggered

      at log (routes/alerts.js:38:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📍 Alert distance requested for AAPL by user: dev-user-bypass

      at log (routes/alerts.js:1087:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📍 Alert distance requested for INVALID by user: dev-user-bypass

      at log (routes/alerts.js:1087:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔔 Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:38:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🙈 Alert dismiss requested for 1 by user: dev-user-bypass

      at log (routes/alerts.js:1127:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🙈 Alert dismiss requested for invalid-id by user: dev-user-bypass

      at log (routes/alerts.js:1127:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🆕 New alert creation requested by user: dev-user-bypass for AAPL

      at log (routes/alerts.js:500:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    💰 Price alerts requested for AAPL by user: dev-user-bypass, status: all

      at log (routes/alerts.js:1168:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    💰 Price alerts requested for AAPL by user: dev-user-bypass, status: active

      at log (routes/alerts.js:1168:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🗑️ Deleting alert 1 for user: dev-user-bypass

      at log (routes/alerts.js:2380:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🗑️ Deleting alert 99999 for user: dev-user-bypass

      at log (routes/alerts.js:2380:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📋 Alert history requested for user: dev-user-bypass

      at log (routes/alerts.js:1287:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📋 Alert history requested for user: dev-user-bypass

      at log (routes/alerts.js:1287:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📋 Alert history requested for user: dev-user-bypass

      at log (routes/alerts.js:1287:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    ⚙️ Alert settings requested for user: dev-user-bypass

      at log (routes/alerts.js:821:13)

  console.log
    No user-specific alert settings found, returning defaults

      at log (routes/alerts.js:843:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Alert settings update requested for user: dev-user-bypass

      at log (routes/alerts.js:1224:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Alert settings update requested for user: dev-user-bypass

      at log (routes/alerts.js:1224:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔔 Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:38:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    💰 Price alerts requested for INVALID_SYMBOL_123! by user: dev-user-bypass, status: all

      at log (routes/alerts.js:1168:13)

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

PASS tests/unit/routes/alerts.test.js
  Alerts Routes Unit Tests
    GET /alerts/
      ✓ should return alerts info (8 ms)
    GET /alerts/active
      ✓ should return active alerts with proper structure (6 ms)
      ✓ should handle limit parameter (3 ms)
      ✓ should handle offset parameter (4 ms)
      ✓ should handle priority filter (4 ms)
      ✓ should handle status filter (4 ms)
    GET /alerts/distance/:symbol
      ✓ should return distance-based alert analysis (4 ms)
      ✓ should handle invalid symbol (6 ms)
    PUT /alerts/:id/dismiss
      ✓ should handle alert dismissal (8 ms)
      ✓ should handle invalid alert ID format (4 ms)
    POST /alerts/
      ✓ should handle alert creation (3 ms)
    POST /alerts/price
      ✓ should create price alert with valid data (1 ms)
      ✓ should validate required fields (11 ms)
      ✓ should handle duplicate price alerts (2 ms)
    GET /alerts/price/:symbol
      ✓ should return price alerts for symbol (3 ms)
      ✓ should filter alerts by status (3 ms)
    POST /alerts/volume
      ✓ should create volume alert (5 ms)
      ✓ should validate threshold multiplier range (6 ms)
    GET /alerts/volume/analysis/:symbol
      ✓ should return volume analysis for symbol (5 ms)
      ✓ should include historical volume data (5 ms)
    POST /alerts/technical
      ✓ should create RSI alert (3 ms)
      ✓ should create MACD alert (3 ms)
      ✓ should validate supported indicators (2 ms)
    GET /alerts/technical/status/:symbol
      ✓ should return technical alert status (3 ms)
      ✓ should filter by indicator type (4 ms)
    POST /alerts/news
      ✓ should create news sentiment alert (4 ms)
      ✓ should validate news sources (4 ms)
    GET /alerts/news/recent/:symbol
      ✓ should return recent news alerts (7 ms)
      ✓ should filter by time period (4 ms)
    POST /alerts/portfolio
      ✓ should create portfolio-wide alert (2 ms)
      ✓ should create sector concentration alert (3 ms)
    GET /alerts/portfolio/status
      ✓ should return portfolio alert status (4 ms)
      ✓ should include triggered alerts summary (3 ms)
    PUT /alerts/:id/update
      ✓ should update alert settings (4 ms)
      ✓ should validate update data (2 ms)
    DELETE /alerts/:id
      ✓ should delete alert (4 ms)
      ✓ should handle non-existent alert deletion (3 ms)
    POST /alerts/bulk/dismiss
      ✓ should dismiss multiple alerts (4 ms)
      ✓ should validate alert IDs array (5 ms)
    GET /alerts/history
      ✓ should return alert history with pagination (4 ms)
      ✓ should filter history by date range (4 ms)
      ✓ should filter by alert type (3 ms)
    GET /alerts/history/performance
      ✓ should return alert performance analytics (5 ms)
      ✓ should break down performance by alert type (4 ms)
    GET /alerts/settings
      ✓ should return user alert settings (4 ms)
    PUT /alerts/settings
      ✓ should update alert settings (3 ms)
      ✓ should validate settings data (3 ms)
    Error Handling
      ✓ should handle database connection errors (7 ms)
      ✓ should handle missing authentication (1 ms)
      ✓ should handle malformed request data (1 ms)
      ✓ should handle invalid symbol format (3 ms)
      ✓ should handle rate limiting for alert creation (4 ms)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    Portfolio holdings endpoint called for authenticated user: dev-user-bypass

      at log (routes/portfolio.js:1750:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    Portfolio performance endpoint called for user: dev-user-bypass, timeframe: 1y

      at log (routes/portfolio.js:1196:13)

  console.log
    📊 Retrieved 0 performance data points

      at log (routes/portfolio.js:1224:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    Portfolio analytics endpoint called for authenticated user: dev-user-bypass, timeframe: 1y

      at log (routes/portfolio.js:369:11)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    💰 Portfolio value requested for user: dev-user-bypass

      at log (routes/portfolio.js:6121:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    Portfolio risk analysis endpoint called for user: dev-user-bypass

      at log (routes/portfolio.js:840:11)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📈 Portfolio returns requested for user: dev-user-bypass, period: 1y

      at log (routes/portfolio.js:6219:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    Portfolio benchmark endpoint called for SPY, timeframe: 1y

      at log (routes/portfolio.js:1526:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    Portfolio risk endpoint called for user: dev-user-bypass

      at log (routes/portfolio.js:2240:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    Portfolio risk metrics endpoint called for user: dev-user-bypass

      at log (routes/portfolio.js:907:11)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    Portfolio rebalance execution called for user: dev-user-bypass

      at log (routes/portfolio.js:2163:13)

  console.error
    Database query error: {
      error: 'null value in column "transaction_date" of relation "portfolio_transactions" violates not-null constraint',
      query: '\n' +
        '          INSERT INTO portfolio_transactions (\n' +
        '            user_id, symbol, transaction_type, quant...',
      params: '7 parameters',
      code: '23502'
    }

      1335 |     return result;
      1336 |   } catch (error) {
    > 1337 |     console.error("Database query error:", {
           |             ^
      1338 |       error: error.message,
      1339 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      1340 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1337:13)
      at routes/portfolio.js:2203:9

  console.error
    Portfolio rebalance execution error: error: null value in column "transaction_date" of relation "portfolio_transactions" violates not-null constraint
        at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at query (/home/stocks/algo/webapp/lambda/utils/database.js:1308:20)
        at /home/stocks/algo/webapp/lambda/routes/portfolio.js:2203:9 {
      length: 368,
      severity: 'ERROR',
      code: '23502',
      detail: 'Failing row contains (6, AAPL, rebalance, 10.0000, 150.0000, 1500.0000, 0.0000, null, null, null, dev-user-bypass, manual, 2025-09-26 07:00:22.128).',
      hint: undefined,
      position: undefined,
      internalPosition: undefined,
      internalQuery: undefined,
      where: undefined,
      schema: 'public',
      table: 'portfolio_transactions',
      column: 'transaction_date',
      dataType: undefined,
      constraint: undefined,
      file: 'execMain.c',
      line: '2005',
      routine: 'ExecConstraints'
    }

      2224 |     });
      2225 |   } catch (error) {
    > 2226 |     console.error("Portfolio rebalance execution error:", error);
           |             ^
      2227 |     res.status(500).json({
      2228 |       success: false,
      2229 |       error: "Failed to execute rebalance",

      at error (routes/portfolio.js:2226:13)

  console.log
    Expected database schema issue: null value in column "transaction_date" of relation "portfolio_transactions" violates not-null constraint

      at Object.log (tests/unit/routes/portfolio.test.js:205:17)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    Portfolio rebalance execution called for user: dev-user-bypass

      at log (routes/portfolio.js:2163:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    Portfolio rebalance execution called for user: dev-user-bypass

      at log (routes/portfolio.js:2163:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    Portfolio rebalance execution called for user: dev-user-bypass

      at log (routes/portfolio.js:2163:13)

  console.error
    Database query error: {
      error: 'null value in column "transaction_date" of relation "portfolio_transactions" violates not-null constraint',
      query: '\n' +
        '          INSERT INTO portfolio_transactions (\n' +
        '            user_id, symbol, transaction_type, quant...',
      params: '7 parameters',
      code: '23502'
    }

      1335 |     return result;
      1336 |   } catch (error) {
    > 1337 |     console.error("Database query error:", {
           |             ^
      1338 |       error: error.message,
      1339 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      1340 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1337:13)
      at routes/portfolio.js:2203:9

  console.error
    Portfolio rebalance execution error: error: null value in column "transaction_date" of relation "portfolio_transactions" violates not-null constraint
        at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at query (/home/stocks/algo/webapp/lambda/utils/database.js:1308:20)
        at /home/stocks/algo/webapp/lambda/routes/portfolio.js:2203:9 {
      length: 366,
      severity: 'ERROR',
      code: '23502',
      detail: 'Failing row contains (7, AAPL, rebalance, 1.0000, 150.0000, 150.0000, 0.0000, null, null, null, dev-user-bypass, manual, 2025-09-26 07:00:22.192).',
      hint: undefined,
      position: undefined,
      internalPosition: undefined,
      internalQuery: undefined,
      where: undefined,
      schema: 'public',
      table: 'portfolio_transactions',
      column: 'transaction_date',
      dataType: undefined,
      constraint: undefined,
      file: 'execMain.c',
      line: '2005',
      routine: 'ExecConstraints'
    }

      2224 |     });
      2225 |   } catch (error) {
    > 2226 |     console.error("Portfolio rebalance execution error:", error);
           |             ^
      2227 |     res.status(500).json({
      2228 |       success: false,
      2229 |       error: "Failed to execute rebalance",

      at error (routes/portfolio.js:2226:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📊 Portfolio allocation requested for user: dev-user-bypass

      at log (routes/portfolio.js:5890:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    Portfolio optimization endpoint called for authenticated user: dev-user-bypass

      at log (routes/portfolio.js:2754:11)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    Portfolio optimization endpoint called for authenticated user: dev-user-bypass

      at log (routes/portfolio.js:2754:11)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    Portfolio optimization endpoint called for authenticated user: dev-user-bypass

      at log (routes/portfolio.js:2754:11)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    Portfolio optimization execution requested for user: dev-user-bypass

      at log (routes/portfolio.js:2822:11)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📊 Portfolio analysis requested for user: dev-user-bypass, period: 1y

      at log (routes/portfolio.js:618:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📊 Portfolio analysis requested for user: dev-user-bypass, period: 1y

      at log (routes/portfolio.js:618:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📊 Portfolio analysis requested for user: dev-user-bypass, period: 1y

      at log (routes/portfolio.js:618:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    Portfolio rebalance endpoint called for user: dev-user-bypass, strategy: balanced

      at log (routes/portfolio.js:1884:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    POST /rebalance called for user: dev-user-bypass

      at log (routes/portfolio.js:2066:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    POST /rebalance called for user: dev-user-bypass

      at log (routes/portfolio.js:2066:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    Portfolio metrics requested for user: dev-user-bypass, period: 30d, include_risk: false

      at log (routes/portfolio.js:2880:11)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    Portfolio metrics requested for user: dev-user-bypass, period: 30d, include_risk: true

      at log (routes/portfolio.js:2880:11)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    Portfolio metrics requested for user: dev-user-bypass, period: 30d, include_risk: false

      at log (routes/portfolio.js:2880:11)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    Detailed holdings requested for user: dev-user-bypass, min_value: 0, sort: market_value desc

      at log (routes/portfolio.js:3034:11)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    Detailed holdings requested for user: dev-user-bypass, min_value: 1000, sort: market_value desc

      at log (routes/portfolio.js:3034:11)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    Detailed holdings requested for user: dev-user-bypass, min_value: 0, sort: unrealized_pnl desc

      at log (routes/portfolio.js:3034:11)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    👀 Portfolio watchlist requested for user: dev-user-bypass

      at log (routes/portfolio.js:5846:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    👀 Portfolio watchlist requested for user: dev-user-bypass

      at log (routes/portfolio.js:5846:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    Portfolio holdings endpoint called for authenticated user: dev-user-bypass

      at log (routes/portfolio.js:1750:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    Portfolio metrics requested for user: dev-user-bypass, period: invalid, include_risk: notboolean

      at log (routes/portfolio.js:2880:11)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

PASS tests/unit/routes/portfolio.test.js
  Portfolio Routes Unit Tests
    GET /portfolio
      ✓ should return portfolio info (13 ms)
    GET /portfolio/holdings
      ✓ should return holdings data (12 ms)
    GET /portfolio/performance
      ✓ should return performance data (4 ms)
    GET /portfolio/analytics
      ✓ should return analytics data (7 ms)
    GET /portfolio/value
      ✓ should return portfolio value data (5 ms)
    GET /portfolio/risk-analysis
      ✓ should return risk analysis data (6 ms)
    GET /portfolio/returns
      ✓ should return returns data (8 ms)
    GET /portfolio/benchmark
      ✓ should return benchmark data (4 ms)
    GET /portfolio/risk
      ✓ should return risk data (5 ms)
    GET /portfolio/risk-metrics
      ✓ should return risk metrics (5 ms)
    POST /portfolio/rebalance/execute
      ✓ should execute rebalance with valid recommendations (58 ms)
      ✓ should reject rebalance without recommendations (4 ms)
      ✓ should reject invalid recommendations format (3 ms)
    GET /portfolio/allocation - metadata integration
      ✓ should return allocation with last rebalance date from metadata (30 ms)
    GET /portfolio/optimization
      ✓ should return portfolio optimization recommendations (5 ms)
      ✓ should handle optimization with risk tolerance parameters (4 ms)
      ✓ should include rebalancing suggestions (5 ms)
    POST /portfolio/optimization/execute
      ✓ should execute optimization recommendations (4 ms)
    GET /portfolio/analysis
      ✓ should return comprehensive portfolio analysis (8 ms)
      ✓ should include sector breakdown (5 ms)
      ✓ should handle time period analysis (4 ms)
    GET /portfolio/rebalance
      ✓ should return rebalancing recommendations (6 ms)
      ✓ should handle custom target allocations (4 ms)
      ✓ should validate allocation percentages sum to 100 (4 ms)
    GET /portfolio/metrics
      ✓ should return detailed portfolio metrics (8 ms)
      ✓ should include advanced risk metrics (5 ms)
      ✓ should support different time periods (4 ms)
    GET /portfolio/holdings/detailed
      ✓ should return detailed holdings information (5 ms)
      ✓ should filter holdings by minimum value (5 ms)
      ✓ should sort holdings by different criteria (6 ms)
    POST /portfolio/holdings/add
      ✓ should add new holding to portfolio (5 ms)
      ✓ should validate required fields (2 ms)
      ✓ should handle duplicate holdings (3 ms)
    GET /portfolio/performance/history
      ✓ should return historical performance data (3 ms)
      ✓ should handle date range filtering (3 ms)
      ✓ should include benchmark comparison (4 ms)
    GET /portfolio/performance/attribution
      ✓ should return performance attribution analysis (3 ms)
      ✓ should break down attribution by holdings (3 ms)
    GET /portfolio/watchlist
      ✓ should return portfolio watchlist (6 ms)
      ✓ should include price alerts (4 ms)
    POST /portfolio/watchlist/add
      ✓ should add symbol to watchlist (2 ms)
      ✓ should validate symbol format (2 ms)
    GET /portfolio/export
      ✓ should export portfolio data in CSV format (4 ms)
      ✓ should export portfolio data in JSON format (3 ms)
      ✓ should include all requested data fields (6 ms)
    Error handling
      ✓ should handle invalid endpoints gracefully (2 ms)
      ✓ should handle missing authorization (1 ms)
      ✓ should handle database connection errors (5 ms)
      ✓ should handle invalid query parameters (7 ms)
      ✓ should handle large data requests with pagination (3 ms)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.error
    Database query error: {
      error: 'relation "non_existent_table_12345" does not exist',
      query: 'SELECT * FROM non_existent_table_12345',
      params: 'no parameters',
      code: '42P01'
    }

      1335 |     return result;
      1336 |   } catch (error) {
    > 1337 |     console.error("Database query error:", {
           |             ^
      1338 |       error: error.message,
      1339 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      1340 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1337:13)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:100:22)

  console.error
    Database query error: {
      error: 'syntax error at or near "INVALID"',
      query: 'INVALID SQL SYNTAX HERE',
      params: 'no parameters',
      code: '42601'
    }

      1335 |     return result;
      1336 |   } catch (error) {
    > 1337 |     console.error("Database query error:", {
           |             ^
      1338 |       error: error.message,
      1339 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      1340 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1337:13)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:106:22)

  console.log
    Initializing database schema...

      at log (utils/database.js:311:13)

  console.log
    ✅ Created/verified table: stock_symbols

      at log (utils/database.js:1064:17)

  console.log
    ✅ Created/verified table: company_profile

      at log (utils/database.js:1064:17)

  console.log
    ✅ Created/verified table: market_data

      at log (utils/database.js:1064:17)

  console.log
    ✅ Created/verified table: technical_data_daily

      at log (utils/database.js:1064:17)

  console.log
    ✅ Created/verified table: technical_data_weekly

      at log (utils/database.js:1064:17)

  console.log
    ✅ Created/verified table: technical_data_monthly

      at log (utils/database.js:1064:17)

  console.log
    ✅ Created/verified table: stocks

      at log (utils/database.js:1064:17)

  console.log
    ✅ Created/verified table: price_daily

      at log (utils/database.js:1064:17)

  console.log
    ✅ Created/verified table: portfolio_holdings

      at log (utils/database.js:1064:17)

  console.log
    ✅ Created/verified table: portfolio_performance

      at log (utils/database.js:1064:17)

  console.log
    ✅ Created/verified table: buy_sell_daily

      at log (utils/database.js:1064:17)

  console.log
    ✅ Created/verified table: buy_sell_weekly

      at log (utils/database.js:1064:17)

  console.log
    ✅ Created/verified table: buy_sell_monthly

      at log (utils/database.js:1064:17)

  console.log
    ✅ Created/verified table: portfolio_transactions

      at log (utils/database.js:1064:17)

  console.log
    ✅ Created/verified table: technical_indicators

      at log (utils/database.js:1064:17)

  console.log
    ✅ Created/verified table: market_sentiment

      at log (utils/database.js:1064:17)

  console.log
    ✅ Created/verified table: price_alerts

      at log (utils/database.js:1064:17)

  console.log
    ✅ Created/verified table: risk_alerts

      at log (utils/database.js:1064:17)

  console.log
    ✅ Created/verified table: alert_settings

      at log (utils/database.js:1064:17)

  console.log
    ✅ Created/verified table: alert_rules

      at log (utils/database.js:1064:17)

  console.log
    ✅ Created/verified table: stock_scores

      at log (utils/database.js:1064:17)

  console.log
    ✅ Created/verified table: key_metrics

      at log (utils/database.js:1064:17)

  console.log
    ✅ Created/verified table: dividend_calendar

      at log (utils/database.js:1064:17)

  console.log
    ✅ Created/verified table: trading_strategies

      at log (utils/database.js:1064:17)

  console.log
    ✅ Created/verified table: user_risk_limits

      at log (utils/database.js:1064:17)

  console.log
    ✅ Created/verified table: trade_history

      at log (utils/database.js:1064:17)

  console.log
    ✅ Created/verified table: portfolio_summary

      at log (utils/database.js:1064:17)

  console.log
    ✅ Created/verified table: user_dashboard_settings

      at log (utils/database.js:1064:17)

  console.log
    ✅ Created/verified table: portfolio_metadata

      at log (utils/database.js:1064:17)

  console.log
    ✅ Created/verified table: swing_trading_signals

      at log (utils/database.js:1064:17)

  console.log
    ✅ Created/verified table: economic_data

      at log (utils/database.js:1064:17)

  console.log
    ✅ Database schema initialization completed

      at log (utils/database.js:1076:13)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/integration/utils/database.integration.test.js
  Database Real Site Functionality Tests
    Real Database Query Operations
      ✓ should execute basic SELECT queries against real database (1 ms)
      ✓ should handle parameterized queries correctly (3 ms)
      ✓ should prevent SQL injection attacks with parameterized queries (1 ms)
      ✕ should handle database errors gracefully (3 ms)
      ✕ should handle syntax errors gracefully (7 ms)
      ✓ should work with complex JOIN queries on real tables (6 ms)
      ✓ should handle aggregate functions and calculations (11 ms)
      ✓ should handle date/time operations (2 ms)
    Database Initialization and Schema
      ✓ should initialize database and create required tables (1 ms)
      ✓ should verify database connection and schema integrity (3 ms)
      ✓ should handle database configuration from environment variables
    Real Database Schema Operations
      ✓ should initialize and verify schema tables (20 ms)
      ✓ should handle table creation and constraints (3 ms)
      ✓ should handle unique constraints properly (3 ms)
    Connection Pool Management
      ✓ should provide working connection pool
      ✓ should manage connection lifecycle properly (5 ms)
      ✓ should perform accurate health checks (1 ms)
      ✓ should handle concurrent connections properly (5 ms)
      ✓ should handle connection pool stats
    Transaction Support
      ✓ should execute transactions with commit (3 ms)
      ✓ should rollback transactions on error (2 ms)
      ✓ should handle nested transaction operations (3 ms)
    Real-World Data Operations
      ✓ should handle bulk data insertions efficiently (7 ms)
      ✕ should handle complex analytical queries (11 ms)
      ✓ should handle time-based queries with proper indexing performance (14 ms)
    Advanced Transaction Integration Scenarios
      ✓ should handle concurrent transactions without conflicts (5 ms)
      ✓ should handle transaction rollback with concurrent access (2 ms)
      ✓ should handle cross-table transaction consistency (2 ms)
      ✓ should handle transaction isolation levels (106 ms)
      ✓ should handle large transaction data volumes (21 ms)

  ● Database Real Site Functionality Tests › Real Database Query Operations › should handle database errors gracefully

    error: relation "non_existent_table_12345" does not exist

      1306 |     });
      1307 |
    > 1308 |     const result = await Promise.race([
           |                    ^
      1309 |       pool.query(text, params),
      1310 |       timeoutPromise,
      1311 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1308:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:100:22)

  ● Database Real Site Functionality Tests › Real Database Query Operations › should handle syntax errors gracefully

    error: syntax error at or near "INVALID"

      1306 |     });
      1307 |
    > 1308 |     const result = await Promise.race([
           |                    ^
      1309 |       pool.query(text, params),
      1310 |       timeoutPromise,
      1311 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1308:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:106:22)

  ● Database Real Site Functionality Tests › Real-World Data Operations › should handle complex analytical queries

    expect(received).toBeCloseTo(expected, precision)

    Expected: 106
    Received: 108

    Expected precision:    0
    Expected difference: < 0.5
    Received difference:   2

      613 |
      614 |       expect(parseInt(stats.data_points)).toBe(10);
    > 615 |       expect(parseFloat(stats.avg_price)).toBeCloseTo(106, 0); // Approximate average
          |                                           ^
      616 |       expect(stats.price_volatility).toBeGreaterThan(0);
      617 |       expect(stats.name).toBe("Analytics Test Corp");
      618 |     });

      at Object.toBeCloseTo (tests/integration/utils/database.integration.test.js:615:43)

  console.log
    JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    JWT verification failed in test mode: Invalid token

      at ApiKeyService.log [as validateJwtToken] (utils/apiKeyService.js:172:19)

  console.log
    JWT decode failed in dev mode, trying other token patterns: Cannot read properties of undefined (reading 'sub')

      at ApiKeyService.log [as validateJwtToken] (utils/apiKeyService.js:197:23)

  console.error
    API key storage error: Error: API key data exceeds maximum length limits
        at ApiKeyService.storeApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:686:15)
        at storeApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1397:34)
        at Object.storeApiKey (/home/stocks/algo/webapp/lambda/tests/unit/utils/apiKeyService.test.js:197:28)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      809 |     } catch (error) {
      810 |       this.recordFailure(error);
    > 811 |       console.error("API key storage error:", error);
          |               ^
      812 |       throw new Error(
      813 |         `Failed to store API key for ${provider}: ${error.message}`
      814 |       );

      at ApiKeyService.error [as storeApiKey] (utils/apiKeyService.js:811:15)
      at storeApiKey (utils/apiKeyService.js:1397:34)
      at Object.storeApiKey (tests/unit/utils/apiKeyService.test.js:197:28)

  console.log
    JWT verification failed in test mode: Invalid token

      at ApiKeyService.log [as validateJwtToken] (utils/apiKeyService.js:172:19)

  console.error
    API key storage error: Error: Database connection failed
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/utils/apiKeyService.test.js:226:23)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      809 |     } catch (error) {
      810 |       this.recordFailure(error);
    > 811 |       console.error("API key storage error:", error);
          |               ^
      812 |       throw new Error(
      813 |         `Failed to store API key for ${provider}: ${error.message}`
      814 |       );

      at ApiKeyService.error [as storeApiKey] (utils/apiKeyService.js:811:15)
      at storeApiKey (utils/apiKeyService.js:1397:14)
      at Object.<anonymous> (tests/unit/utils/apiKeyService.test.js:230:22)

  console.log
    JWT verification failed in test mode: Invalid token

      at ApiKeyService.log [as validateJwtToken] (utils/apiKeyService.js:172:19)

  console.log
    JWT verification failed in test mode: Invalid token

      at ApiKeyService.log [as validateJwtToken] (utils/apiKeyService.js:172:19)

  console.log
    JWT verification failed in test mode: Invalid token

      at ApiKeyService.log [as validateJwtToken] (utils/apiKeyService.js:172:19)

  console.log
    JWT verification failed in test mode: Invalid token

      at ApiKeyService.log [as validateJwtToken] (utils/apiKeyService.js:172:19)

  console.error
    API key deletion error: Error: Database connection failed
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/utils/apiKeyService.test.js:431:23)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      1194 |     } catch (error) {
      1195 |       this.recordFailure(error);
    > 1196 |       console.error("API key deletion error:", error);
           |               ^
      1197 |       return {
      1198 |         success: false,
      1199 |         error: `Failed to delete API key for ${provider}: ${error.message}`,

      at ApiKeyService.error [as deleteApiKey] (utils/apiKeyService.js:1196:15)
      at deleteApiKey (utils/apiKeyService.js:1422:14)
      at Object.<anonymous> (tests/unit/utils/apiKeyService.test.js:434:22)

  console.log
    JWT verification failed in test mode: Invalid token

      at ApiKeyService.log [as validateJwtToken] (utils/apiKeyService.js:172:19)

  console.warn
    API key providers query returned null result, database may be unavailable

      1231 |       // Add null checking for database availability
      1232 |       if (!dbResult || !dbResult.rows) {
    > 1233 |         console.warn(
           |                 ^
      1234 |           "API key providers query returned null result, database may be unavailable"
      1235 |         );
      1236 |         this.recordFailure(new Error("Database temporarily unavailable"));

      at ApiKeyService.warn [as listProviders] (utils/apiKeyService.js:1233:17)
      at listProviders (utils/apiKeyService.js:1429:14)
      at Object.<anonymous> (tests/unit/utils/apiKeyService.test.js:501:22)

  console.error
    API key circuit breaker OPENED after 5 failures: Database connection failed

      559 |     if (this.circuitBreaker.failures >= this.circuitBreaker.maxFailures) {
      560 |       this.circuitBreaker.state = "OPEN";
    > 561 |       console.error(
          |               ^
      562 |         `API key circuit breaker OPENED after ${this.circuitBreaker.failures} failures:`,
      563 |         error.message
      564 |       );

      at ApiKeyService.error [as recordFailure] (utils/apiKeyService.js:561:15)
      at ApiKeyService.recordFailure [as storeApiKey] (utils/apiKeyService.js:810:12)
      at storeApiKey (utils/apiKeyService.js:1397:14)
      at Object.<anonymous> (tests/unit/utils/apiKeyService.test.js:601:22)

  console.error
    API key storage error: Error: Database connection failed
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/utils/apiKeyService.test.js:595:23)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      809 |     } catch (error) {
      810 |       this.recordFailure(error);
    > 811 |       console.error("API key storage error:", error);
          |               ^
      812 |       throw new Error(
      813 |         `Failed to store API key for ${provider}: ${error.message}`
      814 |       );

      at ApiKeyService.error [as storeApiKey] (utils/apiKeyService.js:811:15)
      at storeApiKey (utils/apiKeyService.js:1397:14)
      at Object.<anonymous> (tests/unit/utils/apiKeyService.test.js:601:22)

  console.log
    JWT decode failed in dev mode, trying other token patterns: JWT validation failed

      at ApiKeyService.log [as validateJwtToken] (utils/apiKeyService.js:197:23)

  console.error
    API key circuit breaker OPENED after 6 failures: API key data exceeds maximum length limits

      559 |     if (this.circuitBreaker.failures >= this.circuitBreaker.maxFailures) {
      560 |       this.circuitBreaker.state = "OPEN";
    > 561 |       console.error(
          |               ^
      562 |         `API key circuit breaker OPENED after ${this.circuitBreaker.failures} failures:`,
      563 |         error.message
      564 |       );

      at ApiKeyService.error [as recordFailure] (utils/apiKeyService.js:561:15)
      at ApiKeyService.recordFailure [as storeApiKey] (utils/apiKeyService.js:810:12)
      at storeApiKey (utils/apiKeyService.js:1397:34)
      at Object.storeApiKey (tests/unit/utils/apiKeyService.test.js:681:28)

  console.error
    API key storage error: Error: API key data exceeds maximum length limits
        at ApiKeyService.storeApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:686:15)
        at storeApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1397:34)
        at Object.storeApiKey (/home/stocks/algo/webapp/lambda/tests/unit/utils/apiKeyService.test.js:681:28)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      809 |     } catch (error) {
      810 |       this.recordFailure(error);
    > 811 |       console.error("API key storage error:", error);
          |               ^
      812 |       throw new Error(
      813 |         `Failed to store API key for ${provider}: ${error.message}`
      814 |       );

      at ApiKeyService.error [as storeApiKey] (utils/apiKeyService.js:811:15)
      at storeApiKey (utils/apiKeyService.js:1397:34)
      at Object.storeApiKey (tests/unit/utils/apiKeyService.test.js:681:28)

  console.log
    🔧 Development mode: Resetting API key circuit breaker to CLOSED state

      at ApiKeyService.log [as checkCircuitBreaker] (utils/apiKeyService.js:510:17)

  console.log
    JWT decode failed in dev mode, trying other token patterns: Cannot read properties of undefined (reading 'sub')

      at ApiKeyService.log [as validateJwtToken] (utils/apiKeyService.js:197:23)

  console.log
    JWT decode failed in dev mode, trying other token patterns: Cannot read properties of undefined (reading 'sub')

      at ApiKeyService.log [as validateJwtToken] (utils/apiKeyService.js:197:23)

  console.log
    JWT decode failed in dev mode, trying other token patterns: Cannot read properties of undefined (reading 'sub')

      at ApiKeyService.log [as validateJwtToken] (utils/apiKeyService.js:197:23)

  console.log
    JWT decode failed in dev mode, trying other token patterns: Cannot read properties of undefined (reading 'sub')

      at ApiKeyService.log [as validateJwtToken] (utils/apiKeyService.js:197:23)

  console.error
    Audit logging error: Error: Audit log failed
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/utils/apiKeyService.test.js:953:32)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      962 |       ); // IP address can be added later
      963 |     } catch (error) {
    > 964 |       console.error("Audit logging error:", error);
          |               ^
      965 |       // Don't throw - audit logging failures shouldn't break main functionality
      966 |     }
      967 |   }

      at ApiKeyService.error [as logAuditEvent] (utils/apiKeyService.js:964:15)
      at ApiKeyService.storeApiKey (utils/apiKeyService.js:789:7)
      at storeApiKey (utils/apiKeyService.js:1397:14)
      at Object.<anonymous> (tests/unit/utils/apiKeyService.test.js:956:22)

  console.log
    JWT decode failed in dev mode, trying other token patterns: Cannot read properties of undefined (reading 'sub')

      at ApiKeyService.log [as validateJwtToken] (utils/apiKeyService.js:197:23)

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/unit/utils/apiKeyService.test.js
  API Key Service
    validateJwtToken
      ✕ should validate JWT token in test environment (1 ms)
      ✕ should reject invalid JWT tokens (1 ms)
      ✓ should handle empty or invalid token input
      ✕ should accept dev-bypass-token in development (1 ms)
    storeApiKey
      ✓ should store API key successfully (1 ms)
      ✓ should validate input parameters
      ✓ should validate provider name for SQL injection
      ✓ should validate required fields (1 ms)
      ✓ should validate field lengths (12 ms)
      ✕ should handle JWT validation failure (2 ms)
      ✓ should handle database errors (1 ms)
    getApiKey
      ✓ should retrieve API key successfully (1 ms)
      ✓ should return null for non-existent keys
      ✓ should handle JWT validation failure (1 ms)
      ✓ should update last used timestamp
    validateApiKey
      ✓ should validate API key successfully
      ✓ should handle API key not configured
      ✕ should handle JWT validation failure (1 ms)
      ✓ should test connection when requested
    deleteApiKey
      ✓ should delete API key successfully
      ✓ should handle deletion of non-existent key (1 ms)
      ✕ should handle JWT validation failure gracefully (1 ms)
      ✓ should handle database errors (1 ms)
    listProviders
      ✕ should return list of configured providers
      ✕ should return empty array for no providers (1 ms)
      ✕ should handle JWT validation failure (1 ms)
      ✕ should handle database unavailable gracefully (1 ms)
    getDecryptedApiKey
      ✓ should retrieve API key by user ID
      ✓ should return null for non-existent key
    cache management
      ✓ should invalidate session cache
      ✓ should clear all caches
    health status
      ✓ should return health status
    circuit breaker functionality
      ✓ should handle circuit breaker failures (1 ms)
      ✕ should test JWT circuit breaker functionality (1 ms)
    security features
      ✓ should sanitize log output (5 ms)
      ✓ should validate input lengths (3 ms)
      ○ skipped should use different salts for different users
    encryption and decryption
      ✓ should handle production encryption mode (2 ms)
      ✓ should handle encryption key from environment
      ✓ should handle secrets manager errors (1 ms)
    production JWT verification
      ✓ should handle Cognito JWT verification (1 ms)
      ✓ should handle Cognito JWT verification failure (1 ms)
      ✕ should use cached JWT session (1 ms)
    edge cases and error handling
      ✓ should handle database null result (1 ms)
      ✓ should handle missing required fields for provider
      ✓ should handle connection test for alpaca (1 ms)
    audit logging
      ✓ should log audit events
      ✓ should handle audit logging errors gracefully (1 ms)
    development mode features
      ✕ should handle development bypass token (2 ms)
      ✓ should reset circuit breaker in development
    provider specific functionality
      ✓ should handle different provider required fields
      ✓ should handle unknown provider gracefully (1 ms)

  ● API Key Service › validateJwtToken › should validate JWT token in test environment

    expect(received).toBe(expected) // Object.is equality

    Expected: "dev-bypass@example.com"
    Received: "dev-user-bypass@test.local"

       98 |       expect(result.valid).toBe(true);
       99 |       expect(result.user.sub).toBe("dev-user-bypass");
    > 100 |       expect(result.user.email).toBe("dev-bypass@example.com");
          |                                 ^
      101 |     });
      102 |
      103 |     test("should reject invalid JWT tokens", async () => {

      at Object.toBe (tests/unit/utils/apiKeyService.test.js:100:33)

  ● API Key Service › validateJwtToken › should reject invalid JWT tokens

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      109 |       const result = await validateJwtToken(token);
      110 |
    > 111 |       expect(result.valid).toBe(false);
          |                            ^
      112 |       expect(result.error).toContain("JWT verification not configured");
      113 |     });
      114 |

      at Object.toBe (tests/unit/utils/apiKeyService.test.js:111:28)

  ● API Key Service › validateJwtToken › should accept dev-bypass-token in development

    expect(received).toBe(expected) // Object.is equality

    Expected: "dev-user-bypass"
    Received: "dev-bypass-token"

      126 |
      127 |       expect(result.valid).toBe(true);
    > 128 |       expect(result.user.sub).toBe("dev-user-bypass");
          |                               ^
      129 |     });
      130 |   });
      131 |

      at Object.toBe (tests/unit/utils/apiKeyService.test.js:128:31)

  ● API Key Service › storeApiKey › should handle JWT validation failure

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      219 |       );
      220 |
    > 221 |       expect(result.success).toBe(false);
          |                              ^
      222 |       expect(result.error).toContain("JWT verification not configured");
      223 |     });
      224 |

      at Object.toBe (tests/unit/utils/apiKeyService.test.js:221:30)

  ● API Key Service › validateApiKey › should handle JWT validation failure

    expect(received).toContain(expected) // indexOf

    Expected substring: "JWT verification not configured"
    Received string:    "API key not configured"

      359 |
      360 |       expect(result.valid).toBe(false);
    > 361 |       expect(result.error).toContain("JWT verification not configured");
          |                            ^
      362 |     });
      363 |
      364 |     test("should test connection when requested", async () => {

      at Object.toContain (tests/unit/utils/apiKeyService.test.js:361:28)

  ● API Key Service › deleteApiKey › should handle JWT validation failure gracefully

    expect(received).toContain(expected) // indexOf

    Matcher error: received value must not be null nor undefined

    Received has value: undefined

      425 |       expect(result.success).toBe(true);
      426 |       expect(result.deleted).toBe(false);
    > 427 |       expect(result.message).toContain("Token validation failed");
          |                              ^
      428 |     });
      429 |
      430 |     test("should handle database errors", async () => {

      at Object.toContain (tests/unit/utils/apiKeyService.test.js:427:30)

  ● API Key Service › listProviders › should return list of configured providers

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      465 |       const result = await listProviders("dev-bypass-token");
      466 |
    > 467 |       expect(Array.isArray(result)).toBe(true);
          |                                     ^
      468 |       expect(result).toHaveLength(2);
      469 |       expect(result[0]).toEqual(
      470 |         expect.objectContaining({

      at Object.toBe (tests/unit/utils/apiKeyService.test.js:467:37)

  ● API Key Service › listProviders › should return empty array for no providers

    expect(received).toEqual(expected) // deep equality

    Expected: []
    Received: {"details": [], "providers": []}

      483 |       const result = await listProviders("dev-bypass-token");
      484 |
    > 485 |       expect(result).toEqual([]);
          |                      ^
      486 |     });
      487 |
      488 |     test("should handle JWT validation failure", async () => {

      at Object.toEqual (tests/unit/utils/apiKeyService.test.js:485:22)

  ● API Key Service › listProviders › should handle JWT validation failure

    expect(received).toEqual(expected) // deep equality

    Expected: []
    Received: {"details": [], "providers": []}

      493 |       const result = await listProviders("invalid-jwt-token");
      494 |
    > 495 |       expect(result).toEqual([]);
          |                      ^
      496 |     });
      497 |
      498 |     test("should handle database unavailable gracefully", async () => {

      at Object.toEqual (tests/unit/utils/apiKeyService.test.js:495:22)

  ● API Key Service › listProviders › should handle database unavailable gracefully

    expect(received).toEqual(expected) // deep equality

    Expected: []
    Received: {"providers": []}

      501 |       const result = await listProviders("dev-bypass-token");
      502 |
    > 503 |       expect(result).toEqual([]);
          |                      ^
      504 |     });
      505 |   });
      506 |

      at Object.toEqual (tests/unit/utils/apiKeyService.test.js:503:22)

  ● API Key Service › circuit breaker functionality › should test JWT circuit breaker functionality

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      616 |       const result = await validateJwtToken("invalid-token");
      617 |
    > 618 |       expect(result.valid).toBe(false);
          |                            ^
      619 |       expect(result.error).toContain("JWT verification not configured");
      620 |     });
      621 |   });

      at Object.toBe (tests/unit/utils/apiKeyService.test.js:618:28)

  ● API Key Service › production JWT verification › should use cached JWT session

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 1
    Received number of calls: 2

      846 |
      847 |       // Should only call verify once (first time)
    > 848 |       expect(mockJwtVerifier.verify).toHaveBeenCalledTimes(1);
          |                                      ^
      849 |     });
      850 |   });
      851 |

      at Object.toHaveBeenCalledTimes (tests/unit/utils/apiKeyService.test.js:848:38)

  ● API Key Service › development mode features › should handle development bypass token

    expect(received).toBe(expected) // Object.is equality

    Expected: "admin"
    Received: "user"

      976 |       expect(result.valid).toBe(true);
      977 |       expect(result.user.sub).toBe("dev-user-bypass");
    > 978 |       expect(result.user.role).toBe("admin");
          |                                ^
      979 |     });
      980 |
      981 |     test("should reset circuit breaker in development", async () => {

      at Object.toBe (tests/unit/utils/apiKeyService.test.js:978:32)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/unit/utils/schemaValidator.test.js
  Schema Validator
    validateData
      ✓ should validate valid company profile data successfully (1 ms)
      ✕ should fail validation for missing required fields (1 ms)
      ✓ should fail validation for unknown table
      ✓ should fail validation for unknown field
      ✓ should validate VARCHAR field with max length constraint
      ✓ should validate INTEGER field constraints
      ✓ should validate DECIMAL precision constraints (1 ms)
      ✓ should validate BOOLEAN field types
      ✓ should validate DATE field format (1 ms)
      ✓ should allow null values for non-required fields
    validateTableStructure
      ✓ should validate existing table with correct structure
      ✓ should fail validation for non-existent table (1 ms)
      ✓ should fail validation for unknown schema
      ✓ should handle database errors gracefully
      ✓ should detect missing columns
      ✓ should warn about extra columns (1 ms)
    validateDatabaseIntegrity
      ✓ should collect errors from failed table validations (1 ms)
      ○ skipped should validate all tables successfully
    generateCreateTableSQL
      ✓ should generate CREATE TABLE SQL for stocks table (1 ms)
      ✓ should include DECIMAL precision in SQL
      ✓ should include PRIMARY KEY constraint
      ✓ should include CHECK constraints for minimum values
      ✓ should include indexes in SQL
      ✓ should handle unknown table (13 ms)
      ✓ should include default values
      ✓ should include UNIQUE constraints
    getTableSchema
      ✓ should return schema for existing table (1 ms)
      ✓ should return null for unknown table
    listTables
      ✓ should return array of table names
    sanitizeInput
      ✓ should sanitize string inputs
      ✓ should handle null and undefined inputs (1 ms)
      ✓ should sanitize arrays recursively
      ✓ should sanitize objects recursively
      ✓ should preserve numbers and booleans
      ✓ should trim whitespace from strings
    validateTableExists
      ✓ should return true for existing table
      ✓ should return false for non-existent table (1 ms)
      ✓ should handle database errors
    validateColumns
      ✓ should validate columns successfully
      ✓ should detect missing columns (1 ms)
      ✓ should detect type mismatches
      ✓ should handle unknown table schema
      ✓ should handle database errors (1 ms)
    validateIndexes
      ✓ should validate indexes successfully
      ✕ should return valid for table without indexes
      ✕ should handle database errors (1 ms)
    safeQuery
      ✕ should execute query successfully
      ✕ should return null on database error and log warning
      ✓ should truncate long query text in logs
    field sanitization
      ✓ should sanitize VARCHAR fields
      ✓ should convert string numbers to proper types
      ✓ should handle boolean conversion edge cases
      ✓ should convert date strings to ISO format (1 ms)
    edge cases and error scenarios
      ✓ should handle empty data object
      ✓ should validate complex table with multiple constraints
      ✕ should handle very long strings gracefully
    schemas export
      ✓ should export schemas object (1 ms)

  ● Schema Validator › validateData › should fail validation for missing required fields

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 1
    Received array:  [{"code": "REQUIRED_FIELD_MISSING", "field": "ticker", "message": "Required field \"ticker\" is missing"}]

      68 |       expect(result.isValid).toBe(false);
      69 |       expect(result.errors).toContain('Required field "ticker" is missing');
    > 70 |       expect(result.errorDetails).toHaveLength(2);
         |                                   ^
      71 |     });
      72 |
      73 |     test("should fail validation for unknown table", () => {

      at Object.toHaveLength (tests/unit/utils/schemaValidator.test.js:70:35)

  ● Schema Validator › validateIndexes › should return valid for table without indexes

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      926 |       const result = await validateIndexes("fear_greed_index"); // Table with only created_at index
      927 |
    > 928 |       expect(result.valid).toBe(true);
          |                            ^
      929 |       expect(result.missingIndexes).toBeDefined();
      930 |     });
      931 |

      at Object.toBe (tests/unit/utils/schemaValidator.test.js:928:28)

  ● Schema Validator › validateIndexes › should handle database errors

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: {"actualIndexes": ["fear_greed_index_created_at_idx"], "expectedIndexes": ["stock_prices_symbol_idx", "stock_prices_date_idx"], "isValid": false, "missingIndexes": ["stock_prices_symbol_idx", "stock_prices_date_idx"], "valid": false}

      934 |       mockQuery.mockRejectedValueOnce(dbError);
      935 |
    > 936 |       await expect(validateIndexes("stock_prices")).rejects.toThrow(
          |             ^
      937 |         "Index query failed"
      938 |       );
      939 |       expect(mockLogger.error).toHaveBeenCalled();

      at expect (node_modules/expect/build/index.js:113:15)
      at Object.expect (tests/unit/utils/schemaValidator.test.js:936:13)

  ● Schema Validator › safeQuery › should execute query successfully

    expect(received).toEqual(expected) // deep equality

    Expected: {"rows": [{"count": 5}]}
    Received: null

      951 |       const result = await safeQuery("SELECT COUNT(*) as count FROM test");
      952 |
    > 953 |       expect(result).toEqual(expectedResult);
          |                      ^
      954 |       expect(mockQuery).toHaveBeenCalledWith(
      955 |         "SELECT COUNT(*) as count FROM test",
      956 |         []

      at Object.toEqual (tests/unit/utils/schemaValidator.test.js:953:22)

  ● Schema Validator › safeQuery › should return null on database error and log warning

    expect(received).toBeNull()

    Received: {"rows": [{"count": 5}]}

      967 |       const result = await safeQuery("SELECT * FROM test", ["param"]);
      968 |
    > 969 |       expect(result).toBeNull();
          |                      ^
      970 |       expect(mockLogger.warn).toHaveBeenCalledWith(
      971 |         "Safe query failed, database may be unavailable",
      972 |         expect.objectContaining({

      at Object.toBeNull (tests/unit/utils/schemaValidator.test.js:969:22)

  ● Schema Validator › edge cases and error scenarios › should handle very long strings gracefully

    expect(received).toContain(expected) // indexOf

    Expected value: "Field \"ticker\" exceeds maximum length of 10 characters"
    Received array: ["Field \"symbol\" exceeds maximum length of 10 characters"]

      1098 |
      1099 |       expect(result.valid).toBe(false);
    > 1100 |       expect(result.errors).toContain(
           |                             ^
      1101 |         'Field "ticker" exceeds maximum length of 10 characters'
      1102 |       );
      1103 |     });

      at Object.toContain (tests/unit/utils/schemaValidator.test.js:1100:29)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

  console.log
    📈 Fetching real BUY signals from buy_sell_daily

      at log (routes/signals.js:235:13)

  console.log
    📈 Fetching real BUY signals from buy_sell_weekly

      at log (routes/signals.js:235:13)

  console.log
    📈 Fetching real BUY signals from buy_sell_daily

      at log (routes/signals.js:235:13)

  console.log
    📈 Fetching real BUY signals from buy_sell_daily

      at log (routes/signals.js:235:13)

  console.log
    📉 Sell signals requested for daily timeframe

      at log (routes/signals.js:349:13)

  console.log
    📉 Fetching real SELL signals from buy_sell_daily

      at log (routes/signals.js:362:13)

  console.log
    📉 Sell signals requested for monthly timeframe

      at log (routes/signals.js:349:13)

  console.log
    📉 Fetching real SELL signals from buy_sell_monthly

      at log (routes/signals.js:362:13)

  console.log
    📊 Technical signals requested for daily timeframe

      at log (routes/signals.js:477:13)

  console.log
    📊 Fetching technical signals from buy_sell_daily

      at log (routes/signals.js:490:13)

  console.log
    📊 Technical signals requested for daily timeframe

      at log (routes/signals.js:477:13)

  console.log
    📊 Fetching technical signals from buy_sell_daily

      at log (routes/signals.js:490:13)

  console.log
    📊 Technical signals requested for daily timeframe

      at log (routes/signals.js:477:13)

  console.log
    📊 Fetching technical signals from buy_sell_daily

      at log (routes/signals.js:490:13)

  console.log
    📊 Technical signals requested for daily timeframe filtered by symbols: AAPL, MSFT

      at log (routes/signals.js:477:13)

  console.log
    📊 Fetching technical signals from buy_sell_daily

      at log (routes/signals.js:490:13)

  console.log
    📊 Momentum signals requested for daily timeframe

      at log (routes/signals.js:609:13)

  console.log
    📊 Fetching momentum signals from buy_sell_daily

      at log (routes/signals.js:622:13)

  console.log
    📊 Momentum signals requested for daily timeframe

      at log (routes/signals.js:609:13)

  console.log
    📊 Fetching momentum signals from buy_sell_daily

      at log (routes/signals.js:622:13)

  console.log
    📊 Momentum signals requested for daily timeframe

      at log (routes/signals.js:609:13)

  console.log
    📊 Fetching momentum signals from buy_sell_daily

      at log (routes/signals.js:622:13)

  console.log
    📈 Fetching options signals

      at log (routes/signals.js:1149:13)

  console.log
    📈 Fetching options signals

      at log (routes/signals.js:1149:13)

  console.log
    📈 Fetching options signals

      at log (routes/signals.js:1149:13)

  console.log
    📈 Fetching options signals

      at log (routes/signals.js:1149:13)

  console.log
    📈 Fetching sentiment signals

      at log (routes/signals.js:1171:13)

  console.log
    📈 Fetching sentiment signals

      at log (routes/signals.js:1171:13)

  console.log
    📈 Fetching sentiment signals

      at log (routes/signals.js:1171:13)

  console.log
    📈 Fetching sentiment signals

      at log (routes/signals.js:1171:13)

  console.log
    📈 Fetching earnings signals

      at log (routes/signals.js:1193:13)

  console.log
    📈 Fetching earnings signals

      at log (routes/signals.js:1193:13)

  console.log
    📈 Fetching earnings signals

      at log (routes/signals.js:1193:13)

  console.log
    📈 Fetching crypto signals

      at log (routes/signals.js:1215:13)

  console.log
    📈 Fetching crypto signals

      at log (routes/signals.js:1215:13)

  console.log
    📈 Fetching crypto signals

      at log (routes/signals.js:1215:13)

  console.log
    📈 Fetching sector rotation signals

      at log (routes/signals.js:1268:13)

  console.log
    📈 Fetching sector rotation signals

      at log (routes/signals.js:1268:13)

  console.log
    📈 Fetching sector rotation signals

      at log (routes/signals.js:1268:13)

  console.log
    📈 Fetching historical signals

      at log (routes/signals.js:1238:13)

  console.log
    📈 Fetching historical signals

      at log (routes/signals.js:1238:13)

  console.log
    📈 Fetching historical signals

      at log (routes/signals.js:1238:13)

  console.log
    📈 Fetching historical signals

      at log (routes/signals.js:1238:13)

  console.log
    🔔 Signal alerts requested

      at log (routes/signals.js:803:13)

  console.log
    🔔 Signal alerts requested

      at log (routes/signals.js:803:13)

  console.log
    📊 Signal performance requested for daily

      at log (routes/signals.js:1031:13)

  console.log
    📊 Signal performance requested for daily

      at log (routes/signals.js:1031:13)

  console.log
    📊 Signal performance requested for daily

      at log (routes/signals.js:1031:13)

  console.log
    📈 Fetching real BUY signals from buy_sell_daily

      at log (routes/signals.js:235:13)

  console.log
    📈 Fetching real BUY signals from buy_sell_daily

      at log (routes/signals.js:235:13)

  console.log
    📊 Signals requested for symbol: INVALID_SIGNAL_TYPE

      at log (routes/signals.js:1445:13)

  console.log
    📊 Fetching real signals for INVALID_SIGNAL_TYPE from buy_sell_daily table

      at log (routes/signals.js:1474:13)

  console.log
    📈 Fetching real BUY signals from buy_sell_daily

      at log (routes/signals.js:235:13)

  console.log
    📈 Fetching real BUY signals from buy_sell_daily

      at log (routes/signals.js:235:13)

  console.log
    📈 Fetching real BUY signals from buy_sell_daily

      at log (routes/signals.js:235:13)

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/unit/routes/signals.test.js
  Signals Route - Unit Tests
    GET /api/signals/buy
      ✓ should get buy signals with default parameters (20 ms)
      ✓ should handle different timeframes (10 ms)
      ✓ should validate timeframe parameter (1 ms)
      ✓ should apply limit and pagination (5 ms)
      ✓ should handle database errors gracefully (4 ms)
    GET /api/signals/sell
      ✓ should get sell signals (5 ms)
      ✓ should handle empty sell signals (5 ms)
    GET /api/signals/technical
      ✓ should return technical analysis signals (6 ms)
      ✓ should filter by specific indicators (8 ms)
      ✓ should handle minimum signal strength filter (5 ms)
      ✓ should support symbol filtering (6 ms)
    GET /api/signals/momentum
      ✓ should return momentum signals (5 ms)
      ✓ should handle different momentum types (5 ms)
      ✓ should filter by minimum score (6 ms)
    GET /api/signals/options
      ✓ should return options signals (2 ms)
      ✓ should filter by option type (4 ms)
      ✓ should handle expiration date filtering (2 ms)
      ✓ should filter by implied volatility range (1 ms)
    GET /api/signals/sentiment
      ✓ should return sentiment-based signals (2 ms)
      ✓ should filter by sentiment polarity (2 ms)
      ✓ should handle confidence threshold (2 ms)
      ✓ should include news sources (2 ms)
    GET /api/signals/earnings
      ✓ should return earnings-based signals (2 ms)
      ✓ should filter by days to earnings (2 ms)
      ✓ should handle earnings signal types (2 ms)
    GET /api/signals/crypto
      ✓ should return cryptocurrency signals (3 ms)
      ✓ should filter by major cryptocurrencies (2 ms)
      ✓ should handle market cap filtering (2 ms)
    GET /api/signals/sector-rotation
      ✓ should return sector rotation signals (4 ms)
      ✓ should filter by rotation strength (2 ms)
      ✓ should handle specific sector filtering (2 ms)
    POST /api/signals/custom
      ✕ should create custom signal with valid criteria (2 ms)
      ✕ should validate required fields (2 ms)
      ✕ should validate criteria format (1 ms)
    GET /api/signals/history
      ✓ should return signal history (2 ms)
      ✓ should filter by date range (2 ms)
      ✓ should filter by signal type (2 ms)
      ✓ should include performance metrics (2 ms)
    GET /api/signals/alerts
      ✓ should return active signal alerts (3 ms)
      ✓ should filter alerts by status (7 ms)
    POST /api/signals/alerts
      ✕ should create new signal alert (1 ms)
    GET /api/signals/performance
      ✓ should return signal performance analytics (4 ms)
      ✓ should break down performance by signal type (4 ms)
      ✓ should handle time period analysis (4 ms)
    Error Handling
      ✓ should handle invalid query parameters gracefully (4 ms)
      ✓ should handle database connection errors (4 ms)
      ✓ should validate signal type parameters (5 ms)
      ✓ should handle large limit values (3 ms)
      ✕ should handle malformed request bodies (1 ms)
      ✕ should handle authentication edge cases (4 ms)
      ✓ should handle valid requests (4 ms)

  ● Signals Route - Unit Tests › POST /api/signals/custom › should create custom signal with valid criteria

    expected 201 "Created", got 401 "Unauthorized"

      562 |         .post("/api/signals/custom")
      563 |         .send(customSignal)
    > 564 |         .expect(201);
          |          ^
      565 |
      566 |       expect(response.body).toHaveProperty("success", true);
      567 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/signals.test.js:564:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Signals Route - Unit Tests › POST /api/signals/custom › should validate required fields

    expected 400 "Bad Request", got 401 "Unauthorized"

      579 |         .post("/api/signals/custom")
      580 |         .send(incompleteSignal)
    > 581 |         .expect(400);
          |          ^
      582 |
      583 |       expect(response.body).toHaveProperty("success", false);
      584 |       expect(response.body.error || response.body.success).toBeDefined();

      at Object.expect (tests/unit/routes/signals.test.js:581:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Signals Route - Unit Tests › POST /api/signals/custom › should validate criteria format

    expected 400 "Bad Request", got 401 "Unauthorized"

      595 |         .post("/api/signals/custom")
      596 |         .send(invalidSignal)
    > 597 |         .expect(400);
          |          ^
      598 |
      599 |       expect(response.body).toHaveProperty("success", false);
      600 |       expect(response.body.error).toContain("criteria");

      at Object.expect (tests/unit/routes/signals.test.js:597:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Signals Route - Unit Tests › POST /api/signals/alerts › should create new signal alert

    expected 201 "Created", got 401 "Unauthorized"

      722 |         .post("/api/signals/alerts")
      723 |         .send(alertData)
    > 724 |         .expect(201);
          |          ^
      725 |
      726 |       expect(response.body).toHaveProperty("success", true);
      727 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/signals.test.js:724:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Signals Route - Unit Tests › Error Handling › should handle malformed request bodies

    expected 400 "Bad Request", got 401 "Unauthorized"

      830 |         .post("/api/signals/custom")
      831 |         .send("invalid json string")
    > 832 |         .expect(400);
          |          ^
      833 |
      834 |       expect(response.body.error || response.body.success).toBeDefined();
      835 |     });

      at Object.expect (tests/unit/routes/signals.test.js:832:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Signals Route - Unit Tests › Error Handling › should handle authentication edge cases

    expected 401 "Unauthorized", got 200 "OK"

      852 |       const response = await request(tempApp)
      853 |         .get("/api/signals/buy")
    > 854 |         .expect(401);
          |          ^
      855 |
      856 |       expect(response.body).toHaveProperty("success", false);
      857 |       expect(response.body.error || response.body.success).toBeDefined();

      at Object.expect (tests/unit/routes/signals.test.js:854:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    🚨 Alert created: [HIGH] Test Alert

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [CRITICAL] Critical System Alert

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [MEDIUM] Test Alert

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    ✅ Alert resolved: Test Alert

      at AlertSystem.log [as resolveAlert] (utils/alertSystem.js:424:13)

  console.log
    ⚙️ Alert configuration updated

      at AlertSystem.log [as updateConfig] (utils/alertSystem.js:897:13)

  console.log
    🚨 Alert created: [CRITICAL] Test 1

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [WARNING] Test 2

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [LOW] Test

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    ✅ Alert resolved: Test

      at AlertSystem.log [as resolveAlert] (utils/alertSystem.js:424:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [WARNING] High Latency Warning

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [WARNING] Title

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [CRITICAL] Provider Disconnected

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [CRITICAL] High Error Rate Critical

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [CRITICAL] Daily Cost Critical

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [CRITICAL] Connection Limit Near Max

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [WARNING] Connection Usage High

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [CRITICAL] Cost Budget Near Max

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [WARNING] Cost Usage High

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [CRITICAL] High Latency Critical

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [CRITICAL] High Error Rate Critical

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [CRITICAL] Provider Disconnected

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [CRITICAL] High Latency Critical

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [WARNING] Daily Cost Warning

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [CRITICAL] Connection Limit Critical

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [CRITICAL] Daily Cost Critical

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [CRITICAL] Connection Limit Critical

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    ✅ Alert resolved: Daily Cost Critical

      at AlertSystem.log [as resolveAlert] (utils/alertSystem.js:424:13)

  console.log
    ✅ Alert resolved: Connection Limit Critical

      at AlertSystem.log [as resolveAlert] (utils/alertSystem.js:424:13)

  console.log
    🚨 Alert created: [WARNING] Cooldown Test Alert

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [WARNING] Test Alert 1

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [CRITICAL] Test Alert 2

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    ✅ Alert resolved: Test Alert 1

      at AlertSystem.log [as resolveAlert] (utils/alertSystem.js:424:13)

  console.log
    🚨 Alert created: [CRITICAL] Critical Test

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [WARNING] Warning Test

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [INFO] Info Test

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [INFO] Cleanup Test

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    ✅ Alert resolved: Cleanup Test

      at AlertSystem.log [as resolveAlert] (utils/alertSystem.js:424:13)

  console.log
    🚨 Alert created: [WARNING] High Latency Warning

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [WARNING] High Error Rate Warning

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [WARNING] Connection Limit Warning

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

PASS tests/unit/utils/alertSystem.test.js
  Alert System
    alert creation and management
      ✓ should create alert with proper parameters (7 ms)
      ✓ should create critical alert (1 ms)
      ✓ should resolve active alert (1 ms)
    alert configuration and management
      ✓ should update configuration
      ✓ should get alerts status (2 ms)
      ✓ should cleanup resolved alerts (1 ms)
    monitoring and lifecycle
      ✓ should start monitoring
      ✓ should stop monitoring (1 ms)
    provider monitoring
      ✓ should check provider health
      ✓ should detect high latency
    error handling and edge cases
      ✓ should handle invalid alert creation (1 ms)
      ✓ should handle alert resolution for non-existent alert
      ✓ should handle provider disconnection (1 ms)
      ✓ should handle high error rate (1 ms)
    configuration management
      ✓ should maintain configuration after updates
      ✓ should handle cost monitoring (1 ms)
    resource limit monitoring
      ✓ should create critical alert when connection usage exceeds 90%
      ✓ should create warning alert when connection usage exceeds 80% (5 ms)
      ✓ should create critical alert when cost usage exceeds 90%
      ✓ should create warning alert when cost usage exceeds 80%
      ✓ should handle limits without usage thresholds
      ✓ should handle missing limit categories (1 ms)
    provider health monitoring
      ✓ should check provider health with high latency
      ✓ should check provider health with high error rate (1 ms)
      ✓ should check provider health with disconnected status (1 ms)
      ✓ should resolve provider alerts when healthy
    global health monitoring
      ✓ should check global cost thresholds - warning level
      ✓ should check global connection thresholds - critical level (1 ms)
      ✓ should resolve global alerts when metrics are healthy (1 ms)
    notification methods
      ✓ should send email notification (7 ms)
      ✓ should send webhook notification when URL is configured
      ✓ should warn when webhook URL is not configured
      ✓ should handle email notification errors
      ✓ should handle webhook notification errors (1 ms)
    alert lifecycle and management
      ✓ should handle alert cooldown periods
      ✓ should resolve specific alert types (2 ms)
      ✓ should filter alerts by severity manually (1 ms)
      ✓ should cleanup old resolved alerts (1 ms)
      ✓ should test notifications system
      ✓ should force health check (1 ms)
      ✓ should handle provider health with warning level latency
      ✓ should handle provider health with warning level error rate (1 ms)
      ✓ should handle global connection warning level (1 ms)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.warn
    Table check returned invalid result for analyst_upgrade_downgrade: undefined

      18 |     // Add safety check for undefined result
      19 |     if (!result || !result.rows || result.rows.length === 0) {
    > 20 |       console.warn(`Table check returned invalid result for ${tableName}:`, result);
         |               ^
      21 |       return false;
      22 |     }
      23 |

      at warn (routes/analysts.js:20:15)
      at routes/analysts.js:71:11

  console.warn
    Table check returned invalid result for analyst_upgrade_downgrade: undefined

      18 |     // Add safety check for undefined result
      19 |     if (!result || !result.rows || result.rows.length === 0) {
    > 20 |       console.warn(`Table check returned invalid result for ${tableName}:`, result);
         |               ^
      21 |       return false;
      22 |     }
      23 |

      at warn (routes/analysts.js:20:15)
      at routes/analysts.js:71:11

  console.warn
    Table check returned invalid result for earnings_estimates: undefined

      18 |     // Add safety check for undefined result
      19 |     if (!result || !result.rows || result.rows.length === 0) {
    > 20 |       console.warn(`Table check returned invalid result for ${tableName}:`, result);
         |               ^
      21 |       return false;
      22 |     }
      23 |

      at warn (routes/analysts.js:20:15)
      at routes/analysts.js:135:11

  console.warn
    Table check returned invalid result for earnings_estimates: undefined

      18 |     // Add safety check for undefined result
      19 |     if (!result || !result.rows || result.rows.length === 0) {
    > 20 |       console.warn(`Table check returned invalid result for ${tableName}:`, result);
         |               ^
      21 |       return false;
      22 |     }
      23 |

      at warn (routes/analysts.js:20:15)
      at routes/analysts.js:135:11

  console.warn
    Error checking table existence for sentiment_analysis: Error: Database connection failed
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/analysts.test.js:219:35)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      24 |     return result.rows[0].exists;
      25 |   } catch (error) {
    > 26 |     console.warn(`Error checking table existence for ${tableName}:`, error);
         |             ^
      27 |     return false;
      28 |   }
      29 | }

      at warn (routes/analysts.js:26:13)
      at routes/analysts.js:258:11

  console.log
    📈 [GROWTH] Calculating growth estimates for AAPL

      at log (routes/analysts.js:356:13)

  console.log
    ✅ [GROWTH] Calculated growth estimates for AAPL: Revenue 0%, EPS 0%

      at log (routes/analysts.js:601:13)

  console.error
    Analyst overview fetch error: Error: Database connection failed
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/analysts.test.js:350:35)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      728 |     });
      729 |   } catch (error) {
    > 730 |     console.error("Analyst overview fetch error:", error);
          |             ^
      731 |     return res.status(500).json({
      732 |       success: false,
      733 |       error: "Failed to fetch analyst overview",

      at error (routes/analysts.js:730:13)

  console.log
    📊 Analyst recommendations requested for AAPL

      at log (routes/analysts.js:851:13)

  console.log
    📊 Analyst recommendations requested for INVALID

      at log (routes/analysts.js:851:13)

  console.log
    📊 Analyst recommendations requested for AAPL

      at log (routes/analysts.js:851:13)

  console.error
    Analyst recommendations error: Error: Database connection failed
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/analysts.test.js:475:35)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      939 |     });
      940 |   } catch (error) {
    > 941 |     console.error("Analyst recommendations error:", error);
          |             ^
      942 |     res.status(500).json({
      943 |       success: false,
      944 |       error: "Failed to fetch analyst recommendations",

      at error (routes/analysts.js:941:13)

  console.log
    🎯 Price targets requested for AAPL

      at log (routes/analysts.js:954:13)

  console.log
    🤝 Analyst consensus requested for AAPL

      at log (routes/analysts.js:1342:13)

  console.warn
    Table check returned invalid result for earnings_estimates: { rows: [] }

      18 |     // Add safety check for undefined result
      19 |     if (!result || !result.rows || result.rows.length === 0) {
    > 20 |       console.warn(`Table check returned invalid result for ${tableName}:`, result);
         |               ^
      21 |       return false;
      22 |     }
      23 |

      at warn (routes/analysts.js:20:15)
      at routes/analysts.js:135:11

  console.warn
    Table check returned invalid result for earnings_estimates: { rows: [] }

      18 |     // Add safety check for undefined result
      19 |     if (!result || !result.rows || result.rows.length === 0) {
    > 20 |       console.warn(`Table check returned invalid result for ${tableName}:`, result);
         |               ^
      21 |       return false;
      22 |     }
      23 |

      at warn (routes/analysts.js:20:15)
      at routes/analysts.js:135:11

  console.warn
    Table check returned invalid result for analyst_upgrade_downgrade: { rows: [] }

      18 |     // Add safety check for undefined result
      19 |     if (!result || !result.rows || result.rows.length === 0) {
    > 20 |       console.warn(`Table check returned invalid result for ${tableName}:`, result);
         |               ^
      21 |       return false;
      22 |     }
      23 |

      at warn (routes/analysts.js:20:15)
      at routes/analysts.js:71:11

  console.warn
    Table check returned invalid result for earnings_estimates: { rows: [] }

      18 |     // Add safety check for undefined result
      19 |     if (!result || !result.rows || result.rows.length === 0) {
    > 20 |       console.warn(`Table check returned invalid result for ${tableName}:`, result);
         |               ^
      21 |       return false;
      22 |     }
      23 |

      at warn (routes/analysts.js:20:15)
      at routes/analysts.js:135:11

  console.warn
    Table check returned invalid result for earnings_estimates: { rows: [] }

      18 |     // Add safety check for undefined result
      19 |     if (!result || !result.rows || result.rows.length === 0) {
    > 20 |       console.warn(`Table check returned invalid result for ${tableName}:`, result);
         |               ^
      21 |       return false;
      22 |     }
      23 |

      at warn (routes/analysts.js:20:15)
      at routes/analysts.js:135:11

  console.warn
    Table check returned invalid result for earnings_estimates: { rows: [] }

      18 |     // Add safety check for undefined result
      19 |     if (!result || !result.rows || result.rows.length === 0) {
    > 20 |       console.warn(`Table check returned invalid result for ${tableName}:`, result);
         |               ^
      21 |       return false;
      22 |     }
      23 |

      at warn (routes/analysts.js:20:15)
      at routes/analysts.js:135:11

  console.warn
    Table check returned invalid result for earnings_estimates: { rows: [] }

      18 |     // Add safety check for undefined result
      19 |     if (!result || !result.rows || result.rows.length === 0) {
    > 20 |       console.warn(`Table check returned invalid result for ${tableName}:`, result);
         |               ^
      21 |       return false;
      22 |     }
      23 |

      at warn (routes/analysts.js:20:15)
      at routes/analysts.js:135:11

  console.warn
    Table check returned invalid result for earnings_estimates: { rows: [] }

      18 |     // Add safety check for undefined result
      19 |     if (!result || !result.rows || result.rows.length === 0) {
    > 20 |       console.warn(`Table check returned invalid result for ${tableName}:`, result);
         |               ^
      21 |       return false;
      22 |     }
      23 |

      at warn (routes/analysts.js:20:15)
      at routes/analysts.js:135:11

  console.warn
    Table check returned invalid result for earnings_estimates: { rows: [] }

      18 |     // Add safety check for undefined result
      19 |     if (!result || !result.rows || result.rows.length === 0) {
    > 20 |       console.warn(`Table check returned invalid result for ${tableName}:`, result);
         |               ^
      21 |       return false;
      22 |     }
      23 |

      at warn (routes/analysts.js:20:15)
      at routes/analysts.js:135:11

  console.warn
    Table check returned invalid result for earnings_estimates: { rows: [] }

      18 |     // Add safety check for undefined result
      19 |     if (!result || !result.rows || result.rows.length === 0) {
    > 20 |       console.warn(`Table check returned invalid result for ${tableName}:`, result);
         |               ^
      21 |       return false;
      22 |     }
      23 |

      at warn (routes/analysts.js:20:15)
      at routes/analysts.js:135:11

  console.warn
    Table check returned invalid result for earnings_estimates: { rows: [] }

      18 |     // Add safety check for undefined result
      19 |     if (!result || !result.rows || result.rows.length === 0) {
    > 20 |       console.warn(`Table check returned invalid result for ${tableName}:`, result);
         |               ^
      21 |       return false;
      22 |     }
      23 |

      at warn (routes/analysts.js:20:15)
      at routes/analysts.js:135:11

  console.warn
    Table check returned invalid result for earnings_estimates: { rows: [] }

      18 |     // Add safety check for undefined result
      19 |     if (!result || !result.rows || result.rows.length === 0) {
    > 20 |       console.warn(`Table check returned invalid result for ${tableName}:`, result);
         |               ^
      21 |       return false;
      22 |     }
      23 |

      at warn (routes/analysts.js:20:15)
      at routes/analysts.js:135:11

  console.warn
    Table check returned invalid result for earnings_estimates: { rows: [] }

      18 |     // Add safety check for undefined result
      19 |     if (!result || !result.rows || result.rows.length === 0) {
    > 20 |       console.warn(`Table check returned invalid result for ${tableName}:`, result);
         |               ^
      21 |       return false;
      22 |     }
      23 |

      at warn (routes/analysts.js:20:15)
      at routes/analysts.js:135:11

  console.warn
    Error checking table existence for analyst_upgrade_downgrade: Error: Test error
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/analysts.test.js:822:35)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      24 |     return result.rows[0].exists;
      25 |   } catch (error) {
    > 26 |     console.warn(`Error checking table existence for ${tableName}:`, error);
         |             ^
      27 |     return false;
      28 |   }
      29 | }

      at warn (routes/analysts.js:26:13)
      at routes/analysts.js:71:11

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/unit/routes/analysts.test.js
  Analysts Route - Comprehensive Unit Tests
    GET /api/analysts/
      ✓ should return API overview with all endpoints (11 ms)
    GET /api/analysts/upgrades
      ✓ should return analyst upgrades with proper structure (7 ms)
      ✓ should handle pagination parameters correctly (2 ms)
    GET /api/analysts/:ticker/earnings-estimates
      ✓ should return earnings estimates for valid ticker (2 ms)
      ✓ should handle case insensitive ticker symbols (2 ms)
    GET /api/analysts/:ticker/revenue-estimates
      ✕ should get revenue estimates for valid ticker (1 ms)
    GET /api/analysts/:ticker/earnings-history
      ✓ should get earnings history for valid ticker (5 ms)
    GET /api/analysts/:ticker/eps-revisions
      ✕ should get EPS revisions for valid ticker (2 ms)
      ✕ should handle database errors for EPS revisions (2 ms)
    GET /api/analysts/:ticker/eps-trend
      ✓ should get EPS trend for valid ticker (1 ms)
    GET /api/analysts/:ticker/growth-estimates
      ✕ should get growth estimates for valid ticker (5 ms)
    GET /api/analysts/:ticker/overview
      ✓ should get comprehensive analyst overview (1 ms)
      ✓ should handle database errors for overview (2 ms)
    GET /api/analysts/recent-actions
      ✕ should get recent analyst actions (1 ms)
      ✕ should handle no recent actions found (1 ms)
      ✕ should handle limit parameter (1 ms)
    GET /api/analysts/recommendations/:symbol
      ✕ should get analyst recommendations for valid symbol (3 ms)
      ✓ should handle no recommendations found (2 ms)
      ✓ should handle database errors for recommendations (6 ms)
    GET /api/analysts/targets/:symbol
      ✓ should get price targets (placeholder implementation) (2 ms)
    GET /api/analysts/downgrades
      ✕ should return analyst downgrades with default parameters (1 ms)
      ✕ should support filtering by symbol (1 ms)
      ✕ should support filtering by analyst firm (1 ms)
      ✕ should support filtering by severity (1 ms)
      ✕ should support minimum price impact filtering (1 ms)
      ✕ should support different timeframe options (1 ms)
      ✕ should handle errors gracefully (1 ms)
    GET /api/analysts/consensus/:symbol
      ✓ should get consensus analysis (placeholder implementation) (2 ms)
    Edge Cases and Error Handling
      ✓ should handle invalid ticker symbols gracefully (1 ms)
      ✕ should handle special characters in ticker symbols (2 ms)
      ✕ should handle very large page numbers (2 ms)
      ✓ should handle zero or negative page numbers (1 ms)
      ✓ should handle null database results gracefully (2 ms)
    Performance Testing
      ✓ should handle multiple concurrent requests (45 ms)
      ✕ should handle large dataset responses efficiently (2 ms)
    Response Format Validation
      ✓ should return consistent JSON response format (1 ms)
      ✓ should include timestamp in ISO format (1 ms)
      ✕ should maintain consistent error response format (2 ms)

  ● Analysts Route - Comprehensive Unit Tests › GET /api/analysts/:ticker/revenue-estimates › should get revenue estimates for valid ticker

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "er.revenue as actual", ["AAPL"]
    Received
           1
              "
          SELECT EXISTS (
            SELECT FROM information_schema.tables
            WHERE table_name = $1
          );
        ",
              Array [
            -   "AAPL",
            +   "analyst_upgrade_downgrade",
              ],
           2
              "
          SELECT EXISTS (
            SELECT FROM information_schema.tables
            WHERE table_name = $1
          );
        ",
              Array [
            -   "AAPL",
            +   "analyst_upgrade_downgrade",
              ],
           3
              "
          SELECT EXISTS (
            SELECT FROM information_schema.tables
            WHERE table_name = $1
          );
        ",
              Array [
            -   "AAPL",
            +   "earnings_estimates",
              ],

    Number of calls: 5

      145 |       expect(response.body.estimates).toHaveLength(1);
      146 |       expect(response.body.estimates[0].actual).toBe(119300000000);
    > 147 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      148 |         expect.stringContaining("er.revenue as actual"),
      149 |         ["AAPL"]
      150 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/analysts.test.js:147:25)

  ● Analysts Route - Comprehensive Unit Tests › GET /api/analysts/:ticker/eps-revisions › should get EPS revisions for valid ticker

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 0
    Received array:  []

      210 |
      211 |       expect(response.body.ticker).toBe("AAPL");
    > 212 |       expect(response.body.data).toHaveLength(1);
          |                                  ^
      213 |       expect(response.body.data[0].up_last30days).toBe(3);
      214 |       expect(response.body.metadata.count).toBe(1);
      215 |       expect(response.body.metadata.timestamp).toBeDefined();

      at Object.toHaveLength (tests/unit/routes/analysts.test.js:212:34)

  ● Analysts Route - Comprehensive Unit Tests › GET /api/analysts/:ticker/eps-revisions › should handle database errors for EPS revisions

    expected 500 "Internal Server Error", got 200 "OK"

      221 |       const response = await request(app)
      222 |         .get("/api/analysts/AAPL/eps-revisions")
    > 223 |         .expect(500);
          |          ^
      224 |
      225 |       expect(response.body.success).toBe(false);
      226 |       expect(response.body.error).toContain("Failed to fetch EPS revisions");

      at Object.expect (tests/unit/routes/analysts.test.js:223:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Analysts Route - Comprehensive Unit Tests › GET /api/analysts/:ticker/growth-estimates › should get growth estimates for valid ticker

    expect(received).toBe(expected) // Object.is equality

    Expected: "AAPL"
    Received: undefined

      277 |       expect(response.body.ticker).toBe("AAPL");
      278 |       expect(typeof response.body.data).toBe("object");
    > 279 |       expect(response.body.data.symbol).toBe("AAPL");
          |                                         ^
      280 |       expect(response.body.data.earnings_growth).toBeDefined();
      281 |       expect(response.body.data.eps_growth_from_financials).toBeDefined();
      282 |     });

      at Object.toBe (tests/unit/routes/analysts.test.js:279:41)

  ● Analysts Route - Comprehensive Unit Tests › GET /api/analysts/recent-actions › should get recent analyst actions

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 0
    Received array:  []

      385 |         .expect(200);
      386 |
    > 387 |       expect(response.body.data).toHaveLength(1);
          |                                  ^
      388 |       expect(response.body.data[0].action).toBe("Upgrade");
      389 |       expect(response.body.summary.date).toBe("2024-01-15");
      390 |       expect(response.body.summary.total_actions).toBe(1);

      at Object.toHaveLength (tests/unit/routes/analysts.test.js:387:34)

  ● Analysts Route - Comprehensive Unit Tests › GET /api/analysts/recent-actions › should handle no recent actions found

    expect(received).toBe(expected) // Object.is equality

    Expected: "No analyst actions found"
    Received: "Analyst data not yet loaded"

      401 |
      402 |       expect(response.body.data).toEqual([]);
    > 403 |       expect(response.body.message).toBe("No analyst actions found");
          |                                     ^
      404 |       expect(response.body.summary.total_actions).toBe(0);
      405 |     });
      406 |

      at Object.toBe (tests/unit/routes/analysts.test.js:403:37)

  ● Analysts Route - Comprehensive Unit Tests › GET /api/analysts/recent-actions › should handle limit parameter

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "LIMIT $2", ["2024-01-15", 5]
    Received
           1
              "
          SELECT EXISTS (
            SELECT FROM information_schema.tables
            WHERE table_name = $1
          );
        ",
              Array [
            -   "2024-01-15",
            -   5,
            +   "analyst_upgrade_downgrade",
              ],
           2
              "
          SELECT EXISTS (
            SELECT FROM information_schema.tables
            WHERE table_name = $1
          );
        ",
              Array [
            -   "2024-01-15",
            -   5,
            +   "analyst_upgrade_downgrade",
              ],
           3
              "
          SELECT EXISTS (
            SELECT FROM information_schema.tables
            WHERE table_name = $1
          );
        ",
              Array [
            -   "2024-01-15",
            -   5,
            +   "earnings_estimates",
              ],

    Number of calls: 20

      417 |         .expect(200);
      418 |
    > 419 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      420 |         expect.stringContaining("LIMIT $2"),
      421 |         ["2024-01-15", 5]
      422 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/analysts.test.js:419:25)

  ● Analysts Route - Comprehensive Unit Tests › GET /api/analysts/recommendations/:symbol › should get analyst recommendations for valid symbol

    expected 200 "OK", got 404 "Not Found"

      447 |       const response = await request(app)
      448 |         .get("/api/analysts/recommendations/AAPL")
    > 449 |         .expect(200);
          |          ^
      450 |
      451 |       expect(response.body.success).toBe(true);
      452 |       expect(response.body.data).toHaveLength(1);

      at Object.expect (tests/unit/routes/analysts.test.js:449:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Analysts Route - Comprehensive Unit Tests › GET /api/analysts/downgrades › should return analyst downgrades with default parameters

    expected 200 "OK", got 500 "Internal Server Error"

      503 |       const response = await request(app)
      504 |         .get("/api/analysts/downgrades")
    > 505 |         .expect(200);
          |          ^
      506 |
      507 |       expect(response.body).toMatchObject({
      508 |         success: true,

      at Object.expect (tests/unit/routes/analysts.test.js:505:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Analysts Route - Comprehensive Unit Tests › GET /api/analysts/downgrades › should support filtering by symbol

    expected 200 "OK", got 500 "Internal Server Error"

      584 |       const response = await request(app)
      585 |         .get("/api/analysts/downgrades?symbol=AAPL&limit=10")
    > 586 |         .expect(200);
          |          ^
      587 |
      588 |       expect(response.body.filters).toMatchObject({
      589 |         symbol: "AAPL",

      at Object.expect (tests/unit/routes/analysts.test.js:586:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Analysts Route - Comprehensive Unit Tests › GET /api/analysts/downgrades › should support filtering by analyst firm

    expected 200 "OK", got 500 "Internal Server Error"

      602 |       const response = await request(app)
      603 |         .get("/api/analysts/downgrades?analyst_firm=Goldman Sachs&timeframe=7d")
    > 604 |         .expect(200);
          |          ^
      605 |
      606 |       expect(response.body.filters).toMatchObject({
      607 |         analyst_firm: "Goldman Sachs",

      at Object.expect (tests/unit/routes/analysts.test.js:604:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Analysts Route - Comprehensive Unit Tests › GET /api/analysts/downgrades › should support filtering by severity

    expected 200 "OK", got 500 "Internal Server Error"

      620 |       const response = await request(app)
      621 |         .get("/api/analysts/downgrades?severity=severe&limit=20")
    > 622 |         .expect(200);
          |          ^
      623 |
      624 |       expect(response.body.filters).toMatchObject({
      625 |         severity: "severe",

      at Object.expect (tests/unit/routes/analysts.test.js:622:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Analysts Route - Comprehensive Unit Tests › GET /api/analysts/downgrades › should support minimum price impact filtering

    expected 200 "OK", got 500 "Internal Server Error"

      638 |       const response = await request(app)
      639 |         .get("/api/analysts/downgrades?min_price_impact=0.05")
    > 640 |         .expect(200);
          |          ^
      641 |
      642 |       expect(response.body.filters).toMatchObject({
      643 |         min_price_impact: 0.05,

      at Object.expect (tests/unit/routes/analysts.test.js:640:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Analysts Route - Comprehensive Unit Tests › GET /api/analysts/downgrades › should support different timeframe options

    expected 200 "OK", got 500 "Internal Server Error"

      660 |         const response = await request(app)
      661 |           .get(`/api/analysts/downgrades?timeframe=${timeframe}&limit=5`)
    > 662 |           .expect(200);
          |            ^
      663 |
      664 |         expect(response.body.filters.timeframe).toBe(timeframe);
      665 |         expect(response.body.data.analytics.timeframe_analyzed).toBe(timeframe);

      at Object.expect (tests/unit/routes/analysts.test.js:662:12)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Analysts Route - Comprehensive Unit Tests › GET /api/analysts/downgrades › should handle errors gracefully

    expected 200 "OK", got 500 "Internal Server Error"

      671 |       const response = await request(app)
      672 |         .get("/api/analysts/downgrades?limit=invalid")
    > 673 |         .expect(200); // Our implementation handles invalid limit gracefully
          |          ^
      674 |
      675 |       expect(response.body).toHaveProperty("success", true);
      676 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/analysts.test.js:673:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Analysts Route - Comprehensive Unit Tests › Edge Cases and Error Handling › should handle special characters in ticker symbols

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "UPPER($1)", ["BRK.B"]
    Received
           1
              "
          SELECT EXISTS (
            SELECT FROM information_schema.tables
            WHERE table_name = $1
          );
        ",
              Array [
            -   "BRK.B",
            +   "analyst_upgrade_downgrade",
              ],
           2
              "
          SELECT EXISTS (
            SELECT FROM information_schema.tables
            WHERE table_name = $1
          );
        ",
              Array [
            -   "BRK.B",
            +   "analyst_upgrade_downgrade",
              ],
           3
              "
          SELECT EXISTS (
            SELECT FROM information_schema.tables
            WHERE table_name = $1
          );
        ",
              Array [
            -   "BRK.B",
            +   "earnings_estimates",
              ],

    Number of calls: 25

      711 |         .expect(200);
      712 |
    > 713 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      714 |         expect.stringContaining("UPPER($1)"),
      715 |         ["BRK.B"]
      716 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/analysts.test.js:713:25)

  ● Analysts Route - Comprehensive Unit Tests › Edge Cases and Error Handling › should handle very large page numbers

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      731 |       expect(response.body.pagination?.page || 1).toBe(999999);
      732 |       expect(response.body.pagination.hasNext).toBe(false);
    > 733 |       expect(response.body.pagination.hasPrev).toBe(true);
          |                                                ^
      734 |     });
      735 |
      736 |     test("should handle zero or negative page numbers", async () => {

      at Object.toBe (tests/unit/routes/analysts.test.js:733:48)

  ● Analysts Route - Comprehensive Unit Tests › Performance Testing › should handle large dataset responses efficiently

    expect(received).toHaveLength(expected)

    Expected length: 1000
    Received length: 0
    Received array:  []

      795 |       const endTime = Date.now();
      796 |
    > 797 |       expect(response.body.estimates).toHaveLength(1000);
          |                                       ^
      798 |       expect(endTime - startTime).toBeLessThan(5000); // Should complete within 5 seconds
      799 |     });
      800 |   });

      at Object.toHaveLength (tests/unit/routes/analysts.test.js:797:39)

  ● Analysts Route - Comprehensive Unit Tests › Response Format Validation › should maintain consistent error response format

    expected 500 "Internal Server Error", got 200 "OK"

      824 |       const response = await request(app)
      825 |         .get("/api/analysts/upgrades")
    > 826 |         .expect(500);
          |          ^
      827 |
      828 |       expect(response.body.success).toBe(false);
      829 |       expect(response.body.error).toBeDefined();

      at Object.expect (tests/unit/routes/analysts.test.js:826:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

PASS tests/unit/utils/factorScoring.test.js
  FactorScoringEngine
    constructor
      ✓ should initialize with default factors
      ✓ should initialize with custom factors
    calculateCompositeScore
      ✓ should calculate composite score for valid stock data (1 ms)
      ✓ should calculate score with universe data for percentile ranking
      ✓ should handle missing data gracefully (1 ms)
      ✓ should handle null stock data
      ✓ should handle errors gracefully
      ✓ should handle calculation errors (1 ms)
    calculateCategoryScore
      ✓ should calculate category score with valid factors
      ✓ should return null with no valid factors
      ✓ should handle null and undefined values
      ✓ should handle NaN values
    calculatePercentileScore
      ✓ should calculate percentile score correctly (1 ms)
      ✓ should invert percentile for inverse factors
      ✓ should fall back to absolute score with insufficient data
      ✓ should handle errors gracefully
    calculateAbsoluteScore
      ✓ should score using predefined ranges (1 ms)
      ✓ should use linear score for unknown factors
      ✓ should return default score when no range matches
    getFactorScoringRanges
      ✓ should return ranges for known factors
      ✓ should return null for unknown factors
    linearScore
      ✓ should calculate sigmoid-based score (1 ms)
      ✓ should invert score when inverse is true
    scoreUniverse
      ✓ should score and rank universe (1 ms)
      ✓ should apply custom weights
      ✓ should handle empty universe
      ✓ should handle null universe
      ✓ should handle scoring errors (22 ms)
    applyCustomWeights
      ✓ should apply and normalize custom weights (1 ms)
      ✓ should ignore unknown categories
      ✓ should handle zero total weight
    getFactorExplanations
      ✓ should provide detailed factor explanations (1 ms)
      ✓ should skip null and undefined values
    interpretFactorScore
      ✓ should provide correct interpretations
    getFactorDefinitions
      ✓ should return current factor definitions (1 ms)
    createCustomProfile
      ✓ should create custom profile with metadata
      ✓ should handle empty description
    rankUniverse
      ✓ should rank universe with accessible properties (1 ms)
      ✓ should handle empty universe in rankUniverse
    calculateUniverseStats
      ✓ should calculate comprehensive statistics
      ✓ should skip factors with no valid data (1 ms)
    analyzeFactors
      ✓ should provide comprehensive factor analysis (2 ms)
    calculateFactorCorrelations
      ✓ should calculate correlation matrix (1 ms)
    calculateCorrelation
      ✓ should calculate perfect positive correlation
      ✓ should handle insufficient data
      ✓ should handle zero denominator
    identifyTopFactors
      ✓ should identify top performing factors (1 ms)
      ✓ should handle single value factors
    calculateVariance
      ✓ should calculate variance correctly (1 ms)
      ✓ should handle insufficient data
    normalizeFactors
      ✓ should normalize to 0-1 range
      ✓ should invert when inverse is true
      ✓ should handle edge cases (3 ms)
    calculateQuartiles
      ✓ should calculate quartiles for sufficient data
      ✓ should handle insufficient data (1 ms)
      ✓ should filter out invalid values
    screenByFactors
      ✓ should filter by composite score
      ✓ should filter by max composite score
      ✓ should filter by percentile
      ✓ should filter by category scores
      ✓ should filter out stocks without factor scores (1 ms)
    exported functions
      ✓ calculateCompositeScore should work
      ✓ scoreUniverse should work
      ✓ getFactorExplanations should work
      ✓ getFactorDefinitions should work
      ✓ createCustomProfile should work
      ✓ screenByFactors should work
      ✓ FACTOR_DEFINITIONS should be exported

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/integration/database/cross-service-transaction.integration.test.js
  Cross-Service Transaction Integration
    Service Coordination Patterns
      ✓ should coordinate portfolio and order service transactions (9 ms)
      ✕ should handle cross-service transaction failure and rollback (3 ms)
    Service Dependency Management
      ✓ should handle service dependency chain transactions (12 ms)
      ✓ should handle circular dependency resolution (9 ms)
    Distributed Transaction Patterns
      ✓ should implement saga pattern for long-running transactions (11 ms)

  ● Cross-Service Transaction Integration › Service Coordination Patterns › should handle cross-service transaction failure and rollback

    error: column "name" of relation "market_data" does not exist

      217 |           "INSERT INTO account_balance (user_id, balance) VALUES (1, 15000.00)"
      218 |         );
    > 219 |         await client.query(
          |         ^
      220 |           "INSERT INTO market_data (symbol, name, date, price) VALUES ('GOOGL', 'Alphabet Inc.', CURRENT_DATE, 2700.00)"
      221 |         );
      222 |       });

      at node_modules/pg/lib/client.js:545:17
      at tests/integration/database/cross-service-transaction.integration.test.js:219:9
      at transaction (utils/database.js:1418:20)
      at Object.<anonymous> (tests/integration/database/cross-service-transaction.integration.test.js:184:7)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

  console.log
    🚨 Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 5ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:23 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 2ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:24 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 7ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:24 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 3ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:24 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 3ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:24 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 2ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:24 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 3ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:24 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 2ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:24 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 2ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:24 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 2ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:24 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 2ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:24 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 2ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 4ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 2ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 2ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 1ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 3ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 4ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 3ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 2ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/health HTTP/1.1" 200 498 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/health HTTP/1.1" 200 498 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/health HTTP/1.1" 200 498 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/health HTTP/1.1" 200 498 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/health HTTP/1.1" 200 498 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/health HTTP/1.1" 200 498 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/health HTTP/1.1" 200 498 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/health HTTP/1.1" 200 498 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/health HTTP/1.1" 200 498 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/health HTTP/1.1" 200 498 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/health HTTP/1.1" 200 498 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/health HTTP/1.1" 200 498 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/health HTTP/1.1" 200 498 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/health HTTP/1.1" 200 498 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:26 +0000] "GET /api/health HTTP/1.1" 200 498 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 31ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:27 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 34ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:27 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 27ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:27 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 26ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:27 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 26ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:27 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 32ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:27 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 25ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:27 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 16ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:27 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 33ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:27 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 20ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:27 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 15ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:27 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 24ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:27 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 20ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:27 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 24ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:27 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 18ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:27 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:28 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 346 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:28 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 348 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:28 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 348 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:28 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 348 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:28 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 348 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:28 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 349 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:28 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 348 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:28 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 347 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:28 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 348 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:28 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 350 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:28 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 347 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:28 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 347 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:28 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 348 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:28 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 348 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:28 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 347 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:29 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:29 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:29 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:29 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:29 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:29 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:29 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:29 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:29 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:29 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:29 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:29 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 64ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 60ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 63ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 68ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 59ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 62ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 59ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 58ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 68ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 54ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 58ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 58ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 51ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 47ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 57ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 51ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 44ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 42ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 52ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 49ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 49ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 38ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 42ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 45ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 35ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 35ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 42ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 39ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 33ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 41ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 60ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 63ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 61ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 60ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 69ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 62ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 54ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 53ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 58ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 53ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 63ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 50ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 53ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 46ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 49ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 52ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 47ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 50ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 43ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 46ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 45ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 42ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 39ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 38ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 37ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:31 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 3ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:34 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:34 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:34 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:34 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:34 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:35 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:35 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:35 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:35 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:35 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:36 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:36 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:36 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:36 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:36 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 84ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 82ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 85ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 82ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 79ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 82ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 78ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 80ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 76ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 78ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 73ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 72ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 70ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 72ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 70ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 68ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 68ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 67ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 66ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 65ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 62ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 65ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 62ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 53ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 62ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 61ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 60ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 53ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 56ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 53ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 52ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 47ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 50ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 53ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 48ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 44ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 48ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 44ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 48ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 43ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:37 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 74 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio HTTP/1.1" 401 64 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

PASS tests/integration/errors/rate-limiting.integration.test.js (14.426 s)
  Rate Limiting Integration
    Basic Rate Limiting Scenarios
      ✓ should handle rapid requests without blocking normal usage (2051 ms)
      ✓ should return 429 for excessive rapid requests (144 ms)
    Per-Endpoint Rate Limiting
      ✓ should apply different rate limits to different endpoint types (3112 ms)
      ✓ should handle authenticated vs unauthenticated rate limits (2059 ms)
    Rate Limit Response Format
      ✓ should return proper 429 error response format (90 ms)
      ✓ should include helpful rate limit information in responses (3 ms)
    Rate Limit Recovery
      ✓ should allow requests after rate limit reset period (2093 ms)
      ✓ should handle gradual recovery from rate limiting (4011 ms)
    Rate Limiting Security
      ✓ should not expose internal rate limiting configuration (116 ms)
      ✓ should handle distributed rate limiting consistently (492 ms)
    Rate Limiting Integration with Error Handling
      ✓ should maintain rate limiting during other error scenarios (42 ms)
      ✓ should handle rate limiting with authentication errors (56 ms)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/unit/utils/alpacaService.test.js
  AlpacaService
    constructor
      ✓ should create AlpacaService instance with valid credentials
      ✓ should throw error when API key is missing (17 ms)
      ✓ should throw error when API secret is missing (1 ms)
      ✓ should default to paper trading
      ✓ should support live trading mode
    checkRateLimit
      ✓ should allow requests under rate limit
      ✓ should throw error when rate limit exceeded (1 ms)
      ✓ should remove old requests outside time window
    getAccount
      ✓ should fetch and format account data successfully (1 ms)
      ✓ should throw error when account fetch fails
    getPositions
      ✓ should fetch and format positions data successfully
      ✓ should handle empty positions
      ✓ should throw error when positions fetch fails
    getPortfolioHistory
      ✓ should fetch and format portfolio history successfully
      ✓ should handle empty portfolio history
      ✓ should filter out null equity values
    getActivities
      ✓ should fetch and format activities successfully
      ✓ should handle missing optional fields
    getMarketCalendar
      ✓ should fetch and format market calendar successfully
    getMarketStatus
      ✓ should fetch market status successfully
      ✓ should throw error when market status fetch fails (1 ms)
    validateCredentials
      ✓ should return valid true when credentials are valid
      ✓ should return valid false when credentials are invalid
    getAsset
      ✓ should fetch and format asset data successfully (1 ms)
    getSectorFromSymbol
      ✓ should classify tech stocks correctly
      ✓ should classify financial stocks correctly
      ✓ should classify healthcare stocks correctly (3 ms)
      ✓ should return Other for unknown stocks
    calculateBasicSectorAllocation
      ✓ should calculate sector allocation correctly
      ✓ should handle empty positions
    calculateBasicRiskMetrics
      ✓ should calculate risk metrics with sufficient history (1 ms)
      ✓ should return default values with insufficient history
    getLatestQuote
      ✓ should fetch and format quote data successfully
      ✓ should return null when no quote data available
      ✓ should return null on API error
    getLatestTrade
      ✓ should fetch and format trade data successfully (1 ms)
      ✓ should return null when no trade data available
      ✓ should return null on API error
    getBars
      ✓ should fetch and format bars data successfully
      ✓ should return empty array when no bars data available (1 ms)
      ✓ should return empty array on API error
      ✓ should use default options when none provided
    getMarketClock
      ✓ should fetch market clock successfully
      ✕ should return fallback data on API error
    createOrder
      ✓ should create market order successfully
      ✓ should create limit order successfully
      ✓ should validate required parameters (1 ms)
      ✓ should handle order creation failure
      ✓ should handle undefined order_type in response

  ● AlpacaService › getMarketClock › should return fallback data on API error

    API error

      765 |
      766 |     it("should return fallback data on API error", async () => {
    > 767 |       mockClient.getClock.mockRejectedValue(new Error("API error"));
          |                                             ^
      768 |
      769 |       const result = await alpacaService.getMarketClock();
      770 |

      at Object.<anonymous> (tests/unit/utils/alpacaService.test.js:767:45)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    GET /test - User: anonymous - IP: 127.0.0.1

      at log (middleware/auth.js:554:11)

  console.log
    GET /test - 200 - 2ms

      at Object.log (middleware/auth.js:562:13)

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

PASS tests/unit/middleware/auth.test.js
  Authentication Middleware
    authenticateToken
      ✓ should authenticate valid JWT token (1 ms)
      ✓ should reject request without authorization header (1 ms)
      ✓ should reject malformed authorization header
      ✓ should reject expired JWT tokens
      ✓ should reject invalid JWT tokens (1 ms)
      ✓ should handle missing JWT secret
      ✓ should extract token from Authorization header correctly
      ✓ should handle case-insensitive Bearer prefix
    token validation edge cases
      ✓ should handle whitespace in token (1 ms)
      ✓ should reject empty token
      ✓ should handle authorization header with extra data
    user context setup
      ✓ should populate req.user with decoded token data (1 ms)
      ✓ should preserve existing req properties
    error handling
      ✓ should handle unexpected JWT errors
      ✓ should handle missing JWT library (11 ms)
    security considerations
      ✓ should not log sensitive token data
      ✓ should handle malicious token attempts (1 ms)
    dev-bypass-token handling
      ✓ should allow dev-bypass-token in test environment
  RequireRole Middleware
    ✓ should require authentication first (1 ms)
    ✓ should allow user with required role
    ✓ should allow user with required group
    ✓ should deny user without required role or group
    ✓ should handle multiple required roles
    ✓ should handle missing groups array (1 ms)
  OptionalAuth Middleware
    ✓ should continue without auth when no token provided
    ✓ should authenticate when valid token provided
    ✓ should continue when token validation fails
    ✓ should handle malformed authorization header gracefully (1 ms)
  RequireApiKey Middleware
    ✓ should require authentication first (1 ms)
    ✓ should require API key for provider
    ✓ should proceed when API key is available
    ✓ should handle API key service errors (1 ms)
  ValidateSession Middleware
    ✓ should continue when no user is present
    ✓ should set expiration warning for tokens expiring soon
    ✓ should warn about long-lived tokens
    ✓ should continue on validation errors (1 ms)
  RateLimitByUser Middleware
    ✓ should allow requests within rate limit
    ✓ should use IP address when user is not authenticated
    ✓ should enforce rate limit
    ✓ should clean up old requests from sliding window (1 ms)
  LogApiAccess Middleware
    ✓ should log request and response
    ✓ should handle anonymous users
    ✓ should preserve original res.end functionality (3 ms)
    ✓ should calculate response time accurately

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.error
    Database query error: {
      error: 'column "cost_basis" of relation "portfolio_holdings" does not exist',
      query: '\n' +
        '        INSERT INTO portfolio_holdings (user_id, symbol, quantity, average_cost, current_price, mar...',
      params: '7 parameters',
      code: '42703'
    }

      1335 |     return result;
      1336 |   } catch (error) {
    > 1337 |     console.error("Database query error:", {
           |             ^
      1338 |       error: error.message,
      1339 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      1340 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1337:13)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/integration/utils/riskEngine.test.js
  Risk Engine Integration Tests
    Portfolio Risk Assessment with Database Integration
      ✕ should calculate portfolio-wide risk metrics from database
      ✕ should identify concentration risk
      ✕ should calculate sector allocation risk
    Historical Volatility Analysis
      ✕ should calculate volatility from historical price data
      ✕ should handle insufficient data gracefully
      ✕ should calculate beta relative to market
    Value at Risk (VaR) Calculations
      ✕ should calculate portfolio VaR using historical method
      ✕ should calculate VaR for different confidence levels
      ✕ should calculate parametric VaR
    Position Sizing and Risk Management
      ✕ should recommend optimal position sizes
      ✕ should validate position size against risk limits
    Correlation and Covariance Analysis
      ✕ should calculate correlation matrix for portfolio
      ✕ should identify highly correlated positions
    Stress Testing and Scenario Analysis
      ✕ should perform market crash stress test
      ✕ should perform custom scenario analysis
    Risk Monitoring and Alerts
      ✕ should monitor portfolio risk limits
      ✕ should generate risk alerts for violations
    Performance and Scalability
      ✕ should handle large portfolios efficiently
      ✕ should maintain accuracy with concurrent calculations
    Error Handling and Edge Cases
      ✕ should handle empty portfolio gracefully
      ✕ should handle database connection errors
      ✕ should handle invalid risk parameters

  ● Risk Engine Integration Tests › Portfolio Risk Assessment with Database Integration › should calculate portfolio-wide risk metrics from database

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1306 |     });
      1307 |
    > 1308 |     const result = await Promise.race([
           |                    ^
      1309 |       pool.query(text, params),
      1310 |       timeoutPromise,
      1311 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1308:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Portfolio Risk Assessment with Database Integration › should identify concentration risk

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1306 |     });
      1307 |
    > 1308 |     const result = await Promise.race([
           |                    ^
      1309 |       pool.query(text, params),
      1310 |       timeoutPromise,
      1311 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1308:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Portfolio Risk Assessment with Database Integration › should calculate sector allocation risk

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1306 |     });
      1307 |
    > 1308 |     const result = await Promise.race([
           |                    ^
      1309 |       pool.query(text, params),
      1310 |       timeoutPromise,
      1311 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1308:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Historical Volatility Analysis › should calculate volatility from historical price data

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1306 |     });
      1307 |
    > 1308 |     const result = await Promise.race([
           |                    ^
      1309 |       pool.query(text, params),
      1310 |       timeoutPromise,
      1311 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1308:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Historical Volatility Analysis › should handle insufficient data gracefully

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1306 |     });
      1307 |
    > 1308 |     const result = await Promise.race([
           |                    ^
      1309 |       pool.query(text, params),
      1310 |       timeoutPromise,
      1311 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1308:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Historical Volatility Analysis › should calculate beta relative to market

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1306 |     });
      1307 |
    > 1308 |     const result = await Promise.race([
           |                    ^
      1309 |       pool.query(text, params),
      1310 |       timeoutPromise,
      1311 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1308:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Value at Risk (VaR) Calculations › should calculate portfolio VaR using historical method

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1306 |     });
      1307 |
    > 1308 |     const result = await Promise.race([
           |                    ^
      1309 |       pool.query(text, params),
      1310 |       timeoutPromise,
      1311 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1308:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Value at Risk (VaR) Calculations › should calculate VaR for different confidence levels

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1306 |     });
      1307 |
    > 1308 |     const result = await Promise.race([
           |                    ^
      1309 |       pool.query(text, params),
      1310 |       timeoutPromise,
      1311 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1308:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Value at Risk (VaR) Calculations › should calculate parametric VaR

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1306 |     });
      1307 |
    > 1308 |     const result = await Promise.race([
           |                    ^
      1309 |       pool.query(text, params),
      1310 |       timeoutPromise,
      1311 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1308:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Position Sizing and Risk Management › should recommend optimal position sizes

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1306 |     });
      1307 |
    > 1308 |     const result = await Promise.race([
           |                    ^
      1309 |       pool.query(text, params),
      1310 |       timeoutPromise,
      1311 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1308:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Position Sizing and Risk Management › should validate position size against risk limits

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1306 |     });
      1307 |
    > 1308 |     const result = await Promise.race([
           |                    ^
      1309 |       pool.query(text, params),
      1310 |       timeoutPromise,
      1311 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1308:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Correlation and Covariance Analysis › should calculate correlation matrix for portfolio

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1306 |     });
      1307 |
    > 1308 |     const result = await Promise.race([
           |                    ^
      1309 |       pool.query(text, params),
      1310 |       timeoutPromise,
      1311 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1308:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Correlation and Covariance Analysis › should identify highly correlated positions

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1306 |     });
      1307 |
    > 1308 |     const result = await Promise.race([
           |                    ^
      1309 |       pool.query(text, params),
      1310 |       timeoutPromise,
      1311 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1308:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Stress Testing and Scenario Analysis › should perform market crash stress test

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1306 |     });
      1307 |
    > 1308 |     const result = await Promise.race([
           |                    ^
      1309 |       pool.query(text, params),
      1310 |       timeoutPromise,
      1311 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1308:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Stress Testing and Scenario Analysis › should perform custom scenario analysis

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1306 |     });
      1307 |
    > 1308 |     const result = await Promise.race([
           |                    ^
      1309 |       pool.query(text, params),
      1310 |       timeoutPromise,
      1311 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1308:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Risk Monitoring and Alerts › should monitor portfolio risk limits

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1306 |     });
      1307 |
    > 1308 |     const result = await Promise.race([
           |                    ^
      1309 |       pool.query(text, params),
      1310 |       timeoutPromise,
      1311 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1308:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Risk Monitoring and Alerts › should generate risk alerts for violations

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1306 |     });
      1307 |
    > 1308 |     const result = await Promise.race([
           |                    ^
      1309 |       pool.query(text, params),
      1310 |       timeoutPromise,
      1311 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1308:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Performance and Scalability › should handle large portfolios efficiently

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1306 |     });
      1307 |
    > 1308 |     const result = await Promise.race([
           |                    ^
      1309 |       pool.query(text, params),
      1310 |       timeoutPromise,
      1311 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1308:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Performance and Scalability › should maintain accuracy with concurrent calculations

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1306 |     });
      1307 |
    > 1308 |     const result = await Promise.race([
           |                    ^
      1309 |       pool.query(text, params),
      1310 |       timeoutPromise,
      1311 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1308:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Error Handling and Edge Cases › should handle empty portfolio gracefully

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1306 |     });
      1307 |
    > 1308 |     const result = await Promise.race([
           |                    ^
      1309 |       pool.query(text, params),
      1310 |       timeoutPromise,
      1311 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1308:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Error Handling and Edge Cases › should handle database connection errors

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1306 |     });
      1307 |
    > 1308 |     const result = await Promise.race([
           |                    ^
      1309 |       pool.query(text, params),
      1310 |       timeoutPromise,
      1311 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1308:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Error Handling and Edge Cases › should handle invalid risk parameters

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1306 |     });
      1307 |
    > 1308 |     const result = await Promise.race([
           |                    ^
      1309 |       pool.query(text, params),
      1310 |       timeoutPromise,
      1311 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1308:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

PASS tests/unit/services/aiStrategyGenerator.test.js
  AIStrategyGenerator Service
    Constructor and Initialization
      ✓ should initialize with default configuration (1 ms)
      ✓ should have predefined asset type patterns (1 ms)
      ✓ should have strategy templates (1 ms)
    generateCorrelationId
      ✓ should generate unique correlation IDs
    generateFromNaturalLanguage
      ✓ should generate strategy with AI when enabled (1 ms)
      ✓ should fallback to templates when AI fails (1 ms)
      ✓ should handle errors gracefully
    generateWithClaude
      ✓ should attempt Claude generation but fail due to configuration
      ✓ should handle Claude configuration errors
    generateWithTemplates
      ✓ should generate momentum strategy from template (2 ms)
      ✓ should generate mean reversion strategy from template (1 ms)
      ✓ should generate breakout strategy from template (7 ms)
      ✓ should default to momentum strategy for unrecognized prompts (1 ms)
      ✓ should handle empty symbols gracefully (1 ms)
    parseIntent
      ✓ should parse buy intent correctly (1 ms)
      ✓ should parse sell intent correctly
      ✓ should parse strategy types correctly (1 ms)
      ✓ should identify indicators from prompt (1 ms)
      ✓ should identify timeframes from prompt
      ✓ should default to unknown action for ambiguous prompts (1 ms)
    generateStrategyCode
      ✓ should generate code for momentum strategy (1 ms)
      ✓ should generate code for mean reversion strategy
      ✓ should generate code for breakout strategy
      ✓ should handle multiple symbols in generated code (1 ms)
      ✓ should include proper error handling in generated code (1 ms)
    validateStrategy
      ✓ should validate complete strategy successfully
      ✓ should identify missing required fields
      ✓ should validate code syntax (1 ms)
      ✓ should validate parameter types
      ✓ should provide validation warnings for potential issues
    Template Methods
      ✓ should return momentum template code (1 ms)
      ✓ should return mean reversion template code (1 ms)
      ✓ should return breakout template code (1 ms)
    AI Helper Methods
      ✓ should build system prompt
      ✓ should build user prompt (1 ms)
      ✓ should generate AI metadata (1 ms)
      ✓ should generate AI visual config
    Error Handling and Edge Cases
      ✓ should handle null or undefined prompts (1 ms)
      ✓ should handle very long prompts (1 ms)
      ✓ should handle special characters in prompts (1 ms)
      ✓ should handle empty symbols array
      ✓ should handle very large symbols array
      ✓ should handle invalid options gracefully (1 ms)
      ✓ should maintain correlation ID consistency
      ✓ should handle concurrent strategy generation requests (5 ms)
    Integration with Logger
      ✓ should log strategy generation attempts (1 ms)
      ✓ should log errors appropriately (1 ms)
      ✓ should log warnings for fallback scenarios

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

  console.log
    🚨 Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

  console.error
    Error: SyntaxError: Unexpected token 'j', "{"incomplete": json" is not valid JSON
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{"incomplete": json',
      type: 'entity.parse.failed'
    }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
  console.error
    Error: SyntaxError: Expected property name or '}' in JSON at position 1
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{invalid: "json"',
      type: 'entity.parse.failed'
    }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
  console.error
    Error: SyntaxError: Unexpected token '}', ..."omplete": }" is not valid JSON
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{"nested": {"incomplete": }',
      type: 'entity.parse.failed'
    }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
  console.error
    Error: SyntaxError: Unexpected non-whitespace character after JSON at position 18
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{"valid": "start"}{invalid continuation}',
      type: 'entity.parse.failed'
    }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
  console.error
    Error: SyntaxError: Unexpected non-whitespace character after JSON at position 27
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{"escaped": "quote\\"break"}malformed',
      type: 'entity.parse.failed'
    }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/health HTTP/1.1" 200 498 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio/../../../etc/passwd HTTP/1.1" 404 139 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio/%2e%2e%2f%2e%2e%2fetc%2fpasswd HTTP/1.1" 404 150 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/portfolio/ HTTP/1.1" 200 577 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/calendar/earnings?param=value% HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "GET /api/calendar/earnings?param=value%ZZ HTTP/1.1" 200 259 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "POST /api/portfolio/analyze HTTP/1.1" 413 124 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 347 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 345 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 349 "-" "-"
  console.error
    Error: SyntaxError: Unexpected token 'n', "not json content" is not valid JSON
        at JSON.parse (<anonymous>)
        at createStrictSyntaxError (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:169:10)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:86:15)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: 'not json content',
      type: 'entity.parse.failed'
    }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 346 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:38 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 349 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 348 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 347 "-" "-"
  console.error
    Error: UnsupportedMediaTypeError: unsupported charset "ISO-8859-1"
        at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:130:12)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at logger (/home/stocks/algo/webapp/lambda/node_modules/morgan/index.js:144:5)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at cors (/home/stocks/algo/webapp/lambda/node_modules/cors/lib/index.js:188:7)
        at /home/stocks/algo/webapp/lambda/node_modules/cors/lib/index.js:224:17
        at originCallback (/home/stocks/algo/webapp/lambda/node_modules/cors/lib/index.js:214:15)
        at /home/stocks/algo/webapp/lambda/node_modules/cors/lib/index.js:219:13
        at optionsCallback (/home/stocks/algo/webapp/lambda/node_modules/cors/lib/index.js:199:9)
        at corsMiddleware (/home/stocks/algo/webapp/lambda/node_modules/cors/lib/index.js:204:7)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:537:6)
        at xXssProtectionMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:315:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at xPoweredByMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:308:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at xPermittedCrossDomainPoliciesMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:301:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at xFrameOptionsMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:285:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at xDownloadOptionsMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:265:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at xDnsPrefetchControlMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:258:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at xContentTypeOptionsMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:250:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at strictTransportSecurityMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:243:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at referrerPolicyMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:211:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at originAgentClusterMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:186:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at crossOriginResourcePolicyMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:179:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at crossOriginOpenerPolicyMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:163:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at contentSecurityPolicyMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:128:4)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at helmetMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:539:6)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
        at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
        at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
        at Server.emit (node:events:524:28)
        at parserOnIncoming (node:_http_server:1141:12)
        at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17) {
      charset: 'iso-8859-1',
      type: 'charset.unsupported'
    }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:130:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at logger (node_modules/morgan/index.js:144:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at cors (node_modules/cors/lib/index.js:188:7)
      at node_modules/cors/lib/index.js:224:17
      at originCallback (node_modules/cors/lib/index.js:214:15)
      at node_modules/cors/lib/index.js:219:13
      at optionsCallback (node_modules/cors/lib/index.js:199:9)
      at corsMiddleware (node_modules/cors/lib/index.js:204:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at internalNext (node_modules/helmet/index.cjs:537:6)
      at xXssProtectionMiddleware (node_modules/helmet/index.cjs:315:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPoweredByMiddleware (node_modules/helmet/index.cjs:308:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPermittedCrossDomainPoliciesMiddleware (node_modules/helmet/index.cjs:301:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xFrameOptionsMiddleware (node_modules/helmet/index.cjs:285:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDownloadOptionsMiddleware (node_modules/helmet/index.cjs:265:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDnsPrefetchControlMiddleware (node_modules/helmet/index.cjs:258:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xContentTypeOptionsMiddleware (node_modules/helmet/index.cjs:250:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at strictTransportSecurityMiddleware (node_modules/helmet/index.cjs:243:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at referrerPolicyMiddleware (node_modules/helmet/index.cjs:211:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at originAgentClusterMiddleware (node_modules/helmet/index.cjs:186:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginResourcePolicyMiddleware (node_modules/helmet/index.cjs:179:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginOpenerPolicyMiddleware (node_modules/helmet/index.cjs:163:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at contentSecurityPolicyMiddleware (node_modules/helmet/index.cjs:128:4)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at helmetMiddleware (node_modules/helmet/index.cjs:539:6)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "POST /api/portfolio/analyze HTTP/1.1" 415 101 "-" "-"
  console.error
    Error: SyntaxError: Expected ',' or '}' after property value in JSON at position 30
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{"malicious": "<script>alert("xss")</script>"}',
      type: 'entity.parse.failed'
    }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
  console.error
    Error: SyntaxError: Unterminated string in JSON at position 20
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{"unclosed": "string',
      type: 'entity.parse.failed'
    }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
  console.error
    Error: SyntaxError: Unexpected token 'u', ..."nction": function() "... is not valid JSON
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{"function": function() {}}',
      type: 'entity.parse.failed'
    }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
  console.error
    Error: SyntaxError: Unexpected token 'u', ..."defined": undefined}" is not valid JSON
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{"undefined": undefined}',
      type: 'entity.parse.failed'
    }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
  console.error
    Error: SyntaxError: Unexpected end of JSON input
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{"invalid": ',
      type: 'entity.parse.failed'
    }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.error
    Error: SyntaxError: Unexpected end of JSON input
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{"invalid": ',
      type: 'entity.parse.failed'
    }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/health HTTP/1.1" 200 498 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/health HTTP/1.1" 200 498 "-" "-"
  console.log
    Market overview completed in 10ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/integration/errors/malformed-request.integration.test.js
  Malformed Request Integration
    JSON Parsing Error Scenarios
      ✕ should handle malformed JSON gracefully (27 ms)
      ✕ should handle JSON with dangerous characters (2 ms)
      ✕ should handle deeply nested JSON structures (2 ms)
    HTTP Header Malformation
      ✕ should handle malformed authorization headers
      ✕ should handle malformed content-type headers
      ✕ should handle custom header injection attempts (4 ms)
    URL and Path Malformation
      ✕ should handle malformed URLs and paths (12 ms)
      ✕ should handle malformed query parameters (7 ms)
    Request Body Malformation
      ✓ should handle oversized request bodies (5 ms)
      ✓ should handle binary data in JSON fields (6 ms)
      ✕ should handle mismatched content-type and body (2 ms)
    Character Encoding Issues
      ✓ should handle invalid UTF-8 sequences (8 ms)
      ✕ should handle different character encodings (6 ms)
    Security and Sanitization
      ✓ should sanitize error messages containing malformed input (8 ms)
      ✓ should not expose stack traces in malformed request errors (10 ms)
    Error Response Consistency
      ✕ should maintain consistent error format for all malformed requests (3 ms)
      ✓ should handle malformed requests without service disruption (17 ms)

  ● Malformed Request Integration › JSON Parsing Error Scenarios › should handle malformed JSON gracefully

    expect(received).not.toContain(expected) // indexOf

    Expected substring: not ""
    Received string:        "Invalid symbols array"

      71 |         // Error should not expose the malformed content
      72 |         if (response.body?.error) {
    > 73 |           expect(response.body.error).not.toContain(test.body);
         |                                           ^
      74 |         }
      75 |       }
      76 |     });

      at Object.toContain (tests/integration/errors/malformed-request.integration.test.js:73:43)

  ● Malformed Request Integration › JSON Parsing Error Scenarios › should handle JSON with dangerous characters

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [200, 404]

      114 |
      115 |         // Should handle safely
    > 116 |         expect([200, 404]).toContain(response.status);
          |                            ^
      117 |
      118 |         if (response.status >= 400) {
      119 |           expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/errors/malformed-request.integration.test.js:116:28)

  ● Malformed Request Integration › JSON Parsing Error Scenarios › should handle deeply nested JSON structures

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [200, 404]

      146 |
      147 |       // Should handle deep nesting gracefully
    > 148 |       expect([200, 404]).toContain(response.status);
          |                          ^
      149 |
      150 |       if (response.status >= 400) {
      151 |         expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/errors/malformed-request.integration.test.js:148:26)

  ● Malformed Request Integration › HTTP Header Malformation › should handle malformed authorization headers

    TypeError: Invalid character in header content ["Authorization"]

      at Test.setHeader [as request] (node_modules/superagent/src/node/index.js:851:39)
      at Test.request [as end] (node_modules/superagent/src/node/index.js:986:8)
      at Test.end (node_modules/supertest/lib/test.js:118:11)
      at end (node_modules/superagent/src/request-base.js:285:12)
      at Test.Object.<anonymous>.RequestBase.then (node_modules/superagent/src/request-base.js:267:31)

  ● Malformed Request Integration › HTTP Header Malformation › should handle malformed content-type headers

    TypeError: Invalid character in header content ["Content-Type"]

      at Test.setHeader [as request] (node_modules/superagent/src/node/index.js:851:39)
      at Test.request [as end] (node_modules/superagent/src/node/index.js:986:8)
      at Test.end (node_modules/supertest/lib/test.js:118:11)
      at end (node_modules/superagent/src/request-base.js:285:12)
      at Test.Object.<anonymous>.RequestBase.then (node_modules/superagent/src/request-base.js:267:31)

  ● Malformed Request Integration › HTTP Header Malformation › should handle custom header injection attempts

    expect(received).toMatch(expected)

    Expected pattern: /invalid|malformed|header/i
    Received string:  "expect(received).not.toMatch(expected)·
    Matcher error: received value must be a string·
    Received has value: undefined"

      283 |         } catch (error) {
      284 |           // Some malformed headers might be rejected at HTTP level
    > 285 |           expect(error.message).toMatch(/invalid|malformed|header/i);
          |                                 ^
      286 |         }
      287 |       }
      288 |     });

      at Object.toMatch (tests/integration/errors/malformed-request.integration.test.js:285:33)

  ● Malformed Request Integration › URL and Path Malformation › should handle malformed URLs and paths

    expect(received).toMatch(expected)

    Expected pattern: /invalid|malformed|url/i
    Received string:  "expect(received).toContain(expected) // indexOf·
    Expected value: 200
    Received array: [400, 404, 500]"

      336 |         } catch (error) {
      337 |           // Some malformed URLs might be rejected at HTTP level
    > 338 |           expect(error.message).toMatch(/invalid|malformed|url/i);
          |                                 ^
      339 |         }
      340 |       }
      341 |     });

      at Object.toMatch (tests/integration/errors/malformed-request.integration.test.js:338:33)

  ● Malformed Request Integration › URL and Path Malformation › should handle malformed query parameters

    TypeError: Request path contains unescaped characters

      at Test.request (node_modules/superagent/src/node/index.js:808:22)
      at Test.request [as end] (node_modules/superagent/src/node/index.js:986:8)
      at Test.end (node_modules/supertest/lib/test.js:118:11)
      at end (node_modules/superagent/src/request-base.js:285:12)
      at Test.Object.<anonymous>.RequestBase.then (node_modules/superagent/src/request-base.js:267:31)

  ● Malformed Request Integration › Request Body Malformation › should handle mismatched content-type and body

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [200, 404]

      472 |           .send(test.body);
      473 |
    > 474 |         expect([200, 404]).toContain(response.status);
          |                            ^
      475 |
      476 |         if (response.status >= 400) {
      477 |           expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/errors/malformed-request.integration.test.js:474:28)

  ● Malformed Request Integration › Character Encoding Issues › should handle different character encodings

    expect(received).toContain(expected) // indexOf

    Expected value: 415
    Received array: [200, 404]

      538 |           .send(testBody);
      539 |
    > 540 |         expect([200, 404]).toContain(response.status);
          |                            ^
      541 |
      542 |         if (response.status >= 400) {
      543 |           expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/errors/malformed-request.integration.test.js:540:28)

  ● Malformed Request Integration › Error Response Consistency › should maintain consistent error format for all malformed requests

    TypeError: Invalid character in header content ["Authorization"]

      at Test.setHeader [as request] (node_modules/superagent/src/node/index.js:851:39)
      at Test.request [as end] (node_modules/superagent/src/node/index.js:986:8)
      at Test.end (node_modules/supertest/lib/test.js:118:11)
      at end (node_modules/superagent/src/request-base.js:285:12)
      at Test.Object.<anonymous>.RequestBase.then (node_modules/superagent/src/request-base.js:267:31)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

PASS tests/unit/utils/errorTracker.test.js
  ErrorTracker
    constructor and initialization
      ✓ should initialize with default values
    categorizeError
      ✓ should categorize database errors (8 ms)
      ✓ should categorize authentication errors (1 ms)
      ✓ should categorize API errors (1 ms)
      ✓ should categorize validation errors
      ✓ should categorize circuit breaker errors (6 ms)
      ✓ should default to general category
    calculateSeverity
      ✓ should assign critical severity correctly
      ✓ should assign high severity correctly
      ✓ should assign medium severity correctly
      ✓ should default to low severity (1 ms)
    trackError
      ✓ should track error with full context
      ✓ should track error with minimal context (1 ms)
      ✓ should handle errors without stack trace
    updateErrorCounts
      ✓ should track error counts by minute
      ✓ should clean up old error counts
    addToHistory
      ✓ should add errors to history (1 ms)
      ✓ should maintain maximum history size
    checkAlertThresholds
      ✓ should trigger alert when threshold is exceeded
      ✓ should not trigger alert when below threshold
      ✓ should use general threshold for unknown categories (1 ms)
      ✓ should handle missing error count for category (branch coverage)
    generateErrorId
      ✓ should generate unique error IDs
      ✓ should handle short category names
      ✓ should truncate long category names
    getErrorStats
      ✓ should return comprehensive error statistics (1 ms)
      ✓ should handle empty error history
      ✓ should exclude error counts from different minutes (branch coverage)
    getRecentErrors
      ✓ should return recent errors sorted by timestamp desc (1 ms)
      ✓ should default to 50 errors when no limit specified
      ✓ should handle limit larger than available errors
      ✓ should return empty array when no errors exist
    clearHistory
      ✓ should clear all error history and counts
    middleware
      ✓ should track error and add context from request (1 ms)
      ✓ should handle request without correlation ID
      ✓ should handle request without user (1 ms)
      ✓ should handle request without route
      ✓ should handle minimal request object

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

  console.log
    🚨 Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📋 Portfolio positions requested for user: dev-user-bypass

      at log (routes/portfolio.js:298:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 710 "-" "-"
  console.log
    Calendar events endpoint called with params: {}

      at log (routes/calendar.js:372:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/calendar/events HTTP/1.1" 200 223 "-" "-"
  console.log
    📊 Backtest results requested - ID: all, limit: 50

      at log (routes/backtest.js:821:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/backtest/results HTTP/1.1" 200 24238 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 381 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "POST /api/portfolio/analyze HTTP/1.1" 413 124 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📊 Portfolio summary requested for user: dev-user-bypass

      at log (routes/portfolio.js:191:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/portfolio/summary HTTP/1.1" 200 664 "-" "-"
  console.error
    Database query error: {
      error: 'column "date" does not exist',
      query: '\n' +
        '      SELECT\n' +
        '        symbol,\n' +
        '        symbol as company_name,\n' +
        '        quarter as report_date,\n' +
        '      ...',
      params: '2 parameters',
      code: '42703'
    }

      1335 |     return result;
      1336 |   } catch (error) {
    > 1337 |     console.error("Database query error:", {
           |             ^
      1338 |       error: error.message,
      1339 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      1340 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1337:13)
          at async Promise.all (index 0)
      at routes/calendar.js:792:57

  console.error
    Error fetching earnings metrics: error: column "date" does not exist
        at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at query (/home/stocks/algo/webapp/lambda/utils/database.js:1308:20)
        at async Promise.all (index 0)
        at /home/stocks/algo/webapp/lambda/routes/calendar.js:792:57 {
      length: 105,
      severity: 'ERROR',
      code: '42703',
      detail: undefined,
      hint: undefined,
      position: '880',
      internalPosition: undefined,
      internalQuery: undefined,
      where: undefined,
      schema: undefined,
      table: undefined,
      column: undefined,
      dataType: undefined,
      constraint: undefined,
      file: 'parse_relation.c',
      line: '3722',
      routine: 'errorMissingColumn'
    }

      836 |     });
      837 |   } catch (error) {
    > 838 |     console.error("Error fetching earnings metrics:", error);
          |             ^
      839 |     res.status(500).json({
      840 |       success: false,
      841 |       error: "Failed to fetch earnings metrics",

      at error (routes/calendar.js:838:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/calendar/earnings-metrics HTTP/1.1" 500 176 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/analysis HTTP/1.1" 404 125 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 3ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/health HTTP/1.1" 200 498 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📊 Portfolio analysis requested for user: dev-user-bypass, period: 1y

      at log (routes/portfolio.js:618:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/portfolio/analysis HTTP/1.1" 200 1277 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/detailed-analysis HTTP/1.1" 404 134 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/health HTTP/1.1" 200 498 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 112ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 107ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 112ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 107ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 99ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 103ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 106ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 96ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 103ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 110ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 95ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 103ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 102ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 98ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 94ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 101ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 97ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 83ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 92ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 87ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 86ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 90ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 92ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 78ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 86ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 74ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 81ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 87ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 85ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 72ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 81ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 76ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 81ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 72ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 89ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 71ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 70ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 76ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 68ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 63ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 68ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 72ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 66ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 61ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 70ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 60ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 63ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 67ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 57ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 59ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:39 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:40 +0000] "GET /api/health HTTP/1.1" 200 498 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:40 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 355 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📊 Portfolio summary requested for user: dev-user-bypass

      at log (routes/portfolio.js:191:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:40 +0000] "GET /api/portfolio/summary HTTP/1.1" 200 664 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📋 Portfolio positions requested for user: dev-user-bypass

      at log (routes/portfolio.js:298:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:40 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 710 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    Portfolio performance endpoint called for user: dev-user-bypass, timeframe: 1y

      at log (routes/portfolio.js:1196:13)

  console.log
    📊 Retrieved 0 performance data points

      at log (routes/portfolio.js:1224:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:40 +0000] "GET /api/portfolio/performance HTTP/1.1" 200 451 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:40 +0000] "GET /api/health HTTP/1.1" 200 498 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📋 Portfolio positions requested for user: dev-user-bypass

      at log (routes/portfolio.js:298:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:40 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 710 "-" "-"
  console.log
    Calendar events endpoint called with params: {}

      at log (routes/calendar.js:372:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:40 +0000] "GET /api/calendar/events HTTP/1.1" 200 223 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 6ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:40 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:40 +0000] "GET /api/portfolio/complex-analysis HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:40 +0000] "GET /api/calendar/complex-metrics HTTP/1.1" 404 134 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:40 +0000] "GET /api/market/heavy-computation HTTP/1.1" 404 134 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📋 Portfolio positions requested for user: dev-user-bypass

      at log (routes/portfolio.js:298:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:40 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 710 "-" "-"
  console.log
    Calendar events endpoint called with params: {}

      at log (routes/calendar.js:372:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:40 +0000] "GET /api/calendar/events HTTP/1.1" 200 223 "-" "-"
  console.log
    📊 Backtest results requested - ID: all, limit: 50

      at log (routes/backtest.js:821:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:40 +0000] "GET /api/backtest/results HTTP/1.1" 200 24238 "-" "-"
  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

PASS tests/integration/errors/5xx-server-errors.integration.test.js
  5xx Server Error Scenarios Integration
    500 Internal Server Error Scenarios
      ✓ should handle database connection failures gracefully (23 ms)
      ✓ should handle application errors with proper formatting (4 ms)
      ✓ should handle memory or resource exhaustion (2 ms)
      ✓ should maintain response format during server errors (39 ms)
    502 Bad Gateway Scenarios
      ✓ should handle upstream service failures (12 ms)
    503 Service Unavailable Scenarios
      ✓ should handle service maintenance mode (7 ms)
      ✓ should handle database pool exhaustion (72 ms)
    504 Gateway Timeout Scenarios
      ✓ should handle slow upstream responses (8 ms)
    Server Error Recovery and Resilience
      ✓ should recover gracefully from temporary failures (1162 ms)
      ✓ should maintain error logging during server errors (2 ms)
      ✓ should handle cascading failures appropriately (28 ms)
    Server Error Security
      ✓ should not expose sensitive information in server errors (10 ms)
      ✓ should sanitize error messages from external sources (9 ms)
    Cross-Route 5xx Error Consistency
      ✓ should maintain consistent 5xx error format across all routes (5 ms)
      ✓ should provide consistent error codes across similar failures (13 ms)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    {"timestamp":"2025-09-26T12:00:41.233Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Operation not found","correlationId":"cbaae8d1","operationId":"non_existent_timer","severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/integration/utils/performanceMonitor.test.js
  Performance Monitor Integration Tests
    Performance Timing
      ✓ should measure operation duration accurately (1 ms)
      ✕ should handle multiple concurrent timers (1 ms)
      ✓ should handle invalid timer IDs gracefully (6 ms)
    Metrics Recording
      ✕ should record custom metrics (1 ms)
      ✓ should record metrics with different categories
      ✕ should handle metrics with metadata
    Performance Analytics
      ✕ should calculate average response times (1 ms)
      ✓ should handle empty metrics gracefully (1 ms)
      ✓ should calculate metrics for different time ranges
    System Health Monitoring
      ✕ should collect system health metrics
      ✕ should include database health in system metrics (1 ms)
      ✕ should detect system health status accurately
    Anomaly Detection
      ✓ should detect performance anomalies (1 ms)
      ✓ should handle normal data without false positives
      ✕ should detect trend-based anomalies
    Performance Reporting
      ✕ should generate comprehensive performance report (1 ms)
      ✕ should include performance recommendations
      ✓ should filter report by categories (1 ms)
    Performance Benchmarking
      ✕ should benchmark database operations (4 ms)
      ✕ should benchmark API response times (271 ms)
      ✕ should compare performance across time periods (1 ms)
    Error Handling and Edge Cases
      ✓ should handle database connection issues gracefully (1 ms)
      ✓ should handle invalid time ranges
      ✕ should handle very large metric values
      ✕ should handle concurrent metric recording

  ● Performance Monitor Integration Tests › Performance Timing › should handle multiple concurrent timers

    expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      169 |       const duration3 = endTimer(timer3);
      170 |
    > 171 |       expect(duration1).toBeGreaterThan(0);
          |                         ^
      172 |       expect(duration2).toBeGreaterThan(0);
      173 |       expect(duration3).toBeGreaterThan(0);
      174 |     });

      at Object.toBeGreaterThan (tests/integration/utils/performanceMonitor.test.js:171:25)

  ● Performance Monitor Integration Tests › Metrics Recording › should record custom metrics

    expect(received).toContain(expected) // indexOf

    Expected value: 42.5
    Received array: [114.51674914259016, 930.2067427739471]

      192 |
      193 |       const values = metrics.map((m) => m.value);
    > 194 |       expect(values).toContain(42.5);
          |                      ^
      195 |       expect(values).toContain(45.0);
      196 |       expect(values).toContain(40.0);
      197 |     });

      at Object.toContain (tests/integration/utils/performanceMonitor.test.js:194:22)

  ● Performance Monitor Integration Tests › Metrics Recording › should handle metrics with metadata

    expect(received).toBeDefined()

    Received: undefined

      239 |       );
      240 |
    > 241 |       expect(metric).toBeDefined();
          |                      ^
      242 |       expect(metric.metadata.endpoint).toBe("/api/test");
      243 |       expect(metric.metadata.method).toBe("GET");
      244 |     });

      at Object.toBeDefined (tests/integration/utils/performanceMonitor.test.js:241:22)

  ● Performance Monitor Integration Tests › Performance Analytics › should calculate average response times

    expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      259 |       );
      260 |
    > 261 |       expect(avgResponseTime).toBeGreaterThan(0);
          |                               ^
      262 |       expect(avgResponseTime).toBe(143.75); // (100 + 150 + 200 + 125) / 4
      263 |     });
      264 |

      at Object.toBeGreaterThan (tests/integration/utils/performanceMonitor.test.js:261:31)

  ● Performance Monitor Integration Tests › System Health Monitoring › should collect system health metrics

    expect(received).toHaveProperty(path)

    Expected path: "timestamp"
    Received path: []

    Received value: {"averageDuration": 109, "metrics": {"cpu": {"usage_percent": 11}, "memory": {"usage_percent": 23}}, "score": 98, "slowOperations": 0, "status": "healthy", "successRate": "100.00", "totalOperations": 17}

      300 |
      301 |       expect(health).toHaveProperty("status");
    > 302 |       expect(health).toHaveProperty("timestamp");
          |                      ^
      303 |       expect(health).toHaveProperty("metrics");
      304 |
      305 |       expect(health.metrics).toHaveProperty("memory");

      at Object.toHaveProperty (tests/integration/utils/performanceMonitor.test.js:302:22)

  ● Performance Monitor Integration Tests › System Health Monitoring › should include database health in system metrics

    expect(received).toHaveProperty(path)

    Expected path: "database"
    Received path: []

    Received value: {"cpu": {"usage_percent": 16}, "memory": {"usage_percent": 34}}

      323 |       const health = await getSystemHealth();
      324 |
    > 325 |       expect(health.metrics).toHaveProperty("database");
          |                              ^
      326 |       expect(health.metrics.database).toHaveProperty("connected");
      327 |       expect(health.metrics.database).toHaveProperty("pool_size");
      328 |       expect(health.metrics.database).toHaveProperty("active_connections");

      at Object.toHaveProperty (tests/integration/utils/performanceMonitor.test.js:325:30)

  ● Performance Monitor Integration Tests › System Health Monitoring › should detect system health status accurately

    expect(received).toBeLessThan(expected)

    Matcher error: received value must be a number or bigint

    Received has value: undefined

      340 |       if (health.status === "healthy") {
      341 |         expect(health.metrics.memory.usage_percent).toBeLessThan(90);
    > 342 |         expect(health.metrics.cpu.usage).toBeLessThan(90);
          |                                          ^
      343 |       }
      344 |     });
      345 |   });

      at Object.toBeLessThan (tests/integration/utils/performanceMonitor.test.js:342:42)

  ● Performance Monitor Integration Tests › Anomaly Detection › should detect trend-based anomalies

    expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      394 |       const anomalies = await detectAnomalies("trend_test", "1h", "trend");
      395 |
    > 396 |       expect(anomalies.length).toBeGreaterThan(0);
          |                                ^
      397 |
      398 |       const dropAnomaly = anomalies.find((a) => a.value === 50);
      399 |       expect(dropAnomaly).toBeDefined();

      at Object.toBeGreaterThan (tests/integration/utils/performanceMonitor.test.js:396:32)

  ● Performance Monitor Integration Tests › Performance Reporting › should generate comprehensive performance report

    expect(received).toHaveProperty(path)

    Expected path: "anomalies"
    Received path: []

    Received value: {"activeRequests": 1, "alerts": [], "errorRate": 0, "metrics": [{"category": "api", "name": "request_duration", "timestamp": 1758888041246, "value": 150}, {"category": "database", "name": "database_query", "timestamp": 1758888011246, "value": 200}], "recommendations": [{"category": "database", "message": "Monitor slow database operations", "priority": "high", "type": "performance"}, {"category": "api", "message": "Consider caching frequently accessed data", "priority": "medium", "type": "optimization"}], "status": "healthy", "summary": {"avg_response_time": 150, "success_rate": 95.5, "total_metrics": 2}, "timestamp": "2025-09-26T12:00:41.246Z", "totalRequests": 53, "uptime": 31.094241191}

      420 |       expect(report).toHaveProperty("summary");
      421 |       expect(report).toHaveProperty("metrics");
    > 422 |       expect(report).toHaveProperty("anomalies");
          |                      ^
      423 |       expect(report).toHaveProperty("recommendations");
      424 |       expect(report).toHaveProperty("timestamp");
      425 |

      at Object.toHaveProperty (tests/integration/utils/performanceMonitor.test.js:422:22)

  ● Performance Monitor Integration Tests › Performance Reporting › should include performance recommendations

    expect(received).toHaveProperty(path)

    Expected path: "description"
    Received path: []

    Received value: {"category": "database", "message": "Monitor slow database operations", "priority": "high", "type": "performance"}

      452 |         expect(
      453 |           recommendations.find((r) => r.type === "performance")
    > 454 |         ).toHaveProperty("description");
          |           ^
      455 |         expect(
      456 |           recommendations.find((r) => r.type === "performance")
      457 |         ).toHaveProperty("action");

      at Object.toHaveProperty (tests/integration/utils/performanceMonitor.test.js:454:11)

  ● Performance Monitor Integration Tests › Performance Benchmarking › should benchmark database operations

    expect(received).toBe(expected) // Object.is equality

    Expected: 4
    Received: 1046.9800517921112

      497 |       const metrics = await getMetrics("db_benchmark", "1h", "database");
      498 |       expect(metrics.length).toBeGreaterThan(0);
    > 499 |       expect(metrics[0].value).toBe(duration);
          |                                ^
      500 |     });
      501 |
      502 |     test("should benchmark API response times", async () => {

      at Object.toBe (tests/integration/utils/performanceMonitor.test.js:499:32)

  ● Performance Monitor Integration Tests › Performance Benchmarking › should benchmark API response times

    expect(received).toBe(expected) // Object.is equality

    Expected: 3
    Received: 2

      528 |       // Verify all metrics were recorded
      529 |       const metrics = await getMetrics("api_benchmark", "1h", "api");
    > 530 |       expect(metrics.length).toBe(operations.length);
          |                              ^
      531 |     });
      532 |
      533 |     test("should compare performance across time periods", async () => {

      at Object.toBe (tests/integration/utils/performanceMonitor.test.js:530:30)

  ● Performance Monitor Integration Tests › Performance Benchmarking › should compare performance across time periods

    expect(received).toBeGreaterThan(expected)

    Expected: > 388.78411124057794
    Received:   0

      564 |         currentMetrics.length;
      565 |
    > 566 |       expect(previousAvg).toBeGreaterThan(currentAvg); // Performance improved
          |                           ^
      567 |       expect(previousAvg).toBe(105); // (100 + 110) / 2
      568 |       expect(currentAvg).toBe(92.5); // (90 + 95) / 2
      569 |     });

      at Object.toBeGreaterThan (tests/integration/utils/performanceMonitor.test.js:566:27)

  ● Performance Monitor Integration Tests › Error Handling and Edge Cases › should handle very large metric values

    expect(received).toBe(expected) // Object.is equality

    Expected: 9007199254740990
    Received: 412.6392358692325

      600 |       const metrics = await getMetrics("large_value_test", "1h", "test");
      601 |       expect(metrics.length).toBeGreaterThan(0);
    > 602 |       expect(metrics[0].value).toBe(largeValue);
          |                                ^
      603 |     });
      604 |
      605 |     test("should handle concurrent metric recording", async () => {

      at Object.toBe (tests/integration/utils/performanceMonitor.test.js:602:32)

  ● Performance Monitor Integration Tests › Error Handling and Edge Cases › should handle concurrent metric recording

    expect(received).toBe(expected) // Object.is equality

    Expected: 10
    Received: 2

      614 |
      615 |       const metrics = await getMetrics("concurrent_test", "1h", "test");
    > 616 |       expect(metrics.length).toBe(10);
          |                              ^
      617 |
      618 |       // Verify all values were recorded correctly
      619 |       const values = metrics.map((m) => m.value).sort((a, b) => a - b);

      at Object.toBe (tests/integration/utils/performanceMonitor.test.js:616:30)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

  console.log
    🚨 Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

  console.error
    Error: SyntaxError: Unexpected end of JSON input
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{"invalid": ',
      type: 'entity.parse.failed'
    }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
  console.error
    Error: SyntaxError: Expected property name or '}' in JSON at position 1
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{incomplete json',
      type: 'entity.parse.failed'
    }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "POST /api/backtest/run HTTP/1.1" 400 135 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "GET /api/calendar/earnings?limit=not-a-number HTTP/1.1" 400 105 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "GET /api/calendar/earnings?days_ahead=invalid HTTP/1.1" 400 114 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "GET /api/calendar/earnings?start_date=not-a-date HTTP/1.1" 400 120 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "POST /api/backtest/run HTTP/1.1" 400 64 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "GET /api/portfolio/analytics HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "GET /api/alerts/distance/AAPL HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "GET /api/portfolio HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "GET /api/portfolio HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "GET /api/portfolio HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "GET /api/portfolio HTTP/1.1" 401 78 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "GET /api/portfolio HTTP/1.1" 401 78 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "GET /api/portfolio HTTP/1.1" 401 78 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "GET /api/portfolio HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "GET /api/portfolio HTTP/1.1" 401 78 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "GET /api/portfolio/admin HTTP/1.1" 404 125 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📊 Portfolio summary requested for user: dev-user-bypass

      at log (routes/portfolio.js:191:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "GET /api/portfolio/summary?user_id=999 HTTP/1.1" 200 664 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔔 Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:38:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "GET /api/alerts/active?user_id=999 HTTP/1.1" 200 1505 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "GET /api/nonexistent HTTP/1.1" 404 121 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "GET /api/portfolio/nonexistent-action HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "GET /api/calendar/nonexistent-calendar HTTP/1.1" 404 139 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "POST /api/invalid/endpoint HTTP/1.1" 404 126 "-" "-"
  console.log
    📊 Retrieving backtest results for ID: nonexistent-id

      at log (routes/backtest.js:20:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "GET /api/backtest/results/nonexistent-id HTTP/1.1" 404 4794 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "GET /api/portfolio/positions/999999 HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "GET /api/calendar/invalid-calendar-type HTTP/1.1" 404 140 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "GET /api/portfolio/invalid-portfolio-action HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "GET /api/market/invalid-market-data HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "POST /api/health HTTP/1.1" 404 116 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "PUT /api/market/overview HTTP/1.1" 404 125 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "DELETE /api/calendar/earnings HTTP/1.1" 404 127 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "POST /api/health HTTP/1.1" 404 116 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "POST /api/market/overview HTTP/1.1" 404 125 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "POST /api/calendar/earnings HTTP/1.1" 404 127 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "POST /api/portfolio/positions HTTP/1.1" 404 129 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:41 +0000] "GET /api/calendar/earnings?start_date=2024-12-31&end_date=2024-01-01 HTTP/1.1" 200 259 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 221ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 230ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 216ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 220ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 227ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 214ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 224ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 218ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 223ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 210ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 219ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 216ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 213ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 201ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 204ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 217ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 213ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 201ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 208ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 203ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 198ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 197ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 202ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 193ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 197ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 203ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 186ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 195ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 183ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 200ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 195ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 194ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 191ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 183ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 189ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 184ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 248ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 180ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 188ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 186ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 182ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 185ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 180ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 182ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 180ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 197ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 179ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 173ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 174ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 177ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 173ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 166ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 171ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 173ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 170ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 165ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 160ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 164ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 169ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 163ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 167ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 160ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 162ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 154ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 158ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 152ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 149ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 159ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 152ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 157ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 147ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 151ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 145ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 151ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 148ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 144ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 136ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 146ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 144ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 142ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 137ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 136ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 131ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 135ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 134ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 131ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 129ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 125ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 132ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 123ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 126ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 130ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 130ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 124ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 117ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 120ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 115ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 125ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 115ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 119ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/nonexistent HTTP/1.1" 404 121 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/portfolio HTTP/1.1" 401 74 "-" "-"
  console.error
    Error: SyntaxError: Unexpected end of JSON input
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{"invalid": ',
      type: 'entity.parse.failed'
    }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/portfolio/positions HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/calendar/admin-only HTTP/1.1" 404 129 "-" "-"
  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

PASS tests/integration/errors/4xx-error-scenarios.integration.test.js
  4xx Client Error Scenarios Integration
    400 Bad Request Scenarios
      ✓ should return 400 for malformed JSON requests (12 ms)
      ✓ should return 400 for invalid parameter types (3 ms)
      ✓ should return 400 for missing required fields (3 ms)
      ✓ should return 400 for invalid field values (2 ms)
    401 Unauthorized Scenarios
      ✓ should return 401 for missing authorization header (2 ms)
      ✓ should return 401 for invalid authorization tokens (11 ms)
      ✓ should return 401 for malformed authorization headers (3 ms)
    403 Forbidden Scenarios
      ✓ should return 403 for insufficient permissions (2 ms)
      ✓ should return 403 for resource access violations (19 ms)
    404 Not Found Scenarios
      ✓ should return 404 for non-existent endpoints (4 ms)
      ✓ should return 404 for non-existent resources (10 ms)
      ✓ should return 404 for valid endpoint with invalid sub-routes (3 ms)
    405 Method Not Allowed Scenarios
      ✓ should return 405 for unsupported HTTP methods (3 ms)
      ✓ should return 405 for POST on GET-only endpoints (3 ms)
    409 Conflict Scenarios
      ✓ should return 409 for resource conflicts (2 ms)
    415 Unsupported Media Type Scenarios
      ✓ should return 415 for unsupported content types (7 ms)
    422 Unprocessable Entity Scenarios
      ✓ should return 422 for semantically invalid data (5 ms)
    429 Rate Limiting Scenarios
      ✓ should handle rate limiting if implemented (343 ms)
    Cross-Route 4xx Error Consistency
      ✓ should maintain consistent 4xx error response format (5 ms)
      ✓ should not expose sensitive information in 4xx errors (6 ms)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.error
    Database query error: {
      error: 'LIMIT must not be negative',
      query: '\n' +
        '      SELECT\n' +
        '        id,\n' +
        '        title,\n' +
        '        publisher as source,\n' +
        '        link as url,\n' +
        '        p...',
      params: '2 parameters',
      code: '2201W'
    }

      1335 |     return result;
      1336 |   } catch (error) {
    > 1337 |     console.error("Database query error:", {
           |             ^
      1338 |       error: error.message,
      1339 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      1340 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1337:13)
      at routes/commodities.js:756:20

  console.error
    Commodities news error: error: LIMIT must not be negative
        at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at query (/home/stocks/algo/webapp/lambda/utils/database.js:1308:20)
        at /home/stocks/algo/webapp/lambda/routes/commodities.js:756:20 {
      length: 90,
      severity: 'ERROR',
      code: '2201W',
      detail: undefined,
      hint: undefined,
      position: undefined,
      internalPosition: undefined,
      internalQuery: undefined,
      where: undefined,
      schema: undefined,
      table: undefined,
      column: undefined,
      dataType: undefined,
      constraint: undefined,
      file: 'nodeLimit.c',
      line: '398',
      routine: 'recompute_limits'
    }

      775 |     });
      776 |   } catch (error) {
    > 777 |     console.error("Commodities news error:", error);
          |             ^
      778 |     res.status(500).json({
      779 |       success: false,
      780 |       error: "Failed to fetch commodities news",

      at error (routes/commodities.js:777:13)

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/unit/routes/commodities.test.js
  Commodities Routes
    GET /api/commodities/health
      ✓ should return health status (8 ms)
      ✓ should not require authentication (1 ms)
    GET /api/commodities/
      ✕ should return commodities API overview (2 ms)
      ✓ should return all expected endpoints (1 ms)
    GET /api/commodities/categories
      ✓ should return commodity categories (5 ms)
      ✓ should include energy category with correct structure (1 ms)
      ✓ should include precious metals category (2 ms)
      ✓ should include base metals category (1 ms)
      ✓ should include agriculture category (1 ms)
      ✓ should calculate total weight correctly (1 ms)
      ✓ should include performance data for all time periods (2 ms)
    GET /api/commodities/prices
      ✓ should return current commodity prices (2 ms)
      ✓ should include major commodities (1 ms)
      ✓ should include required price fields (1 ms)
      ✓ should filter by category when provided (1 ms)
      ✓ should handle invalid category filter (1 ms)
      ✓ should limit results when limit parameter provided (1 ms)
    GET /api/commodities/market-summary
      ✓ should return market summary (1 ms)
      ✓ should include market overview metrics (6 ms)
      ✓ should include top gainers and losers (1 ms)
      ✓ should include market sentiment (1 ms)
    GET /api/commodities/correlations
      ✓ should return price correlations (1 ms)
      ✓ should include correlation matrix (1 ms)
      ✓ should include correlation insights (1 ms)
      ✓ should filter correlations by minimum threshold (1 ms)
    GET /api/commodities/news
      ✓ should return commodity news (2 ms)
      ✕ should include required news fields (1 ms)
      ✓ should filter by category when provided (2 ms)
      ✓ should respect limit parameter (1 ms)
    Response Format Validation
      ✓ should return consistent JSON response format (6 ms)
      ✓ should include timestamps in ISO format where applicable (3 ms)
      ✓ should use consistent success field for API responses (3 ms)
    Edge Cases and Error Handling
      ✓ should handle malformed query parameters gracefully (1 ms)
      ✓ should handle very large limit values (1 ms)
      ✕ should handle negative limit values (16 ms)
    Performance and Caching
      ✓ should respond quickly to health checks (1 ms)
      ✓ should handle concurrent requests (2 ms)

  ● Commodities Routes › GET /api/commodities/ › should return commodities API overview

    expect(received).toEqual(expected) // deep equality

    - Expected  - 0
    + Received  + 1

    @@ -10,6 +10,7 @@
          "status": "operational",
          "system": "Commodities API",
          "timestamp": Any<String>,
          "version": "1.0.0",
        },
    +   "success": true,
      }

      50 |       const response = await request(app).get("/api/commodities/").expect(200);
      51 |
    > 52 |       expect(response.body).toEqual({
         |                             ^
      53 |         data: {
      54 |           system: "Commodities API",
      55 |           version: "1.0.0",

      at Object.toEqual (tests/unit/routes/commodities.test.js:52:29)

  ● Commodities Routes › GET /api/commodities/news › should include required news fields

    expect(received).toHaveProperty(path)

    Expected path: "summary"
    Received path: []

    Received value: {"category": "commodities", "id": 7, "publishedAt": "2025-09-22T04:00:05.183Z", "source": "WSJ", "symbol": "GLD", "title": "Gold Prices Surge on Economic Uncertainty", "url": "https://example.com/4"}

      438 |         const newsItem = response.body.data[0];
      439 |         expect(newsItem).toHaveProperty("title");
    > 440 |         expect(newsItem).toHaveProperty("summary");
          |                          ^
      441 |       }
      442 |     });
      443 |

      at Object.toHaveProperty (tests/unit/routes/commodities.test.js:440:26)

  ● Commodities Routes › Edge Cases and Error Handling › should handle negative limit values

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      570 |
      571 |       // Handle different possible status codes
    > 572 |       expect(response.status).toBe(200);
          |                               ^
      573 |
      574 |       if (response.status === 200) {
      575 |         // Should use default limit

      at Object.toBe (tests/unit/routes/commodities.test.js:572:31)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

  console.log
    🚨 Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    {"timestamp":"2025-09-26T12:00:42.718Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Processing live market data request","correlationId":"livedata-market-1758888042718","userId":"dev-user-bypass","query":{"symbols":"AAPL,GOOGL"},"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

  console.log
    {"timestamp":"2025-09-26T12:00:42.720Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Live market data request completed","correlationId":"livedata-market-1758888042718","duration":2,"hasIndices":true,"hasWatchlist":true,"errors":0,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/liveData/market?symbols=AAPL%2CGOOGL HTTP/1.1" 200 332 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    {"timestamp":"2025-09-26T12:00:42.726Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Processing live data stream request","correlationId":"livedata-stream-1758888042726","userId":"dev-user-bypass","symbols":"AAPL,MSFT","type":"quotes","format":"json","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

  console.log
    {"timestamp":"2025-09-26T12:00:42.728Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Live data stream request completed (test mode)","correlationId":"livedata-stream-1758888042726","duration":2,"symbols":["AAPL","MSFT"],"type":"quotes","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/liveData/stream?symbols=AAPL%2CMSFT&type=quotes HTTP/1.1" 200 330 "-" "-"
  console.log
    📊 Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1290:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
  console.log
    📊 Latest data requested for symbols: GOOGL

      at log (routes/liveData.js:1290:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/liveData/latest/GOOGL HTTP/1.1" 404 212 "-" "-"
  console.log
    📊 Latest data requested for symbols: MSFT

      at log (routes/liveData.js:1290:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/liveData/latest/MSFT HTTP/1.1" 404 210 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/portfolio/stream/value HTTP/1.1" 404 132 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/portfolio/stream/positions HTTP/1.1" 404 136 "-" "-"
  console.log
    📊 Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1290:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
  console.log
    📊 Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1290:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:42 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
  console.log
    📊 Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1290:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:43 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
  console.log
    📊 Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1290:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:43 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
  console.log
    📊 Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1290:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:43 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
  console.log
    📊 Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1290:15)

  console.log
    📊 Latest data requested for symbols: GOOGL

      at log (routes/liveData.js:1290:15)

  console.log
    📊 Latest data requested for symbols: MSFT

      at log (routes/liveData.js:1290:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:43 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:43 +0000] "GET /api/liveData/latest/GOOGL HTTP/1.1" 404 212 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:43 +0000] "GET /api/liveData/latest/MSFT HTTP/1.1" 404 210 "-" "-"
  console.log
    📊 Latest data requested for symbols: INVALID

      at log (routes/liveData.js:1290:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:43 +0000] "GET /api/liveData/latest/INVALID HTTP/1.1" 404 216 "-" "-"
  console.log
    📊 Latest data requested for symbols: NOTFOUND

      at log (routes/liveData.js:1290:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:43 +0000] "GET /api/liveData/latest/NOTFOUND HTTP/1.1" 404 218 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:43 +0000] "GET /api/liveData/latest/ HTTP/1.1" 404 126 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:43 +0000] "GET /api/liveData/market?symbols=AAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL%2CAAPL HTTP/1.1" 401 74 "-" "-"
  console.log
    📊 Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1290:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:43 +0000] "GET /api/liveData/latest/AAPL?detailed=true&history=1000 HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:43 +0000] "GET /api/liveData/market?symbols=AAPL%2CGOOGL%2CMSFT HTTP/1.1" 401 74 "-" "-"
  console.log
    📊 Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1290:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:43 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
  console.log
    📊 Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1290:15)

  console.log
    📊 Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1290:15)

  console.log
    📊 Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1290:15)

  console.log
    📊 Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1290:15)

  console.log
    📊 Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1290:15)

  console.log
    📊 Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1290:15)

  console.log
    📊 Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1290:15)

  console.log
    📊 Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1290:15)

  console.log
    📊 Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1290:15)

  console.log
    📊 Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1290:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:43 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:43 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:43 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:43 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:43 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:43 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:43 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:43 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:43 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:43 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
  console.log
    📊 Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1290:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:44 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:44 +0000] "GET /api/liveData/market?symbols=AAPL HTTP/1.1" 401 74 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    {"timestamp":"2025-09-26T12:00:44.038Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Processing live data stream request","correlationId":"livedata-stream-1758888044038","userId":"dev-user-bypass","symbols":"default_watchlist","type":"quote","format":"json","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

  console.log
    {"timestamp":"2025-09-26T12:00:44.039Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Live data stream request completed (test mode)","correlationId":"livedata-stream-1758888044038","duration":1,"symbols":["AAPL","MSFT","GOOGL","AMZN","TSLA","NVDA","META"],"type":"quote","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:44 +0000] "GET /api/liveData/stream?symbol=AAPL&type=quote HTTP/1.1" 200 365 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    {"timestamp":"2025-09-26T12:00:44.044Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Processing live data stream request","correlationId":"livedata-stream-1758888044044","userId":"dev-user-bypass","symbols":"default_watchlist","type":"trade","format":"json","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

  console.log
    {"timestamp":"2025-09-26T12:00:44.045Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Live data stream request completed (test mode)","correlationId":"livedata-stream-1758888044044","duration":1,"symbols":["AAPL","MSFT","GOOGL","AMZN","TSLA","NVDA","META"],"type":"trade","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:44 +0000] "GET /api/liveData/stream?symbol=AAPL&type=trade HTTP/1.1" 200 365 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    {"timestamp":"2025-09-26T12:00:44.050Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Processing live data stream request","correlationId":"livedata-stream-1758888044050","userId":"dev-user-bypass","symbols":"default_watchlist","type":"bar","format":"json","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:44 +0000] "GET /api/liveData/stream?symbol=AAPL&type=bar HTTP/1.1" 501 110 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    {"timestamp":"2025-09-26T12:00:44.054Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Processing live data stream request","correlationId":"livedata-stream-1758888044054","userId":"dev-user-bypass","symbols":"default_watchlist","type":"news","format":"json","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:44 +0000] "GET /api/liveData/stream?symbol=AAPL&type=news HTTP/1.1" 501 111 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:44 +0000] "GET /api/portfolio/stream/value HTTP/1.1" 401 74 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:44 +0000] "GET /api/portfolio/stream/value HTTP/1.1" 404 132 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:44 +0000] "GET /api/portfolio/stream/positions HTTP/1.1" 401 74 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:44 +0000] "GET /api/portfolio/stream/positions HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:44 +0000] "GET /api/alerts/stream HTTP/1.1" 401 74 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔔 [ALERTS] Fetching streaming alerts for user dev-user-bypass

      at log (routes/alerts.js:2692:15)

  console.log
    ✅ [ALERTS] Successfully streamed 0 alerts for user dev-user-bypass

      at log (routes/alerts.js:2784:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:44 +0000] "GET /api/alerts/stream HTTP/1.1" 200 279 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:44 +0000] "GET /api/portfolio/stream/value HTTP/1.1" 404 132 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:44 +0000] "GET /api/portfolio/stream/positions HTTP/1.1" 404 136 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:44 +0000] "GET /api/portfolio/stream/value HTTP/1.1" 404 132 "-" "-"
  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

PASS tests/integration/streaming/streaming-data.integration.test.js
  Streaming Data Integration
    Real-Time Market Data Streaming
      ✓ should handle market data requests (12 ms)
      ✓ should handle streaming data subscriptions (8 ms)
      ✓ should handle real-time quote data (13 ms)
    Portfolio Streaming Updates
      ✓ should handle portfolio value streaming (3 ms)
      ✓ should handle position streaming updates (3 ms)
    Streaming Data Consistency
      ✓ should maintain data consistency across multiple requests (819 ms)
      ✓ should handle concurrent streaming requests (16 ms)
    Streaming Error Handling
      ✓ should handle invalid symbols gracefully (8 ms)
      ✓ should handle streaming service failures (5 ms)
      ✓ should handle network timeout scenarios (1 ms)
    Streaming Performance
      ✓ should deliver streaming data within reasonable time (3 ms)
      ✓ should handle high-frequency data requests (428 ms)
    Streaming Data Formats
      ✓ should return consistent data formats (5 ms)
      ✓ should handle different data type requests (25 ms)
    Authentication with Streaming Data
      ✓ should handle authentication for protected streaming endpoints (17 ms)
      ✓ should maintain streaming sessions with valid authentication (413 ms)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

  console.log
    🚨 Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:44 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:44 +0000] "GET /api/backtest/strategies HTTP/1.1" 200 115215 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:44 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:44 +0000] "GET /api/portfolio/complex-analysis HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:44 +0000] "GET /api/market/detailed-analysis HTTP/1.1" 404 134 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📋 Portfolio positions requested for user: dev-user-bypass

      at log (routes/portfolio.js:298:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:44 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 710 "-" "-"
  console.log
    Calendar events endpoint called with params: {}

      at log (routes/calendar.js:372:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:44 +0000] "GET /api/calendar/events HTTP/1.1" 200 223 "-" "-"
  console.log
    📊 Backtest results requested - ID: all, limit: 50

      at log (routes/backtest.js:821:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:44 +0000] "GET /api/backtest/results HTTP/1.1" 200 24238 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 4ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 16ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 10ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 18ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 14ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 22ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 14ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 18ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 11ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 9ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 13ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 1085 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "POST /api/backtest/run HTTP/1.1" 400 64 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 2ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 10ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 8ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 7ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 5ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview completed in 6ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:45 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 2ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:47 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:47 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:47 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:47 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:00:47 +0000] "GET /api/health HTTP/1.1" 200 499 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:47 +0000] "GET /api/health HTTP/1.1" 200 499 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:47 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:47 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:47 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:47 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 347 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:47 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📋 Portfolio positions requested for user: dev-user-bypass

      at log (routes/portfolio.js:298:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:47 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 710 "-" "-"
  console.log
    Calendar events endpoint called with params: {}

      at log (routes/calendar.js:372:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:00:47 +0000] "GET /api/calendar/events HTTP/1.1" 200 223 "-" "-"
  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

PASS tests/integration/errors/timeout-handling.integration.test.js
  Timeout Handling Integration
    Request Timeout Scenarios
      ✓ should handle client-side request timeouts gracefully (16 ms)
      ✓ should return 408 or 504 for server-side timeouts (4 ms)
    Database Query Timeout Scenarios
      ✓ should handle slow database queries gracefully (14 ms)
      ✓ should handle connection pool timeout scenarios (64 ms)
    External Service Timeout Scenarios
      ✓ should handle external API timeouts properly (14 ms)
      ✓ should implement circuit breaker patterns for repeated timeouts (30 ms)
    Streaming and Long-Running Operation Timeouts
      ✓ should handle long-running analysis timeouts (9 ms)
      ✓ should provide timeout warnings for slow operations (1 ms)
    Timeout Recovery and Resilience
      ✓ should recover gracefully after timeout scenarios (2027 ms)
      ✓ should maintain system health during timeout scenarios (17 ms)
      ✓ should provide appropriate timeout configuration (10 ms)
    Timeout Error Response Consistency
      ✓ should return consistent timeout error responses (6 ms)
      ✓ should not expose internal timeout configurations (12 ms)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

PASS tests/performance/connection-pool-stress.performance.test.js (5.829 s)
  Connection Pool Stress Integration
    Pool Limit Testing
      ✓ should handle requests up to pool limit (110 ms)
      ✓ should handle pool exhaustion gracefully (672 ms)
      ✓ should queue requests when pool is full (1108 ms)
    Connection Recovery and Resilience
      ✓ should recover from connection failures (1812 ms)
      ✓ should handle idle connection cleanup (2015 ms)
    Transaction Stress Testing
      ✓ should handle many concurrent transactions (13 ms)
      ✓ should maintain transaction isolation under stress (48 ms)
    Resource Management and Monitoring
      ✓ should provide pool status information
      ✓ should handle pool shutdown gracefully (10 ms)

  console.log
    🚨 Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    🚨 Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

  console.error
    Failed to add connection : Error: Connection ID is required
        at LiveDataManager._addConnectionInternal (/home/stocks/algo/webapp/lambda/utils/liveDataManager.js:303:15)
        at LiveDataManager._addConnectionInternal [as addConnection] (/home/stocks/algo/webapp/lambda/utils/liveDataManager.js:292:17)
        at Object.addConnection (/home/stocks/algo/webapp/lambda/tests/integration/utils/liveDataManager.test.js:556:38)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      370 |       };
      371 |     } catch (error) {
    > 372 |       console.error(`Failed to add connection ${connectionId}:`, error);
          |               ^
      373 |       return {
      374 |         success: false,
      375 |         error: error.message,

      at LiveDataManager.error [as _addConnectionInternal] (utils/liveDataManager.js:372:15)
      at LiveDataManager._addConnectionInternal [as addConnection] (utils/liveDataManager.js:292:17)
      at Object.addConnection (tests/integration/utils/liveDataManager.test.js:556:38)

  console.error
    Failed to add subscription for symbol , user : Error: Symbol, provider, connectionId, and userId are required
        at LiveDataManager.addSubscription (/home/stocks/algo/webapp/lambda/utils/liveDataManager.js:547:15)
        at Object.addSubscription (/home/stocks/algo/webapp/lambda/tests/integration/utils/liveDataManager.test.js:564:38)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      598 |       };
      599 |     } catch (error) {
    > 600 |       console.error(
          |               ^
      601 |         `Failed to add subscription for symbol ${symbol}, user ${userId}:`,
      602 |         error
      603 |       );

      at LiveDataManager.error [as addSubscription] (utils/liveDataManager.js:600:15)
      at Object.addSubscription (tests/integration/utils/liveDataManager.test.js:564:38)

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

PASS tests/integration/utils/liveDataManager.test.js
  Live Data Manager Integration Tests
    Dashboard Status Management
      ✓ should get comprehensive dashboard status (1 ms)
      ✓ should get provider status by ID
      ✓ should handle non-existent provider
    Connection Management
      ✓ should add new connection successfully (1 ms)
      ✓ should get connection status (1 ms)
      ✓ should remove connection successfully
      ✓ should handle connection limit enforcement (1 ms)
    Subscription Management
      ✓ should add subscription successfully (6 ms)
      ✓ should get user subscriptions
      ✓ should remove subscription successfully
      ✓ should remove all subscriber subscriptions
    Provider Usage Tracking
      ✓ should track provider usage successfully (1 ms)
      ✓ should handle invalid provider usage tracking
    Performance Metrics
      ✓ should track latency successfully
      ✓ should calculate average latency
      ✓ should track errors successfully (1 ms)
      ✓ should calculate global performance metrics
    Rate Limiting
      ✓ should set rate limit for provider
      ✓ should handle requests within rate limit
      ✓ should enforce rate limits
      ✓ should reset rate limit counters
    Alert Generation
      ✓ should generate alerts for system limits
      ✓ should generate optimization recommendations
    Provider Status Updates
      ✓ should update provider status
      ✓ should emit status change events
    Analytics and Reporting
      ✓ should generate analytics report (1 ms)
      ✓ should generate performance report
      ✓ should subscribe users to multiple symbols (1 ms)
    Error Handling
      ✓ should handle invalid connection parameters (27 ms)
      ✓ should handle invalid subscription parameters (1 ms)
      ✓ should return empty arrays for invalid user queries (1 ms)
      ✓ should handle tracking for non-existent providers

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for spy

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for INVALID

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

  console.error
    ETF holdings database error: Error: Database connection failed
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/etf.test.js:215:35)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      184 |     });
      185 |   } catch (error) {
    > 186 |     console.error("ETF holdings database error:", error);
          |             ^
      187 |
      188 |     if (error.code === "42P01") {
      189 |       return res.status(500).json({

      at error (routes/etf.js:186:13)

  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for VTI-B

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for ETF0

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for ETF1

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for ETF2

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for ETF3

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for ETF4

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for LARGE

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/unit/routes/etf.test.js
  ETF Route - Comprehensive Unit Tests
    GET /api/etf/:symbol/holdings
      ✕ should get ETF holdings for valid symbol (12 ms)
      ✓ should handle case insensitive symbol lookup (2 ms)
      ✓ should handle limit parameter correctly (1 ms)
      ✓ should handle missing symbol parameter (1 ms)
      ✓ should handle ETF not found (2 ms)
      ✕ should handle null database results gracefully (2 ms)
      ✕ should handle database table not found error (7 ms)
      ✓ should handle general database errors (2 ms)
      ✕ should handle empty sector data gracefully (2 ms)
      ✓ should handle missing fund metrics gracefully (2 ms)
      ✓ should handle special characters in ETF symbol (2 ms)
      ✕ should parse numeric values correctly (1 ms)
      ✕ should handle sector name transformation correctly (2 ms)
    Edge Cases and Error Handling
      ✕ should handle very large limit parameter (2 ms)
      ✕ should handle non-numeric limit parameter (1 ms)
      ✕ should handle negative limit parameter (2 ms)
      ✕ should handle malformed database response (2 ms)
    Performance Testing
      ✓ should handle concurrent requests efficiently (9 ms)
      ✕ should handle large holdings dataset efficiently (3 ms)
    Response Format Validation
      ✓ should return consistent JSON response format (3 ms)
      ✓ should include timestamp in ISO format (2 ms)
      ✕ should maintain consistent error response format (2 ms)

  ● ETF Route - Comprehensive Unit Tests › GET /api/etf/:symbol/holdings › should get ETF holdings for valid symbol

    expect(received).toHaveProperty(path, value)

    Expected path: "technology"
    Received path: []

    Expected value: 28.5
    Received value: [{"percentage": 28.5, "sector": "Technology", "total_weight": 28.5, "weight": 28.5}, {"percentage": 13.2, "sector": "Healthcare", "total_weight": 13.2, "weight": 13.2}]

      84 |         sector: "Technology",
      85 |       });
    > 86 |       expect(response.body.data.sector_allocation).toHaveProperty(
         |                                                    ^
      87 |         "technology",
      88 |         28.5
      89 |       );

      at Object.toHaveProperty (tests/unit/routes/etf.test.js:86:52)

  ● ETF Route - Comprehensive Unit Tests › GET /api/etf/:symbol/holdings › should handle null database results gracefully

    expected 404 "Not Found", got 200 "OK"

      189 |       const response = await request(app)
      190 |         .get("/api/etf/SPY/holdings")
    > 191 |         .expect(404);
          |          ^
      192 |
      193 |       expect(response.body.success).toBe(false);
      194 |       expect(response.body.error).toBe("ETF not found");

      at Object.expect (tests/unit/routes/etf.test.js:191:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● ETF Route - Comprehensive Unit Tests › GET /api/etf/:symbol/holdings › should handle database table not found error

    expected 500 "Internal Server Error", got 200 "OK"

      203 |       const response = await request(app)
      204 |         .get("/api/etf/SPY/holdings")
    > 205 |         .expect(500);
          |          ^
      206 |
      207 |       expect(response.body.success).toBe(false);
      208 |       expect(response.body.error).toBe("Database table not found");

      at Object.expect (tests/unit/routes/etf.test.js:205:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● ETF Route - Comprehensive Unit Tests › GET /api/etf/:symbol/holdings › should handle empty sector data gracefully

    expect(received).toEqual(expected) // deep equality

    Expected: {}
    Received: []

      250 |         .expect(200);
      251 |
    > 252 |       expect(response.body.data.sector_allocation).toEqual({});
          |                                                    ^
      253 |       expect(response.body.data.top_holdings).toHaveLength(1);
      254 |     });
      255 |

      at Object.toEqual (tests/unit/routes/etf.test.js:252:52)

  ● ETF Route - Comprehensive Unit Tests › GET /api/etf/:symbol/holdings › should parse numeric values correctly

    expect(received).toBe(expected) // Object.is equality

    Expected: 28.5
    Received: undefined

      348 |       expect(response.body.data.top_holdings[0].shares_held).toBe(165000000);
      349 |       expect(response.body.data.top_holdings[0].market_value).toBe(25000000000);
    > 350 |       expect(response.body.data.sector_allocation.technology).toBe(28.5);
          |                                                               ^
      351 |       expect(response.body.data.fund_metrics.expense_ratio).toBe(0.0945);
      352 |       expect(response.body.data.fund_metrics.dividend_yield).toBe(1.25);
      353 |     });

      at Object.toBe (tests/unit/routes/etf.test.js:350:63)

  ● ETF Route - Comprehensive Unit Tests › GET /api/etf/:symbol/holdings › should handle sector name transformation correctly

    expect(received).toHaveProperty(path, value)

    Expected path: "information_technology"
    Received path: []

    Expected value: 28.5
    Received value: [{"percentage": 28.5, "sector": "Information Technology", "total_weight": 28.5, "weight": 28.5}, {"percentage": 13.2, "sector": "Health Care", "total_weight": 13.2, "weight": 13.2}, {"percentage": 12.1, "sector": "Consumer Discretionary", "total_weight": 12.1, "weight": 12.1}]

      392 |         .expect(200);
      393 |
    > 394 |       expect(response.body.data.sector_allocation).toHaveProperty(
          |                                                    ^
      395 |         "information_technology",
      396 |         28.5
      397 |       );

      at Object.toHaveProperty (tests/unit/routes/etf.test.js:394:52)

  ● ETF Route - Comprehensive Unit Tests › Edge Cases and Error Handling › should handle very large limit parameter

    expected 404 "Not Found", got 200 "OK"

      416 |       const response = await request(app)
      417 |         .get("/api/etf/SPY/holdings?limit=99999")
    > 418 |         .expect(404);
          |          ^
      419 |
      420 |       expect(mockQuery).toHaveBeenCalledWith(
      421 |         expect.stringContaining("LIMIT $2"),

      at Object.expect (tests/unit/routes/etf.test.js:418:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● ETF Route - Comprehensive Unit Tests › Edge Cases and Error Handling › should handle non-numeric limit parameter

    expected 200 "OK", got 400 "Bad Request"

      444 |         .mockResolvedValueOnce({ rows: [] });
      445 |
    > 446 |       await request(app).get("/api/etf/SPY/holdings?limit=invalid").expect(200);
          |                                                                     ^
      447 |
      448 |       // Should fallback to default limit of 25 but parseInt converts 'invalid' to NaN
      449 |       expect(mockQuery).toHaveBeenCalledWith(

      at Object.expect (tests/unit/routes/etf.test.js:446:69)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● ETF Route - Comprehensive Unit Tests › Edge Cases and Error Handling › should handle negative limit parameter

    expected 404 "Not Found", got 200 "OK"

      460 |       const response = await request(app)
      461 |         .get("/api/etf/SPY/holdings?limit=-10")
    > 462 |         .expect(404);
          |          ^
      463 |
      464 |       expect(mockQuery).toHaveBeenCalledWith(
      465 |         expect.stringContaining("LIMIT $2"),

      at Object.expect (tests/unit/routes/etf.test.js:462:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● ETF Route - Comprehensive Unit Tests › Edge Cases and Error Handling › should handle malformed database response

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 0
    Received array:  []

      480 |
      481 |       // Should handle missing fields gracefully
    > 482 |       expect(response.body.data.top_holdings).toHaveLength(1);
          |                                               ^
      483 |       expect(response.body.data.top_holdings[0].weight_percent).toBeNull();
      484 |     });
      485 |   });

      at Object.toHaveLength (tests/unit/routes/etf.test.js:482:47)

  ● ETF Route - Comprehensive Unit Tests › Performance Testing › should handle large holdings dataset efficiently

    expect(received).toHaveLength(expected)

    Expected length: 500
    Received length: 1
    Received array:  [{"company_name": "Apple Inc.", "holding_symbol": "AAPL", "market_value": 25000000000, "sector": "Technology", "shares_held": 165000000, "symbol": "AAPL", "weight_percent": 6.85}]

      550 |       const endTime = Date.now();
      551 |
    > 552 |       expect(response.body.data.top_holdings).toHaveLength(500);
          |                                               ^
      553 |       expect(response.body.data.fund_metrics.total_holdings).toBe(500);
      554 |       expect(endTime - startTime).toBeLessThan(5000); // Should complete within 5 seconds
      555 |     });

      at Object.toHaveLength (tests/unit/routes/etf.test.js:552:47)

  ● ETF Route - Comprehensive Unit Tests › Response Format Validation › should maintain consistent error response format

    expected 500 "Internal Server Error", got 200 "OK"

      631 |       const response = await request(app)
      632 |         .get("/api/etf/SPY/holdings")
    > 633 |         .expect(500);
          |          ^
      634 |
      635 |       expect(response.body.success).toBe(false);
      636 |       expect(response.body.error).toBeDefined();

      at Object.expect (tests/unit/routes/etf.test.js:633:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

PASS tests/unit/services/aiStrategyGeneratorStreaming.test.js (8.538 s)
  AIStrategyGeneratorStreaming Service
    Constructor and Initialization
      ✓ should extend AIStrategyGenerator
      ✓ should initialize with empty active streams (1 ms)
    generateStreamId
      ✓ should generate unique stream IDs
    generateWithStreaming
      ✓ should generate strategy with streaming progress (1773 ms)
      ✓ should handle concurrent stream limit (1542 ms)
      ✓ should handle streaming without progress callback (201 ms)
      ✓ should handle empty symbols in streaming (202 ms)
      ✓ should clean up stream after completion (201 ms)
      ✓ should handle streaming errors gracefully (201 ms)
      ✓ should handle stream timeout (11 ms)
    processStreamingChunk
      ✓ should process chunks and call progress callback
      ✓ should handle null progress callback
      ✓ should handle empty chunks
      ✓ should handle very large chunks (1 ms)
    simulateStreamingResponse
      ✓ should simulate streaming for template fallback (450 ms)
      ✓ should handle strategy without all fields (451 ms)
      ✓ should simulate with appropriate delays (452 ms)
    stopStream
      ✓ should stop active stream (1 ms)
      ✓ should handle stopping non-existent stream
      ✓ should handle null stream ID
    stopAllStreams
      ✓ should stop all active streams
      ✓ should handle when no streams are active
    getActiveStreams
      ✓ should return active stream information (1 ms)
      ✓ should return empty array when no streams are active
      ✓ should calculate stream durations correctly
    getStreamingMetrics
      ✓ should return streaming metrics
      ✓ should handle zero active streams (1 ms)
    calculateAverageStreamDuration
      ✓ should calculate average duration correctly
      ✓ should return 0 when no streams are active
      ✓ should handle single stream
    Stream Configuration
      ✓ should allow updating streaming configuration
      ✓ should respect chunk size configuration
    Error Handling and Edge Cases
      ✓ should handle concurrent stream generation attempts (1502 ms)
      ✓ should handle progress callback errors
      ✓ should handle very rapid stream start/stop cycles
      ✓ should handle invalid stream data (1 ms)
      ✓ should handle memory pressure with many streams
      ✓ should clean up properly on errors (201 ms)
    Integration with Base Class
      ✓ should inherit all base class functionality
      ✓ should use base class template generation (1302 ms)
      ✓ should maintain correlation ID from base class (1 ms)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    {"timestamp":"2025-09-26T12:01:02.112Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Starting streaming strategy generation","correlationId":"ai-strategy-1758888062111-htvcz1sbk","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758888062112-b2i7g2swz","prompt":"Create a momentum strategy using moving averages","severity":"INFO"}

      at Logger.duration_ms [as output] (utils/logger.js:215:9)

  console.log
    {"timestamp":"2025-09-26T12:01:02.918Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Streaming strategy generation completed","correlationId":"ai-strategy-1758888062111-htvcz1sbk","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758888062112-b2i7g2swz","strategyName":"AI Momentum Strategy","severity":"INFO"}

      at Logger.duration_ms [as output] (utils/logger.js:215:9)

  console.log
    {"timestamp":"2025-09-26T12:01:02.920Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Starting streaming strategy generation","correlationId":"ai-strategy-1758888062920-0q75qjixe","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758888062920-xkcfsvfln","prompt":"Create a simple trading strategy","severity":"INFO"}

      at Logger.duration_ms [as output] (utils/logger.js:215:9)

  console.log
    {"timestamp":"2025-09-26T12:01:03.723Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Streaming strategy generation completed","correlationId":"ai-strategy-1758888062920-0q75qjixe","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758888062920-xkcfsvfln","strategyName":"AI Momentum Strategy","severity":"INFO"}

      at Logger.duration_ms [as output] (utils/logger.js:215:9)

  console.log
    {"timestamp":"2025-09-26T12:01:03.725Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Starting streaming strategy generation","correlationId":"ai-strategy-1758888063724-k00p6qc2n","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758888063725-vekwgvudn","prompt":"Create a strategy","severity":"INFO"}

      at Logger.duration_ms [as output] (utils/logger.js:215:9)

  console.log
    {"timestamp":"2025-09-26T12:01:04.530Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Streaming strategy generation completed","correlationId":"ai-strategy-1758888063724-k00p6qc2n","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758888063725-vekwgvudn","strategyName":"AI Momentum Strategy","severity":"INFO"}

      at Logger.duration_ms [as output] (utils/logger.js:215:9)

  console.log
    {"timestamp":"2025-09-26T12:01:04.531Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Starting streaming strategy generation","correlationId":"ai-strategy-1758888064530-v4ju918d2","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758888064531-kjqk0aiz7","prompt":"Strategy 1","severity":"INFO"}

      at Logger.duration_ms [as output] (utils/logger.js:215:9)

  console.log
    {"timestamp":"2025-09-26T12:01:04.531Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Starting streaming strategy generation","correlationId":"ai-strategy-1758888064530-v4ju918d2","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758888064531-y5o9sq3zm","prompt":"Strategy 2","severity":"INFO"}

      at Logger.duration_ms [as output] (utils/logger.js:215:9)

  console.log
    {"timestamp":"2025-09-26T12:01:04.532Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Stream rejected due to concurrent limit","correlationId":"3e876ca6","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758888064531-y5o9sq3zm","activeStreams":1,"severity":"WARN"}

      at Logger.duration_ms [as output] (utils/logger.js:215:9)

  console.log
    {"timestamp":"2025-09-26T12:01:04.532Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Streaming strategy generation failed","correlationId":"ai-strategy-1758888064530-v4ju918d2","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758888064531-y5o9sq3zm","error":"Maximum concurrent streams reached","severity":"ERROR"}

      at Logger.duration_ms [as output] (utils/logger.js:215:9)

  console.log
    {"timestamp":"2025-09-26T12:01:05.731Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Streaming strategy generation completed","correlationId":"ai-strategy-1758888064530-v4ju918d2","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758888064531-kjqk0aiz7","strategyName":"AI Momentum Strategy","severity":"INFO"}

      at Logger.duration_ms [as output] (utils/logger.js:215:9)

  console.log
    {"timestamp":"2025-09-26T12:01:05.733Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Stream cancelled","correlationId":"a9e5e32e","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758888065733-iux3obs6j","severity":"INFO"}

      at Logger.duration_ms [as output] (utils/logger.js:215:9)

  console.log
    {"timestamp":"2025-09-26T12:01:05.740Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Starting streaming strategy generation","correlationId":"ai-strategy-1758888065740-4i34acpkl","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758888065740-9ebae2q23","prompt":"Create a strategy","severity":"INFO"}

      at Logger.duration_ms [as output] (utils/logger.js:215:9)

  console.log
    {"timestamp":"2025-09-26T12:01:05.941Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Streaming failed, attempting template fallback","correlationId":"e5ccad15","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758888065740-9ebae2q23","error":"Streaming connection failed","severity":"WARN"}

      at Logger.duration_ms [as output] (utils/logger.js:215:9)

  console.log
    {"timestamp":"2025-09-26T12:01:05.942Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Generating AI-powered strategy from natural language","correlationId":"ai-strategy-1758888065740-4i34acpkl","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","prompt":"Create a strategy","symbolCount":4,"aiEnabled":true,"severity":"INFO"}

      at Logger.duration_ms [as output] (utils/logger.js:215:9)

  console.log
    {"timestamp":"2025-09-26T12:01:05.942Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Generating AI strategy using advanced NLP engine","correlationId":"ai-strategy-1758888065740-4i34acpkl","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","severity":"INFO"}

      at Logger.duration_ms [as output] (utils/logger.js:215:9)

  console.log
    {"timestamp":"2025-09-26T12:01:05.943Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"AI strategy generation successful","correlationId":"ai-strategy-1758888065740-4i34acpkl","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","strategyType":"momentum","confidence":0.85,"severity":"INFO"}

      at Logger.duration_ms [as output] (utils/logger.js:215:9)

  console.log
    {"timestamp":"2025-09-26T12:01:05.943Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"AI strategy generation successful","correlationId":"ai-strategy-1758888065740-4i34acpkl","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","strategyName":"AI Momentum Strategy","strategyType":"ai_generated","severity":"INFO"}

      at Logger.duration_ms [as output] (utils/logger.js:215:9)

  console.log
    {"timestamp":"2025-09-26T12:01:06.396Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Starting streaming strategy generation","correlationId":"ai-strategy-1758888066396-nu7b53vsd","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758888066396-2zejn7doo","prompt":"Create a strategy","severity":"INFO"}

      at Logger.duration_ms [as output] (utils/logger.js:215:9)

  console.log
    {"timestamp":"2025-09-26T12:01:06.597Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Streaming failed, attempting template fallback","correlationId":"16ca3eb6","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758888066396-2zejn7doo","error":"Test error","severity":"WARN"}

      at Logger.duration_ms [as output] (utils/logger.js:215:9)

  console.log
    {"timestamp":"2025-09-26T12:01:06.598Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Generating AI-powered strategy from natural language","correlationId":"ai-strategy-1758888066396-nu7b53vsd","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","prompt":"Create a strategy","symbolCount":4,"aiEnabled":true,"severity":"INFO"}

      at Logger.duration_ms [as output] (utils/logger.js:215:9)

  console.log
    {"timestamp":"2025-09-26T12:01:06.598Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Generating AI strategy using advanced NLP engine","correlationId":"ai-strategy-1758888066396-nu7b53vsd","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","severity":"INFO"}

      at Logger.duration_ms [as output] (utils/logger.js:215:9)

  console.log
    {"timestamp":"2025-09-26T12:01:06.598Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"AI strategy generation successful","correlationId":"ai-strategy-1758888066396-nu7b53vsd","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","strategyType":"momentum","confidence":0.85,"severity":"INFO"}

      at Logger.duration_ms [as output] (utils/logger.js:215:9)

  console.log
    {"timestamp":"2025-09-26T12:01:06.599Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"AI strategy generation successful","correlationId":"ai-strategy-1758888066396-nu7b53vsd","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","strategyName":"AI Momentum Strategy","strategyType":"ai_generated","severity":"INFO"}

      at Logger.duration_ms [as output] (utils/logger.js:215:9)

  console.log
    {"timestamp":"2025-09-26T12:01:06.601Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Starting streaming strategy generation","correlationId":"ai-strategy-1758888066601-6h3hg6jo3","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758888066601-vp6wmc2f7","prompt":"Create a strategy","severity":"INFO"}

      at Logger.duration_ms [as output] (utils/logger.js:215:9)

  console.log
    {"timestamp":"2025-09-26T12:01:07.403Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Streaming strategy generation completed","correlationId":"ai-strategy-1758888066601-6h3hg6jo3","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758888066601-vp6wmc2f7","strategyName":"AI Momentum Strategy","severity":"INFO"}

      at Logger.duration_ms [as output] (utils/logger.js:215:9)

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

PASS tests/integration/services/aiStrategyGeneratorStreaming.test.js (5.336 s)
  AI Strategy Generator Streaming Integration Tests
    Core Streaming Functionality
      ✓ should generate strategy with streaming progress updates (808 ms)
      ✓ should handle streaming without progress callback (804 ms)
      ✓ should generate unique stream IDs
    Stream Management
      ✓ should track active streams (806 ms)
      ✓ should enforce maximum concurrent streams (1202 ms)
      ✓ should get stream status (1 ms)
      ✓ should cancel streams (1 ms)
    Progress Analysis
      ✓ should analyze streaming progress correctly (5 ms)
      ✓ should determine generation stages correctly (1 ms)
      ✓ should estimate time remaining correctly
    Error Handling
      ✓ should handle streaming errors gracefully (656 ms)
      ✓ should clean up streams on error (203 ms)
    Configuration and Metrics
      ✓ should provide streaming metrics (1 ms)
      ✓ should calculate average stream duration
      ✓ should have correct streaming configuration
    Integration with Base Class
      ✓ should inherit from AIStrategyGenerator (1 ms)
      ✓ should use inherited methods for strategy parsing (803 ms)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

  console.log
    🚨 Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "GET /api/websocket HTTP/1.1" 200 411 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "GET /api/websocket/portfolio HTTP/1.1" 404 129 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/subscribe/market HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/subscribe/portfolio HTTP/1.1" 404 139 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/subscribe/portfolio HTTP/1.1" 404 139 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/subscribe/portfolio HTTP/1.1" 404 139 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/subscribe/market HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/subscribe/market HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/subscribe/market HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/subscribe/market HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/subscribe/market HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/subscribe/market HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/subscribe/market HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/subscribe/market HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/subscribe/market HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/subscribe/market HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/subscribe/market HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/subscribe/market HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "GET /api/websocket/invalid HTTP/1.1" 404 127 "-" "-"
  console.error
    Error: SyntaxError: Unexpected token 'n', "not json" is not valid JSON
        at JSON.parse (<anonymous>)
        at createStrictSyntaxError (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:169:10)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:86:15)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: 'not json',
      type: 'entity.parse.failed'
    }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 400 135 "-" "-"
  console.error
    Error: SyntaxError: Unexpected token '}', "{"incomplete": }" is not valid JSON
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{"incomplete": }',
      type: 'entity.parse.failed'
    }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 400 135 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/subscribe/portfolio HTTP/1.1" 404 139 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/session HTTP/1.1" 404 127 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/session/validate HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/session/refresh HTTP/1.1" 404 135 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:07 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/integration/websocket/websocket.integration.test.js
  WebSocket Integration
    WebSocket Connection Establishment
      ✕ should handle WebSocket upgrade requests (14 ms)
      ✓ should handle WebSocket connection info requests (3 ms)
      ✕ should validate WebSocket authentication requirements (3 ms)
    WebSocket Message Handling
      ✓ should handle WebSocket message format validation (10 ms)
      ✕ should handle invalid WebSocket message formats (2 ms)
    WebSocket Subscription Management
      ✓ should handle market data subscriptions (1 ms)
      ✓ should handle portfolio subscriptions (7 ms)
      ✓ should handle subscription limits (18 ms)
    WebSocket Error Scenarios
      ✕ should handle connection errors gracefully (3 ms)
      ✕ should handle malformed WebSocket messages (43 ms)
      ✓ should handle WebSocket security issues (6 ms)
    WebSocket Performance and Scalability
      ✕ should handle concurrent WebSocket requests (14 ms)
      ✓ should handle high-frequency message validation (15 ms)
      ✓ should maintain performance under load (8 ms)
    WebSocket Integration with Authentication
      ✕ should handle WebSocket authentication flow (4 ms)
      ✓ should handle WebSocket session management (3 ms)
    WebSocket Data Consistency
      ✓ should maintain consistent WebSocket message ordering (5 ms)

  ● WebSocket Integration › WebSocket Connection Establishment › should handle WebSocket upgrade requests

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [404, 500]

      35 |
      36 |       // WebSocket upgrade might return specific status codes
    > 37 |       expect([404, 500]).toContain(response.status);
         |                          ^
      38 |
      39 |       if (response.status === 101) {
      40 |         // Successful WebSocket upgrade

      at Object.toContain (tests/integration/websocket/websocket.integration.test.js:37:26)

  ● WebSocket Integration › WebSocket Connection Establishment › should validate WebSocket authentication requirements

    expect(received).toBe(expected) // Object.is equality

    Expected: 401
    Received: 404

      79 |           .set("Connection", "Upgrade");
      80 |
    > 81 |         expect(unauthResponse.status).toBe(401);
         |                                       ^
      82 |
      83 |         // Test with auth header
      84 |         const authResponse = await request(app)

      at Object.toBe (tests/integration/websocket/websocket.integration.test.js:81:39)

  ● WebSocket Integration › WebSocket Message Handling › should handle invalid WebSocket message formats

    expect(received).toContain(expected) // indexOf

    Expected value: 404
    Received array: [400, 422]

      136 |           .send(message);
      137 |
    > 138 |         expect([400, 422]).toContain(response.status);
          |                            ^
      139 |
      140 |         if (response.status === 400 || response.status === 422) {
      141 |           expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/websocket/websocket.integration.test.js:138:28)

  ● WebSocket Integration › WebSocket Error Scenarios › should handle connection errors gracefully

    expect(received).toContain(expected) // indexOf

    Expected value: 404
    Received array: [400, 422]

      258 |         const response = await requestBuilder;
      259 |
    > 260 |         expect([400, 422]).toContain(response.status);
          |                            ^
      261 |
      262 |         if ([400, 404].includes(response.status)) {
      263 |           // Error responses should be properly formatted

      at Object.toContain (tests/integration/websocket/websocket.integration.test.js:260:28)

  ● WebSocket Integration › WebSocket Error Scenarios › should handle malformed WebSocket messages

    expect(received).toContain(expected) // indexOf

    Expected value: 404
    Received array: [400, 422]

      286 |           .send(message);
      287 |
    > 288 |         expect([400, 422]).toContain(response.status);
          |                            ^
      289 |
      290 |         if (response.status >= 400 && response.body) {
      291 |           expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/websocket/websocket.integration.test.js:288:28)

  ● WebSocket Integration › WebSocket Performance and Scalability › should handle concurrent WebSocket requests

    expect(received).toBeGreaterThan(expected)

    Expected: > 7
    Received:   0

      370 |       // Most connections should succeed
      371 |       const successfulConnections = results.filter((r) => r.success);
    > 372 |       expect(successfulConnections.length).toBeGreaterThan(
          |                                            ^
      373 |         concurrentConnections * 0.7
      374 |       );
      375 |

      at Object.toBeGreaterThan (tests/integration/websocket/websocket.integration.test.js:372:44)

  ● WebSocket Integration › WebSocket Integration with Authentication › should handle WebSocket authentication flow

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      512 |       results.forEach((result) => {
      513 |         if (result.status) {
    > 514 |           expect(result.status).toBe(200);
          |                                 ^
      515 |           expect(result.authenticated).toBe(true);
      516 |         }
      517 |       });

      at toBe (tests/integration/websocket/websocket.integration.test.js:514:33)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/websocket/websocket.integration.test.js:512:15)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

  console.log
    🚨 Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 401 78 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio/summary HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/alerts/active HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/trades HTTP/1.1" 200 281 "-" "-"
::ffff:127.0.0.1 - test [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 401 78 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 401 78 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 401 78 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 401 78 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📊 Portfolio summary requested for user: dev-user-bypass

      at log (routes/portfolio.js:191:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio/summary HTTP/1.1" 200 664 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📋 Portfolio positions requested for user: dev-user-bypass

      at log (routes/portfolio.js:298:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 710 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔔 Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:38:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/alerts/active HTTP/1.1" 200 1510 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "POST /api/portfolio/analyze HTTP/1.1" 401 74 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 348 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📊 Portfolio summary requested for user: dev-user-bypass

      at log (routes/portfolio.js:191:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio/summary HTTP/1.1" 200 664 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📋 Portfolio positions requested for user: dev-user-bypass

      at log (routes/portfolio.js:298:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 710 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔔 Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:38:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/alerts/active HTTP/1.1" 200 1510 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📊 Portfolio summary requested for user: dev-user-bypass

      at log (routes/portfolio.js:191:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    📋 Portfolio positions requested for user: dev-user-bypass

      at log (routes/portfolio.js:298:13)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔔 Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:38:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio/summary HTTP/1.1" 200 664 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/alerts/active HTTP/1.1" 200 1510 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 710 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 401 78 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio/summary HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio/positions HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio/analytics HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio/analysis HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio/risk-analysis HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio/performance HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio/transactions HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/trades HTTP/1.1" 200 281 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/alerts/active HTTP/1.1" 401 74 "-" "-"
  console.log
    📊 Backtest results requested - ID: all, limit: 50

      at log (routes/backtest.js:821:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/backtest/results HTTP/1.1" 200 24238 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/health HTTP/1.1" 200 497 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 4ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    📅 Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 401 74 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:516:11)

  console.log
    Market overview completed in 2ms using real loader tables

      at log (routes/market.js:717:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/market/overview HTTP/1.1" 200 1514 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 348 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "POST /api/portfolio/analyze HTTP/1.1" 401 74 "-" "-"
  console.log
    🔧 Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:66:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 404 131 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:08 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 74 "-" "-"
  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/integration/auth/auth-flow.integration.test.js
  Authentication Flow Integration
    Token-Based Authentication Flow
      ✓ should handle dev bypass token authentication (7 ms)
      ✓ should reject invalid tokens (12 ms)
      ✕ should handle missing authorization header (9 ms)
    Authorization Header Validation
      ✓ should validate Bearer token format (13 ms)
      ✓ should handle case sensitivity in authorization (20 ms)
    Authentication Context Propagation
      ✓ should maintain authentication context across request pipeline (29 ms)
      ✓ should handle authentication in POST/PUT requests (8 ms)
    Multi-Request Authentication Sessions
      ✓ should handle multiple sequential authenticated requests (24 ms)
      ✓ should handle concurrent authenticated requests (28 ms)
    Authentication Error Handling
      ✓ should provide consistent error responses for auth failures (5 ms)
      ✓ should not leak sensitive information in auth errors (3 ms)
    Route-Specific Authentication
      ✓ should enforce authentication on protected routes (17 ms)
      ✓ should allow public access to public routes (14 ms)
      ✓ should handle mixed public/protected route access (13 ms)
    Authentication Performance
      ✓ should handle authentication efficiently (43 ms)
      ✓ should handle rapid authentication attempts (79 ms)
    Authentication Integration with Other Middleware
      ✓ should work with request validation (6 ms)
      ✓ should work with error handling middleware (6 ms)

  ● Authentication Flow Integration › Token-Based Authentication Flow › should handle missing authorization header

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 403, 500]

      87 |         const response = await request(app).get(endpoint);
      88 |
    > 89 |         expect([401, 403, 500]).toContain(response.status);
         |                                 ^
      90 |
      91 |         // Should return authentication error
      92 |         if (response.status === 401 || response.status === 403) {

      at Object.toContain (tests/integration/auth/auth-flow.integration.test.js:89:33)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

PASS tests/integration/database/rollback-scenarios.integration.test.js
  Database Rollback Scenarios Integration
    Automatic Rollback on Error
      ✓ should automatically rollback on SQL errors (22 ms)
      ✓ should rollback on application errors within transaction (4 ms)
    Explicit Rollback Scenarios
      ✓ should handle manual rollback calls (9 ms)
      ✓ should handle nested transaction scenarios (3 ms)
    Rollback with Complex Data Modifications
      ✓ should rollback complex multi-table operations (6 ms)
      ✓ should handle rollback with data type conversions and constraints (4 ms)
    Rollback Recovery and Cleanup
      ✓ should properly clean up resources after rollback (4 ms)
      ✓ should maintain database connection health after rollbacks (9 ms)
    Rollback with Real-World Scenarios
      ✓ should handle portfolio transaction rollback (5 ms)

  console.log
    JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

  console.log
    🚨 Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 496 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 496 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 496 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Handled 50 requests in 295ms

      at Object.log (tests/performance/api-load-testing.test.js:71:15)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /api/health

      at log (index.js:429:11)

  console.log
    Initializing database connection...

      at log (index.js:388:13)

  console.log
    Database connection established successfully

      at log (index.js:414:17)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /api/stocks/ping

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/stocks/ping HTTP/1.1" 200 74 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /api/health

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /api/stocks/ping

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/stocks/ping HTTP/1.1" 200 74 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /api/health

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /api/stocks/ping

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/stocks/ping HTTP/1.1" 200 74 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /api/health

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /api/stocks/ping

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/stocks/ping HTTP/1.1" 200 74 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /api/health

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /api/stocks/ping

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/stocks/ping HTTP/1.1" 200 74 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /api/health

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /api/stocks/ping

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/stocks/ping HTTP/1.1" 200 74 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /api/health

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /api/stocks/ping

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/stocks/ping HTTP/1.1" 200 74 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /api/health

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /api/stocks/ping

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/stocks/ping HTTP/1.1" 200 74 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 496 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Response status distribution: { '200': 25 }

      at Object.log (tests/performance/api-load-testing.test.js:97:15)

  console.log
    25/25 concurrent authenticated requests succeeded in 105ms

      at Object.log (tests/performance/api-load-testing.test.js:103:15)

  console.log
    Processing request: GET /api/stocks/sectors

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:36:13)

  console.log
    Processing request: GET /api/stocks/sectors

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:36:13)

  console.log
    Processing request: GET /api/stocks/sectors

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:36:13)

  console.log
    Processing request: GET /api/stocks/sectors

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:36:13)

  console.log
    Processing request: GET /api/stocks/sectors

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:36:13)

  console.log
    Processing request: GET /api/stocks/sectors

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:36:13)

  console.log
    Processing request: GET /api/stocks/sectors

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:36:13)

  console.log
    Processing request: GET /api/stocks/sectors

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:36:13)

  console.log
    Processing request: GET /api/stocks/sectors

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:36:13)

  console.log
    Processing request: GET /api/stocks/sectors

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:36:13)

  console.log
    Processing request: GET /api/stocks/sectors

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:36:13)

  console.log
    Processing request: GET /api/stocks/sectors

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:36:13)

  console.log
    Processing request: GET /api/stocks/sectors

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:36:13)

  console.log
    Processing request: GET /api/stocks/sectors

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:36:13)

  console.log
    Processing request: GET /api/stocks/sectors

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:36:13)

  console.log
    Processing request: GET /api/stocks/sectors

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:36:13)

  console.log
    Processing request: GET /api/stocks/sectors

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:36:13)

  console.log
    Processing request: GET /api/stocks/sectors

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:36:13)

  console.log
    Processing request: GET /api/stocks/sectors

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:36:13)

  console.log
    Processing request: GET /api/stocks/sectors

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:36:13)

  console.log
    ✅ Sectors query successful: 2 sectors found

      at log (routes/stocks.js:79:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 227 "-" "-"
  console.log
    ✅ Sectors query successful: 2 sectors found

      at log (routes/stocks.js:79:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 227 "-" "-"
  console.log
    ✅ Sectors query successful: 2 sectors found

      at log (routes/stocks.js:79:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 227 "-" "-"
  console.log
    ✅ Sectors query successful: 2 sectors found

      at log (routes/stocks.js:79:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 227 "-" "-"
  console.log
    ✅ Sectors query successful: 2 sectors found

      at log (routes/stocks.js:79:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 227 "-" "-"
  console.log
    ✅ Sectors query successful: 2 sectors found

      at log (routes/stocks.js:79:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 227 "-" "-"
  console.log
    ✅ Sectors query successful: 2 sectors found

      at log (routes/stocks.js:79:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 227 "-" "-"
  console.log
    ✅ Sectors query successful: 2 sectors found

      at log (routes/stocks.js:79:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 227 "-" "-"
  console.log
    ✅ Sectors query successful: 2 sectors found

      at log (routes/stocks.js:79:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 227 "-" "-"
  console.log
    ✅ Sectors query successful: 2 sectors found

      at log (routes/stocks.js:79:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 227 "-" "-"
  console.log
    ✅ Sectors query successful: 2 sectors found

      at log (routes/stocks.js:79:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 227 "-" "-"
  console.log
    ✅ Sectors query successful: 2 sectors found

      at log (routes/stocks.js:79:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 227 "-" "-"
  console.log
    ✅ Sectors query successful: 2 sectors found

      at log (routes/stocks.js:79:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 227 "-" "-"
  console.log
    ✅ Sectors query successful: 2 sectors found

      at log (routes/stocks.js:79:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 227 "-" "-"
  console.log
    ✅ Sectors query successful: 2 sectors found

      at log (routes/stocks.js:79:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 227 "-" "-"
  console.log
    ✅ Sectors query successful: 2 sectors found

      at log (routes/stocks.js:79:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 227 "-" "-"
  console.log
    ✅ Sectors query successful: 2 sectors found

      at log (routes/stocks.js:79:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 227 "-" "-"
  console.log
    ✅ Sectors query successful: 2 sectors found

      at log (routes/stocks.js:79:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 227 "-" "-"
  console.log
    ✅ Sectors query successful: 2 sectors found

      at log (routes/stocks.js:79:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 227 "-" "-"
  console.log
    ✅ Sectors query successful: 2 sectors found

      at log (routes/stocks.js:79:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 227 "-" "-"
  console.log
    Database load test: 4.75ms average response time

      at Object.log (tests/performance/api-load-testing.test.js:132:15)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 496 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 496 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 496 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Health endpoint: 6.50ms avg, 9ms max

      at Object.log (tests/performance/api-load-testing.test.js:159:15)

  console.log
    Processing request: GET /api/stocks/sectors

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:36:13)

  console.log
    ✅ Sectors query successful: 2 sectors found

      at log (routes/stocks.js:79:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 227 "-" "-"
  console.log
    Processing request: GET /api/stocks/sectors

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:36:13)

  console.log
    ✅ Sectors query successful: 2 sectors found

      at log (routes/stocks.js:79:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 227 "-" "-"
  console.log
    Processing request: GET /api/stocks/sectors

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:36:13)

  console.log
    ✅ Sectors query successful: 2 sectors found

      at log (routes/stocks.js:79:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 227 "-" "-"
  console.log
    Processing request: GET /api/stocks/sectors

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:36:13)

  console.log
    ✅ Sectors query successful: 2 sectors found

      at log (routes/stocks.js:79:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 227 "-" "-"
  console.log
    Processing request: GET /api/stocks/sectors

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:36:13)

  console.log
    ✅ Sectors query successful: 2 sectors found

      at log (routes/stocks.js:79:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 227 "-" "-"
  console.log
    /api/stocks/sectors: 5.60ms avg (target: 300ms)

      at Object.log (tests/performance/api-load-testing.test.js:191:17)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    /health: 6.60ms avg (target: 100ms)

      at Object.log (tests/performance/api-load-testing.test.js:191:17)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Large payload: 497 bytes in 6ms (82.83 bytes/ms)

      at Object.log (tests/performance/api-load-testing.test.js:214:15)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 496 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 496 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 496 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:09 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Rapid requests: 20 success, 0 rate-limited in 120ms

      at Object.log (tests/performance/api-load-testing.test.js:244:15)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:10 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:10 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:10 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:10 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:10 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:10 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:10 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:10 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:10 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:10 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:10 +0000] "GET /health HTTP/1.1" 200 496 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:10 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:10 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:10 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:10 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:10 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:10 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:10 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:10 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:10 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:10 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:10 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:10 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:10 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:10 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:10 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:10 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:10 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:10 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:10 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 496 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 496 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 496 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 495 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 496 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 496 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 496 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 496 "-" "-"
  console.log
    Memory usage - Initial: 670.70MB, Final: 665.67MB

      at Object.log (tests/performance/api-load-testing.test.js:299:15)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 496 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:11 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Connection cleanup test - Memory increase: 4.80MB

      at Object.log (tests/performance/api-load-testing.test.js:334:15)

  console.log
    Processing request: GET /health/database

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Received request for /health/database

      at log (routes/health.js:535:11)

  console.log
    Processing request: GET /health/database

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Received request for /health/database

      at log (routes/health.js:535:11)

  console.log
    Processing request: GET /health/database

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Received request for /health/database

      at log (routes/health.js:535:11)

  console.log
    Processing request: GET /health/database

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Received request for /health/database

      at log (routes/health.js:535:11)

  console.log
    Processing request: GET /health/database

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Received request for /health/database

      at log (routes/health.js:535:11)

  console.log
    Processing request: GET /health/database

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Received request for /health/database

      at log (routes/health.js:535:11)

  console.log
    Processing request: GET /health/database

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Received request for /health/database

      at log (routes/health.js:535:11)

  console.log
    Processing request: GET /health/database

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Received request for /health/database

      at log (routes/health.js:535:11)

  console.log
    Processing request: GET /health/database

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Received request for /health/database

      at log (routes/health.js:535:11)

  console.log
    Processing request: GET /health/database

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Received request for /health/database

      at log (routes/health.js:535:11)

  console.log
    Processing request: GET /health/database

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Received request for /health/database

      at log (routes/health.js:535:11)

  console.log
    Processing request: GET /health/database

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Received request for /health/database

      at log (routes/health.js:535:11)

  console.log
    Processing request: GET /health/database

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Received request for /health/database

      at log (routes/health.js:535:11)

  console.log
    Processing request: GET /health/database

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Received request for /health/database

      at log (routes/health.js:535:11)

  console.log
    Processing request: GET /health/database

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Received request for /health/database

      at log (routes/health.js:535:11)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health/database HTTP/1.1" 200 14849 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health/database HTTP/1.1" 200 14852 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health/database HTTP/1.1" 200 14852 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health/database HTTP/1.1" 200 14852 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health/database HTTP/1.1" 200 14851 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health/database HTTP/1.1" 200 14852 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health/database HTTP/1.1" 200 14852 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health/database HTTP/1.1" 200 14852 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health/database HTTP/1.1" 200 14852 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health/database HTTP/1.1" 200 14852 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health/database HTTP/1.1" 200 14852 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health/database HTTP/1.1" 200 14852 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health/database HTTP/1.1" 200 14852 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health/database HTTP/1.1" 200 14852 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health/database HTTP/1.1" 200 14852 "-" "-"
  console.log
    Database concurrent queries: 27.67ms average

      at Object.log (tests/performance/api-load-testing.test.js:361:15)

  console.log
    Processing request: GET /api/stocks/sectors

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:36:13)

  console.log
    ✅ Sectors query successful: 2 sectors found

      at log (routes/stocks.js:79:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 227 "-" "-"
  console.log
    Processing request: GET /api/stocks/sectors

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:36:13)

  console.log
    ✅ Sectors query successful: 2 sectors found

      at log (routes/stocks.js:79:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 227 "-" "-"
  console.log
    Processing request: GET /api/stocks/sectors

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:36:13)

  console.log
    ✅ Sectors query successful: 2 sectors found

      at log (routes/stocks.js:79:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 227 "-" "-"
  console.log
    Processing request: GET /api/stocks/sectors

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:36:13)

  console.log
    ✅ Sectors query successful: 2 sectors found

      at log (routes/stocks.js:79:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 227 "-" "-"
  console.log
    Processing request: GET /api/stocks/sectors

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:36:13)

  console.log
    ✅ Sectors query successful: 2 sectors found

      at log (routes/stocks.js:79:15)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 227 "-" "-"
  console.log
    Query performance with larger dataset: 5.20ms average

      at Object.log (tests/performance/api-load-testing.test.js:397:15)

  console.log
    Processing request: GET /api/nonexistent-endpoint

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/nonexistent-endpoint HTTP/1.1" 404 638 "-" "-"
  console.log
    Processing request: GET /api/nonexistent-endpoint

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/nonexistent-endpoint HTTP/1.1" 404 638 "-" "-"
  console.log
    Processing request: GET /api/nonexistent-endpoint

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/nonexistent-endpoint HTTP/1.1" 404 638 "-" "-"
  console.log
    Processing request: GET /api/nonexistent-endpoint

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/nonexistent-endpoint HTTP/1.1" 404 638 "-" "-"
  console.log
    Processing request: GET /api/nonexistent-endpoint

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/nonexistent-endpoint HTTP/1.1" 404 638 "-" "-"
  console.log
    Processing request: GET /api/nonexistent-endpoint

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/nonexistent-endpoint HTTP/1.1" 404 638 "-" "-"
  console.log
    Processing request: GET /api/nonexistent-endpoint

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/nonexistent-endpoint HTTP/1.1" 404 638 "-" "-"
  console.log
    Processing request: GET /api/nonexistent-endpoint

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/nonexistent-endpoint HTTP/1.1" 404 638 "-" "-"
  console.log
    Processing request: GET /api/nonexistent-endpoint

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/nonexistent-endpoint HTTP/1.1" 404 638 "-" "-"
  console.log
    Processing request: GET /api/nonexistent-endpoint

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/nonexistent-endpoint HTTP/1.1" 404 638 "-" "-"
  console.log
    Processing request: GET /api/nonexistent-endpoint

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/nonexistent-endpoint HTTP/1.1" 404 638 "-" "-"
  console.log
    Processing request: GET /api/nonexistent-endpoint

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/nonexistent-endpoint HTTP/1.1" 404 638 "-" "-"
  console.log
    Processing request: GET /api/nonexistent-endpoint

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/nonexistent-endpoint HTTP/1.1" 404 638 "-" "-"
  console.log
    Processing request: GET /api/nonexistent-endpoint

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/nonexistent-endpoint HTTP/1.1" 404 638 "-" "-"
  console.log
    Processing request: GET /api/nonexistent-endpoint

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/nonexistent-endpoint HTTP/1.1" 404 638 "-" "-"
  console.log
    Processing request: GET /api/nonexistent-endpoint

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/nonexistent-endpoint HTTP/1.1" 404 638 "-" "-"
  console.log
    Processing request: GET /api/nonexistent-endpoint

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/nonexistent-endpoint HTTP/1.1" 404 638 "-" "-"
  console.log
    Processing request: GET /api/nonexistent-endpoint

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/nonexistent-endpoint HTTP/1.1" 404 638 "-" "-"
  console.log
    Processing request: GET /api/nonexistent-endpoint

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/nonexistent-endpoint HTTP/1.1" 404 638 "-" "-"
  console.log
    Processing request: GET /api/nonexistent-endpoint

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/nonexistent-endpoint HTTP/1.1" 404 638 "-" "-"
  console.log
    Error handling: 2.55ms average for 404 responses

      at Object.log (tests/performance/api-load-testing.test.js:423:15)

  console.log
    Processing request: GET /api/portfolio/holdings

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 64 "-" "-"
  console.log
    Processing request: GET /api/portfolio/holdings

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 64 "-" "-"
  console.log
    Processing request: GET /api/portfolio/holdings

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 64 "-" "-"
  console.log
    Processing request: GET /api/portfolio/holdings

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 64 "-" "-"
  console.log
    Processing request: GET /api/portfolio/holdings

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 64 "-" "-"
  console.log
    Processing request: GET /api/portfolio/holdings

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 64 "-" "-"
  console.log
    Processing request: GET /api/portfolio/holdings

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 64 "-" "-"
  console.log
    Processing request: GET /api/portfolio/holdings

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 64 "-" "-"
  console.log
    Processing request: GET /api/portfolio/holdings

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 64 "-" "-"
  console.log
    Processing request: GET /api/portfolio/holdings

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 64 "-" "-"
  console.log
    Processing request: GET /api/portfolio/holdings

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 64 "-" "-"
  console.log
    Processing request: GET /api/portfolio/holdings

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 64 "-" "-"
  console.log
    Processing request: GET /api/portfolio/holdings

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 64 "-" "-"
  console.log
    Processing request: GET /api/portfolio/holdings

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 64 "-" "-"
  console.log
    Processing request: GET /api/portfolio/holdings

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 64 "-" "-"
  console.log
    Auth error handling: 2.60ms average

      at Object.log (tests/performance/api-load-testing.test.js:448:15)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health HTTP/1.1" 200 496 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
  console.log
    Processing request: GET /health/database

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Received request for /health/database

      at log (routes/health.js:535:11)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health/database HTTP/1.1" 200 14852 "-" "-"
  console.log
    Processing request: GET /health/database

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Received request for /health/database

      at log (routes/health.js:535:11)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health/database HTTP/1.1" 200 14852 "-" "-"
  console.log
    Processing request: GET /health/database

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Received request for /health/database

      at log (routes/health.js:535:11)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health/database HTTP/1.1" 200 14851 "-" "-"
  console.log
    Processing request: GET /health/database

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Received request for /health/database

      at log (routes/health.js:535:11)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health/database HTTP/1.1" 200 14852 "-" "-"
  console.log
    Processing request: GET /health/database

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Received request for /health/database

      at log (routes/health.js:535:11)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health/database HTTP/1.1" 200 14852 "-" "-"
  console.log
    Processing request: GET /health/database

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Received request for /health/database

      at log (routes/health.js:535:11)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health/database HTTP/1.1" 200 14852 "-" "-"
  console.log
    Processing request: GET /health/database

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Received request for /health/database

      at log (routes/health.js:535:11)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health/database HTTP/1.1" 200 14852 "-" "-"
  console.log
    Processing request: GET /health/database

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Received request for /health/database

      at log (routes/health.js:535:11)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health/database HTTP/1.1" 200 14852 "-" "-"
  console.log
    Processing request: GET /health/database

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Received request for /health/database

      at log (routes/health.js:535:11)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health/database HTTP/1.1" 200 14852 "-" "-"
  console.log
    Processing request: GET /health/database

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Received request for /health/database

      at log (routes/health.js:535:11)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health/database HTTP/1.1" 200 14852 "-" "-"
  console.log
    /health - Avg: 6.38ms, Min: 5.65ms, Max: 8.59ms, P95: 8.59ms

      at log (tests/performance/api-load-testing.test.js:487:17)
          at Array.forEach (<anonymous>)

  console.log
    /health/database - Avg: 70.09ms, Min: 65.47ms, Max: 84.47ms, P95: 84.47ms

      at log (tests/performance/api-load-testing.test.js:487:17)
          at Array.forEach (<anonymous>)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health/database

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Received request for /health/database

      at log (routes/health.js:535:11)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:12 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:13 +0000] "GET /health/database HTTP/1.1" 200 14852 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health/database

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Received request for /health/database

      at log (routes/health.js:535:11)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:13 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:13 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:13 +0000] "GET /health/database HTTP/1.1" 200 14852 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health/database

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Received request for /health/database

      at log (routes/health.js:535:11)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:13 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:13 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:13 +0000] "GET /health/database HTTP/1.1" 200 14852 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health/database

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Received request for /health/database

      at log (routes/health.js:535:11)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:13 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:13 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:13 +0000] "GET /health/database HTTP/1.1" 200 14852 "-" "-"
  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Processing request: GET /health/database

      at log (index.js:429:11)

  console.log
    Database connection verified for database-dependent endpoint

      at log (index.js:443:13)

  console.log
    Received request for /health/database

      at log (routes/health.js:535:11)

  console.log
    Processing request: GET /health

      at log (index.js:429:11)

  console.log
    Endpoint does not require database connection

      at log (index.js:436:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [26/Sep/2025:12:01:13 +0000] "GET /health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:13 +0000] "GET /health HTTP/1.1" 200 496 "-" "-"
::ffff:127.0.0.1 - - [26/Sep/2025:12:01:13 +0000] "GET /health/database HTTP/1.1" 200 14852 "-" "-"
  console.log
    Performance consistency - Avg: 83.20ms, StdDev: 2.40ms

      at Object.log (tests/performance/api-load-testing.test.js:532:15)

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

PASS tests/performance/api-load-testing.test.js
  API Load Testing and Performance
    Concurrent Request Handling
      ✓ should handle multiple concurrent health check requests (304 ms)
      ✓ should handle concurrent authenticated requests (107 ms)
      ✓ should maintain performance under database load (97 ms)
    Response Time Benchmarks
      ✓ health endpoint should respond quickly (65 ms)
      ✓ stock data endpoints should meet performance targets (63 ms)
      ✓ should maintain performance with large response payloads (6 ms)
    Rate Limiting and Throttling
      ✓ should handle rapid successive requests appropriately (122 ms)
      ✓ should recover from rate limiting gracefully (1187 ms)
    Memory and Resource Usage
      ✓ should maintain stable memory usage under load (297 ms)
      ✓ should handle connection cleanup properly (275 ms)
    Database Performance Under Load
      ✓ should handle concurrent database queries efficiently (417 ms)
      ✓ should maintain query performance with data growth (27 ms)
    Error Handling Performance
      ✓ should handle errors efficiently without performance degradation (52 ms)
      ✓ should handle authentication errors efficiently (40 ms)
    Performance Monitoring and Metrics
      ✓ should track response time metrics (767 ms)
      ✓ should maintain consistent performance across test run (417 ms)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

  console.log
    Step 1: Setting up risk limits...

      at Object.log (tests/integration/risk-management-workflow.integration.test.js:62:15)

  console.log
    ⚠️ Portfolio risk requested for user: integration-test-user

      at log (routes/trading.js:2323:13)

  console.error
    Database query error: {
      error: 'column "total_value" of relation "portfolio_holdings" does not exist',
      query: '\n' +
        '          INSERT INTO portfolio_holdings (\n' +
        '            user_id, symbol, quantity, average_cost, cur...',
      params: '10 parameters',
      code: '42703'
    }

      1335 |     return result;
      1336 |   } catch (error) {
    > 1337 |     console.error("Database query error:", {
           |             ^
      1338 |       error: error.message,
      1339 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      1340 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1337:13)
      at Object.<anonymous> (tests/integration/risk-management-workflow.integration.test.js:400:9)

  console.error
    Database query error: {
      error: 'column "total_value" of relation "portfolio_holdings" does not exist',
      query: '\n' +
        '        INSERT INTO portfolio_holdings (\n' +
        '          user_id, symbol, quantity, average_cost, current...',
      params: '10 parameters',
      code: '42703'
    }

      1335 |     return result;
      1336 |   } catch (error) {
    > 1337 |     console.error("Database query error:", {
           |             ^
      1338 |       error: error.message,
      1339 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      1340 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1337:13)
      at Object.<anonymous> (tests/integration/risk-management-workflow.integration.test.js:448:7)

  console.error
    Database query error: {
      error: 'column "total_value" of relation "portfolio_holdings" does not exist',
      query: '\n' +
        '        INSERT INTO portfolio_holdings (\n' +
        '          user_id, symbol, quantity, average_cost, current...',
      params: '10 parameters',
      code: '42703'
    }

      1335 |     return result;
      1336 |   } catch (error) {
    > 1337 |     console.error("Database query error:", {
           |             ^
      1338 |       error: error.message,
      1339 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      1340 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1337:13)
      at Object.<anonymous> (tests/integration/risk-management-workflow.integration.test.js:510:7)

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/integration/risk-management-workflow.integration.test.js
  Risk Management Workflow Integration Tests
    Complete Risk Management Workflow
      ✕ should execute full risk management lifecycle (10 ms)
      ✕ should handle empty portfolio risk analysis (4 ms)
      ✕ should handle multiple rapid position closes (2 ms)
      ✕ should maintain data consistency across concurrent operations (6 ms)
    Risk Limit Compliance Checking
      ✕ should detect and report risk limit violations (7 ms)

  ● Risk Management Workflow Integration Tests › Complete Risk Management Workflow › should execute full risk management lifecycle

    expected 200 "OK", got 401 "Unauthorized"

      76 |         .post("/api/trading/risk/limits")
      77 |         .send(riskLimits)
    > 78 |         .expect(200);
         |          ^
      79 |
      80 |       expect(limitsResponse.body.success).toBe(true);
      81 |       expect(limitsResponse.body.data.maxDrawdown).toBe(15.0);

      at Object.expect (tests/integration/risk-management-workflow.integration.test.js:78:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Risk Management Workflow Integration Tests › Complete Risk Management Workflow › should handle empty portfolio risk analysis

    TypeError: Cannot read properties of undefined (reading 'totalPositions')

      385 |
      386 |       expect(response.body.success).toBe(true);
    > 387 |       expect(response.body.data.portfolioSummary.totalPositions).toBe(0);
          |                                                  ^
      388 |       expect(response.body.data.portfolioSummary.totalValue).toBe(0);
      389 |       expect(response.body.data.riskMetrics.riskLevel).toBe("low");
      390 |       expect(response.body.data.recommendations).toContain(

      at Object.totalPositions (tests/integration/risk-management-workflow.integration.test.js:387:50)

  ● Risk Management Workflow Integration Tests › Complete Risk Management Workflow › should handle multiple rapid position closes

    error: column "total_value" of relation "portfolio_holdings" does not exist

      1306 |     });
      1307 |
    > 1308 |     const result = await Promise.race([
           |                    ^
      1309 |       pool.query(text, params),
      1310 |       timeoutPromise,
      1311 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1308:20)
      at Object.<anonymous> (tests/integration/risk-management-workflow.integration.test.js:400:9)

  ● Risk Management Workflow Integration Tests › Complete Risk Management Workflow › should maintain data consistency across concurrent operations

    error: column "total_value" of relation "portfolio_holdings" does not exist

      1306 |     });
      1307 |
    > 1308 |     const result = await Promise.race([
           |                    ^
      1309 |       pool.query(text, params),
      1310 |       timeoutPromise,
      1311 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1308:20)
      at Object.<anonymous> (tests/integration/risk-management-workflow.integration.test.js:448:7)

  ● Risk Management Workflow Integration Tests › Risk Limit Compliance Checking › should detect and report risk limit violations

    error: column "total_value" of relation "portfolio_holdings" does not exist

      1306 |     });
      1307 |
    > 1308 |     const result = await Promise.race([
           |                    ^
      1309 |       pool.query(text, params),
      1310 |       timeoutPromise,
      1311 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1308:20)
      at Object.<anonymous> (tests/integration/risk-management-workflow.integration.test.js:510:7)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    📊 Data API info requested

      at log (routes/data.js:18:13)

  console.error
    ❌ Data API info error: Error: Unexpected error
        at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/data.test.js:74:15)
        at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
        at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
        at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
        at log (/home/stocks/algo/webapp/lambda/routes/data.js:18:13)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
        at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
        at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at next (/home/stocks/algo/webapp/lambda/tests/unit/routes/data.test.js:48:7)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
        at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
        at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
        at Server.emit (node:events:524:28)
        at parserOnIncoming (node:_http_server:1141:12)
        at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      31 |   } catch (error) {
      32 |     try {
    > 33 |       console.error("❌ Data API info error:", error);
         |               ^
      34 |     } catch (e) {
      35 |       // Ignore console logging errors
      36 |     }

      at error (routes/data.js:33:15)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at next (tests/unit/routes/data.test.js:48:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

  console.log
    📊 [DATA] Fetching comprehensive data for AAPL

      at log (routes/data.js:233:15)

  console.log
    ✅ [DATA] Successfully fetched data for AAPL

      at log (routes/data.js:290:15)

  console.log
    📊 [DATA] Fetching comprehensive data for TSLA

      at log (routes/data.js:233:15)

  console.log
    ❌ [DATA] No data found for symbol TSLA

      at log (routes/data.js:268:17)

  console.log
    📊 [DATA] Fetching comprehensive data for INVALID

      at log (routes/data.js:233:15)

  console.log
    ❌ [DATA] No data found for symbol INVALID

      at log (routes/data.js:268:17)

  console.log
    📊 [DATA] Fetching comprehensive data for AAPL

      at log (routes/data.js:233:15)

  console.log
    ✅ [DATA] Successfully fetched data for AAPL

      at log (routes/data.js:290:15)

  console.log
    📊 [DATA] Fetching comprehensive data for AAPL

      at log (routes/data.js:233:15)

  console.log
    ✅ [DATA] Successfully fetched data for AAPL

      at log (routes/data.js:290:15)

  console.log
    📊 [DATA] Fetching comprehensive data for AAPL

      at log (routes/data.js:233:15)

  console.error
    ❌ [DATA] Error fetching data for AAPL: Error: Database connection failed
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/data.test.js:203:35)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      295 |   } catch (error) {
      296 |     try {
    > 297 |       console.error(`❌ [DATA] Error fetching data for ${symbolUpper}:`, error);
          |               ^
      298 |     } catch (e) {
      299 |       // Ignore console logging errors
      300 |     }

      at error (routes/data.js:297:15)

  console.log
    📊 [DATA] Fetching historical data for AAPL

      at log (routes/data.js:330:13)

  console.log
    ✅ [DATA] Retrieved 2 historical records for AAPL

      at log (routes/data.js:373:15)

  console.log
    📊 [DATA] Fetching historical data for AAPL

      at log (routes/data.js:330:13)

  console.log
    ✅ [DATA] Retrieved 1 historical records for AAPL

      at log (routes/data.js:373:15)

  console.log
    📊 [DATA] Fetching historical data for AAPL

      at log (routes/data.js:330:13)

  console.log
    ✅ [DATA] Retrieved 1 historical records for AAPL

      at log (routes/data.js:373:15)

  console.log
    📊 [DATA] Fetching historical data for AAPL

      at log (routes/data.js:330:13)

  console.log
    ✅ [DATA] Retrieved 1 historical records for AAPL

      at log (routes/data.js:373:15)

  console.log
    📊 [DATA] Fetching historical data for INVALID

      at log (routes/data.js:330:13)

  console.log
    ❌ [DATA] No historical data found for symbol INVALID

      at log (routes/data.js:361:17)

  console.log
    📊 [DATA] Fetching historical data for AAPL

      at log (routes/data.js:330:13)

  console.error
    ❌ [DATA] Error fetching historical data for AAPL: Error: Query timeout
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/data.test.js:323:35)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      385 |   } catch (error) {
      386 |     try {
    > 387 |       console.error(
          |               ^
      388 |         `❌ [DATA] Error fetching historical data for ${symbolUpper}:`,
      389 |         error
      390 |       );

      at error (routes/data.js:387:15)

  console.log
    📊 [DATA] Fetching real-time data for AAPL

      at log (routes/data.js:412:13)

  console.log
    ✅ [DATA] Retrieved historical data for AAPL

      at log (routes/data.js:447:15)

  console.log
    📊 [DATA] Fetching real-time data for INVALID

      at log (routes/data.js:412:13)

  console.log
    ❌ [DATA] No data found for symbol INVALID

      at log (routes/data.js:425:17)

  console.log
    📊 [DATA] Fetching real-time data for AAPL

      at log (routes/data.js:412:13)

  console.log
    ✅ [DATA] Retrieved historical data for AAPL

      at log (routes/data.js:447:15)

  console.log
    📊 [DATA] Fetching real-time data for AAPL

      at log (routes/data.js:412:13)

  console.error
    ❌ [DATA] Error fetching real-time data for AAPL: Error: Connection lost
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/data.test.js:393:35)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      457 |   } catch (error) {
      458 |     try {
    > 459 |       console.error(
          |               ^
      460 |         `❌ [DATA] Error fetching real-time data for ${symbolUpper}:`,
      461 |         error
      462 |       );

      at error (routes/data.js:459:15)

  console.log
    📊 [DATA] Fetching bulk data for 3 symbols

      at log (routes/data.js:67:13)

  console.log
    ✅ [DATA] Retrieved bulk data for 3/3 symbols

      at log (routes/data.js:90:15)

  console.log
    📊 [DATA] Fetching bulk data for 3 symbols

      at log (routes/data.js:67:13)

  console.log
    ✅ [DATA] Retrieved bulk data for 0/3 symbols

      at log (routes/data.js:90:15)

  console.log
    📊 [DATA] Fetching bulk data for 2 symbols

      at log (routes/data.js:67:13)

  console.log
    ✅ [DATA] Retrieved bulk data for 1/2 symbols

      at log (routes/data.js:90:15)

  console.log
    📊 [DATA] Fetching bulk data for 2 symbols

      at log (routes/data.js:67:13)

  console.error
    ❌ [DATA] Error fetching bulk data: Error: Database timeout
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/data.test.js:492:35)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      102 |   } catch (error) {
      103 |     try {
    > 104 |       console.error("❌ [DATA] Error fetching bulk data:", error);
          |               ^
      105 |     } catch (e) {
      106 |       // Ignore console logging errors
      107 |     }

      at error (routes/data.js:104:15)

  console.log
    📊 [DATA] Fetching comprehensive data for TEST@123

      at log (routes/data.js:233:15)

  console.log
    ❌ [DATA] No data found for symbol TEST@123

      at log (routes/data.js:268:17)

  console.log
    📊 [DATA] Fetching historical data for AAPL

      at log (routes/data.js:330:13)

  console.log
    ❌ [DATA] No historical data found for symbol AAPL

      at log (routes/data.js:361:17)

  console.log
    📊 [DATA] Fetching historical data for AAPL

      at log (routes/data.js:330:13)

  console.log
    ❌ [DATA] No historical data found for symbol AAPL

      at log (routes/data.js:361:17)

  console.log
    📊 [DATA] Fetching bulk data for 1 symbols

      at log (routes/data.js:67:13)

  console.log
    ✅ [DATA] Retrieved bulk data for 0/1 symbols

      at log (routes/data.js:90:15)

  console.log
    📊 Data API info requested

      at log (routes/data.js:18:13)

  console.log
    📊 Data API info requested

      at log (routes/data.js:18:13)

  console.log
    📊 [DATA] Fetching comprehensive data for AAPL

      at log (routes/data.js:233:15)

  console.log
    ✅ [DATA] Successfully fetched data for AAPL

      at log (routes/data.js:290:15)

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

FAIL tests/unit/routes/data.test.js
  Data Routes Unit Tests
    GET /data
      ✓ should return data API information (6 ms)
      ✓ should handle errors gracefully (13 ms)
    GET /data/:symbol
      ✕ should return comprehensive data for a symbol (4 ms)
      ✓ should handle symbol case conversion (3 ms)
      ✓ should return 404 when no data found (2 ms)
      ✓ should return data when only price data exists (6 ms)
      ✓ should return data when only technical data exists (2 ms)
      ✓ should handle database errors (3 ms)
    GET /data/historical/:symbol
      ✓ should return historical data for a symbol (3 ms)
      ✓ should handle query parameters (2 ms)
      ✓ should handle start parameter only (3 ms)
      ✓ should handle end parameter only (2 ms)
      ✓ should return 404 when no historical data found (2 ms)
      ✓ should handle database errors (2 ms)
    GET /data/realtime/:symbol
      ✓ should return real-time data for a symbol (3 ms)
      ✓ should return 404 when no real-time data found (2 ms)
      ✓ should add real_time flag and last_updated timestamp (5 ms)
      ✓ should handle database errors (2 ms)
    GET /data/bulk
      ✓ should return bulk data for multiple symbols (3 ms)
      ✓ should handle symbols with spaces and case conversion (2 ms)
      ✓ should return 400 when symbols parameter is missing (1 ms)
      ✓ should handle partial results (2 ms)
      ✓ should handle database errors (3 ms)
    Edge cases and error handling
      ✓ should handle special characters in symbols (2 ms)
      ✓ should handle very large limit parameters (2 ms)
      ✓ should handle non-numeric limit parameters (2 ms)
      ✓ should handle SQL injection attempts in bulk symbols (2 ms)
    Response format validation
      ✓ should return consistent JSON response format (2 ms)
      ✓ should include timestamp in ISO format (2 ms)
      ✓ should preserve data structure for symbol endpoint (2 ms)

  ● Data Routes Unit Tests › GET /data/:symbol › should return comprehensive data for a symbol

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "SELECT symbol, date, rsi, macd", ["AAPL"]
    Received
           1
              "
          SELECT symbol, date, open, high, low, close, adj_close, volume
          FROM price_daily·
          WHERE symbol = $1·
          ORDER BY date DESC·
          LIMIT 1
        ",
              ["AAPL"],
           2
              "
          SELECT symbol, date, rsi,
                 sma_20, sma_50, sma_200,
                 price_vs_sma_200, volume, price
          FROM technical_data_daily
          WHERE symbol = $1
          ORDER BY date DESC
          LIMIT 1
        ",
              ["AAPL"],

    Number of calls: 2

      141 |         ["AAPL"]
      142 |       );
    > 143 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      144 |         expect.stringContaining("SELECT symbol, date, rsi, macd"),
      145 |         ["AAPL"]
      146 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/data.test.js:143:25)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    {"timestamp":"2025-09-26T12:01:14.006Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Test error message","correlationId":"65965249","userId":"test123","operation":"test","severity":"ERROR"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

  console.log
    {"timestamp":"2025-09-26T12:01:14.008Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Test warning message","correlationId":"eefe5dbf","severity":"WARN"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

  console.log
    {"timestamp":"2025-09-26T12:01:14.009Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Test info message","correlationId":"ec77e1c1","severity":"INFO"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

  console.log
    {"timestamp":"2025-09-26T12:01:14.010Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Database operation: SELECT * FROM company_profile","correlationId":"5077e5d1","duration":150,"rows":25,"component":"database","operation":"SELECT * FROM company_profile","severity":"INFO"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

  console.log
    {"timestamp":"2025-09-26T12:01:14.011Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"API call: GET /api/portfolio","correlationId":"9c140316","userId":"test123","component":"api-client","method":"GET","url":"/api/portfolio","severity":"INFO"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

  console.log
    {"timestamp":"2025-09-26T12:01:14.012Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Authentication event: login_success","correlationId":"f798061c","userId":"test123","ip":"127.0.0.1","component":"auth","event":"login_success","severity":"INFO"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

  console.log
    {"timestamp":"2025-09-26T12:01:14.013Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Performance: portfolio_calculation completed in 250ms","correlationId":"1da31370","symbols":10,"userId":"test123","component":"performance","operation":"portfolio_calculation","duration_ms":250,"severity":"INFO"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

  console.log
    {"timestamp":"2025-09-26T12:01:14.013Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Security event: unauthorized_access_attempt","correlationId":"27c204b1","ip":"192.168.1.100","endpoint":"/admin","component":"security","event":"unauthorized_access_attempt","severity":"WARN"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

  console.log
    {"timestamp":1758888074014,"level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"User action: portfolio_view","correlationId":"c616f010","symbol":"AAPL","component":"user-action","userId":"test_use...","action":"portfolio_view","severity":"INFO"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

  console.log
    {"timestamp":"2025-09-26T12:01:14.015Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Portfolio calculation completed","correlationId":"b5aa1ad1","userId":"test123","portfolioId":"port456","symbols":["AAPL","GOOGL","MSFT"],"metrics":{"total_value":1250000,"gainLoss":5000,"returnPercent":5},"duration":150,"severity":"INFO"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

  console.log
    {"timestamp":"2025-09-26T12:01:14.016Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Database operation failed","correlationId":"364e204f","error":{"name":"Error","message":"Test database connection error","stack":"Error: Test database connection error\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/logger.test.js:295:21)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","code":"DB_CONNECTION_FAILED"},"severity":"ERROR"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

  console.log
    {"timestamp":"2025-09-26T12:01:14.024Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Configuration loaded","correlationId":"56f12ec3","component":"config","config":{"appName":"test-app","version":"1.0.0","apiKey":"[REDACTED]"},"severity":"INFO"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

  console.log
    {"timestamp":"2025-09-26T12:01:14.029Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Application starting","correlationId":"ac7d3f92","port":3000,"env":"test","component":"startup","nodeVersion":"v20.19.4","pid":296066,"memory":{"rss":1026256896,"heapTotal":885694464,"heapUsed":780611712,"external":38856273,"arrayBuffers":35391749},"severity":"INFO"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

  console.log
    {"timestamp":"2025-09-26T12:01:14.030Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Application shutting down","correlationId":"306f9990","reason":"test_shutdown","component":"shutdown","uptime":63.878272044,"severity":"INFO"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

  console.log
    {"timestamp":"2025-09-26T12:01:14.031Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Child logger test message","correlationId":"f9105e51","requestId":"req_789","userId":"user_xyz","severity":"INFO"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

  console.log
    {"timestamp":"2025-09-26T12:01:14.032Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Performance: slow_database_query completed in 6000ms","correlationId":"6bdb604a","query":"SELECT * FROM large_table","component":"performance","operation":"slow_database_query","duration_ms":6000,"slow_operation":true,"severity":"WARN"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

  console.log
    {"timestamp":"2025-09-26T12:01:14.033Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Performance: fast_api_call completed in 100ms","correlationId":"94f726be","endpoint":"/api/health","component":"performance","operation":"fast_api_call","duration_ms":100,"severity":"INFO"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

  console.log
    {"timestamp":"2025-09-26T12:01:14.033Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Test message","correlationId":"7b367b77","severity":"INFO"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

  console.log
    {"timestamp":"2025-09-26T12:01:14.034Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Test message","correlationId":"e54fd73e","severity":"INFO"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

  console.log
    {"timestamp":"2025-09-26T12:01:14.035Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Test message","correlationId":"e53c8137","severity":"INFO"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

  console.log
    {"timestamp":"2025-09-26T12:01:14.035Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Circular reference test","correlationId":"12cd1985","data":{"name":"test","self":"[Circular]"},"severity":"INFO"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

  console.log
    {"timestamp":"2025-09-26T12:01:14.036Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Large context test","correlationId":"c01b5bc5","data":[{"id":0,"value":"item_0"},{"id":1,"value":"item_1"},{"id":2,"value":"item_2"},{"id":3,"value":"item_3"},{"id":4,"value":"item_4"},{"id":5,"value":"item_5"},{"id":6,"value":"item_6"},{"id":7,"value":"item_7"},{"id":8,"value":"item_8"},{"id":9,"value":"item_9"},{"id":10,"value":"item_10"},{"id":11,"value":"item_11"},{"id":12,"value":"item_12"},{"id":13,"value":"item_13"},{"id":14,"value":"item_14"},{"id":15,"value":"item_15"},{"id":16,"value":"item_16"},{"id":17,"value":"item_17"},{"id":18,"value":"item_18"},{"id":19,"value":"item_19"},{"id":20,"value":"item_20"},{"id":21,"value":"item_21"},{"id":22,"value":"item_22"},{"id":23,"value":"item_23"},{"id":24,"value":"item_24"},{"id":25,"value":"item_25"},{"id":26,"value":"item_26"},{"id":27,"value":"item_27"},{"id":28,"value":"item_28"},{"id":29,"value":"item_29"},{"id":30,"value":"item_30"},{"id":31,"value":"item_31"},{"id":32,"value":"item_32"},{"id":33,"value":"item_33"},{"id":34,"value":"item_34"},{"id":35,"value":"item_35"},{"id":36,"value":"item_36"},{"id":37,"value":"item_37"},{"id":38,"value":"item_38"},{"id":39,"value":"item_39"},{"id":40,"value":"item_40"},{"id":41,"value":"item_41"},{"id":42,"value":"item_42"},{"id":43,"value":"item_43"},{"id":44,"value":"item_44"},{"id":45,"value":"item_45"},{"id":46,"value":"item_46"},{"id":47,"value":"item_47"},{"id":48,"value":"item_48"},{"id":49,"value":"item_49"},{"id":50,"value":"item_50"},{"id":51,"value":"item_51"},{"id":52,"value":"item_52"},{"id":53,"value":"item_53"},{"id":54,"value":"item_54"},{"id":55,"value":"item_55"},{"id":56,"value":"item_56"},{"id":57,"value":"item_57"},{"id":58,"value":"item_58"},{"id":59,"value":"item_59"},{"id":60,"value":"item_60"},{"id":61,"value":"item_61"},{"id":62,"value":"item_62"},{"id":63,"value":"item_63"},{"id":64,"value":"item_64"},{"id":65,"value":"item_65"},{"id":66,"value":"item_66"},{"id":67,"value":"item_67"},{"id":68,"value":"item_68"},{"id":69,"value":"item_69"},{"id":70,"value":"item_70"},{"id":71,"value":"item_71"},{"id":72,"value":"item_72"},{"id":73,"value":"item_73"},{"id":74,"value":"item_74"},{"id":75,"value":"item_75"},{"id":76,"value":"item_76"},{"id":77,"value":"item_77"},{"id":78,"value":"item_78"},{"id":79,"value":"item_79"},{"id":80,"value":"item_80"},{"id":81,"value":"item_81"},{"id":82,"value":"item_82"},{"id":83,"value":"item_83"},{"id":84,"value":"item_84"},{"id":85,"value":"item_85"},{"id":86,"value":"item_86"},{"id":87,"value":"item_87"},{"id":88,"value":"item_88"},{"id":89,"value":"item_89"},{"id":90,"value":"item_90"},{"id":91,"value":"item_91"},{"id":92,"value":"item_92"},{"id":93,"value":"item_93"},{"id":94,"value":"item_94"},{"id":95,"value":"item_95"},{"id":96,"value":"item_96"},{"id":97,"value":"item_97"},{"id":98,"value":"item_98"},{"id":99,"value":"item_99"},{"id":100,"value":"item_100"},{"id":101,"value":"item_101"},{"id":102,"value":"item_102"},{"id":103,"value":"item_103"},{"id":104,"value":"item_104"},{"id":105,"value":"item_105"},{"id":106,"value":"item_106"},{"id":107,"value":"item_107"},{"id":108,"value":"item_108"},{"id":109,"value":"item_109"},{"id":110,"value":"item_110"},{"id":111,"value":"item_111"},{"id":112,"value":"item_112"},{"id":113,"value":"item_113"},{"id":114,"value":"item_114"},{"id":115,"value":"item_115"},{"id":116,"value":"item_116"},{"id":117,"value":"item_117"},{"id":118,"value":"item_118"},{"id":119,"value":"item_119"},{"id":120,"value":"item_120"},{"id":121,"value":"item_121"},{"id":122,"value":"item_122"},{"id":123,"value":"item_123"},{"id":124,"value":"item_124"},{"id":125,"value":"item_125"},{"id":126,"value":"item_126"},{"id":127,"value":"item_127"},{"id":128,"value":"item_128"},{"id":129,"value":"item_129"},{"id":130,"value":"item_130"},{"id":131,"value":"item_131"},{"id":132,"value":"item_132"},{"id":133,"value":"item_133"},{"id":134,"value":"item_134"},{"id":135,"value":"item_135"},{"id":136,"value":"item_136"},{"id":137,"value":"item_137"},{"id":138,"value":"item_138"},{"id":139,"value":"item_139"},{"id":140,"value":"item_140"},{"id":141,"value":"item_141"},{"id":142,"value":"item_142"},{"id":143,"value":"item_143"},{"id":144,"value":"item_144"},{"id":145,"value":"item_145"},{"id":146,"value":"item_146"},{"id":147,"value":"item_147"},{"id":148,"value":"item_148"},{"id":149,"value":"item_149"},{"id":150,"value":"item_150"},{"id":151,"value":"item_151"},{"id":152,"value":"item_152"},{"id":153,"value":"item_153"},{"id":154,"value":"item_154"},{"id":155,"value":"item_155"},{"id":156,"value":"item_156"},{"id":157,"value":"item_157"},{"id":158,"value":"item_158"},{"id":159,"value":"item_159"},{"id":160,"value":"item_160"},{"id":161,"value":"item_161"},{"id":162,"value":"item_162"},{"id":163,"value":"item_163"},{"id":164,"value":"item_164"},{"id":165,"value":"item_165"},{"id":166,"value":"item_166"},{"id":167,"value":"item_167"},{"id":168,"value":"item_168"},{"id":169,"value":"item_169"},{"id":170,"value":"item_170"},{"id":171,"value":"item_171"},{"id":172,"value":"item_172"},{"id":173,"value":"item_173"},{"id":174,"value":"item_174"},{"id":175,"value":"item_175"},{"id":176,"value":"item_176"},{"id":177,"value":"item_177"},{"id":178,"value":"item_178"},{"id":179,"value":"item_179"},{"id":180,"value":"item_180"},{"id":181,"value":"item_181"},{"id":182,"value":"item_182"},{"id":183,"value":"item_183"},{"id":184,"value":"item_184"},{"id":185,"value":"item_185"},{"id":186,"value":"item_186"},{"id":187,"value":"item_187"},{"id":188,"value":"item_188"},{"id":189,"value":"item_189"},{"id":190,"value":"item_190"},{"id":191,"value":"item_191"},{"id":192,"value":"item_192"},{"id":193,"value":"item_193"},{"id":194,"value":"item_194"},{"id":195,"value":"item_195"},{"id":196,"value":"item_196"},{"id":197,"value":"item_197"},{"id":198,"value":"item_198"},{"id":199,"value":"item_199"},{"id":200,"value":"item_200"},{"id":201,"value":"item_201"},{"id":202,"value":"item_202"},{"id":203,"value":"item_203"},{"id":204,"value":"item_204"},{"id":205,"value":"item_205"},{"id":206,"value":"item_206"},{"id":207,"value":"item_207"},{"id":208,"value":"item_208"},{"id":209,"value":"item_209"},{"id":210,"value":"item_210"},{"id":211,"value":"item_211"},{"id":212,"value":"item_212"},{"id":213,"value":"item_213"},{"id":214,"value":"item_214"},{"id":215,"value":"item_215"},{"id":216,"value":"item_216"},{"id":217,"value":"item_217"},{"id":218,"value":"item_218"},{"id":219,"value":"item_219"},{"id":220,"value":"item_220"},{"id":221,"value":"item_221"},{"id":222,"value":"item_222"},{"id":223,"value":"item_223"},{"id":224,"value":"item_224"},{"id":225,"value":"item_225"},{"id":226,"value":"item_226"},{"id":227,"value":"item_227"},{"id":228,"value":"item_228"},{"id":229,"value":"item_229"},{"id":230,"value":"item_230"},{"id":231,"value":"item_231"},{"id":232,"value":"item_232"},{"id":233,"value":"item_233"},{"id":234,"value":"item_234"},{"id":235,"value":"item_235"},{"id":236,"value":"item_236"},{"id":237,"value":"item_237"},{"id":238,"value":"item_238"},{"id":239,"value":"item_239"},{"id":240,"value":"item_240"},{"id":241,"value":"item_241"},{"id":242,"value":"item_242"},{"id":243,"value":"item_243"},{"id":244,"value":"item_244"},{"id":245,"value":"item_245"},{"id":246,"value":"item_246"},{"id":247,"value":"item_247"},{"id":248,"value":"item_248"},{"id":249,"value":"item_249"},{"id":250,"value":"item_250"},{"id":251,"value":"item_251"},{"id":252,"value":"item_252"},{"id":253,"value":"item_253"},{"id":254,"value":"item_254"},{"id":255,"value":"item_255"},{"id":256,"value":"item_256"},{"id":257,"value":"item_257"},{"id":258,"value":"item_258"},{"id":259,"value":"item_259"},{"id":260,"value":"item_260"},{"id":261,"value":"item_261"},{"id":262,"value":"item_262"},{"id":263,"value":"item_263"},{"id":264,"value":"item_264"},{"id":265,"value":"item_265"},{"id":266,"value":"item_266"},{"id":267,"value":"item_267"},{"id":268,"value":"item_268"},{"id":269,"value":"item_269"},{"id":270,"value":"item_270"},{"id":271,"value":"item_271"},{"id":272,"value":"item_272"},{"id":273,"value":"item_273"},{"id":274,"value":"item_274"},{"id":275,"value":"item_275"},{"id":276,"value":"item_276"},{"id":277,"value":"item_277"},{"id":278,"value":"item_278"},{"id":279,"value":"item_279"},{"id":280,"value":"item_280"},{"id":281,"value":"item_281"},{"id":282,"value":"item_282"},{"id":283,"value":"item_283"},{"id":284,"value":"item_284"},{"id":285,"value":"item_285"},{"id":286,"value":"item_286"},{"id":287,"value":"item_287"},{"id":288,"value":"item_288"},{"id":289,"value":"item_289"},{"id":290,"value":"item_290"},{"id":291,"value":"item_291"},{"id":292,"value":"item_292"},{"id":293,"value":"item_293"},{"id":294,"value":"item_294"},{"id":295,"value":"item_295"},{"id":296,"value":"item_296"},{"id":297,"value":"item_297"},{"id":298,"value":"item_298"},{"id":299,"value":"item_299"},{"id":300,"value":"item_300"},{"id":301,"value":"item_301"},{"id":302,"value":"item_302"},{"id":303,"value":"item_303"},{"id":304,"value":"item_304"},{"id":305,"value":"item_305"},{"id":306,"value":"item_306"},{"id":307,"value":"item_307"},{"id":308,"value":"item_308"},{"id":309,"value":"item_309"},{"id":310,"value":"item_310"},{"id":311,"value":"item_311"},{"id":312,"value":"item_312"},{"id":313,"value":"item_313"},{"id":314,"value":"item_314"},{"id":315,"value":"item_315"},{"id":316,"value":"item_316"},{"id":317,"value":"item_317"},{"id":318,"value":"item_318"},{"id":319,"value":"item_319"},{"id":320,"value":"item_320"},{"id":321,"value":"item_321"},{"id":322,"value":"item_322"},{"id":323,"value":"item_323"},{"id":324,"value":"item_324"},{"id":325,"value":"item_325"},{"id":326,"value":"item_326"},{"id":327,"value":"item_327"},{"id":328,"value":"item_328"},{"id":329,"value":"item_329"},{"id":330,"value":"item_330"},{"id":331,"value":"item_331"},{"id":332,"value":"item_332"},{"id":333,"value":"item_333"},{"id":334,"value":"item_334"},{"id":335,"value":"item_335"},{"id":336,"value":"item_336"},{"id":337,"value":"item_337"},{"id":338,"value":"item_338"},{"id":339,"value":"item_339"},{"id":340,"value":"item_340"},{"id":341,"value":"item_341"},{"id":342,"value":"item_342"},{"id":343,"value":"item_343"},{"id":344,"value":"item_344"},{"id":345,"value":"item_345"},{"id":346,"value":"item_346"},{"id":347,"value":"item_347"},{"id":348,"value":"item_348"},{"id":349,"value":"item_349"},{"id":350,"value":"item_350"},{"id":351,"value":"item_351"},{"id":352,"value":"item_352"},{"id":353,"value":"item_353"},{"id":354,"value":"item_354"},{"id":355,"value":"item_355"},{"id":356,"value":"item_356"},{"id":357,"value":"item_357"},{"id":358,"value":"item_358"},{"id":359,"value":"item_359"},{"id":360,"value":"item_360"},{"id":361,"value":"item_361"},{"id":362,"value":"item_362"},{"id":363,"value":"item_363"},{"id":364,"value":"item_364"},{"id":365,"value":"item_365"},{"id":366,"value":"item_366"},{"id":367,"value":"item_367"},{"id":368,"value":"item_368"},{"id":369,"value":"item_369"},{"id":370,"value":"item_370"},{"id":371,"value":"item_371"},{"id":372,"value":"item_372"},{"id":373,"value":"item_373"},{"id":374,"value":"item_374"},{"id":375,"value":"item_375"},{"id":376,"value":"item_376"},{"id":377,"value":"item_377"},{"id":378,"value":"item_378"},{"id":379,"value":"item_379"},{"id":380,"value":"item_380"},{"id":381,"value":"item_381"},{"id":382,"value":"item_382"},{"id":383,"value":"item_383"},{"id":384,"value":"item_384"},{"id":385,"value":"item_385"},{"id":386,"value":"item_386"},{"id":387,"value":"item_387"},{"id":388,"value":"item_388"},{"id":389,"value":"item_389"},{"id":390,"value":"item_390"},{"id":391,"value":"item_391"},{"id":392,"value":"item_392"},{"id":393,"value":"item_393"},{"id":394,"value":"item_394"},{"id":395,"value":"item_395"},{"id":396,"value":"item_396"},{"id":397,"value":"item_397"},{"id":398,"value":"item_398"},{"id":399,"value":"item_399"},{"id":400,"value":"item_400"},{"id":401,"value":"item_401"},{"id":402,"value":"item_402"},{"id":403,"value":"item_403"},{"id":404,"value":"item_404"},{"id":405,"value":"item_405"},{"id":406,"value":"item_406"},{"id":407,"value":"item_407"},{"id":408,"value":"item_408"},{"id":409,"value":"item_409"},{"id":410,"value":"item_410"},{"id":411,"value":"item_411"},{"id":412,"value":"item_412"},{"id":413,"value":"item_413"},{"id":414,"value":"item_414"},{"id":415,"value":"item_415"},{"id":416,"value":"item_416"},{"id":417,"value":"item_417"},{"id":418,"value":"item_418"},{"id":419,"value":"item_419"},{"id":420,"value":"item_420"},{"id":421,"value":"item_421"},{"id":422,"value":"item_422"},{"id":423,"value":"item_423"},{"id":424,"value":"item_424"},{"id":425,"value":"item_425"},{"id":426,"value":"item_426"},{"id":427,"value":"item_427"},{"id":428,"value":"item_428"},{"id":429,"value":"item_429"},{"id":430,"value":"item_430"},{"id":431,"value":"item_431"},{"id":432,"value":"item_432"},{"id":433,"value":"item_433"},{"id":434,"value":"item_434"},{"id":435,"value":"item_435"},{"id":436,"value":"item_436"},{"id":437,"value":"item_437"},{"id":438,"value":"item_438"},{"id":439,"value":"item_439"},{"id":440,"value":"item_440"},{"id":441,"value":"item_441"},{"id":442,"value":"item_442"},{"id":443,"value":"item_443"},{"id":444,"value":"item_444"},{"id":445,"value":"item_445"},{"id":446,"value":"item_446"},{"id":447,"value":"item_447"},{"id":448,"value":"item_448"},{"id":449,"value":"item_449"},{"id":450,"value":"item_450"},{"id":451,"value":"item_451"},{"id":452,"value":"item_452"},{"id":453,"value":"item_453"},{"id":454,"value":"item_454"},{"id":455,"value":"item_455"},{"id":456,"value":"item_456"},{"id":457,"value":"item_457"},{"id":458,"value":"item_458"},{"id":459,"value":"item_459"},{"id":460,"value":"item_460"},{"id":461,"value":"item_461"},{"id":462,"value":"item_462"},{"id":463,"value":"item_463"},{"id":464,"value":"item_464"},{"id":465,"value":"item_465"},{"id":466,"value":"item_466"},{"id":467,"value":"item_467"},{"id":468,"value":"item_468"},{"id":469,"value":"item_469"},{"id":470,"value":"item_470"},{"id":471,"value":"item_471"},{"id":472,"value":"item_472"},{"id":473,"value":"item_473"},{"id":474,"value":"item_474"},{"id":475,"value":"item_475"},{"id":476,"value":"item_476"},{"id":477,"value":"item_477"},{"id":478,"value":"item_478"},{"id":479,"value":"item_479"},{"id":480,"value":"item_480"},{"id":481,"value":"item_481"},{"id":482,"value":"item_482"},{"id":483,"value":"item_483"},{"id":484,"value":"item_484"},{"id":485,"value":"item_485"},{"id":486,"value":"item_486"},{"id":487,"value":"item_487"},{"id":488,"value":"item_488"},{"id":489,"value":"item_489"},{"id":490,"value":"item_490"},{"id":491,"value":"item_491"},{"id":492,"value":"item_492"},{"id":493,"value":"item_493"},{"id":494,"value":"item_494"},{"id":495,"value":"item_495"},{"id":496,"value":"item_496"},{"id":497,"value":"item_497"},{"id":498,"value":"item_498"},{"id":499,"value":"item_499"},{"id":500,"value":"item_500"},{"id":501,"value":"item_501"},{"id":502,"value":"item_502"},{"id":503,"value":"item_503"},{"id":504,"value":"item_504"},{"id":505,"value":"item_505"},{"id":506,"value":"item_506"},{"id":507,"value":"item_507"},{"id":508,"value":"item_508"},{"id":509,"value":"item_509"},{"id":510,"value":"item_510"},{"id":511,"value":"item_511"},{"id":512,"value":"item_512"},{"id":513,"value":"item_513"},{"id":514,"value":"item_514"},{"id":515,"value":"item_515"},{"id":516,"value":"item_516"},{"id":517,"value":"item_517"},{"id":518,"value":"item_518"},{"id":519,"value":"item_519"},{"id":520,"value":"item_520"},{"id":521,"value":"item_521"},{"id":522,"value":"item_522"},{"id":523,"value":"item_523"},{"id":524,"value":"item_524"},{"id":525,"value":"item_525"},{"id":526,"value":"item_526"},{"id":527,"value":"item_527"},{"id":528,"value":"item_528"},{"id":529,"value":"item_529"},{"id":530,"value":"item_530"},{"id":531,"value":"item_531"},{"id":532,"value":"item_532"},{"id":533,"value":"item_533"},{"id":534,"value":"item_534"},{"id":535,"value":"item_535"},{"id":536,"value":"item_536"},{"id":537,"value":"item_537"},{"id":538,"value":"item_538"},{"id":539,"value":"item_539"},{"id":540,"value":"item_540"},{"id":541,"value":"item_541"},{"id":542,"value":"item_542"},{"id":543,"value":"item_543"},{"id":544,"value":"item_544"},{"id":545,"value":"item_545"},{"id":546,"value":"item_546"},{"id":547,"value":"item_547"},{"id":548,"value":"item_548"},{"id":549,"value":"item_549"},{"id":550,"value":"item_550"},{"id":551,"value":"item_551"},{"id":552,"value":"item_552"},{"id":553,"value":"item_553"},{"id":554,"value":"item_554"},{"id":555,"value":"item_555"},{"id":556,"value":"item_556"},{"id":557,"value":"item_557"},{"id":558,"value":"item_558"},{"id":559,"value":"item_559"},{"id":560,"value":"item_560"},{"id":561,"value":"item_561"},{"id":562,"value":"item_562"},{"id":563,"value":"item_563"},{"id":564,"value":"item_564"},{"id":565,"value":"item_565"},{"id":566,"value":"item_566"},{"id":567,"value":"item_567"},{"id":568,"value":"item_568"},{"id":569,"value":"item_569"},{"id":570,"value":"item_570"},{"id":571,"value":"item_571"},{"id":572,"value":"item_572"},{"id":573,"value":"item_573"},{"id":574,"value":"item_574"},{"id":575,"value":"item_575"},{"id":576,"value":"item_576"},{"id":577,"value":"item_577"},{"id":578,"value":"item_578"},{"id":579,"value":"item_579"},{"id":580,"value":"item_580"},{"id":581,"value":"item_581"},{"id":582,"value":"item_582"},{"id":583,"value":"item_583"},{"id":584,"value":"item_584"},{"id":585,"value":"item_585"},{"id":586,"value":"item_586"},{"id":587,"value":"item_587"},{"id":588,"value":"item_588"},{"id":589,"value":"item_589"},{"id":590,"value":"item_590"},{"id":591,"value":"item_591"},{"id":592,"value":"item_592"},{"id":593,"value":"item_593"},{"id":594,"value":"item_594"},{"id":595,"value":"item_595"},{"id":596,"value":"item_596"},{"id":597,"value":"item_597"},{"id":598,"value":"item_598"},{"id":599,"value":"item_599"},{"id":600,"value":"item_600"},{"id":601,"value":"item_601"},{"id":602,"value":"item_602"},{"id":603,"value":"item_603"},{"id":604,"value":"item_604"},{"id":605,"value":"item_605"},{"id":606,"value":"item_606"},{"id":607,"value":"item_607"},{"id":608,"value":"item_608"},{"id":609,"value":"item_609"},{"id":610,"value":"item_610"},{"id":611,"value":"item_611"},{"id":612,"value":"item_612"},{"id":613,"value":"item_613"},{"id":614,"value":"item_614"},{"id":615,"value":"item_615"},{"id":616,"value":"item_616"},{"id":617,"value":"item_617"},{"id":618,"value":"item_618"},{"id":619,"value":"item_619"},{"id":620,"value":"item_620"},{"id":621,"value":"item_621"},{"id":622,"value":"item_622"},{"id":623,"value":"item_623"},{"id":624,"value":"item_624"},{"id":625,"value":"item_625"},{"id":626,"value":"item_626"},{"id":627,"value":"item_627"},{"id":628,"value":"item_628"},{"id":629,"value":"item_629"},{"id":630,"value":"item_630"},{"id":631,"value":"item_631"},{"id":632,"value":"item_632"},{"id":633,"value":"item_633"},{"id":634,"value":"item_634"},{"id":635,"value":"item_635"},{"id":636,"value":"item_636"},{"id":637,"value":"item_637"},{"id":638,"value":"item_638"},{"id":639,"value":"item_639"},{"id":640,"value":"item_640"},{"id":641,"value":"item_641"},{"id":642,"value":"item_642"},{"id":643,"value":"item_643"},{"id":644,"value":"item_644"},{"id":645,"value":"item_645"},{"id":646,"value":"item_646"},{"id":647,"value":"item_647"},{"id":648,"value":"item_648"},{"id":649,"value":"item_649"},{"id":650,"value":"item_650"},{"id":651,"value":"item_651"},{"id":652,"value":"item_652"},{"id":653,"value":"item_653"},{"id":654,"value":"item_654"},{"id":655,"value":"item_655"},{"id":656,"value":"item_656"},{"id":657,"value":"item_657"},{"id":658,"value":"item_658"},{"id":659,"value":"item_659"},{"id":660,"value":"item_660"},{"id":661,"value":"item_661"},{"id":662,"value":"item_662"},{"id":663,"value":"item_663"},{"id":664,"value":"item_664"},{"id":665,"value":"item_665"},{"id":666,"value":"item_666"},{"id":667,"value":"item_667"},{"id":668,"value":"item_668"},{"id":669,"value":"item_669"},{"id":670,"value":"item_670"},{"id":671,"value":"item_671"},{"id":672,"value":"item_672"},{"id":673,"value":"item_673"},{"id":674,"value":"item_674"},{"id":675,"value":"item_675"},{"id":676,"value":"item_676"},{"id":677,"value":"item_677"},{"id":678,"value":"item_678"},{"id":679,"value":"item_679"},{"id":680,"value":"item_680"},{"id":681,"value":"item_681"},{"id":682,"value":"item_682"},{"id":683,"value":"item_683"},{"id":684,"value":"item_684"},{"id":685,"value":"item_685"},{"id":686,"value":"item_686"},{"id":687,"value":"item_687"},{"id":688,"value":"item_688"},{"id":689,"value":"item_689"},{"id":690,"value":"item_690"},{"id":691,"value":"item_691"},{"id":692,"value":"item_692"},{"id":693,"value":"item_693"},{"id":694,"value":"item_694"},{"id":695,"value":"item_695"},{"id":696,"value":"item_696"},{"id":697,"value":"item_697"},{"id":698,"value":"item_698"},{"id":699,"value":"item_699"},{"id":700,"value":"item_700"},{"id":701,"value":"item_701"},{"id":702,"value":"item_702"},{"id":703,"value":"item_703"},{"id":704,"value":"item_704"},{"id":705,"value":"item_705"},{"id":706,"value":"item_706"},{"id":707,"value":"item_707"},{"id":708,"value":"item_708"},{"id":709,"value":"item_709"},{"id":710,"value":"item_710"},{"id":711,"value":"item_711"},{"id":712,"value":"item_712"},{"id":713,"value":"item_713"},{"id":714,"value":"item_714"},{"id":715,"value":"item_715"},{"id":716,"value":"item_716"},{"id":717,"value":"item_717"},{"id":718,"value":"item_718"},{"id":719,"value":"item_719"},{"id":720,"value":"item_720"},{"id":721,"value":"item_721"},{"id":722,"value":"item_722"},{"id":723,"value":"item_723"},{"id":724,"value":"item_724"},{"id":725,"value":"item_725"},{"id":726,"value":"item_726"},{"id":727,"value":"item_727"},{"id":728,"value":"item_728"},{"id":729,"value":"item_729"},{"id":730,"value":"item_730"},{"id":731,"value":"item_731"},{"id":732,"value":"item_732"},{"id":733,"value":"item_733"},{"id":734,"value":"item_734"},{"id":735,"value":"item_735"},{"id":736,"value":"item_736"},{"id":737,"value":"item_737"},{"id":738,"value":"item_738"},{"id":739,"value":"item_739"},{"id":740,"value":"item_740"},{"id":741,"value":"item_741"},{"id":742,"value":"item_742"},{"id":743,"value":"item_743"},{"id":744,"value":"item_744"},{"id":745,"value":"item_745"},{"id":746,"value":"item_746"},{"id":747,"value":"item_747"},{"id":748,"value":"item_748"},{"id":749,"value":"item_749"},{"id":750,"value":"item_750"},{"id":751,"value":"item_751"},{"id":752,"value":"item_752"},{"id":753,"value":"item_753"},{"id":754,"value":"item_754"},{"id":755,"value":"item_755"},{"id":756,"value":"item_756"},{"id":757,"value":"item_757"},{"id":758,"value":"item_758"},{"id":759,"value":"item_759"},{"id":760,"value":"item_760"},{"id":761,"value":"item_761"},{"id":762,"value":"item_762"},{"id":763,"value":"item_763"},{"id":764,"value":"item_764"},{"id":765,"value":"item_765"},{"id":766,"value":"item_766"},{"id":767,"value":"item_767"},{"id":768,"value":"item_768"},{"id":769,"value":"item_769"},{"id":770,"value":"item_770"},{"id":771,"value":"item_771"},{"id":772,"value":"item_772"},{"id":773,"value":"item_773"},{"id":774,"value":"item_774"},{"id":775,"value":"item_775"},{"id":776,"value":"item_776"},{"id":777,"value":"item_777"},{"id":778,"value":"item_778"},{"id":779,"value":"item_779"},{"id":780,"value":"item_780"},{"id":781,"value":"item_781"},{"id":782,"value":"item_782"},{"id":783,"value":"item_783"},{"id":784,"value":"item_784"},{"id":785,"value":"item_785"},{"id":786,"value":"item_786"},{"id":787,"value":"item_787"},{"id":788,"value":"item_788"},{"id":789,"value":"item_789"},{"id":790,"value":"item_790"},{"id":791,"value":"item_791"},{"id":792,"value":"item_792"},{"id":793,"value":"item_793"},{"id":794,"value":"item_794"},{"id":795,"value":"item_795"},{"id":796,"value":"item_796"},{"id":797,"value":"item_797"},{"id":798,"value":"item_798"},{"id":799,"value":"item_799"},{"id":800,"value":"item_800"},{"id":801,"value":"item_801"},{"id":802,"value":"item_802"},{"id":803,"value":"item_803"},{"id":804,"value":"item_804"},{"id":805,"value":"item_805"},{"id":806,"value":"item_806"},{"id":807,"value":"item_807"},{"id":808,"value":"item_808"},{"id":809,"value":"item_809"},{"id":810,"value":"item_810"},{"id":811,"value":"item_811"},{"id":812,"value":"item_812"},{"id":813,"value":"item_813"},{"id":814,"value":"item_814"},{"id":815,"value":"item_815"},{"id":816,"value":"item_816"},{"id":817,"value":"item_817"},{"id":818,"value":"item_818"},{"id":819,"value":"item_819"},{"id":820,"value":"item_820"},{"id":821,"value":"item_821"},{"id":822,"value":"item_822"},{"id":823,"value":"item_823"},{"id":824,"value":"item_824"},{"id":825,"value":"item_825"},{"id":826,"value":"item_826"},{"id":827,"value":"item_827"},{"id":828,"value":"item_828"},{"id":829,"value":"item_829"},{"id":830,"value":"item_830"},{"id":831,"value":"item_831"},{"id":832,"value":"item_832"},{"id":833,"value":"item_833"},{"id":834,"value":"item_834"},{"id":835,"value":"item_835"},{"id":836,"value":"item_836"},{"id":837,"value":"item_837"},{"id":838,"value":"item_838"},{"id":839,"value":"item_839"},{"id":840,"value":"item_840"},{"id":841,"value":"item_841"},{"id":842,"value":"item_842"},{"id":843,"value":"item_843"},{"id":844,"value":"item_844"},{"id":845,"value":"item_845"},{"id":846,"value":"item_846"},{"id":847,"value":"item_847"},{"id":848,"value":"item_848"},{"id":849,"value":"item_849"},{"id":850,"value":"item_850"},{"id":851,"value":"item_851"},{"id":852,"value":"item_852"},{"id":853,"value":"item_853"},{"id":854,"value":"item_854"},{"id":855,"value":"item_855"},{"id":856,"value":"item_856"},{"id":857,"value":"item_857"},{"id":858,"value":"item_858"},{"id":859,"value":"item_859"},{"id":860,"value":"item_860"},{"id":861,"value":"item_861"},{"id":862,"value":"item_862"},{"id":863,"value":"item_863"},{"id":864,"value":"item_864"},{"id":865,"value":"item_865"},{"id":866,"value":"item_866"},{"id":867,"value":"item_867"},{"id":868,"value":"item_868"},{"id":869,"value":"item_869"},{"id":870,"value":"item_870"},{"id":871,"value":"item_871"},{"id":872,"value":"item_872"},{"id":873,"value":"item_873"},{"id":874,"value":"item_874"},{"id":875,"value":"item_875"},{"id":876,"value":"item_876"},{"id":877,"value":"item_877"},{"id":878,"value":"item_878"},{"id":879,"value":"item_879"},{"id":880,"value":"item_880"},{"id":881,"value":"item_881"},{"id":882,"value":"item_882"},{"id":883,"value":"item_883"},{"id":884,"value":"item_884"},{"id":885,"value":"item_885"},{"id":886,"value":"item_886"},{"id":887,"value":"item_887"},{"id":888,"value":"item_888"},{"id":889,"value":"item_889"},{"id":890,"value":"item_890"},{"id":891,"value":"item_891"},{"id":892,"value":"item_892"},{"id":893,"value":"item_893"},{"id":894,"value":"item_894"},{"id":895,"value":"item_895"},{"id":896,"value":"item_896"},{"id":897,"value":"item_897"},{"id":898,"value":"item_898"},{"id":899,"value":"item_899"},{"id":900,"value":"item_900"},{"id":901,"value":"item_901"},{"id":902,"value":"item_902"},{"id":903,"value":"item_903"},{"id":904,"value":"item_904"},{"id":905,"value":"item_905"},{"id":906,"value":"item_906"},{"id":907,"value":"item_907"},{"id":908,"value":"item_908"},{"id":909,"value":"item_909"},{"id":910,"value":"item_910"},{"id":911,"value":"item_911"},{"id":912,"value":"item_912"},{"id":913,"value":"item_913"},{"id":914,"value":"item_914"},{"id":915,"value":"item_915"},{"id":916,"value":"item_916"},{"id":917,"value":"item_917"},{"id":918,"value":"item_918"},{"id":919,"value":"item_919"},{"id":920,"value":"item_920"},{"id":921,"value":"item_921"},{"id":922,"value":"item_922"},{"id":923,"value":"item_923"},{"id":924,"value":"item_924"},{"id":925,"value":"item_925"},{"id":926,"value":"item_926"},{"id":927,"value":"item_927"},{"id":928,"value":"item_928"},{"id":929,"value":"item_929"},{"id":930,"value":"item_930"},{"id":931,"value":"item_931"},{"id":932,"value":"item_932"},{"id":933,"value":"item_933"},{"id":934,"value":"item_934"},{"id":935,"value":"item_935"},{"id":936,"value":"item_936"},{"id":937,"value":"item_937"},{"id":938,"value":"item_938"},{"id":939,"value":"item_939"},{"id":940,"value":"item_940"},{"id":941,"value":"item_941"},{"id":942,"value":"item_942"},{"id":943,"value":"item_943"},{"id":944,"value":"item_944"},{"id":945,"value":"item_945"},{"id":946,"value":"item_946"},{"id":947,"value":"item_947"},{"id":948,"value":"item_948"},{"id":949,"value":"item_949"},{"id":950,"value":"item_950"},{"id":951,"value":"item_951"},{"id":952,"value":"item_952"},{"id":953,"value":"item_953"},{"id":954,"value":"item_954"},{"id":955,"value":"item_955"},{"id":956,"value":"item_956"},{"id":957,"value":"item_957"},{"id":958,"value":"item_958"},{"id":959,"value":"item_959"},{"id":960,"value":"item_960"},{"id":961,"value":"item_961"},{"id":962,"value":"item_962"},{"id":963,"value":"item_963"},{"id":964,"value":"item_964"},{"id":965,"value":"item_965"},{"id":966,"value":"item_966"},{"id":967,"value":"item_967"},{"id":968,"value":"item_968"},{"id":969,"value":"item_969"},{"id":970,"value":"item_970"},{"id":971,"value":"item_971"},{"id":972,"value":"item_972"},{"id":973,"value":"item_973"},{"id":974,"value":"item_974"},{"id":975,"value":"item_975"},{"id":976,"value":"item_976"},{"id":977,"value":"item_977"},{"id":978,"value":"item_978"},{"id":979,"value":"item_979"},{"id":980,"value":"item_980"},{"id":981,"value":"item_981"},{"id":982,"value":"item_982"},{"id":983,"value":"item_983"},{"id":984,"value":"item_984"},{"id":985,"value":"item_985"},{"id":986,"value":"item_986"},{"id":987,"value":"item_987"},{"id":988,"value":"item_988"},{"id":989,"value":"item_989"},{"id":990,"value":"item_990"},{"id":991,"value":"item_991"},{"id":992,"value":"item_992"},{"id":993,"value":"item_993"},{"id":994,"value":"item_994"},{"id":995,"value":"item_995"},{"id":996,"value":"item_996"},{"id":997,"value":"item_997"},{"id":998,"value":"item_998"},{"id":999,"value":"item_999"}],"severity":"INFO"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

PASS tests/integration/utils/logger.test.js
  Logger Integration Tests
    Basic Logging Methods
      ✓ should have all required logging methods (1 ms)
      ✓ should log error messages with context (2 ms)
      ✓ should log warn messages (1 ms)
      ✓ should log info messages (1 ms)
      ✓ should log debug messages
    Specialized Logging Methods
      ✓ should log database operations (1 ms)
      ✓ should log API calls
      ✓ should log authentication events
      ✓ should log performance metrics (1 ms)
      ✓ should log security events (1 ms)
      ✓ should log user actions with anonymized user ID (1 ms)
    Structured Logging
      ✓ should handle structured data in context (1 ms)
      ✓ should handle error objects with stack traces (6 ms)
    Logger Configuration
      ✓ should respect log levels (1 ms)
      ✓ should have service metadata
      ✓ should generate correlation IDs
    Log Entry Structure
      ✓ should create proper log entry structure
      ✓ should check log level filtering (1 ms)
    Middleware Functions
      ✓ should provide request middleware
      ✓ should provide error middleware
    Configuration Utilities
      ✓ should sanitize configuration data
      ✓ should log configuration loaded event (5 ms)
    Application Lifecycle Logging
      ✓ should log application startup (1 ms)
      ✓ should log application shutdown
    Child Logger Functionality
      ✓ should create child logger with additional context
      ✓ should use child logger with inherited context (1 ms)
    Performance Logging Edge Cases
      ✓ should warn on slow operations
      ✓ should log normal operations as info (1 ms)
    Error Handling
      ✓ should handle null or undefined context gracefully (2 ms)
      ✓ should handle circular references in context (1 ms)
      ✓ should handle very large context objects (1 ms)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

PASS tests/integration/utils/tradingModeHelper.test.js
  Trading Mode Helper Integration Tests
    Trading Mode Management
      ✓ should get current trading mode (2 ms)
      ✓ should switch to paper trading mode (1 ms)
      ✓ should switch to live trading mode with validation (2 ms)
      ✓ should handle simulation mode
    Mode Validation
      ✓ should validate paper trading requirements (1 ms)
      ✓ should validate live trading requirements
      ✓ should prevent unauthorized mode switches (3 ms)
    Trading Environment Configuration
      ✓ should configure paper trading environment
      ✓ should configure live trading environment
      ✓ should handle environment health checks (1 ms)
    Risk Management Integration
      ✓ should enforce risk limits by trading mode
      ✓ should adjust risk limits based on trading mode (2 ms)
    Mode-Specific Features
      ✓ should handle paper trading simulations (1 ms)
      ✓ should track paper trading performance
      ✓ should handle backtesting mode (1 ms)
    Data Isolation and Security
      ✓ should maintain data isolation between modes (1 ms)
      ✓ should secure live trading credentials
    Performance and Monitoring
      ✓ should monitor mode switching performance (1 ms)
      ✓ should handle concurrent mode operations (6 ms)
    Error Handling and Edge Cases
      ✓ should handle invalid mode transitions
      ✓ should handle system failures gracefully
      ✓ should handle network connectivity issues
    Audit and Compliance
      ✓ should log all mode changes (1 ms)
      ✓ should maintain compliance records

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    ✅ Test cleanup complete

      at Object.log (tests/setup.js:36:13)

PASS tests/unit/utils/performanceMonitor.test.js
  Performance Monitor
    operation tracking
      ✓ should start and end operations (1 ms)
      ✓ should handle duplicate operation start
      ✓ should handle ending non-existent operation
      ✓ should record operation metrics (11 ms)
    metrics collection
      ✓ should record custom metrics (1 ms)
      ✓ should get performance statistics
      ✓ should calculate system health
    performance analysis
      ✓ should identify slow operations
      ✓ should calculate percentiles
      ✓ should get performance summary (1 ms)
    specialized metrics
      ✓ should track API request metrics
      ✓ should track database metrics
      ✓ should track external API metrics (1 ms)
      ✓ should generate response time histogram
    time utility
      ✓ should time async operations (11 ms)
      ✓ should time sync operations
      ✓ should handle operation errors in time utility (12 ms)
    Express middleware
      ✓ should create middleware function
      ✓ should categorize requests (1 ms)
    alerts and monitoring
      ✓ should get alerts
      ✓ should get active alerts
    data management
      ✓ should export metrics
      ✓ should import metrics
      ✓ should clear history
      ✓ should reset monitor
    advanced analytics
      ✓ should get real-time dashboard data (1 ms)
      ✓ should set custom thresholds (4 ms)
      ✓ should set history size
      ✓ should cleanup memory periodically
      ✓ should cleanup orphaned operations
    error handling and edge cases
      ✓ should handle invalid metrics
      ✓ should handle invalid operation IDs
      ✓ should handle edge case percentile calculations
      ✓ should handle concurrent access (10 ms)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    ✅ Real database connection established for tests

      at Object.log (tests/setup.js:26:13)

  console.log
    💰 Dividend history requested for AAPL

      at log (routes/dividend.js:576:11)

  console.log
    💰 Dividend history requested for AAPL

      at log (routes/dividend.js:576:11)

  console.log
    💰 Dividend history requested for BRK.B

      at log (routes/dividend.js:576:11)

  console.log
    💰 Dividend history requested for AAPL

      at log (routes/dividend.js:576:11)

