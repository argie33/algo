
> financial-dashboard-lambda@1.0.0 test
> jest --coverage --coverageReporters=text --coverageReporters=html --coverageReporters=lcov

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:03 +0000] "GET /api/trading HTTP/1.1" 200 193 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:03 +0000] "GET /api/trading HTTP/1.1" 200 193 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:03 +0000] "GET /api/trading HTTP/1.1" 200 193 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:03 +0000] "GET /api/trading HTTP/1.1" 200 193 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:03 +0000] "GET /api/trading HTTP/1.1" 200 193 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:03 +0000] "GET /api/trading HTTP/1.1" 200 193 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:03 +0000] "GET /api/trading/health HTTP/1.1" 200 137 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:03 +0000] "GET /api/trading/health HTTP/1.1" 200 137 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:03 +0000] "GET /api/trading/health HTTP/1.1" 200 137 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:03 +0000] "GET /api/trading/health HTTP/1.1" 200 137 "-" "-"
  console.log
    [TRADING] Debug endpoint called

      at log (routes/trading.js:163:11)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:03 +0000] "GET /api/trading/debug HTTP/1.1" 200 365 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:220:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:03 +0000] "GET /api/trading/signals HTTP/1.1" 200 47171 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:220:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:03 +0000] "GET /api/trading/signals?limit=50 HTTP/1.1" 200 24125 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: AAPL, type: undefined, timeframe: daily

      at log (routes/trading.js:220:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:03 +0000] "GET /api/trading/signals?symbol=AAPL&limit=25 HTTP/1.1" 200 12285 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: undefined, type: buy, timeframe: daily

      at log (routes/trading.js:220:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:03 +0000] "GET /api/trading/signals?signal_type=buy&limit=25 HTTP/1.1" 200 12418 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:220:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:03 +0000] "GET /api/trading/signals?limit=invalid HTTP/1.1" 400 59 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:220:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:03 +0000] "GET /api/trading/signals?limit=1000 HTTP/1.1" 400 51 "-" "-"
  console.log
    [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:463:11)

  console.log
    [TRADING] Request URL: /signals/daily

      at log (routes/trading.js:464:11)

  console.log
    [TRADING] Received request for /signals/:timeframe {
      params: { timeframe: 'daily' },
      query: {},
      path: '/signals/daily',
      method: 'GET',
      time: '2025-09-29T08:46:03.810Z'
    }

      at log (routes/trading.js:465:11)

  console.log
    [TRADING] Table existence check results:

      at log (routes/trading.js:750:13)

  console.log
      Main table exists: true

      at log (routes/trading.js:751:13)

  console.log
      Company profile exists: true

      at log (routes/trading.js:752:13)

  console.log
      Price daily exists: true

      at log (routes/trading.js:753:13)

  console.log
    [TRADING] Executing SQL: 
            SELECT 
              bs.symbol,
              bs.date,
              bs.signal as signal,
              bs.close as price,
              bs.stoplevel as stoplevel,
              bs.inposition as inposition,
              pd.close as current_price,
              cp.short_name as company_name,
              cp.sector as sector,
              NULL as market_cap,
              NULL as trailing_pe,
              NULL as dividend_yield,
              CASE 
                WHEN bs.signal = 'BUY' AND pd.close > bs.close
                THEN ((pd.close - bs.close) / bs.close * 100)
                WHEN bs.signal = 'SELL' AND pd.close < bs.close
                THEN ((bs.close - pd.close) / bs.close * 100)
                ELSE 0
              END as performance_percent
            FROM buy_sell_daily bs
            LEFT JOIN company_profile cp ON bs.symbol = cp.ticker
            LEFT JOIN stocks fm ON bs.symbol = fm.symbol
            LEFT JOIN (SELECT DISTINCT ON (pd_inner.symbol) pd_inner.symbol, pd_inner.close FROM price_daily pd_inner ORDER BY pd_inner.symbol, pd_inner.date DESC) pd ON bs.symbol = pd.symbol
            
            ORDER BY bs.date DESC, bs.symbol ASC
            LIMIT $1 OFFSET $2
           Params: [ 100, 0 ]

      at log (routes/trading.js:754:13)

  console.log
    [TRADING] Executing count SQL: 
            SELECT COUNT(*) as total
            FROM buy_sell_daily bs
            
           Params: []

      at log (routes/trading.js:755:13)

  console.log
    [TRADING] About to execute main query...

      at log (routes/trading.js:762:13)

  console.log
    [TRADING] Main query successful, now executing count query...

      at log (routes/trading.js:764:13)

  console.log
    [TRADING] Both queries successful

      at log (routes/trading.js:771:13)

  console.log
    [TRADING] Query returned 35 rows out of 35 total

      at log (routes/trading.js:801:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:03 +0000] "GET /api/trading/signals/daily HTTP/1.1" 200 9907 "-" "-"
  console.log
    [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:463:11)

  console.log
    [TRADING] Request URL: /signals/weekly

      at log (routes/trading.js:464:11)

  console.log
    [TRADING] Received request for /signals/:timeframe {
      params: { timeframe: 'weekly' },
      query: {},
      path: '/signals/weekly',
      method: 'GET',
      time: '2025-09-29T08:46:03.851Z'
    }

      at log (routes/trading.js:465:11)

  console.log
    [TRADING] Table existence check results:

      at log (routes/trading.js:750:13)

  console.log
      Main table exists: true

      at log (routes/trading.js:751:13)

  console.log
      Company profile exists: true

      at log (routes/trading.js:752:13)

  console.log
      Price daily exists: true

      at log (routes/trading.js:753:13)

  console.log
    [TRADING] Executing SQL: 
            SELECT 
              bs.symbol,
              bs.date,
              bs.signal as signal,
              bs.close as price,
              bs.stoplevel as stoplevel,
              bs.inposition as inposition,
              pd.close as current_price,
              cp.short_name as company_name,
              cp.sector as sector,
              NULL as market_cap,
              NULL as trailing_pe,
              NULL as dividend_yield,
              CASE 
                WHEN bs.signal = 'BUY' AND pd.close > bs.close
                THEN ((pd.close - bs.close) / bs.close * 100)
                WHEN bs.signal = 'SELL' AND pd.close < bs.close
                THEN ((bs.close - pd.close) / bs.close * 100)
                ELSE 0
              END as performance_percent
            FROM buy_sell_weekly bs
            LEFT JOIN company_profile cp ON bs.symbol = cp.ticker
            LEFT JOIN stocks fm ON bs.symbol = fm.symbol
            LEFT JOIN (SELECT DISTINCT ON (pd_inner.symbol) pd_inner.symbol, pd_inner.close FROM price_daily pd_inner ORDER BY pd_inner.symbol, pd_inner.date DESC) pd ON bs.symbol = pd.symbol
            
            ORDER BY bs.date DESC, bs.symbol ASC
            LIMIT $1 OFFSET $2
           Params: [ 100, 0 ]

      at log (routes/trading.js:754:13)

  console.log
    [TRADING] Executing count SQL: 
            SELECT COUNT(*) as total
            FROM buy_sell_weekly bs
            
           Params: []

      at log (routes/trading.js:755:13)

  console.log
    [TRADING] About to execute main query...

      at log (routes/trading.js:762:13)

  console.log
    [TRADING] Main query successful, now executing count query...

      at log (routes/trading.js:764:13)

  console.log
    [TRADING] Both queries successful

      at log (routes/trading.js:771:13)

  console.log
    [TRADING] Query returned 5 rows out of 5 total

      at log (routes/trading.js:801:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:03 +0000] "GET /api/trading/signals/weekly HTTP/1.1" 200 1608 "-" "-"
  console.log
    [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:463:11)

  console.log
    [TRADING] Request URL: /signals/monthly

      at log (routes/trading.js:464:11)

  console.log
    [TRADING] Received request for /signals/:timeframe {
      params: { timeframe: 'monthly' },
      query: {},
      path: '/signals/monthly',
      method: 'GET',
      time: '2025-09-29T08:46:03.880Z'
    }

      at log (routes/trading.js:465:11)

  console.log
    [TRADING] Table existence check results:

      at log (routes/trading.js:750:13)

  console.log
      Main table exists: true

      at log (routes/trading.js:751:13)

  console.log
      Company profile exists: true

      at log (routes/trading.js:752:13)

  console.log
      Price daily exists: true

      at log (routes/trading.js:753:13)

  console.log
    [TRADING] Executing SQL: 
            SELECT 
              bs.symbol,
              bs.date,
              bs.signal as signal,
              bs.close as price,
              bs.stoplevel as stoplevel,
              bs.inposition as inposition,
              pd.close as current_price,
              cp.short_name as company_name,
              cp.sector as sector,
              NULL as market_cap,
              NULL as trailing_pe,
              NULL as dividend_yield,
              CASE 
                WHEN bs.signal = 'BUY' AND pd.close > bs.close
                THEN ((pd.close - bs.close) / bs.close * 100)
                WHEN bs.signal = 'SELL' AND pd.close < bs.close
                THEN ((bs.close - pd.close) / bs.close * 100)
                ELSE 0
              END as performance_percent
            FROM buy_sell_monthly bs
            LEFT JOIN company_profile cp ON bs.symbol = cp.ticker
            LEFT JOIN stocks fm ON bs.symbol = fm.symbol
            LEFT JOIN (SELECT DISTINCT ON (pd_inner.symbol) pd_inner.symbol, pd_inner.close FROM price_daily pd_inner ORDER BY pd_inner.symbol, pd_inner.date DESC) pd ON bs.symbol = pd.symbol
            
            ORDER BY bs.date DESC, bs.symbol ASC
            LIMIT $1 OFFSET $2
           Params: [ 100, 0 ]

      at log (routes/trading.js:754:13)

  console.log
    [TRADING] Executing count SQL: 
            SELECT COUNT(*) as total
            FROM buy_sell_monthly bs
            
           Params: []

      at log (routes/trading.js:755:13)

  console.log
    [TRADING] About to execute main query...

      at log (routes/trading.js:762:13)

  console.log
    [TRADING] Main query successful, now executing count query...

      at log (routes/trading.js:764:13)

  console.log
    [TRADING] Both queries successful

      at log (routes/trading.js:771:13)

  console.log
    [TRADING] Query returned 2 rows out of 2 total

      at log (routes/trading.js:801:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:03 +0000] "GET /api/trading/signals/monthly HTTP/1.1" 200 762 "-" "-"
  console.log
    [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:463:11)

  console.log
    [TRADING] Request URL: /signals/invalid

      at log (routes/trading.js:464:11)

  console.log
    [TRADING] Received request for /signals/:timeframe {
      params: { timeframe: 'invalid' },
      query: {},
      path: '/signals/invalid',
      method: 'GET',
      time: '2025-09-29T08:46:03.907Z'
    }

      at log (routes/trading.js:465:11)

  console.warn
    [TRADING] Invalid timeframe: invalid

      498 |     const validTimeframes = ["daily", "weekly", "monthly"];
      499 |     if (!validTimeframes.includes(normalizedTimeframe)) {
    > 500 |       console.warn("[TRADING] Invalid timeframe:", timeframe);
          |               ^
      501 |       return res.status(400).json({
      502 |         success: false,
      503 |         error: `Invalid timeframe: ${timeframe}. Must be one of: ${validTimeframes.join(", ")} or their aliases (swing, day, week, month)`,

      at warn (routes/trading.js:500:15)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at next (middleware/responseFormatter.js:66:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at urlencodedParser (node_modules/body-parser/lib/types/urlencoded.js:94:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at logger (node_modules/morgan/index.js:144:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at cors (node_modules/cors/lib/index.js:188:7)
      at node_modules/cors/lib/index.js:224:17
      at originCallback (node_modules/cors/lib/index.js:214:15)
      at node_modules/cors/lib/index.js:219:13
      at optionsCallback (node_modules/cors/lib/index.js:199:9)
      at corsMiddleware (node_modules/cors/lib/index.js:204:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at internalNext (node_modules/helmet/index.cjs:537:6)
      at xXssProtectionMiddleware (node_modules/helmet/index.cjs:315:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPoweredByMiddleware (node_modules/helmet/index.cjs:308:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPermittedCrossDomainPoliciesMiddleware (node_modules/helmet/index.cjs:301:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xFrameOptionsMiddleware (node_modules/helmet/index.cjs:285:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDownloadOptionsMiddleware (node_modules/helmet/index.cjs:265:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDnsPrefetchControlMiddleware (node_modules/helmet/index.cjs:258:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xContentTypeOptionsMiddleware (node_modules/helmet/index.cjs:250:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at strictTransportSecurityMiddleware (node_modules/helmet/index.cjs:243:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at referrerPolicyMiddleware (node_modules/helmet/index.cjs:211:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at originAgentClusterMiddleware (node_modules/helmet/index.cjs:186:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginResourcePolicyMiddleware (node_modules/helmet/index.cjs:179:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginOpenerPolicyMiddleware (node_modules/helmet/index.cjs:163:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at contentSecurityPolicyMiddleware (node_modules/helmet/index.cjs:128:4)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at helmetMiddleware (node_modules/helmet/index.cjs:539:6)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:03 +0000] "GET /api/trading/signals/invalid HTTP/1.1" 400 137 "-" "-"
  console.log
    [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:463:11)

  console.log
    [TRADING] Request URL: /signals/daily?page=1&limit=10

      at log (routes/trading.js:464:11)

  console.log
    [TRADING] Received request for /signals/:timeframe {
      params: { timeframe: 'daily' },
      query: { page: '1', limit: '10' },
      path: '/signals/daily',
      method: 'GET',
      time: '2025-09-29T08:46:03.925Z'
    }

      at log (routes/trading.js:465:11)

  console.log
    [TRADING] Table existence check results:

      at log (routes/trading.js:750:13)

  console.log
      Main table exists: true

      at log (routes/trading.js:751:13)

  console.log
      Company profile exists: true

      at log (routes/trading.js:752:13)

  console.log
      Price daily exists: true

      at log (routes/trading.js:753:13)

  console.log
    [TRADING] Executing SQL: 
            SELECT 
              bs.symbol,
              bs.date,
              bs.signal as signal,
              bs.close as price,
              bs.stoplevel as stoplevel,
              bs.inposition as inposition,
              pd.close as current_price,
              cp.short_name as company_name,
              cp.sector as sector,
              NULL as market_cap,
              NULL as trailing_pe,
              NULL as dividend_yield,
              CASE 
                WHEN bs.signal = 'BUY' AND pd.close > bs.close
                THEN ((pd.close - bs.close) / bs.close * 100)
                WHEN bs.signal = 'SELL' AND pd.close < bs.close
                THEN ((bs.close - pd.close) / bs.close * 100)
                ELSE 0
              END as performance_percent
            FROM buy_sell_daily bs
            LEFT JOIN company_profile cp ON bs.symbol = cp.ticker
            LEFT JOIN stocks fm ON bs.symbol = fm.symbol
            LEFT JOIN (SELECT DISTINCT ON (pd_inner.symbol) pd_inner.symbol, pd_inner.close FROM price_daily pd_inner ORDER BY pd_inner.symbol, pd_inner.date DESC) pd ON bs.symbol = pd.symbol
            
            ORDER BY bs.date DESC, bs.symbol ASC
            LIMIT $1 OFFSET $2
           Params: [ 10, 0 ]

      at log (routes/trading.js:754:13)

  console.log
    [TRADING] Executing count SQL: 
            SELECT COUNT(*) as total
            FROM buy_sell_daily bs
            
           Params: []

      at log (routes/trading.js:755:13)

  console.log
    [TRADING] About to execute main query...

      at log (routes/trading.js:762:13)

  console.log
    [TRADING] Main query successful, now executing count query...

      at log (routes/trading.js:764:13)

  console.log
    [TRADING] Both queries successful

      at log (routes/trading.js:771:13)

  console.log
    [TRADING] Query returned 10 rows out of 35 total

      at log (routes/trading.js:801:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:03 +0000] "GET /api/trading/signals/daily?page=1&limit=10 HTTP/1.1" 200 2968 "-" "-"
  console.log
    [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:463:11)

  console.log
    [TRADING] Request URL: /signals/daily?latest_only=true&limit=5

      at log (routes/trading.js:464:11)

  console.log
    [TRADING] Received request for /signals/:timeframe {
      params: { timeframe: 'daily' },
      query: { latest_only: 'true', limit: '5' },
      path: '/signals/daily',
      method: 'GET',
      time: '2025-09-29T08:46:03.949Z'
    }

      at log (routes/trading.js:465:11)

  console.log
    [TRADING] Table existence check results:

      at log (routes/trading.js:750:13)

  console.log
      Main table exists: true

      at log (routes/trading.js:751:13)

  console.log
      Company profile exists: true

      at log (routes/trading.js:752:13)

  console.log
      Price daily exists: true

      at log (routes/trading.js:753:13)

  console.log
    [TRADING] Executing SQL: 
            WITH ranked_signals AS (
              SELECT 
                bs.symbol,
                bs.date,
                bs.signal as signal,
                bs.close as price,
                bs.stoplevel as stoplevel,
                bs.inposition as inposition,
                pd.close as current_price,
                cp.short_name as company_name,
                cp.sector as sector,
                NULL as market_cap,
                NULL as trailing_pe,
                NULL as dividend_yield,
                CASE 
                  WHEN bs.signal = 'BUY' AND pd.close > bs.close
                  THEN ((pd.close - bs.close) / bs.close * 100)
                  WHEN bs.signal = 'SELL' AND pd.close < bs.close
                  THEN ((bs.close - pd.close) / bs.close * 100)
                  ELSE 0
                END as performance_percent,
                ROW_NUMBER() OVER (PARTITION BY bs.symbol ORDER BY bs.date DESC) as rn
              FROM buy_sell_daily bs
              LEFT JOIN company_profile cp ON bs.symbol = cp.ticker
              LEFT JOIN stocks fm ON bs.symbol = fm.symbol
              LEFT JOIN (SELECT DISTINCT ON (pd_inner.symbol) pd_inner.symbol, pd_inner.close FROM price_daily pd_inner ORDER BY pd_inner.symbol, pd_inner.date DESC) pd ON bs.symbol = pd.symbol
              
            )
            SELECT * FROM ranked_signals 
            WHERE rn = 1
            ORDER BY ranked_signals.date DESC, ranked_signals.symbol ASC
            LIMIT $1 OFFSET $2
           Params: [ 5, 0 ]

      at log (routes/trading.js:754:13)

  console.log
    [TRADING] Executing count SQL: 
            WITH ranked_signals AS (
              SELECT bs.symbol,
                ROW_NUMBER() OVER (PARTITION BY bs.symbol ORDER BY bs.date DESC) as rn
              FROM buy_sell_daily bs
              
            )
            SELECT COUNT(*) as total
            FROM ranked_signals 
            WHERE rn = 1
           Params: []

      at log (routes/trading.js:755:13)

  console.log
    [TRADING] About to execute main query...

      at log (routes/trading.js:762:13)

  console.log
    [TRADING] Main query successful, now executing count query...

      at log (routes/trading.js:764:13)

  console.log
    [TRADING] Both queries successful

      at log (routes/trading.js:771:13)

  console.log
    [TRADING] Query returned 5 rows out of 8 total

      at log (routes/trading.js:801:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:03 +0000] "GET /api/trading/signals/daily?latest_only=true&limit=5 HTTP/1.1" 200 1621 "-" "-"
  console.log
    [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:463:11)

  console.log
    [TRADING] Request URL: /signals/daily?symbol=AAPL&signal_type=buy&limit=5

      at log (routes/trading.js:464:11)

  console.log
    [TRADING] Received request for /signals/:timeframe {
      params: { timeframe: 'daily' },
      query: { symbol: 'AAPL', signal_type: 'buy', limit: '5' },
      path: '/signals/daily',
      method: 'GET',
      time: '2025-09-29T08:46:03.978Z'
    }

      at log (routes/trading.js:465:11)

  console.log
    [TRADING] Table existence check results:

      at log (routes/trading.js:750:13)

  console.log
      Main table exists: true

      at log (routes/trading.js:751:13)

  console.log
      Company profile exists: true

      at log (routes/trading.js:752:13)

  console.log
      Price daily exists: true

      at log (routes/trading.js:753:13)

  console.log
    [TRADING] Executing SQL: 
            SELECT 
              bs.symbol,
              bs.date,
              bs.signal as signal,
              bs.close as price,
              bs.stoplevel as stoplevel,
              bs.inposition as inposition,
              pd.close as current_price,
              cp.short_name as company_name,
              cp.sector as sector,
              NULL as market_cap,
              NULL as trailing_pe,
              NULL as dividend_yield,
              CASE 
                WHEN bs.signal = 'BUY' AND pd.close > bs.close
                THEN ((pd.close - bs.close) / bs.close * 100)
                WHEN bs.signal = 'SELL' AND pd.close < bs.close
                THEN ((bs.close - pd.close) / bs.close * 100)
                ELSE 0
              END as performance_percent
            FROM buy_sell_daily bs
            LEFT JOIN company_profile cp ON bs.symbol = cp.ticker
            LEFT JOIN stocks fm ON bs.symbol = fm.symbol
            LEFT JOIN (SELECT DISTINCT ON (pd_inner.symbol) pd_inner.symbol, pd_inner.close FROM price_daily pd_inner ORDER BY pd_inner.symbol, pd_inner.date DESC) pd ON bs.symbol = pd.symbol
            WHERE bs.symbol = $1 AND bs.signal = 'BUY'
            ORDER BY bs.date DESC, bs.symbol ASC
            LIMIT $2 OFFSET $3
           Params: [ 'AAPL', 5, 0 ]

      at log (routes/trading.js:754:13)

  console.log
    [TRADING] Executing count SQL: 
            SELECT COUNT(*) as total
            FROM buy_sell_daily bs
            WHERE bs.symbol = $1 AND bs.signal = 'BUY'
           Params: [ 'AAPL' ]

      at log (routes/trading.js:755:13)

  console.log
    [TRADING] About to execute main query...

      at log (routes/trading.js:762:13)

  console.log
    [TRADING] Main query successful, now executing count query...

      at log (routes/trading.js:764:13)

  console.log
    [TRADING] Both queries successful

      at log (routes/trading.js:771:13)

  console.log
    [TRADING] Query returned 5 rows out of 5 total

      at log (routes/trading.js:801:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:03 +0000] "GET /api/trading/signals/daily?symbol=AAPL&signal_type=buy&limit=5 HTTP/1.1" 200 1632 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/summary/daily HTTP/1.1" 200 359 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/summary/weekly HTTP/1.1" 200 353 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/summary/invalid HTTP/1.1" 400 45 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/swing-signals HTTP/1.1" 200 1091 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/swing-signals?page=1&limit=10 HTTP/1.1" 200 1091 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/AAPL/technicals HTTP/1.1" 200 341 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/MSFT/technicals?timeframe=weekly HTTP/1.1" 200 339 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/TSLA/technicals?timeframe=monthly HTTP/1.1" 200 343 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/performance HTTP/1.1" 200 446 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/performance?days=60 HTTP/1.1" 200 446 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/performance?days=invalid HTTP/1.1" 200 446 "-" "-"
  console.log
    🔄 Trading positions requested for user: anonymous

      at log (routes/trading.js:1229:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/positions HTTP/1.1" 200 75 "-" "-"
  console.log
    🔄 Trading positions requested for user: anonymous

      at log (routes/trading.js:1229:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/positions?summary=true HTTP/1.1" 200 156 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/orders HTTP/1.1" 401 74 "-" "-"
  console.log
    📋 Trading orders requested for user: dev-user-bypass

      at log (routes/trading.js:1363:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/orders HTTP/1.1" 200 464 "-" "-"
  console.log
    📋 Trading orders requested for user: dev-user-bypass

      at log (routes/trading.js:1363:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/orders HTTP/1.1" 200 464 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "POST /api/trading/orders HTTP/1.1" 401 74 "-" "-"
  console.log
    📝 Order placement requested for user: dev-user-bypass, buy 10 AAPL

      at log (routes/trading.js:1475:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "POST /api/trading/orders HTTP/1.1" 201 617 "-" "-"
  console.log
    📝 Order placement requested for user: dev-user-bypass, sell 5 TSLA

      at log (routes/trading.js:1475:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "POST /api/trading/orders HTTP/1.1" 201 615 "-" "-"
  console.log
    📝 Order placement requested for user: dev-user-bypass, undefined 1 AAPL

      at log (routes/trading.js:1475:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "POST /api/trading/orders HTTP/1.1" 400 134 "-" "-"
  console.log
    📝 Order placement requested for user: dev-user-bypass, buy 1 AAPL

      at log (routes/trading.js:1475:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "POST /api/trading/orders HTTP/1.1" 400 91 "-" "-"
  console.log
    📝 Order placement requested for user: dev-user-bypass, invalid_side 1 AAPL

      at log (routes/trading.js:1475:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "POST /api/trading/orders HTTP/1.1" 400 62 "-" "-"
  console.log
    📝 Order placement requested for user: dev-user-bypass, buy 0 AAPL

      at log (routes/trading.js:1475:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "POST /api/trading/orders HTTP/1.1" 400 134 "-" "-"
  console.log
    📝 Order placement requested for user: dev-user-bypass, buy 1 AAPL

      at log (routes/trading.js:1475:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "POST /api/trading/orders HTTP/1.1" 400 65 "-" "-"
  console.log
    📝 Order placement requested for user: dev-user-bypass, sell 2 NVDA

      at log (routes/trading.js:1475:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "POST /api/trading/orders HTTP/1.1" 201 619 "-" "-"
  console.log
    🎮 Trading simulator requested - Portfolio: $100000, Strategy: momentum, Symbols: SPY,QQQ,AAPL,TSLA,NVDA

      at log (routes/trading.js:1618:13)

  console.log
    🔍 All available columns in buy_sell_daily: [
      'buylevel', 'close',
      'date',     'high',
      'id',       'inposition',
      'low',      'open',
      'signal',   'stoplevel',
      'symbol',   'timeframe',
      'volume'
    ]

      at log (routes/trading.js:1666:15)

  console.log
    🎮 Found columns in buy_sell_daily: [
      'symbol',
      'date',
      'close',
      'signal',
      'buylevel',
      'stoplevel',
      'inposition'
    ]

      at log (routes/trading.js:1678:15)

  console.log
    🎮 Trading table columns config: {
      symbol: true,
      date: true,
      signal: true,
      signal_type: false,
      price: false,
      buylevel: true,
      stoplevel: true,
      inposition: true,
      close: true
    }

      at log (routes/trading.js:1684:15)

  console.log
    🎮 Using price column: close for trading simulation

      at log (routes/trading.js:1713:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/simulator HTTP/1.1" 200 1326 "-" "-"
  console.log
    🎮 Trading simulator requested - Portfolio: $50000, Strategy: mean_reversion, Symbols: AAPL,MSFT,GOOGL

      at log (routes/trading.js:1618:13)

  console.log
    🔍 All available columns in buy_sell_daily: [
      'buylevel', 'close',
      'date',     'high',
      'id',       'inposition',
      'low',      'open',
      'signal',   'stoplevel',
      'symbol',   'timeframe',
      'volume'
    ]

      at log (routes/trading.js:1666:15)

  console.log
    🎮 Found columns in buy_sell_daily: [
      'symbol',
      'date',
      'close',
      'signal',
      'buylevel',
      'stoplevel',
      'inposition'
    ]

      at log (routes/trading.js:1678:15)

  console.log
    🎮 Trading table columns config: {
      symbol: true,
      date: true,
      signal: true,
      signal_type: false,
      price: false,
      buylevel: true,
      stoplevel: true,
      inposition: true,
      close: true
    }

      at log (routes/trading.js:1684:15)

  console.log
    🎮 Using price column: close for trading simulation

      at log (routes/trading.js:1713:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/simulator?portfolio=50000&strategy=mean_reversion&symbols=AAPL,MSFT,GOOGL HTTP/1.1" 200 2017 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/simulator?portfolio=invalid HTTP/1.1" 400 69 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/simulator?portfolio=-1000 HTTP/1.1" 400 69 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/simulator?strategy=invalid_strategy HTTP/1.1" 400 103 "-" "-"
  console.log
    📈 Trading strategies requested - category: all, risk: all, active: false

      at log (routes/trading.js:1846:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/strategies HTTP/1.1" 200 28743 "-" "-"
  console.log
    📈 Trading strategies requested - category: momentum, risk: all, active: false

      at log (routes/trading.js:1846:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/strategies?category=momentum HTTP/1.1" 200 549 "-" "-"
  console.log
    📈 Trading strategies requested - category: all, risk: low, active: false

      at log (routes/trading.js:1846:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/strategies?risk_level=low HTTP/1.1" 200 544 "-" "-"
  console.log
    📈 Trading strategies requested - category: all, risk: all, active: true

      at log (routes/trading.js:1846:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/strategies?active_only=true HTTP/1.1" 200 28630 "-" "-"
  console.log
    📈 Trading strategies requested - category: all, risk: all, active: false

      at log (routes/trading.js:1846:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/strategies?limit=3 HTTP/1.1" 200 2369 "-" "-"
  console.log
    📈 Trading strategies requested - category: trend_following, risk: medium, active: true

      at log (routes/trading.js:1846:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/strategies?category=trend_following&risk_level=medium&active_only=true&limit=5 HTTP/1.1" 200 557 "-" "-"
  console.log
    📊 Strategy details requested - ID: momentum_breakout_v1, signals: false, backtest: false

      at log (routes/trading.js:2090:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/strategies/momentum_breakout_v1 HTTP/1.1" 200 2227 "-" "-"
  console.log
    📊 Strategy details requested - ID: momentum_breakout_v1, signals: true, backtest: false

      at log (routes/trading.js:2090:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/strategies/momentum_breakout_v1?include_signals=true HTTP/1.1" 200 2621 "-" "-"
  console.log
    📊 Strategy details requested - ID: momentum_breakout_v1, signals: false, backtest: true

      at log (routes/trading.js:2090:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/strategies/momentum_breakout_v1?include_backtest=true HTTP/1.1" 200 2564 "-" "-"
  console.log
    📊 Strategy details requested - ID: momentum_breakout_v1, signals: true, backtest: true

      at log (routes/trading.js:2090:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/strategies/momentum_breakout_v1?include_signals=true&include_backtest=true HTTP/1.1" 200 2958 "-" "-"
  console.log
    📊 Strategy details requested - ID: momentum_breakout_v1, signals: false, backtest: false

      at log (routes/trading.js:2090:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/strategies/momentum_breakout_v1 HTTP/1.1" 200 2227 "-" "-"
  console.log
    📊 Strategy details requested - ID: momentum_breakout_v1, signals: true, backtest: false

      at log (routes/trading.js:2090:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/strategies/momentum_breakout_v1?include_signals=true HTTP/1.1" 200 2621 "-" "-"
  console.log
    📊 Strategy details requested - ID: momentum_breakout_v1, signals: false, backtest: true

      at log (routes/trading.js:2090:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/strategies/momentum_breakout_v1?include_backtest=true HTTP/1.1" 200 2564 "-" "-"
  console.log
    📊 Strategy details requested - ID: momentum_breakout_v1, signals: true, backtest: true

      at log (routes/trading.js:2090:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/strategies/momentum_breakout_v1?include_signals=true&include_backtest=true HTTP/1.1" 200 2958 "-" "-"
  console.log
    📊 Strategy details requested - ID: nonexistent_strategy, signals: false, backtest: false

      at log (routes/trading.js:2090:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/strategies/nonexistent_strategy HTTP/1.1" 200 2227 "-" "-"
  console.log
    [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:463:11)

  console.log
    [TRADING] Request URL: /signals/daily?symbol=AAPL&signal_type=buy&page=2&limit=15&latest_only=false

      at log (routes/trading.js:464:11)

  console.log
    [TRADING] Received request for /signals/:timeframe {
      params: { timeframe: 'daily' },
      query: {
        symbol: 'AAPL',
        signal_type: 'buy',
        page: '2',
        limit: '15',
        latest_only: 'false'
      },
      path: '/signals/daily',
      method: 'GET',
      time: '2025-09-29T08:46:04.376Z'
    }

      at log (routes/trading.js:465:11)

  console.log
    [TRADING] Table existence check results:

      at log (routes/trading.js:750:13)

  console.log
      Main table exists: true

      at log (routes/trading.js:751:13)

  console.log
      Company profile exists: true

      at log (routes/trading.js:752:13)

  console.log
      Price daily exists: true

      at log (routes/trading.js:753:13)

  console.log
    [TRADING] Executing SQL: 
            SELECT 
              bs.symbol,
              bs.date,
              bs.signal as signal,
              bs.close as price,
              bs.stoplevel as stoplevel,
              bs.inposition as inposition,
              pd.close as current_price,
              cp.short_name as company_name,
              cp.sector as sector,
              NULL as market_cap,
              NULL as trailing_pe,
              NULL as dividend_yield,
              CASE 
                WHEN bs.signal = 'BUY' AND pd.close > bs.close
                THEN ((pd.close - bs.close) / bs.close * 100)
                WHEN bs.signal = 'SELL' AND pd.close < bs.close
                THEN ((bs.close - pd.close) / bs.close * 100)
                ELSE 0
              END as performance_percent
            FROM buy_sell_daily bs
            LEFT JOIN company_profile cp ON bs.symbol = cp.ticker
            LEFT JOIN stocks fm ON bs.symbol = fm.symbol
            LEFT JOIN (SELECT DISTINCT ON (pd_inner.symbol) pd_inner.symbol, pd_inner.close FROM price_daily pd_inner ORDER BY pd_inner.symbol, pd_inner.date DESC) pd ON bs.symbol = pd.symbol
            WHERE bs.symbol = $1 AND bs.signal = 'BUY'
            ORDER BY bs.date DESC, bs.symbol ASC
            LIMIT $2 OFFSET $3
           Params: [ 'AAPL', 15, 15 ]

      at log (routes/trading.js:754:13)

  console.log
    [TRADING] Executing count SQL: 
            SELECT COUNT(*) as total
            FROM buy_sell_daily bs
            WHERE bs.symbol = $1 AND bs.signal = 'BUY'
           Params: [ 'AAPL' ]

      at log (routes/trading.js:755:13)

  console.log
    [TRADING] About to execute main query...

      at log (routes/trading.js:762:13)

  console.log
    [TRADING] Main query successful, now executing count query...

      at log (routes/trading.js:764:13)

  console.log
    [TRADING] Both queries successful

      at log (routes/trading.js:771:13)

  console.warn
    [TRADING] No data found for query: {
      timeframe: 'daily',
      params: {
        symbol: 'AAPL',
        signal_type: 'buy',
        page: '2',
        limit: '15',
        latest_only: 'false'
      }
    }

      775 |
      776 |     if (!result || !Array.isArray(result.rows) || result.rows.length === 0) {
    > 777 |       console.warn("[TRADING] No data found for query:", {
          |               ^
      778 |         timeframe: processedTimeframe,
      779 |         params: req.query,
      780 |       });

      at warn (routes/trading.js:777:15)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/signals/daily?symbol=AAPL&signal_type=buy&page=2&limit=15&latest_only=false HTTP/1.1" 200 246 "-" "-"
  console.log
    [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:463:11)

  console.log
    [TRADING] Request URL: /signals/daily?page=-1&limit=10

      at log (routes/trading.js:464:11)

  console.log
    [TRADING] Received request for /signals/:timeframe {
      params: { timeframe: 'daily' },
      query: { page: '-1', limit: '10' },
      path: '/signals/daily',
      method: 'GET',
      time: '2025-09-29T08:46:04.398Z'
    }

      at log (routes/trading.js:465:11)

  console.log
    [TRADING] Table existence check results:

      at log (routes/trading.js:750:13)

  console.log
      Main table exists: true

      at log (routes/trading.js:751:13)

  console.log
      Company profile exists: true

      at log (routes/trading.js:752:13)

  console.log
      Price daily exists: true

      at log (routes/trading.js:753:13)

  console.log
    [TRADING] Executing SQL: 
            SELECT 
              bs.symbol,
              bs.date,
              bs.signal as signal,
              bs.close as price,
              bs.stoplevel as stoplevel,
              bs.inposition as inposition,
              pd.close as current_price,
              cp.short_name as company_name,
              cp.sector as sector,
              NULL as market_cap,
              NULL as trailing_pe,
              NULL as dividend_yield,
              CASE 
                WHEN bs.signal = 'BUY' AND pd.close > bs.close
                THEN ((pd.close - bs.close) / bs.close * 100)
                WHEN bs.signal = 'SELL' AND pd.close < bs.close
                THEN ((bs.close - pd.close) / bs.close * 100)
                ELSE 0
              END as performance_percent
            FROM buy_sell_daily bs
            LEFT JOIN company_profile cp ON bs.symbol = cp.ticker
            LEFT JOIN stocks fm ON bs.symbol = fm.symbol
            LEFT JOIN (SELECT DISTINCT ON (pd_inner.symbol) pd_inner.symbol, pd_inner.close FROM price_daily pd_inner ORDER BY pd_inner.symbol, pd_inner.date DESC) pd ON bs.symbol = pd.symbol
            
            ORDER BY bs.date DESC, bs.symbol ASC
            LIMIT $1 OFFSET $2
           Params: [ 10, 0 ]

      at log (routes/trading.js:754:13)

  console.log
    [TRADING] Executing count SQL: 
            SELECT COUNT(*) as total
            FROM buy_sell_daily bs
            
           Params: []

      at log (routes/trading.js:755:13)

  console.log
    [TRADING] About to execute main query...

      at log (routes/trading.js:762:13)

  console.log
    [TRADING] Main query successful, now executing count query...

      at log (routes/trading.js:764:13)

  console.log
    [TRADING] Both queries successful

      at log (routes/trading.js:771:13)

  console.log
    [TRADING] Query returned 10 rows out of 35 total

      at log (routes/trading.js:801:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/signals/daily?page=-1&limit=10 HTTP/1.1" 200 2968 "-" "-"
  console.log
    [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:463:11)

  console.log
    [TRADING] Request URL: /signals/daily?page=999999

      at log (routes/trading.js:464:11)

  console.log
    [TRADING] Received request for /signals/:timeframe {
      params: { timeframe: 'daily' },
      query: { page: '999999' },
      path: '/signals/daily',
      method: 'GET',
      time: '2025-09-29T08:46:04.421Z'
    }

      at log (routes/trading.js:465:11)

  console.log
    [TRADING] Table existence check results:

      at log (routes/trading.js:750:13)

  console.log
      Main table exists: true

      at log (routes/trading.js:751:13)

  console.log
      Company profile exists: true

      at log (routes/trading.js:752:13)

  console.log
      Price daily exists: true

      at log (routes/trading.js:753:13)

  console.log
    [TRADING] Executing SQL: 
            SELECT 
              bs.symbol,
              bs.date,
              bs.signal as signal,
              bs.close as price,
              bs.stoplevel as stoplevel,
              bs.inposition as inposition,
              pd.close as current_price,
              cp.short_name as company_name,
              cp.sector as sector,
              NULL as market_cap,
              NULL as trailing_pe,
              NULL as dividend_yield,
              CASE 
                WHEN bs.signal = 'BUY' AND pd.close > bs.close
                THEN ((pd.close - bs.close) / bs.close * 100)
                WHEN bs.signal = 'SELL' AND pd.close < bs.close
                THEN ((bs.close - pd.close) / bs.close * 100)
                ELSE 0
              END as performance_percent
            FROM buy_sell_daily bs
            LEFT JOIN company_profile cp ON bs.symbol = cp.ticker
            LEFT JOIN stocks fm ON bs.symbol = fm.symbol
            LEFT JOIN (SELECT DISTINCT ON (pd_inner.symbol) pd_inner.symbol, pd_inner.close FROM price_daily pd_inner ORDER BY pd_inner.symbol, pd_inner.date DESC) pd ON bs.symbol = pd.symbol
            
            ORDER BY bs.date DESC, bs.symbol ASC
            LIMIT $1 OFFSET $2
           Params: [ 100, 99999800 ]

      at log (routes/trading.js:754:13)

  console.log
    [TRADING] Executing count SQL: 
            SELECT COUNT(*) as total
            FROM buy_sell_daily bs
            
           Params: []

      at log (routes/trading.js:755:13)

  console.log
    [TRADING] About to execute main query...

      at log (routes/trading.js:762:13)

  console.log
    [TRADING] Main query successful, now executing count query...

      at log (routes/trading.js:764:13)

  console.log
    [TRADING] Both queries successful

      at log (routes/trading.js:771:13)

  console.warn
    [TRADING] No data found for query: { timeframe: 'daily', params: { page: '999999' } }

      775 |
      776 |     if (!result || !Array.isArray(result.rows) || result.rows.length === 0) {
    > 777 |       console.warn("[TRADING] No data found for query:", {
          |               ^
      778 |         timeframe: processedTimeframe,
      779 |         params: req.query,
      780 |       });

      at warn (routes/trading.js:777:15)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/signals/daily?page=999999 HTTP/1.1" 200 250 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/performance?days=0 HTTP/1.1" 200 446 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/performance?days=99999 HTTP/1.1" 200 450 "-" "-"
  console.log
    🎮 Trading simulator requested - Portfolio: $1, Strategy: momentum, Symbols: SPY,QQQ,AAPL,TSLA,NVDA

      at log (routes/trading.js:1618:13)

  console.log
    🔍 All available columns in buy_sell_daily: [
      'buylevel', 'close',
      'date',     'high',
      'id',       'inposition',
      'low',      'open',
      'signal',   'stoplevel',
      'symbol',   'timeframe',
      'volume'
    ]

      at log (routes/trading.js:1666:15)

  console.log
    🎮 Found columns in buy_sell_daily: [
      'symbol',
      'date',
      'close',
      'signal',
      'buylevel',
      'stoplevel',
      'inposition'
    ]

      at log (routes/trading.js:1678:15)

  console.log
    🎮 Trading table columns config: {
      symbol: true,
      date: true,
      signal: true,
      signal_type: false,
      price: false,
      buylevel: true,
      stoplevel: true,
      inposition: true,
      close: true
    }

      at log (routes/trading.js:1684:15)

  console.log
    🎮 Using price column: close for trading simulation

      at log (routes/trading.js:1713:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/simulator?portfolio=1 HTTP/1.1" 200 1262 "-" "-"
  console.log
    🎮 Trading simulator requested - Portfolio: $1000000000, Strategy: momentum, Symbols: SPY,QQQ,AAPL,TSLA,NVDA

      at log (routes/trading.js:1618:13)

  console.log
    🔍 All available columns in buy_sell_daily: [
      'buylevel', 'close',
      'date',     'high',
      'id',       'inposition',
      'low',      'open',
      'signal',   'stoplevel',
      'symbol',   'timeframe',
      'volume'
    ]

      at log (routes/trading.js:1666:15)

  console.log
    🎮 Found columns in buy_sell_daily: [
      'symbol',
      'date',
      'close',
      'signal',
      'buylevel',
      'stoplevel',
      'inposition'
    ]

      at log (routes/trading.js:1678:15)

  console.log
    🎮 Trading table columns config: {
      symbol: true,
      date: true,
      signal: true,
      signal_type: false,
      price: false,
      buylevel: true,
      stoplevel: true,
      inposition: true,
      close: true
    }

      at log (routes/trading.js:1684:15)

  console.log
    🎮 Using price column: close for trading simulation

      at log (routes/trading.js:1713:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/simulator?portfolio=1000000000 HTTP/1.1" 200 1373 "-" "-"
  console.log
    🎮 Trading simulator requested - Portfolio: $100000, Strategy: momentum, Symbols: SYM0,SYM1,SYM2,SYM3,SYM4,SYM5,SYM6,SYM7,SYM8,SYM9

      at log (routes/trading.js:1618:13)

  console.log
    🔍 All available columns in buy_sell_daily: [
      'buylevel', 'close',
      'date',     'high',
      'id',       'inposition',
      'low',      'open',
      'signal',   'stoplevel',
      'symbol',   'timeframe',
      'volume'
    ]

      at log (routes/trading.js:1666:15)

  console.log
    🎮 Found columns in buy_sell_daily: [
      'symbol',
      'date',
      'close',
      'signal',
      'buylevel',
      'stoplevel',
      'inposition'
    ]

      at log (routes/trading.js:1678:15)

  console.log
    🎮 Trading table columns config: {
      symbol: true,
      date: true,
      signal: true,
      signal_type: false,
      price: false,
      buylevel: true,
      stoplevel: true,
      inposition: true,
      close: true
    }

      at log (routes/trading.js:1684:15)

  console.log
    🎮 Using price column: close for trading simulation

      at log (routes/trading.js:1713:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/simulator?symbols=SYM0,SYM1,SYM2,SYM3,SYM4,SYM5,SYM6,SYM7,SYM8,SYM9,SYM10,SYM11,SYM12,SYM13,SYM14,SYM15,SYM16,SYM17,SYM18,SYM19 HTTP/1.1" 200 438 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: '; DROP TABLE buy_sell_daily; --, type: undefined, timeframe: daily

      at log (routes/trading.js:220:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/signals?symbol=%27%3B%20DROP%20TABLE%20buy_sell_daily%3B%20-- HTTP/1.1" 200 49452 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: SYMBOL中文, type: undefined, timeframe: daily

      at log (routes/trading.js:220:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/signals?symbol=SYMBOL%E4%B8%AD%E6%96%87 HTTP/1.1" 200 47915 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: , type: , timeframe: daily

      at log (routes/trading.js:220:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/signals?symbol=&signal_type= HTTP/1.1" 200 47109 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol:    , type: 	, timeframe: daily

      at log (routes/trading.js:220:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/signals?symbol=%20%20%20&signal_type=%09 HTTP/1.1" 200 43761 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:220:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/signals HTTP/1.1" 200 47130 "-" "-"
  console.log
    🔄 Trading positions requested for user: anonymous

      at log (routes/trading.js:1229:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/positions HTTP/1.1" 200 75 "-" "-"
  console.log
    📈 Trading strategies requested - category: all, risk: all, active: false

      at log (routes/trading.js:1846:13)

  console.log
    🎮 Trading simulator requested - Portfolio: $100000, Strategy: momentum, Symbols: SPY,QQQ,AAPL,TSLA,NVDA

      at log (routes/trading.js:1618:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/performance HTTP/1.1" 200 446 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/strategies HTTP/1.1" 200 28743 "-" "-"
  console.log
    🔍 All available columns in buy_sell_daily: [
      'buylevel', 'close',
      'date',     'high',
      'id',       'inposition',
      'low',      'open',
      'signal',   'stoplevel',
      'symbol',   'timeframe',
      'volume'
    ]

      at log (routes/trading.js:1666:15)

  console.log
    🎮 Found columns in buy_sell_daily: [
      'symbol',
      'date',
      'close',
      'signal',
      'buylevel',
      'stoplevel',
      'inposition'
    ]

      at log (routes/trading.js:1678:15)

  console.log
    🎮 Trading table columns config: {
      symbol: true,
      date: true,
      signal: true,
      signal_type: false,
      price: false,
      buylevel: true,
      stoplevel: true,
      inposition: true,
      close: true
    }

      at log (routes/trading.js:1684:15)

  console.log
    🎮 Using price column: close for trading simulation

      at log (routes/trading.js:1713:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/simulator HTTP/1.1" 200 1326 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:220:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/signals?limit=10 HTTP/1.1" 200 5568 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:220:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/signals?limit=10 HTTP/1.1" 200 5583 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:220:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/signals?limit=10 HTTP/1.1" 200 5593 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:220:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/signals?limit=10 HTTP/1.1" 200 5512 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:220:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/signals?limit=10 HTTP/1.1" 200 5629 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/health HTTP/1.1" 200 137 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/health HTTP/1.1" 200 137 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/health HTTP/1.1" 200 137 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:220:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/signals?limit=500 HTTP/1.1" 200 232155 "-" "-"
  console.log
    [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:463:11)

  console.log
    [TRADING] Request URL: /signals/daily?limit=5

      at log (routes/trading.js:464:11)

  console.log
    [TRADING] Received request for /signals/:timeframe {
      params: { timeframe: 'daily' },
      query: { limit: '5' },
      path: '/signals/daily',
      method: 'GET',
      time: '2025-09-29T08:46:04.639Z'
    }

      at log (routes/trading.js:465:11)

  console.log
    [TRADING] Table existence check results:

      at log (routes/trading.js:750:13)

  console.log
      Main table exists: true

      at log (routes/trading.js:751:13)

  console.log
      Company profile exists: true

      at log (routes/trading.js:752:13)

  console.log
      Price daily exists: true

      at log (routes/trading.js:753:13)

  console.log
    [TRADING] Executing SQL: 
            SELECT 
              bs.symbol,
              bs.date,
              bs.signal as signal,
              bs.close as price,
              bs.stoplevel as stoplevel,
              bs.inposition as inposition,
              pd.close as current_price,
              cp.short_name as company_name,
              cp.sector as sector,
              NULL as market_cap,
              NULL as trailing_pe,
              NULL as dividend_yield,
              CASE 
                WHEN bs.signal = 'BUY' AND pd.close > bs.close
                THEN ((pd.close - bs.close) / bs.close * 100)
                WHEN bs.signal = 'SELL' AND pd.close < bs.close
                THEN ((bs.close - pd.close) / bs.close * 100)
                ELSE 0
              END as performance_percent
            FROM buy_sell_daily bs
            LEFT JOIN company_profile cp ON bs.symbol = cp.ticker
            LEFT JOIN stocks fm ON bs.symbol = fm.symbol
            LEFT JOIN (SELECT DISTINCT ON (pd_inner.symbol) pd_inner.symbol, pd_inner.close FROM price_daily pd_inner ORDER BY pd_inner.symbol, pd_inner.date DESC) pd ON bs.symbol = pd.symbol
            
            ORDER BY bs.date DESC, bs.symbol ASC
            LIMIT $1 OFFSET $2
           Params: [ 5, 0 ]

      at log (routes/trading.js:754:13)

  console.log
    [TRADING] Executing count SQL: 
            SELECT COUNT(*) as total
            FROM buy_sell_daily bs
            
           Params: []

      at log (routes/trading.js:755:13)

  console.log
    [TRADING] About to execute main query...

      at log (routes/trading.js:762:13)

  console.log
    [TRADING] Main query successful, now executing count query...

      at log (routes/trading.js:764:13)

  console.log
    [TRADING] Both queries successful

      at log (routes/trading.js:771:13)

  console.log
    [TRADING] Query returned 5 rows out of 35 total

      at log (routes/trading.js:801:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/signals/daily?limit=5 HTTP/1.1" 200 1577 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/performance?days=30 HTTP/1.1" 200 446 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/swing-signals?limit=3 HTTP/1.1" 200 842 "-" "-"
  console.log
    📈 Trading strategies requested - category: all, risk: all, active: false

      at log (routes/trading.js:1846:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/strategies?limit=2 HTTP/1.1" 200 1807 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:220:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/signals HTTP/1.1" 200 47160 "-" "-"
  console.log
    [TRADING] Debug endpoint called

      at log (routes/trading.js:163:11)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/debug HTTP/1.1" 200 365 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/health HTTP/1.1" 200 137 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:220:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/signals HTTP/1.1" 200 46939 "-" "-"
  console.log
    📈 Trading strategies requested - category: all, risk: all, active: false

      at log (routes/trading.js:1846:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/performance HTTP/1.1" 200 446 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/strategies HTTP/1.1" 200 28743 "-" "-"
  console.error
    Error: SyntaxError: Unexpected end of JSON input
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{"invalid": ',
      type: 'entity.parse.failed'
    }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "POST /api/trading/orders HTTP/1.1" 400 135 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA, type: undefined, timeframe: daily

      at log (routes/trading.js:220:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/signals?symbol=AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA HTTP/1.1" 200 51997 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: @, type: undefined, timeframe: daily

      at log (routes/trading.js:220:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/signals?symbol=@ HTTP/1.1" 200 46918 "-" "-"
  console.log
    📝 Order placement requested for user: dev-user-bypass, buy 1 AAPL

      at log (routes/trading.js:1475:13)

  console.log
    📝 Order placement requested for user: dev-user-bypass, buy 1 AAPL

      at log (routes/trading.js:1475:13)

  console.log
    📝 Order placement requested for user: dev-user-bypass, buy 1 AAPL

      at log (routes/trading.js:1475:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "POST /api/trading/orders HTTP/1.1" 201 616 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "POST /api/trading/orders HTTP/1.1" 201 616 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "POST /api/trading/orders HTTP/1.1" 201 616 "-" "-"
  console.log
    [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:463:11)

  console.log
    [TRADING] Request URL: /signals/daily?limit=10

      at log (routes/trading.js:464:11)

  console.log
    [TRADING] Received request for /signals/:timeframe {
      params: { timeframe: 'daily' },
      query: { limit: '10' },
      path: '/signals/daily',
      method: 'GET',
      time: '2025-09-29T08:46:04.796Z'
    }

      at log (routes/trading.js:465:11)

  console.log
    [TRADING] Table existence check results:

      at log (routes/trading.js:750:13)

  console.log
      Main table exists: true

      at log (routes/trading.js:751:13)

  console.log
      Company profile exists: true

      at log (routes/trading.js:752:13)

  console.log
      Price daily exists: true

      at log (routes/trading.js:753:13)

  console.log
    [TRADING] Executing SQL: 
            SELECT 
              bs.symbol,
              bs.date,
              bs.signal as signal,
              bs.close as price,
              bs.stoplevel as stoplevel,
              bs.inposition as inposition,
              pd.close as current_price,
              cp.short_name as company_name,
              cp.sector as sector,
              NULL as market_cap,
              NULL as trailing_pe,
              NULL as dividend_yield,
              CASE 
                WHEN bs.signal = 'BUY' AND pd.close > bs.close
                THEN ((pd.close - bs.close) / bs.close * 100)
                WHEN bs.signal = 'SELL' AND pd.close < bs.close
                THEN ((bs.close - pd.close) / bs.close * 100)
                ELSE 0
              END as performance_percent
            FROM buy_sell_daily bs
            LEFT JOIN company_profile cp ON bs.symbol = cp.ticker
            LEFT JOIN stocks fm ON bs.symbol = fm.symbol
            LEFT JOIN (SELECT DISTINCT ON (pd_inner.symbol) pd_inner.symbol, pd_inner.close FROM price_daily pd_inner ORDER BY pd_inner.symbol, pd_inner.date DESC) pd ON bs.symbol = pd.symbol
            
            ORDER BY bs.date DESC, bs.symbol ASC
            LIMIT $1 OFFSET $2
           Params: [ 10, 0 ]

      at log (routes/trading.js:754:13)

  console.log
    [TRADING] Executing count SQL: 
            SELECT COUNT(*) as total
            FROM buy_sell_daily bs
            
           Params: []

      at log (routes/trading.js:755:13)

  console.log
    [TRADING] About to execute main query...

      at log (routes/trading.js:762:13)

  console.log
    [TRADING] Main query successful, now executing count query...

      at log (routes/trading.js:764:13)

  console.log
    [TRADING] Both queries successful

      at log (routes/trading.js:771:13)

  console.log
    [TRADING] Query returned 10 rows out of 35 total

      at log (routes/trading.js:801:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/signals/daily?limit=10 HTTP/1.1" 200 2968 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/orders HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "GET /api/trading/orders HTTP/1.1" 401 64 "-" "-"
  console.log
    📝 Order placement requested for user: dev-user-bypass, buy 1 AAPL

      at log (routes/trading.js:1475:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "POST /api/trading/orders HTTP/1.1" 201 616 "-" "-"
  console.log
    📝 Order placement requested for user: dev-user-bypass, buy 0.5 AAPL

      at log (routes/trading.js:1475:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "POST /api/trading/orders HTTP/1.1" 201 616 "-" "-"
  console.log
    📝 Order placement requested for user: dev-user-bypass, BUY 1 aapl

      at log (routes/trading.js:1475:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "POST /api/trading/orders HTTP/1.1" 400 91 "-" "-"
  console.log
    📝 Order placement requested for user: dev-user-bypass, buy 1 AAPL

      at log (routes/trading.js:1475:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "POST /api/trading/orders HTTP/1.1" 201 616 "-" "-"
  console.log
    📝 Order placement requested for user: dev-user-bypass, buy 1000000 AAPL

      at log (routes/trading.js:1475:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "POST /api/trading/orders HTTP/1.1" 201 622 "-" "-"
  console.log
    📝 Order placement requested for user: dev-user-bypass, sell 10 TSLA

      at log (routes/trading.js:1475:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:04 +0000] "POST /api/trading/orders HTTP/1.1" 201 625 "-" "-"
PASS tests/integration/routes/trading.integration.test.js
  Trading Routes Integration Tests
    GET /api/trading (Root endpoint)
      ✓ should return trading API information (55 ms)
      ✓ should handle concurrent requests to root endpoint (31 ms)
    GET /api/trading/health
      ✓ should return health status without authentication (9 ms)
      ✓ should return consistent health status across multiple calls (14 ms)
    GET /api/trading/debug
      ✓ should return debug information about trading tables (24 ms)
    GET /api/trading/signals
      ✓ should return all trading signals without authentication (10 ms)
      ✓ should handle limit parameter for signals (9 ms)
      ✓ should handle symbol filtering (7 ms)
      ✓ should handle signal type filtering (10 ms)
      ✓ should reject invalid limit values (5 ms)
      ✓ should reject excessive limit values (8 ms)
    GET /api/trading/signals/:timeframe
      ✓ should return daily signals (43 ms)
      ✓ should return weekly signals (28 ms)
      ✓ should return monthly signals (26 ms)
      ✓ should reject invalid timeframes (15 ms)
      ✓ should handle pagination parameters (28 ms)
      ✓ should handle latest_only parameter (29 ms)
      ✓ should handle symbol and signal type filters together (22 ms)
    GET /api/trading/summary/:timeframe
      ✓ should return daily signals summary (12 ms)
      ✓ should return weekly signals summary (8 ms)
      ✓ should reject invalid timeframes for summary (11 ms)
    GET /api/trading/swing-signals
      ✓ should return swing trading signals (9 ms)
      ✓ should handle pagination for swing signals (8 ms)
    GET /api/trading/:ticker/technicals
      ✓ should return technical indicators for a stock (7 ms)
      ✓ should handle timeframe parameter for technicals (5 ms)
      ✓ should handle monthly timeframe for technicals (7 ms)
    GET /api/trading/performance
      ✓ should return performance summary of recent signals (10 ms)
      ✓ should handle custom days parameter (9 ms)
      ✓ should handle invalid days parameter gracefully (9 ms)
    GET /api/trading/positions
      ✓ should return current trading positions (8 ms)
      ✓ should return positions summary when requested (6 ms)
    GET /api/trading/orders (Authenticated)
      ✓ should require authentication for orders (7 ms)
      ✓ should return trading orders with valid authentication (21 ms)
      ✓ should handle database unavailability for orders (17 ms)
    POST /api/trading/orders (Authenticated)
      ✓ should require authentication for order creation (11 ms)
      ✓ should create market buy order with valid data (9 ms)
      ✓ should create limit sell order with valid data (8 ms)
      ✓ should reject order with missing required fields (5 ms)
      ✓ should reject order with invalid order type (5 ms)
      ✓ should reject order with invalid side (6 ms)
      ✓ should reject order with invalid quantity (5 ms)
      ✓ should reject limit order without limit price (6 ms)
      ✓ should handle stop limit order with valid data (8 ms)
    GET /api/trading/simulator
      ✓ should return trading simulation results with default parameters (20 ms)
      ✓ should handle custom simulation parameters (14 ms)
      ✓ should reject invalid portfolio values (4 ms)
      ✓ should reject negative portfolio values (4 ms)
      ✓ should reject invalid strategy (4 ms)
    GET /api/trading/strategies
      ✓ should return all trading strategies (11 ms)
      ✓ should filter strategies by category (9 ms)
      ✓ should filter strategies by risk level (9 ms)
      ✓ should filter active strategies only (11 ms)
      ✓ should handle limit parameter (9 ms)
      ✓ should combine multiple filters (9 ms)
    GET /api/trading/strategies/:strategyId
      ✓ should return detailed strategy information (6 ms)
      ✓ should include signals when requested (6 ms)
      ✓ should include backtest results when requested (6 ms)
      ✓ should include both signals and backtest when both requested (5 ms)
      ✓ should return strategy details without optional includes (7 ms)
      ✓ should include signals when requested (5 ms)
      ✓ should include backtest results when requested (7 ms)
      ✓ should handle both signals and backtest parameters (5 ms)
      ✓ should handle invalid strategy ID gracefully (6 ms)
    Advanced Parameter Validation
      ✓ should handle multiple complex query parameters for signals (22 ms)
      ✓ should handle zero and negative page numbers (23 ms)
      ✓ should handle extremely large page numbers (23 ms)
      ✓ should handle performance endpoint with edge case days parameter (9 ms)
      ✓ should handle performance endpoint with very large days parameter (8 ms)
      ✓ should handle simulator with minimum portfolio value (17 ms)
      ✓ should handle simulator with maximum realistic portfolio (16 ms)
      ✓ should handle simulator with extensive symbol list (15 ms)
    Database Edge Cases
      ✓ should handle potential SQL injection in symbol parameters (8 ms)
      ✓ should handle Unicode and international symbols (8 ms)
      ✓ should handle empty string parameters gracefully (9 ms)
      ✓ should handle whitespace-only parameters (9 ms)
    Performance and Load Testing
      ✓ should handle multiple concurrent requests to different endpoints (38 ms)
      ✓ should handle rapid sequential requests to same endpoint (26 ms)
      ✓ should maintain response time consistency across requests (13 ms)
      ✓ should handle memory-intensive operations gracefully (16 ms)
    Data Consistency and Validation
      ✓ should validate signal data structure consistency (27 ms)
      ✓ should validate performance data calculation accuracy (10 ms)
      ✓ should validate swing signals structure (10 ms)
      ✓ should validate strategies data completeness (8 ms)
    Error Recovery and Resilience
      ✓ should gracefully handle database connection timeouts (8 ms)
      ✓ should handle partial data availability scenarios (23 ms)
      ✓ should maintain API availability during high error rates (26 ms)
    Edge Cases and Error Handling
      ✓ should handle malformed JSON in POST requests (7 ms)
      ✓ should handle very long symbol names (8 ms)
      ✓ should handle special characters in symbol parameter (8 ms)
      ✓ should handle concurrent order submissions (22 ms)
      ✓ should handle performance testing with response time validation (23 ms)
      ✓ should handle missing authentication header gracefully (4 ms)
      ✓ should handle malformed authentication token (23 ms)
      ✓ should handle large payload sizes gracefully (8 ms)
      ✓ should handle order validation edge cases (28 ms)
      ✓ should handle complex stop-limit order scenarios (8 ms)

  console.error
    Technical data table for daily timeframe not found

      1480 |
      1481 |     if (!tableExists.rows[0].exists) {
    > 1482 |       console.error(
           |               ^
      1483 |         `Technical data table for ${timeframe} timeframe not found`
      1484 |       );
      1485 |       return res.status(404).json({

      at error (routes/technical.js:1482:15)

  console.log
    📊 [TECHNICAL] Fetching technical history for AAPL (60 days)

      at log (routes/technical.js:1756:11)

  console.log
    🔍 [PATTERNS] Analyzing patterns for AAPL on 1D timeframe

      at log (routes/technical.js:2304:11)

  console.log
    🔍 [PATTERNS] Analyzing patterns for AAPL on 1D timeframe

      at log (routes/technical.js:2304:11)

  console.error
    Error getting price data for patterns: Error: Database connection failed
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/technical.test.js:962:28)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      2645 |     return null;
      2646 |   } catch (error) {
    > 2647 |     console.error("Error getting price data for patterns:", error);
           |             ^
      2648 |     // Return null instead of throwing
      2649 |     return null;
      2650 |   }

      at error (routes/technical.js:2647:13)
      at analyzePatterns (routes/technical.js:2347:23)
      at routes/technical.js:2310:29

  console.error
    Error in technical overview endpoint: Error: Connection timeout
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/technical.test.js:979:35)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      1513 |     });
      1514 |   } catch (error) {
    > 1515 |     console.error("Error in technical overview endpoint:", error);
           |             ^
      1516 |     return res.status(500).json({
      1517 |       success: false,
      1518 |       error: "Failed to retrieve technical overview data",

      at error (routes/technical.js:1515:13)

  console.log
    📊 Technical chart requested - symbol: AAPL, period: 1M, interval: 1d

      at log (routes/technical.js:736:13)

  console.log
    📊 Technical chart requested - symbol: MSFT, period: 1Y, interval: 1d

      at log (routes/technical.js:736:13)

  console.log
    📊 Technical chart requested - symbol: AAPL, period: 1M, interval: 1d

      at log (routes/technical.js:736:13)

  console.log
    📊 Technical chart requested - symbol: AAPL, period: 1M, interval: 1d

      at log (routes/technical.js:736:13)

  console.log
    📊 Technical chart requested - symbol: AAPL, period: 1M, interval: 1d

      at log (routes/technical.js:736:13)

  console.log
    📊 Technical chart requested - symbol: AAPL, period: 1M, interval: 1d

      at log (routes/technical.js:736:13)

  console.log
    📊 Technical chart requested - symbol: AAPL, period: 1M, interval: 1d

      at log (routes/technical.js:736:13)

  console.log
    📊 Technical chart requested - symbol: AAPL, period: 1M, interval: 1d

      at log (routes/technical.js:736:13)

  console.error
    Chart data tables not available or database connection failed

      753 |       !tableCheck.rows[0].exists
      754 |     ) {
    > 755 |       console.error(
          |               ^
      756 |         "Chart data tables not available or database connection failed"
      757 |       );
      758 |       return res.status(404).json({

      at error (routes/technical.js:755:15)

  console.log
    📊 Technical chart requested - symbol: AAPL, timeframe: invalid, period: 1m

      at log (routes/technical.js:839:13)

  console.log
    📊 Technical chart requested - symbol: AAPL, timeframe: daily, period: invalid

      at log (routes/technical.js:839:13)

  console.log
    📊 Technical chart requested - symbol: AAPL, timeframe: daily, period: 1m

      at log (routes/technical.js:839:13)

PASS tests/unit/routes/technical.test.js
  Technical Analysis Routes - Testing Your Actual Site
    GET /technical/ping - Basic endpoint
      ✓ should return ping response (45 ms)
    GET /technical/ - Root technical endpoint
      ✓ should return latest technical data for all symbols using daily timeframe (6 ms)
      ✓ should return 404 when technical_data_daily table doesn't exist (5 ms)
    GET /technical/:timeframe - Timeframe-based data
      ✓ should return daily technical data with pagination (9 ms)
      ✓ should validate timeframe parameter (4 ms)
      ✓ should handle symbol filtering (11 ms)
      ✓ should handle RSI filtering (4 ms)
    GET /technical/:timeframe/summary - Technical summary
      ✓ should return technical summary statistics (4 ms)
      ✓ should return error when table doesn't exist (7 ms)
    GET /technical/data/:symbol - Individual symbol data
      ✓ should return latest technical data for specific symbol (8 ms)
      ✓ should return 404 for non-existent symbol (4 ms)
      ✓ should return error when table missing (6 ms)
    GET /technical/indicators/:symbol - Technical indicators
      ✓ should return 30-day technical indicators for symbol (4 ms)
    GET /technical/history/:symbol - Technical history
      ✓ should return technical history with custom days parameter (5 ms)
    GET /technical/support-resistance/:symbol - Support/Resistance levels
      ✓ should return support and resistance levels (6 ms)
      ✓ should validate timeframe for support/resistance (3 ms)
    GET /technical/daily - Filtered technical data
      ✓ should handle filtered technical data requests (3 ms)
      ✓ should handle technical data queries safely (5 ms)
    GET /technical/patterns/:symbol - Pattern recognition
      ✓ should return technical pattern analysis (5 ms)
      ✓ should return error on database failures (5 ms)
    Error handling - Your site's error patterns
      ✓ should handle database errors with proper error responses (6 ms)
      ✓ should return structured error responses for invalid timeframes (4 ms)
      ✓ should handle large limit values safely (3 ms)
    GET /technical/chart/:symbol - Chart data for symbol
      ✓ should return chart data with default parameters (7 ms)
      ✓ should return chart data with custom parameters (5 ms)
      ✓ should include proper OHLCV structure (5 ms)
      ✓ should include complete chart metadata (6 ms)
      ✓ should include chart data with proper timestamp (5 ms)
      ✓ should handle volume inclusion correctly (9 ms)
      ✓ should handle table not exists gracefully (5 ms)
    GET /technical/chart - Query-based chart endpoint
      ✓ should validate timeframe parameter (5 ms)
      ✓ should validate period parameter (6 ms)
      ✓ should filter indicators correctly (4 ms)

  console.log
    📋 All alerts requested for user: dev-user-bypass, status: all

      at log (routes/alerts.js:325:13)

  console.log
    🔔 Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:38:13)

  console.log
    🔔 Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:38:13)

  console.log
    🔔 Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:38:13)

  console.log
    🔔 Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:38:13)

  console.log
    🔔 Active alerts requested for user: dev-user-bypass, status: triggered

      at log (routes/alerts.js:38:13)

  console.log
    📍 Alert distance requested for AAPL by user: dev-user-bypass

      at log (routes/alerts.js:1087:13)

  console.log
    📍 Alert distance requested for INVALID by user: dev-user-bypass

      at log (routes/alerts.js:1087:13)

  console.log
    🔔 Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:38:13)

  console.log
    🙈 Alert dismiss requested for 1 by user: dev-user-bypass

      at log (routes/alerts.js:1127:13)

  console.log
    🙈 Alert dismiss requested for invalid-id by user: dev-user-bypass

      at log (routes/alerts.js:1127:13)

  console.log
    🆕 New alert creation requested by user: dev-user-bypass for AAPL

      at log (routes/alerts.js:500:13)

  console.log
    💰 Price alerts requested for AAPL by user: dev-user-bypass, status: all

      at log (routes/alerts.js:1168:13)

  console.log
    💰 Price alerts requested for AAPL by user: dev-user-bypass, status: active

      at log (routes/alerts.js:1168:13)

  console.log
    🗑️ Deleting alert 1 for user: dev-user-bypass

      at log (routes/alerts.js:2380:13)

  console.log
    🗑️ Deleting alert 99999 for user: dev-user-bypass

      at log (routes/alerts.js:2380:13)

  console.log
    📋 Alert history requested for user: dev-user-bypass

      at log (routes/alerts.js:1287:13)

  console.log
    📋 Alert history requested for user: dev-user-bypass

      at log (routes/alerts.js:1287:13)

  console.log
    📋 Alert history requested for user: dev-user-bypass

      at log (routes/alerts.js:1287:13)

  console.log
    ⚙️ Alert settings requested for user: dev-user-bypass

      at log (routes/alerts.js:821:13)

  console.log
    No user-specific alert settings found, returning defaults

      at log (routes/alerts.js:843:15)

  console.log
    🔧 Alert settings update requested for user: dev-user-bypass

      at log (routes/alerts.js:1224:13)

  console.log
    🔧 Alert settings update requested for user: dev-user-bypass

      at log (routes/alerts.js:1224:13)

  console.log
    🔔 Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:38:13)

  console.log
    💰 Price alerts requested for INVALID_SYMBOL_123! by user: dev-user-bypass, status: all

      at log (routes/alerts.js:1168:13)

PASS tests/unit/routes/alerts.test.js
  Alerts Routes Unit Tests
    GET /alerts/
      ✓ should return alerts info (22 ms)
    GET /alerts/active
      ✓ should return active alerts with proper structure (6 ms)
      ✓ should handle limit parameter (8 ms)
      ✓ should handle offset parameter (5 ms)
      ✓ should handle priority filter (5 ms)
      ✓ should handle status filter (6 ms)
    GET /alerts/distance/:symbol
      ✓ should return distance-based alert analysis (5 ms)
      ✓ should handle invalid symbol (5 ms)
    PUT /alerts/:id/dismiss
      ✓ should handle alert dismissal (10 ms)
      ✓ should handle invalid alert ID format (5 ms)
    POST /alerts/
      ✓ should handle alert creation (8 ms)
    POST /alerts/price
      ✓ should create price alert with valid data (4 ms)
      ✓ should validate required fields (13 ms)
      ✓ should handle duplicate price alerts (8 ms)
    GET /alerts/price/:symbol
      ✓ should return price alerts for symbol (5 ms)
      ✓ should filter alerts by status (9 ms)
    POST /alerts/volume
      ✓ should create volume alert (5 ms)
      ✓ should validate threshold multiplier range (4 ms)
    GET /alerts/volume/analysis/:symbol
      ✓ should return volume analysis for symbol (5 ms)
      ✓ should include historical volume data (4 ms)
    POST /alerts/technical
      ✓ should create RSI alert (4 ms)
      ✓ should create MACD alert (6 ms)
      ✓ should validate supported indicators (4 ms)
    GET /alerts/technical/status/:symbol
      ✓ should return technical alert status (4 ms)
      ✓ should filter by indicator type (6 ms)
    POST /alerts/news
      ✓ should create news sentiment alert (5 ms)
      ✓ should validate news sources (4 ms)
    GET /alerts/news/recent/:symbol
      ✓ should return recent news alerts (7 ms)
      ✓ should filter by time period (4 ms)
    POST /alerts/portfolio
      ✓ should create portfolio-wide alert (5 ms)
      ✓ should create sector concentration alert (6 ms)
    GET /alerts/portfolio/status
      ✓ should return portfolio alert status (4 ms)
      ✓ should include triggered alerts summary (4 ms)
    PUT /alerts/:id/update
      ✓ should update alert settings (4 ms)
      ✓ should validate update data (5 ms)
    DELETE /alerts/:id
      ✓ should delete alert (5 ms)
      ✓ should handle non-existent alert deletion (5 ms)
    POST /alerts/bulk/dismiss
      ✓ should dismiss multiple alerts (5 ms)
      ✓ should validate alert IDs array (4 ms)
    GET /alerts/history
      ✓ should return alert history with pagination (8 ms)
      ✓ should filter history by date range (6 ms)
      ✓ should filter by alert type (5 ms)
    GET /alerts/history/performance
      ✓ should return alert performance analytics (6 ms)
      ✓ should break down performance by alert type (3 ms)
    GET /alerts/settings
      ✓ should return user alert settings (7 ms)
    PUT /alerts/settings
      ✓ should update alert settings (6 ms)
      ✓ should validate settings data (5 ms)
    Error Handling
      ✓ should handle database connection errors (5 ms)
      ✓ should handle missing authentication (5 ms)
      ✓ should handle malformed request data (4 ms)
      ✓ should handle invalid symbol format (4 ms)
      ✓ should handle rate limiting for alert creation (35 ms)

  console.log
    Portfolio holdings endpoint called for authenticated user: dev-user-bypass

      at log (routes/portfolio.js:1750:13)

  console.log
    Portfolio performance endpoint called for user: dev-user-bypass, timeframe: 1y

      at log (routes/portfolio.js:1196:13)

  console.log
    📊 Retrieved 2 performance data points

      at log (routes/portfolio.js:1224:13)

  console.log
    Portfolio analytics endpoint called for authenticated user: dev-user-bypass, timeframe: 1y

      at log (routes/portfolio.js:369:11)

  console.log
    💰 Portfolio value requested for user: dev-user-bypass

      at log (routes/portfolio.js:6109:13)

  console.log
    Portfolio risk analysis endpoint called for user: dev-user-bypass

      at log (routes/portfolio.js:840:11)

  console.log
    📈 Portfolio returns requested for user: dev-user-bypass, period: 1y

      at log (routes/portfolio.js:6207:13)

  console.log
    Portfolio benchmark endpoint called for SPY, timeframe: 1y

      at log (routes/portfolio.js:1526:13)

  console.log
    Portfolio risk endpoint called for user: dev-user-bypass

      at log (routes/portfolio.js:2243:13)

  console.log
    Portfolio risk metrics endpoint called for user: dev-user-bypass

      at log (routes/portfolio.js:907:11)

  console.log
    Portfolio rebalance execution called for user: dev-user-bypass

      at log (routes/portfolio.js:2166:13)

  console.log
    Portfolio rebalance execution called for user: dev-user-bypass

      at log (routes/portfolio.js:2166:13)

  console.log
    Portfolio rebalance execution called for user: dev-user-bypass

      at log (routes/portfolio.js:2166:13)

  console.log
    Portfolio rebalance execution called for user: dev-user-bypass

      at log (routes/portfolio.js:2166:13)

  console.log
    📊 Portfolio allocation requested for user: dev-user-bypass

      at log (routes/portfolio.js:5878:13)

  console.log
    Portfolio optimization endpoint called for authenticated user: dev-user-bypass

      at log (routes/portfolio.js:2757:11)

  console.log
    Portfolio optimization endpoint called for authenticated user: dev-user-bypass

      at log (routes/portfolio.js:2757:11)

  console.log
    Portfolio optimization endpoint called for authenticated user: dev-user-bypass

      at log (routes/portfolio.js:2757:11)

  console.log
    Portfolio optimization execution requested for user: dev-user-bypass

      at log (routes/portfolio.js:2825:11)

  console.log
    📊 Portfolio analysis requested for user: dev-user-bypass, period: 1y

      at log (routes/portfolio.js:618:13)

  console.log
    📊 Portfolio analysis requested for user: dev-user-bypass, period: 1y

      at log (routes/portfolio.js:618:13)

  console.log
    📊 Portfolio analysis requested for user: dev-user-bypass, period: 1y

      at log (routes/portfolio.js:618:13)

  console.log
    Portfolio rebalance endpoint called for user: dev-user-bypass, strategy: balanced

      at log (routes/portfolio.js:1884:13)

  console.log
    POST /rebalance called for user: dev-user-bypass

      at log (routes/portfolio.js:2066:13)

  console.log
    POST /rebalance called for user: dev-user-bypass

      at log (routes/portfolio.js:2066:13)

  console.log
    Portfolio metrics requested for user: dev-user-bypass, period: 30d, include_risk: false

      at log (routes/portfolio.js:2883:11)

  console.log
    Portfolio metrics requested for user: dev-user-bypass, period: 30d, include_risk: true

      at log (routes/portfolio.js:2883:11)

  console.log
    Portfolio metrics requested for user: dev-user-bypass, period: 30d, include_risk: false

      at log (routes/portfolio.js:2883:11)

  console.log
    Detailed holdings requested for user: dev-user-bypass, min_value: 0, sort: market_value desc

      at log (routes/portfolio.js:3037:11)

  console.log
    Detailed holdings requested for user: dev-user-bypass, min_value: 1000, sort: market_value desc

      at log (routes/portfolio.js:3037:11)

  console.log
    Detailed holdings requested for user: dev-user-bypass, min_value: 0, sort: unrealized_pnl desc

      at log (routes/portfolio.js:3037:11)

  console.log
    👀 Portfolio watchlist requested for user: dev-user-bypass

      at log (routes/portfolio.js:5834:13)

  console.log
    👀 Portfolio watchlist requested for user: dev-user-bypass

      at log (routes/portfolio.js:5834:13)

  console.log
    Portfolio holdings endpoint called for authenticated user: dev-user-bypass

      at log (routes/portfolio.js:1750:13)

  console.log
    Portfolio metrics requested for user: dev-user-bypass, period: invalid, include_risk: notboolean

      at log (routes/portfolio.js:2883:11)

PASS tests/unit/routes/portfolio.test.js
  Portfolio Routes Unit Tests
    GET /portfolio
      ✓ should return portfolio info (53 ms)
    GET /portfolio/holdings
      ✓ should return holdings data (7 ms)
    GET /portfolio/performance
      ✓ should return performance data (8 ms)
    GET /portfolio/analytics
      ✓ should return analytics data (7 ms)
    GET /portfolio/value
      ✓ should return portfolio value data (5 ms)
    GET /portfolio/risk-analysis
      ✓ should return risk analysis data (7 ms)
    GET /portfolio/returns
      ✓ should return returns data (6 ms)
    GET /portfolio/benchmark
      ✓ should return benchmark data (8 ms)
    GET /portfolio/risk
      ✓ should return risk data (6 ms)
    GET /portfolio/risk-metrics
      ✓ should return risk metrics (8 ms)
    POST /portfolio/rebalance/execute
      ✓ should execute rebalance with valid recommendations (8 ms)
      ✓ should reject rebalance without recommendations (7 ms)
      ✓ should reject invalid recommendations format (5 ms)
    GET /portfolio/allocation - metadata integration
      ✓ should return allocation with last rebalance date from metadata (10 ms)
    GET /portfolio/optimization
      ✓ should return portfolio optimization recommendations (5 ms)
      ✓ should handle optimization with risk tolerance parameters (5 ms)
      ✓ should include rebalancing suggestions (7 ms)
    POST /portfolio/optimization/execute
      ✓ should execute optimization recommendations (5 ms)
    GET /portfolio/analysis
      ✓ should return comprehensive portfolio analysis (8 ms)
      ✓ should include sector breakdown (6 ms)
      ✓ should handle time period analysis (5 ms)
    GET /portfolio/rebalance
      ✓ should return rebalancing recommendations (5 ms)
      ✓ should handle custom target allocations (6 ms)
      ✓ should validate allocation percentages sum to 100 (4 ms)
    GET /portfolio/metrics
      ✓ should return detailed portfolio metrics (6 ms)
      ✓ should include advanced risk metrics (7 ms)
      ✓ should support different time periods (5 ms)
    GET /portfolio/holdings/detailed
      ✓ should return detailed holdings information (6 ms)
      ✓ should filter holdings by minimum value (6 ms)
      ✓ should sort holdings by different criteria (5 ms)
    POST /portfolio/holdings/add
      ✓ should add new holding to portfolio (3 ms)
      ✓ should validate required fields (5 ms)
      ✓ should handle duplicate holdings (4 ms)
    GET /portfolio/performance/history
      ✓ should return historical performance data (4 ms)
      ✓ should handle date range filtering (6 ms)
      ✓ should include benchmark comparison (4 ms)
    GET /portfolio/performance/attribution
      ✓ should return performance attribution analysis (4 ms)
      ✓ should break down attribution by holdings (5 ms)
    GET /portfolio/watchlist
      ✓ should return portfolio watchlist (5 ms)
      ✓ should include price alerts (5 ms)
    POST /portfolio/watchlist/add
      ✓ should add symbol to watchlist (5 ms)
      ✓ should validate symbol format (4 ms)
    GET /portfolio/export
      ✓ should export portfolio data in CSV format (3 ms)
      ✓ should export portfolio data in JSON format (5 ms)
      ✓ should include all requested data fields (4 ms)
    Error handling
      ✓ should handle invalid endpoints gracefully (4 ms)
      ✓ should handle missing authorization (6 ms)
      ✓ should handle database connection errors (5 ms)
      ✓ should handle invalid query parameters (5 ms)
      ✓ should handle large data requests with pagination (5 ms)

  console.error
    API key storage error: Error: API key data exceeds maximum length limits
        at ApiKeyService.storeApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:771:15)
        at storeApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1492:34)
        at Object.storeApiKey (/home/stocks/algo/webapp/lambda/tests/unit/utils/apiKeyService.test.js:201:28)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      894 |     } catch (error) {
      895 |       this.recordFailure(error);
    > 896 |       console.error("API key storage error:", error);
          |               ^
      897 |       throw new Error(
      898 |         `Failed to store API key for ${provider}: ${error.message}`
      899 |       );

      at ApiKeyService.error [as storeApiKey] (utils/apiKeyService.js:896:15)
      at storeApiKey (utils/apiKeyService.js:1492:34)
      at Object.storeApiKey (tests/unit/utils/apiKeyService.test.js:201:28)

  console.error
    API key storage error: Error: JWT validation failed: JWT verification not configured
        at ApiKeyService.storeApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:781:15)
        at storeApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1492:14)
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/utils/apiKeyService.test.js:219:22)

      894 |     } catch (error) {
      895 |       this.recordFailure(error);
    > 896 |       console.error("API key storage error:", error);
          |               ^
      897 |       throw new Error(
      898 |         `Failed to store API key for ${provider}: ${error.message}`
      899 |       );

      at ApiKeyService.error [as storeApiKey] (utils/apiKeyService.js:896:15)
      at storeApiKey (utils/apiKeyService.js:1492:14)
      at Object.<anonymous> (tests/unit/utils/apiKeyService.test.js:219:22)

  console.error
    API key storage error: Error: Database connection failed
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/utils/apiKeyService.test.js:230:23)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      894 |     } catch (error) {
      895 |       this.recordFailure(error);
    > 896 |       console.error("API key storage error:", error);
          |               ^
      897 |       throw new Error(
      898 |         `Failed to store API key for ${provider}: ${error.message}`
      899 |       );

      at ApiKeyService.error [as storeApiKey] (utils/apiKeyService.js:896:15)
      at storeApiKey (utils/apiKeyService.js:1492:14)
      at Object.<anonymous> (tests/unit/utils/apiKeyService.test.js:234:22)

  console.error
    API key retrieval error: Error: JWT validation failed: JWT verification not configured
        at ApiKeyService.getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:923:15)
        at getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1499:14)
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/utils/apiKeyService.test.js:292:22)

      1031 |     } catch (error) {
      1032 |       this.recordFailure(error);
    > 1033 |       console.error("API key retrieval error:", error);
           |               ^
      1034 |
      1035 |       if (error.message.includes("circuit breaker")) {
      1036 |         throw error;

      at ApiKeyService.error [as getApiKey] (utils/apiKeyService.js:1033:15)
      at getApiKey (utils/apiKeyService.js:1499:14)
      at Object.<anonymous> (tests/unit/utils/apiKeyService.test.js:292:22)

  console.error
    API key validation error: Error: JWT validation failed: JWT verification not configured
        at ApiKeyService.validateApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1068:15)
        at validateApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1506:14)
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/utils/apiKeyService.test.js:362:22)

      1156 |       };
      1157 |     } catch (error) {
    > 1158 |       console.error("API key validation error:", error);
           |               ^
      1159 |       return {
      1160 |         valid: false,
      1161 |         error: error.message,

      at ApiKeyService.error [as validateApiKey] (utils/apiKeyService.js:1158:15)
      at validateApiKey (utils/apiKeyService.js:1506:14)
      at Object.<anonymous> (tests/unit/utils/apiKeyService.test.js:362:22)

  console.error
    API key circuit breaker OPENED after 5 failures: Database connection failed

      644 |     if (this.circuitBreaker.failures >= this.circuitBreaker.maxFailures) {
      645 |       this.circuitBreaker.state = "OPEN";
    > 646 |       console.error(
          |               ^
      647 |         `API key circuit breaker OPENED after ${this.circuitBreaker.failures} failures:`,
      648 |         error.message
      649 |       );

      at ApiKeyService.error [as recordFailure] (utils/apiKeyService.js:646:15)
      at ApiKeyService.recordFailure [as deleteApiKey] (utils/apiKeyService.js:1287:12)
      at deleteApiKey (utils/apiKeyService.js:1517:14)
      at Object.<anonymous> (tests/unit/utils/apiKeyService.test.js:438:22)

  console.error
    API key deletion error: Error: Database connection failed
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/utils/apiKeyService.test.js:435:23)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      1286 |     } catch (error) {
      1287 |       this.recordFailure(error);
    > 1288 |       console.error("API key deletion error:", error);
           |               ^
      1289 |       return {
      1290 |         success: false,
      1291 |         error: `Failed to delete API key for ${provider}: ${error.message}`,

      at ApiKeyService.error [as deleteApiKey] (utils/apiKeyService.js:1288:15)
      at deleteApiKey (utils/apiKeyService.js:1517:14)
      at Object.<anonymous> (tests/unit/utils/apiKeyService.test.js:438:22)

  console.error
    API key circuit breaker OPENED after 6 failures: JWT validation failed: JWT verification not configured

      644 |     if (this.circuitBreaker.failures >= this.circuitBreaker.maxFailures) {
      645 |       this.circuitBreaker.state = "OPEN";
    > 646 |       console.error(
          |               ^
      647 |         `API key circuit breaker OPENED after ${this.circuitBreaker.failures} failures:`,
      648 |         error.message
      649 |       );

      at ApiKeyService.error [as recordFailure] (utils/apiKeyService.js:646:15)
      at ApiKeyService.recordFailure (utils/apiKeyService.js:1350:12)
      at listProviders (utils/apiKeyService.js:1524:14)
      at Object.<anonymous> (tests/unit/utils/apiKeyService.test.js:497:22)

  console.error
    Provider listing error: Error: JWT validation failed: JWT verification not configured
        at ApiKeyService.listProviders (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1315:15)
        at listProviders (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1524:14)
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/utils/apiKeyService.test.js:497:22)

      1349 |     } catch (error) {
      1350 |       this.recordFailure(error);
    > 1351 |       console.error("Provider listing error:", error);
           |               ^
      1352 |       throw error; // Re-throw error so wrapper can handle it
      1353 |     }
      1354 |   }

      at ApiKeyService.error [as listProviders] (utils/apiKeyService.js:1351:15)
      at listProviders (utils/apiKeyService.js:1524:14)
      at Object.<anonymous> (tests/unit/utils/apiKeyService.test.js:497:22)

  console.warn
    API key providers query returned null result, database may be unavailable

      1330 |       // Add null checking for database availability
      1331 |       if (!dbResult || !dbResult.rows) {
    > 1332 |         console.warn(
           |                 ^
      1333 |           "API key providers query returned null result, database may be unavailable"
      1334 |         );
      1335 |         this.recordFailure(new Error("Database temporarily unavailable"));

      at ApiKeyService.warn [as listProviders] (utils/apiKeyService.js:1332:17)
      at listProviders (utils/apiKeyService.js:1524:14)
      at Object.<anonymous> (tests/unit/utils/apiKeyService.test.js:505:22)

  console.error
    API key circuit breaker OPENED after 7 failures: Database temporarily unavailable

      644 |     if (this.circuitBreaker.failures >= this.circuitBreaker.maxFailures) {
      645 |       this.circuitBreaker.state = "OPEN";
    > 646 |       console.error(
          |               ^
      647 |         `API key circuit breaker OPENED after ${this.circuitBreaker.failures} failures:`,
      648 |         error.message
      649 |       );

      at ApiKeyService.error [as recordFailure] (utils/apiKeyService.js:646:15)
      at ApiKeyService.recordFailure (utils/apiKeyService.js:1335:14)
      at listProviders (utils/apiKeyService.js:1524:14)
      at Object.<anonymous> (tests/unit/utils/apiKeyService.test.js:505:22)

  console.log
    JWT decode failed in dev mode, trying other token patterns: JWT validation failed

      at ApiKeyService.log [as validateJwtToken] (utils/apiKeyService.js:256:25)

  console.error
    API key circuit breaker OPENED after 8 failures: API key data exceeds maximum length limits

      644 |     if (this.circuitBreaker.failures >= this.circuitBreaker.maxFailures) {
      645 |       this.circuitBreaker.state = "OPEN";
    > 646 |       console.error(
          |               ^
      647 |         `API key circuit breaker OPENED after ${this.circuitBreaker.failures} failures:`,
      648 |         error.message
      649 |       );

      at ApiKeyService.error [as recordFailure] (utils/apiKeyService.js:646:15)
      at ApiKeyService.recordFailure [as storeApiKey] (utils/apiKeyService.js:895:12)
      at storeApiKey (utils/apiKeyService.js:1492:34)
      at Object.storeApiKey (tests/unit/utils/apiKeyService.test.js:685:28)

  console.error
    API key storage error: Error: API key data exceeds maximum length limits
        at ApiKeyService.storeApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:771:15)
        at storeApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1492:34)
        at Object.storeApiKey (/home/stocks/algo/webapp/lambda/tests/unit/utils/apiKeyService.test.js:685:28)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      894 |     } catch (error) {
      895 |       this.recordFailure(error);
    > 896 |       console.error("API key storage error:", error);
          |               ^
      897 |       throw new Error(
      898 |         `Failed to store API key for ${provider}: ${error.message}`
      899 |       );

      at ApiKeyService.error [as storeApiKey] (utils/apiKeyService.js:896:15)
      at storeApiKey (utils/apiKeyService.js:1492:34)
      at Object.storeApiKey (tests/unit/utils/apiKeyService.test.js:685:28)

  console.warn
    Using environment variable for encryption key - consider using AWS Secrets Manager

      538 |         const envKey = process.env.API_KEY_ENCRYPTION_SECRET;
      539 |         if (envKey) {
    > 540 |           console.warn(
          |                   ^
      541 |             "Using environment variable for encryption key - consider using AWS Secrets Manager"
      542 |           );
      543 |           this.encryptionKey = envKey;

      at ApiKeyService.warn [as getEncryptionKey] (utils/apiKeyService.js:540:19)
      at ApiKeyService.getEncryptionKey [as encryptApiKey] (utils/apiKeyService.js:658:40)
      at ApiKeyService.encryptApiKey [as storeApiKey] (utils/apiKeyService.js:827:43)
      at storeApiKey (utils/apiKeyService.js:1492:14)
      at Object.<anonymous> (tests/unit/utils/apiKeyService.test.js:772:22)

  console.error
    Failed to get encryption key: Access denied

      570 |       return this.encryptionKey;
      571 |     } catch (error) {
    > 572 |       console.error("Failed to get encryption key:", error.message);
          |               ^
      573 |       // Development fallback
      574 |       console.warn("Using development fallback encryption key");
      575 |       this.encryptionKey = "dev-test-key-32-chars-long1234";

      at ApiKeyService.error [as getEncryptionKey] (utils/apiKeyService.js:572:15)
      at ApiKeyService.encryptApiKey (utils/apiKeyService.js:658:29)
      at ApiKeyService.storeApiKey (utils/apiKeyService.js:827:32)
      at storeApiKey (utils/apiKeyService.js:1492:14)
      at Object.<anonymous> (tests/unit/utils/apiKeyService.test.js:802:22)

  console.warn
    Using development fallback encryption key

      572 |       console.error("Failed to get encryption key:", error.message);
      573 |       // Development fallback
    > 574 |       console.warn("Using development fallback encryption key");
          |               ^
      575 |       this.encryptionKey = "dev-test-key-32-chars-long1234";
      576 |       return this.encryptionKey;
      577 |     }

      at ApiKeyService.warn [as getEncryptionKey] (utils/apiKeyService.js:574:15)
      at ApiKeyService.encryptApiKey (utils/apiKeyService.js:658:29)
      at ApiKeyService.storeApiKey (utils/apiKeyService.js:827:32)
      at storeApiKey (utils/apiKeyService.js:1492:14)
      at Object.<anonymous> (tests/unit/utils/apiKeyService.test.js:802:22)

  console.error
    Audit logging error: Error: Audit log failed
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/utils/apiKeyService.test.js:976:32)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      1054 |       ); // IP address can be added later
      1055 |     } catch (error) {
    > 1056 |       console.error("Audit logging error:", error);
           |               ^
      1057 |       // Don't throw - audit logging failures shouldn't break main functionality
      1058 |     }
      1059 |   }

      at ApiKeyService.error [as logAuditEvent] (utils/apiKeyService.js:1056:15)
      at ApiKeyService.storeApiKey (utils/apiKeyService.js:874:7)
      at storeApiKey (utils/apiKeyService.js:1492:14)
      at Object.<anonymous> (tests/unit/utils/apiKeyService.test.js:979:22)

PASS tests/unit/utils/apiKeyService.test.js
  API Key Service
    validateJwtToken
      ✓ should validate JWT token in test environment (2 ms)
      ✓ should reject invalid JWT tokens (1 ms)
      ✓ should handle empty or invalid token input
      ✓ should accept dev-bypass-token in development (2 ms)
    storeApiKey
      ✓ should store API key successfully (1 ms)
      ✓ should validate input parameters (1 ms)
      ✓ should validate provider name for SQL injection
      ✓ should validate required fields
      ✓ should validate field lengths (31 ms)
      ✓ should handle JWT validation failure (2 ms)
      ✓ should handle database errors (1 ms)
    getApiKey
      ✓ should retrieve API key successfully (1 ms)
      ✓ should return null for non-existent keys (1 ms)
      ✓ should handle JWT validation failure (2 ms)
      ✓ should update last used timestamp
    validateApiKey
      ✓ should validate API key successfully (1 ms)
      ✓ should handle API key not configured (1 ms)
      ✓ should handle JWT validation failure (6 ms)
      ✓ should test connection when requested (1 ms)
    deleteApiKey
      ✓ should delete API key successfully (1 ms)
      ✓ should handle deletion of non-existent key
      ✓ should handle JWT validation failure gracefully (1 ms)
      ✓ should handle database errors (2 ms)
    listProviders
      ✓ should return list of configured providers (1 ms)
      ✓ should return empty array for no providers (1 ms)
      ✓ should handle JWT validation failure (2 ms)
      ✓ should handle database unavailable gracefully (1 ms)
    getDecryptedApiKey
      ✓ should retrieve API key by user ID (1 ms)
      ✓ should return null for non-existent key (1 ms)
    cache management
      ✓ should invalidate session cache
      ✓ should clear all caches (2 ms)
    health status
      ✓ should return health status (1 ms)
    circuit breaker functionality
      ✓ should handle circuit breaker failures (1 ms)
      ✓ should test JWT circuit breaker functionality (1 ms)
    security features
      ✓ should use different salts for different users (1 ms)
      ✓ should sanitize log output (1 ms)
      ✓ should validate input lengths (2 ms)
    encryption and decryption
      ✓ should handle production encryption mode (1 ms)
      ✓ should handle encryption key from environment (2 ms)
      ✓ should handle secrets manager errors (2 ms)
    production JWT verification
      ✓ should handle Cognito JWT verification (1 ms)
      ✓ should handle Cognito JWT verification failure (1 ms)
      ✓ should use cached JWT session (1 ms)
    edge cases and error handling
      ✓ should handle database null result
      ✓ should handle missing required fields for provider (1 ms)
      ✓ should handle connection test for alpaca (1 ms)
    audit logging
      ✓ should log audit events (1 ms)
      ✓ should handle audit logging errors gracefully (1 ms)
    development mode features
      ✓ should handle development bypass token (1 ms)
      ✓ should reset circuit breaker in development (1 ms)
    provider specific functionality
      ✓ should handle different provider required fields
      ✓ should handle unknown provider gracefully (1 ms)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.error
    Database query error: {
      error: 'Database connection failed - no fallback available',
      query: 'SELECT NOW() as current_time',
      params: 'no parameters',
      code: 'DB_CONNECTION_FAILED'
    }

      416 |     return result;
      417 |   } catch (error) {
    > 418 |     console.error("Database query error:", {
          |             ^
      419 |       error: error.message,
      420 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      421 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:418:13)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:52:22)

  console.error
    Database connection error - no fallback available

      433 |       error.code === "ECONNABORTED"
      434 |     ) {
    > 435 |       console.error("Database connection error - no fallback available");
          |               ^
      436 |       error.message = `Database connection failed: ${error.message}`;
      437 |       throw error;
      438 |     }

      at error (utils/database.js:435:15)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:52:22)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.error
    Database query error: {
      error: 'Database connection failed - no fallback available',
      query: 'INSERT INTO stock_symbols (symbol, name, market_category) VALUES ($1, $2, $3) ON CONFLICT (symbol) D...',
      params: '3 parameters',
      code: 'DB_CONNECTION_FAILED'
    }

      416 |     return result;
      417 |   } catch (error) {
    > 418 |     console.error("Database query error:", {
          |             ^
      419 |       error: error.message,
      420 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      421 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:418:13)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:62:7)

  console.error
    Database connection error - no fallback available

      433 |       error.code === "ECONNABORTED"
      434 |     ) {
    > 435 |       console.error("Database connection error - no fallback available");
          |               ^
      436 |       error.message = `Database connection failed: ${error.message}`;
      437 |       throw error;
      438 |     }

      at error (utils/database.js:435:15)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:62:7)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.error
    Database query error: {
      error: 'Database connection failed - no fallback available',
      query: 'SELECT * FROM stock_symbols WHERE symbol = $1',
      params: '1 parameters',
      code: 'DB_CONNECTION_FAILED'
    }

      416 |     return result;
      417 |   } catch (error) {
    > 418 |     console.error("Database query error:", {
          |             ^
      419 |       error: error.message,
      420 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      421 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:418:13)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:83:22)

  console.error
    Database connection error - no fallback available

      433 |       error.code === "ECONNABORTED"
      434 |     ) {
    > 435 |       console.error("Database connection error - no fallback available");
          |               ^
      436 |       error.message = `Database connection failed: ${error.message}`;
      437 |       throw error;
      438 |     }

      at error (utils/database.js:435:15)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:83:22)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.error
    Database query error: {
      error: 'Database connection failed - no fallback available',
      query: 'SELECT * FROM non_existent_table_12345',
      params: 'no parameters',
      code: 'DB_CONNECTION_FAILED'
    }

      416 |     return result;
      417 |   } catch (error) {
    > 418 |     console.error("Database query error:", {
          |             ^
      419 |       error: error.message,
      420 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      421 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:418:13)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:100:22)

  console.error
    Database connection error - no fallback available

      433 |       error.code === "ECONNABORTED"
      434 |     ) {
    > 435 |       console.error("Database connection error - no fallback available");
          |               ^
      436 |       error.message = `Database connection failed: ${error.message}`;
      437 |       throw error;
      438 |     }

      at error (utils/database.js:435:15)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:100:22)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.error
    Database query error: {
      error: 'Database connection failed - no fallback available',
      query: 'INVALID SQL SYNTAX HERE',
      params: 'no parameters',
      code: 'DB_CONNECTION_FAILED'
    }

      416 |     return result;
      417 |   } catch (error) {
    > 418 |     console.error("Database query error:", {
          |             ^
      419 |       error: error.message,
      420 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      421 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:418:13)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:106:22)

  console.error
    Database connection error - no fallback available

      433 |       error.code === "ECONNABORTED"
      434 |     ) {
    > 435 |       console.error("Database connection error - no fallback available");
          |               ^
      436 |       error.message = `Database connection failed: ${error.message}`;
      437 |       throw error;
      438 |     }

      at error (utils/database.js:435:15)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:106:22)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.error
    Database query error: {
      error: 'Database connection failed - no fallback available',
      query: 'INSERT INTO market_data (symbol, name, date, price, volume) VALUES ($1, $2, $3, $4, $5) ON CONFLICT ...',
      params: '5 parameters',
      code: 'DB_CONNECTION_FAILED'
    }

      416 |     return result;
      417 |   } catch (error) {
    > 418 |     console.error("Database query error:", {
          |             ^
      419 |       error: error.message,
      420 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      421 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:418:13)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:114:7)

  console.error
    Database connection error - no fallback available

      433 |       error.code === "ECONNABORTED"
      434 |     ) {
    > 435 |       console.error("Database connection error - no fallback available");
          |               ^
      436 |       error.message = `Database connection failed: ${error.message}`;
      437 |       throw error;
      438 |     }

      at error (utils/database.js:435:15)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:114:7)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.error
    Database query error: {
      error: 'Database connection failed - no fallback available',
      query: 'INSERT INTO market_data (symbol, name, date, price, volume) VALUES ($1, $2, $3, $4, $5) ON CONFLICT ...',
      params: '5 parameters',
      code: 'DB_CONNECTION_FAILED'
    }

      416 |     return result;
      417 |   } catch (error) {
    > 418 |     console.error("Database query error:", {
          |             ^
      419 |       error: error.message,
      420 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      421 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:418:13)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:145:9)

  console.error
    Database connection error - no fallback available

      433 |       error.code === "ECONNABORTED"
      434 |     ) {
    > 435 |       console.error("Database connection error - no fallback available");
          |               ^
      436 |       error.message = `Database connection failed: ${error.message}`;
      437 |       throw error;
      438 |     }

      at error (utils/database.js:435:15)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:145:9)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.error
    Database query error: {
      error: 'Database connection failed - no fallback available',
      query: '\n' +
        '        SELECT \n' +
        '          NOW() as current_time,\n' +
        "          NOW() - INTERVAL '1 day' as yesterday,\n" +
        ' ...',
      params: 'no parameters',
      code: 'DB_CONNECTION_FAILED'
    }

      416 |     return result;
      417 |   } catch (error) {
    > 418 |     console.error("Database query error:", {
          |             ^
      419 |       error: error.message,
      420 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      421 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:418:13)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:176:22)

  console.error
    Database connection error - no fallback available

      433 |       error.code === "ECONNABORTED"
      434 |     ) {
    > 435 |       console.error("Database connection error - no fallback available");
          |               ^
      436 |       error.message = `Database connection failed: ${error.message}`;
      437 |       throw error;
      438 |     }

      at error (utils/database.js:435:15)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:176:22)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.error
    Database query error: {
      error: 'Database connection failed - no fallback available',
      query: 'SELECT NOW() as timestamp, version() as db_version',
      params: 'no parameters',
      code: 'DB_CONNECTION_FAILED'
    }

      416 |     return result;
      417 |   } catch (error) {
    > 418 |     console.error("Database query error:", {
          |             ^
      419 |       error: error.message,
      420 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      421 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:418:13)
      at healthCheck (utils/database.js:552:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:210:28)

  console.error
    Database connection error - no fallback available

      433 |       error.code === "ECONNABORTED"
      434 |     ) {
    > 435 |       console.error("Database connection error - no fallback available");
          |               ^
      436 |       error.message = `Database connection failed: ${error.message}`;
      437 |       throw error;
      438 |     }

      at error (utils/database.js:435:15)
      at healthCheck (utils/database.js:552:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:210:28)

  console.log
    🚀 Initializing database schema...

      at log (utils/database.js:313:13)

  console.log
    🚀 Initializing webapp-specific database tables...

      at log (webapp-db-init.js:12:11)

  console.log
    📝 Creating user management tables...

      at log (webapp-db-init.js:57:11)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.error
    Database query error: {
      error: 'Database connection failed - no fallback available',
      query: 'CREATE TABLE IF NOT EXISTS user_profiles (\n' +
        '        id SERIAL PRIMARY KEY,\n' +
        '        user_id VARCHAR(25...',
      params: 'no parameters',
      code: 'DB_CONNECTION_FAILED'
    }

      416 |     return result;
      417 |   } catch (error) {
    > 418 |     console.error("Database query error:", {
          |             ^
      419 |       error: error.message,
      420 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      421 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:418:13)
      at createUserTables (webapp-db-init.js:124:5)
      at initializeWebappTables (webapp-db-init.js:16:5)
      at initializeSchema (utils/database.js:317:5)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:243:22)

  console.error
    Database connection error - no fallback available

      433 |       error.code === "ECONNABORTED"
      434 |     ) {
    > 435 |       console.error("Database connection error - no fallback available");
          |               ^
      436 |       error.message = `Database connection failed: ${error.message}`;
      437 |       throw error;
      438 |     }

      at error (utils/database.js:435:15)
      at createUserTables (webapp-db-init.js:124:5)
      at initializeWebappTables (webapp-db-init.js:16:5)
      at initializeSchema (utils/database.js:317:5)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:243:22)

  console.error
    ❌ Webapp database initialization error: Error: Database connection failed: Database connection failed - no fallback available
        at query (/home/stocks/algo/webapp/lambda/utils/database.js:362:23)
        at createUserTables (/home/stocks/algo/webapp/lambda/webapp-db-init.js:124:5)
        at initializeWebappTables (/home/stocks/algo/webapp/lambda/webapp-db-init.js:16:5)
        at initializeSchema (/home/stocks/algo/webapp/lambda/utils/database.js:317:5)
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/database.integration.test.js:243:22) {
      code: 'DB_CONNECTION_FAILED'
    }

      49 |
      50 |   } catch (error) {
    > 51 |     console.error("❌ Webapp database initialization error:", error);
         |             ^
      52 |     throw error;
      53 |   }
      54 | }

      at error (webapp-db-init.js:51:13)
      at initializeSchema (utils/database.js:317:5)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:243:22)

  console.error
    ❌ Schema initialization error: Error: Database connection failed: Database connection failed - no fallback available
        at query (/home/stocks/algo/webapp/lambda/utils/database.js:362:23)
        at createUserTables (/home/stocks/algo/webapp/lambda/webapp-db-init.js:124:5)
        at initializeWebappTables (/home/stocks/algo/webapp/lambda/webapp-db-init.js:16:5)
        at initializeSchema (/home/stocks/algo/webapp/lambda/utils/database.js:317:5)
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/database.integration.test.js:243:22) {
      code: 'DB_CONNECTION_FAILED'
    }

      320 |     return true;
      321 |   } catch (error) {
    > 322 |     console.error("❌ Schema initialization error:", error);
          |             ^
      323 |     // Don't throw - let the application continue with existing tables
      324 |     return false;
      325 |   }

      at error (utils/database.js:322:13)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:243:22)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.error
    Database query error: {
      error: 'Database connection failed - no fallback available',
      query: '\n' +
        '        CREATE TEMPORARY TABLE temp_test_1759135566447 (\n' +
        '          id SERIAL PRIMARY KEY,\n' +
        '         ...',
      params: 'no parameters',
      code: 'DB_CONNECTION_FAILED'
    }

      416 |     return result;
      417 |   } catch (error) {
    > 418 |     console.error("Database query error:", {
          |             ^
      419 |       error: error.message,
      420 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      421 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:418:13)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:263:28)

  console.error
    Database connection error - no fallback available

      433 |       error.code === "ECONNABORTED"
      434 |     ) {
    > 435 |       console.error("Database connection error - no fallback available");
          |               ^
      436 |       error.message = `Database connection failed: ${error.message}`;
      437 |       throw error;
      438 |     }

      at error (utils/database.js:435:15)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:263:28)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.error
    Database query error: {
      error: 'Database connection failed - no fallback available',
      query: 'INSERT INTO stock_symbols (symbol, name) VALUES ($1, $2) RETURNING symbol',
      params: '2 parameters',
      code: 'DB_CONNECTION_FAILED'
    }

      416 |     return result;
      417 |   } catch (error) {
    > 418 |     console.error("Database query error:", {
          |             ^
      419 |       error: error.message,
      420 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      421 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:418:13)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:287:27)

  console.error
    Database connection error - no fallback available

      433 |       error.code === "ECONNABORTED"
      434 |     ) {
    > 435 |       console.error("Database connection error - no fallback available");
          |               ^
      436 |       error.message = `Database connection failed: ${error.message}`;
      437 |       throw error;
      438 |     }

      at error (utils/database.js:435:15)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:287:27)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.error
    Database query error: {
      error: 'Database connection failed - no fallback available',
      query: 'SELECT NOW() as reconnect_time',
      params: 'no parameters',
      code: 'DB_CONNECTION_FAILED'
    }

      416 |     return result;
      417 |   } catch (error) {
    > 418 |     console.error("Database query error:", {
          |             ^
      419 |       error: error.message,
      420 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      421 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:418:13)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:331:22)

  console.error
    Database connection error - no fallback available

      433 |       error.code === "ECONNABORTED"
      434 |     ) {
    > 435 |       console.error("Database connection error - no fallback available");
          |               ^
      436 |       error.message = `Database connection failed: ${error.message}`;
      437 |       throw error;
      438 |     }

      at error (utils/database.js:435:15)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:331:22)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.error
    Database query error: {
      error: 'Database connection failed - no fallback available',
      query: 'SELECT NOW() as timestamp, version() as db_version',
      params: 'no parameters',
      code: 'DB_CONNECTION_FAILED'
    }

      416 |     return result;
      417 |   } catch (error) {
    > 418 |     console.error("Database query error:", {
          |             ^
      419 |       error: error.message,
      420 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      421 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:418:13)
      at healthCheck (utils/database.js:552:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:336:25)

  console.error
    Database connection error - no fallback available

      433 |       error.code === "ECONNABORTED"
      434 |     ) {
    > 435 |       console.error("Database connection error - no fallback available");
          |               ^
      436 |       error.message = `Database connection failed: ${error.message}`;
      437 |       throw error;
      438 |     }

      at error (utils/database.js:435:15)
      at healthCheck (utils/database.js:552:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:336:25)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.error
    Database query error: {
      error: 'Database connection failed - no fallback available',
      query: 'SELECT $1 as test_id',
      params: '1 parameters',
      code: 'DB_CONNECTION_FAILED'
    }

      416 |     return result;
      417 |   } catch (error) {
    > 418 |     console.error("Database query error:", {
          |             ^
      419 |       error: error.message,
      420 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      421 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:418:13)
          at async Promise.all (index 0)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:357:23)

  console.error
    Database connection error - no fallback available

      433 |       error.code === "ECONNABORTED"
      434 |     ) {
    > 435 |       console.error("Database connection error - no fallback available");
          |               ^
      436 |       error.message = `Database connection failed: ${error.message}`;
      437 |       throw error;
      438 |     }

      at error (utils/database.js:435:15)
          at async Promise.all (index 0)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:357:23)

  console.error
    Database query error: {
      error: 'Database connection failed - no fallback available',
      query: 'SELECT $1 as test_id',
      params: '1 parameters',
      code: 'DB_CONNECTION_FAILED'
    }

      416 |     return result;
      417 |   } catch (error) {
    > 418 |     console.error("Database query error:", {
          |             ^
      419 |       error: error.message,
      420 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      421 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:418:13)
          at async Promise.all (index 1)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:357:23)

  console.error
    Database connection error - no fallback available

      433 |       error.code === "ECONNABORTED"
      434 |     ) {
    > 435 |       console.error("Database connection error - no fallback available");
          |               ^
      436 |       error.message = `Database connection failed: ${error.message}`;
      437 |       throw error;
      438 |     }

      at error (utils/database.js:435:15)
          at async Promise.all (index 1)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:357:23)

  console.error
    Database query error: {
      error: 'Database connection failed - no fallback available',
      query: 'SELECT $1 as test_id',
      params: '1 parameters',
      code: 'DB_CONNECTION_FAILED'
    }

      416 |     return result;
      417 |   } catch (error) {
    > 418 |     console.error("Database query error:", {
          |             ^
      419 |       error: error.message,
      420 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      421 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:418:13)
          at async Promise.all (index 2)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:357:23)

  console.error
    Database connection error - no fallback available

      433 |       error.code === "ECONNABORTED"
      434 |     ) {
    > 435 |       console.error("Database connection error - no fallback available");
          |               ^
      436 |       error.message = `Database connection failed: ${error.message}`;
      437 |       throw error;
      438 |     }

      at error (utils/database.js:435:15)
          at async Promise.all (index 2)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:357:23)

  console.error
    Database query error: {
      error: 'Database connection failed - no fallback available',
      query: 'SELECT $1 as test_id',
      params: '1 parameters',
      code: 'DB_CONNECTION_FAILED'
    }

      416 |     return result;
      417 |   } catch (error) {
    > 418 |     console.error("Database query error:", {
          |             ^
      419 |       error: error.message,
      420 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      421 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:418:13)
          at async Promise.all (index 3)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:357:23)

  console.error
    Database connection error - no fallback available

      433 |       error.code === "ECONNABORTED"
      434 |     ) {
    > 435 |       console.error("Database connection error - no fallback available");
          |               ^
      436 |       error.message = `Database connection failed: ${error.message}`;
      437 |       throw error;
      438 |     }

      at error (utils/database.js:435:15)
          at async Promise.all (index 3)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:357:23)

  console.error
    Database query error: {
      error: 'Database connection failed - no fallback available',
      query: 'SELECT $1 as test_id',
      params: '1 parameters',
      code: 'DB_CONNECTION_FAILED'
    }

      416 |     return result;
      417 |   } catch (error) {
    > 418 |     console.error("Database query error:", {
          |             ^
      419 |       error: error.message,
      420 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      421 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:418:13)
          at async Promise.all (index 4)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:357:23)

  console.error
    Database connection error - no fallback available

      433 |       error.code === "ECONNABORTED"
      434 |     ) {
    > 435 |       console.error("Database connection error - no fallback available");
          |               ^
      436 |       error.message = `Database connection failed: ${error.message}`;
      437 |       throw error;
      438 |     }

      at error (utils/database.js:435:15)
          at async Promise.all (index 4)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:357:23)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.error
    Database query error: {
      error: 'Database connection failed - no fallback available',
      query: 'SELECT * FROM market_data WHERE symbol = $1',
      params: '1 parameters',
      code: 'DB_CONNECTION_FAILED'
    }

      416 |     return result;
      417 |   } catch (error) {
    > 418 |     console.error("Database query error:", {
          |             ^
      419 |       error: error.message,
      420 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      421 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:418:13)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:438:29)

  console.error
    Database connection error - no fallback available

      433 |       error.code === "ECONNABORTED"
      434 |     ) {
    > 435 |       console.error("Database connection error - no fallback available");
          |               ^
      436 |       error.message = `Database connection failed: ${error.message}`;
      437 |       throw error;
      438 |     }

      at error (utils/database.js:435:15)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:438:29)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.error
    Database query error: {
      error: 'Database connection failed - no fallback available',
      query: 'INSERT INTO stock_symbols (symbol, name, market_category) VALUES ($1, $2, $3) ON CONFLICT (symbol) D...',
      params: '3 parameters',
      code: 'DB_CONNECTION_FAILED'
    }

      416 |     return result;
      417 |   } catch (error) {
    > 418 |     console.error("Database query error:", {
          |             ^
      419 |       error: error.message,
      420 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      421 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:418:13)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:502:7)

  console.error
    Database connection error - no fallback available

      433 |       error.code === "ECONNABORTED"
      434 |     ) {
    > 435 |       console.error("Database connection error - no fallback available");
          |               ^
      436 |       error.message = `Database connection failed: ${error.message}`;
      437 |       throw error;
      438 |     }

      at error (utils/database.js:435:15)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:502:7)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.error
    Database query error: {
      error: 'Database connection failed - no fallback available',
      query: 'INSERT INTO stock_symbols (symbol, name, market_category) VALUES ($1, $2, $3) ON CONFLICT (symbol) D...',
      params: '3 parameters',
      code: 'DB_CONNECTION_FAILED'
    }

      416 |     return result;
      417 |   } catch (error) {
    > 418 |     console.error("Database query error:", {
          |             ^
      419 |       error: error.message,
      420 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      421 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:418:13)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:552:7)

  console.error
    Database connection error - no fallback available

      433 |       error.code === "ECONNABORTED"
      434 |     ) {
    > 435 |       console.error("Database connection error - no fallback available");
          |               ^
      436 |       error.message = `Database connection failed: ${error.message}`;
      437 |       throw error;
      438 |     }

      at error (utils/database.js:435:15)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:552:7)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.error
    Database query error: {
      error: 'Database connection failed - no fallback available',
      query: 'INSERT INTO stock_symbols (symbol, name) VALUES ($1, $2) ON CONFLICT (symbol) DO UPDATE SET name = $...',
      params: '2 parameters',
      code: 'DB_CONNECTION_FAILED'
    }

      416 |     return result;
      417 |   } catch (error) {
    > 418 |     console.error("Database query error:", {
          |             ^
      419 |       error: error.message,
      420 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      421 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:418:13)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:624:7)

  console.error
    Database connection error - no fallback available

      433 |       error.code === "ECONNABORTED"
      434 |     ) {
    > 435 |       console.error("Database connection error - no fallback available");
          |               ^
      436 |       error.message = `Database connection failed: ${error.message}`;
      437 |       throw error;
      438 |     }

      at error (utils/database.js:435:15)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:624:7)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.error
    Database query error: {
      error: 'Database connection failed - no fallback available',
      query: 'INSERT INTO stock_symbols (symbol, name) VALUES ($1, $2) ON CONFLICT (symbol) DO UPDATE SET name = $...',
      params: '2 parameters',
      code: 'DB_CONNECTION_FAILED'
    }

      416 |     return result;
      417 |   } catch (error) {
    > 418 |     console.error("Database query error:", {
          |             ^
      419 |       error: error.message,
      420 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      421 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:418:13)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:746:7)

  console.error
    Database connection error - no fallback available

      433 |       error.code === "ECONNABORTED"
      434 |     ) {
    > 435 |       console.error("Database connection error - no fallback available");
          |               ^
      436 |       error.message = `Database connection failed: ${error.message}`;
      437 |       throw error;
      438 |     }

      at error (utils/database.js:435:15)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:746:7)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.error
    Database query error: {
      error: 'Database connection failed - no fallback available',
      query: 'INSERT INTO stock_symbols (symbol, name, market_category) VALUES ($1, $2, $3) ON CONFLICT (symbol) D...',
      params: '3 parameters',
      code: 'DB_CONNECTION_FAILED'
    }

      416 |     return result;
      417 |   } catch (error) {
    > 418 |     console.error("Database query error:", {
          |             ^
      419 |       error: error.message,
      420 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      421 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:418:13)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:821:7)

  console.error
    Database connection error - no fallback available

      433 |       error.code === "ECONNABORTED"
      434 |     ) {
    > 435 |       console.error("Database connection error - no fallback available");
          |               ^
      436 |       error.message = `Database connection failed: ${error.message}`;
      437 |       throw error;
      438 |     }

      at error (utils/database.js:435:15)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:821:7)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.error
    Database query error: {
      error: 'Database connection failed - no fallback available',
      query: "DELETE FROM market_data WHERE ticker LIKE 'T%' OR ticker LIKE 'U%' OR ticker LIKE 'A%' OR ticker LIK...",
      params: 'no parameters',
      code: 'DB_CONNECTION_FAILED'
    }

      416 |     return result;
      417 |   } catch (error) {
    > 418 |     console.error("Database query error:", {
          |             ^
      419 |       error: error.message,
      420 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      421 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:418:13)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:37:7)

  console.error
    Database connection error - no fallback available

      433 |       error.code === "ECONNABORTED"
      434 |     ) {
    > 435 |       console.error("Database connection error - no fallback available");
          |               ^
      436 |       error.message = `Database connection failed: ${error.message}`;
      437 |       throw error;
      438 |     }

      at error (utils/database.js:435:15)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:37:7)

  console.warn
    Cleanup warning: Database connection failed: Database connection failed - no fallback available

      42 |       );
      43 |     } catch (error) {
    > 44 |       console.warn("Cleanup warning:", error.message);
         |               ^
      45 |     }
      46 |
      47 |     await closeDatabase();

      at Object.warn (tests/integration/utils/database.integration.test.js:44:15)

FAIL tests/integration/utils/database.integration.test.js
  Database Real Site Functionality Tests
    Real Database Query Operations
      ✕ should execute basic SELECT queries against real database (3 ms)
      ✕ should handle parameterized queries correctly (1 ms)
      ✕ should prevent SQL injection attacks with parameterized queries (2 ms)
      ✕ should handle database errors gracefully (1 ms)
      ✕ should handle syntax errors gracefully (1 ms)
      ✕ should work with complex JOIN queries on real tables (1 ms)
      ✕ should handle aggregate functions and calculations (3 ms)
      ✕ should handle date/time operations (1 ms)
    Database Initialization and Schema
      ✕ should initialize database and create required tables (1 ms)
      ✕ should verify database connection and schema integrity (3 ms)
      ✕ should handle database configuration from environment variables
    Real Database Schema Operations
      ✕ should initialize and verify schema tables (6 ms)
      ✕ should handle table creation and constraints (2 ms)
      ✕ should handle unique constraints properly (1 ms)
    Connection Pool Management
      ✕ should provide working connection pool (1 ms)
      ✕ should manage connection lifecycle properly (1 ms)
      ✕ should perform accurate health checks (1 ms)
      ✕ should handle concurrent connections properly (7 ms)
      ✕ should handle connection pool stats
    Transaction Support
      ✕ should execute transactions with commit
      ✕ should rollback transactions on error (2 ms)
      ✕ should handle nested transaction operations
    Real-World Data Operations
      ✕ should handle bulk data insertions efficiently (2 ms)
      ✕ should handle complex analytical queries (1 ms)
      ✕ should handle time-based queries with proper indexing performance (1 ms)
    Advanced Transaction Integration Scenarios
      ✕ should handle concurrent transactions without conflicts (1 ms)
      ✕ should handle transaction rollback with concurrent access (1 ms)
      ✕ should handle cross-table transaction consistency (1 ms)
      ✕ should handle transaction isolation levels (1 ms)
      ✕ should handle large transaction data volumes (1 ms)

  ● Database Real Site Functionality Tests › Real Database Query Operations › should execute basic SELECT queries against real database

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:52:22)

  ● Database Real Site Functionality Tests › Real Database Query Operations › should handle parameterized queries correctly

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:62:7)

  ● Database Real Site Functionality Tests › Real Database Query Operations › should prevent SQL injection attacks with parameterized queries

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:83:22)

  ● Database Real Site Functionality Tests › Real Database Query Operations › should handle database errors gracefully

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:100:22)

  ● Database Real Site Functionality Tests › Real Database Query Operations › should handle syntax errors gracefully

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:106:22)

  ● Database Real Site Functionality Tests › Real Database Query Operations › should work with complex JOIN queries on real tables

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:114:7)

  ● Database Real Site Functionality Tests › Real Database Query Operations › should handle aggregate functions and calculations

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:145:9)

  ● Database Real Site Functionality Tests › Real Database Query Operations › should handle date/time operations

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:176:22)

  ● Database Real Site Functionality Tests › Database Initialization and Schema › should initialize database and create required tables

    expect(received).not.toBeNull()

    Received: null

      194 |       const pool = await initializeDatabase();
      195 |
    > 196 |       expect(pool).not.toBeNull();
          |                        ^
      197 |
      198 |       // Verify essential tables exist
      199 |       const tablesResult = await query(`

      at Object.toBeNull (tests/integration/utils/database.integration.test.js:196:24)

  ● Database Real Site Functionality Tests › Database Initialization and Schema › should verify database connection and schema integrity

    expect(received).toBe(expected) // Object.is equality

    Expected: "healthy"
    Received: "unhealthy"

      210 |       const healthResult = await healthCheck();
      211 |
    > 212 |       expect(healthResult.status).toBe("healthy");
          |                                   ^
      213 |
      214 |       // Test actual schema by checking table structure
      215 |       const columnsResult = await query(`

      at Object.toBe (tests/integration/utils/database.integration.test.js:212:35)

  ● Database Real Site Functionality Tests › Database Initialization and Schema › should handle database configuration from environment variables

    TypeError: Cannot read properties of null (reading 'host')

      232 |
      233 |       expect(config).toBeDefined();
    > 234 |       expect(config.host).toBe("localhost");
          |                     ^
      235 |       expect(config.port).toBe(5432);
      236 |       expect(config.database).toBe("stocks");
      237 |       expect(config.user).toBe("postgres");

      at Object.host (tests/integration/utils/database.integration.test.js:234:21)

  ● Database Real Site Functionality Tests › Real Database Schema Operations › should initialize and verify schema tables

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      243 |       const result = await initializeSchema();
      244 |
    > 245 |       expect(result).toBe(true);
          |                      ^
      246 |
      247 |       // Verify tables were created and accessible
      248 |       const stockSymbolsCheck = await query(

      at Object.toBe (tests/integration/utils/database.integration.test.js:245:22)

  ● Database Real Site Functionality Tests › Real Database Schema Operations › should handle table creation and constraints

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:263:28)

  ● Database Real Site Functionality Tests › Real Database Schema Operations › should handle unique constraints properly

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:287:27)

  ● Database Real Site Functionality Tests › Connection Pool Management › should provide working connection pool

    Database not initialized. Call initializeDatabase() first.

      340 | function getPool() {
      341 |   if (!pool || !dbInitialized) {
    > 342 |     throw new Error(
          |           ^
      343 |       "Database not initialized. Call initializeDatabase() first."
      344 |     );
      345 |   }

      at getPool (utils/database.js:342:11)
      at Object.getPool (tests/integration/utils/database.integration.test.js:315:20)

  ● Database Real Site Functionality Tests › Connection Pool Management › should manage connection lifecycle properly

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:331:22)

  ● Database Real Site Functionality Tests › Connection Pool Management › should perform accurate health checks

    expect(received).toBe(expected) // Object.is equality

    Expected: "healthy"
    Received: "unhealthy"

      336 |       const isHealthy = await healthCheck();
      337 |
    > 338 |       expect(isHealthy.status).toBe("healthy");
          |                                ^
      339 |
      340 |       // Verify health check actually tests database responsiveness
      341 |       const startTime = Date.now();

      at Object.toBe (tests/integration/utils/database.integration.test.js:338:32)

  ● Database Real Site Functionality Tests › Connection Pool Management › should handle concurrent connections properly

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
          at async Promise.all (index 0)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:357:23)

  ● Database Real Site Functionality Tests › Connection Pool Management › should handle connection pool stats

    Database not initialized. Call initializeDatabase() first.

      340 | function getPool() {
      341 |   if (!pool || !dbInitialized) {
    > 342 |     throw new Error(
          |           ^
      343 |       "Database not initialized. Call initializeDatabase() first."
      344 |     );
      345 |   }

      at getPool (utils/database.js:342:11)
      at Object.getPool (tests/integration/utils/database.integration.test.js:366:20)

  ● Database Real Site Functionality Tests › Transaction Support › should execute transactions with commit

    Database not initialized. Call initializeDatabase() first.

      340 | function getPool() {
      341 |   if (!pool || !dbInitialized) {
    > 342 |     throw new Error(
          |           ^
      343 |       "Database not initialized. Call initializeDatabase() first."
      344 |     );
      345 |   }

      at getPool (utils/database.js:342:11)
      at getPool (utils/database.js:513:24)
      at Object.transaction (tests/integration/utils/database.integration.test.js:382:28)

  ● Database Real Site Functionality Tests › Transaction Support › should rollback transactions on error

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:438:29)

  ● Database Real Site Functionality Tests › Transaction Support › should handle nested transaction operations

    Database not initialized. Call initializeDatabase() first.

      340 | function getPool() {
      341 |   if (!pool || !dbInitialized) {
    > 342 |     throw new Error(
          |           ^
      343 |       "Database not initialized. Call initializeDatabase() first."
      344 |     );
      345 |   }

      at getPool (utils/database.js:342:11)
      at getPool (utils/database.js:513:24)
      at Object.transaction (tests/integration/utils/database.integration.test.js:449:28)

  ● Database Real Site Functionality Tests › Real-World Data Operations › should handle bulk data insertions efficiently

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:502:7)

  ● Database Real Site Functionality Tests › Real-World Data Operations › should handle complex analytical queries

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:552:7)

  ● Database Real Site Functionality Tests › Real-World Data Operations › should handle time-based queries with proper indexing performance

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:624:7)

  ● Database Real Site Functionality Tests › Advanced Transaction Integration Scenarios › should handle concurrent transactions without conflicts

    Database not initialized. Call initializeDatabase() first.

      340 | function getPool() {
      341 |   if (!pool || !dbInitialized) {
    > 342 |     throw new Error(
          |           ^
      343 |       "Database not initialized. Call initializeDatabase() first."
      344 |     );
      345 |   }

      at getPool (utils/database.js:342:11)
      at getPool (utils/database.js:513:24)
      at Object.transaction (tests/integration/utils/database.integration.test.js:692:36)

  ● Database Real Site Functionality Tests › Advanced Transaction Integration Scenarios › should handle transaction rollback with concurrent access

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:746:7)

  ● Database Real Site Functionality Tests › Advanced Transaction Integration Scenarios › should handle cross-table transaction consistency

    Database not initialized. Call initializeDatabase() first.

      340 | function getPool() {
      341 |   if (!pool || !dbInitialized) {
    > 342 |     throw new Error(
          |           ^
      343 |       "Database not initialized. Call initializeDatabase() first."
      344 |     );
      345 |   }

      at getPool (utils/database.js:342:11)
      at getPool (utils/database.js:513:24)
      at Object.transaction (tests/integration/utils/database.integration.test.js:782:28)

  ● Database Real Site Functionality Tests › Advanced Transaction Integration Scenarios › should handle transaction isolation levels

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:821:7)

  ● Database Real Site Functionality Tests › Advanced Transaction Integration Scenarios › should handle large transaction data volumes

    Database not initialized. Call initializeDatabase() first.

      340 | function getPool() {
      341 |   if (!pool || !dbInitialized) {
    > 342 |     throw new Error(
          |           ^
      343 |       "Database not initialized. Call initializeDatabase() first."
      344 |     );
      345 |   }

      at getPool (utils/database.js:342:11)
      at getPool (utils/database.js:513:24)
      at Object.transaction (tests/integration/utils/database.integration.test.js:888:28)

PASS tests/unit/utils/schemaValidator.test.js
  Schema Validator
    validateData
      ✓ should validate valid company profile data successfully (1 ms)
      ✓ should fail validation for missing required fields
      ✓ should fail validation for unknown table (4 ms)
      ✓ should fail validation for unknown field
      ✓ should validate VARCHAR field with max length constraint (1 ms)
      ✓ should validate INTEGER field constraints
      ✓ should validate DECIMAL precision constraints (1 ms)
      ✓ should validate BOOLEAN field types
      ✓ should validate DATE field format (1 ms)
      ✓ should allow null values for non-required fields (1 ms)
    validateTableStructure
      ✓ should validate existing table with correct structure
      ✓ should fail validation for non-existent table
      ✓ should fail validation for unknown schema (1 ms)
      ✓ should handle database errors gracefully (1 ms)
      ✓ should detect missing columns
      ✓ should warn about extra columns (1 ms)
    validateDatabaseIntegrity
      ✓ should collect errors from failed table validations (2 ms)
      ○ skipped should validate all tables successfully
    generateCreateTableSQL
      ✓ should generate CREATE TABLE SQL for stocks table
      ✓ should include DECIMAL precision in SQL (1 ms)
      ✓ should include PRIMARY KEY constraint
      ✓ should include CHECK constraints for minimum values (3 ms)
      ✓ should include indexes in SQL
      ✓ should handle unknown table (20 ms)
      ✓ should include default values (1 ms)
      ✓ should include UNIQUE constraints
    getTableSchema
      ✓ should return schema for existing table (1 ms)
      ✓ should return null for unknown table
    listTables
      ✓ should return array of table names (1 ms)
    sanitizeInput
      ✓ should sanitize string inputs (1 ms)
      ✓ should handle null and undefined inputs
      ✓ should sanitize arrays recursively (1 ms)
      ✓ should sanitize objects recursively
      ✓ should preserve numbers and booleans (1 ms)
      ✓ should trim whitespace from strings
    validateTableExists
      ✓ should return true for existing table (1 ms)
      ✓ should return false for non-existent table
      ✓ should handle database errors (3 ms)
    validateColumns
      ✓ should validate columns successfully (1 ms)
      ✓ should detect missing columns
      ✓ should detect type mismatches (1 ms)
      ✓ should handle unknown table schema
      ✓ should handle database errors (1 ms)
    validateIndexes
      ✓ should validate indexes successfully (1 ms)
      ✓ should return valid for table without indexes
      ✓ should handle database errors (1 ms)
    safeQuery
      ✓ should execute query successfully
      ✓ should return null on database error and log warning (1 ms)
      ✓ should truncate long query text in logs
    field sanitization
      ✓ should sanitize VARCHAR fields (1 ms)
      ✓ should convert string numbers to proper types
      ✓ should handle boolean conversion edge cases (1 ms)
      ✓ should convert date strings to ISO format
    edge cases and error scenarios
      ✓ should handle empty data object
      ✓ should validate complex table with multiple constraints
      ✓ should handle very long strings gracefully
    schemas export
      ✓ should export schemas object (3 ms)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "GET /api/websocket HTTP/1.1" 200 411 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "GET /api/websocket HTTP/1.1" 200 411 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "GET /api/websocket/test HTTP/1.1" 200 78 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "GET /api/websocket/health HTTP/1.1" 200 337 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "GET /api/websocket/health HTTP/1.1" 200 337 "-" "-"
  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "GET /api/websocket/status HTTP/1.1" 200 268 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "GET /api/websocket/status HTTP/1.1" 200 268 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "GET /api/websocket/stream/AAPL HTTP/1.1" 401 74 "-" "-"
  console.log
    🚀 [3f63479f] Live data stream request initiated {
      symbols: 'AAPL',
      userId: 'dev-user...',
      userAgent: undefined,
      ip: '::ffff:127.0.0.1',
      timestamp: '2025-09-29T08:46:06.792Z'
    }

      at log (routes/websocket.js:190:13)

  console.log
    🔍 [3f63479f] Parsing requested symbols: AAPL

      at log (routes/websocket.js:199:13)

  console.log
    ✅ [3f63479f] Symbols validated: { validSymbols: [ 'AAPL' ], symbolCount: 1 }

      at log (routes/websocket.js:221:13)

  console.log
    🔑 [3f63479f] Retrieving user API credentials for live data access

      at log (routes/websocket.js:227:13)

  console.error
    ❌ [3f63479f] No API credentials found after 2ms {
      requestedProvider: 'alpaca',
      userId: 'dev-user...',
      impact: 'Live market data will not be available',
      recommendation: 'User needs to configure Alpaca API keys in settings'
    }

      236 |
      237 |       if (!credentials) {
    > 238 |         console.error(
          |                 ^
      239 |           `❌ [${requestId}] No API credentials found after ${credentialsDuration}ms`,
      240 |           {
      241 |             requestedProvider: "alpaca",

      at error (routes/websocket.js:238:17)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "GET /api/websocket/stream/AAPL HTTP/1.1" 400 474 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "GET /api/websocket/stream/ HTTP/1.1" 400 129 "-" "-"
  console.log
    🚀 [bacc12b2] Live data stream request initiated {
      symbols: 'AAPL',
      userId: 'dev-user...',
      userAgent: undefined,
      ip: '::ffff:127.0.0.1',
      timestamp: '2025-09-29T08:46:06.810Z'
    }

      at log (routes/websocket.js:190:13)

  console.log
    🔍 [bacc12b2] Parsing requested symbols: AAPL

      at log (routes/websocket.js:199:13)

  console.log
    ✅ [bacc12b2] Symbols validated: { validSymbols: [ 'AAPL' ], symbolCount: 1 }

      at log (routes/websocket.js:221:13)

  console.log
    🔑 [bacc12b2] Retrieving user API credentials for live data access

      at log (routes/websocket.js:227:13)

  console.error
    ❌ [bacc12b2] No API credentials found after 1ms {
      requestedProvider: 'alpaca',
      userId: 'dev-user...',
      impact: 'Live market data will not be available',
      recommendation: 'User needs to configure Alpaca API keys in settings'
    }

      236 |
      237 |       if (!credentials) {
    > 238 |         console.error(
          |                 ^
      239 |           `❌ [${requestId}] No API credentials found after ${credentialsDuration}ms`,
      240 |           {
      241 |             requestedProvider: "alpaca",

      at error (routes/websocket.js:238:17)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "GET /api/websocket/stream/AAPL HTTP/1.1" 400 474 "-" "-"
  console.log
    🚀 [3236fcfd] Live data stream request initiated {
      symbols: 'AAPL,MSFT,GOOGL',
      userId: 'dev-user...',
      userAgent: undefined,
      ip: '::ffff:127.0.0.1',
      timestamp: '2025-09-29T08:46:06.822Z'
    }

      at log (routes/websocket.js:190:13)

  console.log
    🔍 [3236fcfd] Parsing requested symbols: AAPL,MSFT,GOOGL

      at log (routes/websocket.js:199:13)

  console.log
    ✅ [3236fcfd] Symbols validated: { validSymbols: [ 'AAPL', 'MSFT', 'GOOGL' ], symbolCount: 3 }

      at log (routes/websocket.js:221:13)

  console.log
    🔑 [3236fcfd] Retrieving user API credentials for live data access

      at log (routes/websocket.js:227:13)

  console.error
    ❌ [3236fcfd] No API credentials found after 1ms {
      requestedProvider: 'alpaca',
      userId: 'dev-user...',
      impact: 'Live market data will not be available',
      recommendation: 'User needs to configure Alpaca API keys in settings'
    }

      236 |
      237 |       if (!credentials) {
    > 238 |         console.error(
          |                 ^
      239 |           `❌ [${requestId}] No API credentials found after ${credentialsDuration}ms`,
      240 |           {
      241 |             requestedProvider: "alpaca",

      at error (routes/websocket.js:238:17)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "GET /api/websocket/stream/AAPL,MSFT,GOOGL HTTP/1.1" 400 474 "-" "-"
  console.log
    🚀 [a47227d4] Live data stream request initiated {
      symbols: 'INVALID@',
      userId: 'dev-user...',
      userAgent: undefined,
      ip: '::ffff:127.0.0.1',
      timestamp: '2025-09-29T08:46:06.836Z'
    }

      at log (routes/websocket.js:190:13)

  console.log
    🔍 [a47227d4] Parsing requested symbols: INVALID@

      at log (routes/websocket.js:199:13)

  console.error
    ❌ [a47227d4] Invalid symbols provided: {
      originalSymbols: 'INVALID@',
      filteredSymbols: [],
      impact: 'No valid symbols to stream'
    }

      206 |
      207 |     if (symbols.length === 0) {
    > 208 |       console.error(`❌ [${requestId}] Invalid symbols provided:`, {
          |               ^
      209 |         originalSymbols: req.params.symbols,
      210 |         filteredSymbols: symbols,
      211 |         impact: "No valid symbols to stream",

      at error (routes/websocket.js:208:15)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at next (middleware/auth.js:89:14)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at next (middleware/responseFormatter.js:66:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at urlencodedParser (node_modules/body-parser/lib/types/urlencoded.js:94:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at logger (node_modules/morgan/index.js:144:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at cors (node_modules/cors/lib/index.js:188:7)
      at node_modules/cors/lib/index.js:224:17
      at originCallback (node_modules/cors/lib/index.js:214:15)
      at node_modules/cors/lib/index.js:219:13
      at optionsCallback (node_modules/cors/lib/index.js:199:9)
      at corsMiddleware (node_modules/cors/lib/index.js:204:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at internalNext (node_modules/helmet/index.cjs:537:6)
      at xXssProtectionMiddleware (node_modules/helmet/index.cjs:315:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPoweredByMiddleware (node_modules/helmet/index.cjs:308:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPermittedCrossDomainPoliciesMiddleware (node_modules/helmet/index.cjs:301:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xFrameOptionsMiddleware (node_modules/helmet/index.cjs:285:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDownloadOptionsMiddleware (node_modules/helmet/index.cjs:265:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDnsPrefetchControlMiddleware (node_modules/helmet/index.cjs:258:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xContentTypeOptionsMiddleware (node_modules/helmet/index.cjs:250:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at strictTransportSecurityMiddleware (node_modules/helmet/index.cjs:243:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at referrerPolicyMiddleware (node_modules/helmet/index.cjs:211:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at originAgentClusterMiddleware (node_modules/helmet/index.cjs:186:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginResourcePolicyMiddleware (node_modules/helmet/index.cjs:179:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginOpenerPolicyMiddleware (node_modules/helmet/index.cjs:163:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at contentSecurityPolicyMiddleware (node_modules/helmet/index.cjs:128:4)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at helmetMiddleware (node_modules/helmet/index.cjs:539:6)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "GET /api/websocket/stream/INVALID@ HTTP/1.1" 400 146 "-" "-"
  console.log
    🚀 [2a1b5bbb] Live data stream request initiated {
      symbols: 'AAPL,INVALID@',
      userId: 'dev-user...',
      userAgent: undefined,
      ip: '::ffff:127.0.0.1',
      timestamp: '2025-09-29T08:46:06.848Z'
    }

      at log (routes/websocket.js:190:13)

  console.log
    🔍 [2a1b5bbb] Parsing requested symbols: AAPL,INVALID@

      at log (routes/websocket.js:199:13)

  console.log
    ✅ [2a1b5bbb] Symbols validated: { validSymbols: [ 'AAPL' ], symbolCount: 1 }

      at log (routes/websocket.js:221:13)

  console.log
    🔑 [2a1b5bbb] Retrieving user API credentials for live data access

      at log (routes/websocket.js:227:13)

  console.error
    ❌ [2a1b5bbb] No API credentials found after 2ms {
      requestedProvider: 'alpaca',
      userId: 'dev-user...',
      impact: 'Live market data will not be available',
      recommendation: 'User needs to configure Alpaca API keys in settings'
    }

      236 |
      237 |       if (!credentials) {
    > 238 |         console.error(
          |                 ^
      239 |           `❌ [${requestId}] No API credentials found after ${credentialsDuration}ms`,
      240 |           {
      241 |             requestedProvider: "alpaca",

      at error (routes/websocket.js:238:17)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "GET /api/websocket/stream/AAPL,INVALID@ HTTP/1.1" 400 474 "-" "-"
  console.log
    🚀 [a6d3ac0f] Live data stream request initiated {
      symbols: 'aapl,msft',
      userId: 'dev-user...',
      userAgent: undefined,
      ip: '::ffff:127.0.0.1',
      timestamp: '2025-09-29T08:46:06.859Z'
    }

      at log (routes/websocket.js:190:13)

  console.log
    🔍 [a6d3ac0f] Parsing requested symbols: aapl,msft

      at log (routes/websocket.js:199:13)

  console.log
    ✅ [a6d3ac0f] Symbols validated: { validSymbols: [ 'AAPL', 'MSFT' ], symbolCount: 2 }

      at log (routes/websocket.js:221:13)

  console.log
    🔑 [a6d3ac0f] Retrieving user API credentials for live data access

      at log (routes/websocket.js:227:13)

  console.error
    ❌ [a6d3ac0f] No API credentials found after 1ms {
      requestedProvider: 'alpaca',
      userId: 'dev-user...',
      impact: 'Live market data will not be available',
      recommendation: 'User needs to configure Alpaca API keys in settings'
    }

      236 |
      237 |       if (!credentials) {
    > 238 |         console.error(
          |                 ^
      239 |           `❌ [${requestId}] No API credentials found after ${credentialsDuration}ms`,
      240 |           {
      241 |             requestedProvider: "alpaca",

      at error (routes/websocket.js:238:17)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "GET /api/websocket/stream/aapl,msft HTTP/1.1" 400 474 "-" "-"
  console.log
    🚀 [e13e1122] Live data stream request initiated {
      symbols: 'SYM0,SYM1,SYM2,SYM3,SYM4,SYM5,SYM6,SYM7,SYM8,SYM9,SYM10,SYM11,SYM12,SYM13,SYM14,SYM15,SYM16,SYM17,SYM18,SYM19,SYM20,SYM21,SYM22,SYM23,SYM24',
      userId: 'dev-user...',
      userAgent: undefined,
      ip: '::ffff:127.0.0.1',
      timestamp: '2025-09-29T08:46:06.873Z'
    }

      at log (routes/websocket.js:190:13)

  console.log
    🔍 [e13e1122] Parsing requested symbols: SYM0,SYM1,SYM2,SYM3,SYM4,SYM5,SYM6,SYM7,SYM8,SYM9,SYM10,SYM11,SYM12,SYM13,SYM14,SYM15,SYM16,SYM17,SYM18,SYM19,SYM20,SYM21,SYM22,SYM23,SYM24

      at log (routes/websocket.js:199:13)

  console.error
    ❌ [e13e1122] Invalid symbols provided: {
      originalSymbols: 'SYM0,SYM1,SYM2,SYM3,SYM4,SYM5,SYM6,SYM7,SYM8,SYM9,SYM10,SYM11,SYM12,SYM13,SYM14,SYM15,SYM16,SYM17,SYM18,SYM19,SYM20,SYM21,SYM22,SYM23,SYM24',
      filteredSymbols: [],
      impact: 'No valid symbols to stream'
    }

      206 |
      207 |     if (symbols.length === 0) {
    > 208 |       console.error(`❌ [${requestId}] Invalid symbols provided:`, {
          |               ^
      209 |         originalSymbols: req.params.symbols,
      210 |         filteredSymbols: symbols,
      211 |         impact: "No valid symbols to stream",

      at error (routes/websocket.js:208:15)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at next (middleware/auth.js:89:14)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at next (middleware/responseFormatter.js:66:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at urlencodedParser (node_modules/body-parser/lib/types/urlencoded.js:94:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at logger (node_modules/morgan/index.js:144:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at cors (node_modules/cors/lib/index.js:188:7)
      at node_modules/cors/lib/index.js:224:17
      at originCallback (node_modules/cors/lib/index.js:214:15)
      at node_modules/cors/lib/index.js:219:13
      at optionsCallback (node_modules/cors/lib/index.js:199:9)
      at corsMiddleware (node_modules/cors/lib/index.js:204:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at internalNext (node_modules/helmet/index.cjs:537:6)
      at xXssProtectionMiddleware (node_modules/helmet/index.cjs:315:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPoweredByMiddleware (node_modules/helmet/index.cjs:308:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPermittedCrossDomainPoliciesMiddleware (node_modules/helmet/index.cjs:301:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xFrameOptionsMiddleware (node_modules/helmet/index.cjs:285:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDownloadOptionsMiddleware (node_modules/helmet/index.cjs:265:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDnsPrefetchControlMiddleware (node_modules/helmet/index.cjs:258:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xContentTypeOptionsMiddleware (node_modules/helmet/index.cjs:250:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at strictTransportSecurityMiddleware (node_modules/helmet/index.cjs:243:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at referrerPolicyMiddleware (node_modules/helmet/index.cjs:211:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at originAgentClusterMiddleware (node_modules/helmet/index.cjs:186:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginResourcePolicyMiddleware (node_modules/helmet/index.cjs:179:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginOpenerPolicyMiddleware (node_modules/helmet/index.cjs:163:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at contentSecurityPolicyMiddleware (node_modules/helmet/index.cjs:128:4)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at helmetMiddleware (node_modules/helmet/index.cjs:539:6)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "GET /api/websocket/stream/SYM0,SYM1,SYM2,SYM3,SYM4,SYM5,SYM6,SYM7,SYM8,SYM9,SYM10,SYM11,SYM12,SYM13,SYM14,SYM15,SYM16,SYM17,SYM18,SYM19,SYM20,SYM21,SYM22,SYM23,SYM24 HTTP/1.1" 400 146 "-" "-"
  console.log
    🚀 [9085568d] Live data stream request initiated {
      symbols: 'AAPL',
      userId: 'dev-user...',
      userAgent: undefined,
      ip: '::ffff:127.0.0.1',
      timestamp: '2025-09-29T08:46:06.886Z'
    }

      at log (routes/websocket.js:190:13)

  console.log
    🔍 [9085568d] Parsing requested symbols: AAPL

      at log (routes/websocket.js:199:13)

  console.log
    ✅ [9085568d] Symbols validated: { validSymbols: [ 'AAPL' ], symbolCount: 1 }

      at log (routes/websocket.js:221:13)

  console.log
    🔑 [9085568d] Retrieving user API credentials for live data access

      at log (routes/websocket.js:227:13)

  console.error
    ❌ [9085568d] No API credentials found after 1ms {
      requestedProvider: 'alpaca',
      userId: 'dev-user...',
      impact: 'Live market data will not be available',
      recommendation: 'User needs to configure Alpaca API keys in settings'
    }

      236 |
      237 |       if (!credentials) {
    > 238 |         console.error(
          |                 ^
      239 |           `❌ [${requestId}] No API credentials found after ${credentialsDuration}ms`,
      240 |           {
      241 |             requestedProvider: "alpaca",

      at error (routes/websocket.js:238:17)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "GET /api/websocket/stream/AAPL HTTP/1.1" 400 474 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "GET /api/websocket/trades/AAPL HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "GET /api/websocket/trades/AAPL HTTP/1.1" 403 95 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "GET /api/websocket/trades/AAPL HTTP/1.1" 403 95 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "GET /api/websocket/trades/AAPL,MSFT,GOOGL HTTP/1.1" 403 95 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "GET /api/websocket/trades/AAPL HTTP/1.1" 403 95 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "GET /api/websocket/bars/AAPL HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "GET /api/websocket/bars/AAPL HTTP/1.1" 403 95 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "GET /api/websocket/bars/AAPL?timeframe=5Min HTTP/1.1" 403 95 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "GET /api/websocket/bars/AAPL HTTP/1.1" 403 95 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "GET /api/websocket/bars/AAPL,MSFT HTTP/1.1" 403 95 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "GET /api/websocket/bars/AAPL?timeframe=1Min HTTP/1.1" 403 95 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "GET /api/websocket/bars/AAPL?timeframe=5Min HTTP/1.1" 403 95 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "GET /api/websocket/bars/AAPL?timeframe=15Min HTTP/1.1" 403 95 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "GET /api/websocket/bars/AAPL?timeframe=1Hour HTTP/1.1" 403 95 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "GET /api/websocket/bars/AAPL?timeframe=1Day HTTP/1.1" 403 95 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "POST /api/websocket/subscribe HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "POST /api/websocket/subscribe HTTP/1.1" 400 88 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "POST /api/websocket/subscribe HTTP/1.1" 200 332 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:06 +0000] "POST /api/websocket/subscribe HTTP/1.1" 200 297 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "POST /api/websocket/subscribe HTTP/1.1" 200 275 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "POST /api/websocket/subscribe HTTP/1.1" 400 88 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/websocket/subscriptions HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/websocket/subscriptions HTTP/1.1" 200 223 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "DELETE /api/websocket/subscribe HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "DELETE /api/websocket/subscribe HTTP/1.1" 200 130 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "DELETE /api/websocket/subscribe HTTP/1.1" 200 130 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "DELETE /api/websocket/subscribe HTTP/1.1" 200 130 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/websocket/connections HTTP/1.1" 401 74 "-" "-"
  console.log
    📡 WebSocket connections requested for user: dev-user-bypass

      at log (routes/websocket.js:868:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/websocket/connections HTTP/1.1" 200 477 "-" "-"
  console.log
    📡 WebSocket connections requested for user: dev-user-bypass

      at log (routes/websocket.js:868:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/websocket/connections?details=true HTTP/1.1" 200 497 "-" "-"
  console.log
    📡 WebSocket connections requested for user: dev-user-bypass

      at log (routes/websocket.js:868:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/websocket/connections?details=false HTTP/1.1" 200 477 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/websocket/stream/AAPL HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "POST /api/websocket/subscribe HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "POST /api/websocket/subscribe HTTP/1.1" 400 88 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/websocket/health HTTP/1.1" 200 337 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/websocket/health HTTP/1.1" 200 337 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/websocket/status HTTP/1.1" 200 268 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/websocket/test HTTP/1.1" 200 78 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/websocket/subscriptions HTTP/1.1" 200 110 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/websocket HTTP/1.1" 200 411 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/websocket/status HTTP/1.1" 200 268 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/websocket/subscriptions HTTP/1.1" 200 110 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/websocket/stream/ HTTP/1.1" 400 129 "-" "-"
  console.log
    🚀 [9116eebb] Live data stream request initiated {
      symbols: 'A@PPL,M$FT',
      userId: 'dev-user...',
      userAgent: undefined,
      ip: '::ffff:127.0.0.1',
      timestamp: '2025-09-29T08:46:07.120Z'
    }

      at log (routes/websocket.js:190:13)

  console.log
    🔍 [9116eebb] Parsing requested symbols: A@PPL,M$FT

      at log (routes/websocket.js:199:13)

  console.error
    ❌ [9116eebb] Invalid symbols provided: {
      originalSymbols: 'A@PPL,M$FT',
      filteredSymbols: [],
      impact: 'No valid symbols to stream'
    }

      206 |
      207 |     if (symbols.length === 0) {
    > 208 |       console.error(`❌ [${requestId}] Invalid symbols provided:`, {
          |               ^
      209 |         originalSymbols: req.params.symbols,
      210 |         filteredSymbols: symbols,
      211 |         impact: "No valid symbols to stream",

      at error (routes/websocket.js:208:15)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at next (middleware/auth.js:89:14)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at next (middleware/responseFormatter.js:66:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at urlencodedParser (node_modules/body-parser/lib/types/urlencoded.js:94:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at logger (node_modules/morgan/index.js:144:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at cors (node_modules/cors/lib/index.js:188:7)
      at node_modules/cors/lib/index.js:224:17
      at originCallback (node_modules/cors/lib/index.js:214:15)
      at node_modules/cors/lib/index.js:219:13
      at optionsCallback (node_modules/cors/lib/index.js:199:9)
      at corsMiddleware (node_modules/cors/lib/index.js:204:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at internalNext (node_modules/helmet/index.cjs:537:6)
      at xXssProtectionMiddleware (node_modules/helmet/index.cjs:315:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPoweredByMiddleware (node_modules/helmet/index.cjs:308:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPermittedCrossDomainPoliciesMiddleware (node_modules/helmet/index.cjs:301:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xFrameOptionsMiddleware (node_modules/helmet/index.cjs:285:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDownloadOptionsMiddleware (node_modules/helmet/index.cjs:265:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDnsPrefetchControlMiddleware (node_modules/helmet/index.cjs:258:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xContentTypeOptionsMiddleware (node_modules/helmet/index.cjs:250:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at strictTransportSecurityMiddleware (node_modules/helmet/index.cjs:243:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at referrerPolicyMiddleware (node_modules/helmet/index.cjs:211:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at originAgentClusterMiddleware (node_modules/helmet/index.cjs:186:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginResourcePolicyMiddleware (node_modules/helmet/index.cjs:179:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginOpenerPolicyMiddleware (node_modules/helmet/index.cjs:163:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at contentSecurityPolicyMiddleware (node_modules/helmet/index.cjs:128:4)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at helmetMiddleware (node_modules/helmet/index.cjs:539:6)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/websocket/stream/A@PPL,M$FT HTTP/1.1" 400 146 "-" "-"
  console.log
    🚀 [ceb4398d] Live data stream request initiated {
      symbols: 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA',
      userId: 'dev-user...',
      userAgent: undefined,
      ip: '::ffff:127.0.0.1',
      timestamp: '2025-09-29T08:46:07.131Z'
    }

      at log (routes/websocket.js:190:13)

  console.log
    🔍 [ceb4398d] Parsing requested symbols: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA

      at log (routes/websocket.js:199:13)

  console.error
    ❌ [ceb4398d] Invalid symbols provided: {
      originalSymbols: 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA',
      filteredSymbols: [],
      impact: 'No valid symbols to stream'
    }

      206 |
      207 |     if (symbols.length === 0) {
    > 208 |       console.error(`❌ [${requestId}] Invalid symbols provided:`, {
          |               ^
      209 |         originalSymbols: req.params.symbols,
      210 |         filteredSymbols: symbols,
      211 |         impact: "No valid symbols to stream",

      at error (routes/websocket.js:208:15)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at next (middleware/auth.js:89:14)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at next (middleware/responseFormatter.js:66:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at urlencodedParser (node_modules/body-parser/lib/types/urlencoded.js:94:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at logger (node_modules/morgan/index.js:144:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at cors (node_modules/cors/lib/index.js:188:7)
      at node_modules/cors/lib/index.js:224:17
      at originCallback (node_modules/cors/lib/index.js:214:15)
      at node_modules/cors/lib/index.js:219:13
      at optionsCallback (node_modules/cors/lib/index.js:199:9)
      at corsMiddleware (node_modules/cors/lib/index.js:204:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at internalNext (node_modules/helmet/index.cjs:537:6)
      at xXssProtectionMiddleware (node_modules/helmet/index.cjs:315:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPoweredByMiddleware (node_modules/helmet/index.cjs:308:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPermittedCrossDomainPoliciesMiddleware (node_modules/helmet/index.cjs:301:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xFrameOptionsMiddleware (node_modules/helmet/index.cjs:285:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDownloadOptionsMiddleware (node_modules/helmet/index.cjs:265:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDnsPrefetchControlMiddleware (node_modules/helmet/index.cjs:258:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xContentTypeOptionsMiddleware (node_modules/helmet/index.cjs:250:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at strictTransportSecurityMiddleware (node_modules/helmet/index.cjs:243:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at referrerPolicyMiddleware (node_modules/helmet/index.cjs:211:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at originAgentClusterMiddleware (node_modules/helmet/index.cjs:186:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginResourcePolicyMiddleware (node_modules/helmet/index.cjs:179:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginOpenerPolicyMiddleware (node_modules/helmet/index.cjs:163:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at contentSecurityPolicyMiddleware (node_modules/helmet/index.cjs:128:4)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at helmetMiddleware (node_modules/helmet/index.cjs:539:6)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/websocket/stream/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA HTTP/1.1" 400 146 "-" "-"
  console.log
    🚀 [9a450b22] Live data stream request initiated {
      symbols: '123,456',
      userId: 'dev-user...',
      userAgent: undefined,
      ip: '::ffff:127.0.0.1',
      timestamp: '2025-09-29T08:46:07.144Z'
    }

      at log (routes/websocket.js:190:13)

  console.log
    🔍 [9a450b22] Parsing requested symbols: 123,456

      at log (routes/websocket.js:199:13)

  console.error
    ❌ [9a450b22] Invalid symbols provided: {
      originalSymbols: '123,456',
      filteredSymbols: [],
      impact: 'No valid symbols to stream'
    }

      206 |
      207 |     if (symbols.length === 0) {
    > 208 |       console.error(`❌ [${requestId}] Invalid symbols provided:`, {
          |               ^
      209 |         originalSymbols: req.params.symbols,
      210 |         filteredSymbols: symbols,
      211 |         impact: "No valid symbols to stream",

      at error (routes/websocket.js:208:15)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at next (middleware/auth.js:89:14)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at next (middleware/responseFormatter.js:66:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at urlencodedParser (node_modules/body-parser/lib/types/urlencoded.js:94:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at logger (node_modules/morgan/index.js:144:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at cors (node_modules/cors/lib/index.js:188:7)
      at node_modules/cors/lib/index.js:224:17
      at originCallback (node_modules/cors/lib/index.js:214:15)
      at node_modules/cors/lib/index.js:219:13
      at optionsCallback (node_modules/cors/lib/index.js:199:9)
      at corsMiddleware (node_modules/cors/lib/index.js:204:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at internalNext (node_modules/helmet/index.cjs:537:6)
      at xXssProtectionMiddleware (node_modules/helmet/index.cjs:315:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPoweredByMiddleware (node_modules/helmet/index.cjs:308:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPermittedCrossDomainPoliciesMiddleware (node_modules/helmet/index.cjs:301:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xFrameOptionsMiddleware (node_modules/helmet/index.cjs:285:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDownloadOptionsMiddleware (node_modules/helmet/index.cjs:265:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDnsPrefetchControlMiddleware (node_modules/helmet/index.cjs:258:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xContentTypeOptionsMiddleware (node_modules/helmet/index.cjs:250:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at strictTransportSecurityMiddleware (node_modules/helmet/index.cjs:243:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at referrerPolicyMiddleware (node_modules/helmet/index.cjs:211:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at originAgentClusterMiddleware (node_modules/helmet/index.cjs:186:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginResourcePolicyMiddleware (node_modules/helmet/index.cjs:179:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginOpenerPolicyMiddleware (node_modules/helmet/index.cjs:163:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at contentSecurityPolicyMiddleware (node_modules/helmet/index.cjs:128:4)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at helmetMiddleware (node_modules/helmet/index.cjs:539:6)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/websocket/stream/123,456 HTTP/1.1" 400 146 "-" "-"
PASS tests/integration/routes/websocket.integration.test.js
  WebSocket Routes
    GET /api/websocket
      ✓ should return websocket API overview (14 ms)
      ✓ should include expected endpoints (8 ms)
    GET /api/websocket/test
      ✓ should return test endpoint response (9 ms)
    GET /api/websocket/health
      ✓ should return health status (6 ms)
      ✓ should handle dependencies gracefully (11 ms)
    GET /api/websocket/status
      ✓ should return status information (9 ms)
      ✓ should handle status errors gracefully (8 ms)
    GET /api/websocket/stream/:symbols
      ✓ should require authentication (5 ms)
      ✓ should handle missing API credentials (12 ms)
      ✓ should validate symbols parameter (6 ms)
      ✓ should handle single symbol (11 ms)
      ✓ should handle multiple symbols (13 ms)
      ✓ should handle invalid symbols (14 ms)
      ✓ should handle mixed valid/invalid symbols (11 ms)
      ✓ should handle symbol case conversion (14 ms)
      ✓ should handle too many symbols (11 ms)
      ✓ should validate response structure when successful (13 ms)
    GET /api/websocket/trades/:symbols
      ✓ should require authentication (5 ms)
      ✓ should handle missing API credentials (7 ms)
      ✓ should handle single symbol (5 ms)
      ✓ should handle multiple symbols (7 ms)
      ✓ should validate response structure when successful (7 ms)
    GET /api/websocket/bars/:symbols
      ✓ should require authentication (4 ms)
      ✓ should handle missing API credentials (4 ms)
      ✓ should handle timeframe parameter (6 ms)
      ✓ should use default timeframe when not specified (4 ms)
      ✓ should handle multiple symbols (4 ms)
      ✓ should handle various timeframes (25 ms)
    POST /api/websocket/subscribe
      ✓ should require authentication (5 ms)
      ✓ should validate symbols parameter (4 ms)
      ✓ should handle valid subscription (6 ms)
      ✓ should handle symbols case conversion (7 ms)
      ✓ should handle default dataTypes (5 ms)
      ✓ should handle invalid symbols array types (5 ms)
    GET /api/websocket/subscriptions
      ✓ should require authentication (4 ms)
      ✓ should return user subscriptions (5 ms)
    DELETE /api/websocket/subscribe
      ✓ should require authentication (5 ms)
      ✓ should handle specific symbol unsubscription (4 ms)
      ✓ should handle full unsubscription (6 ms)
      ✓ should handle empty symbols array (5 ms)
    GET /api/websocket/connections
      ✓ should require authentication (3 ms)
      ✓ should return connection information (7 ms)
      ✓ should handle details parameter (5 ms)
      ✓ should handle details parameter false (7 ms)
    Authentication and Error Handling
      ✓ should handle invalid authentication tokens (8 ms)
      ✓ should handle missing authorization header (9 ms)
      ✓ should handle malformed request bodies (4 ms)
    Performance and Concurrency
      ✓ should respond within reasonable time (4 ms)
      ✓ should handle concurrent requests (14 ms)
    Data Validation
      ✓ should validate timestamp formats (7 ms)
      ✓ should validate numeric types (4 ms)
      ✓ should validate array types (4 ms)
    Edge Cases
      ✓ should handle empty symbol parameters (5 ms)
      ✓ should handle special characters in symbols (9 ms)
      ✓ should handle extremely long symbol names (12 ms)
      ✓ should handle numeric symbols (14 ms)

  console.log
    🚨 Alert created: [HIGH] Test Alert

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [CRITICAL] Critical System Alert

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [MEDIUM] Test Alert

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    ✅ Alert resolved: Test Alert

      at AlertSystem.log [as resolveAlert] (utils/alertSystem.js:424:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    ⚙️ Alert configuration updated

      at AlertSystem.log [as updateConfig] (utils/alertSystem.js:897:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [CRITICAL] Test 1

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [WARNING] Test 2

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [LOW] Test

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    ✅ Alert resolved: Test

      at AlertSystem.log [as resolveAlert] (utils/alertSystem.js:424:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [WARNING] High Latency Warning

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [WARNING] Title

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [CRITICAL] Provider Disconnected

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [CRITICAL] High Error Rate Critical

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [CRITICAL] Daily Cost Critical

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [CRITICAL] Connection Limit Near Max

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [WARNING] Connection Usage High

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [CRITICAL] Cost Budget Near Max

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [WARNING] Cost Usage High

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [CRITICAL] High Latency Critical

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [CRITICAL] High Error Rate Critical

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [CRITICAL] Provider Disconnected

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [CRITICAL] High Latency Critical

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [WARNING] Daily Cost Warning

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [CRITICAL] Connection Limit Critical

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [CRITICAL] Daily Cost Critical

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [CRITICAL] Connection Limit Critical

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    ✅ Alert resolved: Daily Cost Critical

      at AlertSystem.log [as resolveAlert] (utils/alertSystem.js:424:13)

  console.log
    ✅ Alert resolved: Connection Limit Critical

      at AlertSystem.log [as resolveAlert] (utils/alertSystem.js:424:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [WARNING] Cooldown Test Alert

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [WARNING] Test Alert 1

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [CRITICAL] Test Alert 2

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    ✅ Alert resolved: Test Alert 1

      at AlertSystem.log [as resolveAlert] (utils/alertSystem.js:424:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [CRITICAL] Critical Test

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [WARNING] Warning Test

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [INFO] Info Test

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [INFO] Cleanup Test

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    ✅ Alert resolved: Cleanup Test

      at AlertSystem.log [as resolveAlert] (utils/alertSystem.js:424:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [WARNING] High Latency Warning

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [WARNING] High Error Rate Warning

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [WARNING] Connection Limit Warning

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

PASS tests/unit/utils/alertSystem.test.js
  Alert System
    alert creation and management
      ✓ should create alert with proper parameters (10 ms)
      ✓ should create critical alert (1 ms)
      ✓ should resolve active alert (2 ms)
    alert configuration and management
      ✓ should update configuration (1 ms)
      ✓ should get alerts status (2 ms)
      ✓ should cleanup resolved alerts (2 ms)
    monitoring and lifecycle
      ✓ should start monitoring (4 ms)
      ✓ should stop monitoring (1 ms)
    provider monitoring
      ✓ should check provider health (4 ms)
      ✓ should detect high latency (2 ms)
    error handling and edge cases
      ✓ should handle invalid alert creation (2 ms)
      ✓ should handle alert resolution for non-existent alert
      ✓ should handle provider disconnection (1 ms)
      ✓ should handle high error rate (4 ms)
    configuration management
      ✓ should maintain configuration after updates (1 ms)
      ✓ should handle cost monitoring (1 ms)
    resource limit monitoring
      ✓ should create critical alert when connection usage exceeds 90% (2 ms)
      ✓ should create warning alert when connection usage exceeds 80% (1 ms)
      ✓ should create critical alert when cost usage exceeds 90% (4 ms)
      ✓ should create warning alert when cost usage exceeds 80% (1 ms)
      ✓ should handle limits without usage thresholds
      ✓ should handle missing limit categories
    provider health monitoring
      ✓ should check provider health with high latency (2 ms)
      ✓ should check provider health with high error rate (1 ms)
      ✓ should check provider health with disconnected status (2 ms)
      ✓ should resolve provider alerts when healthy (1 ms)
    global health monitoring
      ✓ should check global cost thresholds - warning level (1 ms)
      ✓ should check global connection thresholds - critical level (1 ms)
      ✓ should resolve global alerts when metrics are healthy (2 ms)
    notification methods
      ✓ should send email notification (9 ms)
      ✓ should send webhook notification when URL is configured (1 ms)
      ✓ should warn when webhook URL is not configured (3 ms)
      ✓ should handle email notification errors (1 ms)
      ✓ should handle webhook notification errors (1 ms)
    alert lifecycle and management
      ✓ should handle alert cooldown periods (1 ms)
      ✓ should resolve specific alert types (2 ms)
      ✓ should filter alerts by severity manually (2 ms)
      ✓ should cleanup old resolved alerts (2 ms)
      ✓ should test notifications system (1 ms)
      ✓ should force health check (1 ms)
      ✓ should handle provider health with warning level latency (2 ms)
      ✓ should handle provider health with warning level error rate (1 ms)
      ✓ should handle global connection warning level (1 ms)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    🔔 Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:38:13)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/alerts/active HTTP/1.1" 200 1512 "-" "-"
  console.log
    🔔 Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:38:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/alerts/active?priority=high&category=price&limit=25 HTTP/1.1" 200 1512 "-" "-"
  console.log
    🔔 Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:38:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/alerts/active?include_resolved=true HTTP/1.1" 200 1512 "-" "-"
  console.log
    📋 All alerts requested for user: dev-user-bypass, status: all

      at log (routes/alerts.js:325:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/alerts HTTP/1.1" 200 682 "-" "-"
  console.log
    📋 All alerts requested for user: dev-user-bypass, status: resolved

      at log (routes/alerts.js:325:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/alerts?status=resolved&limit=50 HTTP/1.1" 200 216 "-" "-"
  console.log
    ✅ Alert test_alert_123 acknowledge requested by user: dev-user-bypass

      at log (routes/alerts.js:425:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "PUT /api/alerts/test_alert_123/acknowledge HTTP/1.1" 200 288 "-" "-"
  console.log
    ✅ Alert test_alert_456 dismiss requested by user: dev-user-bypass

      at log (routes/alerts.js:425:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "PUT /api/alerts/test_alert_456/acknowledge HTTP/1.1" 200 280 "-" "-"
  console.log
    ✅ Alert test_alert_789 acknowledge requested by user: dev-user-bypass

      at log (routes/alerts.js:425:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "PUT /api/alerts/test_alert_789/acknowledge HTTP/1.1" 200 288 "-" "-"
  console.log
    😴 Alert test_alert_snooze snooze requested by user: dev-user-bypass for 60 minutes

      at log (routes/alerts.js:457:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "PUT /api/alerts/test_alert_snooze/snooze HTTP/1.1" 200 277 "-" "-"
  console.log
    😴 Alert test_alert_custom_snooze snooze requested by user: dev-user-bypass for 120 minutes

      at log (routes/alerts.js:457:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "PUT /api/alerts/test_alert_custom_snooze/snooze HTTP/1.1" 200 293 "-" "-"
  console.log
    😴 Alert test_alert_time_validate snooze requested by user: dev-user-bypass for 30 minutes

      at log (routes/alerts.js:457:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "PUT /api/alerts/test_alert_time_validate/snooze HTTP/1.1" 200 291 "-" "-"
  console.log
    🆕 New alert creation requested by user: dev-user-bypass for AAPL

      at log (routes/alerts.js:500:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "POST /api/alerts HTTP/1.1" 201 385 "-" "-"
  console.log
    🆕 New alert creation requested by user: dev-user-bypass for TSLA

      at log (routes/alerts.js:500:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "POST /api/alerts HTTP/1.1" 201 379 "-" "-"
  console.log
    📊 Alerts summary requested for user: dev-user-bypass, timeframe: 24h

      at log (routes/alerts.js:544:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/alerts/summary HTTP/1.1" 200 1348 "-" "-"
  console.log
    📊 Alerts summary requested for user: dev-user-bypass, timeframe: 1h

      at log (routes/alerts.js:544:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/alerts/summary?timeframe=1h HTTP/1.1" 200 1347 "-" "-"
  console.log
    📊 Alerts summary requested for user: dev-user-bypass, timeframe: 6h

      at log (routes/alerts.js:544:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/alerts/summary?timeframe=6h HTTP/1.1" 200 1347 "-" "-"
  console.log
    📊 Alerts summary requested for user: dev-user-bypass, timeframe: 24h

      at log (routes/alerts.js:544:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/alerts/summary?timeframe=24h HTTP/1.1" 200 1348 "-" "-"
  console.log
    📊 Alerts summary requested for user: dev-user-bypass, timeframe: 7d

      at log (routes/alerts.js:544:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/alerts/summary?timeframe=7d HTTP/1.1" 200 1347 "-" "-"
  console.log
    📊 Alerts summary requested for user: dev-user-bypass, timeframe: 30d

      at log (routes/alerts.js:544:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/alerts/summary?timeframe=30d HTTP/1.1" 200 1354 "-" "-"
  console.log
    📊 Alerts summary requested for user: dev-user-bypass, timeframe: invalid

      at log (routes/alerts.js:544:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/alerts/summary?timeframe=invalid HTTP/1.1" 400 115 "-" "-"
  console.log
    📊 Alerts summary requested for user: dev-user-bypass, timeframe: 24h

      at log (routes/alerts.js:544:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/alerts/summary?include_trends=true HTTP/1.1" 200 1348 "-" "-"
  console.log
    📊 Alerts summary requested for user: dev-user-bypass, timeframe: 24h

      at log (routes/alerts.js:544:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/alerts/summary?include_stats=true HTTP/1.1" 200 1348 "-" "-"
  console.log
    📊 Alerts summary requested for user: dev-user-bypass, timeframe: 24h

      at log (routes/alerts.js:544:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/alerts/summary HTTP/1.1" 200 1348 "-" "-"
  console.log
    ⚙️ Alert settings requested for user: dev-user-bypass

      at log (routes/alerts.js:821:13)

  console.log
    No user-specific alert settings found, returning defaults

      at log (routes/alerts.js:843:15)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/alerts/settings HTTP/1.1" 200 4706 "-" "-"
  console.log
    ⚙️ Alert settings requested for user: dev-user-bypass

      at log (routes/alerts.js:821:13)

  console.log
    No user-specific alert settings found, returning defaults

      at log (routes/alerts.js:843:15)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/alerts/settings HTTP/1.1" 200 4706 "-" "-"
  console.log
    ⚙️ Alert settings requested for user: dev-user-bypass

      at log (routes/alerts.js:821:13)

  console.log
    No user-specific alert settings found, returning defaults

      at log (routes/alerts.js:843:15)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/alerts/settings HTTP/1.1" 200 4706 "-" "-"
  console.log
    ⚙️ Alert settings requested for user: dev-user-bypass

      at log (routes/alerts.js:821:13)

  console.log
    No user-specific alert settings found, returning defaults

      at log (routes/alerts.js:843:15)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/alerts/settings HTTP/1.1" 200 4706 "-" "-"
  console.log
    📋 Alert history requested for user: dev-user-bypass

      at log (routes/alerts.js:1287:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/alerts/history HTTP/1.1" 200 772 "-" "-"
  console.log
    📋 Alert history requested for user: dev-user-bypass

      at log (routes/alerts.js:1287:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/alerts/history?limit=50&status=resolved&category=price HTTP/1.1" 200 230 "-" "-"
  console.log
    📋 Alert rules requested for user: dev-user-bypass

      at log (routes/alerts.js:1405:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/alerts/rules HTTP/1.1" 200 508 "-" "-"
  console.log
    📋 Alert rules requested for user: dev-user-bypass

      at log (routes/alerts.js:1405:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/alerts/rules HTTP/1.1" 200 508 "-" "-"
  console.log
    🔗 Alert webhooks requested for user: dev-user-bypass, status: all, type: all

      at log (routes/alerts.js:1460:13)

  console.log
    🔗 Fetching webhook configurations for user: dev-user-bypass

      at log (routes/alerts.js:1468:15)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/alerts/webhooks HTTP/1.1" 200 749 "-" "-"
  console.log
    🔗 Alert webhooks requested for user: dev-user-bypass, status: active, type: slack

      at log (routes/alerts.js:1460:13)

  console.log
    🔗 Fetching webhook configurations for user: dev-user-bypass

      at log (routes/alerts.js:1468:15)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "GET /api/alerts/webhooks?status=active&webhook_type=slack&limit=10 HTTP/1.1" 200 377 "-" "-"
  console.log
    🚨 Creating new alert for user: dev-user-bypass, symbol: NVDA

      at log (routes/alerts.js:1793:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "POST /api/alerts/create HTTP/1.1" 201 625 "-" "-"
  console.log
    🚨 Creating new alert for user: dev-user-bypass, symbol: msft

      at log (routes/alerts.js:1793:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "POST /api/alerts/create HTTP/1.1" 201 625 "-" "-"
  console.log
    🚨 Creating new alert for user: dev-user-bypass, symbol: AAPL

      at log (routes/alerts.js:1793:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:07 +0000] "POST /api/alerts/create HTTP/1.1" 400 114 "-" "-"
  console.log
    🚨 Creating new alert for user: dev-user-bypass, symbol: undefined

      at log (routes/alerts.js:1793:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:08 +0000] "POST /api/alerts/create HTTP/1.1" 400 99 "-" "-"
  console.log
    🗑️ Deleting alert alert_to_delete_123 for user: dev-user-bypass

      at log (routes/alerts.js:1853:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:08 +0000] "DELETE /api/alerts/delete/alert_to_delete_123 HTTP/1.1" 200 435 "-" "-"
  console.log
    🗑️ Deleting alert alert_default_reason for user: dev-user-bypass

      at log (routes/alerts.js:1853:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:08 +0000] "DELETE /api/alerts/delete/alert_default_reason HTTP/1.1" 200 435 "-" "-"
  console.log
    🗑️ Deleting alert delete for user: dev-user-bypass

      at log (routes/alerts.js:2380:13)

  console.error
    Database query error: {
      error: 'invalid input syntax for type integer: "delete"',
      query: 'DELETE FROM price_alerts \n' +
        '       WHERE id = $1 AND user_id = $2\n' +
        '       RETURNING *',
      params: '2 parameters',
      code: '22P02'
    }

      416 |     return result;
      417 |   } catch (error) {
    > 418 |     console.error("Database query error:", {
          |             ^
      419 |       error: error.message,
      420 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      421 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:418:13)
      at routes/alerts.js:2383:20

  console.error
    Delete alert error: error: invalid input syntax for type integer: "delete"
        at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at query (/home/stocks/algo/webapp/lambda/utils/database.js:389:20)
        at /home/stocks/algo/webapp/lambda/routes/alerts.js:2383:20 {
      length: 149,
      severity: 'ERROR',
      code: '22P02',
      detail: undefined,
      hint: undefined,
      position: undefined,
      internalPosition: undefined,
      internalQuery: undefined,
      where: "unnamed portal parameter $1 = '...'",
      schema: undefined,
      table: undefined,
      column: undefined,
      dataType: undefined,
      constraint: undefined,
      file: 'numutils.c',
      line: '617',
      routine: 'pg_strtoint32_safe'
    }

      2404 |     });
      2405 |   } catch (error) {
    > 2406 |     console.error("Delete alert error:", error);
           |             ^
      2407 |     res.status(500).json({
      2408 |       success: false,
      2409 |       error: "Failed to delete alert",

      at error (routes/alerts.js:2406:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:08 +0000] "DELETE /api/alerts/delete/ HTTP/1.1" 500 112 "-" "-"
  console.log
    💰 Price alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:1908:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:08 +0000] "GET /api/alerts/price HTTP/1.1" 200 222 "-" "-"
  console.log
    💰 Price alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:1908:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:08 +0000] "GET /api/alerts/price?symbol=AAPL HTTP/1.1" 200 222 "-" "-"
  console.log
    💰 Price alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:1908:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:08 +0000] "GET /api/alerts/price?threshold_min=100&threshold_max=200 HTTP/1.1" 200 222 "-" "-"
  console.log
    💰 Price alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:1908:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:08 +0000] "GET /api/alerts/price?alert_type=stop_loss&status=active HTTP/1.1" 200 222 "-" "-"
  console.log
    ✏️ Updating alert alert_to_update_123 for user: dev-user-bypass

      at log (routes/alerts.js:2275:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:08 +0000] "PUT /api/alerts/update/alert_to_update_123 HTTP/1.1" 200 530 "-" "-"
  console.log
    ✏️ Updating alert alert_defaults_123 for user: dev-user-bypass

      at log (routes/alerts.js:2275:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:08 +0000] "PUT /api/alerts/update/alert_defaults_123 HTTP/1.1" 200 485 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:08 +0000] "PUT /api/alerts/update/ HTTP/1.1" 404 124 "-" "-"
  console.log
    ⚙️ Alert settings requested for user: dev-user-bypass

      at log (routes/alerts.js:821:13)

  console.log
    No user-specific alert settings found, returning defaults

      at log (routes/alerts.js:843:15)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:08 +0000] "GET /api/alerts/settings HTTP/1.1" 200 4706 "-" "-"
  console.log
    📋 Alert rules requested for user: dev-user-bypass

      at log (routes/alerts.js:1405:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:08 +0000] "GET /api/alerts/rules HTTP/1.1" 200 508 "-" "-"
  console.log
    📊 Alerts summary requested for user: dev-user-bypass, timeframe: 24h

      at log (routes/alerts.js:544:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:08 +0000] "GET /api/alerts/summary HTTP/1.1" 200 1348 "-" "-"
PASS tests/integration/routes/alerts.integration.test.js
  Alerts Routes
    GET /api/alerts/active
      ✓ should return active alerts with proper structure (22 ms)
      ✓ should handle query parameters (12 ms)
      ✓ should handle include_resolved parameter (9 ms)
    GET /api/alerts
      ✓ should redirect to active alerts (11 ms)
      ✓ should handle status parameter (10 ms)
    PUT /api/alerts/:alertId/acknowledge
      ✓ should acknowledge alert successfully (13 ms)
      ✓ should handle dismiss action (11 ms)
      ✓ should handle default acknowledge action (7 ms)
    PUT /api/alerts/:alertId/snooze
      ✓ should snooze alert with default duration (6 ms)
      ✓ should snooze alert with custom duration (8 ms)
      ✓ should validate snooze_until timestamp (7 ms)
    POST /api/alerts
      ✓ should create new alert (7 ms)
      ✓ should create alert with defaults (5 ms)
    GET /api/alerts/summary
      ✓ should return alerts summary with default timeframe (10 ms)
      ✓ should handle different timeframes (45 ms)
      ✓ should reject invalid timeframe (6 ms)
      ✓ should include trends when requested (8 ms)
      ✓ should include detailed stats when requested (8 ms)
      ✓ should validate severity breakdown structure (8 ms)
    GET /api/alerts/settings
      ✓ should return comprehensive alert settings (12 ms)
      ✓ should include notification preferences (9 ms)
      ✓ should include alert categories (8 ms)
      ✓ should include subscription info (10 ms)
    GET /api/alerts/history
      ✓ should return 501 not implemented (7 ms)
      ✓ should handle query parameters (9 ms)
    GET /api/alerts/rules
      ✓ should return alert rules (6 ms)
      ✓ should return rule structure (5 ms)
    GET /api/alerts/webhooks
      ✓ should return 501 not implemented (9 ms)
      ✓ should handle webhook parameters (7 ms)
    POST /api/alerts/create
      ✓ should create alert with required fields (7 ms)
      ✓ should use default values (5 ms)
      ✓ should reject missing required fields (6 ms)
      ✓ should reject empty request (6 ms)
    DELETE /api/alerts/delete/:alertId
      ✓ should delete alert successfully (6 ms)
      ✓ should use default deletion reason (6 ms)
      ✓ should reject empty alert ID (34 ms)
    GET /api/alerts/price
      ✓ should handle price alerts endpoint (18 ms)
      ✓ should handle symbol filter (8 ms)
      ✓ should handle threshold filters (13 ms)
      ✓ should handle alert type filter (14 ms)
    PUT /api/alerts/update/:alertId
      ✓ should update alert successfully (6 ms)
      ✓ should use defaults when no data provided (8 ms)
      ✓ should reject empty alert ID (6 ms)
    Authentication
      ✓ should include user context in all responses (21 ms)

PASS tests/unit/utils/factorScoring.test.js
  FactorScoringEngine
    constructor
      ✓ should initialize with default factors (1 ms)
      ✓ should initialize with custom factors (1 ms)
    calculateCompositeScore
      ✓ should calculate composite score for valid stock data (1 ms)
      ✓ should calculate score with universe data for percentile ranking (1 ms)
      ✓ should handle missing data gracefully
      ✓ should handle null stock data (3 ms)
      ✓ should handle errors gracefully (1 ms)
      ✓ should handle calculation errors (1 ms)
    calculateCategoryScore
      ✓ should calculate category score with valid factors
      ✓ should return null with no valid factors (1 ms)
      ✓ should handle null and undefined values
      ✓ should handle NaN values (1 ms)
    calculatePercentileScore
      ✓ should calculate percentile score correctly (1 ms)
      ✓ should invert percentile for inverse factors (1 ms)
      ✓ should fall back to absolute score with insufficient data
      ✓ should handle errors gracefully (1 ms)
    calculateAbsoluteScore
      ✓ should score using predefined ranges (1 ms)
      ✓ should use linear score for unknown factors
      ✓ should return default score when no range matches (1 ms)
    getFactorScoringRanges
      ✓ should return ranges for known factors
      ✓ should return null for unknown factors (1 ms)
    linearScore
      ✓ should calculate sigmoid-based score
      ✓ should invert score when inverse is true
    scoreUniverse
      ✓ should score and rank universe (1 ms)
      ✓ should apply custom weights (3 ms)
      ✓ should handle empty universe
      ✓ should handle null universe (1 ms)
      ✓ should handle scoring errors (15 ms)
    applyCustomWeights
      ✓ should apply and normalize custom weights (1 ms)
      ✓ should ignore unknown categories (1 ms)
      ✓ should handle zero total weight
    getFactorExplanations
      ✓ should provide detailed factor explanations (1 ms)
      ✓ should skip null and undefined values (1 ms)
    interpretFactorScore
      ✓ should provide correct interpretations
    getFactorDefinitions
      ✓ should return current factor definitions (1 ms)
    createCustomProfile
      ✓ should create custom profile with metadata (1 ms)
      ✓ should handle empty description
    rankUniverse
      ✓ should rank universe with accessible properties (3 ms)
      ✓ should handle empty universe in rankUniverse (1 ms)
    calculateUniverseStats
      ✓ should calculate comprehensive statistics
      ✓ should skip factors with no valid data (1 ms)
    analyzeFactors
      ✓ should provide comprehensive factor analysis (2 ms)
    calculateFactorCorrelations
      ✓ should calculate correlation matrix
    calculateCorrelation
      ✓ should calculate perfect positive correlation
      ✓ should handle insufficient data
      ✓ should handle zero denominator (1 ms)
    identifyTopFactors
      ✓ should identify top performing factors (1 ms)
      ✓ should handle single value factors
    calculateVariance
      ✓ should calculate variance correctly (1 ms)
      ✓ should handle insufficient data
    normalizeFactors
      ✓ should normalize to 0-1 range (1 ms)
      ✓ should invert when inverse is true
      ✓ should handle edge cases (1 ms)
    calculateQuartiles
      ✓ should calculate quartiles for sufficient data (3 ms)
      ✓ should handle insufficient data
      ✓ should filter out invalid values (1 ms)
    screenByFactors
      ✓ should filter by composite score
      ✓ should filter by max composite score (1 ms)
      ✓ should filter by percentile
      ✓ should filter by category scores (1 ms)
      ✓ should filter out stocks without factor scores
    exported functions
      ✓ calculateCompositeScore should work (1 ms)
      ✓ scoreUniverse should work
      ✓ getFactorExplanations should work (1 ms)
      ✓ getFactorDefinitions should work
      ✓ createCustomProfile should work
      ✓ screenByFactors should work (1 ms)
      ✓ FACTOR_DEFINITIONS should be exported

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

FAIL tests/integration/database/cross-service-transaction.integration.test.js
  Cross-Service Transaction Integration
    Service Coordination Patterns
      ✕ should coordinate portfolio and order service transactions (3 ms)
      ✕ should handle cross-service transaction failure and rollback
    Service Dependency Management
      ✕ should handle service dependency chain transactions (1 ms)
      ✕ should handle circular dependency resolution
    Distributed Transaction Patterns
      ✕ should implement saga pattern for long-running transactions

  ● Cross-Service Transaction Integration › Service Coordination Patterns › should coordinate portfolio and order service transactions

    Database not initialized. Call initializeDatabase() first.

      340 | function getPool() {
      341 |   if (!pool || !dbInitialized) {
    > 342 |     throw new Error(
          |           ^
      343 |       "Database not initialized. Call initializeDatabase() first."
      344 |     );
      345 |   }

      at getPool (utils/database.js:342:11)
      at getPool (utils/database.js:513:24)
      at Object.transaction (tests/integration/database/cross-service-transaction.integration.test.js:25:13)

  ● Cross-Service Transaction Integration › Service Coordination Patterns › should handle cross-service transaction failure and rollback

    Database not initialized. Call initializeDatabase() first.

      340 | function getPool() {
      341 |   if (!pool || !dbInitialized) {
    > 342 |     throw new Error(
          |           ^
      343 |       "Database not initialized. Call initializeDatabase() first."
      344 |     );
      345 |   }

      at getPool (utils/database.js:342:11)
      at getPool (utils/database.js:513:24)
      at Object.transaction (tests/integration/database/cross-service-transaction.integration.test.js:184:13)

  ● Cross-Service Transaction Integration › Service Dependency Management › should handle service dependency chain transactions

    Database not initialized. Call initializeDatabase() first.

      340 | function getPool() {
      341 |   if (!pool || !dbInitialized) {
    > 342 |     throw new Error(
          |           ^
      343 |       "Database not initialized. Call initializeDatabase() first."
      344 |     );
      345 |   }

      at getPool (utils/database.js:342:11)
      at getPool (utils/database.js:513:24)
      at Object.transaction (tests/integration/database/cross-service-transaction.integration.test.js:321:13)

  ● Cross-Service Transaction Integration › Service Dependency Management › should handle circular dependency resolution

    Database not initialized. Call initializeDatabase() first.

      340 | function getPool() {
      341 |   if (!pool || !dbInitialized) {
    > 342 |     throw new Error(
          |           ^
      343 |       "Database not initialized. Call initializeDatabase() first."
      344 |     );
      345 |   }

      at getPool (utils/database.js:342:11)
      at getPool (utils/database.js:513:24)
      at Object.transaction (tests/integration/database/cross-service-transaction.integration.test.js:497:13)

  ● Cross-Service Transaction Integration › Distributed Transaction Patterns › should implement saga pattern for long-running transactions

    Database not initialized. Call initializeDatabase() first.

      340 | function getPool() {
      341 |   if (!pool || !dbInitialized) {
    > 342 |     throw new Error(
          |           ^
      343 |       "Database not initialized. Call initializeDatabase() first."
      344 |     );
      345 |   }

      at getPool (utils/database.js:342:11)
      at getPool (utils/database.js:513:24)
      at Object.transaction (tests/integration/database/cross-service-transaction.integration.test.js:644:13)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

  console.log
    Market overview completed in 21ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:08 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview completed in 10ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:08 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview completed in 9ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:08 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview completed in 7ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:09 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview completed in 7ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:09 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview completed in 9ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:09 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview completed in 9ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:09 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview completed in 9ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:09 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview completed in 7ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:09 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview completed in 10ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:09 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview completed in 9ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:09 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview completed in 9ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:10 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview completed in 7ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:10 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview completed in 8ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:10 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview completed in 9ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:10 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview completed in 8ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:10 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview completed in 10ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:10 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview completed in 11ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:10 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview completed in 9ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:10 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview completed in 8ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:10 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/health HTTP/1.1" 200 496 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/health HTTP/1.1" 200 495 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/health HTTP/1.1" 200 496 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/health HTTP/1.1" 200 496 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/health HTTP/1.1" 200 496 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/health HTTP/1.1" 200 496 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/health HTTP/1.1" 200 496 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/health HTTP/1.1" 200 496 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/health HTTP/1.1" 200 496 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/health HTTP/1.1" 200 496 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/health HTTP/1.1" 200 496 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/health HTTP/1.1" 200 496 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/health HTTP/1.1" 200 496 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/health HTTP/1.1" 200 496 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:11 +0000] "GET /api/health HTTP/1.1" 200 496 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview completed in 117ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 105ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 115ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 115ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 112ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 111ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 109ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 108ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 106ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 116ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 110ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 120ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 113ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 116ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 116ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:13 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 346 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:13 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 347 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:13 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 349 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:13 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 349 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:13 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 348 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:13 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 347 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:13 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 350 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:13 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 350 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:13 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 347 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:13 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 348 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:13 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 350 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:13 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 349 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:13 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 348 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:13 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 348 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:13 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 346 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:14 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:14 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:14 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:14 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:14 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:14 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:14 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:14 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:14 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:14 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:14 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:14 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:16 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:16 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:16 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:16 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:16 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:16 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:16 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:16 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:16 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:16 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:16 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:16 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview completed in 226ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 223ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 223ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 230ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 223ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 223ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 223ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 221ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 225ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 224ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 221ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 222ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 219ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 218ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 228ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 223ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 220ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 222ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 222ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 221ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 216ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 223ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 217ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 221ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 220ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 219ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 242ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 221ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 219ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 223ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview completed in 187ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 188ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 188ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 186ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 176ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 186ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 191ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 180ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 179ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 192ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 189ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 185ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 180ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 184ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 193ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 184ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 190ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 189ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 189ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 187ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 189ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 186ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 191ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 188ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 186ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:17 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview completed in 9ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:19 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:19 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:19 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:19 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:21 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:21 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:21 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:21 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:21 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:22 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:22 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:22 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:22 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:22 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:23 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:23 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Market overview completed in 315ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:23 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 313ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:23 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 312ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:23 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 307ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:23 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 313ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:23 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 306ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:23 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 304ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:23 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 316ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:23 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 314ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:23 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 314ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:23 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 323ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:23 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 317ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:23 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 318ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:23 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 313ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:23 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 320ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:23 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 327ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:23 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 322ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:23 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 322ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:23 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 323ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:23 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 322ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:23 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 321ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:23 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 321ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:23 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 321ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:23 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 327ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:23 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 324ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:23 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 323ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 318ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 321ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 331ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 323ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 331ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 328ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 333ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 330ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 333ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 328ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 329ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 335ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 326ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
  console.log
    Market overview completed in 333ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:24 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
PASS tests/integration/errors/rate-limiting.integration.test.js (16.428 s)
  Rate Limiting Integration
    Basic Rate Limiting Scenarios
      ✓ should handle rapid requests without blocking normal usage (2234 ms)
      ✓ should return 429 for excessive rapid requests (409 ms)
    Per-Endpoint Rate Limiting
      ✓ should apply different rate limits to different endpoint types (3359 ms)
      ✓ should handle authenticated vs unauthenticated rate limits (2157 ms)
    Rate Limit Response Format
      ✓ should return proper 429 error response format (351 ms)
      ✓ should include helpful rate limit information in responses (9 ms)
    Rate Limit Recovery
      ✓ should allow requests after rate limit reset period (2308 ms)
      ✓ should handle gradual recovery from rate limiting (4008 ms)
    Rate Limiting Security
      ✓ should not expose internal rate limiting configuration (506 ms)
      ✓ should handle distributed rate limiting consistently (664 ms)
    Rate Limiting Integration with Error Handling
      ✓ should maintain rate limiting during other error scenarios (159 ms)
      ✓ should handle rate limiting with authentication errors (123 ms)

FAIL tests/unit/utils/alpacaService.test.js
  AlpacaService
    constructor
      ✓ should create AlpacaService instance with valid credentials (1 ms)
      ✓ should throw error when API key is missing (15 ms)
      ✓ should throw error when API secret is missing (1 ms)
      ✓ should default to paper trading (1 ms)
      ✓ should support live trading mode
    checkRateLimit
      ✓ should allow requests under rate limit (1 ms)
      ✓ should throw error when rate limit exceeded (4 ms)
      ✓ should remove old requests outside time window (1 ms)
    getAccount
      ✕ should fetch and format account data successfully
      ✕ should throw error when account fetch fails (2 ms)
    getPositions
      ✕ should fetch and format positions data successfully (3 ms)
      ✕ should handle empty positions (1 ms)
      ✕ should throw error when positions fetch fails (5 ms)
    getPortfolioHistory
      ✕ should fetch and format portfolio history successfully (2 ms)
      ✕ should handle empty portfolio history
      ✕ should filter out null equity values
    getActivities
      ✕ should fetch and format activities successfully (1 ms)
      ✕ should handle missing optional fields (1 ms)
    getMarketCalendar
      ✕ should fetch and format market calendar successfully (1 ms)
    getMarketStatus
      ✕ should fetch market status successfully
      ✕ should throw error when market status fetch fails (4 ms)
    validateCredentials
      ✕ should return valid true when credentials are valid (2 ms)
      ✕ should return valid false when credentials are invalid (1 ms)
    getAsset
      ✕ should fetch and format asset data successfully (1 ms)
    getSectorFromSymbol
      ✓ should classify tech stocks correctly
      ✓ should classify financial stocks correctly
      ✓ should classify healthcare stocks correctly (1 ms)
      ✓ should return Other for unknown stocks (1 ms)
    calculateBasicSectorAllocation
      ✓ should calculate sector allocation correctly
      ✓ should handle empty positions (1 ms)
    calculateBasicRiskMetrics
      ✓ should calculate risk metrics with sufficient history (1 ms)
      ✓ should return default values with insufficient history
    getLatestQuote
      ✕ should fetch and format quote data successfully
      ✓ should return null when no quote data available
      ✓ should return null on API error (1 ms)
    getLatestTrade
      ✕ should fetch and format trade data successfully (1 ms)
      ✓ should return null when no trade data available (1 ms)
      ✓ should return null on API error (1 ms)
    getBars
      ✕ should fetch and format bars data successfully (1 ms)
      ✓ should return empty array when no bars data available
      ✓ should return empty array on API error (1 ms)
      ✕ should use default options when none provided (1 ms)
    getMarketClock
      ✕ should fetch market clock successfully (1 ms)
      ✕ should throw error on API failure (1 ms)
    createOrder
      ✕ should create market order successfully (1 ms)
      ✕ should create limit order successfully (1 ms)
      ✓ should validate required parameters (1 ms)
      ✕ should handle order creation failure (1 ms)
      ✕ should handle undefined order_type in response (1 ms)

  ● AlpacaService › getAccount › should fetch and format account data successfully

    Failed to fetch account information: this.client.getAccount is not a function

      85 |     } catch (error) {
      86 |       console.error("Alpaca account fetch error:", error.message);
    > 87 |       throw new Error(`Failed to fetch account information: ${error.message}`);
         |             ^
      88 |     }
      89 |   }
      90 |

      at AlpacaService.getAccount (utils/alpacaService.js:87:13)
      at Object.getAccount (tests/unit/utils/alpacaService.test.js:136:42)

  ● AlpacaService › getAccount › should throw error when account fetch fails

    expect(received).rejects.toThrow(expected)

    Expected substring: "Failed to fetch account information: API error"
    Received message:   "Failed to fetch account information: this.client.getAccount is not a function"

          85 |     } catch (error) {
          86 |       console.error("Alpaca account fetch error:", error.message);
        > 87 |       throw new Error(`Failed to fetch account information: ${error.message}`);
             |             ^
          88 |     }
          89 |   }
          90 |

      at AlpacaService.getAccount (utils/alpacaService.js:87:13)
      at Object.getAccount (tests/unit/utils/alpacaService.test.js:167:34)
      at Object.toThrow (node_modules/expect/build/index.js:218:22)
      at Object.toThrow (tests/unit/utils/alpacaService.test.js:167:56)

  ● AlpacaService › getPositions › should fetch and format positions data successfully

    Failed to fetch positions: this.client.getPositions is not a function

      122 |     } catch (error) {
      123 |       console.error("Alpaca positions fetch error:", error.message);
    > 124 |       throw new Error(`Failed to fetch positions: ${error.message}`);
          |             ^
      125 |     }
      126 |   }
      127 |

      at AlpacaService.getPositions (utils/alpacaService.js:124:13)
      at Object.getPositions (tests/unit/utils/alpacaService.test.js:199:42)

  ● AlpacaService › getPositions › should handle empty positions

    Failed to fetch positions: this.client.getPositions is not a function

      122 |     } catch (error) {
      123 |       console.error("Alpaca positions fetch error:", error.message);
    > 124 |       throw new Error(`Failed to fetch positions: ${error.message}`);
          |             ^
      125 |     }
      126 |   }
      127 |

      at AlpacaService.getPositions (utils/alpacaService.js:124:13)
      at Object.getPositions (tests/unit/utils/alpacaService.test.js:227:42)

  ● AlpacaService › getPositions › should throw error when positions fetch fails

    expect(received).rejects.toThrow(expected)

    Expected substring: "Failed to fetch positions: API error"
    Received message:   "Failed to fetch positions: this.client.getPositions is not a function"

          122 |     } catch (error) {
          123 |       console.error("Alpaca positions fetch error:", error.message);
        > 124 |       throw new Error(`Failed to fetch positions: ${error.message}`);
              |             ^
          125 |     }
          126 |   }
          127 |

      at AlpacaService.getPositions (utils/alpacaService.js:124:13)
      at Object.getPositions (tests/unit/utils/alpacaService.test.js:235:34)
      at Object.toThrow (node_modules/expect/build/index.js:218:22)
      at Object.toThrow (tests/unit/utils/alpacaService.test.js:235:58)

  ● AlpacaService › getPortfolioHistory › should fetch and format portfolio history successfully

    Failed to fetch portfolio history: this.client.getPortfolioHistory is not a function

      168 |     } catch (error) {
      169 |       console.error("Alpaca portfolio history fetch error:", error.message);
    > 170 |       throw new Error(`Failed to fetch portfolio history: ${error.message}`);
          |             ^
      171 |     }
      172 |   }
      173 |

      at AlpacaService.getPortfolioHistory (utils/alpacaService.js:170:13)
      at Object.getPortfolioHistory (tests/unit/utils/alpacaService.test.js:253:42)

  ● AlpacaService › getPortfolioHistory › should handle empty portfolio history

    Failed to fetch portfolio history: this.client.getPortfolioHistory is not a function

      168 |     } catch (error) {
      169 |       console.error("Alpaca portfolio history fetch error:", error.message);
    > 170 |       throw new Error(`Failed to fetch portfolio history: ${error.message}`);
          |             ^
      171 |     }
      172 |   }
      173 |

      at AlpacaService.getPortfolioHistory (utils/alpacaService.js:170:13)
      at Object.getPortfolioHistory (tests/unit/utils/alpacaService.test.js:275:42)

  ● AlpacaService › getPortfolioHistory › should filter out null equity values

    Failed to fetch portfolio history: this.client.getPortfolioHistory is not a function

      168 |     } catch (error) {
      169 |       console.error("Alpaca portfolio history fetch error:", error.message);
    > 170 |       throw new Error(`Failed to fetch portfolio history: ${error.message}`);
          |             ^
      171 |     }
      172 |   }
      173 |

      at AlpacaService.getPortfolioHistory (utils/alpacaService.js:170:13)
      at Object.getPortfolioHistory (tests/unit/utils/alpacaService.test.js:291:42)

  ● AlpacaService › getActivities › should fetch and format activities successfully

    Failed to fetch activities: this.client.getActivities is not a function

      197 |     } catch (error) {
      198 |       console.error("Alpaca activities fetch error:", error.message);
    > 199 |       throw new Error(`Failed to fetch activities: ${error.message}`);
          |             ^
      200 |     }
      201 |   }
      202 |

      at AlpacaService.getActivities (utils/alpacaService.js:199:13)
      at Object.getActivities (tests/unit/utils/alpacaService.test.js:317:42)

  ● AlpacaService › getActivities › should handle missing optional fields

    Failed to fetch activities: this.client.getActivities is not a function

      197 |     } catch (error) {
      198 |       console.error("Alpaca activities fetch error:", error.message);
    > 199 |       throw new Error(`Failed to fetch activities: ${error.message}`);
          |             ^
      200 |     }
      201 |   }
      202 |

      at AlpacaService.getActivities (utils/alpacaService.js:199:13)
      at Object.getActivities (tests/unit/utils/alpacaService.test.js:350:42)

  ● AlpacaService › getMarketCalendar › should fetch and format market calendar successfully

    Failed to fetch market calendar: this.client.getCalendar is not a function

      222 |     } catch (error) {
      223 |       console.error("Alpaca calendar fetch error:", error.message);
    > 224 |       throw new Error(`Failed to fetch market calendar: ${error.message}`);
          |             ^
      225 |     }
      226 |   }
      227 |

      at AlpacaService.getMarketCalendar (utils/alpacaService.js:224:13)
      at Object.getMarketCalendar (tests/unit/utils/alpacaService.test.js:380:42)

  ● AlpacaService › getMarketStatus › should fetch market status successfully

    Failed to fetch market status: this.client.getClock is not a function

      244 |     } catch (error) {
      245 |       console.error("Alpaca market status fetch error:", error.message);
    > 246 |       throw new Error(`Failed to fetch market status: ${error.message}`);
          |             ^
      247 |     }
      248 |   }
      249 |

      at AlpacaService.getMarketStatus (utils/alpacaService.js:246:13)
      at Object.getMarketStatus (tests/unit/utils/alpacaService.test.js:412:42)

  ● AlpacaService › getMarketStatus › should throw error when market status fetch fails

    expect(received).rejects.toThrow(expected)

    Expected substring: "Failed to fetch market status: API error"
    Received message:   "Failed to fetch market status: this.client.getClock is not a function"

          244 |     } catch (error) {
          245 |       console.error("Alpaca market status fetch error:", error.message);
        > 246 |       throw new Error(`Failed to fetch market status: ${error.message}`);
              |             ^
          247 |     }
          248 |   }
          249 |

      at AlpacaService.getMarketStatus (utils/alpacaService.js:246:13)
      at Object.getMarketStatus (tests/unit/utils/alpacaService.test.js:426:34)
      at Object.toThrow (node_modules/expect/build/index.js:218:22)
      at Object.toThrow (tests/unit/utils/alpacaService.test.js:426:61)

  ● AlpacaService › validateCredentials › should return valid true when credentials are valid

    expect(received).toEqual(expected) // deep equality

    - Expected  - 3
    + Received  + 2

      Object {
    -   "accountId": "account-123",
        "environment": "paper",
    -   "status": "ACTIVE",
    -   "valid": true,
    +   "error": "this.client.getAccount is not a function",
    +   "valid": false,
      }

      437 |       const result = await alpacaService.validateCredentials();
      438 |
    > 439 |       expect(result).toEqual({
          |                      ^
      440 |         valid: true,
      441 |         accountId: "account-123",
      442 |         status: "ACTIVE",

      at Object.toEqual (tests/unit/utils/alpacaService.test.js:439:22)

  ● AlpacaService › validateCredentials › should return valid false when credentials are invalid

    expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 1

      Object {
        "environment": "paper",
    -   "error": "Unauthorized",
    +   "error": "this.client.getAccount is not a function",
        "valid": false,
      }

      450 |       const result = await alpacaService.validateCredentials();
      451 |
    > 452 |       expect(result).toEqual({
          |                      ^
      453 |         valid: false,
      454 |         error: "Unauthorized",
      455 |         environment: "paper",

      at Object.toEqual (tests/unit/utils/alpacaService.test.js:452:22)

  ● AlpacaService › getAsset › should fetch and format asset data successfully

    Failed to fetch asset information: this.client.getAsset is not a function

      299 |     } catch (error) {
      300 |       console.error("Alpaca asset fetch error:", error.message);
    > 301 |       throw new Error(`Failed to fetch asset information: ${error.message}`);
          |             ^
      302 |     }
      303 |   }
      304 |

      at AlpacaService.getAsset (utils/alpacaService.js:301:13)
      at Object.getAsset (tests/unit/utils/alpacaService.test.js:478:42)

  ● AlpacaService › getLatestQuote › should fetch and format quote data successfully

    expect(received).toEqual(expected) // deep equality

    Expected: {"askPrice": 149.6, "askSize": 200, "bidPrice": 149.5, "bidSize": 100, "conditions": ["R"], "exchange": "NASDAQ", "symbol": "AAPL", "timestamp": "2022-01-01T10:30:00Z"}
    Received: null

      609 |       const result = await alpacaService.getLatestQuote("AAPL");
      610 |
    > 611 |       expect(result).toEqual({
          |                      ^
      612 |         symbol: "AAPL",
      613 |         bidPrice: 149.5,
      614 |         askPrice: 149.6,

      at Object.toEqual (tests/unit/utils/alpacaService.test.js:611:22)

  ● AlpacaService › getLatestTrade › should fetch and format trade data successfully

    expect(received).toEqual(expected) // deep equality

    Expected: {"conditions": ["@"], "exchange": "NASDAQ", "price": 149.55, "size": 100, "symbol": "AAPL", "timestamp": "2022-01-01T10:30:00Z"}
    Received: null

      652 |       const result = await alpacaService.getLatestTrade("AAPL");
      653 |
    > 654 |       expect(result).toEqual({
          |                      ^
      655 |         symbol: "AAPL",
      656 |         price: 149.55,
      657 |         size: 100,

      at Object.toEqual (tests/unit/utils/alpacaService.test.js:654:22)

  ● AlpacaService › getBars › should fetch and format bars data successfully

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 0
    Received array:  []

      703 |       });
      704 |
    > 705 |       expect(result).toHaveLength(1);
          |                      ^
      706 |       expect(result[0]).toEqual({
      707 |         symbol: "AAPL",
      708 |         timestamp: "2022-01-01T09:30:00Z",

      at Object.toHaveLength (tests/unit/utils/alpacaService.test.js:705:22)

  ● AlpacaService › getBars › should use default options when none provided

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "AAPL", {"asof": null, "end": Any<String>, "feed": null, "limit": 100, "page_token": null, "start": Any<String>, "timeframe": "1Min"}

    Number of calls: 0

      738 |       await alpacaService.getBars("AAPL");
      739 |
    > 740 |       expect(mockClient.getBars).toHaveBeenCalledWith("AAPL", {
          |                                  ^
      741 |         timeframe: "1Min",
      742 |         start: expect.any(String),
      743 |         end: expect.any(String),

      at Object.toHaveBeenCalledWith (tests/unit/utils/alpacaService.test.js:740:34)

  ● AlpacaService › getMarketClock › should fetch market clock successfully

    Failed to fetch market status: this.client.getClock is not a function

      612 |
      613 |       // Throw error instead of returning fallback data
    > 614 |       throw new Error(`Failed to fetch market status: ${error.message}`);
          |             ^
      615 |     }
      616 |   }
      617 |

      at AlpacaService.getMarketClock (utils/alpacaService.js:614:13)
      at Object.getMarketClock (tests/unit/utils/alpacaService.test.js:763:42)

  ● AlpacaService › getMarketClock › should throw error on API failure

    expect(received).rejects.toThrow(expected)

    Expected substring: "API error"
    Received message:   "Failed to fetch market status: this.client.getClock is not a function"

          612 |
          613 |       // Throw error instead of returning fallback data
        > 614 |       throw new Error(`Failed to fetch market status: ${error.message}`);
              |             ^
          615 |     }
          616 |   }
          617 |

      at AlpacaService.getMarketClock (utils/alpacaService.js:614:13)
      at Object.getMarketClock (tests/unit/utils/alpacaService.test.js:777:34)
      at Object.toThrow (node_modules/expect/build/index.js:218:22)
      at Object.toThrow (tests/unit/utils/alpacaService.test.js:777:60)

  ● AlpacaService › createOrder › should create market order successfully

    Failed to create order: this.client.createOrder is not a function

      747 |     } catch (error) {
      748 |       console.error("Alpaca order creation error:", error.message);
    > 749 |       throw new Error(`Failed to create order: ${error.message}`);
          |             ^
      750 |     }
      751 |   }
      752 |

      at AlpacaService.createOrder (utils/alpacaService.js:749:13)
      at Object.createOrder (tests/unit/utils/alpacaService.test.js:798:42)

  ● AlpacaService › createOrder › should create limit order successfully

    Failed to create order: this.client.createOrder is not a function

      747 |     } catch (error) {
      748 |       console.error("Alpaca order creation error:", error.message);
    > 749 |       throw new Error(`Failed to create order: ${error.message}`);
          |             ^
      750 |     }
      751 |   }
      752 |

      at AlpacaService.createOrder (utils/alpacaService.js:749:13)
      at Object.createOrder (tests/unit/utils/alpacaService.test.js:831:42)

  ● AlpacaService › createOrder › should handle order creation failure

    expect(received).rejects.toThrow(expected)

    Expected substring: "Failed to create order: Insufficient funds"
    Received message:   "Failed to create order: this.client.createOrder is not a function"

          747 |     } catch (error) {
          748 |       console.error("Alpaca order creation error:", error.message);
        > 749 |       throw new Error(`Failed to create order: ${error.message}`);
              |             ^
          750 |     }
          751 |   }
          752 |

      at AlpacaService.createOrder (utils/alpacaService.js:749:13)
      at Object.createOrder (tests/unit/utils/alpacaService.test.js:873:23)
      at Object.toThrow (node_modules/expect/build/index.js:218:22)
      at Object.toThrow (tests/unit/utils/alpacaService.test.js:874:17)

  ● AlpacaService › createOrder › should handle undefined order_type in response

    Failed to create order: this.client.createOrder is not a function

      747 |     } catch (error) {
      748 |       console.error("Alpaca order creation error:", error.message);
    > 749 |       throw new Error(`Failed to create order: ${error.message}`);
          |             ^
      750 |     }
      751 |   }
      752 |

      at AlpacaService.createOrder (utils/alpacaService.js:749:13)
      at Object.createOrder (tests/unit/utils/alpacaService.test.js:881:42)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

  console.error
    Error: SyntaxError: Unexpected token 'j', "{"incomplete": json" is not valid JSON
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{"incomplete": json',
      type: 'entity.parse.failed'
    }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
  console.error
    Error: SyntaxError: Expected property name or '}' in JSON at position 1
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{invalid: "json"',
      type: 'entity.parse.failed'
    }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
  console.error
    Error: SyntaxError: Unexpected token '}', ..."omplete": }" is not valid JSON
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{"nested": {"incomplete": }',
      type: 'entity.parse.failed'
    }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
  console.error
    Error: SyntaxError: Unexpected non-whitespace character after JSON at position 18
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{"valid": "start"}{invalid continuation}',
      type: 'entity.parse.failed'
    }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
  console.error
    Error: SyntaxError: Unexpected non-whitespace character after JSON at position 27
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{"escaped": "quote\\"break"}malformed',
      type: 'entity.parse.failed'
    }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
  console.error
    Error: SyntaxError: Unexpected token 'n', "not json at all" is not valid JSON
        at JSON.parse (<anonymous>)
        at createStrictSyntaxError (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:169:10)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:86:15)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: 'not json at all',
      type: 'entity.parse.failed'
    }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
  console.error
    Error: SyntaxError: Unexpected non-whitespace character after JSON at position 2
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '[]malformed',
      type: 'entity.parse.failed'
    }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "GET /api/portfolio HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "GET /api/portfolio HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - user [29/Sep/2025:08:46:25 +0000] "GET /api/portfolio HTTP/1.1" 401 78 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "GET /api/health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "GET /api/portfolio/../../../etc/passwd HTTP/1.1" 404 139 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "GET /api/portfolio/%2e%2e%2f%2e%2e%2fetc%2fpasswd HTTP/1.1" 404 150 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "GET /api/portfolio/ HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "GET /api/portfolio
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "GET /api/portfolio/%3Cscript%3Ealert(%27xss%27)%3C/script%3E HTTP/1.1" 404 161 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "GET /api/calendar/earnings?param=value% HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "GET /api/calendar/earnings?param=value%ZZ HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "GET /api/calendar/earnings?param=value HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "GET /api/calendar/earnings?param=%3Cscript%3Ealert(%27xss%27)%3C/script%3E HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "GET /api/calendar/earnings?param=%27OR%201=1-- HTTP/1.1" 200 2178 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "GET /api/calendar/earnings?param
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 413 124 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 347 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 348 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 349 "-" "-"
  console.error
    Error: SyntaxError: Unexpected token 'n', "not json content" is not valid JSON
        at JSON.parse (<anonymous>)
        at createStrictSyntaxError (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:169:10)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:86:15)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: 'not json content',
      type: 'entity.parse.failed'
    }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 349 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 348 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 345 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 348 "-" "-"
  console.error
    Error: UnsupportedMediaTypeError: unsupported charset "ISO-8859-1"
        at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:130:12)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at logger (/home/stocks/algo/webapp/lambda/node_modules/morgan/index.js:144:5)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at cors (/home/stocks/algo/webapp/lambda/node_modules/cors/lib/index.js:188:7)
        at /home/stocks/algo/webapp/lambda/node_modules/cors/lib/index.js:224:17
        at originCallback (/home/stocks/algo/webapp/lambda/node_modules/cors/lib/index.js:214:15)
        at /home/stocks/algo/webapp/lambda/node_modules/cors/lib/index.js:219:13
        at optionsCallback (/home/stocks/algo/webapp/lambda/node_modules/cors/lib/index.js:199:9)
        at corsMiddleware (/home/stocks/algo/webapp/lambda/node_modules/cors/lib/index.js:204:7)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:537:6)
        at xXssProtectionMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:315:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at xPoweredByMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:308:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at xPermittedCrossDomainPoliciesMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:301:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at xFrameOptionsMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:285:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at xDownloadOptionsMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:265:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at xDnsPrefetchControlMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:258:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at xContentTypeOptionsMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:250:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at strictTransportSecurityMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:243:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at referrerPolicyMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:211:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at originAgentClusterMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:186:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at crossOriginResourcePolicyMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:179:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at crossOriginOpenerPolicyMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:163:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at contentSecurityPolicyMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:128:4)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at helmetMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:539:6)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
        at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
        at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
        at Server.emit (node:events:524:28)
        at parserOnIncoming (node:_http_server:1141:12)
        at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17) {
      charset: 'iso-8859-1',
      type: 'charset.unsupported'
    }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:130:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at logger (node_modules/morgan/index.js:144:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at cors (node_modules/cors/lib/index.js:188:7)
      at node_modules/cors/lib/index.js:224:17
      at originCallback (node_modules/cors/lib/index.js:214:15)
      at node_modules/cors/lib/index.js:219:13
      at optionsCallback (node_modules/cors/lib/index.js:199:9)
      at corsMiddleware (node_modules/cors/lib/index.js:204:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at internalNext (node_modules/helmet/index.cjs:537:6)
      at xXssProtectionMiddleware (node_modules/helmet/index.cjs:315:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPoweredByMiddleware (node_modules/helmet/index.cjs:308:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPermittedCrossDomainPoliciesMiddleware (node_modules/helmet/index.cjs:301:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xFrameOptionsMiddleware (node_modules/helmet/index.cjs:285:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDownloadOptionsMiddleware (node_modules/helmet/index.cjs:265:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDnsPrefetchControlMiddleware (node_modules/helmet/index.cjs:258:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xContentTypeOptionsMiddleware (node_modules/helmet/index.cjs:250:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at strictTransportSecurityMiddleware (node_modules/helmet/index.cjs:243:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at referrerPolicyMiddleware (node_modules/helmet/index.cjs:211:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at originAgentClusterMiddleware (node_modules/helmet/index.cjs:186:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginResourcePolicyMiddleware (node_modules/helmet/index.cjs:179:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginOpenerPolicyMiddleware (node_modules/helmet/index.cjs:163:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at contentSecurityPolicyMiddleware (node_modules/helmet/index.cjs:128:4)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at helmetMiddleware (node_modules/helmet/index.cjs:539:6)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 415 101 "-" "-"
  console.error
    Error: UnsupportedMediaTypeError: unsupported charset "WINDOWS-1252"
        at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:130:12)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at logger (/home/stocks/algo/webapp/lambda/node_modules/morgan/index.js:144:5)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at cors (/home/stocks/algo/webapp/lambda/node_modules/cors/lib/index.js:188:7)
        at /home/stocks/algo/webapp/lambda/node_modules/cors/lib/index.js:224:17
        at originCallback (/home/stocks/algo/webapp/lambda/node_modules/cors/lib/index.js:214:15)
        at /home/stocks/algo/webapp/lambda/node_modules/cors/lib/index.js:219:13
        at optionsCallback (/home/stocks/algo/webapp/lambda/node_modules/cors/lib/index.js:199:9)
        at corsMiddleware (/home/stocks/algo/webapp/lambda/node_modules/cors/lib/index.js:204:7)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:537:6)
        at xXssProtectionMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:315:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at xPoweredByMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:308:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at xPermittedCrossDomainPoliciesMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:301:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at xFrameOptionsMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:285:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at xDownloadOptionsMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:265:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at xDnsPrefetchControlMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:258:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at xContentTypeOptionsMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:250:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at strictTransportSecurityMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:243:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at referrerPolicyMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:211:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at originAgentClusterMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:186:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at crossOriginResourcePolicyMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:179:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at crossOriginOpenerPolicyMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:163:3)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at contentSecurityPolicyMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:128:4)
        at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
        at helmetMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:539:6)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
        at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
        at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
        at Server.emit (node:events:524:28)
        at parserOnIncoming (node:_http_server:1141:12)
        at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17) {
      charset: 'windows-1252',
      type: 'charset.unsupported'
    }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:130:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at logger (node_modules/morgan/index.js:144:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at cors (node_modules/cors/lib/index.js:188:7)
      at node_modules/cors/lib/index.js:224:17
      at originCallback (node_modules/cors/lib/index.js:214:15)
      at node_modules/cors/lib/index.js:219:13
      at optionsCallback (node_modules/cors/lib/index.js:199:9)
      at corsMiddleware (node_modules/cors/lib/index.js:204:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at internalNext (node_modules/helmet/index.cjs:537:6)
      at xXssProtectionMiddleware (node_modules/helmet/index.cjs:315:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPoweredByMiddleware (node_modules/helmet/index.cjs:308:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPermittedCrossDomainPoliciesMiddleware (node_modules/helmet/index.cjs:301:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xFrameOptionsMiddleware (node_modules/helmet/index.cjs:285:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDownloadOptionsMiddleware (node_modules/helmet/index.cjs:265:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDnsPrefetchControlMiddleware (node_modules/helmet/index.cjs:258:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xContentTypeOptionsMiddleware (node_modules/helmet/index.cjs:250:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at strictTransportSecurityMiddleware (node_modules/helmet/index.cjs:243:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at referrerPolicyMiddleware (node_modules/helmet/index.cjs:211:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at originAgentClusterMiddleware (node_modules/helmet/index.cjs:186:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginResourcePolicyMiddleware (node_modules/helmet/index.cjs:179:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginOpenerPolicyMiddleware (node_modules/helmet/index.cjs:163:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at contentSecurityPolicyMiddleware (node_modules/helmet/index.cjs:128:4)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at helmetMiddleware (node_modules/helmet/index.cjs:539:6)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 415 103 "-" "-"
  console.error
    Error: SyntaxError: Expected ',' or '}' after property value in JSON at position 30
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{"malicious": "<script>alert("xss")</script>"}',
      type: 'entity.parse.failed'
    }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
  console.error
    Error: SyntaxError: Unterminated string in JSON at position 20
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{"unclosed": "string',
      type: 'entity.parse.failed'
    }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
  console.error
    Error: SyntaxError: Unexpected token 'u', ..."nction": function() "... is not valid JSON
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{"function": function() {}}',
      type: 'entity.parse.failed'
    }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
  console.error
    Error: SyntaxError: Unexpected token 'u', ..."defined": undefined}" is not valid JSON
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{"undefined": undefined}',
      type: 'entity.parse.failed'
    }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
  console.error
    Error: SyntaxError: Unexpected end of JSON input
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{"invalid": ',
      type: 'entity.parse.failed'
    }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "GET /api/portfolio/../invalid HTTP/1.1" 404 130 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

  console.error
    Error: SyntaxError: Unexpected end of JSON input
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{"invalid": ',
      type: 'entity.parse.failed'
    }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
  console.log
    Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:522:11)

  console.log
    Starting health check with database...

      at log (routes/health.js:36:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "GET /api/health HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "GET /api/health HTTP/1.1" 200 497 "-" "-"
  console.log
    Market overview completed in 37ms using real loader tables

      at log (routes/market.js:739:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1587 "-" "-"
PASS tests/integration/errors/malformed-request.integration.test.js
  Malformed Request Integration
    JSON Parsing Error Scenarios
      ✓ should handle malformed JSON gracefully (73 ms)
      ✓ should handle JSON with dangerous characters (32 ms)
      ✓ should handle deeply nested JSON structures (8 ms)
    HTTP Header Malformation
      ✓ should handle malformed authorization headers (20 ms)
      ✓ should handle malformed content-type headers (16 ms)
      ✓ should handle custom header injection attempts (12 ms)
    URL and Path Malformation
      ✓ should handle malformed URLs and paths (26 ms)
      ✓ should handle malformed query parameters (52 ms)
    Request Body Malformation
      ✓ should handle oversized request bodies (10 ms)
      ✓ should handle binary data in JSON fields (15 ms)
      ✓ should handle mismatched content-type and body (15 ms)
    Character Encoding Issues
      ✓ should handle invalid UTF-8 sequences (14 ms)
      ✓ should handle different character encodings (19 ms)
    Security and Sanitization
      ✓ should sanitize error messages containing malformed input (24 ms)
      ✓ should not expose stack traces in malformed request errors (17 ms)
    Error Response Consistency
      ✓ should maintain consistent error format for all malformed requests (14 ms)
      ✓ should handle malformed requests without service disruption (55 ms)

PASS tests/unit/middleware/auth.test.js
  Authentication Middleware
    authenticateToken
      ✓ should authenticate valid JWT token (1 ms)
      ✓ should reject request without authorization header
      ✓ should reject malformed authorization header (3 ms)
      ✓ should reject expired JWT tokens (1 ms)
      ✓ should reject invalid JWT tokens (1 ms)
      ✓ should handle missing JWT secret
      ✓ should extract token from Authorization header correctly (1 ms)
      ✓ should handle case-insensitive Bearer prefix
    token validation edge cases
      ✓ should handle whitespace in token (1 ms)
      ✓ should reject empty token
      ✓ should handle authorization header with extra data
    user context setup
      ✓ should populate req.user with decoded token data (1 ms)
      ✓ should preserve existing req properties (3 ms)
    error handling
      ✓ should handle unexpected JWT errors (1 ms)
      ✓ should handle missing JWT library (10 ms)
    security considerations
      ✓ should not log sensitive token data (1 ms)
      ✓ should handle malicious token attempts (4 ms)
    dev-bypass-token handling
      ✓ should allow dev-bypass-token in test environment
  RequireRole Middleware
    ✓ should require authentication first
    ✓ should allow user with required role (1 ms)
    ✓ should allow user with required group
    ✓ should deny user without required role or group (1 ms)
    ✓ should handle multiple required roles
    ✓ should handle missing groups array
  OptionalAuth Middleware
    ✓ should continue without auth when no token provided
    ✓ should authenticate when valid token provided
    ✓ should continue when token validation fails (1 ms)
    ✓ should handle malformed authorization header gracefully
  RequireApiKey Middleware
    ✓ should require authentication first (1 ms)
    ✓ should require API key for provider (1 ms)
    ✓ should proceed when API key is available (1 ms)
    ✓ should handle API key service errors
  ValidateSession Middleware
    ✓ should continue when no user is present (1 ms)
    ✓ should set expiration warning for tokens expiring soon (1 ms)
    ✓ should warn about long-lived tokens
    ✓ should continue on validation errors
  RateLimitByUser Middleware
    ✓ should allow requests within rate limit (4 ms)
    ✓ should use IP address when user is not authenticated
    ✓ should enforce rate limit (1 ms)
    ✓ should clean up old requests from sliding window
  LogApiAccess Middleware
    ✓ should log request and response (1 ms)
    ✓ should handle anonymous users
    ✓ should preserve original res.end functionality (1 ms)
    ✓ should calculate response time accurately

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.error
    Database query error: {
      error: 'Database connection failed - no fallback available',
      query: "DELETE FROM portfolio_holdings WHERE user_id = 'test-user-123'",
      params: 'no parameters',
      code: 'DB_CONNECTION_FAILED'
    }

      416 |     return result;
      417 |   } catch (error) {
    > 418 |     console.error("Database query error:", {
          |             ^
      419 |       error: error.message,
      420 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      421 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:418:13)
      at setupTestData (tests/integration/utils/riskEngine.test.js:32:5)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  console.error
    Database connection error - no fallback available

      433 |       error.code === "ECONNABORTED"
      434 |     ) {
    > 435 |       console.error("Database connection error - no fallback available");
          |               ^
      436 |       error.message = `Database connection failed: ${error.message}`;
      437 |       throw error;
      438 |     }

      at error (utils/database.js:435:15)
      at setupTestData (tests/integration/utils/riskEngine.test.js:32:5)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.error
    Database query error: {
      error: 'Database connection failed - no fallback available',
      query: 'DELETE FROM user_portfolio WHERE user_id = $1',
      params: '1 parameters',
      code: 'DB_CONNECTION_FAILED'
    }

      416 |     return result;
      417 |   } catch (error) {
    > 418 |     console.error("Database query error:", {
          |             ^
      419 |       error: error.message,
      420 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      421 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:418:13)
      at cleanupTestData (tests/integration/utils/riskEngine.test.js:89:5)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:26:5)

  console.error
    Database connection error - no fallback available

      433 |       error.code === "ECONNABORTED"
      434 |     ) {
    > 435 |       console.error("Database connection error - no fallback available");
          |               ^
      436 |       error.message = `Database connection failed: ${error.message}`;
      437 |       throw error;
      438 |     }

      at error (utils/database.js:435:15)
      at cleanupTestData (tests/integration/utils/riskEngine.test.js:89:5)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:26:5)

FAIL tests/integration/utils/riskEngine.test.js
  ● Risk Engine Integration Tests › Portfolio Risk Assessment with Database Integration › should calculate portfolio-wide risk metrics from database

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at setupTestData (tests/integration/utils/riskEngine.test.js:32:5)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Portfolio Risk Assessment with Database Integration › should identify concentration risk

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at setupTestData (tests/integration/utils/riskEngine.test.js:32:5)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Portfolio Risk Assessment with Database Integration › should calculate sector allocation risk

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at setupTestData (tests/integration/utils/riskEngine.test.js:32:5)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Historical Volatility Analysis › should calculate volatility from historical price data

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at setupTestData (tests/integration/utils/riskEngine.test.js:32:5)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Historical Volatility Analysis › should handle insufficient data gracefully

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at setupTestData (tests/integration/utils/riskEngine.test.js:32:5)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Historical Volatility Analysis › should calculate beta relative to market

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at setupTestData (tests/integration/utils/riskEngine.test.js:32:5)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Value at Risk (VaR) Calculations › should calculate portfolio VaR using historical method

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at setupTestData (tests/integration/utils/riskEngine.test.js:32:5)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Value at Risk (VaR) Calculations › should calculate VaR for different confidence levels

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at setupTestData (tests/integration/utils/riskEngine.test.js:32:5)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Value at Risk (VaR) Calculations › should calculate parametric VaR

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at setupTestData (tests/integration/utils/riskEngine.test.js:32:5)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Position Sizing and Risk Management › should recommend optimal position sizes

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at setupTestData (tests/integration/utils/riskEngine.test.js:32:5)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Position Sizing and Risk Management › should validate position size against risk limits

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at setupTestData (tests/integration/utils/riskEngine.test.js:32:5)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Correlation and Covariance Analysis › should calculate correlation matrix for portfolio

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at setupTestData (tests/integration/utils/riskEngine.test.js:32:5)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Correlation and Covariance Analysis › should identify highly correlated positions

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at setupTestData (tests/integration/utils/riskEngine.test.js:32:5)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Stress Testing and Scenario Analysis › should perform market crash stress test

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at setupTestData (tests/integration/utils/riskEngine.test.js:32:5)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Stress Testing and Scenario Analysis › should perform custom scenario analysis

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at setupTestData (tests/integration/utils/riskEngine.test.js:32:5)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Risk Monitoring and Alerts › should monitor portfolio risk limits

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at setupTestData (tests/integration/utils/riskEngine.test.js:32:5)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Risk Monitoring and Alerts › should generate risk alerts for violations

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at setupTestData (tests/integration/utils/riskEngine.test.js:32:5)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Performance and Scalability › should handle large portfolios efficiently

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at setupTestData (tests/integration/utils/riskEngine.test.js:32:5)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Performance and Scalability › should maintain accuracy with concurrent calculations

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at setupTestData (tests/integration/utils/riskEngine.test.js:32:5)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Error Handling and Edge Cases › should handle empty portfolio gracefully

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at setupTestData (tests/integration/utils/riskEngine.test.js:32:5)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Error Handling and Edge Cases › should handle database connection errors

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at setupTestData (tests/integration/utils/riskEngine.test.js:32:5)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ● Risk Engine Integration Tests › Error Handling and Edge Cases › should handle invalid risk parameters

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at setupTestData (tests/integration/utils/riskEngine.test.js:32:5)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)


  ● Test suite failed to run

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at cleanupTestData (tests/integration/utils/riskEngine.test.js:89:5)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:26:5)

PASS tests/unit/services/aiStrategyGenerator.test.js
  AIStrategyGenerator Service
    Constructor and Initialization
      ✓ should initialize with default configuration (1 ms)
      ✓ should have predefined asset type patterns (1 ms)
      ✓ should have strategy templates (4 ms)
    generateCorrelationId
      ✓ should generate unique correlation IDs
    generateFromNaturalLanguage
      ✓ should generate strategy with AI when enabled (1 ms)
      ✓ should fallback to templates when AI fails (1 ms)
      ✓ should handle errors gracefully (1 ms)
    generateWithClaude
      ✓ should attempt Claude generation but fail due to configuration (3 ms)
      ✓ should handle Claude configuration errors
    generateWithTemplates
      ✓ should generate momentum strategy from template (2 ms)
      ✓ should generate mean reversion strategy from template
      ✓ should generate breakout strategy from template (1 ms)
      ✓ should default to momentum strategy for unrecognized prompts (1 ms)
      ✓ should handle empty symbols gracefully
    parseIntent
      ✓ should parse buy intent correctly (2 ms)
      ✓ should parse sell intent correctly (1 ms)
      ✓ should parse strategy types correctly
      ✓ should identify indicators from prompt (4 ms)
      ✓ should identify timeframes from prompt (1 ms)
      ✓ should default to unknown action for ambiguous prompts
    generateStrategyCode
      ✓ should generate code for momentum strategy (1 ms)
      ✓ should generate code for mean reversion strategy (1 ms)
      ✓ should generate code for breakout strategy
      ✓ should handle multiple symbols in generated code (1 ms)
      ✓ should include proper error handling in generated code (1 ms)
    validateStrategy
      ✓ should validate complete strategy successfully (1 ms)
      ✓ should identify missing required fields (1 ms)
      ✓ should validate code syntax
      ✓ should validate parameter types (1 ms)
      ✓ should provide validation warnings for potential issues (1 ms)
    Template Methods
      ✓ should return momentum template code (1 ms)
      ✓ should return mean reversion template code
      ✓ should return breakout template code (1 ms)
    AI Helper Methods
      ✓ should build system prompt
      ✓ should build user prompt
      ✓ should generate AI metadata (3 ms)
      ✓ should generate AI visual config (1 ms)
    Error Handling and Edge Cases
      ✓ should handle null or undefined prompts (1 ms)
      ✓ should handle very long prompts (1 ms)
      ✓ should handle special characters in prompts (1 ms)
      ✓ should handle empty symbols array
      ✓ should handle very large symbols array (1 ms)
      ✓ should handle invalid options gracefully (1 ms)
      ✓ should maintain correlation ID consistency
      ✓ should handle concurrent strategy generation requests (2 ms)
    Integration with Logger
      ✓ should log strategy generation attempts (1 ms)
      ✓ should log errors appropriately (1 ms)
      ✓ should log warnings for fallback scenarios

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.error
    Database query error: {
      error: 'Database connection failed - no fallback available',
      query: 'DELETE FROM performance_metrics WHERE test_run = true',
      params: 'no parameters',
      code: 'DB_CONNECTION_FAILED'
    }

      416 |     return result;
      417 |   } catch (error) {
    > 418 |     console.error("Database query error:", {
          |             ^
      419 |       error: error.message,
      420 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      421 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:418:13)
      at Object.<anonymous> (tests/integration/utils/performanceMonitor.test.js:193:7)

  console.error
    Database connection error - no fallback available

      433 |       error.code === "ECONNABORTED"
      434 |     ) {
    > 435 |       console.error("Database connection error - no fallback available");
          |               ^
      436 |       error.message = `Database connection failed: ${error.message}`;
      437 |       throw error;
      438 |     }

      at error (utils/database.js:435:15)
      at Object.<anonymous> (tests/integration/utils/performanceMonitor.test.js:193:7)

  console.log
    [2025-09-29T08:46:26.531Z] [WARN] [55f34f7b] Operation not found

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "operationId": "non_existent_timer"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.error
    Database query error: {
      error: 'Database connection failed - no fallback available',
      query: 'SELECT COUNT(*) FROM stock_symbols',
      params: 'no parameters',
      code: 'DB_CONNECTION_FAILED'
    }

      416 |     return result;
      417 |   } catch (error) {
    > 418 |     console.error("Database query error:", {
          |             ^
      419 |       error: error.message,
      420 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      421 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:418:13)
      at Object.<anonymous> (tests/integration/utils/performanceMonitor.test.js:559:7)

  console.error
    Database connection error - no fallback available

      433 |       error.code === "ECONNABORTED"
      434 |     ) {
    > 435 |       console.error("Database connection error - no fallback available");
          |               ^
      436 |       error.message = `Database connection failed: ${error.message}`;
      437 |       throw error;
      438 |     }

      at error (utils/database.js:435:15)
      at Object.<anonymous> (tests/integration/utils/performanceMonitor.test.js:559:7)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.error
    Database query error: {
      error: 'Database connection failed - no fallback available',
      query: 'DELETE FROM performance_metrics WHERE test_run = true',
      params: 'no parameters',
      code: 'DB_CONNECTION_FAILED'
    }

      416 |     return result;
      417 |   } catch (error) {
    > 418 |     console.error("Database query error:", {
          |             ^
      419 |       error: error.message,
      420 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      421 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:418:13)
      at Object.<anonymous> (tests/integration/utils/performanceMonitor.test.js:202:7)

  console.error
    Database connection error - no fallback available

      433 |       error.code === "ECONNABORTED"
      434 |     ) {
    > 435 |       console.error("Database connection error - no fallback available");
          |               ^
      436 |       error.message = `Database connection failed: ${error.message}`;
      437 |       throw error;
      438 |     }

      at error (utils/database.js:435:15)
      at Object.<anonymous> (tests/integration/utils/performanceMonitor.test.js:202:7)

FAIL tests/integration/utils/performanceMonitor.test.js
  Performance Monitor Integration Tests
    Performance Timing
      ✓ should measure operation duration accurately (1 ms)
      ✓ should handle multiple concurrent timers (2 ms)
      ✓ should handle invalid timer IDs gracefully (7 ms)
    Metrics Recording
      ✓ should record custom metrics
      ✓ should record metrics with different categories
      ✓ should handle metrics with metadata (1 ms)
    Performance Analytics
      ✓ should calculate average response times
      ✓ should handle empty metrics gracefully (1 ms)
      ✓ should calculate metrics for different time ranges
    System Health Monitoring
      ✓ should collect system health metrics (1 ms)
      ✓ should include database health in system metrics (1 ms)
      ✓ should detect system health status accurately (2 ms)
    Anomaly Detection
      ✓ should detect performance anomalies (1 ms)
      ✓ should handle normal data without false positives (1 ms)
      ✓ should detect trend-based anomalies
    Performance Reporting
      ✓ should generate comprehensive performance report (2 ms)
      ✓ should include performance recommendations (1 ms)
      ✓ should filter report by categories (1 ms)
    Performance Benchmarking
      ✕ should benchmark database operations (2 ms)
      ✓ should benchmark API response times (273 ms)
      ✓ should compare performance across time periods (1 ms)
    Error Handling and Edge Cases
      ✓ should handle database connection issues gracefully (1 ms)
      ✓ should handle invalid time ranges
      ✓ should handle very large metric values
      ✓ should handle concurrent metric recording (1 ms)

  ● Performance Monitor Integration Tests › Performance Benchmarking › should benchmark database operations

    Database connection failed: Database connection failed - no fallback available

      360 |       if (!result || !pool) {
      361 |         // Database is not available - throw error instead of fallback
    > 362 |         const error = new Error("Database connection failed - no fallback available");
          |                       ^
      363 |         error.code = "DB_CONNECTION_FAILED";
      364 |         throw error;
      365 |       }

      at query (utils/database.js:362:23)
      at Object.<anonymous> (tests/integration/utils/performanceMonitor.test.js:559:7)

  console.error
    No database configuration available. Application cannot function without database.

      251 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      252 |         );
    > 253 |         console.error(
          |                 ^
      254 |           "No database configuration available. Application cannot function without database."
      255 |         );
      256 |         dbInitialized = false;

      at error (utils/database.js:253:17)

  console.log
    Using database config from environment variables

      at log (utils/database.js:177:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/summary HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/summary HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/summary HTTP/1.1" 401 74 "-" "-"
  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/summary HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/holdings HTTP/1.1" 401 74 "-" "-"
  console.log
    💼 Holdings request received for user: dev-user-bypass

      at log (routes/dashboard.js:485:13)

  console.log
    🔍 Executing holdings queries...

      at log (routes/dashboard.js:552:13)

  console.log
    ✅ Holdings queries completed: 6 holdings found

      at log (routes/dashboard.js:558:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/holdings HTTP/1.1" 200 1509 "-" "-"
  console.log
    💼 Holdings request received for user: dev-user-bypass

      at log (routes/dashboard.js:485:13)

  console.log
    🔍 Executing holdings queries...

      at log (routes/dashboard.js:552:13)

  console.log
    ✅ Holdings queries completed: 6 holdings found

      at log (routes/dashboard.js:558:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/holdings HTTP/1.1" 200 1509 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/holdings HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/performance HTTP/1.1" 401 74 "-" "-"
  console.log
    📈 Performance request received for user: dev-user-bypass

      at log (routes/dashboard.js:628:13)

  console.log
    🔍 Executing performance queries...

      at log (routes/dashboard.js:699:13)

  console.log
    ✅ Performance queries completed: 0 data points

      at log (routes/dashboard.js:705:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/performance HTTP/1.1" 200 186 "-" "-"
  console.log
    📈 Performance request received for user: dev-user-bypass

      at log (routes/dashboard.js:628:13)

  console.log
    🔍 Executing performance queries...

      at log (routes/dashboard.js:699:13)

  console.log
    ✅ Performance queries completed: 0 data points

      at log (routes/dashboard.js:705:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/performance HTTP/1.1" 200 186 "-" "-"
  console.log
    📈 Performance request received for user: dev-user-bypass

      at log (routes/dashboard.js:628:13)

  console.log
    🔍 Executing performance queries...

      at log (routes/dashboard.js:699:13)

  console.log
    ✅ Performance queries completed: 0 data points

      at log (routes/dashboard.js:705:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/performance HTTP/1.1" 200 186 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/alerts HTTP/1.1" 401 74 "-" "-"
  console.log
    🚨 Alerts request received for user: dev-user-bypass

      at log (routes/dashboard.js:771:13)

  console.log
    🔍 Executing alerts queries...

      at log (routes/dashboard.js:806:13)

  console.log
    ✅ Alerts queries completed: 0 alerts found

      at log (routes/dashboard.js:812:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/alerts HTTP/1.1" 200 99 "-" "-"
  console.log
    🚨 Alerts request received for user: dev-user-bypass

      at log (routes/dashboard.js:771:13)

  console.log
    🔍 Executing alerts queries...

      at log (routes/dashboard.js:806:13)

  console.log
    ✅ Alerts queries completed: 0 alerts found

      at log (routes/dashboard.js:812:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/alerts HTTP/1.1" 200 99 "-" "-"
  console.log
    🚨 Alerts request received for user: dev-user-bypass

      at log (routes/dashboard.js:771:13)

  console.log
    🔍 Executing alerts queries...

      at log (routes/dashboard.js:806:13)

  console.log
    ✅ Alerts queries completed: 0 alerts found

      at log (routes/dashboard.js:812:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/alerts HTTP/1.1" 200 99 "-" "-"
  console.log
    📊 Market data request received

      at log (routes/dashboard.js:850:13)

  console.log
    🔍 Executing market data queries...

      at log (routes/dashboard.js:936:13)

  console.log
    ✅ Market data queries completed: 10 econ, 3 sectors, 3 internals

      at log (routes/dashboard.js:942:13)

  console.log
    📊 Market data prepared: 10 econ, 3 sectors, 3 internals

      at log (routes/dashboard.js:952:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/market-data HTTP/1.1" 200 2020 "-" "-"
  console.log
    📊 Market data request received

      at log (routes/dashboard.js:850:13)

  console.log
    🔍 Executing market data queries...

      at log (routes/dashboard.js:936:13)

  console.log
    ✅ Market data queries completed: 10 econ, 3 sectors, 3 internals

      at log (routes/dashboard.js:942:13)

  console.log
    📊 Market data prepared: 10 econ, 3 sectors, 3 internals

      at log (routes/dashboard.js:952:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/market-data HTTP/1.1" 200 2020 "-" "-"
  console.log
    📊 Market data request received

      at log (routes/dashboard.js:850:13)

  console.log
    🔍 Executing market data queries...

      at log (routes/dashboard.js:936:13)

  console.log
    ✅ Market data queries completed: 10 econ, 3 sectors, 3 internals

      at log (routes/dashboard.js:942:13)

  console.log
    📊 Market data prepared: 10 econ, 3 sectors, 3 internals

      at log (routes/dashboard.js:952:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/market-data HTTP/1.1" 200 2020 "-" "-"
  console.log
    📊 Market data request received

      at log (routes/dashboard.js:850:13)

  console.log
    🔍 Executing market data queries...

      at log (routes/dashboard.js:936:13)

  console.log
    ✅ Market data queries completed: 10 econ, 3 sectors, 3 internals

      at log (routes/dashboard.js:942:13)

  console.log
    📊 Market data prepared: 10 econ, 3 sectors, 3 internals

      at log (routes/dashboard.js:952:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/market-data HTTP/1.1" 200 2020 "-" "-"
  console.log
    🔧 Dashboard debug request received

      at log (routes/dashboard.js:1163:13)

  console.log
    🔧 Debug data collected: {
      timestamp: '2025-09-29T08:46:27.256Z',
      database_status: 'connected',
      table_counts: {
        price_daily: '232',
        earnings_history: '45',
        fear_greed_index: '15',
        portfolio_holdings: '25',
        portfolio_performance: '0',
        trading_alerts: '2',
        economic_data: '45',
        stocks: '6',
        technical_data_daily: '55'
      },
      data_counts: {
        price_count: '232',
        profile_count: '13',
        symbols_count: '13',
        stocks_count: '13'
      },
      database_connectivity: 'operational',
      sample_data: {
        recent_prices: { AAPL: 150.25, MSFT: 350.75, GOOGL: 2750.4 },
        last_update: '2025-09-29T08:46:27.267Z',
        status: 'active'
      }
    }

      at log (routes/dashboard.js:1232:13)

  console.log
    🔧 Debug data validation - table_counts type: object

      at log (routes/dashboard.js:1235:13)

  console.log
    🔧 Debug data validation - data_counts type: object

      at log (routes/dashboard.js:1236:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/debug HTTP/1.1" 200 588 "-" "-"
  console.log
    🔧 Dashboard debug request received

      at log (routes/dashboard.js:1163:13)

  console.log
    🔧 Debug data collected: {
      timestamp: '2025-09-29T08:46:27.273Z',
      database_status: 'connected',
      table_counts: {
        price_daily: '232',
        earnings_history: '45',
        fear_greed_index: '15',
        portfolio_holdings: '25',
        portfolio_performance: '0',
        trading_alerts: '2',
        economic_data: '45',
        stocks: '6',
        technical_data_daily: '55'
      },
      data_counts: {
        price_count: '232',
        profile_count: '13',
        symbols_count: '13',
        stocks_count: '13'
      },
      database_connectivity: 'operational',
      sample_data: {
        recent_prices: { AAPL: 150.25, MSFT: 350.75, GOOGL: 2750.4 },
        last_update: '2025-09-29T08:46:27.290Z',
        status: 'active'
      }
    }

      at log (routes/dashboard.js:1232:13)

  console.log
    🔧 Debug data validation - table_counts type: object

      at log (routes/dashboard.js:1235:13)

  console.log
    🔧 Debug data validation - data_counts type: object

      at log (routes/dashboard.js:1236:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/debug HTTP/1.1" 200 588 "-" "-"
  console.log
    🔧 Dashboard debug request received

      at log (routes/dashboard.js:1163:13)

  console.log
    🔧 Debug data collected: {
      timestamp: '2025-09-29T08:46:27.299Z',
      database_status: 'connected',
      table_counts: {
        price_daily: '232',
        earnings_history: '45',
        fear_greed_index: '15',
        portfolio_holdings: '25',
        portfolio_performance: '0',
        trading_alerts: '2',
        economic_data: '45',
        stocks: '6',
        technical_data_daily: '55'
      },
      data_counts: {
        price_count: '232',
        profile_count: '13',
        symbols_count: '13',
        stocks_count: '13'
      },
      database_connectivity: 'operational',
      sample_data: {
        recent_prices: { AAPL: 150.25, MSFT: 350.75, GOOGL: 2750.4 },
        last_update: '2025-09-29T08:46:27.311Z',
        status: 'active'
      }
    }

      at log (routes/dashboard.js:1232:13)

  console.log
    🔧 Debug data validation - table_counts type: object

      at log (routes/dashboard.js:1235:13)

  console.log
    🔧 Debug data validation - data_counts type: object

      at log (routes/dashboard.js:1236:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/debug HTTP/1.1" 200 588 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/overview HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/overview HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/overview HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/overview HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/summary HTTP/1.1" 401 74 "-" "-"
  console.log
    📊 Market data request received

      at log (routes/dashboard.js:850:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/overview HTTP/1.1" 401 74 "-" "-"
  console.log
    🔧 Dashboard debug request received

      at log (routes/dashboard.js:1163:13)

  console.log
    🔍 Executing market data queries...

      at log (routes/dashboard.js:936:13)

  console.log
    🔧 Debug data collected: {
      timestamp: '2025-09-29T08:46:27.351Z',
      database_status: 'connected',
      table_counts: {
        price_daily: '232',
        earnings_history: '45',
        fear_greed_index: '15',
        portfolio_holdings: '25',
        portfolio_performance: '0',
        trading_alerts: '2',
        economic_data: '45',
        stocks: '6',
        technical_data_daily: '55'
      },
      data_counts: {
        price_count: '232',
        profile_count: '13',
        symbols_count: '13',
        stocks_count: '13'
      },
      database_connectivity: 'operational',
      sample_data: {
        recent_prices: { AAPL: 150.25, MSFT: 350.75, GOOGL: 2750.4 },
        last_update: '2025-09-29T08:46:27.370Z',
        status: 'active'
      }
    }

      at log (routes/dashboard.js:1232:13)

  console.log
    🔧 Debug data validation - table_counts type: object

      at log (routes/dashboard.js:1235:13)

  console.log
    🔧 Debug data validation - data_counts type: object

      at log (routes/dashboard.js:1236:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/debug HTTP/1.1" 200 588 "-" "-"
  console.log
    ✅ Market data queries completed: 10 econ, 3 sectors, 3 internals

      at log (routes/dashboard.js:942:13)

  console.log
    📊 Market data prepared: 10 econ, 3 sectors, 3 internals

      at log (routes/dashboard.js:952:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/market-data HTTP/1.1" 200 2020 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/summary HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/holdings HTTP/1.1" 401 78 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/holdings HTTP/1.1" 401 78 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/holdings HTTP/1.1" 401 78 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/holdings HTTP/1.1" 401 64 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/holdings HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/summary HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/summary HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/summary?filter=%27%3B%20DROP%20TABLE%20market_data%3B%20-- HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/summary HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/summary HTTP/1.1" 401 74 "-" "-"
  console.log
    📊 Market data request received

      at log (routes/dashboard.js:850:13)

  console.log
    🔍 Executing market data queries...

      at log (routes/dashboard.js:936:13)

  console.log
    ✅ Market data queries completed: 10 econ, 3 sectors, 3 internals

      at log (routes/dashboard.js:942:13)

  console.log
    📊 Market data prepared: 10 econ, 3 sectors, 3 internals

      at log (routes/dashboard.js:952:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/market-data HTTP/1.1" 200 2020 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/overview HTTP/1.1" 401 74 "-" "-"
  console.log
    🔧 Dashboard debug request received

      at log (routes/dashboard.js:1163:13)

  console.log
    🔧 Debug data collected: {
      timestamp: '2025-09-29T08:46:27.458Z',
      database_status: 'connected',
      table_counts: {
        price_daily: '232',
        earnings_history: '45',
        fear_greed_index: '15',
        portfolio_holdings: '25',
        portfolio_performance: '0',
        trading_alerts: '2',
        economic_data: '45',
        stocks: '6',
        technical_data_daily: '55'
      },
      data_counts: {
        price_count: '232',
        profile_count: '13',
        symbols_count: '13',
        stocks_count: '13'
      },
      database_connectivity: 'operational',
      sample_data: {
        recent_prices: { AAPL: 150.25, MSFT: 350.75, GOOGL: 2750.4 },
        last_update: '2025-09-29T08:46:27.469Z',
        status: 'active'
      }
    }

      at log (routes/dashboard.js:1232:13)

  console.log
    🔧 Debug data validation - table_counts type: object

      at log (routes/dashboard.js:1235:13)

  console.log
    🔧 Debug data validation - data_counts type: object

      at log (routes/dashboard.js:1236:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/debug HTTP/1.1" 200 588 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/holdings HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/holdings HTTP/1.1" 401 64 "-" "-"
  console.log
    💼 Holdings request received for user: dev-user-bypass

      at log (routes/dashboard.js:485:13)

  console.log
    🔍 Executing holdings queries...

      at log (routes/dashboard.js:552:13)

  console.log
    ✅ Holdings queries completed: 6 holdings found

      at log (routes/dashboard.js:558:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/holdings HTTP/1.1" 200 1509 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/performance HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/performance HTTP/1.1" 401 64 "-" "-"
  console.log
    📈 Performance request received for user: dev-user-bypass

      at log (routes/dashboard.js:628:13)

  console.log
    🔍 Executing performance queries...

      at log (routes/dashboard.js:699:13)

  console.log
    ✅ Performance queries completed: 0 data points

      at log (routes/dashboard.js:705:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/performance HTTP/1.1" 200 186 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/alerts HTTP/1.1" 401 74 "-" "-"
::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/alerts HTTP/1.1" 401 64 "-" "-"
  console.log
    🚨 Alerts request received for user: dev-user-bypass

      at log (routes/dashboard.js:771:13)

  console.log
    🔍 Executing alerts queries...

      at log (routes/dashboard.js:806:13)

  console.log
    ✅ Alerts queries completed: 0 alerts found

      at log (routes/dashboard.js:812:13)

::ffff:127.0.0.1 - - [29/Sep/2025:08:46:27 +0000] "GET /api/dashboard/alerts HTTP/1.1" 200 99 "-" "-"
FAIL tests/integration/routes/dashboard.integration.test.js
  Dashboard Routes Integration Tests
    GET /api/dashboard (Dashboard Root)
      ✓ should return dashboard endpoints and operational status (16 ms)
      ✓ should handle high-frequency requests without degradation (26 ms)
    GET /api/dashboard/summary (Dashboard Summary)
      ✕ should return comprehensive dashboard summary data (6 ms)
      ✓ should validate market overview data structure (7 ms)
      ✓ should validate sector performance data (4 ms)
      ✕ should handle database connectivity issues gracefully (6 ms)
    GET /api/dashboard/holdings (Portfolio Holdings)
      ✓ should require authentication (7 ms)
      ✓ should return holdings data with valid authentication (21 ms)
      ✓ should validate holdings data structure (14 ms)
      ✓ should handle invalid authentication tokens (10 ms)
    GET /api/dashboard/performance (Portfolio Performance)
      ✓ should require authentication for performance data (7 ms)
      ✓ should return performance data with valid authentication (13 ms)
      ✓ should validate performance metrics structure (11 ms)
      ✓ should validate performance metrics calculations (10 ms)
    GET /api/dashboard/alerts (Trading Alerts)
      ✓ should require authentication for alerts (4 ms)
      ✓ should return alerts data with authentication (13 ms)
      ✓ should validate alert data structure (13 ms)
      ✓ should handle alert summary aggregation (11 ms)
    GET /api/dashboard/market-data (Market Data)
      ✓ should return comprehensive market data (17 ms)
      ✓ should validate economic indicators structure (13 ms)
      ✓ should validate sector rotation data (11 ms)
      ✓ should validate market internals data (12 ms)
    GET /api/dashboard/debug (Debug Endpoint)
      ✓ should return debug information about database connectivity (18 ms)
      ✓ should validate table count information (23 ms)
      ✓ should validate database connection status (21 ms)
    GET /api/dashboard/overview (Market Overview)
      ✕ should return market overview data (8 ms)
      ✓ should validate market status information (4 ms)
      ✓ should validate top movers structure (4 ms)
      ✓ should handle empty market data gracefully (6 ms)
    Performance and Edge Cases
      ✕ should handle concurrent requests to dashboard endpoints (42 ms)
      ✕ should maintain response time consistency (6 ms)
      ✓ should handle malformed authentication headers (19 ms)
      ✕ should handle database connection failures gracefully (6 ms)
      ✓ should validate numeric data integrity (4 ms)
      ✕ should handle SQL injection attempts safely (4 ms)
      ✕ should handle memory pressure with large data requests (5 ms)
      ✓ should validate response content types (48 ms)
      ✓ should handle authentication edge cases (59 ms)

  ● Dashboard Routes Integration Tests › GET /api/dashboard/summary (Dashboard Summary) › should return comprehensive dashboard summary data

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      58 |       const response = await request(app).get("/api/dashboard/summary");
      59 |
    > 60 |       expect(response.status).toBe(200);
         |                               ^
      61 |
      62 |       if (response.status === 200) {
      63 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:60:31)

  ● Dashboard Routes Integration Tests › GET /api/dashboard/summary (Dashboard Summary) › should handle database connectivity issues gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      117 |       const response = await request(app).get("/api/dashboard/summary");
      118 |
    > 119 |       expect(response.status).toBe(200);
          |                               ^
      120 |
      121 |       if (response.status >= 500) {
      122 |         expect(response.body).toHaveProperty("error");

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:119:31)

  ● Dashboard Routes Integration Tests › GET /api/dashboard/overview (Market Overview) › should return market overview data

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      425 |       const response = await request(app).get("/api/dashboard/overview");
      426 |
    > 427 |       expect(response.status).toBe(200);
          |                               ^
      428 |
      429 |       if (response.status === 200) {
      430 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:427:31)

  ● Dashboard Routes Integration Tests › Performance and Edge Cases › should handle concurrent requests to dashboard endpoints

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      509 |
      510 |       responses.forEach((response) => {
    > 511 |         expect(response.status).toBe(200);
          |                                 ^
      512 |       });
      513 |     });
      514 |

      at toBe (tests/integration/routes/dashboard.integration.test.js:511:33)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/routes/dashboard.integration.test.js:510:17)

  ● Dashboard Routes Integration Tests › Performance and Edge Cases › should maintain response time consistency

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      518 |       const responseTime = Date.now() - startTime;
      519 |
    > 520 |       expect(response.status).toBe(200);
          |                               ^
      521 |       expect(responseTime).toBeLessThan(15000);
      522 |     });
      523 |

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:520:31)

  ● Dashboard Routes Integration Tests › Performance and Edge Cases › should handle database connection failures gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      543 |       const response = await request(app).get("/api/dashboard/summary");
      544 |
    > 545 |       expect(response.status).toBe(200);
          |                               ^
      546 |
      547 |       if (response.status >= 500) {
      548 |         expect(response.body).toHaveProperty("error");

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:545:31)

  ● Dashboard Routes Integration Tests › Performance and Edge Cases › should handle SQL injection attempts safely

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      585 |         );
      586 |
    > 587 |         expect([200, 400].includes(response.status)).toBe(true);
          |                                                      ^
      588 |       }
      589 |     });
      590 |

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:587:54)

  ● Dashboard Routes Integration Tests › Performance and Edge Cases › should handle memory pressure with large data requests

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      592 |       const response = await request(app).get("/api/dashboard/summary");
      593 |
    > 594 |       expect([200, 413, 500, 503].includes(response.status)).toBe(true);
          |                                                              ^
      595 |     });
      596 |
      597 |     test("should validate response content types", async () => {

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:594:62)

