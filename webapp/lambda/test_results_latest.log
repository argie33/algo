
> financial-dashboard-lambda@1.0.0 test
> jest --coverage --coverageReporters=text --coverageReporters=html --coverageReporters=lcov

üîß Setting up database tables to match loader structure...
Using database config from environment variables
Database config loaded from environment: localhost:5432/stocks
‚úÖ Database connection pool initialized successfully
‚úÖ Database tables created matching loader structure
üîß Global test setup complete
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:36 +0000] "GET /api/dashboard HTTP/1.1" 200 436 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:36 +0000] "GET /api/dashboard HTTP/1.1" 200 436 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:36 +0000] "GET /api/dashboard HTTP/1.1" 200 436 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:36 +0000] "GET /api/dashboard HTTP/1.1" 200 436 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:36 +0000] "GET /api/dashboard HTTP/1.1" 200 436 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:36 +0000] "GET /api/dashboard HTTP/1.1" 200 436 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:36 +0000] "GET /api/dashboard/summary HTTP/1.1" 200 5893 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:36 +0000] "GET /api/dashboard/summary HTTP/1.1" 200 5893 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:36 +0000] "GET /api/dashboard/summary HTTP/1.1" 200 5893 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:36 +0000] "GET /api/dashboard/summary HTTP/1.1" 200 5893 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:36 +0000] "GET /api/dashboard/holdings HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:36 +0000] "GET /api/dashboard/holdings HTTP/1.1" 404 108 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:36 +0000] "GET /api/dashboard/holdings HTTP/1.1" 404 108 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:36 +0000] "GET /api/dashboard/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:36 +0000] "GET /api/dashboard/performance HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:36 +0000] "GET /api/dashboard/performance HTTP/1.1" 404 109 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:36 +0000] "GET /api/dashboard/performance HTTP/1.1" 404 109 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:36 +0000] "GET /api/dashboard/performance HTTP/1.1" 404 109 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:36 +0000] "GET /api/dashboard/alerts HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:36 +0000] "GET /api/dashboard/alerts HTTP/1.1" 200 99 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:36 +0000] "GET /api/dashboard/alerts HTTP/1.1" 200 99 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:36 +0000] "GET /api/dashboard/alerts HTTP/1.1" 200 99 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:36 +0000] "GET /api/dashboard/market-data HTTP/1.1" 200 321 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:37 +0000] "GET /api/dashboard/market-data HTTP/1.1" 200 321 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:37 +0000] "GET /api/dashboard/market-data HTTP/1.1" 200 321 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:37 +0000] "GET /api/dashboard/market-data HTTP/1.1" 200 321 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:37 +0000] "GET /api/dashboard/debug HTTP/1.1" 200 830 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:37 +0000] "GET /api/dashboard/debug HTTP/1.1" 200 830 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:37 +0000] "GET /api/dashboard/debug HTTP/1.1" 200 830 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:37 +0000] "GET /api/dashboard/overview HTTP/1.1" 200 761 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:37 +0000] "GET /api/dashboard/overview HTTP/1.1" 200 761 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:37 +0000] "GET /api/dashboard/overview HTTP/1.1" 200 761 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:38 +0000] "GET /api/dashboard/overview HTTP/1.1" 200 761 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:38 +0000] "GET /api/dashboard HTTP/1.1" 200 436 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:38 +0000] "GET /api/dashboard/summary HTTP/1.1" 200 5893 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:38 +0000] "GET /api/dashboard/debug HTTP/1.1" 200 830 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:38 +0000] "GET /api/dashboard/overview HTTP/1.1" 200 761 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:38 +0000] "GET /api/dashboard/market-data HTTP/1.1" 200 321 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:38 +0000] "GET /api/dashboard/summary HTTP/1.1" 200 5893 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:38 +0000] "GET /api/dashboard/holdings HTTP/1.1" 401 528 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:38 +0000] "GET /api/dashboard/holdings HTTP/1.1" 401 528 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:38 +0000] "GET /api/dashboard/holdings HTTP/1.1" 401 528 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:38 +0000] "GET /api/dashboard/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:38 +0000] "GET /api/dashboard/holdings HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:38 +0000] "GET /api/dashboard/summary HTTP/1.1" 200 5893 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:38 +0000] "GET /api/dashboard/summary HTTP/1.1" 200 5893 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:38 +0000] "GET /api/dashboard/summary?filter=%27%3B%20DROP%20TABLE%20market_data%3B%20-- HTTP/1.1" 200 5893 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:38 +0000] "GET /api/dashboard/summary?filter=1%27%20OR%20%271%27%3D%271 HTTP/1.1" 200 5893 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:38 +0000] "GET /api/dashboard/summary?filter=UNION%20SELECT%20*%20FROM%20users HTTP/1.1" 200 5893 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:39 +0000] "GET /api/dashboard/summary?filter=%3Cscript%3Ealert(%27xss%27)%3C%2Fscript%3E HTTP/1.1" 200 5893 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:39 +0000] "GET /api/dashboard/summary?filter=..%2F..%2F..%2Fetc%2Fpasswd HTTP/1.1" 200 5893 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:39 +0000] "GET /api/dashboard/summary HTTP/1.1" 200 5893 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:39 +0000] "GET /api/dashboard HTTP/1.1" 200 436 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:39 +0000] "GET /api/dashboard/summary HTTP/1.1" 200 5893 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:39 +0000] "GET /api/dashboard/market-data HTTP/1.1" 200 321 "-" "-"
FAIL tests/integration/routes/dashboard.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üìä Dashboard summary request received

      at log (routes/dashboard.js:48:13)

    console.log
      üîç Executing comprehensive dashboard queries with timeout protection...

      at log (routes/dashboard.js:217:13)

    console.log
      ‚úÖ Dashboard queries completed: 5 market, 10 gainers, 10 losers, 0 sectors, 6 earnings, 0 sentiment, 10 volume, 1 breadth

      at log (routes/dashboard.js:280:13)

    console.log
      üìä Dashboard summary request received

      at log (routes/dashboard.js:48:13)

    console.log
      üîç Executing comprehensive dashboard queries with timeout protection...

      at log (routes/dashboard.js:217:13)

    console.log
      ‚úÖ Dashboard queries completed: 5 market, 10 gainers, 10 losers, 0 sectors, 6 earnings, 0 sentiment, 10 volume, 1 breadth

      at log (routes/dashboard.js:280:13)

    console.log
      üìä Dashboard summary request received

      at log (routes/dashboard.js:48:13)

    console.log
      üîç Executing comprehensive dashboard queries with timeout protection...

      at log (routes/dashboard.js:217:13)

    console.log
      ‚úÖ Dashboard queries completed: 5 market, 10 gainers, 10 losers, 0 sectors, 6 earnings, 0 sentiment, 10 volume, 1 breadth

      at log (routes/dashboard.js:280:13)

    console.log
      üìä Dashboard summary request received

      at log (routes/dashboard.js:48:13)

    console.log
      üîç Executing comprehensive dashboard queries with timeout protection...

      at log (routes/dashboard.js:217:13)

    console.log
      ‚úÖ Dashboard queries completed: 5 market, 10 gainers, 10 losers, 0 sectors, 6 earnings, 0 sentiment, 10 volume, 1 breadth

      at log (routes/dashboard.js:280:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üíº Holdings request received for user: dev-user-bypass

      at log (routes/dashboard.js:379:13)

    console.log
      üîç Executing holdings queries...

      at log (routes/dashboard.js:419:13)

    console.log
      ‚úÖ Holdings queries completed: 0 holdings found

      at log (routes/dashboard.js:425:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üíº Holdings request received for user: dev-user-bypass

      at log (routes/dashboard.js:379:13)

    console.log
      üîç Executing holdings queries...

      at log (routes/dashboard.js:419:13)

    console.log
      ‚úÖ Holdings queries completed: 0 holdings found

      at log (routes/dashboard.js:425:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìà Performance request received for user: dev-user-bypass

      at log (routes/dashboard.js:500:13)

    console.log
      üîç Executing performance queries...

      at log (routes/dashboard.js:532:13)

    console.log
      ‚úÖ Performance queries completed: 0 data points

      at log (routes/dashboard.js:538:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìà Performance request received for user: dev-user-bypass

      at log (routes/dashboard.js:500:13)

    console.log
      üîç Executing performance queries...

      at log (routes/dashboard.js:532:13)

    console.log
      ‚úÖ Performance queries completed: 0 data points

      at log (routes/dashboard.js:538:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìà Performance request received for user: dev-user-bypass

      at log (routes/dashboard.js:500:13)

    console.log
      üîç Executing performance queries...

      at log (routes/dashboard.js:532:13)

    console.log
      ‚úÖ Performance queries completed: 0 data points

      at log (routes/dashboard.js:538:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üö® Alerts request received for user: dev-user-bypass

      at log (routes/dashboard.js:611:13)

    console.log
      üîç Executing alerts queries...

      at log (routes/dashboard.js:646:13)

    console.log
      ‚úÖ Alerts queries completed: 0 alerts found

      at log (routes/dashboard.js:652:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üö® Alerts request received for user: dev-user-bypass

      at log (routes/dashboard.js:611:13)

    console.log
      üîç Executing alerts queries...

      at log (routes/dashboard.js:646:13)

    console.log
      ‚úÖ Alerts queries completed: 0 alerts found

      at log (routes/dashboard.js:652:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üö® Alerts request received for user: dev-user-bypass

      at log (routes/dashboard.js:611:13)

    console.log
      üîç Executing alerts queries...

      at log (routes/dashboard.js:646:13)

    console.log
      ‚úÖ Alerts queries completed: 0 alerts found

      at log (routes/dashboard.js:652:13)

    console.log
      üìä Market data request received

      at log (routes/dashboard.js:690:13)

    console.log
      üîç Executing market data queries...

      at log (routes/dashboard.js:776:13)

    console.log
      ‚úÖ Market data queries completed: 0 econ, 0 sectors, 3 internals

      at log (routes/dashboard.js:782:13)

    console.log
      üìä Market data prepared: 0 econ, 0 sectors, 3 internals

      at log (routes/dashboard.js:792:13)

    console.log
      üìä Market data request received

      at log (routes/dashboard.js:690:13)

    console.log
      üîç Executing market data queries...

      at log (routes/dashboard.js:776:13)

    console.log
      ‚úÖ Market data queries completed: 0 econ, 0 sectors, 3 internals

      at log (routes/dashboard.js:782:13)

    console.log
      üìä Market data prepared: 0 econ, 0 sectors, 3 internals

      at log (routes/dashboard.js:792:13)

    console.log
      üìä Market data request received

      at log (routes/dashboard.js:690:13)

    console.log
      üîç Executing market data queries...

      at log (routes/dashboard.js:776:13)

    console.log
      ‚úÖ Market data queries completed: 0 econ, 0 sectors, 3 internals

      at log (routes/dashboard.js:782:13)

    console.log
      üìä Market data prepared: 0 econ, 0 sectors, 3 internals

      at log (routes/dashboard.js:792:13)

    console.log
      üìä Market data request received

      at log (routes/dashboard.js:690:13)

    console.log
      üîç Executing market data queries...

      at log (routes/dashboard.js:776:13)

    console.log
      ‚úÖ Market data queries completed: 0 econ, 0 sectors, 3 internals

      at log (routes/dashboard.js:782:13)

    console.log
      üìä Market data prepared: 0 econ, 0 sectors, 3 internals

      at log (routes/dashboard.js:792:13)

    console.log
      üîß Dashboard debug request received

      at log (routes/dashboard.js:1003:13)

    console.log
      üîß Debug data collected: {
        timestamp: '2025-09-23T16:31:37.488Z',
        database_status: 'connected',
        table_counts: {
          price_daily: '18364',
          earnings_history: '6',
          fear_greed_index: '15',
          portfolio_holdings: '0',
          portfolio_performance: '0',
          trading_alerts: '2',
          economic_data: '5',
          stocks: '71',
          technical_data_daily: '12'
        },
        data_counts: {
          price_count: '18364',
          profile_count: '7',
          symbols_count: '4146',
          stocks_count: '7'
        },
        sample_data: {
          latest_prices: [ [Object], [Object], [Object] ],
          sample_alerts: [ [Object], [Object] ],
          database_connectivity: 'operational'
        }
      }

      at log (routes/dashboard.js:1074:13)

    console.log
      üîß Debug data validation - table_counts type: object

      at log (routes/dashboard.js:1077:13)

    console.log
      üîß Debug data validation - data_counts type: object

      at log (routes/dashboard.js:1078:13)

    console.log
      üîß Dashboard debug request received

      at log (routes/dashboard.js:1003:13)

    console.log
      üîß Debug data collected: {
        timestamp: '2025-09-23T16:31:37.497Z',
        database_status: 'connected',
        table_counts: {
          price_daily: '18364',
          earnings_history: '6',
          fear_greed_index: '15',
          portfolio_holdings: '0',
          portfolio_performance: '0',
          trading_alerts: '2',
          economic_data: '5',
          stocks: '71',
          technical_data_daily: '12'
        },
        data_counts: {
          price_count: '18364',
          profile_count: '7',
          symbols_count: '4146',
          stocks_count: '7'
        },
        sample_data: {
          latest_prices: [ [Object], [Object], [Object] ],
          sample_alerts: [ [Object], [Object] ],
          database_connectivity: 'operational'
        }
      }

      at log (routes/dashboard.js:1074:13)

    console.log
      üîß Debug data validation - table_counts type: object

      at log (routes/dashboard.js:1077:13)

    console.log
      üîß Debug data validation - data_counts type: object

      at log (routes/dashboard.js:1078:13)

    console.log
      üîß Dashboard debug request received

      at log (routes/dashboard.js:1003:13)

    console.log
      üîß Debug data collected: {
        timestamp: '2025-09-23T16:31:37.507Z',
        database_status: 'connected',
        table_counts: {
          price_daily: '18364',
          earnings_history: '6',
          fear_greed_index: '15',
          portfolio_holdings: '0',
          portfolio_performance: '0',
          trading_alerts: '2',
          economic_data: '5',
          stocks: '71',
          technical_data_daily: '12'
        },
        data_counts: {
          price_count: '18364',
          profile_count: '7',
          symbols_count: '4146',
          stocks_count: '7'
        },
        sample_data: {
          latest_prices: [ [Object], [Object], [Object] ],
          sample_alerts: [ [Object], [Object] ],
          database_connectivity: 'operational'
        }
      }

      at log (routes/dashboard.js:1074:13)

    console.log
      üîß Debug data validation - table_counts type: object

      at log (routes/dashboard.js:1077:13)

    console.log
      üîß Debug data validation - data_counts type: object

      at log (routes/dashboard.js:1078:13)

    console.log
      üìä Dashboard overview requested

      at log (routes/dashboard.js:839:13)

    console.log
      üîç Executing overview queries...

      at log (routes/dashboard.js:922:13)

    console.log
      üìä Overview data prepared: 0 key metrics, 6 movers, 0 sectors

      at log (routes/dashboard.js:934:13)

    console.log
      üìä Dashboard overview requested

      at log (routes/dashboard.js:839:13)

    console.log
      üîç Executing overview queries...

      at log (routes/dashboard.js:922:13)

    console.log
      üìä Overview data prepared: 0 key metrics, 6 movers, 0 sectors

      at log (routes/dashboard.js:934:13)

    console.log
      üìä Dashboard overview requested

      at log (routes/dashboard.js:839:13)

    console.log
      üîç Executing overview queries...

      at log (routes/dashboard.js:922:13)

    console.log
      üìä Overview data prepared: 0 key metrics, 6 movers, 0 sectors

      at log (routes/dashboard.js:934:13)

    console.log
      üìä Dashboard overview requested

      at log (routes/dashboard.js:839:13)

    console.log
      üîç Executing overview queries...

      at log (routes/dashboard.js:922:13)

    console.log
      üìä Overview data prepared: 0 key metrics, 6 movers, 0 sectors

      at log (routes/dashboard.js:934:13)

    console.log
      üìä Dashboard summary request received

      at log (routes/dashboard.js:48:13)

    console.log
      üîç Executing comprehensive dashboard queries with timeout protection...

      at log (routes/dashboard.js:217:13)

    console.log
      üìä Market data request received

      at log (routes/dashboard.js:690:13)

    console.log
      üìä Dashboard overview requested

      at log (routes/dashboard.js:839:13)

    console.log
      üîç Executing overview queries...

      at log (routes/dashboard.js:922:13)

    console.log
      üîß Dashboard debug request received

      at log (routes/dashboard.js:1003:13)

    console.log
      üîç Executing market data queries...

      at log (routes/dashboard.js:776:13)

    console.log
      ‚úÖ Dashboard queries completed: 5 market, 10 gainers, 10 losers, 0 sectors, 6 earnings, 0 sentiment, 10 volume, 1 breadth

      at log (routes/dashboard.js:280:13)

    console.log
      üîß Debug data collected: {
        timestamp: '2025-09-23T16:31:38.119Z',
        database_status: 'connected',
        table_counts: {
          price_daily: '18364',
          earnings_history: '6',
          fear_greed_index: '15',
          portfolio_holdings: '0',
          portfolio_performance: '0',
          trading_alerts: '2',
          economic_data: '5',
          stocks: '71',
          technical_data_daily: '12'
        },
        data_counts: {
          price_count: '18364',
          profile_count: '7',
          symbols_count: '4146',
          stocks_count: '7'
        },
        sample_data: {
          latest_prices: [ [Object], [Object], [Object] ],
          sample_alerts: [ [Object], [Object] ],
          database_connectivity: 'operational'
        }
      }

      at log (routes/dashboard.js:1074:13)

    console.log
      üîß Debug data validation - table_counts type: object

      at log (routes/dashboard.js:1077:13)

    console.log
      üîß Debug data validation - data_counts type: object

      at log (routes/dashboard.js:1078:13)

    console.log
      üìä Overview data prepared: 0 key metrics, 6 movers, 0 sectors

      at log (routes/dashboard.js:934:13)

    console.log
      ‚úÖ Market data queries completed: 0 econ, 0 sectors, 3 internals

      at log (routes/dashboard.js:782:13)

    console.log
      üìä Market data prepared: 0 econ, 0 sectors, 3 internals

      at log (routes/dashboard.js:792:13)

    console.log
      üìä Dashboard summary request received

      at log (routes/dashboard.js:48:13)

    console.log
      üîç Executing comprehensive dashboard queries with timeout protection...

      at log (routes/dashboard.js:217:13)

    console.log
      ‚úÖ Dashboard queries completed: 5 market, 10 gainers, 10 losers, 0 sectors, 6 earnings, 0 sentiment, 10 volume, 1 breadth

      at log (routes/dashboard.js:280:13)

    console.log
      üìä Dashboard summary request received

      at log (routes/dashboard.js:48:13)

    console.log
      üîç Executing comprehensive dashboard queries with timeout protection...

      at log (routes/dashboard.js:217:13)

    console.log
      ‚úÖ Dashboard queries completed: 5 market, 10 gainers, 10 losers, 0 sectors, 6 earnings, 0 sentiment, 10 volume, 1 breadth

      at log (routes/dashboard.js:280:13)

    console.log
      üìä Dashboard summary request received

      at log (routes/dashboard.js:48:13)

    console.log
      üîç Executing comprehensive dashboard queries with timeout protection...

      at log (routes/dashboard.js:217:13)

    console.log
      ‚úÖ Dashboard queries completed: 5 market, 10 gainers, 10 losers, 0 sectors, 6 earnings, 0 sentiment, 10 volume, 1 breadth

      at log (routes/dashboard.js:280:13)

    console.log
      üìä Dashboard summary request received

      at log (routes/dashboard.js:48:13)

    console.log
      üîç Executing comprehensive dashboard queries with timeout protection...

      at log (routes/dashboard.js:217:13)

    console.log
      ‚úÖ Dashboard queries completed: 5 market, 10 gainers, 10 losers, 0 sectors, 6 earnings, 0 sentiment, 10 volume, 1 breadth

      at log (routes/dashboard.js:280:13)

    console.log
      üìä Dashboard summary request received

      at log (routes/dashboard.js:48:13)

    console.log
      üîç Executing comprehensive dashboard queries with timeout protection...

      at log (routes/dashboard.js:217:13)

    console.log
      ‚úÖ Dashboard queries completed: 5 market, 10 gainers, 10 losers, 0 sectors, 6 earnings, 0 sentiment, 10 volume, 1 breadth

      at log (routes/dashboard.js:280:13)

    console.log
      üìä Dashboard summary request received

      at log (routes/dashboard.js:48:13)

    console.log
      üîç Executing comprehensive dashboard queries with timeout protection...

      at log (routes/dashboard.js:217:13)

    console.log
      ‚úÖ Dashboard queries completed: 5 market, 10 gainers, 10 losers, 0 sectors, 6 earnings, 0 sentiment, 10 volume, 1 breadth

      at log (routes/dashboard.js:280:13)

    console.log
      üìä Dashboard summary request received

      at log (routes/dashboard.js:48:13)

    console.log
      üîç Executing comprehensive dashboard queries with timeout protection...

      at log (routes/dashboard.js:217:13)

    console.log
      ‚úÖ Dashboard queries completed: 5 market, 10 gainers, 10 losers, 0 sectors, 6 earnings, 0 sentiment, 10 volume, 1 breadth

      at log (routes/dashboard.js:280:13)

    console.log
      üìä Dashboard summary request received

      at log (routes/dashboard.js:48:13)

    console.log
      üîç Executing comprehensive dashboard queries with timeout protection...

      at log (routes/dashboard.js:217:13)

    console.log
      ‚úÖ Dashboard queries completed: 5 market, 10 gainers, 10 losers, 0 sectors, 6 earnings, 0 sentiment, 10 volume, 1 breadth

      at log (routes/dashboard.js:280:13)

    console.log
      üìä Dashboard summary request received

      at log (routes/dashboard.js:48:13)

    console.log
      üîç Executing comprehensive dashboard queries with timeout protection...

      at log (routes/dashboard.js:217:13)

    console.log
      ‚úÖ Dashboard queries completed: 5 market, 10 gainers, 10 losers, 0 sectors, 6 earnings, 0 sentiment, 10 volume, 1 breadth

      at log (routes/dashboard.js:280:13)

    console.log
      üìä Dashboard summary request received

      at log (routes/dashboard.js:48:13)

    console.log
      üîç Executing comprehensive dashboard queries with timeout protection...

      at log (routes/dashboard.js:217:13)

    console.log
      ‚úÖ Dashboard queries completed: 5 market, 10 gainers, 10 losers, 0 sectors, 6 earnings, 0 sentiment, 10 volume, 1 breadth

      at log (routes/dashboard.js:280:13)

    console.log
      üìä Market data request received

      at log (routes/dashboard.js:690:13)

    console.log
      üîç Executing market data queries...

      at log (routes/dashboard.js:776:13)

    console.log
      ‚úÖ Market data queries completed: 0 econ, 0 sectors, 3 internals

      at log (routes/dashboard.js:782:13)

    console.log
      üìä Market data prepared: 0 econ, 0 sectors, 3 internals

      at log (routes/dashboard.js:792:13)

    console.log
      üìä Dashboard overview requested

      at log (routes/dashboard.js:839:13)

    console.log
      üîç Executing overview queries...

      at log (routes/dashboard.js:922:13)

    console.log
      üìä Overview data prepared: 0 key metrics, 6 movers, 0 sectors

      at log (routes/dashboard.js:934:13)

    console.log
      üîß Dashboard debug request received

      at log (routes/dashboard.js:1003:13)

    console.log
      üîß Debug data collected: {
        timestamp: '2025-09-23T16:31:39.630Z',
        database_status: 'connected',
        table_counts: {
          price_daily: '18364',
          earnings_history: '6',
          fear_greed_index: '15',
          portfolio_holdings: '0',
          portfolio_performance: '0',
          trading_alerts: '2',
          economic_data: '5',
          stocks: '71',
          technical_data_daily: '12'
        },
        data_counts: {
          price_count: '18364',
          profile_count: '7',
          symbols_count: '4146',
          stocks_count: '7'
        },
        sample_data: {
          latest_prices: [ [Object], [Object], [Object] ],
          sample_alerts: [ [Object], [Object] ],
          database_connectivity: 'operational'
        }
      }

      at log (routes/dashboard.js:1074:13)

    console.log
      üîß Debug data validation - table_counts type: object

      at log (routes/dashboard.js:1077:13)

    console.log
      üîß Debug data validation - data_counts type: object

      at log (routes/dashboard.js:1078:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üíº Holdings request received for user: dev-user-bypass

      at log (routes/dashboard.js:379:13)

    console.log
      üîç Executing holdings queries...

      at log (routes/dashboard.js:419:13)

    console.log
      ‚úÖ Holdings queries completed: 0 holdings found

      at log (routes/dashboard.js:425:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Dashboard Routes Integration Tests ‚Ä∫ GET /api/dashboard/holdings (Portfolio Holdings) ‚Ä∫ should return holdings data with valid authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      138 |         .set("Authorization", `Bearer ${authToken}`);
      139 |
    > 140 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      141 |
      142 |       if (response.status === 200) {
      143 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:140:52)

  ‚óè Dashboard Routes Integration Tests ‚Ä∫ GET /api/dashboard/performance (Portfolio Performance) ‚Ä∫ should return performance data with valid authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      185 |         .set("Authorization", `Bearer ${authToken}`);
      186 |
    > 187 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      188 |
      189 |       if (response.status === 200) {
      190 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:187:52)

  ‚óè Dashboard Routes Integration Tests ‚Ä∫ Performance and Edge Cases ‚Ä∫ should handle authentication edge cases

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      637 |           .get(endpoint)
      638 |           .set("Authorization", `Bearer ${authToken}`);
    > 639 |         expect([200, 401].includes(validTokenResponse.status)).toBe(true);
          |                                                                ^
      640 |       }
      641 |     });
      642 |   });

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:639:64)

::ffff:127.0.0.1 - - [23/Sep/2025:16:31:39 +0000] "GET /api/dashboard/overview HTTP/1.1" 200 761 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:39 +0000] "GET /api/dashboard/debug HTTP/1.1" 200 830 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:39 +0000] "GET /api/dashboard/holdings HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:39 +0000] "GET /api/dashboard/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:39 +0000] "GET /api/dashboard/holdings HTTP/1.1" 404 108 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:40 +0000] "POST /auth/register HTTP/1.1" 400 46 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:40 +0000] "POST /auth/register HTTP/1.1" 400 46 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:40 +0000] "POST /auth/register HTTP/1.1" 400 51 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:40 +0000] "POST /auth/register HTTP/1.1" 400 46 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:41 +0000] "POST /auth/register HTTP/1.1" 400 46 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:41 +0000] "POST /auth/login HTTP/1.1" 401 47 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:41 +0000] "POST /auth/login HTTP/1.1" 400 47 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:41 +0000] "POST /auth/login HTTP/1.1" 401 47 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:41 +0000] "GET /auth/me HTTP/1.1" 200 144 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:41 +0000] "GET /auth/me HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:41 +0000] "GET /auth/me HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:41 +0000] "POST /auth/confirm HTTP/1.1" 400 47 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:41 +0000] "POST /auth/confirm HTTP/1.1" 400 46 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:41 +0000] "POST /auth/forgot-password HTTP/1.1" 400 49 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:41 +0000] "POST /auth/forgot-password HTTP/1.1" 400 44 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:41 +0000] "POST /auth/reset-password HTTP/1.1" 400 49 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:41 +0000] "POST /auth/reset-password HTTP/1.1" 400 46 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:41 +0000] "POST /auth/login HTTP/1.1" 401 47 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:41 +0000] "POST /auth/register HTTP/1.1" 400 46 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:41 +0000] "GET /auth/me HTTP/1.1" 401 528 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:41 +0000] "POST /auth/register HTTP/1.1" 400 51 "-" "-"
FAIL tests/integration/routes/auth.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      Processing request: POST /auth/register

      at log (index.js:403:11)

    console.log
      Initializing database connection...

      at log (index.js:362:13)

    console.log
      Database connection established successfully

      at log (index.js:388:17)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.error
      Registration error: InvalidParameterException: Username should be an email.
          at de_InvalidParameterExceptionRes (/home/stocks/algo/webapp/lambda/node_modules/@aws-sdk/client-cognito-identity-provider/dist-cjs/index.js:4872:21)
          at de_CommandError (/home/stocks/algo/webapp/lambda/node_modules/@aws-sdk/client-cognito-identity-provider/dist-cjs/index.js:4565:19)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/@smithy/middleware-serde/dist-cjs/index.js:36:20
          at /home/stocks/algo/webapp/lambda/node_modules/@smithy/core/dist-cjs/index.js:193:18
          at /home/stocks/algo/webapp/lambda/node_modules/@smithy/middleware-retry/dist-cjs/index.js:312:38
          at /home/stocks/algo/webapp/lambda/node_modules/@aws-sdk/middleware-logger/dist-cjs/index.js:33:22
          at /home/stocks/algo/webapp/lambda/routes/auth.js:321:22 {
        '$fault': 'client',
        '$metadata': {
          httpStatusCode: 400,
          requestId: '543c5ecd-fe36-41e6-971a-bb4a56ff8bd2',
          extendedRequestId: undefined,
          cfId: undefined,
          attempts: 1,
          totalRetryDelay: 0
        },
        reasonCode: undefined,
        __type: 'InvalidParameterException'
      }

      327 |     });
      328 |   } catch (error) {
    > 329 |     console.error("Registration error:", error);
          |             ^
      330 |
      331 |     if (error.name === "UsernameExistsException") {
      332 |       return res.status(400).json({ success: false, error: "Username exists" });

      at error (routes/auth.js:329:13)

    console.log
      Processing request: POST /auth/register

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.error
      Registration error: InvalidParameterException: Username should be an email.
          at de_InvalidParameterExceptionRes (/home/stocks/algo/webapp/lambda/node_modules/@aws-sdk/client-cognito-identity-provider/dist-cjs/index.js:4872:21)
          at de_CommandError (/home/stocks/algo/webapp/lambda/node_modules/@aws-sdk/client-cognito-identity-provider/dist-cjs/index.js:4565:19)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/@smithy/middleware-serde/dist-cjs/index.js:36:20
          at /home/stocks/algo/webapp/lambda/node_modules/@smithy/core/dist-cjs/index.js:193:18
          at /home/stocks/algo/webapp/lambda/node_modules/@smithy/middleware-retry/dist-cjs/index.js:312:38
          at /home/stocks/algo/webapp/lambda/node_modules/@aws-sdk/middleware-logger/dist-cjs/index.js:33:22
          at /home/stocks/algo/webapp/lambda/routes/auth.js:321:22 {
        '$fault': 'client',
        '$metadata': {
          httpStatusCode: 400,
          requestId: '7af44346-1145-4374-b9c2-62a148e4d1f1',
          extendedRequestId: undefined,
          cfId: undefined,
          attempts: 1,
          totalRetryDelay: 0
        },
        reasonCode: undefined,
        __type: 'InvalidParameterException'
      }

      327 |     });
      328 |   } catch (error) {
    > 329 |     console.error("Registration error:", error);
          |             ^
      330 |
      331 |     if (error.name === "UsernameExistsException") {
      332 |       return res.status(400).json({ success: false, error: "Username exists" });

      at error (routes/auth.js:329:13)

    console.log
      Processing request: POST /auth/register

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: POST /auth/register

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.error
      Registration error: InvalidParameterException: Invalid email address format.
          at de_InvalidParameterExceptionRes (/home/stocks/algo/webapp/lambda/node_modules/@aws-sdk/client-cognito-identity-provider/dist-cjs/index.js:4872:21)
          at de_CommandError (/home/stocks/algo/webapp/lambda/node_modules/@aws-sdk/client-cognito-identity-provider/dist-cjs/index.js:4565:19)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/@smithy/middleware-serde/dist-cjs/index.js:36:20
          at /home/stocks/algo/webapp/lambda/node_modules/@smithy/core/dist-cjs/index.js:193:18
          at /home/stocks/algo/webapp/lambda/node_modules/@smithy/middleware-retry/dist-cjs/index.js:312:38
          at /home/stocks/algo/webapp/lambda/node_modules/@aws-sdk/middleware-logger/dist-cjs/index.js:33:22
          at /home/stocks/algo/webapp/lambda/routes/auth.js:321:22 {
        '$fault': 'client',
        '$metadata': {
          httpStatusCode: 400,
          requestId: 'd860084e-69e5-43b7-8287-f89f68698e8b',
          extendedRequestId: undefined,
          cfId: undefined,
          attempts: 1,
          totalRetryDelay: 0
        },
        reasonCode: undefined,
        __type: 'InvalidParameterException'
      }

      327 |     });
      328 |   } catch (error) {
    > 329 |     console.error("Registration error:", error);
          |             ^
      330 |
      331 |     if (error.name === "UsernameExistsException") {
      332 |       return res.status(400).json({ success: false, error: "Username exists" });

      at error (routes/auth.js:329:13)

    console.log
      Processing request: POST /auth/register

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.error
      Registration error: InvalidParameterException: Username should be an email.
          at de_InvalidParameterExceptionRes (/home/stocks/algo/webapp/lambda/node_modules/@aws-sdk/client-cognito-identity-provider/dist-cjs/index.js:4872:21)
          at de_CommandError (/home/stocks/algo/webapp/lambda/node_modules/@aws-sdk/client-cognito-identity-provider/dist-cjs/index.js:4565:19)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/@smithy/middleware-serde/dist-cjs/index.js:36:20
          at /home/stocks/algo/webapp/lambda/node_modules/@smithy/core/dist-cjs/index.js:193:18
          at /home/stocks/algo/webapp/lambda/node_modules/@smithy/middleware-retry/dist-cjs/index.js:312:38
          at /home/stocks/algo/webapp/lambda/node_modules/@aws-sdk/middleware-logger/dist-cjs/index.js:33:22
          at /home/stocks/algo/webapp/lambda/routes/auth.js:321:22 {
        '$fault': 'client',
        '$metadata': {
          httpStatusCode: 400,
          requestId: 'bfa9a8ed-6ecd-4644-856e-c56a4fbf563d',
          extendedRequestId: undefined,
          cfId: undefined,
          attempts: 1,
          totalRetryDelay: 0
        },
        reasonCode: undefined,
        __type: 'InvalidParameterException'
      }

      327 |     });
      328 |   } catch (error) {
    > 329 |     console.error("Registration error:", error);
          |             ^
      330 |
      331 |     if (error.name === "UsernameExistsException") {
      332 |       return res.status(400).json({ success: false, error: "Username exists" });

      at error (routes/auth.js:329:13)

    console.log
      Processing request: POST /auth/login

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üîß DEV: Using development auth for login

      at log (routes/auth.js:39:15)

    console.log
      Processing request: POST /auth/login

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: POST /auth/login

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üîß DEV: Using development auth for login

      at log (routes/auth.js:39:15)

    console.log
      Processing request: GET /auth/me

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Processing request: GET /auth/me

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /auth/me

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: POST /auth/confirm

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.error
      Confirmation error: UserNotFoundException: Username/client id combination not found.
          at de_UserNotFoundExceptionRes (/home/stocks/algo/webapp/lambda/node_modules/@aws-sdk/client-cognito-identity-provider/dist-cjs/index.js:5142:21)
          at de_CommandError (/home/stocks/algo/webapp/lambda/node_modules/@aws-sdk/client-cognito-identity-provider/dist-cjs/index.js:4580:19)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/@smithy/middleware-serde/dist-cjs/index.js:36:20
          at /home/stocks/algo/webapp/lambda/node_modules/@smithy/core/dist-cjs/index.js:193:18
          at /home/stocks/algo/webapp/lambda/node_modules/@smithy/middleware-retry/dist-cjs/index.js:312:38
          at /home/stocks/algo/webapp/lambda/node_modules/@aws-sdk/middleware-logger/dist-cjs/index.js:33:22
          at /home/stocks/algo/webapp/lambda/routes/auth.js:379:5 {
        '$fault': 'client',
        '$metadata': {
          httpStatusCode: 400,
          requestId: '6e0e6858-ed69-4f8f-9f13-66b406522a80',
          extendedRequestId: undefined,
          cfId: undefined,
          attempts: 1,
          totalRetryDelay: 0
        },
        __type: 'UserNotFoundException'
      }

      383 |     });
      384 |   } catch (error) {
    > 385 |     console.error("Confirmation error:", error);
          |             ^
      386 |
      387 |     if (error.name === "CodeMismatchException") {
      388 |       return res.status(400).json({ success: false, error: "Invalid code" });

      at error (routes/auth.js:385:13)

    console.log
      Processing request: POST /auth/confirm

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: POST /auth/forgot-password

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.error
      Forgot password error: UserNotFoundException: Username/client id combination not found.
          at de_UserNotFoundExceptionRes (/home/stocks/algo/webapp/lambda/node_modules/@aws-sdk/client-cognito-identity-provider/dist-cjs/index.js:5142:21)
          at de_CommandError (/home/stocks/algo/webapp/lambda/node_modules/@aws-sdk/client-cognito-identity-provider/dist-cjs/index.js:4580:19)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/@smithy/middleware-serde/dist-cjs/index.js:36:20
          at /home/stocks/algo/webapp/lambda/node_modules/@smithy/core/dist-cjs/index.js:193:18
          at /home/stocks/algo/webapp/lambda/node_modules/@smithy/middleware-retry/dist-cjs/index.js:312:38
          at /home/stocks/algo/webapp/lambda/node_modules/@aws-sdk/middleware-logger/dist-cjs/index.js:33:22
          at /home/stocks/algo/webapp/lambda/routes/auth.js:424:22 {
        '$fault': 'client',
        '$metadata': {
          httpStatusCode: 400,
          requestId: '627abf29-ee6a-4aa3-ba57-babe44739d69',
          extendedRequestId: undefined,
          cfId: undefined,
          attempts: 1,
          totalRetryDelay: 0
        },
        __type: 'UserNotFoundException'
      }

      429 |     });
      430 |   } catch (error) {
    > 431 |     console.error("Forgot password error:", error);
          |             ^
      432 |     return res
      433 |       .status(400)
      434 |       .json({ success: false, error: "Password reset failed" });

      at error (routes/auth.js:431:13)

    console.log
      Processing request: POST /auth/forgot-password

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: POST /auth/reset-password

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.error
      Reset password error: UserNotFoundException: Username/client id combination not found.
          at de_UserNotFoundExceptionRes (/home/stocks/algo/webapp/lambda/node_modules/@aws-sdk/client-cognito-identity-provider/dist-cjs/index.js:5142:21)
          at de_CommandError (/home/stocks/algo/webapp/lambda/node_modules/@aws-sdk/client-cognito-identity-provider/dist-cjs/index.js:4580:19)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/@smithy/middleware-serde/dist-cjs/index.js:36:20
          at /home/stocks/algo/webapp/lambda/node_modules/@smithy/core/dist-cjs/index.js:193:18
          at /home/stocks/algo/webapp/lambda/node_modules/@smithy/middleware-retry/dist-cjs/index.js:312:38
          at /home/stocks/algo/webapp/lambda/node_modules/@aws-sdk/middleware-logger/dist-cjs/index.js:33:22
          at /home/stocks/algo/webapp/lambda/routes/auth.js:483:5 {
        '$fault': 'client',
        '$metadata': {
          httpStatusCode: 400,
          requestId: 'e580f077-3cbc-4b50-91c7-4ebc1b2c8ef8',
          extendedRequestId: undefined,
          cfId: undefined,
          attempts: 1,
          totalRetryDelay: 0
        },
        __type: 'UserNotFoundException'
      }

      487 |     });
      488 |   } catch (error) {
    > 489 |     console.error("Reset password error:", error);
          |             ^
      490 |     return res
      491 |       .status(400)
      492 |       .json({ success: false, error: "Password reset failed" });

      at error (routes/auth.js:489:13)

    console.log
      Processing request: POST /auth/reset-password

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: POST /auth/login

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üîß DEV: Using development auth for login

      at log (routes/auth.js:39:15)

    console.log
      Processing request: POST /auth/register

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.error
      Registration error: InvalidParameterException: Username should be an email.
          at de_InvalidParameterExceptionRes (/home/stocks/algo/webapp/lambda/node_modules/@aws-sdk/client-cognito-identity-provider/dist-cjs/index.js:4872:21)
          at de_CommandError (/home/stocks/algo/webapp/lambda/node_modules/@aws-sdk/client-cognito-identity-provider/dist-cjs/index.js:4565:19)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/@smithy/middleware-serde/dist-cjs/index.js:36:20
          at /home/stocks/algo/webapp/lambda/node_modules/@smithy/core/dist-cjs/index.js:193:18
          at /home/stocks/algo/webapp/lambda/node_modules/@smithy/middleware-retry/dist-cjs/index.js:312:38
          at /home/stocks/algo/webapp/lambda/node_modules/@aws-sdk/middleware-logger/dist-cjs/index.js:33:22
          at /home/stocks/algo/webapp/lambda/routes/auth.js:321:22 {
        '$fault': 'client',
        '$metadata': {
          httpStatusCode: 400,
          requestId: 'b7dc3a1a-dcef-44d6-b3e0-7be3eed772e3',
          extendedRequestId: undefined,
          cfId: undefined,
          attempts: 1,
          totalRetryDelay: 0
        },
        reasonCode: undefined,
        __type: 'InvalidParameterException'
      }

      327 |     });
      328 |   } catch (error) {
    > 329 |     console.error("Registration error:", error);
          |             ^
      330 |
      331 |     if (error.name === "UsernameExistsException") {
      332 |       return res.status(400).json({ success: false, error: "Username exists" });

      at error (routes/auth.js:329:13)

    console.log
      Processing request: GET /auth/me

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: POST /auth/register

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: POST /auth/register

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.error
      Registration error: InvalidParameterException: 1 validation error detected: Value at 'username' failed to satisfy constraint: Member must have length less than or equal to 128
          at de_InvalidParameterExceptionRes (/home/stocks/algo/webapp/lambda/node_modules/@aws-sdk/client-cognito-identity-provider/dist-cjs/index.js:4872:21)
          at de_CommandError (/home/stocks/algo/webapp/lambda/node_modules/@aws-sdk/client-cognito-identity-provider/dist-cjs/index.js:4565:19)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/@smithy/middleware-serde/dist-cjs/index.js:36:20
          at /home/stocks/algo/webapp/lambda/node_modules/@smithy/core/dist-cjs/index.js:193:18
          at /home/stocks/algo/webapp/lambda/node_modules/@smithy/middleware-retry/dist-cjs/index.js:312:38
          at /home/stocks/algo/webapp/lambda/node_modules/@aws-sdk/middleware-logger/dist-cjs/index.js:33:22
          at /home/stocks/algo/webapp/lambda/routes/auth.js:321:22 {
        '$fault': 'client',
        '$metadata': {
          httpStatusCode: 400,
          requestId: '9ceec43d-2c01-46a4-a170-fa2e90dc65bd',
          extendedRequestId: undefined,
          cfId: undefined,
          attempts: 1,
          totalRetryDelay: 0
        },
        reasonCode: undefined,
        __type: 'InvalidParameterException'
      }

      327 |     });
      328 |   } catch (error) {
    > 329 |     console.error("Registration error:", error);
          |             ^
      330 |
      331 |     if (error.name === "UsernameExistsException") {
      332 |       return res.status(400).json({ success: false, error: "Username exists" });

      at error (routes/auth.js:329:13)

    console.log
      Processing request: GET /auth/health

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Authentication Routes Integration ‚Ä∫ GET /auth/me ‚Ä∫ should require valid token

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      170 |       // Due to development bypass in auth middleware (lines 30-47 in auth.js),
      171 |       // requests without tokens may still succeed in NODE_ENV=test
    > 172 |       expect(response.status).toBe(200);
          |                               ^
      173 |       if (response.status === 401) {
      174 |         expect(response.body.success).toBe(false);
      175 |       } else {

      at Object.toBe (tests/integration/routes/auth.integration.test.js:172:31)

  ‚óè Authentication Routes Integration ‚Ä∫ POST /auth/forgot-password ‚Ä∫ should initiate password reset

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 400

      219 |
      220 |       // Accept various Cognito responses
    > 221 |       expect(response.status).toBe(200);
          |                               ^
      222 |       if (response.status === 200) {
      223 |         expect(response.body.message).toContain("Password reset code sent");
      224 |       }

      at Object.toBe (tests/integration/routes/auth.integration.test.js:221:31)

  ‚óè Authentication Routes Integration ‚Ä∫ POST /auth/reset-password ‚Ä∫ should reset password with valid code

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 400

      244 |
      245 |       // Accept various Cognito responses
    > 246 |       expect(response.status).toBe(200);
          |                               ^
      247 |       if (response.status === 200) {
      248 |         expect(response.body.message).toBe("Password reset successfully");
      249 |       }

      at Object.toBe (tests/integration/routes/auth.integration.test.js:246:31)

::ffff:127.0.0.1 - - [23/Sep/2025:16:31:41 +0000] "POST /auth/register HTTP/1.1" 400 46 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:41 +0000] "GET /auth/health HTTP/1.1" 200 138 "-" "-"
FAIL tests/integration/utils/performanceMonitor.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      {"timestamp":"2025-09-23T16:31:42.264Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Operation not found","correlationId":"469ae0f8","operationId":"non_existent_timer","severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ Performance Timing ‚Ä∫ should handle multiple concurrent timers

    expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      118 |       const duration3 = endTimer(timer3);
      119 |
    > 120 |       expect(duration1).toBeGreaterThan(0);
          |                         ^
      121 |       expect(duration2).toBeGreaterThan(0);
      122 |       expect(duration3).toBeGreaterThan(0);
      123 |     });

      at Object.toBeGreaterThan (tests/integration/utils/performanceMonitor.test.js:120:25)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ Metrics Recording ‚Ä∫ should record custom metrics

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      137 |       const metrics = await getMetrics("test_metric", "1h");
      138 |
    > 139 |       expect(Array.isArray(metrics)).toBe(true);
          |                                      ^
      140 |       expect(metrics.length).toBeGreaterThan(0);
      141 |
      142 |       const values = metrics.map((m) => m.value);

      at Object.toBe (tests/integration/utils/performanceMonitor.test.js:139:38)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ Metrics Recording ‚Ä∫ should record metrics with different categories

    expect(received).toBeGreaterThan(expected)

    Matcher error: received value must be a number or bigint

    Received has value: undefined

      164 |       const cacheMetrics = await getMetrics("response_time", "1h", "cache");
      165 |
    > 166 |       expect(apiMetrics.length).toBeGreaterThan(0);
          |                                 ^
      167 |       expect(dbMetrics.length).toBeGreaterThan(0);
      168 |       expect(cacheMetrics.length).toBeGreaterThan(0);
      169 |

      at Object.toBeGreaterThan (tests/integration/utils/performanceMonitor.test.js:166:33)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ Metrics Recording ‚Ä∫ should handle metrics with metadata

    TypeError: metrics.find is not a function

      184 |
      185 |       const metrics = await getMetrics("request_duration", "1h", "api");
    > 186 |       const metric = metrics.find(
          |                              ^
      187 |         (m) => m.metadata?.user_id === "test_user_123"
      188 |       );
      189 |

      at Object.find (tests/integration/utils/performanceMonitor.test.js:186:30)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ Performance Analytics ‚Ä∫ should calculate average response times

    expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      208 |       );
      209 |
    > 210 |       expect(avgResponseTime).toBeGreaterThan(0);
          |                               ^
      211 |       expect(avgResponseTime).toBe(143.75); // (100 + 150 + 200 + 125) / 4
      212 |     });
      213 |

      at Object.toBeGreaterThan (tests/integration/utils/performanceMonitor.test.js:210:31)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ Performance Analytics ‚Ä∫ should calculate metrics for different time ranges

    expect(received).toBeLessThanOrEqual(expected)

    Matcher error: received value must be a number or bigint

    Received has value: undefined

      240 |       const metrics2h = await getMetrics("time_test", "2h", "test");
      241 |
    > 242 |       expect(metrics1h.length).toBeLessThanOrEqual(metrics2h.length);
          |                                ^
      243 |     });
      244 |   });
      245 |

      at Object.toBeLessThanOrEqual (tests/integration/utils/performanceMonitor.test.js:242:32)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ System Health Monitoring ‚Ä∫ should collect system health metrics

    expect(received).toHaveProperty(path)

    Expected path: "timestamp"
    Received path: []

    Received value: {"averageDuration": 109, "score": 98, "slowOperations": 0, "status": "healthy", "successRate": "100.00", "totalOperations": 17}

      249 |
      250 |       expect(health).toHaveProperty("status");
    > 251 |       expect(health).toHaveProperty("timestamp");
          |                      ^
      252 |       expect(health).toHaveProperty("metrics");
      253 |
      254 |       expect(health.metrics).toHaveProperty("memory");

      at Object.toHaveProperty (tests/integration/utils/performanceMonitor.test.js:251:22)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ System Health Monitoring ‚Ä∫ should include database health in system metrics

    expect(received).toHaveProperty(path)

    Matcher error: received value must not be null nor undefined

    Received has value: undefined

      272 |       const health = await getSystemHealth();
      273 |
    > 274 |       expect(health.metrics).toHaveProperty("database");
          |                              ^
      275 |       expect(health.metrics.database).toHaveProperty("connected");
      276 |       expect(health.metrics.database).toHaveProperty("pool_size");
      277 |       expect(health.metrics.database).toHaveProperty("active_connections");

      at Object.toHaveProperty (tests/integration/utils/performanceMonitor.test.js:274:30)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ System Health Monitoring ‚Ä∫ should detect system health status accurately

    TypeError: Cannot read properties of undefined (reading 'memory')

      288 |
      289 |       if (health.status === "healthy") {
    > 290 |         expect(health.metrics.memory.usage_percent).toBeLessThan(90);
          |                               ^
      291 |         expect(health.metrics.cpu.usage).toBeLessThan(90);
      292 |       }
      293 |     });

      at Object.memory (tests/integration/utils/performanceMonitor.test.js:290:31)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ Anomaly Detection ‚Ä∫ should detect trend-based anomalies

    expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      343 |       const anomalies = await detectAnomalies("trend_test", "1h", "trend");
      344 |
    > 345 |       expect(anomalies.length).toBeGreaterThan(0);
          |                                ^
      346 |
      347 |       const dropAnomaly = anomalies.find((a) => a.value === 50);
      348 |       expect(dropAnomaly).toBeDefined();

      at Object.toBeGreaterThan (tests/integration/utils/performanceMonitor.test.js:345:32)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ Performance Reporting ‚Ä∫ should generate comprehensive performance report

    expect(received).toHaveProperty(path)

    Expected path: "summary"
    Received path: []

    Received value: {"activeRequests": 1, "alerts": [], "errorRate": 0, "status": "healthy", "timestamp": "2025-09-23T16:31:42.279Z", "totalRequests": 53, "uptime": 7.744342046}

      367 |       const report = await generatePerformanceReport("1h");
      368 |
    > 369 |       expect(report).toHaveProperty("summary");
          |                      ^
      370 |       expect(report).toHaveProperty("metrics");
      371 |       expect(report).toHaveProperty("anomalies");
      372 |       expect(report).toHaveProperty("recommendations");

      at Object.toHaveProperty (tests/integration/utils/performanceMonitor.test.js:369:22)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ Performance Reporting ‚Ä∫ should include performance recommendations

    TypeError: Cannot read properties of undefined (reading 'length')

      391 |       const report = await generatePerformanceReport("1h");
      392 |
    > 393 |       expect(report.recommendations.length).toBeGreaterThan(0);
          |                                     ^
      394 |
      395 |       const recommendations = report.recommendations;
      396 |       const hasPerformanceRecommendation = recommendations.some(

      at Object.length (tests/integration/utils/performanceMonitor.test.js:393:37)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ Performance Reporting ‚Ä∫ should filter report by categories

    TypeError: Cannot read properties of undefined (reading 'every')

      417 |       const dbReport = await generatePerformanceReport("1h", "database");
      418 |
    > 419 |       expect(apiReport.metrics.every((m) => m.category === "api")).toBe(true);
          |                                ^
      420 |       expect(dbReport.metrics.every((m) => m.category === "database")).toBe(
      421 |         true
      422 |       );

      at Object.every (tests/integration/utils/performanceMonitor.test.js:419:32)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ Performance Benchmarking ‚Ä∫ should benchmark database operations

    expect(received).toBeGreaterThan(expected)

    Matcher error: received value must be a number or bigint

    Received has value: undefined

      445 |       // Verify metric was recorded
      446 |       const metrics = await getMetrics("db_benchmark", "1h", "database");
    > 447 |       expect(metrics.length).toBeGreaterThan(0);
          |                              ^
      448 |       expect(metrics[0].value).toBe(duration);
      449 |     });
      450 |

      at Object.toBeGreaterThan (tests/integration/utils/performanceMonitor.test.js:447:30)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ Performance Benchmarking ‚Ä∫ should benchmark API response times

    expect(received).toBe(expected) // Object.is equality

    Expected: 3
    Received: undefined

      477 |       // Verify all metrics were recorded
      478 |       const metrics = await getMetrics("api_benchmark", "1h", "api");
    > 479 |       expect(metrics.length).toBe(operations.length);
          |                              ^
      480 |     });
      481 |
      482 |     test("should compare performance across time periods", async () => {

      at Object.toBe (tests/integration/utils/performanceMonitor.test.js:479:30)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ Performance Benchmarking ‚Ä∫ should compare performance across time periods

    TypeError: currentMetrics.reduce is not a function

      510 |       const currentMetrics = await getMetrics("comparison_test", "30m", "test");
      511 |       const currentAvg =
    > 512 |         currentMetrics.reduce((sum, m) => sum + m.value, 0) /
          |                        ^
      513 |         currentMetrics.length;
      514 |
      515 |       expect(previousAvg).toBeGreaterThan(currentAvg); // Performance improved

      at Object.reduce (tests/integration/utils/performanceMonitor.test.js:512:24)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle invalid time ranges

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      536 |     test("should handle invalid time ranges", async () => {
      537 |       const metrics = await getMetrics("test_metric", "invalid_range", "test");
    > 538 |       expect(Array.isArray(metrics)).toBe(true);
          |                                      ^
      539 |       // Should default to a reasonable time range
      540 |     });
      541 |

      at Object.toBe (tests/integration/utils/performanceMonitor.test.js:538:38)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle very large metric values

    expect(received).toBeGreaterThan(expected)

    Matcher error: received value must be a number or bigint

    Received has value: undefined

      548 |
      549 |       const metrics = await getMetrics("large_value_test", "1h", "test");
    > 550 |       expect(metrics.length).toBeGreaterThan(0);
          |                              ^
      551 |       expect(metrics[0].value).toBe(largeValue);
      552 |     });
      553 |

      at Object.toBeGreaterThan (tests/integration/utils/performanceMonitor.test.js:550:30)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle concurrent metric recording

    expect(received).toBe(expected) // Object.is equality

    Expected: 10
    Received: undefined

      563 |
      564 |       const metrics = await getMetrics("concurrent_test", "1h", "test");
    > 565 |       expect(metrics.length).toBe(10);
          |                              ^
      566 |
      567 |       // Verify all values were recorded correctly
      568 |       const values = metrics.map((m) => m.value).sort((a, b) => a - b);

      at Object.toBe (tests/integration/utils/performanceMonitor.test.js:565:30)

::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 69 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 69 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 69 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 69 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 69 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 69 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/search?q=AAPL HTTP/1.1" 200 265 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/search HTTP/1.1" 200 129 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/search?q= HTTP/1.1" 200 129 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/search?q=A&limit=10 HTTP/1.1" 200 714 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/search?q=AAPL HTTP/1.1" 200 265 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/AAPL HTTP/1.1" 200 483 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/INVALID HTTP/1.1" 400 130 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/VERYLONGSYMBOLNAME123456 HTTP/1.1" 400 147 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/@ HTTP/1.1" 400 124 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/trending HTTP/1.1" 500 114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/trending?timeframe=1d HTTP/1.1" 500 114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/trending HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/screener HTTP/1.1" 200 953 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/screener?market_cap_min=1000000&pe_ratio_max=20 HTTP/1.1" 200 953 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/watchlist HTTP/1.1" 301 164 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "POST /api/stocks/watchlist/add HTTP/1.1" 200 140 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "POST /api/stocks/watchlist/add HTTP/1.1" 400 58 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "DELETE /api/stocks/watchlist/remove HTTP/1.1" 200 147 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/AAPL/quote HTTP/1.1" 200 367 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/AAPL/technicals HTTP/1.1" 200 124 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/AAPL/options HTTP/1.1" 200 113 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/AAPL/insider HTTP/1.1" 200 128 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/AAPL/analysts HTTP/1.1" 200 124 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/AAPL/earnings HTTP/1.1" 200 115 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/AAPL/dividends HTTP/1.1" 200 116 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/AAPL/sentiment HTTP/1.1" 200 121 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/AAPL/social HTTP/1.1" 200 122 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/search?q=AAPL HTTP/1.1" 200 265 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/search?q=AAPL HTTP/1.1" 200 265 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/search?q=AAPL HTTP/1.1" 200 265 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/search?q=AAPL HTTP/1.1" 200 265 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/AAPL HTTP/1.1" 200 483 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 69 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/trending HTTP/1.1" 500 114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/search?q=A HTTP/1.1" 200 714 "-" "-"
FAIL tests/integration/routes/stocks.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      Sectors endpoint called (public)

      at log (routes/stocks.js:15:13)

    console.log
      Sectors endpoint called (public)

      at log (routes/stocks.js:15:13)

    console.log
      Sectors endpoint called (public)

      at log (routes/stocks.js:15:13)

    console.log
      Sectors endpoint called (public)

      at log (routes/stocks.js:15:13)

    console.log
      Sectors endpoint called (public)

      at log (routes/stocks.js:15:13)

    console.log
      Sectors endpoint called (public)

      at log (routes/stocks.js:15:13)

    console.log
      üîç Stock search requested for: AAPL

      at log (routes/stocks.js:1244:13)

    console.log
      üîç Stock search requested for: A

      at log (routes/stocks.js:1244:13)

    console.log
      üîç Stock search requested for: AAPL

      at log (routes/stocks.js:1244:13)

    console.log
      FIXED stock endpoint called for: AAPL

      at log (routes/stocks.js:2511:13)

    console.log
      FIXED stock endpoint - executing query for AAPL

      at log (routes/stocks.js:2539:13)

    console.log
      FIXED stock endpoint - query result: 1 rows

      at log (routes/stocks.js:2544:15)

    console.log
      FIXED stock endpoint - first row data: {
        symbol: 'AAPL',
        company_name: 'AAPL',
        sector: null,
        exchange: null,
        market_category: null,
        market_cap: '3500000000000',
        current_price: 150.25,
        open: 149.5,
        high: 151.25,
        low: 148.75,
        volume: '65000000',
        price_date: 2024-01-02T06:00:00.000Z
      }

      at log (routes/stocks.js:2560:15)

    console.log
      ‚úÖ FIXED: Successfully returned data for AAPL with price: 150.25

      at log (routes/stocks.js:2625:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.error
      Database query error: {
        error: 'missing FROM-clause entry for table "ss"',
        query: '\n' +
          '      SELECT\n' +
          '        pd.symbol,\n' +
          '        NULL as name,\n' +
          '        pd.close as current_price,\n' +
          '        pd...',
        params: '1 parameters',
        code: '42P01'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/stocks.js:1765:20

    console.error
      Trending stocks error: missing FROM-clause entry for table "ss"

      1774 |     });
      1775 |   } catch (error) {
    > 1776 |     console.error("Trending stocks error:", error.message);
           |             ^
      1777 |     res.status(500).json({
      1778 |       success: false,
      1779 |       error: "Failed to fetch trending stocks",

      at error (routes/stocks.js:1776:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.error
      Database query error: {
        error: 'missing FROM-clause entry for table "ss"',
        query: '\n' +
          '      SELECT\n' +
          '        pd.symbol,\n' +
          '        NULL as name,\n' +
          '        pd.close as current_price,\n' +
          '        pd...',
        params: '1 parameters',
        code: '42P01'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/stocks.js:1765:20

    console.error
      Trending stocks error: missing FROM-clause entry for table "ss"

      1774 |     });
      1775 |   } catch (error) {
    > 1776 |     console.error("Trending stocks error:", error.message);
           |             ^
      1777 |     res.status(500).json({
      1778 |       success: false,
      1779 |       error: "Failed to fetch trending stocks",

      at error (routes/stocks.js:1776:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Alternative stock quote request for AAPL

      at log (routes/stocks.js:3534:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîç Stock search requested for: AAPL

      at log (routes/stocks.js:1244:13)

    console.log
      üîç Stock search requested for: AAPL

      at log (routes/stocks.js:1244:13)

    console.log
      üîç Stock search requested for: AAPL

      at log (routes/stocks.js:1244:13)

    console.log
      üîç Stock search requested for: AAPL

      at log (routes/stocks.js:1244:13)

    console.log
      Sectors endpoint called (public)

      at log (routes/stocks.js:15:13)

    console.log
      üîç Stock search requested for: A

      at log (routes/stocks.js:1244:13)

    console.log
      FIXED stock endpoint called for: AAPL

      at log (routes/stocks.js:2511:13)

    console.log
      FIXED stock endpoint - executing query for AAPL

      at log (routes/stocks.js:2539:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      FIXED stock endpoint - query result: 1 rows

      at log (routes/stocks.js:2544:15)

    console.log
      FIXED stock endpoint - first row data: {
        symbol: 'AAPL',
        company_name: 'AAPL',
        sector: null,
        exchange: null,
        market_category: null,
        market_cap: '3500000000000',
        current_price: 150.25,
        open: 149.5,
        high: 151.25,
        low: 148.75,
        volume: '65000000',
        price_date: 2024-01-02T06:00:00.000Z
      }

      at log (routes/stocks.js:2560:15)

    console.log
      ‚úÖ FIXED: Successfully returned data for AAPL with price: 150.25

      at log (routes/stocks.js:2625:13)

    console.error
      Database query error: {
        error: 'missing FROM-clause entry for table "ss"',
        query: '\n' +
          '      SELECT\n' +
          '        pd.symbol,\n' +
          '        NULL as name,\n' +
          '        pd.close as current_price,\n' +
          '        pd...',
        params: '1 parameters',
        code: '42P01'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/stocks.js:1765:20

    console.error
      Trending stocks error: missing FROM-clause entry for table "ss"

      1774 |     });
      1775 |   } catch (error) {
    > 1776 |     console.error("Trending stocks error:", error.message);
           |             ^
      1777 |     res.status(500).json({
      1778 |       success: false,
      1779 |       error: "Failed to fetch trending stocks",

      at error (routes/stocks.js:1776:13)

    console.log
      üîç Stock search requested for: A

      at log (routes/stocks.js:1244:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.error
      Database query error: {
        error: 'missing FROM-clause entry for table "ss"',
        query: '\n' +
          '      SELECT\n' +
          '        pd.symbol,\n' +
          '        NULL as name,\n' +
          '        pd.close as current_price,\n' +
          '        pd...',
        params: '1 parameters',
        code: '42P01'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/stocks.js:1765:20

    console.error
      Trending stocks error: missing FROM-clause entry for table "ss"

      1774 |     });
      1775 |   } catch (error) {
    > 1776 |     console.error("Trending stocks error:", error.message);
           |             ^
      1777 |     res.status(500).json({
      1778 |       success: false,
      1779 |       error: "Failed to fetch trending stocks",

      at error (routes/stocks.js:1776:13)

    console.log
      Sectors endpoint called (public)

      at log (routes/stocks.js:15:13)

    console.log
      üîç Stock search requested for: AAPL

      at log (routes/stocks.js:1244:13)

    console.log
      Sectors endpoint called (public)

      at log (routes/stocks.js:15:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Stocks Routes Integration Tests ‚Ä∫ GET /api/stocks/trending ‚Ä∫ should return trending stocks

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      128 |         .set("Authorization", "Bearer dev-bypass-token");
      129 |
    > 130 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      131 |     });
      132 |
      133 |     test("should handle timeframe parameters", async () => {

      at Object.toBe (tests/integration/routes/stocks.integration.test.js:130:52)

  ‚óè Stocks Routes Integration Tests ‚Ä∫ GET /api/stocks/trending ‚Ä∫ should handle timeframe parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      136 |         .set("Authorization", "Bearer dev-bypass-token");
      137 |
    > 138 |       expect([200, 400, 401].includes(response.status)).toBe(true);
          |                                                         ^
      139 |     });
      140 |
      141 |     test("should require authentication for trending", async () => {

      at Object.toBe (tests/integration/routes/stocks.integration.test.js:138:57)

  ‚óè Stocks Routes Integration Tests ‚Ä∫ Watchlist Operations ‚Ä∫ should handle watchlist requests

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      178 |         .set("Authorization", "Bearer dev-bypass-token");
      179 |
    > 180 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      181 |     });
      182 |
      183 |     test("should handle adding to watchlist", async () => {

      at Object.toBe (tests/integration/routes/stocks.integration.test.js:180:52)

  ‚óè Stocks Routes Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle concurrent requests

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      333 |
      334 |       responses.forEach((response) => {
    > 335 |         expect([200, 400, 401].includes(response.status)).toBe(true);
          |                                                           ^
      336 |       });
      337 |     });
      338 |

      at toBe (tests/integration/routes/stocks.integration.test.js:335:59)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/routes/stocks.integration.test.js:334:17)

  ‚óè Stocks Routes Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle invalid parameters gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      352 |       for (const req of invalidRequests) {
      353 |         const response = await req;
    > 354 |         expect([200, 400, 401].includes(response.status)).toBe(true);
          |                                                           ^
      355 |       }
      356 |     });
      357 |

      at Object.toBe (tests/integration/routes/stocks.integration.test.js:354:59)

::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/search?q=A&limit=abc HTTP/1.1" 200 714 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/trending?timeframe=INVALID HTTP/1.1" 500 114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 69 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/search?q=AAPL HTTP/1.1" 200 265 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/%27%3B%20DROP%20TABLE%20stocks%3B%20-- HTTP/1.1" 400 147 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/1%27%20OR%20%271%27%3D%271 HTTP/1.1" 400 135 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:42 +0000] "GET /api/stocks/UNION%20SELECT%20*%20FROM%20users HTTP/1.1" 400 148 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 69 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/stocks/search?q=%E6%B5%8B%E8%AF%95 HTTP/1.1" 200 172 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts HTTP/1.1" 200 625 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts HTTP/1.1" 200 625 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/upgrades HTTP/1.1" 500 246 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/upgrades?page=2&limit=10 HTTP/1.1" 500 246 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/upgrades?page=invalid&limit=abc HTTP/1.1" 500 246 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/upgrades?page=0&limit=-5 HTTP/1.1" 500 245 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/upgrades?limit=5 HTTP/1.1" 500 245 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/upgrades HTTP/1.1" 500 246 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/AAPL/earnings-estimates HTTP/1.1" 500 173 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/aapl/earnings-estimates HTTP/1.1" 500 173 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/MSFT/earnings-estimates HTTP/1.1" 500 173 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/BRK.A/earnings-estimates HTTP/1.1" 500 174 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/INVALID123/earnings-estimates HTTP/1.1" 500 179 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/AAPL/revenue-estimates HTTP/1.1" 500 61 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/MSFT/revenue-estimates HTTP/1.1" 500 61 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/NVDA/revenue-estimates HTTP/1.1" 500 61 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/AAPL/earnings-history HTTP/1.1" 500 60 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/MSFT/earnings-history HTTP/1.1" 500 60 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/tesla/earnings-history HTTP/1.1" 500 60 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/AAPL/eps-revisions HTTP/1.1" 500 121 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/MSFT/eps-revisions HTTP/1.1" 500 121 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/googl/eps-revisions HTTP/1.1" 500 121 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/AAPL/eps-trend HTTP/1.1" 500 103 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/TSLA/eps-trend HTTP/1.1" 500 103 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/AAPL/growth-estimates HTTP/1.1" 500 114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/META/growth-estimates HTTP/1.1" 500 114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/AAPL/overview HTTP/1.1" 500 105 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/MSFT/overview HTTP/1.1" 500 110 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/NFLX/overview HTTP/1.1" 500 110 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/recent-actions HTTP/1.1" 500 66 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/recent-actions?limit=5 HTTP/1.1" 500 66 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/recent-actions?limit=invalid HTTP/1.1" 500 66 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/recent-actions HTTP/1.1" 500 66 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/recent-actions HTTP/1.1" 500 66 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/recommendations/AAPL HTTP/1.1" 404 123 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/recommendations/aapl HTTP/1.1" 404 123 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/recommendations/MSFT HTTP/1.1" 404 123 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/recommendations/BRK.A HTTP/1.1" 404 125 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/recommendations/GOOGL HTTP/1.1" 404 125 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/targets/AAPL HTTP/1.1" 200 417 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/targets/MSFT HTTP/1.1" 200 417 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/targets/googl HTTP/1.1" 200 418 "-" "-"
FAIL tests/integration/routes/analysts.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.error
      Database query error: {
        error: 'column er.revenue does not exist',
        query: '\n' +
          '      SELECT \n' +
          "        CONCAT('Q', er.quarter, ' ', er.year) as period,\n" +
          '        NULL as estimate,\n' +
          '  ...',
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/analysts.js:95:20

    console.error
      Error fetching revenue estimates: error: column er.revenue does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/analysts.js:95:20 {
        length: 109,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '107',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      100 |     });
      101 |   } catch (error) {
    > 102 |     console.error("Error fetching revenue estimates:", error);
          |             ^
      103 |     return res
      104 |       .status(500)
      105 |       .json({ success: false, error: "Failed to fetch revenue estimates" });

      at error (routes/analysts.js:102:13)

    console.error
      Database query error: {
        error: 'column er.revenue does not exist',
        query: '\n' +
          '      SELECT \n' +
          "        CONCAT('Q', er.quarter, ' ', er.year) as period,\n" +
          '        NULL as estimate,\n' +
          '  ...',
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/analysts.js:95:20

    console.error
      Error fetching revenue estimates: error: column er.revenue does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/analysts.js:95:20 {
        length: 109,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '107',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      100 |     });
      101 |   } catch (error) {
    > 102 |     console.error("Error fetching revenue estimates:", error);
          |             ^
      103 |     return res
      104 |       .status(500)
      105 |       .json({ success: false, error: "Failed to fetch revenue estimates" });

      at error (routes/analysts.js:102:13)

    console.error
      Database query error: {
        error: 'column er.revenue does not exist',
        query: '\n' +
          '      SELECT \n' +
          "        CONCAT('Q', er.quarter, ' ', er.year) as period,\n" +
          '        NULL as estimate,\n' +
          '  ...',
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/analysts.js:95:20

    console.error
      Error fetching revenue estimates: error: column er.revenue does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/analysts.js:95:20 {
        length: 109,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '107',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      100 |     });
      101 |   } catch (error) {
    > 102 |     console.error("Error fetching revenue estimates:", error);
          |             ^
      103 |     return res
      104 |       .status(500)
      105 |       .json({ success: false, error: "Failed to fetch revenue estimates" });

      at error (routes/analysts.js:102:13)

    console.error
      Database query error: {
        error: 'column er.eps_reported does not exist',
        query: '\n' +
          '      SELECT \n' +
          "        CONCAT('Q', er.quarter, ' ', er.year) as quarter,\n" +
          '        er.eps_estimate as ...',
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/analysts.js:128:20

    console.error
      Error fetching earnings history: error: column er.eps_reported does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/analysts.js:128:20 {
        length: 114,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '119',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      133 |     });
      134 |   } catch (error) {
    > 135 |     console.error("Error fetching earnings history:", error);
          |             ^
      136 |     return res
      137 |       .status(500)
      138 |       .json({ success: false, error: "Failed to fetch earnings history" });

      at error (routes/analysts.js:135:13)

    console.error
      Database query error: {
        error: 'column er.eps_reported does not exist',
        query: '\n' +
          '      SELECT \n' +
          "        CONCAT('Q', er.quarter, ' ', er.year) as quarter,\n" +
          '        er.eps_estimate as ...',
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/analysts.js:128:20

    console.error
      Error fetching earnings history: error: column er.eps_reported does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/analysts.js:128:20 {
        length: 114,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '119',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      133 |     });
      134 |   } catch (error) {
    > 135 |     console.error("Error fetching earnings history:", error);
          |             ^
      136 |     return res
      137 |       .status(500)
      138 |       .json({ success: false, error: "Failed to fetch earnings history" });

      at error (routes/analysts.js:135:13)

    console.error
      Database query error: {
        error: 'column er.eps_reported does not exist',
        query: '\n' +
          '      SELECT \n' +
          "        CONCAT('Q', er.quarter, ' ', er.year) as quarter,\n" +
          '        er.eps_estimate as ...',
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/analysts.js:128:20

    console.error
      Error fetching earnings history: error: column er.eps_reported does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/analysts.js:128:20 {
        length: 114,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '119',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      133 |     });
      134 |   } catch (error) {
    > 135 |     console.error("Error fetching earnings history:", error);
          |             ^
      136 |     return res
      137 |       .status(500)
      138 |       .json({ success: false, error: "Failed to fetch earnings history" });

      at error (routes/analysts.js:135:13)

    console.error
      Database query error: {
        error: 'column asa.eps_revisions_up_last_30d does not exist',
        query: '\n' +
          '      SELECT \n' +
          '        asa.symbol,\n' +
          "        '0q' as period,\n" +
          '        0 as up_last7days,\n' +
          '        asa.ep...',
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/analysts.js:162:20

    console.error
      EPS revisions fetch error: error: column asa.eps_revisions_up_last_30d does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/analysts.js:162:20 {
        length: 127,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '95',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      172 |     });
      173 |   } catch (error) {
    > 174 |     console.error("EPS revisions fetch error:", error);
          |             ^
      175 |     return res.status(500).json({
      176 |       success: false,
      177 |       error: "Failed to fetch EPS revisions",

      at error (routes/analysts.js:174:13)

    console.error
      Database query error: {
        error: 'column asa.eps_revisions_up_last_30d does not exist',
        query: '\n' +
          '      SELECT \n' +
          '        asa.symbol,\n' +
          "        '0q' as period,\n" +
          '        0 as up_last7days,\n' +
          '        asa.ep...',
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/analysts.js:162:20

    console.error
      EPS revisions fetch error: error: column asa.eps_revisions_up_last_30d does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/analysts.js:162:20 {
        length: 127,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '95',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      172 |     });
      173 |   } catch (error) {
    > 174 |     console.error("EPS revisions fetch error:", error);
          |             ^
      175 |     return res.status(500).json({
      176 |       success: false,
      177 |       error: "Failed to fetch EPS revisions",

      at error (routes/analysts.js:174:13)

    console.error
      Database query error: {
        error: 'column asa.eps_revisions_up_last_30d does not exist',
        query: '\n' +
          '      SELECT \n' +
          '        asa.symbol,\n' +
          "        '0q' as period,\n" +
          '        0 as up_last7days,\n' +
          '        asa.ep...',
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/analysts.js:162:20

    console.error
      EPS revisions fetch error: error: column asa.eps_revisions_up_last_30d does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/analysts.js:162:20 {
        length: 127,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '95',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      172 |     });
      173 |   } catch (error) {
    > 174 |     console.error("EPS revisions fetch error:", error);
          |             ^
      175 |     return res.status(500).json({
      176 |       success: false,
      177 |       error: "Failed to fetch EPS revisions",

      at error (routes/analysts.js:174:13)

    console.error
      Database query error: {
        error: 'column er.eps_reported does not exist',
        query: '\n' +
          '      SELECT \n' +
          '        er.symbol,\n' +
          "        '0q' as period,\n" +
          '        er.eps_reported as current,\n' +
          '      ...',
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/analysts.js:205:20

    console.error
      EPS trend fetch error: error: column er.eps_reported does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/analysts.js:205:20 {
        length: 113,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '67',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      215 |     });
      216 |   } catch (error) {
    > 217 |     console.error("EPS trend fetch error:", error);
          |             ^
      218 |     return res.status(500).json({
      219 |       success: false,
      220 |       error: "Failed to fetch EPS trend",

      at error (routes/analysts.js:217:13)

    console.error
      Database query error: {
        error: 'column er.eps_reported does not exist',
        query: '\n' +
          '      SELECT \n' +
          '        er.symbol,\n' +
          "        '0q' as period,\n" +
          '        er.eps_reported as current,\n' +
          '      ...',
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/analysts.js:205:20

    console.error
      EPS trend fetch error: error: column er.eps_reported does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/analysts.js:205:20 {
        length: 113,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '67',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      215 |     });
      216 |   } catch (error) {
    > 217 |     console.error("EPS trend fetch error:", error);
          |             ^
      218 |     return res.status(500).json({
      219 |       success: false,
      220 |       error: "Failed to fetch EPS trend",

      at error (routes/analysts.js:217:13)

    console.log
      üìà [GROWTH] Calculating growth estimates for AAPL

      at log (routes/analysts.js:232:13)

    console.error
      Database query error: {
        error: 'column er.eps_reported does not exist',
        query: '\n' +
          '      SELECT \n' +
          '        er.symbol,\n' +
          '        er.eps_reported,\n' +
          '        er.eps_estimate,\n' +
          '        er.year,...',
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
          at async Promise.all (index 1)
      at routes/analysts.js:266:47

    console.error
      Growth estimates calculation error: error: column er.eps_reported does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at async Promise.all (index 1)
          at /home/stocks/algo/webapp/lambda/routes/analysts.js:266:47 {
        length: 113,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '43',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      482 |     });
      483 |   } catch (error) {
    > 484 |     console.error("Growth estimates calculation error:", error);
          |             ^
      485 |     return res.status(500).json({
      486 |       success: false,
      487 |       error: "Failed to calculate growth estimates",

      at error (routes/analysts.js:484:13)

    console.error
      Database query error: {
        error: 'column er.eps_reported does not exist',
        query: '\n' +
          '      SELECT \n' +
          '        er.symbol,\n' +
          '        er.year as fiscal_year,\n' +
          '        er.eps_reported as earning...',
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
          at async Promise.all (index 0)

    console.log
      üìà [GROWTH] Calculating growth estimates for META

      at log (routes/analysts.js:232:13)

    console.error
      Database query error: {
        error: 'column er.eps_reported does not exist',
        query: '\n' +
          '      SELECT \n' +
          '        er.symbol,\n' +
          '        er.year as fiscal_year,\n' +
          '        er.eps_reported as earning...',
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
          at async Promise.all (index 0)
      at routes/analysts.js:266:47

    console.error
      Growth estimates calculation error: error: column er.eps_reported does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at async Promise.all (index 0)
          at /home/stocks/algo/webapp/lambda/routes/analysts.js:266:47 {
        length: 113,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '75',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      482 |     });
      483 |   } catch (error) {
    > 484 |     console.error("Growth estimates calculation error:", error);
          |             ^
      485 |     return res.status(500).json({
      486 |       success: false,
      487 |       error: "Failed to calculate growth estimates",

      at error (routes/analysts.js:484:13)

    console.error
      Database query error: {
        error: 'column er.eps_reported does not exist',
        query: '\n' +
          '      SELECT \n' +
          '        er.symbol,\n' +
          '        er.eps_reported,\n' +
          '        er.eps_estimate,\n' +
          '        er.year,...',
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
          at async Promise.all (index 1)

    console.error
      Database query error: {
        error: 'column er.revenue does not exist',
        query: 'SELECT \n' +
          "          CONCAT('Q', er.quarter, ' ', er.year) as period,\n" +
          '          NULL as estimate,\n' +
          '     ...',
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
          at async Promise.all (index 1)
      at routes/analysts.js:501:54

    console.error
      Analyst overview fetch error: error: column er.revenue does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at async Promise.all (index 1)
          at /home/stocks/algo/webapp/lambda/routes/analysts.js:501:54 {
        length: 109,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '106',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      595 |     });
      596 |   } catch (error) {
    > 597 |     console.error("Analyst overview fetch error:", error);
          |             ^
      598 |     return res.status(500).json({
      599 |       success: false,
      600 |       error: "Failed to fetch analyst overview",

      at error (routes/analysts.js:597:13)

    console.error
      Database query error: {
        error: 'column er.eps_reported does not exist',
        query: 'SELECT \n' +
          "          CONCAT('Q', er.quarter, ' ', er.year) as period,\n" +
          '          er.eps_estimate as esti...',
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
          at async Promise.all (index 0)

    console.error
      Database query error: {
        error: 'column asa.strong_buy_count does not exist',
        query: 'SELECT \n' +
          "          'current' as period,\n" +
          '          asa.strong_buy_count as strong_buy,\n' +
          '          asa.b...',
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
          at async Promise.all (index 2)

    console.error
      Database query error: {
        error: 'column er.eps_reported does not exist',
        query: 'SELECT \n' +
          "          CONCAT('Q', er.quarter, ' ', er.year) as period,\n" +
          '          er.eps_estimate as esti...',
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
          at async Promise.all (index 0)
      at routes/analysts.js:501:54

    console.error
      Analyst overview fetch error: error: column er.eps_reported does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at async Promise.all (index 0)
          at /home/stocks/algo/webapp/lambda/routes/analysts.js:501:54 {
        length: 114,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '117',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      595 |     });
      596 |   } catch (error) {
    > 597 |     console.error("Analyst overview fetch error:", error);
          |             ^
      598 |     return res.status(500).json({
      599 |       success: false,
      600 |       error: "Failed to fetch analyst overview",

      at error (routes/analysts.js:597:13)

    console.error
      Database query error: {
        error: 'column er.revenue does not exist',
        query: 'SELECT \n' +
          "          CONCAT('Q', er.quarter, ' ', er.year) as period,\n" +
          '          NULL as estimate,\n' +
          '     ...',
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
          at async Promise.all (index 1)

    console.error
      Database query error: {
        error: 'column asa.strong_buy_count does not exist',
        query: 'SELECT \n' +
          "          'current' as period,\n" +
          '          asa.strong_buy_count as strong_buy,\n' +
          '          asa.b...',
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
          at async Promise.all (index 2)

    console.error
      Database query error: {
        error: 'column er.eps_reported does not exist',
        query: 'SELECT \n' +
          "          CONCAT('Q', er.quarter, ' ', er.year) as period,\n" +
          '          er.eps_estimate as esti...',
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
          at async Promise.all (index 0)
      at routes/analysts.js:501:54

    console.error
      Analyst overview fetch error: error: column er.eps_reported does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at async Promise.all (index 0)
          at /home/stocks/algo/webapp/lambda/routes/analysts.js:501:54 {
        length: 114,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '117',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      595 |     });
      596 |   } catch (error) {
    > 597 |     console.error("Analyst overview fetch error:", error);
          |             ^
      598 |     return res.status(500).json({
      599 |       success: false,
      600 |       error: "Failed to fetch analyst overview",

      at error (routes/analysts.js:597:13)

    console.error
      Database query error: {
        error: 'column er.revenue does not exist',
        query: 'SELECT \n' +
          "          CONCAT('Q', er.quarter, ' ', er.year) as period,\n" +
          '          NULL as estimate,\n' +
          '     ...',
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
          at async Promise.all (index 1)

    console.error
      Database query error: {
        error: 'column asa.strong_buy_count does not exist',
        query: 'SELECT \n' +
          "          'current' as period,\n" +
          '          asa.strong_buy_count as strong_buy,\n' +
          '          asa.b...',
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
          at async Promise.all (index 2)

    console.error
      Database query error: {
        error: 'column "date" does not exist',
        query: '\n' +
          '      SELECT DISTINCT date \n' +
          '      FROM analyst_sentiment_analysis \n' +
          '      WHERE (upgrades_last_30d >...',
        params: 'no parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/analysts.js:620:30

    console.error
      Error fetching recent analyst actions: error: column "date" does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/analysts.js:620:30 {
        length: 104,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '24',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      695 |     });
      696 |   } catch (error) {
    > 697 |     console.error("Error fetching recent analyst actions:", error);
          |             ^
      698 |     return res.status(500).json({
      699 |       success: false,
      700 |       error: "Failed to fetch recent analyst actions",

      at error (routes/analysts.js:697:13)

    console.error
      Database query error: {
        error: 'column "date" does not exist',
        query: '\n' +
          '      SELECT DISTINCT date \n' +
          '      FROM analyst_sentiment_analysis \n' +
          '      WHERE (upgrades_last_30d >...',
        params: 'no parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/analysts.js:620:30

    console.error
      Error fetching recent analyst actions: error: column "date" does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/analysts.js:620:30 {
        length: 104,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '24',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      695 |     });
      696 |   } catch (error) {
    > 697 |     console.error("Error fetching recent analyst actions:", error);
          |             ^
      698 |     return res.status(500).json({
      699 |       success: false,
      700 |       error: "Failed to fetch recent analyst actions",

      at error (routes/analysts.js:697:13)

    console.error
      Database query error: {
        error: 'column "date" does not exist',
        query: '\n' +
          '      SELECT DISTINCT date \n' +
          '      FROM analyst_sentiment_analysis \n' +
          '      WHERE (upgrades_last_30d >...',
        params: 'no parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/analysts.js:620:30

    console.error
      Error fetching recent analyst actions: error: column "date" does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/analysts.js:620:30 {
        length: 104,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '24',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      695 |     });
      696 |   } catch (error) {
    > 697 |     console.error("Error fetching recent analyst actions:", error);
          |             ^
      698 |     return res.status(500).json({
      699 |       success: false,
      700 |       error: "Failed to fetch recent analyst actions",

      at error (routes/analysts.js:697:13)

    console.error
      Database query error: {
        error: 'column "date" does not exist',
        query: '\n' +
          '      SELECT DISTINCT date \n' +
          '      FROM analyst_sentiment_analysis \n' +
          '      WHERE (upgrades_last_30d >...',
        params: 'no parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/analysts.js:620:30

    console.error
      Error fetching recent analyst actions: error: column "date" does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/analysts.js:620:30 {
        length: 104,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '24',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      695 |     });
      696 |   } catch (error) {
    > 697 |     console.error("Error fetching recent analyst actions:", error);
          |             ^
      698 |     return res.status(500).json({
      699 |       success: false,
      700 |       error: "Failed to fetch recent analyst actions",

      at error (routes/analysts.js:697:13)

    console.error
      Database query error: {
        error: 'column "date" does not exist',
        query: '\n' +
          '      SELECT DISTINCT date \n' +
          '      FROM analyst_sentiment_analysis \n' +
          '      WHERE (upgrades_last_30d >...',
        params: 'no parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/analysts.js:620:30

    console.error
      Error fetching recent analyst actions: error: column "date" does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/analysts.js:620:30 {
        length: 104,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '24',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      695 |     });
      696 |   } catch (error) {
    > 697 |     console.error("Error fetching recent analyst actions:", error);
          |             ^
      698 |     return res.status(500).json({
      699 |       success: false,
      700 |       error: "Failed to fetch recent analyst actions",

      at error (routes/analysts.js:697:13)

    console.log
      üìä Analyst recommendations requested for AAPL

      at log (routes/analysts.js:709:13)

    console.log
      üìä Analyst recommendations requested for aapl

      at log (routes/analysts.js:709:13)

    console.log
      üìä Analyst recommendations requested for MSFT

      at log (routes/analysts.js:709:13)

    console.log
      üìä Analyst recommendations requested for BRK.A

      at log (routes/analysts.js:709:13)

    console.log
      üìä Analyst recommendations requested for GOOGL

      at log (routes/analysts.js:709:13)

    console.log
      üéØ Price targets requested for AAPL

      at log (routes/analysts.js:812:13)

    console.log
      üéØ Price targets requested for MSFT

      at log (routes/analysts.js:812:13)

    console.log
      üéØ Price targets requested for googl

      at log (routes/analysts.js:812:13)

    console.log
      üéØ Price targets requested for TSLA

      at log (routes/analysts.js:812:13)

    console.log
      üéØ Price targets requested for NVDA

      at log (routes/analysts.js:812:13)

    console.log
      üìâ Analyst downgrades requested - limit: 50, timeframe: 30d

      at log (routes/analysts.js:870:13)

    console.log
      üìâ Analyst downgrades requested - limit: 15, timeframe: 30d

      at log (routes/analysts.js:870:13)

    console.log
      ü§ù Analyst consensus requested for AAPL

      at log (routes/analysts.js:1187:13)

    console.log
      ü§ù Analyst consensus requested for MSFT

      at log (routes/analysts.js:1187:13)

    console.log
      ü§ù Analyst consensus requested for googl

      at log (routes/analysts.js:1187:13)

    console.log
      ü§ù Analyst consensus requested for TSLA

      at log (routes/analysts.js:1187:13)

    console.log
      ü§ù Analyst consensus requested for BRK.A

      at log (routes/analysts.js:1187:13)

    console.log
      ü§ù Analyst consensus requested for META

      at log (routes/analysts.js:1187:13)

    console.error
      Database query error: {
        error: 'column "date" does not exist',
        query: '\n' +
          '      SELECT DISTINCT date \n' +
          '      FROM analyst_sentiment_analysis \n' +
          '      WHERE (upgrades_last_30d >...',
        params: 'no parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/analysts.js:620:30

    console.error
      Error fetching recent analyst actions: error: column "date" does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/analysts.js:620:30 {
        length: 104,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '24',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      695 |     });
      696 |   } catch (error) {
    > 697 |     console.error("Error fetching recent analyst actions:", error);
          |             ^
      698 |     return res.status(500).json({
      699 |       success: false,
      700 |       error: "Failed to fetch recent analyst actions",

      at error (routes/analysts.js:697:13)

    console.error
      Database query error: {
        error: 'column "date" does not exist',
        query: '\n' +
          '      SELECT DISTINCT date \n' +
          '      FROM analyst_sentiment_analysis \n' +
          '      WHERE (upgrades_last_30d >...',
        params: 'no parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/analysts.js:620:30

    console.error
      Error fetching recent analyst actions: error: column "date" does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/analysts.js:620:30 {
        length: 104,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '24',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      695 |     });
      696 |   } catch (error) {
    > 697 |     console.error("Error fetching recent analyst actions:", error);
          |             ^
      698 |     return res.status(500).json({
      699 |       success: false,
      700 |       error: "Failed to fetch recent analyst actions",

      at error (routes/analysts.js:697:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/upgrades ‚Ä∫ should return analyst upgrades with pagination

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      60 |       const response = await request(app).get("/api/analysts/upgrades");
      61 |
    > 62 |       expect(response.status).toBe(200);
         |                               ^
      63 |
      64 |       if (response.status === 200) {
      65 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:62:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/upgrades ‚Ä∫ should handle pagination parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       96 |       );
       97 |
    >  98 |       expect(response.status).toBe(200);
          |                               ^
       99 |
      100 |       if (response.status === 200) {
      101 |         expect(response.body.pagination.page).toBe(2);

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:98:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/upgrades ‚Ä∫ should handle invalid pagination parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      109 |       );
      110 |
    > 111 |       expect(response.status).toBe(200);
          |                               ^
      112 |
      113 |       if (response.status === 200) {
      114 |         // Should use defaults

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:111:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/upgrades ‚Ä∫ should handle zero and negative pagination values

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      123 |       );
      124 |
    > 125 |       expect(response.status).toBe(200);
          |                               ^
      126 |
      127 |       if (response.status === 200) {
      128 |         // Should use defaults for invalid values

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:125:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/upgrades ‚Ä∫ should handle database connection issues

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      150 |       const response = await request(app).get("/api/analysts/upgrades");
      151 |
    > 152 |       expect(response.status).toBe(200);
          |                               ^
      153 |
      154 |       if (response.status === 503) {
      155 |         expect(response.body.error).toContain(

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:152:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/:ticker/earnings-estimates ‚Ä∫ should return earnings estimates for valid ticker

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      167 |       );
      168 |
    > 169 |       expect(response.status).toBe(200);
          |                               ^
      170 |
      171 |       if (response.status === 200) {
      172 |         expect(response.body).toHaveProperty("ticker", "AAPL");

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:169:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/:ticker/earnings-estimates ‚Ä∫ should handle lowercase ticker

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      184 |       );
      185 |
    > 186 |       expect(response.status).toBe(200);
          |                               ^
      187 |
      188 |       if (response.status === 200) {
      189 |         expect(response.body.ticker).toBe("AAPL");

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:186:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/:ticker/earnings-estimates ‚Ä∫ should handle special characters in ticker

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      212 |       );
      213 |
    > 214 |       expect(response.status).toBe(200);
          |                               ^
      215 |
      216 |       if (response.status === 200) {
      217 |         expect(response.body.ticker).toBe("BRK.A");

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:214:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/:ticker/earnings-estimates ‚Ä∫ should handle invalid ticker symbols

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      224 |       );
      225 |
    > 226 |       expect(response.status).toBe(200);
          |                               ^
      227 |
      228 |       if (response.status === 200) {
      229 |         expect(response.body.ticker).toBe("INVALID123");

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:226:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/:ticker/revenue-estimates ‚Ä∫ should return revenue estimates for valid ticker

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      239 |       );
      240 |
    > 241 |       expect(response.status).toBe(200);
          |                               ^
      242 |
      243 |       if (response.status === 200) {
      244 |         expect(response.body).toHaveProperty("ticker", "AAPL");

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:241:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/:ticker/revenue-estimates ‚Ä∫ should handle different ticker formats

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      256 |         );
      257 |
    > 258 |         expect(response.status).toBe(200);
          |                                 ^
      259 |
      260 |         if (response.status === 200) {
      261 |           expect(response.body.ticker).toBe(ticker.toUpperCase());

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:258:33)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/:ticker/earnings-history ‚Ä∫ should return earnings history for valid ticker

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      284 |       );
      285 |
    > 286 |       expect(response.status).toBe(200);
          |                               ^
      287 |
      288 |       if (response.status === 200) {
      289 |         expect(response.body).toHaveProperty("ticker", "AAPL");

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:286:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/:ticker/earnings-history ‚Ä∫ should handle case insensitive ticker

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      314 |       );
      315 |
    > 316 |       expect(response.status).toBe(200);
          |                               ^
      317 |
      318 |       if (response.status === 200) {
      319 |         expect(response.body.ticker).toBe("TESLA");

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:316:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/:ticker/eps-revisions ‚Ä∫ should return EPS revisions for valid ticker

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      328 |       );
      329 |
    > 330 |       expect(response.status).toBe(200);
          |                               ^
      331 |
      332 |       if (response.status === 200) {
      333 |         expect(response.body).toHaveProperty("ticker", "AAPL");

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:330:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/:ticker/eps-revisions ‚Ä∫ should handle ticker case conversion

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      365 |       );
      366 |
    > 367 |       expect(response.status).toBe(200);
          |                               ^
      36::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/targets/TSLA HTTP/1.1" 200 417 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/targets/NVDA HTTP/1.1" 200 417 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/downgrades HTTP/1.1" 200 48850 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/downgrades?limit=15 HTTP/1.1" 200 15350 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/consensus/AAPL HTTP/1.1" 200 337 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/consensus/MSFT HTTP/1.1" 200 337 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/consensus/googl HTTP/1.1" 200 338 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/consensus/TSLA HTTP/1.1" 200 337 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/consensus/BRK.A HTTP/1.1" 200 338 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/consensus/META HTTP/1.1" 200 337 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/upgrades HTTP/1.1" 500 246 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/AAPL%20invalid/earnings-estimates HTTP/1.1" 500 181 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/earnings-estimates HTTP/1.1" 500 219 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/A@PPL/earnings-estimates HTTP/1.1" 500 174 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts HTTP/1.1" 200 625 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/upgrades HTTP/1.1" 500 246 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/recent-actions HTTP/1.1" 500 66 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts HTTP/1.1" 200 625 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts HTTP/1.1" 200 625 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/upgrades HTTP/1.1" 500 246 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/AAPL/earnings-estimates HTTP/1.1" 500 173 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/recent-actions HTTP/1.1" 500 66 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts//earnings-estimates HTTP/1.1" 404 138 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/123/earnings-estimates HTTP/1.1" 500 172 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/upgrades?page=999999&limit=1000 HTTP/1.1" 500 252 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:43 +0000] "GET /api/analysts/BRK%2EA/earnings-estimates HTTP/1.1" 500 174 "-" "-"
8 |
      369 |       if (response.status === 200) {
      370 |         expect(response.body.ticker).toBe("GOOGL");

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:367:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/:ticker/eps-trend ‚Ä∫ should return EPS trend for valid ticker

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      377 |       const response = await request(app).get("/api/analysts/AAPL/eps-trend");
      378 |
    > 379 |       expect(response.status).toBe(200);
          |                               ^
      380 |
      381 |       if (response.status === 200) {
      382 |         expect(response.body).toHaveProperty("ticker", "AAPL");

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:379:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/:ticker/growth-estimates ‚Ä∫ should return growth estimates for valid ticker

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      410 |       );
      411 |
    > 412 |       expect(response.status).toBe(200);
          |                               ^
      413 |
      414 |       if (response.status === 200) {
      415 |         expect(response.body).toHaveProperty("ticker", "AAPL");

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:412:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/:ticker/overview ‚Ä∫ should return comprehensive analyst overview

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      442 |       const response = await request(app).get("/api/analysts/AAPL/overview");
      443 |
    > 444 |       expect(response.status).toBe(200);
          |                               ^
      445 |
      446 |       if (response.status === 200) {
      447 |         expect(response.body).toHaveProperty("ticker", "AAPL");

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:444:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/:ticker/overview ‚Ä∫ should handle different ticker symbols

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      477 |         );
      478 |
    > 479 |         expect(response.status).toBe(200);
          |                                 ^
      480 |
      481 |         if (response.status === 200) {
      482 |           expect(response.body.ticker).toBe(ticker);

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:479:33)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/recent-actions ‚Ä∫ should return recent analyst actions

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      501 |       const response = await request(app).get("/api/analysts/recent-actions");
      502 |
    > 503 |       expect(response.status).toBe(200);
          |                               ^
      504 |
      505 |       if (response.status === 200) {
      506 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:503:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/recent-actions ‚Ä∫ should handle limit parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      533 |       );
      534 |
    > 535 |       expect(response.status).toBe(200);
          |                               ^
      536 |
      537 |       if (response.status === 200) {
      538 |         expect(response.body.data.length).toBeLessThanOrEqual(5);

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:535:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/recent-actions ‚Ä∫ should handle invalid limit parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      545 |       );
      546 |
    > 547 |       expect(response.status).toBe(200);
          |                               ^
      548 |       // Should handle gracefully with default limit
      549 |     });
      550 |

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:547:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/downgrades ‚Ä∫ should return 501 not implemented

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      747 |       const response = await request(app).get("/api/analysts/downgrades");
      748 |
    > 749 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      750 |       expect(response.body).toHaveProperty("success", false);
      751 |       expect(response.body).toHaveProperty(
      752 |         "error",

      at Object.toContain (tests/integration/routes/analysts.integration.test.js:749:41)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/downgrades ‚Ä∫ should handle limit parameter

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      767 |       );
      768 |
    > 769 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      770 |     });
      771 |   });
      772 |

      at Object.toContain (tests/integration/routes/analysts.integration.test.js:769:41)

  ‚óè Analysts Routes ‚Ä∫ Error Handling ‚Ä∫ should handle database connection errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      846 |       const response = await request(app).get("/api/analysts/upgrades");
      847 |
    > 848 |       expect(response.status).toBe(200);
          |                               ^
      849 |
      850 |       if ([500, 503].includes(response.status)) {
      851 |         expect(response.body).toHaveProperty("success", false);

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:848:31)

  ‚óè Analysts Routes ‚Ä∫ Error Handling ‚Ä∫ should handle malformed URLs

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      859 |       );
      860 |
    > 861 |       expect(response.status).toBe(200);
          |                               ^
      862 |     });
      863 |
      864 |     test("should handle extremely long ticker symbols", async () => {

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:861:31)

  ‚óè Analysts Routes ‚Ä∫ Error Handling ‚Ä∫ should handle special characters in ticker

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      876 |       );
      877 |
    > 878 |       expect(response.status).toBe(200);
          |                               ^
      879 |     });
      880 |   });
      881 |

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:878:31)

  ‚óè Analysts Routes ‚Ä∫ Performance ‚Ä∫ should handle concurrent requests

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      933 |
      934 |       responses.forEach((response) => {
    > 935 |         expect(response.status).toBe(200);
          |                                 ^
      936 |       });
      937 |     });
      938 |   });

      at toBe (tests/integration/routes/analysts.integration.test.js:935:33)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/routes/analysts.integration.test.js:934:17)

  ‚óè Analysts Routes ‚Ä∫ Edge Cases ‚Ä∫ should handle numeric tickers

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      952 |       );
      953 |
    > 954 |       expect(response.status).toBe(200);
          |                               ^
      955 |
      956 |       if (response.status === 200) {
      957 |         expect(response.body.ticker).toBe("123");

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:954:31)

  ‚óè Analysts Routes ‚Ä∫ Edge Cases ‚Ä∫ should handle very large pagination values

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      964 |       );
      965 |
    > 966 |       expect(response.status).toBe(200);
          |                               ^
      967 |
      968 |       if (response.status === 200) {
      969 |         expect(response.body.pagination.page).toBe(999999);

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:966:31)

  ‚óè Analysts Routes ‚Ä∫ Edge Cases ‚Ä∫ should handle URL encoded parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      977 |       );
      978 |
    > 979 |       expect(response.status).toBe(200);
          |                               ^
      980 |
      981 |       if (response.status === 200) {
      982 |         expect(response.body.ticker).toBe("BRK.A");

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:979:31)

::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 528 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 528 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 528 "-" "-"
::ffff:127.0.0.1 - test [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 528 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 528 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 200 496 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 200 496 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /health HTTP/1.1" 200 500 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /health HTTP/1.1" 200 500 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /health HTTP/1.1" 200 500 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /health HTTP/1.1" 200 500 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /health HTTP/1.1" 200 500 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /health HTTP/1.1" 200 500 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /health HTTP/1.1" 200 500 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /health HTTP/1.1" 200 500 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /health HTTP/1.1" 200 500 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "POST /api/settings/api-keys HTTP/1.1" 200 75 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "POST /api/settings/api-keys HTTP/1.1" 400 100 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/settings/api-keys HTTP/1.1" 200 261 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "POST /api/settings/api-keys HTTP/1.1" 200 75 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "POST /api/settings/api-keys HTTP/1.1" 200 75 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
FAIL tests/security/authentication-security.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Initializing database connection...

      at log (index.js:362:13)

    console.log
      Database connection established successfully

      at log (index.js:388:17)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Portfolio holdings endpoint called for authenticated user: undefined

      at log (routes/portfolio.js:1662:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Portfolio holdings endpoint called for authenticated user: test-user-123

      at log (routes/portfolio.js:1662:13)

    console.log
      Processing request: GET /health

      at log (index.js:403:11)

    console.log
      Endpoint does not require database connection

      at log (index.js:410:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /health

      at log (index.js:403:11)

    console.log
      Endpoint does not require database connection

      at log (index.js:410:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Processing request: GET /health

      at log (index.js:403:11)

    console.log
      Endpoint does not require database connection

      at log (index.js:410:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Processing request: GET /health

      at log (index.js:403:11)

    console.log
      Endpoint does not require database connection

      at log (index.js:410:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Processing request: GET /health

      at log (index.js:403:11)

    console.log
      Endpoint does not require database connection

      at log (index.js:410:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Processing request: GET /health

      at log (index.js:403:11)

    console.log
      Endpoint does not require database connection

      at log (index.js:410:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Processing request: GET /health

      at log (index.js:403:11)

    console.log
      Endpoint does not require database connection

      at log (index.js:410:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Processing request: GET /health

      at log (index.js:403:11)

    console.log
      Endpoint does not require database connection

      at log (index.js:410:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Processing request: GET /health

      at log (index.js:403:11)

    console.log
      Endpoint does not require database connection

      at log (index.js:410:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Processing request: POST /api/settings/api-keys

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.error
      API key storage error: Error: JWT validation failed: JWT header does not have valid kid claim
          at ApiKeyService.storeApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:662:15)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at storeApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1363:14)
          at /home/stocks/algo/webapp/lambda/routes/settings.js:497:20

      775 |     } catch (error) {
      776 |       this.recordFailure(error);
    > 777 |       console.error("API key storage error:", error);
          |               ^
      778 |       throw new Error(
      779 |         `Failed to store API key for ${provider}: ${error.message}`
      780 |       );

      at ApiKeyService.error [as storeApiKey] (utils/apiKeyService.js:777:15)
      at storeApiKey (utils/apiKeyService.js:1363:14)
      at routes/settings.js:497:20

    console.log
      Security test response status: 200

      at Object.log (tests/security/authentication-security.test.js:224:15)

    console.log
      Security test response body: {
        "success": true,
        "message": "alpaca API key stored successfully",
        "result": {}
      }

      at Object.log (tests/security/authentication-security.test.js:225:15)

    console.log
      Processing request: POST /api/settings/api-keys

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/settings/api-keys

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.error
      Provider listing error: Error: JWT validation failed: JWT header does not have valid kid claim
          at ApiKeyService.listProviders (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1182:15)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at listProviders (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1395:14)
          at /home/stocks/algo/webapp/lambda/routes/settings.js:398:23

      1220 |     } catch (error) {
      1221 |       this.recordFailure(error);
    > 1222 |       console.error("Provider listing error:", error);
           |               ^
      1223 |       throw error; // Re-throw error so wrapper can handle it
      1224 |     }
      1225 |   }

      at ApiKeyService.error [as listProviders] (utils/apiKeyService.js:1222:15)
      at listProviders (utils/apiKeyService.js:1395:14)
      at routes/settings.js:398:23

    console.log
      Processing request: POST /api/settings/api-keys

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.error
      API key storage error: Error: JWT validation failed: JWT header does not have valid kid claim
          at ApiKeyService.storeApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:662:15)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at storeApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1363:14)
          at /home/stocks/algo/webapp/lambda/routes/settings.js:497:20

      775 |     } catch (error) {
      776 |       this.recordFailure(error);
    > 777 |       console.error("API key storage error:", error);
          |               ^
      778 |       throw new Error(
      779 |         `Failed to store API key for ${provider}: ${error.message}`
      780 |       );

      at ApiKeyService.error [as storeApiKey] (utils/apiKeyService.js:777:15)
      at storeApiKey (utils/apiKeyService.js:1363:14)
      at routes/settings.js:497:20

    console.log
      Processing request: POST /api/settings/api-keys

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.error
      API key storage error: Error: JWT validation failed: JWT header does not have valid kid claim
          at ApiKeyService.storeApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:662:15)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at storeApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1363:14)
          at /home/stocks/algo/webapp/lambda/routes/settings.js:497:20

      775 |     } catch (error) {
      776 |       this.recordFailure(error);
    > 777 |       console.error("API key storage error:", error);
          |               ^
      778 |       throw new Error(
      779 |         `Failed to store API key for ${provider}: ${error.message}`
      780 |       );

      at ApiKeyService.error [as storeApiKey] (utils/apiKeyService.js:777:15)
      at storeApiKey (utils/apiKeyService.js:1363:14)
      at routes/settings.js:497:20

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /health

      at log (index.js:403:11)

    console.log
      Endpoint does not require database connection

      at log (index.js:410:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Processing request: POST /api/settings/api-keys

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.warn
      CORS blocked origin: https://malicious-site.com

      256 |         callback(null, true);
      257 |       } else {
    > 258 |         console.warn("CORS blocked origin:", origin);
          |                 ^
      259 |         callback(new Error("Not allowed by CORS"));
      260 |       }
      261 |     },

      at warn (index.js:258:17)
      at node_modules/cors/lib/index.js:219:13
      at optionsCallback (node_modules/cors/lib/index.js:199:9)
      at corsMiddleware (node_modules/cors/lib/index.js:204:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at next (index.js:208:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at internalNext (node_modules/helmet/index.cjs:537:6)
      at xXssProtectionMiddleware (node_modules/helmet/index.cjs:315:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPoweredByMiddleware (node_modules/helmet/index.cjs:308:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xFrameOptionsMiddleware (node_modules/helmet/index.cjs:285:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDownloadOptionsMiddleware (node_modules/helmet/index.cjs:265:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDnsPrefetchControlMiddleware (node_modules/helmet/index.cjs:258:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xContentTypeOptionsMiddleware (node_modules/helmet/index.cjs:250:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at strictTransportSecurityMiddleware (node_modules/helmet/index.cjs:243:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at referrerPolicyMiddleware (node_modules/helmet/index.cjs:211:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at originAgentClusterMiddleware (node_modules/helmet/index.cjs:186:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginResourcePolicyMiddleware (node_modules/helmet/index.cjs:179:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginOpenerPolicyMiddleware (node_modules/helmet/index.cjs:163:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at contentSecurityPolicyMiddleware (node_modules/helmet/index.cjs:128:4)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at helmetMiddleware (node_modules/helmet/index.cjs:539:6)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      AWS Lambda Error: {
        "message": "Not allowed by CORS",
        "url": "/health",
        "method": "GET",
        "timestamp": "2025-09-23T16:31:44.426Z",
        "environment": "test"
      }

      18 |   };
      19 |
    > 20 |   console.error('AWS Lambda Error:', JSON.stringify(errorDetails, null, 2));
         |           ^
      21 |
      22 |   // Default error response
      23 |   let status = 500;

      at error (middleware/errorHandler.js:20:11)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at next (index.js:342:3)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/cors/lib/index.js:221:17
      at callback (index.js:259:9)
      at node_modules/cors/lib/index.js:219:13
      at optionsCallback (node_modules/cors/lib/index.js:199:9)
      at corsMiddleware (node_modules/cors/lib/index.js:204:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at next (index.js:208:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at internalNext (node_modules/helmet/index.cjs:537:6)
      at xXssProtectionMiddleware (node_modules/helmet/index.cjs:315:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPoweredByMiddleware (node_modules/helmet/index.cjs:308:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xFrameOptionsMiddleware (node_modules/helmet/index.cjs:285:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDownloadOptionsMiddleware (node_modules/helmet/index.cjs:265:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDnsPrefetchControlMiddleware (node_modules/helmet/index.cjs:258:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xContentTypeOptionsMiddleware (node_modules/helmet/index.cjs:250:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at strictTransportSecurityMiddleware (node_modules/helmet/index.cjs:243:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at referrerPolicyMiddleware (node_modules/helmet/index.cjs:211:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at originAgentClusterMiddleware (node_modules/helmet/index.cjs:186:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginResourcePolicyMiddleware (node_modules/helmet/index.cjs:179:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginOpenerPolicyMiddleware (node_modules/helmet/index.cjs:163:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at contentSecurityPolicyMiddleware (node_modules/helmet/index.cjs:128:4)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at helmetMiddleware (node_modules/helmet/index.cjs:539:6)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)

    console.log
      Processing request: GET /api/nonexistent-endpoint

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/portfolio/holdings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Authentication Security Tests ‚Ä∫ JWT Token Validation ‚Ä∫ should reject requests without authorization header

    expect(received).toMatch(expected)

    Expected pattern: /authentication.*required/i
    Received string:  "Access token required"

      25 |         .expect(401);
      26 |
    > 27 |       expect(response.body.error).toMatch(/authentication.*required/i);
         |                                   ^
      28 |       expect(response.body.code).toBe("MISSING_TOKEN");
      29 |     });
      30 |

      at Object.toMatch (tests/security/authentication-security.test.js:27:35)

  ‚óè Authentication Security Tests ‚Ä∫ JWT Token Validation ‚Ä∫ should reject expired JWT tokens

    expect(received).toMatch(expected)

    Matcher error: received value must be a string

    Received has value: undefined

      61 |
      62 |       expect(response.body.error).toMatch(/invalid.*token|token.*expired/i);
    > 63 |       expect(response.body.code).toMatch(/TOKEN_EXPIRED|INVALID_TOKEN/);
         |                                  ^
      64 |     });
      65 |
      66 |     test("should reject tokens with invalid signatures", async () => {

      at Object.toMatch (tests/security/authentication-security.test.js:63:34)

  ‚óè Authentication Security Tests ‚Ä∫ JWT Token Validation ‚Ä∫ should reject tokens with invalid signatures

    expect(received).toBe(expected) // Object.is equality

    Expected: "INVALID_TOKEN"
    Received: undefined

      73 |
      74 |       expect(response.body.error).toMatch(/invalid.*token/i);
    > 75 |       expect(response.body.code).toBe("INVALID_TOKEN");
         |                                  ^
      76 |     });
      77 |
      78 |     test("should reject tokens with missing required claims", async () => {

      at Object.toBe (tests/security/authentication-security.test.js:75:34)

  ‚óè Authentication Security Tests ‚Ä∫ JWT Token Validation ‚Ä∫ should reject tokens with missing required claims

    expected 401 "Unauthorized", got 200 "OK"

      85 |         .get("/api/portfolio/holdings")
      86 |         .set("Authorization", `Bearer ${tokenWithoutSub}`)
    > 87 |         .expect(401);
         |          ^
      88 |
      89 |       expect(response.body.error).toBeDefined();
      90 |       expect(response.body.code).toBeDefined();

      at Object.expect (tests/security/authentication-security.test.js:87:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Authentication Security Tests ‚Ä∫ JWT Token Validation ‚Ä∫ should reject tokens with future issued at time

    expected 401 "Unauthorized", got 200 "OK"

      100 |         .get("/api/portfolio/holdings")
      101 |         .set("Authorization", `Bearer ${futureToken}`)
    > 102 |         .expect(401);
          |          ^
      103 |
      104 |       expect(response.body.error).toBeDefined();
      105 |     });

      at Object.expect (tests/security/authentication-security.test.js:102:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Authentication Security Tests ‚Ä∫ API Key Security ‚Ä∫ should encrypt API keys before storage

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      234 |
      235 |       // Verify that the API key service was called
    > 236 |       expect(storeSpy).toHaveBeenCalled();
          |                        ^
      237 |
      238 |       storeSpy.mockRestore();
      239 |     });

      at Object.toHaveBeenCalled (tests/security/authentication-security.test.js:236:24)

  ‚óè Authentication Security Tests ‚Ä∫ API Key Security ‚Ä∫ should use different salts for different users

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 2
    Received number of calls: 0

      314 |         });
      315 |
    > 316 |       expect(storeSpy).toHaveBeenCalledTimes(2);
          |                        ^
      317 |
      318 |       // Verify different users were passed to the service
      319 |       const call1User = storeSpy.mock.calls[0][0];

      at Object.toHaveBeenCalledTimes (tests/security/authentication-security.test.js:316:24)

  ‚óè Authentication Security Tests ‚Ä∫ Error Information Disclosure ‚Ä∫ should use generic error messages for security-sensitive operations

    expect(received).toMatch(expected)

    Expected pattern: /authentication|authorization/i
    Received string:  "Access token required"

      482 |
      483 |       // Should not reveal whether the provider exists or what went wrong specifically
    > 484 |       expect(response.body.error).toMatch(/authentication|authorization/i);
          |                                   ^
      485 |       expect(response.body.error).not.toMatch(
      486 |         /provider.*not.*found|invalid.*provider/i
      487 |       );

      at Object.toMatch (tests/security/authentication-security.test.js:484:35)

::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /health HTTP/1.1" 200 500 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "POST /api/settings/api-keys HTTP/1.1" 400 100 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/nonexistent-endpoint HTTP/1.1" 404 638 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/dividend/AAPL HTTP/1.1" 200 4461 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/dividend/MSFT HTTP/1.1" 200 4464 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/dividend/JNJ HTTP/1.1" 200 4484 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/dividend/KO HTTP/1.1" 200 4480 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/dividend/PFE HTTP/1.1" 200 4468 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/dividend/AAPL HTTP/1.1" 200 4461 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/dividend/MSFT?timeframe=1Y HTTP/1.1" 200 4464 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/dividend/MSFT?timeframe=2Y HTTP/1.1" 200 4464 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/dividend/MSFT?timeframe=5Y HTTP/1.1" 200 4464 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/dividend/MSFT?timeframe=10Y HTTP/1.1" 200 4464 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/dividend/MSFT?timeframe=max HTTP/1.1" 200 4464 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:44 +0000] "GET /api/dividend/TSLA HTTP/1.1" 200 593 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/INVALID123 HTTP/1.1" 404 132 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/JNJ HTTP/1.1" 200 4484 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/calendar HTTP/1.1" 200 10390 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/calendar?start_date=2025-01-01&end_date=2025-03-31 HTTP/1.1" 200 10390 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/calendar?min_amount=1.00 HTTP/1.1" 200 10390 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/calendar?sector=Technology HTTP/1.1" 404 237 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/aristocrats HTTP/1.1" 500 161 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/aristocrats?min_years=25 HTTP/1.1" 500 161 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/aristocrats?min_yield=2.0&max_yield=6.0 HTTP/1.1" 500 161 "-" "-"
FAIL tests/integration/routes/dividend.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üí∞ Dividend data requested for AAPL

      at log (routes/dividend.js:266:13)

    console.log
      üí∞ Dividend data requested for MSFT

      at log (routes/dividend.js:266:13)

    console.log
      üí∞ Dividend data requested for JNJ

      at log (routes/dividend.js:266:13)

    console.log
      üí∞ Dividend data requested for KO

      at log (routes/dividend.js:266:13)

    console.log
      üí∞ Dividend data requested for PFE

      at log (routes/dividend.js:266:13)

    console.log
      üí∞ Dividend data requested for AAPL

      at log (routes/dividend.js:266:13)

    console.log
      üí∞ Dividend data requested for MSFT

      at log (routes/dividend.js:266:13)

    console.log
      üí∞ Dividend data requested for MSFT

      at log (routes/dividend.js:266:13)

    console.log
      üí∞ Dividend data requested for MSFT

      at log (routes/dividend.js:266:13)

    console.log
      üí∞ Dividend data requested for MSFT

      at log (routes/dividend.js:266:13)

    console.log
      üí∞ Dividend data requested for MSFT

      at log (routes/dividend.js:266:13)

    console.log
      üí∞ Dividend data requested for TSLA

      at log (routes/dividend.js:266:13)

    console.log
      üí∞ Dividend data requested for INVALID123

      at log (routes/dividend.js:266:13)

    console.log
      üí∞ Dividend data requested for JNJ

      at log (routes/dividend.js:266:13)

    console.log
      üí∞ Dividends calendar requested - symbol: all, days_ahead: 30

      at log (routes/dividend.js:33:13)

    console.log
      üí∞ Dividends calendar requested - symbol: all, days_ahead: 30

      at log (routes/dividend.js:33:13)

    console.log
      üí∞ Dividends calendar requested - symbol: all, days_ahead: 30

      at log (routes/dividend.js:33:13)

    console.log
      üí∞ Dividends calendar requested - symbol: all, days_ahead: 30

      at log (routes/dividend.js:33:13)

    console.log
      üí∞ Dividend aristocrats requested - min_years: 25

      at log (routes/dividend.js:109:13)

    console.error
      Database query error: {
        error: 'could not determine data type of parameter $1',
        query: '\n' +
          '      SELECT\n' +
          '        fm.symbol,\n' +
          '        COALESCE(cp.short_name, fm.symbol) as company_name,\n' +
          '       ...',
        params: '4 parameters',
        code: '42P18'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/dividend.js:130:20

    console.error
      Aristocrats error: error: could not determine data type of parameter $1
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/dividend.js:130:20 {
        length: 124,
        severity: 'ERROR',
        code: '42P18',
        detail: undefined,
        hint: undefined,
        position: undefined,
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'postgres.c',
        line: '740',
        routine: 'pg_analyze_and_rewrite_varparams'
      }

      162 |     });
      163 |   } catch (error) {
    > 164 |     console.error("Aristocrats error:", error);
          |             ^
      165 |     res.status(500).json({
      166 |       success: false,
      167 |       error: "Failed to fetch dividend aristocrats",

      at error (routes/dividend.js:164:13)

    console.log
      üí∞ Dividend aristocrats requested - min_years: 25

      at log (routes/dividend.js:109:13)

    console.error
      Database query error: {
        error: 'could not determine data type of parameter $1',
        query: '\n' +
          '      SELECT\n' +
          '        fm.symbol,\n' +
          '        COALESCE(cp.short_name, fm.symbol) as company_name,\n' +
          '       ...',
        params: '4 parameters',
        code: '42P18'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/dividend.js:130:20

    console.error
      Aristocrats error: error: could not determine data type of parameter $1
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/dividend.js:130:20 {
        length: 124,
        severity: 'ERROR',
        code: '42P18',
        detail: undefined,
        hint: undefined,
        position: undefined,
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'postgres.c',
        line: '740',
        routine: 'pg_analyze_and_rewrite_varparams'
      }

      162 |     });
      163 |   } catch (error) {
    > 164 |     console.error("Aristocrats error:", error);
          |             ^
      165 |     res.status(500).json({
      166 |       success: false,
      167 |       error: "Failed to fetch dividend aristocrats",

      at error (routes/dividend.js:164:13)

    console.log
      üí∞ Dividend aristocrats requested - min_years: 25

      at log (routes/dividend.js:109:13)

    console.error
      Database query error: {
        error: 'could not determine data type of parameter $1',
        query: '\n' +
          '      SELECT\n' +
          '        fm.symbol,\n' +
          '        COALESCE(cp.short_name, fm.symbol) as company_name,\n' +
          '       ...',
        params: '4 parameters',
        code: '42P18'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/dividend.js:130:20

    console.error
      Aristocrats error: error: could not determine data type of parameter $1
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/dividend.js:130:20 {
        length: 124,
        severity: 'ERROR',
        code: '42P18',
        detail: undefined,
        hint: undefined,
        position: undefined,
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'postgres.c',
        line: '740',
        routine: 'pg_analyze_and_rewrite_varparams'
      }

      162 |     });
      163 |   } catch (error) {
    > 164 |     console.error("Aristocrats error:", error);
          |             ^
      165 |     res.status(500).json({
      166 |       success: false,
      167 |       error: "Failed to fetch dividend aristocrats",

      at error (routes/dividend.js:164:13)

    console.log
      üí∞ Dividend data requested for GROWTH

      at log (routes/dividend.js:266:13)

    console.log
      üí∞ Dividend data requested for GROWTH

      at log (routes/dividend.js:266:13)

    console.log
      üí∞ Dividend data requested for GROWTH

      at log (routes/dividend.js:266:13)

    console.log
      üí∞ Dividend screener requested with filters

      at log (routes/dividend.js:235:13)

    console.log
      üí∞ Dividend screener requested with filters

      at log (routes/dividend.js:235:13)

    console.log
      üí∞ Dividend screener requested with filters

      at log (routes/dividend.js:235:13)

    console.log
      üí∞ Dividend screener requested with filters

      at log (routes/dividend.js:235:13)

    console.log
      üí∞ Dividend screener requested with filters

      at log (routes/dividend.js:235:13)

    console.log
      üí∞ Dividend screener requested with filters

      at log (routes/dividend.js:235:13)

    console.log
      üí∞ Dividend screener requested with filters

      at log (routes/dividend.js:235:13)

    console.log
      üí∞ Dividend screener requested with filters

      at log (routes/dividend.js:235:13)

    console.log
      üí∞ Dividend screener requested with filters

      at log (routes/dividend.js:235:13)

    console.log
      üí∞ Dividend data requested for FORECAST

      at log (routes/dividend.js:266:13)

    console.log
      üí∞ Dividend data requested for FORECAST

      at log (routes/dividend.js:266:13)

    console.log
      üí∞ Dividend data requested for AAPL

      at log (routes/dividend.js:266:13)

    console.log
      üí∞ Dividend data requested for MSFT

      at log (routes/dividend.js:266:13)

    console.log
      üí∞ Dividend data requested for JNJ

      at log (routes/dividend.js:266:13)

    console.log
      üí∞ Dividend data requested for KO

      at log (routes/dividend.js:266:13)

    console.log
      üí∞ Dividend data requested for PFE

      at log (routes/dividend.js:266:13)

    console.log
      üí∞ Dividends calendar requested - symbol: all, days_ahead: 30

      at log (routes/dividend.js:33:13)

    console.log
      üí∞ Dividends calendar requested - symbol: all, days_ahead: 30

      at log (routes/dividend.js:33:13)

    console.log
      üí∞ Dividends calendar requested - symbol: all, days_ahead: 30

      at log (routes/dividend.js:33:13)

    console.log
      üí∞ Dividend data requested for AAPL

      at log (routes/dividend.js:266:13)

    console.log
      üí∞ Dividend screener requested with filters

      at log (routes/dividend.js:235:13)

    console.log
      üí∞ Dividend screener requested with filters

      at log (routes/dividend.js:235:13)

    console.log
      üí∞ Dividend screener requested with filters

      at log (routes/dividend.js:235:13)

    console.log
      üí∞ Dividend screener requested with filters

      at log (routes/dividend.js:235:13)

    console.log
      üí∞ Dividends calendar requested - symbol: all, days_ahead: 30

      at log (routes/dividend.js:33:13)

    console.log
      üí∞ Dividend data requested for BRK.A

      at log (routes/dividend.js:266:13)

    console.log
      üí∞ Dividend data requested for AAPL'; DROP TABLE DIVIDENDS; --

      at log (routes/dividend.js:266:13)

    console.log
      üí∞ Dividend data requested for AAPL

      at log (routes/dividend.js:266:13)

    console.log
      üí∞ Dividend data requested for JNJ

      at log (routes/dividend.js:266:13)

    console.log
      üí∞ Dividend screener requested with filters

      at log (routes/dividend.js:235:13)

    console.log
      üí∞ Dividend screener requested with filters

      at log (routes/dividend.js:235:13)

    console.log
      üí∞ Dividend screener requested with filters

      at log (routes/dividend.js:235:13)

    console.log
      üí∞ Dividend screener requested with filters

      at log (routes/dividend.js:235:13)

    console.log
      üí∞ Dividend screener requested with filters

      at log (routes/dividend.js:235:13)

    console.log
      üí∞ Dividend screener requested with filters

      at log (routes/dividend.js:235:13)

    console.log
      üí∞ Dividend screener requested with filters

      at log (routes/dividend.js:235:13)

    console.log
      üí∞ Dividend screener requested with filters

      at log (routes/dividend.js:235:13)

    console.log
      üí∞ Dividend screener requested with filters

      at log (routes/dividend.js:235:13)

    console.log
      üí∞ Dividend screener requested with filters

      at log (routes/dividend.js:235:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Dividend Routes Integration Tests ‚Ä∫ GET /api/dividend/:symbol (Stock Dividend Data) ‚Ä∫ should handle non-dividend paying stocks

    expect(received).toEqual(expected) // deep equality

    - Expected  -  1
    + Received  + 11

    - Array []
    + Array [
    +   Object {
    +     "amount": 0,
    +     "currency": "USD",
    +     "dividend_type": "regular",
    +     "ex_date": "2025-10-05T05:00:00.000Z",
    +     "frequency": "None",
    +     "payment_date": "2025-10-20T05:00:00.000Z",
    +     "record_date": "2025-10-07T05:00:00.000Z",
    +   },
    + ]

      92 |
      93 |         if (response.status === 200) {
    > 94 |           expect(response.body.data.dividends).toEqual([]);
         |                                                ^
      95 |           expect(response.body.data.dividend_yield).toBeNull();
      96 |         }
      97 |       }

      at Object.toEqual (tests/integration/routes/dividend.integration.test.js:94:48)

  ‚óè Dividend Routes Integration Tests ‚Ä∫ GET /api/dividend/calendar (Dividend Calendar) ‚Ä∫ should return upcoming dividend events

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      129 |         expect(response.body).toHaveProperty("success", true);
      130 |         expect(response.body).toHaveProperty("data");
    > 131 |         expect(Array.isArray(response.body.data)).toBe(true);
          |                                                   ^
      132 |         expect(response.body).toHaveProperty("period");
      133 |
      134 |         if (response.body.data.length > 0) {

      at Object.toBe (tests/integration/routes/dividend.integration.test.js:131:51)

  ‚óè Dividend Routes Integration Tests ‚Ä∫ GET /api/dividend/calendar (Dividend Calendar) ‚Ä∫ should handle sector filter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      186 |         );
      187 |
    > 188 |         expect([200, 400, 500, 503].includes(response.status)).toBe(true);
          |                                                                ^
      189 |       }
      190 |     });
      191 |   });

      at Object.toBe (tests/integration/routes/dividend.integration.test.js:188:64)

  ‚óè Dividend Routes Integration Tests ‚Ä∫ GET /api/dividend/aristocrats (Dividend Aristocrats) ‚Ä∫ should return dividend aristocrat stocks

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      195 |       const response = await request(app).get("/api/dividend/aristocrats");
      196 |
    > 197 |       expect(response.status).toBe(200);
          |                               ^
      198 |
      199 |       if (response.status === 200) {
      200 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/dividend.integration.test.js:197:31)

  ‚óè Dividend Routes Integration Tests ‚Ä∫ GET /api/dividend/growth (Dividend Growth Analysis) ‚Ä∫ should return dividend growth analysis

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      251 |       );
      252 |
    > 253 |       expect(response.status).toBe(200);
          |                               ^
      254 |
      255 |       if (response.status === 200) {
      256 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/dividend.integration.test.js:253:31)

  ‚óè Dividend Routes Integration Tests ‚Ä∫ GET /api/dividend/growth (Dividend Growth Analysis) ‚Ä∫ should handle growth period parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      277 |         );
      278 |
    > 279 |         expect([200, 400].includes(response.status)).toBe(true);
          |                                                      ^
      280 |       }
      281 |     });
      282 |

      at Object.toBe (tests/integration/routes/dividend.integration.test.js:279:54)

  ‚óè Dividend Routes Integration Tests ‚Ä∫ GET /api/dividend/screener (Dividend Stock Screener) ‚Ä∫ should return dividend stock screening results

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      305 |       const response = await request(app).get("/api/dividend/screener");
      306 |
    > 307 |       expect(response.status).toBe(200);
          |                               ^
      308 |
      309 |       if (response.status === 200) {
      310 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/dividend.integration.test.js:307:31)

  ‚óè Dividend Routes Integration Tests ‚Ä∫ GET /api/dividend/forecast (Dividend Forecasting) ‚Ä∫ should return dividend payment forecasts

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      388 |       );
      389 |
    > 390 |       expect(response.status).toBe(200);
          |                               ^
      391 |
      392 |       if (response.status === 200) {
      393 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/dividend.integration.test.js:390:31)

  ‚óè Dividend Routes Integration Tests ‚Ä∫ GET /api/dividend/forecast (Dividend Forecasting) ‚Ä∫ should handle forecast horizon parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      414 |         );
      415 |
    > 416 |         expect([200, 400].includes(response.status)).toBe(true);
          |                                                      ^
      417 |       }
      418 |     });
      419 |   });

      at Object.toBe (tests/integration/routes/dividend.integration.test.js:416:54)

  ‚óè Dividend Routes Integration Tests ‚Ä∫ Performance and Edge Cases ‚Ä∫ should handle special symbol characters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 400

      495 |         const response = await request(app).get(`/api/dividend/${symbol}`);
      496 |
    > 497 |         expect(response.status).toBe(200);
          |                                 ^
      498 |       }
      499 |     });
      500 |

      at Object.toBe (tests/integration/routes/dividend.integration.test.js:497:33)

  ‚óè Dividend Routes Integration Tests ‚Ä∫ Performance and Edge Cases ‚Ä∫ should validate yield calculation accuracy

    expect(received).toBeLessThan(expected)

    Expected: < 50
    Received:   95.20000000000002

      527 |         const dividendYield = response.body.data.dividend_yield;
      528 |         expect(dividendYield).toBeGreaterThanOrEqual(0);
    > 529 |         expect(dividendYield).toBeLessThan(50); // Reasonable upper bound for dividend yields
          |                               ^
      530 |         expect(Number.isFinite(dividendYield)).toBe(true);
      531 |       }
      532 |     });

      at Object.toBeLessThan (tests/integration/routes/dividend.integration.test.js:529:31)

  ‚óè Dividend Routes Integration Tests ‚Ä∫ Performance and Edge Cases ‚Ä∫ should handle stress testing with multiple concurrent requests

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      543 |       responses.forEach((response) => {
      544 |         if (response.status) {
    > 545 |           expect(response.status).toBe(200);
          |                                   ^
      546 |         }
      547 |       });
      548 |     });

      at toBe (tests/integration/routes/dividend.integration.test.js:545:35)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/routes/dividend.integration.test.js:543:17)

::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/growth?symbol=AAPL HTTP/1.1" 404 151 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/growth?symbol=MSFT&period=1Y HTTP/1.1" 404 151 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/growth?symbol=JNJ HTTP/1.1" 404 151 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/screener HTTP/1.1" 500 280 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/screener?min_yield=3.0&max_yield=8.0 HTTP/1.1" 500 279 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/screener?max_payout_ratio=60 HTTP/1.1" 500 279 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/screener?min_market_cap=1000000000 HTTP/1.1" 500 289 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/screener?min_yield=2.5&max_payout_ratio=70&min_market_cap=5000000000&sector=Technology HTTP/1.1" 500 297 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/screener?sort=yield&order=desc HTTP/1.1" 500 280 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/screener?sort=payout_ratio&order=desc HTTP/1.1" 500 280 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/screener?sort=growth_rate&order=desc HTTP/1.1" 500 280 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/screener?sort=market_cap&order=desc HTTP/1.1" 500 280 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/forecast?symbol=AAPL HTTP/1.1" 404 151 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/forecast?symbol=MSFT&horizon=1Q HTTP/1.1" 404 151 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/AAPL HTTP/1.1" 200 4461 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/JNJ HTTP/1.1" 200 4484 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/MSFT HTTP/1.1" 200 4464 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/PFE HTTP/1.1" 200 4468 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/KO HTTP/1.1" 200 4480 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/calendar?start_date=invalid-date HTTP/1.1" 200 10390 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/calendar?end_date=2025-13-40 HTTP/1.1" 200 10390 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/calendar?start_date=2025-12-31&end_date=2025-01-01 HTTP/1.1" 200 10390 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/AAPL HTTP/1.1" 200 4461 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/screener?min_yield=invalid HTTP/1.1" 500 283 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/screener?max_payout_ratio=-50 HTTP/1.1" 500 280 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/screener?min_market_cap=abc HTTP/1.1" 500 283 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/screener?min_yield=10&max_yield=2 HTTP/1.1" 500 280 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/calendar HTTP/1.1" 200 10390 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/BRK.A HTTP/1.1" 400 144 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/AAPL%27%3B%20DROP%20TABLE%20dividends%3B%20-- HTTP/1.1" 400 144 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/AAPL HTTP/1.1" 200 4461 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/JNJ HTTP/1.1" 200 4484 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/screener HTTP/1.1" 500 280 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/screener HTTP/1.1" 500 280 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/screener HTTP/1.1" 500 280 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/screener HTTP/1.1" 500 280 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/screener HTTP/1.1" 500 280 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/screener HTTP/1.1" 500 280 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/screener HTTP/1.1" 500 280 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/screener HTTP/1.1" 500 280 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/screener HTTP/1.1" 500 280 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/dividend/screener HTTP/1.1" 500 280 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades HTTP/1.1" 200 152 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades/health HTTP/1.1" 200 142 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades/recent HTTP/1.1" 500 216 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades/recent?limit=10&days=30&symbol=AAPL&type=buy&status=executed HTTP/1.1" 500 219 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades/recent HTTP/1.1" 500 216 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades/recent HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades/import/status HTTP/1.1" 200 69 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades/import/status HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "POST /api/trades/import/alpaca HTTP/1.1" 400 129 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "POST /api/trades/import/alpaca HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades/summary HTTP/1.1" 200 181 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades/summary HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades/positions HTTP/1.1" 200 2809 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades/positions?status=open&limit=10&offset=0 HTTP/1.1" 200 746 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades/positions HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades/analytics HTTP/1.1" 500 178 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades/analytics?timeframe=1W HTTP/1.1" 500 178 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades/analytics HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades/analytics/overview HTTP/1.1" 200 289 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades/analytics/overview HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades/history HTTP/1.1" 200 8552 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades/history?symbol=AAPL&limit=10&offset=0&sortBy=execution_time&sortOrder=desc HTTP/1.1" 200 1916 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades/history HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades/performance HTTP/1.1" 200 92 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades/performance HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades/insights HTTP/1.1" 200 1484 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades/insights?limit=5 HTTP/1.1" 200 766 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades/insights HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades/export HTTP/1.1" 200 157 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades/export?format=csv HTTP/1.1" 200 157 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades/export?startDate=2023-01-01&endDate=2023-12-31 HTTP/1.1" 200 157 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades/export HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "DELETE /api/trades/data HTTP/1.1" 400 98 "-" "-"
FAIL tests/integration/routes/trades.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üïí Getting recent trades for user: dev-user-bypass, last 7 days

      at log (routes/trades.js:250:13)

    console.error
      Database query error: {
        error: 'column th.side does not exist',
        query: '\n' +
          '      WITH recent_trades AS (\n' +
          '        SELECT \n' +
          '          th.id,\n' +
          '          th.symbol,\n' +
          '          th.si...',
        params: '2 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/trades.js:361:21

    console.error
      Recent trades error: error: column th.side does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/trades.js:361:21 {
        length: 157,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: 'Perhaps you meant to reference the column "th.id".',
        position: '96',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3729',
        routine: 'errorMissingColumn'
      }

      507 |     });
      508 |   } catch (error) {
    > 509 |     console.error("Recent trades error:", error);
          |             ^
      510 |     const { limit = 20, days = 7, symbol, type = "all" } = req.query;
      511 |     res.status(500).json({
      512 |       success: false,

      at error (routes/trades.js:509:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üïí Getting recent trades for user: dev-user-bypass, last 30 days

      at log (routes/trades.js:250:13)

    console.error
      Database query error: {
        error: 'column th.side does not exist',
        query: '\n' +
          '      WITH recent_trades AS (\n' +
          '        SELECT \n' +
          '          th.id,\n' +
          '          th.symbol,\n' +
          '          th.si...',
        params: '5 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/trades.js:361:21

    console.error
      Recent trades error: error: column th.side does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/trades.js:361:21 {
        length: 157,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: 'Perhaps you meant to reference the column "th.id".',
        position: '96',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3729',
        routine: 'errorMissingColumn'
      }

      507 |     });
      508 |   } catch (error) {
    > 509 |     console.error("Recent trades error:", error);
          |             ^
      510 |     const { limit = 20, days = 7, symbol, type = "all" } = req.query;
      511 |     res.status(500).json({
      512 |       success: false,

      at error (routes/trades.js:509:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üïí Getting recent trades for user: dev-user-bypass, last 7 days

      at log (routes/trades.js:250:13)

    console.error
      Database query error: {
        error: 'column th.side does not exist',
        query: '\n' +
          '      WITH recent_trades AS (\n' +
          '        SELECT \n' +
          '          th.id,\n' +
          '          th.symbol,\n' +
          '          th.si...',
        params: '2 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/trades.js:361:21

    console.error
      Recent trades error: error: column th.side does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/trades.js:361:21 {
        length: 157,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: 'Perhaps you meant to reference the column "th.id".',
        position: '96',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3729',
        routine: 'errorMissingColumn'
      }

      507 |     });
      508 |   } catch (error) {
    > 509 |     console.error("Recent trades error:", error);
          |             ^
      510 |     const { limit = 20, days = 7, symbol, type = "all" } = req.query;
      511 |     res.status(500).json({
      512 |       success: false,

      at error (routes/trades.js:509:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Getting trade import status for user: dev-user-bypass

      at log (routes/trades.js:760:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîÑ [TRADES] Import requested for user: dev-user-bypass

      at log (routes/trades.js:950:13)

    console.error
      API key retrieval error: Error: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)
          at ApiKeyService.getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:797:15)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1370:14)
          at getUserApiKey (/home/stocks/algo/webapp/lambda/routes/trades.js:535:10)
          at /home/stocks/algo/webapp/lambda/routes/trades.js:953:25

      905 |     } catch (error) {
      906 |       this.recordFailure(error);
    > 907 |       console.error("API key retrieval error:", error);
          |               ^
      908 |
      909 |       if (error.message.includes("circuit breaker")) {
      910 |         throw error;

      at ApiKeyService.error [as getApiKey] (utils/apiKeyService.js:907:15)
      at getApiKey (utils/apiKeyService.js:1370:14)
      at getUserApiKey (routes/trades.js:535:10)
      at routes/trades.js:953:25

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.error
      Database query error: {
        error: 'column "side" does not exist',
        query: '\n' +
          '        SELECT \n' +
          '          COUNT(*) as total_trades,\n' +
          "          COUNT(CASE WHEN side = 'buy' THEN 1 E...",
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at TradeAnalyticsService.getTradeAnalysisSummary (routes/trades.js:657:29)
      at routes/trades.js:1025:21

    console.error
      Trade analysis summary error: error: column "side" does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at TradeAnalyticsService.getTradeAnalysisSummary (/home/stocks/algo/webapp/lambda/routes/trades.js:657:29)
          at /home/stocks/algo/webapp/lambda/routes/trades.js:1025:21 {
        length: 104,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '80',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      687 |       };
      688 |     } catch (error) {
    > 689 |       console.error("Trade analysis summary error:", error);
          |               ^
      690 |       return {
      691 |         insights: [`Error: ${error.message}`],
      692 |         summary: "Analysis unavailable - database error",

      at TradeAnalyticsService.error [as getTradeAnalysisSummary] (routes/trades.js:689:15)
      at routes/trades.js:1025:21

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Trade analytics requested for user: dev-user-bypass, timeframe: 3M

      at log (routes/trades.js:1118:13)

    console.error
      Database query error: {
        error: 'column s.short_name does not exist',
        query: '\n' +
          '        SELECT \n' +
          '          ph.symbol,\n' +
          '          ph.side,\n' +
          '          ph.quantity,\n' +
          '          ph.avg_ent...',
        params: '2 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/trades.js:1295:34

    console.error
      Database query failed for trade analytics: column s.short_name does not exist

      1338 |       }));
      1339 |     } catch (dbError) {
    > 1340 |       console.error(
           |               ^
      1341 |         "Database query failed for trade analytics:",
      1342 |         dbError.message
      1343 |       );

      at error (routes/trades.js:1340:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Trade analytics requested for user: dev-user-bypass, timeframe: 1W

      at log (routes/trades.js:1118:13)

    console.error
      Database query error: {
        error: 'column s.short_name does not exist',
        query: '\n' +
          '        SELECT \n' +
          '          ph.symbol,\n' +
          '          ph.side,\n' +
          '          ph.quantity,\n' +
          '          ph.avg_ent...',
        params: '2 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/trades.js:1295:34

    console.error
      Database query failed for trade analytics: column s.short_name does not exist

      1338 |       }));
      1339 |     } catch (dbError) {
    > 1340 |       console.error(
           |               ^
      1341 |         "Database query failed for trade analytics:",
      1342 |         dbError.message
      1343 |       );

      at error (routes/trades.js:1340:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Trade analytics requested for user dev-user-bypass, timeframe: 3M

      at log (routes/trades.js:1393:13)

    console.log
      üìä Found 0 stored trades for analytics

      at log (routes/trades.js:1510:17)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìà Trade history request received for user: dev-user-bypass

      at log (routes/trades.js:1945:13)

    console.log
      üîë Retrieving API credentials for Alpaca...

      at log (routes/trades.js:1970:15)

    console.error
      API key retrieval error: Error: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)
          at ApiKeyService.getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:797:15)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1370:14)
          at getUserApiKey (/home/stocks/algo/webapp/lambda/routes/trades.js:535:10)
          at /home/stocks/algo/webapp/lambda/routes/trades.js:1971:27

      905 |     } catch (error) {
      906 |       this.recordFailure(error);
    > 907 |       console.error("API key retrieval error:", error);
          |               ^
      908 |
      909 |       if (error.message.includes("circuit breaker")) {
      910 |         throw error;

      at ApiKeyService.error [as getApiKey] (utils/apiKeyService.js:907:15)
      at getApiKey (utils/apiKeyService.js:1370:14)
      at getUserApiKey (routes/trades.js:535:10)
      at routes/trades.js:1971:27

    console.log
      üîÑ No broker API credentials found, falling back to database trade data...

      at log (routes/trades.js:2076:13)

    console.log
      ‚úÖ Retrieved 50 trades from database (611 total)

      at log (routes/trades.js:2122:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìà Trade history request received for user: dev-user-bypass

      at log (routes/trades.js:1945:13)

    console.log
      üîë Retrieving API credentials for Alpaca...

      at log (routes/trades.js:1970:15)

    console.error
      API key retrieval error: Error: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)
          at ApiKeyService.getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:797:15)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1370:14)
          at getUserApiKey (/home/stocks/algo/webapp/lambda/routes/trades.js:535:10)
          at /home/stocks/algo/webapp/lambda/routes/trades.js:1971:27

      905 |     } catch (error) {
      906 |       this.recordFailure(error);
    > 907 |       console.error("API key retrieval error:", error);
          |               ^
      908 |
      909 |       if (error.message.includes("circuit breaker")) {
      910 |         throw error;

      at ApiKeyService.error [as getApiKey] (utils/apiKeyService.js:907:15)
      at getApiKey (utils/apiKeyService.js:1370:14)
      at getUserApiKey (routes/trades.js:535:10)
      at routes/trades.js:1971:27

    console.log
      üîÑ No broker API credentials found, falling back to database trade data...

      at log (routes/trades.js:2076:13)

    console.log
      ‚úÖ Retrieved 10 trades from database (611 total)

      at log (routes/trades.js:2122:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Trade analytics requested for user: dev-user-bypass, timeframe: invalid

      at log (routes/trades.js:1118:13)

    console.error
      Database query error: {
        error: 'column s.short_name does not exist',
        query: '\n' +
          '        SELECT \n' +
          '          ph.symbol,\n' +
          '          ph.side,\n' +
          '          ph.quantity,\n' +
          '          ph.avg_ent...',
        params: '2 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/trades.js:1295:34

    console.error
      Database query failed for trade analytics: column s.short_name does not exist

      1338 |       }));
      1339 |     } catch (dbError) {
    > 1340 |       console.error(
           |               ^
      1341 |         "Database query failed for trade analytics:",
      1342 |         dbError.message
      1343 |       );

      at error (routes/trades.js:1340:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.error
      Database query error: {
        error: 'column s.name does not exist',
        query: '\n' +
          '      SELECT \n' +
          '        ph.*,\n' +
          '        ta.*,\n' +
          '        s.sector,\n' +
          '        s.industry,\n' +
          '        s.market_ca...',
        params: '2 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/trades.js:1761:20

    console.error
      Error fetching position analytics: error: column s.name does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/trades.js:1761:20 {
        length: 105,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '112',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      1818 |     });
      1819 |   } catch (error) {
    > 1820 |     console.error("Error fetching position analytics:", error);
           |             ^
      1821 |     res.status(500).json({
      1822 |       success: false,
      1823 |       error: "Failed to fetch position analytics",

      at error (routes/trades.js:1820:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.error
      Database query error: {
        error: 'column "side" does not exist',
        query: '\n' +
          '        SELECT \n' +
          '          COUNT(*) as total_trades,\n' +
          "          COUNT(CASE WHEN side = 'buy' THEN 1 E...",
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at TradeAnalyticsService.getTradeAnalysisSummary (routes/trades.js:657:29)
      at routes/trades.js:1025:21

    console.error
      Trade analysis summary error: error: column "side" does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at TradeAnalyticsService.getTradeAnalysisSummary (/home/stocks/algo/webapp/lambda/routes/trades.js:657:29)
          at /home/stocks/algo/webapp/lambda/routes/trades.js:1025:21 {
        length: 104,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '80',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      687 |       };
      688 |     } catch (error) {
    > 689 |       console.error("Trade analysis summary error:", error);
          |               ^
      690 |       return {
      691 |         insights: [`Error: ${error.message}`],
      692 |         summary: "Analysis unavailable - database error",

      at TradeAnalyticsService.error [as getTradeAnalysisSummary] (routes/trades.js:689:15)
      at routes/trades.js:1025:21

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Trades Routes ‚Ä∫ GET /api/trades/recent ‚Ä∫ should return 501 not implemented

    expect(received).toHaveProperty(path)

    Expected path: "troubleshooting"
    Received path: []

    Received value: {"details": "column th.side does not exist", "error": "Recent trades not implemented", "filters": {"days": 7, "limit": 20, "symbol": null, "type": "all"}, "message": "Recent trades feature is temporarily disabled", "success": false}

      65 |       );
      66 |       expect(response.body).toHaveProperty("details");
    > 67 |       expect(response.body).toHaveProperty("troubleshooting");
         |                             ^
      68 |       expect(response.body).toHaveProperty("filters");
      69 |       expect(response.body).toHaveProperty("timestamp");
      70 |     });

      at Object.toHaveProperty (tests/integration/routes/trades.integration.test.js:67:29)

  ‚óè Trades Routes ‚Ä∫ GET /api/trades/recent ‚Ä∫ should handle query parameters

    expect(received).toHaveProperty(path, value)

    Expected path: "status"
    Received path: []

    Expected value: "executed"
    Received value: {"days": 30, "limit": 10, "symbol": "AAPL", "type": "buy"}

      82 |       expect(response.body.filters).toHaveProperty("symbol", "AAPL");
      83 |       expect(response.body.filters).toHaveProperty("type", "buy");
    > 84 |       expect(response.body.filters).toHaveProperty("status", "executed");
         |                                     ^
      85 |     });
      86 |
      87 |     test("should use default values for missing parameters", async () => {

      at Object.toHaveProperty (tests/integration/routes/trades.integration.test.js:84:37)

  ‚óè Trades Routes ‚Ä∫ GET /api/trades/recent ‚Ä∫ should use default values for missing parameters

    expect(received).toHaveProperty(path, value)

    Expected path: "status"
    Received path: []

    Expected value: "all"
    Received value: {"days": 7, "limit": 20, "symbol": null, "type": "all"}

       95 |       expect(response.body.filters).toHaveProperty("symbol", null);
       96 |       expect(response.body.filters).toHaveProperty("type", "all");
    >  97 |       expect(response.body.filters).toHaveProperty("status", "all");
          |                                     ^
       98 |     });
       99 |
      100 |     test("should require authentication", async () => {

      at Object.toHaveProperty (tests/integration/routes/trades.integration.test.js:97:37)

  ‚óè Trades Routes ‚Ä∫ GET /api/trades/analytics ‚Ä∫ should return comprehensive trade analytics

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      229 |         .set("Authorization", "Bearer dev-bypass-token");
      230 |
    > 231 |       expect(response.status).toBe(200);
          |                               ^
      232 |
      233 |       if (response.status === 200) {
      234 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/trades.integration.test.js:231:31)

  ‚óè Trades Routes ‚Ä∫ GET /api/trades/analytics ‚Ä∫ should handle timeframe parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      259 |           .set("Authorization", "Bearer dev-bypass-token");
      260 |
    > 261 |         expect(response.status).toBe(200);
          |                                 ^
      262 |
      263 |         if (response.status === 200) {
      264 |           expect(response.body.metadata.timeframe).toBe(timeframe);

      at Object.toBe (tests/integration/routes/trades.integration.test.js:261:33)

  ‚óè Trades Routes ‚Ä∫ GET /api/trades/export ‚Ä∫ should export trade data as JSON by default

    expect(received).toHaveProperty(path)

    Expected path: "data"
    Received path: []

    Received value: {}

      420 |
      421 |       if (response.status === 200) {
    > 422 |         expect(response.body).toHaveProperty("data");
          |                               ^
      423 |         expect(Array.isArray(response.body.data)).toBe(true);
      424 |       }
      425 |     });

      at Object.toHaveProperty (tests/integration/routes/trades.integration.test.js:422:31)

::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "DELETE /api/trades/data HTTP/1.1" 200 49 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "DELETE /api/trades/data HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades/analytics?timeframe=invalid HTTP/1.1" 500 178 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades/analytics/invalid-id HTTP/1.1" 500 62 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades HTTP/1.1" 200 14797 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades/health HTTP/1.1" 200 142 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades HTTP/1.1" 200 14797 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:45 +0000] "GET /api/trades/summary HTTP/1.1" 200 181 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 401 528 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio/summary HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/alerts/active HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/trades HTTP/1.1" 200 152 "-" "-"
::ffff:127.0.0.1 - test [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 401 528 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 401 528 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 401 528 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 401 528 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio/summary HTTP/1.1" 200 656 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/alerts/active HTTP/1.1" 200 1509 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "POST /api/portfolio/analyze HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 347 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio/summary HTTP/1.1" 200 656 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/alerts/active HTTP/1.1" 200 1509 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio/summary HTTP/1.1" 200 656 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/alerts/active HTTP/1.1" 200 1509 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 401 528 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio/summary HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio/positions HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio/analytics HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio/analysis HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio/risk-analysis HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio/performance HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio/holdings HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio/transactions HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/trades HTTP/1.1" 200 152 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/alerts/active HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/backtest/results HTTP/1.1" 200 934 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/health HTTP/1.1" 200 501 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/health HTTP/1.1" 200 501 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
FAIL tests/integration/auth/auth-flow.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Portfolio summary requested for user: dev-user-bypass

      at log (routes/portfolio.js:174:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Portfolio positions requested for user: dev-user-bypass

      at log (routes/portfolio.js:258:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîî Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:38:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Portfolio summary requested for user: dev-user-bypass

      at log (routes/portfolio.js:174:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Portfolio positions requested for user: dev-user-bypass

      at log (routes/portfolio.js:258:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîî Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:38:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Portfolio summary requested for user: dev-user-bypass

      at log (routes/portfolio.js:174:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Portfolio positions requested for user: dev-user-bypass

      at log (routes/portfolio.js:258:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîî Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:38:13)

    console.log
      üìä Backtest results requested - ID: all, limit: 50

      at log (routes/backtest.js:855:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 7ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 5ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Authentication Flow Integration ‚Ä∫ Token-Based Authentication Flow ‚Ä∫ should handle missing authorization header

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 403, 500]

      87 |         const response = await request(app).get(endpoint);
      88 |
    > 89 |         expect([401, 403, 500]).toContain(response.status);
         |                                 ^
      90 |
      91 |         // Should return authentication error
      92 |         if (response.status === 401 || response.status === 403) {

      at Object.toContain (tests/integration/auth/auth-flow.integration.test.js:89:33)

::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 348 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "POST /api/portfolio/analyze HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 404 131 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:46 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 529 "-" "-"
FAIL tests/unit/routes/scores.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      üìä Scores endpoint called

      at log (routes/scores.js:23:13)

    console.log
      Executing scores query with timeout protection

      at log (routes/scores.js:58:15)

    console.log
      Scores query result: 50 rows

      at log (routes/scores.js:67:15)

    console.log
      üìä Scores endpoint called

      at log (routes/scores.js:23:13)

    console.log
      Executing scores query with timeout protection

      at log (routes/scores.js:58:15)

    console.log
      Scores query result: 25 rows

      at log (routes/scores.js:67:15)

    console.log
      üìä Scores endpoint called

      at log (routes/scores.js:23:13)

    console.log
      Executing scores query with timeout protection

      at log (routes/scores.js:58:15)

    console.log
      Scores query result: 50 rows

      at log (routes/scores.js:67:15)

    console.log
      üìä Scores endpoint called

      at log (routes/scores.js:23:13)

    console.log
      Executing scores query with timeout protection

      at log (routes/scores.js:58:15)

    console.log
      Scores query result: 50 rows

      at log (routes/scores.js:67:15)

    console.log
      üìä Scores endpoint called

      at log (routes/scores.js:23:13)

    console.log
      Executing scores query with timeout protection

      at log (routes/scores.js:58:15)

    console.log
      Scores query result: 50 rows

      at log (routes/scores.js:67:15)

    console.log
      üìä Scores endpoint called

      at log (routes/scores.js:23:13)

    console.log
      Executing scores query with timeout protection

      at log (routes/scores.js:58:15)

    console.log
      Scores query result: 50 rows

      at log (routes/scores.js:67:15)

    console.log
      üìä Scores endpoint called

      at log (routes/scores.js:23:13)

    console.log
      Executing scores query with timeout protection

      at log (routes/scores.js:58:15)

    console.log
      Scores query result: 57 rows

      at log (routes/scores.js:67:15)

    console.log
      üìä Scores endpoint called

      at log (routes/scores.js:23:13)

    console.log
      Executing scores query with timeout protection

      at log (routes/scores.js:58:15)

    console.log
      Scores query result: 50 rows

      at log (routes/scores.js:67:15)

    console.log
      üìä Scores endpoint called

      at log (routes/scores.js:23:13)

    console.log
      Executing scores query with timeout protection

      at log (routes/scores.js:58:15)

    console.log
      Scores query result: 50 rows

      at log (routes/scores.js:67:15)

    console.log
      üìä Scores endpoint called

      at log (routes/scores.js:23:13)

    console.log
      Executing scores query with timeout protection

      at log (routes/scores.js:58:15)

    console.log
      Scores query result: 50 rows

      at log (routes/scores.js:67:15)

    console.log
      üìä Scores endpoint called

      at log (routes/scores.js:23:13)

    console.log
      Executing scores query with timeout protection

      at log (routes/scores.js:58:15)

    console.log
      Scores query result: 50 rows

      at log (routes/scores.js:67:15)

    console.log
      üìä Scores endpoint called

      at log (routes/scores.js:23:13)

    console.log
      Executing scores query with timeout protection

      at log (routes/scores.js:58:15)

    console.log
      Scores query result: 50 rows

      at log (routes/scores.js:67:15)

    console.log
      üìä Scores requested for symbol: COMPOSITE

      at log (routes/scores.js:168:13)

    console.log
      üìä Scores requested for symbol: COMPOSITE

      at log (routes/scores.js:168:13)

    console.log
      üìä Scores requested for symbol: COMPOSITE

      at log (routes/scores.js:168:13)

    console.log
      üìä Scores requested for symbol: COMPOSITE

      at log (routes/scores.js:168:13)

    console.log
      üìä Scores requested for symbol: COMPOSITE

      at log (routes/scores.js:168:13)

    console.log
      üìä Scores requested for symbol: ESG

      at log (routes/scores.js:168:13)

    console.log
      üìä Scores requested for symbol: ESG

      at log (routes/scores.js:168:13)

    console.log
      üìä Scores requested for symbol: ESG

      at log (routes/scores.js:168:13)

    console.log
      üìä Scores requested for symbol: ESG

      at log (routes/scores.js:168:13)

    console.log
      üìä Scores requested for symbol: ESG

      at log (routes/scores.js:168:13)

    console.log
      üìä Scores requested for symbol: ESG

      at log (routes/scores.js:168:13)

    console.log
      üìä Scores endpoint called

      at log (routes/scores.js:23:13)

    console.log
      Executing scores query with timeout protection

      at log (routes/scores.js:58:15)

    console.log
      Scores query result: 50 rows

      at log (routes/scores.js:67:15)

    console.log
      üìä Scores endpoint called

      at log (routes/scores.js:23:13)

    console.log
      Executing scores query with timeout protection

      at log (routes/scores.js:58:15)

    console.log
      Scores query result: 25 rows

      at log (routes/scores.js:67:15)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Scores Routes Unit Tests ‚Ä∫ GET /scores/composite ‚Ä∫ should return composite scoring with proper structure

    expect(received).toContain(expected) // indexOf

    Expected value: 404
    Received array: [401]

      254 |         expect(response.body.data.methodology).toHaveProperty("factors");
      255 |       } else {
    > 256 |         expect([401]).toContain(response.status);
          |                       ^
      257 |       }
      258 |     });
      259 |

      at Object.toContain (tests/unit/routes/scores.test.js:256:23)

  ‚óè Scores Routes Unit Tests ‚Ä∫ GET /scores/esg ‚Ä∫ should return ESG scoring with proper structure

    expect(received).toContain(expected) // indexOf

    Expected value: 404
    Received array: [401]

      363 |         expect(response.body.data.methodology).toHaveProperty("data_sources");
      364 |       } else {
    > 365 |         expect([401]).toContain(response.status);
          |                       ^
      366 |       }
      367 |     });
      368 |

      at Object.toContain (tests/unit/routes/scores.test.js:365:23)

  ‚óè Scores Routes Unit Tests ‚Ä∫ Response format ‚Ä∫ should include pagination metadata when available

    expect(received).toHaveProperty(path)

    Expected path: "currentPage"
    Received path: []

    Received value: {"hasMore": true, "limit": 25, "page": 2, "total": 57, "totalPages": 3}

      533 |       expect(response.body).toHaveProperty("data");
      534 |       if (response.body.pagination) {
    > 535 |         expect(response.body.pagination).toHaveProperty("currentPage");
          |                                          ^
      536 |         expect(response.body.pagination).toHaveProperty("itemsPerPage");
      537 |       }
      538 |     });

      at Object.toHaveProperty (tests/unit/routes/scores.test.js:535:42)

::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "POST /api/strategies/ai-generate HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "POST /api/strategies/ai-generate HTTP/1.1" 400 84 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "POST /api/strategies/ai-generate HTTP/1.1" 400 110 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "POST /api/strategies/ai-generate HTTP/1.1" 400 84 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "POST /api/strategies/ai-generate HTTP/1.1" 200 11127 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "POST /api/strategies/ai-generate HTTP/1.1" 400 110 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "POST /api/strategies/ai-generate HTTP/1.1" 200 10632 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "POST /api/strategies/validate HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "POST /api/strategies/validate HTTP/1.1" 400 68 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "POST /api/strategies/validate HTTP/1.1" 400 68 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "POST /api/strategies/validate HTTP/1.1" 200 176 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "POST /api/strategies/validate HTTP/1.1" 400 68 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "POST /api/strategies/run-ai-strategy HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "POST /api/strategies/run-ai-strategy HTTP/1.1" 200 490 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "POST /api/strategies/run-ai-strategy HTTP/1.1" 400 64 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "POST /api/strategies/run-ai-strategy HTTP/1.1" 400 64 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "POST /api/strategies/run-ai-strategy HTTP/1.1" 200 487 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "POST /api/strategies/run-ai-strategy HTTP/1.1" 500 75 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "POST /api/strategies/deploy-hft HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "POST /api/strategies/deploy-hft HTTP/1.1" 500 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "POST /api/strategies/deploy-hft HTTP/1.1" 400 89 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "POST /api/strategies/deploy-hft HTTP/1.1" 400 246 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "POST /api/strategies/deploy-hft HTTP/1.1" 500 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "POST /api/strategies/deploy-hft HTTP/1.1" 500 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "GET /api/strategies/available-symbols HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "GET /api/strategies/available-symbols HTTP/1.1" 200 88 "-" "-"
FAIL tests/integration/routes/strategyBuilder.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      AI strategy generation request { userId: undefined, prompt: undefined, symbolCount: 1 }

      at log (routes/strategyBuilder.js:167:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      AI strategy generation request {
        userId: undefined,
        prompt: 'Create a momentum trading strategy for high-volume stocks',
        symbolCount: 0
      }

      at log (routes/strategyBuilder.js:167:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      AI strategy generation request { userId: undefined, prompt: 'short', symbolCount: 1 }

      at log (routes/strategyBuilder.js:167:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      AI strategy generation request {
        userId: undefined,
        prompt: 'Create a momentum trading strategy based on RSI and moving averages',
        symbolCount: 2
      }

      at log (routes/strategyBuilder.js:167:13)

    console.log
      {"timestamp":"2025-09-23T16:31:47.416Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Generating AI-powered strategy from natural language","correlationId":"ai-strategy-1758645107371-27od0tqye","prompt":"Create a momentum trading strategy based on RSI and moving averages","symbolCount":2,"aiEnabled":true,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:31:47.424Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Generating AI strategy using advanced NLP engine","correlationId":"ai-strategy-1758645107371-27od0tqye","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:31:47.426Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"AI strategy generation successful","correlationId":"ai-strategy-1758645107371-27od0tqye","strategyType":"volatility_trading","confidence":0.9,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:31:47.426Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Successfully parsed AI response","correlationId":"ai-strategy-1758645107371-27od0tqye","strategyName":"Trend_following-APPLE-VolatilityTrading-AI-U5V7","confidence":0.9,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:31:47.426Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"AI strategy generation successful","correlationId":"ai-strategy-1758645107371-27od0tqye","strategyName":"Trend_following-APPLE-VolatilityTrading-AI-U5V7","strategyType":"volatility_trading","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:31:47.426Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"AI strategy generated successfully","correlationId":"2502af13","strategyName":"Trend_following-APPLE-VolatilityTrading-AI-U5V7","strategyType":"volatility_trading","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      AI strategy generation request {
        userId: undefined,
        prompt: 'Create a momentum trading strategy',
        symbolCount: 0
      }

      at log (routes/strategyBuilder.js:167:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      AI strategy generation request {
        userId: undefined,
        prompt: 'Create a scalping strategy for high frequency trading',
        symbolCount: 1
      }

      at log (routes/strategyBuilder.js:167:13)

    console.log
      {"timestamp":"2025-09-23T16:31:47.434Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Generating AI-powered strategy from natural language","correlationId":"ai-strategy-1758645107371-27od0tqye","prompt":"Create a scalping strategy for high frequency trading","symbolCount":1,"aiEnabled":true,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:31:47.434Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Generating AI strategy using advanced NLP engine","correlationId":"ai-strategy-1758645107371-27od0tqye","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:31:47.435Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"AI strategy generation successful","correlationId":"ai-strategy-1758645107371-27od0tqye","strategyType":"hft_scalping","confidence":0.9,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:31:47.435Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Successfully parsed AI response","correlationId":"ai-strategy-1758645107371-27od0tqye","strategyName":"Balanced-SPY-HftScalping-AI-RL3W","confidence":0.9,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:31:47.435Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"AI strategy generation successful","correlationId":"ai-strategy-1758645107371-27od0tqye","strategyName":"Balanced-SPY-HftScalping-AI-RL3W","strategyType":"hft_scalping","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:31:47.435Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"AI strategy generated successfully","correlationId":"ee44fae2","strategyName":"Balanced-SPY-HftScalping-AI-RL3W","strategyType":"hft_scalping","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      {"timestamp":"2025-09-23T16:31:47.439Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Strategy validation request","correlationId":"f0ff3402","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      {"timestamp":"2025-09-23T16:31:47.441Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Strategy validation request","correlationId":"8f19d0bc","strategyName":"Test Strategy","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      {"timestamp":"2025-09-23T16:31:47.443Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Strategy validation request","correlationId":"3a960a91","strategyName":"Test Momentum Strategy","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:31:47.443Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Strategy validation completed","correlationId":"755bab60","isValid":true,"errorCount":0,"warningCount":2,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      {"timestamp":"2025-09-23T16:31:47.445Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Strategy validation request","correlationId":"de783741","strategyName":"Empty Strategy","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      {"timestamp":"2025-09-23T16:31:47.448Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"AI strategy backtest request","correlationId":"b5e5c403","strategyName":"Test Strategy","symbolCount":1,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      {"timestamp":"2025-09-23T16:31:47.457Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"AI strategy backtest request","correlationId":"46c7d6e7","symbolCount":0,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      {"timestamp":"2025-09-23T16:31:47.459Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"AI strategy backtest request","correlationId":"90a50c32","strategyName":"Test Strategy","symbolCount":0,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      {"timestamp":"2025-09-23T16:31:47.461Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"AI strategy backtest request","correlationId":"14796c72","strategyName":"Test Strategy","symbolCount":2,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      {"timestamp":"2025-09-23T16:31:47.466Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"AI strategy backtest request","correlationId":"f621c468","strategyName":"Test Strategy","symbolCount":0,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:31:47.467Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"AI strategy backtest error","correlationId":"2de26935","error":"Cannot read properties of undefined (reading 'length')","severity":"ERROR"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      {"timestamp":"2025-09-23T16:31:47.470Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"HFT deployment request","correlationId":"c197ddb4","strategyName":"High Performance Strategy","sharpeRatio":1.5,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.error
      Database query error: {
        error: 'column "strategy_code" of relation "trading_strategies" does not exist',
        query: '\n' +
          '        INSERT INTO trading_strategies (\n' +
          '          user_id, strategy_name, strategy_description, st...',
        params: '8 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/strategyBuilder.js:451:32

    console.log
      {"timestamp":"2025-09-23T16:31:47.472Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"HFT deployment failed","correlationId":"daf52b84","error":"column \"strategy_code\" of relation \"trading_strategies\" does not exist","severity":"ERROR"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      {"timestamp":"2025-09-23T16:31:47.474Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"HFT deployment request","correlationId":"cfc83969","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      {"timestamp":"2025-09-23T16:31:47.476Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"HFT deployment request","correlationId":"c8f8c6bc","strategyName":"Poor Performance Strategy","sharpeRatio":0.5,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      {"timestamp":"2025-09-23T16:31:47.478Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"HFT deployment request","correlationId":"059967d9","strategyName":"High Performance Strategy","sharpeRatio":1.5,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.error
      Database query error: {
        error: 'column "strategy_code" of relation "trading_strategies" does not exist',
        query: '\n' +
          '        INSERT INTO trading_strategies (\n' +
          '          user_id, strategy_name, strategy_description, st...',
        params: '8 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/strategyBuilder.js:451:32

    console.log
      {"timestamp":"2025-09-23T16:31:47.484Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"HFT deployment failed","correlationId":"cc37cd2d","error":"column \"strategy_code\" of relation \"trading_strategies\" does not exist","severity":"ERROR"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      {"timestamp":"2025-09-23T16:31:47.486Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"HFT deployment request","correlationId":"924a9cde","strategyName":"Edge Case Strategy","sharpeRatio":1,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.error
      Database query error: {
        error: 'column "strategy_code" of relation "trading_strategies" does not exist',
        query: '\n' +
          '        INSERT INTO trading_strategies (\n' +
          '          user_id, strategy_name, strategy_description, st...',
        params: '8 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/strategyBuilder.js:451:32

    console.log
      {"timestamp":"2025-09-23T16:31:47.490Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"HFT deployment failed","correlationId":"586be303","error":"column \"strategy_code\" of relation \"trading_strategies\" does not exist","severity":"ERROR"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      {"timestamp":"2025-09-23T16:31:47.493Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Available symbols request","correlationId":"f286e856","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      {"timestamp":"2025-09-23T16:31:47.500Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Available symbols request","correlationId":"063f9b73","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      {"timestamp":"2025-09-23T16:31:47.506Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"User strategies list request","correlationId":"055c47de","includeBacktests":false,"includeDeployments":false,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      {"timestamp":"2025-09-23T16:31:47.510Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"User strategies list request","correlationId":"1ca21d1e","includeBacktests":"true","includeDeployments":"true","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      {"timestamp":"2025-09-23T16:31:47.513Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"User strategies list request","correlationId":"50f2f73b","includeBacktests":"false","includeDeployments":"false","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      {"timestamp":"2025-09-23T16:31:47.529Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Strategy validation request","correlationId":"8ccb63a2","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      AI strategy generation request { userId: undefined, prompt: undefined, symbolCount: 0 }

      at log (routes/strategyBuilder.js:167:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      {"timestamp":"2025-09-23T16:31:47.535Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Available symbols request","correlationId":"bb26a013","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      {"timestamp":"2025-09-23T16:31:47.536Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"User strategies list request","correlationId":"d3cd0fbf","includeBacktests":false,"includeDeployments":false,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Strategy Builder Routes ‚Ä∫ POST /api/strategies/run-ai-strategy ‚Ä∫ should return 501 not implemented

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      252 |         });
      253 |
    > 254 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      255 |       expect(response.body).toHaveProperty("success", false);
      256 |       expect(response.body).toHaveProperty("error");
      257 |       expect(response.body.error).toContain("not implemented");

      at Object.toContain (tests/integration/routes/strategyBuilder.integration.test.js:254:41)

  ‚óè Strategy Builder Routes ‚Ä∫ POST /api/strategies/run-ai-strategy ‚Ä∫ should handle config parameters

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      306 |         });
      307 |
    > 308 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      309 |       expect(response.body.error).toContain("not implemented");
      310 |     });
      311 |

      at Object.toContain (tests/integration/routes/strategyBuilder.integration.test.js:308:41)

  ‚óè Strategy Builder Routes ‚Ä∫ POST /api/strategies/run-ai-strategy ‚Ä∫ should handle missing symbols

    expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [400, 422]

      322 |         });
      323 |
    > 324 |       expect([400, 422]).toContain(response.status);
          |                          ^
      325 |       expect(response.body).toHaveProperty("success", false);
      326 |       expect(response.body).toHaveProperty("error");
      327 |       expect(response.body.error).toContain("symbol");

      at Object.toContain (tests/integration/routes/strategyBuilder.integration.test.js:324:26)

  ‚óè Strategy Builder Routes ‚Ä∫ POST /api/strategies/deploy-hft ‚Ä∫ should return 501 not implemented

    expect(received).toContain(expected) // indexOf

    Expected substring: "not implemented"
    Received string:    "HFT deployment failed"

      366 |       expect(response.body).toHaveProperty("success", false);
      367 |       expect(response.body).toHaveProperty("error");
    > 368 |       expect(response.body.error).toContain("not implemented");
          |                                   ^
      369 |     });
      370 |
      371 |     test("should require strategy and backtest results", async () => {

      at Object.toContain (tests/integration/routes/strategyBuilder.integration.test.js:368:35)

  ‚óè Strategy Builder Routes ‚Ä∫ POST /api/strategies/deploy-hft ‚Ä∫ should handle qualifying strategy

    expect(received).toContain(expected) // indexOf

    Expected substring: "not implemented"
    Received string:    "HFT deployment failed"

      430 |
      431 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
    > 432 |       expect(response.body.error).toContain("not implemented");
          |                                   ^
      433 |     });
      434 |
      435 |     test("should handle edge case qualification values", async () => {

      at Object.toContain (tests/integration/routes/strategyBuilder.integration.test.js:432:35)

  ‚óè Strategy Builder Routes ‚Ä∫ POST /api/strategies/deploy-hft ‚Ä∫ should handle edge case qualification values

    expect(received).toContain(expected) // indexOf

    Expected substring: "not implemented"
    Received string:    "HFT deployment failed"

      452 |
      453 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
    > 454 |       expect(response.body.error).toContain("not implemented");
          |                                   ^
      455 |     });
      456 |   });
      457 |

      at Object.toContain (tests/integration/routes/strategyBuilder.integration.test.js:454:35)

  ‚óè Strategy Builder Routes ‚Ä∫ GET /api/strategies/list ‚Ä∫ should return 501 not implemented

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      506 |         .set("Authorization", "Bearer dev-bypass-token");
      507 |
    > 508 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      509 |       expect(response.body).toHaveProperty("success", false);
      510 |       expect(response.body).toHaveProperty("error");
      511 |       expect(response.body.error).toContain("not implemented");

      at Object.toContain (tests/integration/routes/strategyBuilder.integration.test.js:508:41)

  ‚óè Strategy Builder Routes ‚Ä∫ GET /api/strategies/list ‚Ä∫ should handle query parameters

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      519 |         .set("Authorization", "Bearer dev-bypass-token");
      520 |
    > 521 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      522 |       expect(response.body.error).toContain("not implemented");
      523 |     });
      524 |

      at Object.toContain (tests/integration/routes/strategyBuilder.integration.test.js:521:41)

  ‚óè Strategy Builder Routes ‚Ä∫ GET /api/strategies/list ‚Ä∫ should handle boolean query parameters

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      530 |         .set("Authorization", "Bearer dev-bypass-token");
      531 |
    > 532 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      533 |       expect(response.body.error).toContain("not implemented");
      534 |     });
      535 |   });

      at Object.toContain (tests/integration/routes/strategyBuilder.integration.test.js:532:41)

::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "GET /api/strategies/available-symbols HTTP/1.1" 200 88 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "GET /api/strategies/list HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "GET /api/strategies/list HTTP/1.1" 200 1273 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "GET /api/strategies/list?includeBacktests=true&includeDeployments=true HTTP/1.1" 200 1273 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "GET /api/strategies/list?includeBacktests=false&includeDeployments=false HTTP/1.1" 200 1273 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "GET /api/strategies/templates HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "GET /api/strategies/templates HTTP/1.1" 200 994 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "GET /api/strategies/templates HTTP/1.1" 200 994 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "GET /api/strategies/templates HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "POST /api/strategies/ai-generate HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "POST /api/strategies/validate HTTP/1.1" 400 68 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "POST /api/strategies/ai-generate HTTP/1.1" 400 84 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "GET /api/strategies/templates HTTP/1.1" 200 994 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "GET /api/strategies/templates HTTP/1.1" 200 994 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "GET /api/strategies/available-symbols HTTP/1.1" 200 88 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:47 +0000] "GET /api/strategies/list HTTP/1.1" 200 1273 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic HTTP/1.1" 200 493 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic?page=1&limit=10 HTTP/1.1" 200 493 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic?series=GDP HTTP/1.1" 200 187 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic?series=UNEMPLOYMENT_RATE HTTP/1.1" 200 197 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic?series=VIX HTTP/1.1" 200 184 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic?series=FEDERAL_FUNDS_RATE HTTP/1.1" 200 199 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic?series=INFLATION_RATE HTTP/1.1" 200 194 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic?limit=5 HTTP/1.1" 200 492 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic?page=-1&limit=10 HTTP/1.1" 400 100 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic?page=0&limit=10 HTTP/1.1" 400 100 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic?page=1&limit=-5 HTTP/1.1" 400 101 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic?page=abc&limit=def HTTP/1.1" 400 100 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic?page=999999&limit=1000 HTTP/1.1" 404 56 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/indicators HTTP/1.1" 200 1956 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/indicators HTTP/1.1" 200 1956 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/indicators?category=growth HTTP/1.1" 404 248 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/calendar HTTP/1.1" 200 104 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/calendar?start_date=2025-01-01&end_date=2025-12-31 HTTP/1.1" 200 116 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/calendar?importance=high HTTP/1.1" 200 104 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/calendar?importance=medium HTTP/1.1" 200 104 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/calendar?importance=low HTTP/1.1" 200 104 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/calendar?country=US HTTP/1.1" 200 104 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/calendar?country=EU HTTP/1.1" 200 104 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/calendar?country=JP HTTP/1.1" 200 104 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/calendar?country=GB HTTP/1.1" 200 104 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/calendar?country=CA HTTP/1.1" 200 104 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/series/GDP HTTP/1.1" 200 353 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/series/UNEMPLOYMENT_RATE HTTP/1.1" 200 373 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/series/VIX HTTP/1.1" 200 347 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/series/FEDERAL_FUNDS_RATE HTTP/1.1" 200 377 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/series/GDP?timeframe=1Y HTTP/1.1" 200 353 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/series/GDP?timeframe=2Y HTTP/1.1" 200 353 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/series/GDP?timeframe=5Y HTTP/1.1" 200 353 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/series/GDP?timeframe=10Y HTTP/1.1" 200 353 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/series/GDP?timeframe=max HTTP/1.1" 200 353 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/series/UNEMPLOYMENT_RATE?frequency=daily HTTP/1.1" 200 373 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/series/UNEMPLOYMENT_RATE?frequency=weekly HTTP/1.1" 200 373 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/series/UNEMPLOYMENT_RATE?frequency=monthly HTTP/1.1" 200 373 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/series/UNEMPLOYMENT_RATE?frequency=quarterly HTTP/1.1" 200 373 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/series/UNEMPLOYMENT_RATE?frequency=annual HTTP/1.1" 200 373 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/series/INVALID_SERIES HTTP/1.1" 404 352 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/compare?series=GDP,UNEMPLOYMENT_RATE,VIX HTTP/1.1" 200 662 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/compare?series=GDP,UNEMPLOYMENT_RATE&normalize=true HTTP/1.1" 200 459 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/compare?series=GDP,UNEMPLOYMENT_RATE&align_period=quarterly HTTP/1.1" 200 461 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/forecast?series=GDP HTTP/1.1" 404 269 "-" "-"
FAIL tests/integration/routes/economic.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üìä Economic indicators requested, category: all

      at log (routes/economic.js:210:13)

    console.log
      üìä Economic indicators requested, category: all

      at log (routes/economic.js:210:13)

    console.log
      üìä Economic indicators requested, category: growth

      at log (routes/economic.js:210:13)

    console.log
      üìÖ Economic calendar requested - start: undefined, end: undefined, importance: undefined, country: undefined

      at log (routes/economic.js:284:13)

    console.log
      üìÖ Economic calendar requested - start: 2025-01-01, end: 2025-12-31, importance: undefined, country: undefined

      at log (routes/economic.js:284:13)

    console.log
      üìÖ Economic calendar requested - start: undefined, end: undefined, importance: high, country: undefined

      at log (routes/economic.js:284:13)

    console.log
      üìÖ Economic calendar requested - start: undefined, end: undefined, importance: medium, country: undefined

      at log (routes/economic.js:284:13)

    console.log
      üìÖ Economic calendar requested - start: undefined, end: undefined, importance: low, country: undefined

      at log (routes/economic.js:284:13)

    console.log
      üìÖ Economic calendar requested - start: undefined, end: undefined, importance: undefined, country: US

      at log (routes/economic.js:284:13)

    console.log
      üìÖ Economic calendar requested - start: undefined, end: undefined, importance: undefined, country: EU

      at log (routes/economic.js:284:13)

    console.log
      üìÖ Economic calendar requested - start: undefined, end: undefined, importance: undefined, country: JP

      at log (routes/economic.js:284:13)

    console.log
      üìÖ Economic calendar requested - start: undefined, end: undefined, importance: undefined, country: GB

      at log (routes/economic.js:284:13)

    console.log
      üìÖ Economic calendar requested - start: undefined, end: undefined, importance: undefined, country: CA

      at log (routes/economic.js:284:13)

    console.log
      üìà Economic series requested - series: GDP, timeframe: undefined

      at log (routes/economic.js:333:13)

    console.log
      üìà Economic series requested - series: UNEMPLOYMENT_RATE, timeframe: undefined

      at log (routes/economic.js:333:13)

    console.log
      üìà Economic series requested - series: VIX, timeframe: undefined

      at log (routes/economic.js:333:13)

    console.log
      üìà Economic series requested - series: FEDERAL_FUNDS_RATE, timeframe: undefined

      at log (routes/economic.js:333:13)

    console.log
      üìà Economic series requested - series: GDP, timeframe: 1Y

      at log (routes/economic.js:333:13)

    console.log
      üìà Economic series requested - series: GDP, timeframe: 2Y

      at log (routes/economic.js:333:13)

    console.log
      üìà Economic series requested - series: GDP, timeframe: 5Y

      at log (routes/economic.js:333:13)

    console.log
      üìà Economic series requested - series: GDP, timeframe: 10Y

      at log (routes/economic.js:333:13)

    console.log
      üìà Economic series requested - series: GDP, timeframe: max

      at log (routes/economic.js:333:13)

    console.log
      üìà Economic series requested - series: UNEMPLOYMENT_RATE, timeframe: undefined

      at log (routes/economic.js:333:13)

    console.log
      üìà Economic series requested - series: UNEMPLOYMENT_RATE, timeframe: undefined

      at log (routes/economic.js:333:13)

    console.log
      üìà Economic series requested - series: UNEMPLOYMENT_RATE, timeframe: undefined

      at log (routes/economic.js:333:13)

    console.log
      üìà Economic series requested - series: UNEMPLOYMENT_RATE, timeframe: undefined

      at log (routes/economic.js:333:13)

    console.log
      üìà Economic series requested - series: UNEMPLOYMENT_RATE, timeframe: undefined

      at log (routes/economic.js:333:13)

    console.log
      üìà Economic series requested - series: INVALID_SERIES, timeframe: undefined

      at log (routes/economic.js:333:13)

    console.log
      ‚öñÔ∏è Economic comparison requested - series: GDP,UNEMPLOYMENT_RATE,VIX

      at log (routes/economic.js:619:13)

    console.log
      ‚öñÔ∏è Economic comparison requested - series: GDP,UNEMPLOYMENT_RATE

      at log (routes/economic.js:619:13)

    console.log
      ‚öñÔ∏è Economic comparison requested - series: GDP,UNEMPLOYMENT_RATE

      at log (routes/economic.js:619:13)

    console.log
      üîÆ Economic forecast requested - series: GDP, horizon: undefined

      at log (routes/economic.js:413:13)

    console.log
      üîÆ Economic forecast requested - series: UNEMPLOYMENT_RATE, horizon: 1Q

      at log (routes/economic.js:413:13)

    console.log
      üîÆ Economic forecast requested - series: UNEMPLOYMENT_RATE, horizon: undefined

      at log (routes/economic.js:413:13)

    console.log
      üîó Economic correlations requested - series: FEDERAL_FUNDS_RATE, timeframe: undefined

      at log (routes/economic.js:510:13)

    console.log
      üîó Economic correlations requested - series: UNEMPLOYMENT_RATE, timeframe: 5Y

      at log (routes/economic.js:510:13)

    console.log
      üìä Economic indicators requested, category: all

      at log (routes/economic.js:210:13)

    console.log
      üìÖ Economic calendar requested - start: undefined, end: undefined, importance: undefined, country: undefined

      at log (routes/economic.js:284:13)

    console.log
      üìà Economic series requested - series: GDP, timeframe: undefined

      at log (routes/economic.js:333:13)

    console.log
      üîÆ Economic forecast requested - series: UNEMPLOYMENT_RATE, horizon: undefined

      at log (routes/economic.js:413:13)

    console.log
      üìä Economic indicators requested, category: all

      at log (routes/economic.js:210:13)

    console.log
      üìÖ Economic calendar requested - start: invalid-date, end: undefined, importance: undefined, country: undefined

      at log (routes/economic.js:284:13)

    console.error
      Database query error: {
        error: 'invalid input syntax for type date: "invalid-date"',
        query: '\n' +
          '      SELECT \n' +
          '        series_id as event_name,\n' +
          '        date as event_date,\n' +
          '        value as forecas...',
        params: '2 parameters',
        code: '22007'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/economic.js:289:28

    console.error
      Economic calendar error: error: invalid input syntax for type date: "invalid-date"
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/economic.js:289:28 {
        length: 116,
        severity: 'ERROR',
        code: '22007',
        detail: undefined,
        hint: undefined,
        position: undefined,
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'datetime.c',
        line: '4026',
        routine: 'DateTimeParseError'
      }

      315 |     });
      316 |   } catch (error) {
    > 317 |     console.error("Economic calendar error:", error);
          |             ^
      318 |     return res.status(500).json({
      319 |       success: false,
      320 |       error: "Failed to fetch economic calendar data",

      at error (routes/economic.js:317:13)

    console.log
      üìÖ Economic calendar requested - start: undefined, end: 2025-13-40, importance: undefined, country: undefined

      at log (routes/economic.js:284:13)

    console.error
      Database query error: {
        error: 'date/time field value out of range: "2025-13-40"',
        query: '\n' +
          '      SELECT \n' +
          '        series_id as event_name,\n' +
          '        date as event_date,\n' +
          '        value as forecas...',
        params: '2 parameters',
        code: '22008'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/economic.js:289:28

    console.error
      Economic calendar error: error: date/time field value out of range: "2025-13-40"
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/economic.js:289:28 {
        length: 165,
        severity: 'ERROR',
        code: '22008',
        detail: undefined,
        hint: 'Perhaps you need a different "datestyle" setting.',
        position: undefined,
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'datetime.c',
        line: '3992',
        routine: 'DateTimeParseError'
      }

      315 |     });
      316 |   } catch (error) {
    > 317 |     console.error("Economic calendar error:", error);
          |             ^
      318 |     return res.status(500).json({
      319 |       success: false,
      320 |       error: "Failed to fetch economic calendar data",

      at error (routes/economic.js:317:13)

    console.log
      üìÖ Economic calendar requested - start: 2025-12-31, end: 2025-01-01, importance: undefined, country: undefined

      at log (routes/economic.js:284:13)

    console.log
      üìÖ Economic calendar requested - start: , end: , importance: undefined, country: undefined

      at log (routes/economic.js:284:13)

    console.log
      üìà Economic series requested - series: UNEMPLOYMENT_RATE, timeframe: undefined

      at log (routes/economic.js:333:13)

    console.log
      ‚öñÔ∏è Economic comparison requested - series: GDP,UNEMPLOYMENT_RATE,FEDERAL_FUNDS_RATE,INFLATION_RATE

      at log (routes/economic.js:619:13)

    console.log
      üîÆ Economic forecast requested - series: GDP, horizon: 1Y

      at log (routes/economic.js:413:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Economic Routes Integration Tests ‚Ä∫ GET /api/economic (Economic Data) ‚Ä∫ should handle invalid pagination parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

       99 |         const response = await request(app).get(`/api/economic?${params}`);
      100 |
    > 101 |         expect([200, 400, 500, 503].includes(response.status)).toBe(true);
          |                                                                ^
      102 |       }
      103 |     });
      104 |   });

      at Object.toBe (tests/integration/routes/economic.integration.test.js:101:64)

  ‚óè Economic Routes Integration Tests ‚Ä∫ GET /api/economic/indicators ‚Ä∫ should handle category filter for indicators

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      148 |         );
      149 |
    > 150 |         expect([200, 400].includes(response.status)).toBe(true);
          |                                                      ^
      151 |       }
      152 |     });
      153 |   });

      at Object.toBe (tests/integration/routes/economic.integration.test.js:150:54)

  ‚óè Economic Routes Integration Tests ‚Ä∫ GET /api/economic/forecast ‚Ä∫ should return economic forecasts

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      312 |       );
      313 |
    > 314 |       expect(response.status).toBe(200);
          |                               ^
      315 |
      316 |       if (response.status === 200) {
      317 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/economic.integration.test.js:314:31)

  ‚óè Economic Routes Integration Tests ‚Ä∫ GET /api/economic/forecast ‚Ä∫ should handle forecast horizon parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      331 |         );
      332 |
    > 333 |         expect([200, 400].includes(response.status)).toBe(true);
          |                                                      ^
      334 |       }
      335 |     });
      336 |

      at Object.toBe (tests/integration/routes/economic.integration.test.js:333:54)

  ‚óè Economic Routes Integration Tests ‚Ä∫ GET /api/economic/forecast ‚Ä∫ should handle confidence level parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      340 |       );
      341 |
    > 342 |       expect([200, 400].includes(response.status)).toBe(true);
          |                                                    ^
      343 |     });
      344 |   });
      345 |

      at Object.toBe (tests/integration/routes/economic.integration.test.js:342:52)

  ‚óè Economic Routes Integration Tests ‚Ä∫ Performance and Edge Cases ‚Ä∫ should handle concurrent requests to economic endpoints

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      387 |
      388 |       responses.forEach((response) => {
    > 389 |         expect(response.status).toBe(200);
          |                                 ^
      390 |       });
      391 |     });
      392 |

      at toBe (tests/integration/routes/economic.integration.test.js:389:33)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/routes/economic.integration.test.js:388:17)

  ‚óè Economic Routes Integration Tests ‚Ä∫ Performance and Edge Cases ‚Ä∫ should handle SQL injection attempts

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      453 |       );
      454 |
    > 455 |       expect([200, 400].includes(response.status)).toBe(true);
          |                                                    ^
      456 |     });
      457 |
      458 |     test("should handle memory pressure with large datasets", async () => {

      at Object.toBe (tests/integration/routes/economic.integration.test.js:455:52)

::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/forecast?series=UNEMPLOYMENT_RATE&horizon=1Q HTTP/1.1" 404 283 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/forecast?series=UNEMPLOYMENT_RATE&confidence=0.95 HTTP/1.1" 404 283 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/correlations?series=FEDERAL_FUNDS_RATE HTTP/1.1" 200 254 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/correlations?series=UNEMPLOYMENT_RATE&timeframe=5Y HTTP/1.1" 200 253 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic HTTP/1.1" 200 493 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/forecast?series=UNEMPLOYMENT_RATE HTTP/1.1" 404 283 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/indicators HTTP/1.1" 200 1956 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/calendar HTTP/1.1" 200 104 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/series/GDP HTTP/1.1" 200 353 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic?limit=1000 HTTP/1.1" 200 495 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/indicators HTTP/1.1" 200 1956 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/calendar?start_date=invalid-date HTTP/1.1" 500 247 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/calendar?end_date=2025-13-40 HTTP/1.1" 500 245 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/calendar?start_date=2025-12-31&end_date=2025-01-01 HTTP/1.1" 200 116 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/calendar?start_date=&end_date= HTTP/1.1" 200 104 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/series/UNEMPLOYMENT_RATE?limit=10 HTTP/1.1" 200 373 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic HTTP/1.1" 200 493 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic?series=GDP%27%3B%20DROP%20TABLE%20economic_data%3B%20-- HTTP/1.1" 404 56 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/compare?series=GDP,UNEMPLOYMENT_RATE,FEDERAL_FUNDS_RATE,INFLATION_RATE&timeframe=max HTTP/1.1" 200 1047 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/economic/forecast?series=GDP&horizon=1Y HTTP/1.1" 404 269 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket HTTP/1.1" 200 411 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket HTTP/1.1" 200 411 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/test HTTP/1.1" 200 78 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/health HTTP/1.1" 200 337 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/health HTTP/1.1" 200 337 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/status HTTP/1.1" 200 268 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/status HTTP/1.1" 200 269 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/stream/AAPL HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/stream/AAPL HTTP/1.1" 400 474 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/stream/ HTTP/1.1" 400 129 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/stream/AAPL HTTP/1.1" 400 474 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/stream/AAPL,MSFT,GOOGL HTTP/1.1" 400 474 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/stream/INVALID@ HTTP/1.1" 400 146 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/stream/AAPL,INVALID@ HTTP/1.1" 400 474 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/stream/aapl,msft HTTP/1.1" 400 474 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/stream/SYM0,SYM1,SYM2,SYM3,SYM4,SYM5,SYM6,SYM7,SYM8,SYM9,SYM10,SYM11,SYM12,SYM13,SYM14,SYM15,SYM16,SYM17,SYM18,SYM19,SYM20,SYM21,SYM22,SYM23,SYM24 HTTP/1.1" 400 146 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/stream/AAPL HTTP/1.1" 400 474 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/trades/AAPL HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/trades/AAPL HTTP/1.1" 403 95 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/trades/AAPL HTTP/1.1" 403 95 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/trades/AAPL,MSFT,GOOGL HTTP/1.1" 403 95 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/trades/AAPL HTTP/1.1" 403 95 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/bars/AAPL HTTP/1.1" 401 529 "-" "-"
FAIL tests/integration/routes/websocket.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üöÄ [ea215f69] Live data stream request initiated {
        symbols: 'AAPL',
        userId: 'dev-user...',
        userAgent: undefined,
        ip: '::ffff:127.0.0.1',
        timestamp: '2025-09-23T16:31:48.729Z'
      }

      at log (routes/websocket.js:190:13)

    console.log
      üîç [ea215f69] Parsing requested symbols: AAPL

      at log (routes/websocket.js:199:13)

    console.log
      ‚úÖ [ea215f69] Symbols validated: { validSymbols: [ 'AAPL' ], symbolCount: 1 }

      at log (routes/websocket.js:221:13)

    console.log
      üîë [ea215f69] Retrieving user API credentials for live data access

      at log (routes/websocket.js:227:13)

    console.error
      ‚ùå [ea215f69] No API credentials found after 10ms {
        requestedProvider: 'alpaca',
        userId: 'dev-user...',
        impact: 'Live market data will not be available',
        recommendation: 'User needs to configure Alpaca API keys in settings'
      }

      236 |
      237 |       if (!credentials) {
    > 238 |         console.error(
          |                 ^
      239 |           `‚ùå [${requestId}] No API credentials found after ${credentialsDuration}ms`,
      240 |           {
      241 |             requestedProvider: "alpaca",

      at error (routes/websocket.js:238:17)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üöÄ [addaa0a3] Live data stream request initiated {
        symbols: 'AAPL',
        userId: 'dev-user...',
        userAgent: undefined,
        ip: '::ffff:127.0.0.1',
        timestamp: '2025-09-23T16:31:48.756Z'
      }

      at log (routes/websocket.js:190:13)

    console.log
      üîç [addaa0a3] Parsing requested symbols: AAPL

      at log (routes/websocket.js:199:13)

    console.log
      ‚úÖ [addaa0a3] Symbols validated: { validSymbols: [ 'AAPL' ], symbolCount: 1 }

      at log (routes/websocket.js:221:13)

    console.log
      üîë [addaa0a3] Retrieving user API credentials for live data access

      at log (routes/websocket.js:227:13)

    console.error
      ‚ùå [addaa0a3] No API credentials found after 1ms {
        requestedProvider: 'alpaca',
        userId: 'dev-user...',
        impact: 'Live market data will not be available',
        recommendation: 'User needs to configure Alpaca API keys in settings'
      }

      236 |
      237 |       if (!credentials) {
    > 238 |         console.error(
          |                 ^
      239 |           `‚ùå [${requestId}] No API credentials found after ${credentialsDuration}ms`,
      240 |           {
      241 |             requestedProvider: "alpaca",

      at error (routes/websocket.js:238:17)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üöÄ [a31d0472] Live data stream request initiated {
        symbols: 'AAPL,MSFT,GOOGL',
        userId: 'dev-user...',
        userAgent: undefined,
        ip: '::ffff:127.0.0.1',
        timestamp: '2025-09-23T16:31:48.761Z'
      }

      at log (routes/websocket.js:190:13)

    console.log
      üîç [a31d0472] Parsing requested symbols: AAPL,MSFT,GOOGL

      at log (routes/websocket.js:199:13)

    console.log
      ‚úÖ [a31d0472] Symbols validated: { validSymbols: [ 'AAPL', 'MSFT', 'GOOGL' ], symbolCount: 3 }

      at log (routes/websocket.js:221:13)

    console.log
      üîë [a31d0472] Retrieving user API credentials for live data access

      at log (routes/websocket.js:227:13)

    console.error
      ‚ùå [a31d0472] No API credentials found after 1ms {
        requestedProvider: 'alpaca',
        userId: 'dev-user...',
        impact: 'Live market data will not be available',
        recommendation: 'User needs to configure Alpaca API keys in settings'
      }

      236 |
      237 |       if (!credentials) {
    > 238 |         console.error(
          |                 ^
      239 |           `‚ùå [${requestId}] No API credentials found after ${credentialsDuration}ms`,
      240 |           {
      241 |             requestedProvider: "alpaca",

      at error (routes/websocket.js:238:17)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üöÄ [1577df7b] Live data stream request initiated {
        symbols: 'INVALID@',
        userId: 'dev-user...',
        userAgent: undefined,
        ip: '::ffff:127.0.0.1',
        timestamp: '2025-09-23T16:31:48.765Z'
      }

      at log (routes/websocket.js:190:13)

    console.log
      üîç [1577df7b] Parsing requested symbols: INVALID@

      at log (routes/websocket.js:199:13)

    console.error
      ‚ùå [1577df7b] Invalid symbols provided: {
        originalSymbols: 'INVALID@',
        filteredSymbols: [],
        impact: 'No valid symbols to stream'
      }

      206 |
      207 |     if (symbols.length === 0) {
    > 208 |       console.error(`‚ùå [${requestId}] Invalid symbols provided:`, {
          |               ^
      209 |         originalSymbols: req.params.symbols,
      210 |         filteredSymbols: symbols,
      211 |         impact: "No valid symbols to stream",

      at error (routes/websocket.js:208:15)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at next (middleware/auth.js:63:14)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at next (middleware/responseFormatter.js:66:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at urlencodedParser (node_modules/body-parser/lib/types/urlencoded.js:94:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at logger (node_modules/morgan/index.js:144:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at cors (node_modules/cors/lib/index.js:188:7)
      at node_modules/cors/lib/index.js:224:17
      at originCallback (node_modules/cors/lib/index.js:214:15)
      at node_modules/cors/lib/index.js:219:13
      at optionsCallback (node_modules/cors/lib/index.js:199:9)
      at corsMiddleware (node_modules/cors/lib/index.js:204:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at internalNext (node_modules/helmet/index.cjs:537:6)
      at xXssProtectionMiddleware (node_modules/helmet/index.cjs:315:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPoweredByMiddleware (node_modules/helmet/index.cjs:308:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPermittedCrossDomainPoliciesMiddleware (node_modules/helmet/index.cjs:301:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xFrameOptionsMiddleware (node_modules/helmet/index.cjs:285:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDownloadOptionsMiddleware (node_modules/helmet/index.cjs:265:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDnsPrefetchControlMiddleware (node_modules/helmet/index.cjs:258:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xContentTypeOptionsMiddleware (node_modules/helmet/index.cjs:250:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at strictTransportSecurityMiddleware (node_modules/helmet/index.cjs:243:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at referrerPolicyMiddleware (node_modules/helmet/index.cjs:211:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at originAgentClusterMiddleware (node_modules/helmet/index.cjs:186:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginResourcePolicyMiddleware (node_modules/helmet/index.cjs:179:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginOpenerPolicyMiddleware (node_modules/helmet/index.cjs:163:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at contentSecurityPolicyMiddleware (node_modules/helmet/index.cjs:128:4)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at helmetMiddleware (node_modules/helmet/index.cjs:539:6)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üöÄ [40f00b6d] Live data stream request initiated {
        symbols: 'AAPL,INVALID@',
        userId: 'dev-user...',
        userAgent: undefined,
        ip: '::ffff:127.0.0.1',
        timestamp: '2025-09-23T16:31:48.777Z'
      }

      at log (routes/websocket.js:190:13)

    console.log
      üîç [40f00b6d] Parsing requested symbols: AAPL,INVALID@

      at log (routes/websocket.js:199:13)

    console.log
      ‚úÖ [40f00b6d] Symbols validated: { validSymbols: [ 'AAPL' ], symbolCount: 1 }

      at log (routes/websocket.js:221:13)

    console.log
      üîë [40f00b6d] Retrieving user API credentials for live data access

      at log (routes/websocket.js:227:13)

    console.error
      ‚ùå [40f00b6d] No API credentials found after 1ms {
        requestedProvider: 'alpaca',
        userId: 'dev-user...',
        impact: 'Live market data will not be available',
        recommendation: 'User needs to configure Alpaca API keys in settings'
      }

      236 |
      237 |       if (!credentials) {
    > 238 |         console.error(
          |                 ^
      239 |           `‚ùå [${requestId}] No API credentials found after ${credentialsDuration}ms`,
      240 |           {
      241 |             requestedProvider: "alpaca",

      at error (routes/websocket.js:238:17)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üöÄ [3ff97c31] Live data stream request initiated {
        symbols: 'aapl,msft',
        userId: 'dev-user...',
        userAgent: undefined,
        ip: '::ffff:127.0.0.1',
        timestamp: '2025-09-23T16:31:48.781Z'
      }

      at log (routes/websocket.js:190:13)

    console.log
      üîç [3ff97c31] Parsing requested symbols: aapl,msft

      at log (routes/websocket.js:199:13)

    console.log
      ‚úÖ [3ff97c31] Symbols validated: { validSymbols: [ 'AAPL', 'MSFT' ], symbolCount: 2 }

      at log (routes/websocket.js:221:13)

    console.log
      üîë [3ff97c31] Retrieving user API credentials for live data access

      at log (routes/websocket.js:227:13)

    console.error
      ‚ùå [3ff97c31] No API credentials found after 0ms {
        requestedProvider: 'alpaca',
        userId: 'dev-user...',
        impact: 'Live market data will not be available',
        recommendation: 'User needs to configure Alpaca API keys in settings'
      }

      236 |
      237 |       if (!credentials) {
    > 238 |         console.error(
          |                 ^
      239 |           `‚ùå [${requestId}] No API credentials found after ${credentialsDuration}ms`,
      240 |           {
      241 |             requestedProvider: "alpaca",

      at error (routes/websocket.js:238:17)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üöÄ [d6dd1f43] Live data stream request initiated {
        symbols: 'SYM0,SYM1,SYM2,SYM3,SYM4,SYM5,SYM6,SYM7,SYM8,SYM9,SYM10,SYM11,SYM12,SYM13,SYM14,SYM15,SYM16,SYM17,SYM18,SYM19,SYM20,SYM21,SYM22,SYM23,SYM24',
        userId: 'dev-user...',
        userAgent: undefined,
        ip: '::ffff:127.0.0.1',
        timestamp: '2025-09-23T16:31:48.785Z'
      }

      at log (routes/websocket.js:190:13)

    console.log
      üîç [d6dd1f43] Parsing requested symbols: SYM0,SYM1,SYM2,SYM3,SYM4,SYM5,SYM6,SYM7,SYM8,SYM9,SYM10,SYM11,SYM12,SYM13,SYM14,SYM15,SYM16,SYM17,SYM18,SYM19,SYM20,SYM21,SYM22,SYM23,SYM24

      at log (routes/websocket.js:199:13)

    console.error
      ‚ùå [d6dd1f43] Invalid symbols provided: {
        originalSymbols: 'SYM0,SYM1,SYM2,SYM3,SYM4,SYM5,SYM6,SYM7,SYM8,SYM9,SYM10,SYM11,SYM12,SYM13,SYM14,SYM15,SYM16,SYM17,SYM18,SYM19,SYM20,SYM21,SYM22,SYM23,SYM24',
        filteredSymbols: [],
        impact: 'No valid symbols to stream'
      }

      206 |
      207 |     if (symbols.length === 0) {
    > 208 |       console.error(`‚ùå [${requestId}] Invalid symbols provided:`, {
          |               ^
      209 |         originalSymbols: req.params.symbols,
      210 |         filteredSymbols: symbols,
      211 |         impact: "No valid symbols to stream",

      at error (routes/websocket.js:208:15)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at next (middleware/auth.js:63:14)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at next (middleware/responseFormatter.js:66:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at urlencodedParser (node_modules/body-parser/lib/types/urlencoded.js:94:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at logger (node_modules/morgan/index.js:144:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at cors (node_modules/cors/lib/index.js:188:7)
      at node_modules/cors/lib/index.js:224:17
      at originCallback (node_modules/cors/lib/index.js:214:15)
      at node_modules/cors/lib/index.js:219:13
      at optionsCallback (node_modules/cors/lib/index.js:199:9)
      at corsMiddleware (node_modules/cors/lib/index.js:204:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at internalNext (node_modules/helmet/index.cjs:537:6)
      at xXssProtectionMiddleware (node_modules/helmet/index.cjs:315:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPoweredByMiddleware (node_modules/helmet/index.cjs:308:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPermittedCrossDomainPoliciesMiddleware (node_modules/helmet/index.cjs:301:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xFrameOptionsMiddleware (node_modules/helmet/index.cjs:285:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDownloadOptionsMiddleware (node_modules/helmet/index.cjs:265:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDnsPrefetchControlMiddleware (node_modules/helmet/index.cjs:258:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xContentTypeOptionsMiddleware (node_modules/helmet/index.cjs:250:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at strictTransportSecurityMiddleware (node_modules/helmet/index.cjs:243:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at referrerPolicyMiddleware (node_modules/helmet/index.cjs:211:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at originAgentClusterMiddleware (node_modules/helmet/index.cjs:186:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginResourcePolicyMiddleware (node_modules/helmet/index.cjs:179:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginOpenerPolicyMiddleware (node_modules/helmet/index.cjs:163:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at contentSecurityPolicyMiddleware (node_modules/helmet/index.cjs:128:4)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at helmetMiddleware (node_modules/helmet/index.cjs:539:6)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üöÄ [d69f149f] Live data stream request initiated {
        symbols: 'AAPL',
        userId: 'dev-user...',
        userAgent: undefined,
        ip: '::ffff:127.0.0.1',
        timestamp: '2025-09-23T16:31:48.789Z'
      }

      at log (routes/websocket.js:190:13)

    console.log
      üîç [d69f149f] Parsing requested symbols: AAPL

      at log (routes/websocket.js:199:13)

    console.log
      ‚úÖ [d69f149f] Symbols validated: { validSymbols: [ 'AAPL' ], symbolCount: 1 }

      at log (routes/websocket.js:221:13)

    console.log
      üîë [d69f149f] Retrieving user API credentials for live data access

      at log (routes/websocket.js:227:13)

    console.error
      ‚ùå [d69f149f] No API credentials found after 0ms {
        requestedProvider: 'alpaca',
        userId: 'dev-user...',
        impact: 'Live market data will not be available',
        recommendation: 'User needs to configure Alpaca API keys in settings'
      }

      236 |
      237 |       if (!credentials) {
    > 238 |         console.error(
          |                 ^
      239 |           `‚ùå [${requestId}] No API credentials found after ${credentialsDuration}ms`,
      240 |           {
      241 |             requestedProvider: "alpaca",

      at error (routes/websocket.js:238:17)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.error
      Unsubscribe endpoint error: TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))
          at Function.from (<anonymous>)
          at from (/home/stocks/algo/webapp/lambda/routes/websocket.js:853:37)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at next (/home/stocks/algo/webapp/lambda/middleware/auth.js:63:14)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at next (/home/stocks/algo/webapp/lambda/middleware/responseFormatter.js:66:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at urlencodedParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/urlencoded.js:85:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:137:5
          at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
          at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
          at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
          at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
          at IncomingMessage.emit (node:events:524:28)
          at endReadableNT (node:internal/streams/readable:1698:12)
          at processTicksAndRejections (node:internal/process/task_queues:82:21)

      855 |     res.status(response.statusCode).json(response.response);
      856 |   } catch (error) {
    > 857 |     console.error("Unsubscribe endpoint error:", error);
          |             ^
      858 |     res.status(500).json(createErrorResponse("Failed to unsubscribe"));
      859 |   }
      860 | });

      at error (routes/websocket.js:857:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at next (middleware/auth.js:63:14)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at next (middleware/responseFormatter.js:66:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at urlencodedParser (node_modules/body-parser/lib/types/urlencoded.js:85:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:137:5
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üì° WebSocket connections requested for user: dev-user-bypass

      at log (routes/websocket.js:868:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üì° WebSocket connections requested for user: dev-user-bypass

      at log (routes/websocket.js:868:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üì° WebSocket connections requested for user: dev-user-bypass

      at log (routes/websocket.js:868:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üöÄ [fe6b9639] Live data stream request initiated {
        symbols: 'A@PPL,M$FT',
        userId: 'dev-user...',
        userAgent: undefined,
        ip: '::ffff:127.0.0.1',
        timestamp: '2025-09-23T16:31:48.893Z'
      }

      at log (routes/websocket.js:190:13)

    console.log
      üîç [fe6b9639] Parsing requested symbols: A@PPL,M$FT

      at log (routes/websocket.js:199:13)

    console.error
      ‚ùå [fe6b9639] Invalid symbols provided: {
        originalSymbols: 'A@PPL,M$FT',
        filteredSymbols: [],
        impact: 'No valid symbols to stream'
      }

      206 |
      207 |     if (symbols.length === 0) {
    > 208 |       console.error(`‚ùå [${requestId}] Invalid symbols provided:`, {
          |               ^
      209 |         originalSymbols: req.params.symbols,
      210 |         filteredSymbols: symbols,
      211 |         impact: "No valid symbols to stream",

      at error (routes/websocket.js:208:15)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at next (middleware/auth.js:63:14)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at next (middleware/responseFormatter.js:66:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at urlencodedParser (node_modules/body-parser/lib/types/urlencoded.js:94:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at logger (node_modules/morgan/index.js:144:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at cors (node_modules/cors/lib/index.js:188:7)
      at node_modules/cors/lib/index.js:224:17
      at originCallback (node_modules/cors/lib/index.js:214:15)
      at node_modules/cors/lib/index.js:219:13
      at optionsCallback (node_modules/cors/lib/index.js:199:9)
      at corsMiddleware (node_modules/cors/lib/index.js:204:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at internalNext (node_modules/helmet/index.cjs:537:6)
      at xXssProtectionMiddleware (node_modules/helmet/index.cjs:315:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPoweredByMiddleware (node_modules/helmet/index.cjs:308:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPermittedCrossDomainPoliciesMiddleware (node_modules/helmet/index.cjs:301:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xFrameOptionsMiddleware (node_modules/helmet/index.cjs:285:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDownloadOptionsMiddleware (node_modules/helmet/index.cjs:265:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDnsPrefetchControlMiddleware (node_modules/helmet/index.cjs:258:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xContentTypeOptionsMiddleware (node_modules/helmet/index.cjs:250:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at strictTransportSecurityMiddleware (node_modules/helmet/index.cjs:243:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at referrerPolicyMiddleware (node_modules/helmet/index.cjs:211:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at originAgentClusterMiddleware (node_modules/helmet/index.cjs:186:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginResourcePolicyMiddleware (node_modules/helmet/index.cjs:179:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginOpenerPolicyMiddleware (node_modules/helmet/index.cjs:163:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at contentSecurityPolicyMiddleware (node_modules/helmet/index.cjs:128:4)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at helmetMiddleware (node_modules/helmet/index.cjs:539:6)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üöÄ [dfae3182] Live data stream request initiated {
        symbols: 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA',
        userId: 'dev-user...',
        userAgent: undefined,
        ip: '::ffff:127.0.0.1',
        timestamp: '2025-09-23T16:31:48.898Z'
      }

      at log (routes/websocket.js:190:13)

    console.log
      üîç [dfae3182] Parsing requested symbols: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA

      at log (routes/websocket.js:199:13)

    console.error
      ‚ùå [dfae3182] Invalid symbols provided: {
        originalSymbols: 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA',
        filteredSymbols: [],
        impact: 'No valid symbols to stream'
      }

      206 |
      207 |     if (symbols.length === 0) {
    > 208 |       console.error(`‚ùå [${requestId}] Invalid symbols provided:`, {
          |               ^
      209 |         originalSymbols: req.params.symbols,
      210 |         filteredSymbols: symbols,
      211 |         impact: "No valid symbols to stream",

      at error (routes/websocket.js:208:15)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at next (middleware/auth.js:63:14)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at next (middleware/responseFormatter.js:66:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at urlencodedParser (node_modules/body-parser/lib/types/urlencoded.js:94:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at logger (node_modules/morgan/index.js:144:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at cors (node_modules/cors/lib/index.js:188:7)
      at node_modules/cors/lib/index.js:224:17
      at originCallback (node_modules/cors/lib/index.js:214:15)
      at node_modules/cors/lib/index.js:219:13
      at optionsCallback (node_modules/cors/lib/index.js:199:9)
      at corsMiddleware (node_modules/cors/lib/index.js:204:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at internalNext (node_modules/helmet/index.cjs:537:6)
      at xXssProtectionMiddleware (node_modules/helmet/index.cjs:315:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPoweredByMiddleware (node_modules/helmet/index.cjs:308:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPermittedCrossDomainPoliciesMiddleware (node_modules/helmet/index.cjs:301:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xFrameOptionsMiddleware (node_modules/helmet/index.cjs:285:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDownloadOptionsMiddleware (node_modules/helmet/index.cjs:265:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDnsPrefetchControlMiddleware (node_modules/helmet/index.cjs:258:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xContentTypeOptionsMiddleware (node_modules/helmet/index.cjs:250:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at strictTransportSecurityMiddleware (node_modules/helmet/index.cjs:243:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at referrerPolicyMiddleware (node_modules/helmet/index.cjs:211:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at originAgentClusterMiddleware (node_modules/helmet/index.cjs:186:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginResourcePolicyMiddleware (node_modules/helmet/index.cjs:179:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginOpenerPolicyMiddleware (node_modules/helmet/index.cjs:163:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at contentSecurityPolicyMiddleware (node_modules/helmet/index.cjs:128:4)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at helmetMiddleware (node_modules/helmet/index.cjs:539:6)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üöÄ [4b15f664] Live data stream request initiated {
        symbols: '123,456',
        userId: 'dev-user...',
        userAgent: undefined,
        ip: '::ffff:127.0.0.1',
        timestamp: '2025-09-23T16:31:48.901Z'
      }

      at log (routes/websocket.js:190:13)

    console.log
      üîç [4b15f664] Parsing requested symbols: 123,456

      at log (routes/websocket.js:199:13)

    console.error
      ‚ùå [4b15f664] Invalid symbols provided: {
        originalSymbols: '123,456',
        filteredSymbols: [],
        impact: 'No valid symbols to stream'
      }

      206 |
      207 |     if (symbols.length === 0) {
    > 208 |       console.error(`‚ùå [${requestId}] Invalid symbols provided:`, {
          |               ^
      209 |         originalSymbols: req.params.symbols,
      210 |         filteredSymbols: symbols,
      211 |         impact: "No valid symbols to stream",

      at error (routes/websocket.js:208:15)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at next (middleware/auth.js:63:14)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at next (middleware/responseFormatter.js:66:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at urlencodedParser (node_modules/body-parser/lib/types/urlencoded.js:94:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at logger (node_modules/morgan/index.js:144:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at cors (node_modules/cors/lib/index.js:188:7)
      at node_modules/cors/lib/index.js:224:17
      at originCallback (node_modules/cors/lib/index.js:214:15)
      at node_modules/cors/lib/index.js:219:13
      at optionsCallback (node_modules/cors/lib/index.js:199:9)
      at corsMiddleware (node_modules/cors/lib/index.js:204:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at internalNext (node_modules/helmet/index.cjs:537:6)
      at xXssProtectionMiddleware (node_modules/helmet/index.cjs:315:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPoweredByMiddleware (node_modules/helmet/index.cjs:308:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPermittedCrossDomainPoliciesMiddleware (node_modules/helmet/index.cjs:301:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xFrameOptionsMiddleware (node_modules/helmet/index.cjs:285:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDownloadOptionsMiddleware (node_modules/helmet/index.cjs:265:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDnsPrefetchControlMiddleware (node_modules/helmet/index.cjs:258:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xContentTypeOptionsMiddleware (node_modules/helmet/index.cjs:250:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at strictTransportSecurityMiddleware (node_modules/helmet/index.cjs:243:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at referrerPolicyMiddleware (node_modules/helmet/index.cjs:211:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at originAgentClusterMiddleware (node_modules/helmet/index.cjs:186:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginResourcePolicyMiddleware (node_modules/helmet/index.cjs:179:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginOpenerPolicyMiddleware (node_modules/helmet/index.cjs:163:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at contentSecurityPolicyMiddleware (node_modules/helmet/index.cjs:128:4)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at helmetMiddleware (node_modules/helmet/index.cjs:539:6)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè WebSocket Routes ‚Ä∫ DELETE /api/websocket/subscribe ‚Ä∫ should handle full unsubscription

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      574 |         .send({});
      575 |
    > 576 |       expect(response.status).toBe(200);
          |                               ^
      577 |
      578 |       if (response.status === 200) {
      579 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/websocket.integration.test.js:576:31)

::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/bars/AAPL HTTP/1.1" 403 95 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/bars/AAPL?timeframe=5Min HTTP/1.1" 403 95 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/bars/AAPL HTTP/1.1" 403 95 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/bars/AAPL,MSFT HTTP/1.1" 403 95 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/bars/AAPL?timeframe=1Min HTTP/1.1" 403 95 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/bars/AAPL?timeframe=5Min HTTP/1.1" 403 95 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/bars/AAPL?timeframe=15Min HTTP/1.1" 403 95 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/bars/AAPL?timeframe=1Hour HTTP/1.1" 403 95 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/bars/AAPL?timeframe=1Day HTTP/1.1" 403 95 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "POST /api/websocket/subscribe HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "POST /api/websocket/subscribe HTTP/1.1" 400 88 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "POST /api/websocket/subscribe HTTP/1.1" 200 332 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "POST /api/websocket/subscribe HTTP/1.1" 200 297 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "POST /api/websocket/subscribe HTTP/1.1" 200 275 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "POST /api/websocket/subscribe HTTP/1.1" 400 88 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/subscriptions HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/subscriptions HTTP/1.1" 200 223 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "DELETE /api/websocket/subscribe HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "DELETE /api/websocket/subscribe HTTP/1.1" 200 130 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "DELETE /api/websocket/subscribe HTTP/1.1" 500 88 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "DELETE /api/websocket/subscribe HTTP/1.1" 200 130 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/connections HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/connections HTTP/1.1" 200 478 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/connections?details=true HTTP/1.1" 200 498 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/connections?details=false HTTP/1.1" 200 478 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/stream/AAPL HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "POST /api/websocket/subscribe HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "POST /api/websocket/subscribe HTTP/1.1" 400 88 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/health HTTP/1.1" 200 337 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/health HTTP/1.1" 200 337 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/status HTTP/1.1" 200 269 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/test HTTP/1.1" 200 78 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/subscriptions HTTP/1.1" 200 110 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket HTTP/1.1" 200 411 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/status HTTP/1.1" 200 269 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/subscriptions HTTP/1.1" 200 110 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/stream/ HTTP/1.1" 400 129 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/stream/A@PPL,M$FT HTTP/1.1" 400 146 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/stream/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA HTTP/1.1" 400 146 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:48 +0000] "GET /api/websocket/stream/123,456 HTTP/1.1" 400 146 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/SPY/holdings HTTP/1.1" 200 446 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/QQQ/holdings HTTP/1.1" 200 446 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/IWM/holdings HTTP/1.1" 200 446 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/VTI/holdings HTTP/1.1" 200 446 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/VOO/holdings HTTP/1.1" 200 446 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/SPY/holdings HTTP/1.1" 200 446 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/SPY/holdings HTTP/1.1" 200 446 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/INVALID/holdings HTTP/1.1" 404 132 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/SPY/holdings?limit=5 HTTP/1.1" 200 446 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/SPY/holdings?limit=25 HTTP/1.1" 200 446 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/SPY/holdings?limit=50 HTTP/1.1" 200 446 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/SPY/holdings?limit=100 HTTP/1.1" 200 446 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/SPY/holdings?limit=invalid HTTP/1.1" 200 446 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf//holdings HTTP/1.1" 404 123 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/SPY@ HTTP/1.1" 404 118 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/SPY/performance HTTP/1.1" 200 560 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/QQQ/performance HTTP/1.1" 200 560 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/SPY/performance?timeframe=1D HTTP/1.1" 200 560 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/SPY/performance?timeframe=1W HTTP/1.1" 200 560 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/SPY/performance?timeframe=1M HTTP/1.1" 200 560 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/SPY/performance?timeframe=3M HTTP/1.1" 200 560 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/SPY/performance?timeframe=6M HTTP/1.1" 200 560 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/SPY/performance?timeframe=1Y HTTP/1.1" 200 560 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/SPY/performance?timeframe=3Y HTTP/1.1" 200 560 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/SPY/performance?timeframe=5Y HTTP/1.1" 200 560 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/SPY/performance?benchmark=SPX HTTP/1.1" 200 560 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/SPY/analytics HTTP/1.1" 200 1091 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/VTI/analytics HTTP/1.1" 200 1091 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/screener HTTP/1.1" 200 1458 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/screener?max_expense_ratio=0.5 HTTP/1.1" 200 1456 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/screener?min_assets=1000000000 HTTP/1.1" 200 1510 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/screener?category=equity HTTP/1.1" 200 332 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/screener?category=fixed_income HTTP/1.1" 200 344 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/screener?category=commodity HTTP/1.1" 200 338 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/screener?category=mixed HTTP/1.1" 200 330 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/screener?sector=Technology HTTP/1.1" 200 1458 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/screener?min_dividend_yield=2.0 HTTP/1.1" 200 1028 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/screener?category=equity&max_expense_ratio=0.5&min_assets=500000000 HTTP/1.1" 200 380 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/screener?sort=assets&order=desc HTTP/1.1" 200 1458 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/screener?sort=expense_ratio&order=desc HTTP/1.1" 200 1458 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/screener?sort=dividend_yield&order=desc HTTP/1.1" 200 1458 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/screener?sort=performance&order=desc HTTP/1.1" 200 1458 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/screener?page=1&limit=25 HTTP/1.1" 200 1458 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/compare?symbols=SPY,QQQ,VTI HTTP/1.1" 200 1497 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/compare?symbols=SPY,INVALID,QQQ HTTP/1.1" 200 1513 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/compare?symbols=SPY HTTP/1.1" 200 925 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/compare?symbols=SPY,QQQ&metrics=performance,risk,dividend HTTP/1.1" 200 1255 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/trending HTTP/1.1" 200 407 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/trending?timeframe=1D HTTP/1.1" 200 407 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/trending?timeframe=1W HTTP/1.1" 200 407 "-" "-"
FAIL tests/integration/routes/etf.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üìà ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for QQQ

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for IWM

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for VTI

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for VOO

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for INVALID

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF performance requested for SPY, timeframe: 1y

      at log (routes/etf.js:167:13)

    console.log
      üìà ETF performance requested for QQQ, timeframe: 1y

      at log (routes/etf.js:167:13)

    console.log
      üìà ETF performance requested for SPY, timeframe: 1D

      at log (routes/etf.js:167:13)

    console.log
      üìà ETF performance requested for SPY, timeframe: 1W

      at log (routes/etf.js:167:13)

    console.log
      üìà ETF performance requested for SPY, timeframe: 1M

      at log (routes/etf.js:167:13)

    console.log
      üìà ETF performance requested for SPY, timeframe: 3M

      at log (routes/etf.js:167:13)

    console.log
      üìà ETF performance requested for SPY, timeframe: 6M

      at log (routes/etf.js:167:13)

    console.log
      üìà ETF performance requested for SPY, timeframe: 1Y

      at log (routes/etf.js:167:13)

    console.log
      üìà ETF performance requested for SPY, timeframe: 3Y

      at log (routes/etf.js:167:13)

    console.log
      üìà ETF performance requested for SPY, timeframe: 5Y

      at log (routes/etf.js:167:13)

    console.log
      üìà ETF performance requested for SPY, timeframe: 1y

      at log (routes/etf.js:167:13)

    console.log
      üìä ETF analytics requested for SPY, period: 1y

      at log (routes/etf.js:269:13)

    console.log
      üìä ETF analytics requested for VTI, period: 1y

      at log (routes/etf.js:269:13)

    console.log
      ETF screener with filters: {}

      at log (routes/etf.js:593:13)

    console.log
      ETF screener with filters: { max_expense_ratio: '0.5' }

      at log (routes/etf.js:593:13)

    console.log
      ETF screener with filters: { min_assets: '1000000000' }

      at log (routes/etf.js:593:13)

    console.log
      ETF screener with filters: { category: 'equity' }

      at log (routes/etf.js:593:13)

    console.log
      ETF screener with filters: { category: 'fixed_income' }

      at log (routes/etf.js:593:13)

    console.log
      ETF screener with filters: { category: 'commodity' }

      at log (routes/etf.js:593:13)

    console.log
      ETF screener with filters: { category: 'mixed' }

      at log (routes/etf.js:593:13)

    console.log
      ETF screener with filters: { sector: 'Technology' }

      at log (routes/etf.js:593:13)

    console.log
      ETF screener with filters: { min_dividend_yield: '2.0' }

      at log (routes/etf.js:593:13)

    console.log
      ETF screener with filters: {
        category: 'equity',
        max_expense_ratio: '0.5',
        min_assets: '500000000'
      }

      at log (routes/etf.js:593:13)

    console.log
      ETF screener with filters: { sort: 'assets', order: 'desc' }

      at log (routes/etf.js:593:13)

    console.log
      ETF screener with filters: { sort: 'expense_ratio', order: 'desc' }

      at log (routes/etf.js:593:13)

    console.log
      ETF screener with filters: { sort: 'dividend_yield', order: 'desc' }

      at log (routes/etf.js:593:13)

    console.log
      ETF screener with filters: { sort: 'performance', order: 'desc' }

      at log (routes/etf.js:593:13)

    console.log
      ETF screener with filters: { page: '1', limit: '25' }

      at log (routes/etf.js:593:13)

    console.log
      üìà ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for QQQ

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for VTI

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for IWM

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for VOO

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

    console.log
      ETF screener with filters: {}

      at log (routes/etf.js:593:13)

    console.log
      üìà ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

    console.log
      ETF screener with filters: { max_expense_ratio: 'invalid' }

      at log (routes/etf.js:593:13)

    console.log
      ETF screener with filters: { page: '-1' }

      at log (routes/etf.js:593:13)

    console.log
      ETF screener with filters: { limit: 'abc' }

      at log (routes/etf.js:593:13)

    console.log
      üìà ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for SPY'; DROP TABLE etf_holdings; --

      at log (routes/etf.js:20:13)

    console.log
      ETF screener with filters: {}

      at log (routes/etf.js:593:13)

    console.log
      ETF screener with filters: {}

      at log (routes/etf.js:593:13)

    console.log
      ETF screener with filters: {}

      at log (routes/etf.js:593:13)

    console.log
      ETF screener with filters: {}

      at log (routes/etf.js:593:13)

    console.log
      ETF screener with filters: {}

      at log (routes/etf.js:593:13)

    console.log
      ETF screener with filters: {}

      at log (routes/etf.js:593:13)

    console.log
      ETF screener with filters: {}

      at log (routes/etf.js:593:13)

    console.log
      ETF screener with filters: {}

      at log (routes/etf.js:593:13)

    console.log
      ETF screener with filters: {}

      at log (routes/etf.js:593:13)

    console.log
      ETF screener with filters: {}

      at log (routes/etf.js:593:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè ETF Routes Integration Tests ‚Ä∫ Performance and Edge Cases ‚Ä∫ should handle authentication edge cases for protected endpoints

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      496 |         .set("Authorization", "Bearer invalid-token");
      497 |
    > 498 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      499 |     });
      500 |
      501 |     test("should handle stress testing with multiple concurrent requests", async () => {

      at Object.toBe (tests/integration/routes/etf.integration.test.js:498:52)

::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/trending?timeframe=1M HTTP/1.1" 200 407 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/trending?category=equity HTTP/1.1" 200 410 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/flows HTTP/1.1" 200 396 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/flows?period=1D HTTP/1.1" 200 396 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/flows?period=1W HTTP/1.1" 200 396 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/flows?period=1M HTTP/1.1" 200 396 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/flows?period=3M HTTP/1.1" 200 396 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/flows?period=6M HTTP/1.1" 200 396 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/flows?period=1Y HTTP/1.1" 200 396 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/flows?type=equity HTTP/1.1" 200 396 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/SPY/holdings HTTP/1.1" 200 446 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/VTI/holdings HTTP/1.1" 200 446 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/QQQ/holdings HTTP/1.1" 200 446 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/IWM/holdings HTTP/1.1" 200 446 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/VOO/holdings HTTP/1.1" 200 446 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/SPY/holdings?limit=500 HTTP/1.1" 200 446 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/screener HTTP/1.1" 200 1458 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/SPY/holdings HTTP/1.1" 200 446 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/SPY/holdings HTTP/1.1" 200 446 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/screener?max_expense_ratio=invalid HTTP/1.1" 200 292 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/screener?page=-1 HTTP/1.1" 200 1458 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/screener?limit=abc HTTP/1.1" 200 301 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/compare?symbols= HTTP/1.1" 400 130 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/SPY/holdings?limit=999999 HTTP/1.1" 200 446 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/SPY%27%3B%20DROP%20TABLE%20etf_holdings%3B%20--/holdings HTTP/1.1" 200 626 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/SPY/premium-analytics HTTP/1.1" 404 135 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/screener HTTP/1.1" 200 1458 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/screener HTTP/1.1" 200 1458 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/screener HTTP/1.1" 200 1458 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/screener HTTP/1.1" 200 1458 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/screener HTTP/1.1" 200 1458 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/screener HTTP/1.1" 200 1458 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/screener HTTP/1.1" 200 1458 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/screener HTTP/1.1" 200 1458 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/screener HTTP/1.1" 200 1458 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:49 +0000] "GET /api/etf/screener HTTP/1.1" 200 1458 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:50 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:50 +0000] "POST /api/risk/analyze HTTP/1.1" 200 628 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:50 +0000] "GET /api/market/data?symbols=AAPL&timeframe=1D HTTP/1.1" 200 979 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:50 +0000] "POST /api/technical/indicators HTTP/1.1" 404 130 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:50 +0000] "GET /api/portfolio/summary HTTP/1.1" 200 656 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:50 +0000] "POST /api/orders HTTP/1.1" 400 85 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:50 +0000] "POST /api/websocket/subscribe HTTP/1.1" 200 301 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:50 +0000] "POST /api/alerts HTTP/1.1" 201 351 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:50 +0000] "GET /api/alerts/active HTTP/1.1" 200 1509 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:50 +0000] "GET /api/market/live?symbols=AAPL HTTP/1.1" 200 161 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:50 +0000] "GET /api/market/historical?symbols=AAPL&start_date=2024-01-01&end_date=2024-12-31 HTTP/1.1" 200 313 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:50 +0000] "GET /api/market/data?symbols=AAPL HTTP/1.1" 200 979 "-" "-"
FAIL tests/integration/services/cross-service-integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Portfolio positions requested for user: dev-user-bypass

      at log (routes/portfolio.js:258:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîç Risk analyze requested - symbols: 2, portfolio: false

      at log (routes/risk.js:1608:13)

    console.log
      üìä Market data endpoint called

      at log (routes/market.js:71:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Portfolio summary requested for user: dev-user-bypass

      at log (routes/portfolio.js:174:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìù New order submission for user: dev-user-bypass, symbol: AAPL, side: buy

      at log (routes/orders.js:399:11)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üÜï New alert creation requested by user: dev-user-bypass for AAPL

      at log (routes/alerts.js:460:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîî Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:38:13)

    console.log
      üìà Live market data requested for symbols: AAPL

      at log (routes/market.js:5655:13)

    console.log
      üìä Historical market data requested for symbols: AAPL

      at log (routes/market.js:5699:13)

    console.log
      üìä Market data endpoint called

      at log (routes/market.js:71:13)

    console.log
      üìä Market data endpoint called

      at log (routes/market.js:71:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      POST /rebalance called for user: dev-user-bypass

      at log (routes/portfolio.js:1978:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Cross-Service Integration ‚Ä∫ Portfolio ‚Üí Market Data ‚Üí Risk Analysis Integration ‚Ä∫ should integrate market data with technical analysis

    expect(received).toContain(expected) // indexOf

    Expected value: 404
    Received array: [200, 400, 401, 500, 501]

      73 |           });
      74 |
    > 75 |         expect([200, 400, 401, 500, 501]).toContain(technicalResponse.status);
         |                                           ^
      76 |
      77 |         if (technicalResponse.status === 200) {
      78 |           expect(technicalResponse.body).toHaveProperty("success", true);

      at Object.toContain (tests/integration/services/cross-service-integration.test.js:75:43)

  ‚óè Cross-Service Integration ‚Ä∫ Authentication ‚Üí Database ‚Üí Service Integration ‚Ä∫ should handle database transactions across multiple services

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 400

      112 |         .send(orderData);
      113 |
    > 114 |       expect(response.status).toBe(200);
          |                               ^
      115 |
      116 |       // If order is processed, it should involve:
      117 |       // 1. Order validation service

      at Object.toBe (tests/integration/services/cross-service-integration.test.js:114:31)

  ‚óè Cross-Service Integration ‚Ä∫ Error Recovery Integration ‚Ä∫ should handle service failure cascades gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 400

      244 |         });
      245 |
    > 246 |       expect(response.status).toBe(200);
          |                               ^
      247 |
      248 |       // Should handle complex operation failures without crashing
      249 |       expect(response.body).toHaveProperty("success");

      at Object.toBe (tests/integration/services/cross-service-integration.test.js:246:31)

::ffff:127.0.0.1 - - [23/Sep/2025:16:31:50 +0000] "GET /api/market/data?symbols=AAPL HTTP/1.1" 200 979 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:50 +0000] "POST /api/portfolio/rebalance HTTP/1.1" 400 125 "-" "-"
FAIL tests/unit/routes/signals.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      üìà Buy signals requested for daily timeframe

      at log (routes/signals.js:104:13)

    console.log
      üìà Buy signals requested for weekly timeframe

      at log (routes/signals.js:104:13)

    console.log
      üìà Buy signals requested for invalid timeframe

      at log (routes/signals.js:104:13)

    console.log
      üìà Buy signals requested for daily timeframe

      at log (routes/signals.js:104:13)

    console.log
      üìà Buy signals requested for daily timeframe

      at log (routes/signals.js:104:13)

    console.log
      üìâ Sell signals requested for daily timeframe

      at log (routes/signals.js:172:13)

    console.log
      üìâ Sell signals requested for monthly timeframe

      at log (routes/signals.js:172:13)

    console.log
      üìä Signals requested for symbol: TECHNICAL

      at log (routes/signals.js:514:13)

    console.log
      üìä Signals requested for symbol: TECHNICAL

      at log (routes/signals.js:514:13)

    console.log
      üìä Signals requested for symbol: TECHNICAL

      at log (routes/signals.js:514:13)

    console.log
      üìä Signals requested for symbol: TECHNICAL

      at log (routes/signals.js:514:13)

    console.log
      üìä Signals requested for symbol: MOMENTUM

      at log (routes/signals.js:514:13)

    console.log
      üìä Signals requested for symbol: MOMENTUM

      at log (routes/signals.js:514:13)

    console.log
      üìä Signals requested for symbol: MOMENTUM

      at log (routes/signals.js:514:13)

    console.log
      üìä Signals requested for symbol: OPTIONS

      at log (routes/signals.js:514:13)

    console.log
      üìä Signals requested for symbol: OPTIONS

      at log (routes/signals.js:514:13)

    console.log
      üìä Signals requested for symbol: OPTIONS

      at log (routes/signals.js:514:13)

    console.log
      üìä Signals requested for symbol: OPTIONS

      at log (routes/signals.js:514:13)

    console.log
      üìä Signals requested for symbol: SENTIMENT

      at log (routes/signals.js:514:13)

    console.log
      üìä Signals requested for symbol: SENTIMENT

      at log (routes/signals.js:514:13)

    console.log
      üìä Signals requested for symbol: SENTIMENT

      at log (routes/signals.js:514:13)

    console.log
      üìä Signals requested for symbol: SENTIMENT

      at log (routes/signals.js:514:13)

    console.log
      üìä Signals requested for symbol: EARNINGS

      at log (routes/signals.js:514:13)

    console.log
      üìä Signals requested for symbol: EARNINGS

      at log (routes/signals.js:514:13)

    console.log
      üìä Signals requested for symbol: EARNINGS

      at log (routes/signals.js:514:13)

    console.log
      üìä Signals requested for symbol: CRYPTO

      at log (routes/signals.js:514:13)

    console.log
      üìä Signals requested for symbol: CRYPTO

      at log (routes/signals.js:514:13)

    console.log
      üìä Signals requested for symbol: CRYPTO

      at log (routes/signals.js:514:13)

    console.log
      üìä Signals requested for symbol: SECTOR-ROTATION

      at log (routes/signals.js:514:13)

    console.log
      üìä Signals requested for symbol: SECTOR-ROTATION

      at log (routes/signals.js:514:13)

    console.log
      üìä Signals requested for symbol: SECTOR-ROTATION

      at log (routes/signals.js:514:13)

    console.log
      üìä Signals requested for symbol: HISTORY

      at log (routes/signals.js:514:13)

    console.log
      üìä Signals requested for symbol: HISTORY

      at log (routes/signals.js:514:13)

    console.log
      üìä Signals requested for symbol: HISTORY

      at log (routes/signals.js:514:13)

    console.log
      üìä Signals requested for symbol: HISTORY

      at log (routes/signals.js:514:13)

    console.log
      üîî Signal alerts requested

      at log (routes/signals.js:262:13)

    console.error
      Database query error: {
        error: 'column "alert_id" does not exist',
        query: '\n' +
          '      SELECT\n' +
          '        alert_id,\n' +
          '        symbol,\n' +
          '        signal_type,\n' +
          '        min_strength,\n' +
          '        n...',
        params: 'no parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/signals.js:298:20

    console.error
      Signal alerts error: error: column "alert_id" does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/signals.js:298:20 {
        length: 176,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: 'Perhaps you meant to reference the column "signal_alerts.user_id".',
        position: '23',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3729',
        routine: 'errorMissingColumn'
      }

      305 |     });
      306 |   } catch (error) {
    > 307 |     console.error("Signal alerts error:", error);
          |             ^
      308 |
      309 |     // If table doesn't exist and we can't create it, return empty data instead of error
      310 |     if (error.message.includes('does not exist') || error.message.includes('alert_id')) {

      at error (routes/signals.js:307:13)

    console.log
      üîî Signal alerts requested

      at log (routes/signals.js:262:13)

    console.error
      Database query error: {
        error: 'column "alert_id" does not exist',
        query: '\n' +
          '      SELECT\n' +
          '        alert_id,\n' +
          '        symbol,\n' +
          '        signal_type,\n' +
          '        min_strength,\n' +
          '        n...',
        params: 'no parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/signals.js:298:20

    console.error
      Signal alerts error: error: column "alert_id" does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/signals.js:298:20 {
        length: 176,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: 'Perhaps you meant to reference the column "signal_alerts.user_id".',
        position: '23',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3729',
        routine: 'errorMissingColumn'
      }

      305 |     });
      306 |   } catch (error) {
    > 307 |     console.error("Signal alerts error:", error);
          |             ^
      308 |
      309 |     // If table doesn't exist and we can't create it, return empty data instead of error
      310 |     if (error.message.includes('does not exist') || error.message.includes('alert_id')) {

      at error (routes/signals.js:307:13)

    console.log
      üîî Creating signal alert for AAPL

      at log (routes/signals.js:334:13)

    console.error
      Database query error: {
        error: 'column "alert_id" of relation "signal_alerts" does not exist',
        query: '\n' +
          '      INSERT INTO signal_alerts (\n' +
          '        alert_id, symbol, signal_type, min_strength,\n' +
          '        noti...',
        params: '7 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/signals.js:356:20

    console.error
      Create signal alert error: error: column "alert_id" of relation "signal_alerts" does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/signals.js:356:20 {
        length: 134,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '44',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_target.c',
        line: '1066',
        routine: 'checkInsertTargets'
      }

      373 |     });
      374 |   } catch (error) {
    > 375 |     console.error("Create signal alert error:", error);
          |             ^
      376 |     res.status(500).json({
      377 |       success: false,
      378 |       error: "Failed to create signal alert",

      at error (routes/signals.js:375:13)

    console.log
      üìä Signal performance requested

      at log (routes/signals.js:480:13)

    console.log
      üìä Signal performance requested

      at log (routes/signals.js:480:13)

    console.log
      üìä Signal performance requested

      at log (routes/signals.js:480:13)

    console.log
      üìà Buy signals requested for daily timeframe

      at log (routes/signals.js:104:13)

    console.log
      üìà Buy signals requested for daily timeframe

      at log (routes/signals.js:104:13)

    console.log
      üìä Signals requested for symbol: INVALID_SIGNAL_TYPE

      at log (routes/signals.js:514:13)

    console.log
      üìà Buy signals requested for daily timeframe

      at log (routes/signals.js:104:13)

    console.log
      üìà Buy signals requested for daily timeframe

      at log (routes/signals.js:104:13)

    console.log
      üìà Buy signals requested for daily timeframe

      at log (routes/signals.js:104:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Signals Route - Unit Tests ‚Ä∫ GET /api/signals/buy ‚Ä∫ should handle different timeframes

    expect(received).toHaveProperty(path, value)

    Expected path: "signal_type"

    Expected value: "buy"
    Received value: "BUY"

      73 |         expect(response.body).toHaveProperty("error");
      74 |       } else {
    > 75 |         expect(response.body).toHaveProperty("signal_type", "buy");
         |                               ^
      76 |       }
      77 |     });
      78 |

      at Object.toHaveProperty (tests/unit/routes/signals.test.js:75:31)

  ‚óè Signals Route - Unit Tests ‚Ä∫ GET /api/signals/buy ‚Ä∫ should validate timeframe parameter

    expected 400 "Bad Request", got 200 "OK"

      80 |       const response = await request(app)
      81 |         .get("/api/signals/buy?timeframe=invalid")
    > 82 |         .expect(400);
         |          ^
      83 |
      84 |       expect(response.body.success).toBe(false);
      85 |       expect(response.body.error).toContain("Invalid timeframe");

      at Object.expect (tests/unit/routes/signals.test.js:82:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Signals Route - Unit Tests ‚Ä∫ GET /api/signals/sell ‚Ä∫ should get sell signals

    expect(received).toHaveProperty(path, value)

    Expected path: "signal_type"

    Expected value: "sell"
    Received value: "SELL"

      130 |         expect(response.body).toHaveProperty("error");
      131 |       } else {
    > 132 |         expect(response.body).toHaveProperty("signal_type", "sell");
          |                               ^
      133 |       }
      134 |     });
      135 |

      at Object.toHaveProperty (tests/unit/routes/signals.test.js:132:31)

  ‚óè Signals Route - Unit Tests ‚Ä∫ GET /api/signals/technical ‚Ä∫ should return technical analysis signals

    expect(received).toHaveProperty(path, value)

    Expected path: "signal_type"
    Received path: []

    Expected value: "technical"
    Received value: {"data": [], "success": true, "summary": {"avg_confidence": null, "avg_risk": null, "buy_signals": 0, "sell_signals": 0, "total_signals": 0}, "symbol": "TECHNICAL", "timeframe": "daily", "timestamp": "2025-09-23T16:31:50.580Z"}

      164 |         expect(response.body).toHaveProperty("pagination");
      165 |       } else {
    > 166 |         expect(response.body).toHaveProperty("signal_type", "technical");
          |                               ^
      167 |         expect(response.body).toHaveProperty("indicators");
      168 |
      169 |         if (response.body.data.length > 0) {

      at Object.toHaveProperty (tests/unit/routes/signals.test.js:166:31)

  ‚óè Signals Route - Unit Tests ‚Ä∫ GET /api/signals/technical ‚Ä∫ should filter by specific indicators

    expect(received).toHaveProperty(path)

    Expected path: "indicators"
    Received path: []

    Received value: {"data": [], "success": true, "summary": {"avg_confidence": null, "avg_risk": null, "buy_signals": 0, "sell_signals": 0, "total_signals": 0}, "symbol": "TECHNICAL", "timeframe": "daily", "timestamp": "2025-09-23T16:31:50.583Z"}

      183 |
      184 |       expect(response.body).toHaveProperty("data");
    > 185 |       expect(response.body).toHaveProperty("indicators");
          |                             ^
      186 |
      187 |       if (response.body.indicators) {
      188 |         expect(response.body.indicators).toContain("RSI");

      at Object.toHaveProperty (tests/unit/routes/signals.test.js:185:29)

  ‚óè Signals Route - Unit Tests ‚Ä∫ GET /api/signals/momentum ‚Ä∫ should return momentum signals

    expect(received).toHaveProperty(path, value)

    Expected path: "signal_type"
    Received path: []

    Expected value: "momentum"
    Received value: {"data": [], "success": true, "summary": {"avg_confidence": null, "avg_risk": null, "buy_signals": 0, "sell_signals": 0, "total_signals": 0}, "symbol": "MOMENTUM", "timeframe": "daily", "timestamp": "2025-09-23T16:31:50.595Z"}

      24 |     } else if (expectedSignalType) {
      25 |       // Normal operation mode
    > 26 |       expect(response.body).toHaveProperty("signal_type", expectedSignalType);
         |                             ^
      27 |     }
      28 |   };
      29 |

      at toHaveProperty (tests/unit/routes/signals.test.js:26:29)
      at Object.expectValidResponse (tests/unit/routes/signals.test.js:230:7)

  ‚óè Signals Route - Unit Tests ‚Ä∫ GET /api/signals/options ‚Ä∫ should return options signals

    expect(received).toHaveProperty(path, value)

    Expected path: "signal_type"
    Received path: []

    Expected value: "options"
    Received value: {"data": [], "success": true, "summary": {"avg_confidence": null, "avg_risk": null, "buy_signals": 0, "sell_signals": 0, "total_signals": 0}, "symbol": "OPTIONS", "timeframe": "daily", "timestamp": "2025-09-23T16:31:50.603Z"}

      277 |       expect(response.body).toHaveProperty("data");
      278 |       expect(Array.isArray(response.body.data)).toBe(true);
    > 279 |       expect(response.body).toHaveProperty("signal_type", "options");
          |                             ^
      280 |
      281 |       if (response.body.data.length > 0) {
      282 |         const signal = response.body.data[0];

      at Object.toHaveProperty (tests/unit/routes/signals.test.js:279:29)

  ‚óè Signals Route - Unit Tests ‚Ä∫ GET /api/signals/sentiment ‚Ä∫ should return sentiment-based signals

    expect(received).toHaveProperty(path, value)

    Expected path: "signal_type"
    Received path: []

    Expected value: "sentiment"
    Received value: {"data": [], "success": true, "summary": {"avg_confidence": null, "avg_risk": null, "buy_signals": 0, "sell_signals": 0, "total_signals": 0}, "symbol": "SENTIMENT", "timeframe": "daily", "timestamp": "2025-09-23T16:31:50.615Z"}

      338 |       expect(response.body).toHaveProperty("data");
      339 |       expect(Array.isArray(response.body.data)).toBe(true);
    > 340 |       expect(response.body).toHaveProperty("signal_type", "sentiment");
          |                             ^
      341 |
      342 |       if (response.body.data.length > 0) {
      343 |         const signal = response.body.data[0];

      at Object.toHaveProperty (tests/unit/routes/signals.test.js:340:29)

  ‚óè Signals Route - Unit Tests ‚Ä∫ GET /api/signals/earnings ‚Ä∫ should return earnings-based signals

    expect(received).toHaveProperty(path, value)

    Expected path: "signal_type"
    Received path: []

    Expected value: "earnings"
    Received value: {"data": [], "success": true, "summary": {"avg_confidence": null, "avg_risk": null, "buy_signals": 0, "sell_signals": 0, "total_signals": 0}, "symbol": "EARNINGS", "timeframe": "daily", "timestamp": "2025-09-23T16:31:50.626Z"}

      402 |       expect(response.body).toHaveProperty("data");
      403 |       expect(Array.isArray(response.body.data)).toBe(true);
    > 404 |       expect(response.body).toHaveProperty("signal_type", "earnings");
          |                             ^
      405 |
      406 |       if (response.body.data.length > 0) {
      407 |         const signal = response.body.data[0];

      at Object.toHaveProperty (tests/unit/routes/signals.test.js:404:29)

  ‚óè Signals Route - Unit Tests ‚Ä∫ GET /api/signals/crypto ‚Ä∫ should return cryptocurrency signals

    expect(received).toHaveProperty(path, value)

    Expected path: "signal_type"
    Received path: []

    Expected value: "crypto"
    Received value: {"data": [], "success": true, "summary": {"avg_confidence": null, "avg_risk": null, "buy_signals": 0, "sell_signals": 0, "total_signals": 0}, "symbol": "CRYPTO", "timeframe": "daily", "timestamp": "2025-09-23T16:31:50.638Z"}

      448 |       expect(response.body).toHaveProperty("data");
      449 |       expect(Array.isArray(response.body.data)).toBe(true);
    > 450 |       expect(response.body).toHaveProperty("signal_type", "crypto");
          |                             ^
      451 |
      452 |       if (response.body.data.length > 0) {
      453 |         const signal = response.body.data[0];

      at Object.toHaveProperty (tests/unit/routes/signals.test.js:450:29)

  ‚óè Signals Route - Unit Tests ‚Ä∫ GET /api/signals/sector-rotation ‚Ä∫ should return sector rotation signals

    expect(received).toHaveProperty(path, value)

    Expected path: "signal_type"
    Received path: []

    Expected value: "sector_rotation"
    Received value: {"data": [], "success": true, "summary": {"avg_confidence": null, "avg_risk": null, "buy_signals": 0, "sell_signals": 0, "total_signals": 0}, "symbol": "SECTOR-ROTATION", "timeframe": "daily", "timestamp": "2025-09-23T16:31:50.645Z"}

      503 |       expect(response.body).toHaveProperty("data");
      504 |       expect(Array.isArray(response.body.data)).toBe(true);
    > 505 |       expect(response.body).toHaveProperty("signal_type", "sector_rotation");
          |                             ^
      506 |
      507 |       if (response.body.data.length > 0) {
      508 |         const signal = response.body.data[0];

      at Object.toHaveProperty (tests/unit/routes/signals.test.js:505:29)

  ‚óè Signals Route - Unit Tests ‚Ä∫ POST /api/signals/custom ‚Ä∫ should create custom signal with valid criteria

    expected 201 "Created", got 404 "Not Found"

      562 |         .post("/api/signals/custom")
      563 |         .send(customSignal)
    > 564 |         .expect(201);
          |          ^
      565 |
      566 |       expect(response.body).toHaveProperty("success", true);
      567 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/signals.test.js:564:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Signals Route - Unit Tests ‚Ä∫ POST /api/signals/custom ‚Ä∫ should validate required fields

    expected 400 "Bad Request", got 404 "Not Found"

      579 |         .post("/api/signals/custom")
      580 |         .send(incompleteSignal)
    > 581 |         .expect(400);
          |          ^
      582 |
      583 |       expect(response.body).toHaveProperty("success", false);
      584 |       expect(response.body).toHaveProperty("error");

      at Object.expect (tests/unit/routes/signals.test.js:581:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Signals Route - Unit Tests ‚Ä∫ POST /api/signals/custom ‚Ä∫ should validate criteria format

    expected 400 "Bad Request", got 404 "Not Found"

      595 |         .post("/api/signals/custom")
      596 |         .send(invalidSignal)
    > 597 |         .expect(400);
          |          ^
      598 |
      599 |       expect(response.body).toHaveProperty("success", false);
      600 |       expect(response.body.error).toContain("criteria");

      at Object.expect (tests/unit/routes/signals.test.js:597:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Signals Route - Unit Tests ‚Ä∫ GET /api/signals/history ‚Ä∫ should return signal history

    expect(received).toHaveProperty(path)

    Expected path: "pagination"
    Received path: []

    Received value: {"data": [], "success": true, "summary": {"avg_confidence": null, "avg_risk": null, "buy_signals": 0, "sell_signals": 0, "total_signals": 0}, "symbol": "HISTORY", "timeframe": "daily", "timestamp": "2025-09-23T16:31:50.658Z"}

      614 |       expect(response.body).toHaveProperty("data");
      615 |       expect(Array.isArray(response.body.data)).toBe(true);
    > 616 |       expect(response.body).toHaveProperty("pagination");
          |                             ^
      617 |
      618 |       if (response.body.data.length > 0) {
      619 |         const signal = response.body.data[0];

      at Object.toHaveProperty (tests/unit/routes/signals.test.js:616:29)

  ‚óè Signals Route - Unit Tests ‚Ä∫ POST /api/signals/alerts ‚Ä∫ should create new signal alert

    expected 201 "Created", got 500 "Internal Server Error"

      722 |         .post("/api/signals/alerts")
      723 |         .send(alertData)
    > 724 |         .expect(201);
          |          ^
      725 |
      726 |       expect(response.body).toHaveProperty("success", true);
      727 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/signals.test.js:724:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Signals Route - Unit Tests ‚Ä∫ GET /api/signals/performance ‚Ä∫ should return signal performance analytics

    expect(received).toHaveProperty(path)

    Expected path: "overall_performance"
    Received path: []

    Received value: []

      742 |
      743 |       expect(response.body).toHaveProperty("data");
    > 744 |       expect(response.body.data).toHaveProperty("overall_performance");
          |                                  ^
      745 |
      746 |       const performance = response.body.data.overall_performance;
      747 |       expect(performance).toHaveProperty("success_rate");

      at Object.toHaveProperty (tests/unit/routes/signals.test.js:744:34)

  ‚óè Signals Route - Unit Tests ‚Ä∫ Error Handling ‚Ä∫ should validate signal type parameters

    expected 404 "Not Found", got 200 "OK"

      810 |       const response = await request(app)
      811 |         .get("/api/signals/invalid_signal_type")
    > 812 |         .expect(404);
          |          ^
      813 |
      814 |       // Should return 404 for unsupported signal types
      815 |     });

      at Object.expect (tests/unit/routes/signals.test.js:812:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Signals Route - Unit Tests ‚Ä∫ Error Handling ‚Ä∫ should handle large limit values

    expect(received).toBeLessThanOrEqual(expected)

    Expected: <= 1000
    Received:    6407

      822 |         expect(response.body.error).toContain("limit");
      823 |       } else {
    > 824 |         expect(response.body.data.length).toBeLessThanOrEqual(1000); // Should be capped
          |                                           ^
      825 |       }
      826 |     });
      827 |

      at Object.toBeLessThanOrEqual (tests/unit/routes/signals.test.js:824:43)

  ‚óè Signals Route - Unit Tests ‚Ä∫ Error Handling ‚Ä∫ should handle malformed request bodies

    expected 400 "Bad Request", got 404 "Not Found"

      830 |         .post("/api/signals/custom")
      831 |         .send("invalid json string")
    > 832 |         .expect(400);
          |          ^
      833 |
      834 |       expect(response.body).toHaveProperty("error");
      835 |     });

      at Object.expect (tests/unit/routes/signals.test.js:832:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Signals Route - Unit Tests ‚Ä∫ Error Handling ‚Ä∫ should handle authentication edge cases

    expected 401 "Unauthorized", got 200 "OK"

      852 |       const response = await request(tempApp)
      853 |         .get("/api/signals/buy")
    > 854 |         .expect(401);
          |          ^
      855 |
      856 |       expect(response.body).toHaveProperty("success", false);
      857 |       expect(response.body).toHaveProperty("error");

      at Object.expect (tests/unit/routes/signals.test.js:854:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Signals Route - Unit Tests ‚Ä∫ Error Handling ‚Ä∫ should handle valid requests

    expect(received).toHaveProperty(path, value)

    Expected path: "signal_type"

    Expected value: "buy"
    Received value: "BUY"

      862 |
      863 |       expect(response.body).toHaveProperty("data");
    > 864 |       expect(response.body).toHaveProperty("signal_type", "buy");
          |                             ^
      865 |     });
      866 |   });
      867 |

      at Object.toHaveProperty (tests/unit/routes/signals.test.js:864:29)

::ffff:127.0.0.1 - - [23/Sep/2025:16:31:50 +0000] "GET /api/orders HTTP/1.1" 200 453 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:50 +0000] "GET /api/orders?status=filled HTTP/1.1" 200 453 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:50 +0000] "GET /api/orders?side=buy HTTP/1.1" 200 453 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:50 +0000] "GET /api/orders?limit=10&offset=5 HTTP/1.1" 200 453 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:50 +0000] "GET /api/orders HTTP/1.1" 200 1607 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:50 +0000] "GET /api/orders/test-order-123 HTTP/1.1" 404 173 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:50 +0000] "GET /api/orders/non-existent-order HTTP/1.1" 404 181 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:50 +0000] "GET /api/orders/test-order-123 HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:50 +0000] "POST /api/orders HTTP/1.1" 400 85 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:50 +0000] "POST /api/orders HTTP/1.1" 400 91 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "POST /api/orders HTTP/1.1" 400 101 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "POST /api/orders HTTP/1.1" 400 85 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "POST /api/orders HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "PUT /api/orders/test-order-123 HTTP/1.1" 400 163 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "PUT /api/orders/test-order-123 HTTP/1.1" 400 163 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "PUT /api/orders/test-order-123 HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "DELETE /api/orders/test-order-123 HTTP/1.1" 400 163 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "DELETE /api/orders/non-existent-order HTTP/1.1" 400 167 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "DELETE /api/orders/test-order-123 HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "GET /api/orders/history HTTP/1.1" 200 139 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "GET /api/orders/history?from=2023-01-01&to=2023-12-31 HTTP/1.1" 200 139 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "GET /api/orders/history?include_summary=true HTTP/1.1" 200 139 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "GET /api/orders/history HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "GET /api/orders HTTP/1.1" 200 453 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "POST /api/orders HTTP/1.1" 400 85 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "GET /api/orders/history HTTP/1.1" 200 139 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "GET /api/orders?limit=invalid HTTP/1.1" 200 453 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "GET /api/orders?offset=-1 HTTP/1.1" 200 453 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "GET /api/orders?status=invalid_status HTTP/1.1" 200 453 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "GET /api/orders HTTP/1.1" 200 453 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "GET /api/orders/%27%3B%20DROP%20TABLE%20orders%3B%20-- HTTP/1.1" 404 193 "-" "-"
FAIL tests/integration/routes/orders.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Orders endpoint called for user: dev-user-bypass

      at log (routes/orders.js:71:11)

    console.log
      Executing orders query with timeout protection

      at log (routes/orders.js:144:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Orders endpoint called for user: dev-user-bypass

      at log (routes/orders.js:71:11)

    console.log
      Executing orders query with timeout protection

      at log (routes/orders.js:144:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Orders endpoint called for user: dev-user-bypass

      at log (routes/orders.js:71:11)

    console.log
      Executing orders query with timeout protection

      at log (routes/orders.js:144:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Orders endpoint called for user: dev-user-bypass

      at log (routes/orders.js:71:11)

    console.log
      Executing orders query with timeout protection

      at log (routes/orders.js:144:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Order details request for user: dev-user-bypass, order: test-order-123

      at log (routes/orders.js:1964:11)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Order details request for user: dev-user-bypass, order: non-existent-order

      at log (routes/orders.js:1964:11)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìù New order submission for user: dev-user-bypass, symbol: AAPL, side: buy

      at log (routes/orders.js:399:11)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìù New order submission for user: dev-user-bypass, symbol: AAPL, side: undefined

      at log (routes/orders.js:399:11)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìù New order submission for user: dev-user-bypass, symbol: AAPL, side: buy

      at log (routes/orders.js:399:11)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìù New order submission for user: dev-user-bypass, symbol: AAPL, side: buy

      at log (routes/orders.js:399:11)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Update order request for user: dev-user-bypass, order: test-order-123

      at log (routes/orders.js:1739:11)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Update order request for user: dev-user-bypass, order: test-order-123

      at log (routes/orders.js:1739:11)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Delete order request for user: dev-user-bypass, order: test-order-123

      at log (routes/orders.js:1874:11)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Delete order request for user: dev-user-bypass, order: non-existent-order

      at log (routes/orders.js:1874:11)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Order history requested for user: dev-user-bypass

      at log (routes/orders.js:810:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Order history requested for user: dev-user-bypass

      at log (routes/orders.js:810:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Order history requested for user: dev-user-bypass

      at log (routes/orders.js:810:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Orders endpoint called for user: dev-user-bypass

      at log (routes/orders.js:71:11)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Order history requested for user: dev-user-bypass

      at log (routes/orders.js:810:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìù New order submission for user: dev-user-bypass, symbol: AAPL, side: buy

      at log (routes/orders.js:399:11)

    console.log
      Executing orders query with timeout protection

      at log (routes/orders.js:144:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Orders endpoint called for user: dev-user-bypass

      at log (routes/orders.js:71:11)

    console.log
      Executing orders query with timeout protection

      at log (routes/orders.js:144:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Orders endpoint called for user: dev-user-bypass

      at log (routes/orders.js:71:11)

    console.log
      Executing orders query with timeout protection

      at log (routes/orders.js:144:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Orders endpoint called for user: dev-user-bypass

      at log (routes/orders.js:71:11)

    console.log
      Executing orders query with timeout protection

      at log (routes/orders.js:144:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Orders endpoint called for user: dev-user-bypass

      at log (routes/orders.js:71:11)

    console.log
      Executing orders query with timeout protection

      at log (routes/orders.js:144:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Order details request for user: dev-user-bypass, order: '; DROP TABLE orders; --

      at log (routes/orders.js:1964:11)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Orders endpoint called for user: dev-user-bypass

      at log (routes/orders.js:71:11)

    console.log
      Executing orders query with timeout protection

      at log (routes/orders.js:144:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Order history requested for user: dev-user-bypass

      at log (routes/orders.js:810:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Orders endpoint called for user: dev-user-bypass

      at log (routes/orders.js:71:11)

    console.log
      Executing orders query with timeout protection

      at log (routes/orders.js:144:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Orders endpoint called for user: dev-user-bypass

      at log (routes/orders.js:71:11)

    console.log
      Executing orders query with timeout protection

      at log (routes/orders.js:144:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Recent orders requested - limit: 20, days: 7, status: all

      at log (routes/orders.js:1049:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Recent orders requested - limit: 10, days: 30, status: filled

      at log (routes/orders.js:1049:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Orders Routes Integration Tests ‚Ä∫ GET /api/orders/:orderId (Get Specific Order) ‚Ä∫ should handle order lookup

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      81 |         .set("Authorization", "Bearer dev-bypass-token");
      82 |
    > 83 |       expect([200, 401].includes(response.status)).toBe(true);
         |                                                    ^
      84 |
      85 |       if (response.status === 200) {
      86 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/orders.integration.test.js:83:52)

  ‚óè Orders Routes Integration Tests ‚Ä∫ DELETE /api/orders/:orderId (Cancel Order) ‚Ä∫ should cancel order

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      234 |         .set("Authorization", "Bearer dev-bypass-token");
      235 |
    > 236 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      237 |
      238 |       if (response.status === 200) {
      239 |         // Order deletion successful - no additional validation needed for this test

      at Object.toBe (tests/integration/routes/orders.integration.test.js:236:52)

  ‚óè Orders Routes Integration Tests ‚Ä∫ DELETE /api/orders/:orderId (Cancel Order) ‚Ä∫ should return 404 for non-existent order

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      246 |         .set("Authorization", "Bearer dev-bypass-token");
      247 |
    > 248 |       expect([404, 401, 403, 500].includes(response.status)).toBe(true);
          |                                                              ^
      249 |     });
      250 |
      251 |     test("should require authentication", async () => {

      at Object.toBe (tests/integration/routes/orders.integration.test.js:248:62)

  ‚óè Orders Routes Integration Tests ‚Ä∫ Performance and Edge Cases ‚Ä∫ should handle SQL injection attempts safely

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      375 |           .set("Authorization", "Bearer dev-bypass-token");
      376 |
    > 377 |         expect([200, 400, 401].includes(response.status)).toBe(true);
          |                                                           ^
      378 |       }
      379 |     });
      380 |

      at Object.toBe (tests/integration/routes/orders.integration.test.js:377:59)

::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "GET /api/orders HTTP/1.1" 200 453 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "GET /api/orders/history HTTP/1.1" 200 139 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "GET /api/orders HTTP/1.1" 200 453 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "GET /api/orders HTTP/1.1" 200 453 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "GET /api/orders HTTP/1.1" 401 528 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "GET /api/orders HTTP/1.1" 200 1607 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "GET /api/orders/recent HTTP/1.1" 200 7840 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "GET /api/orders/recent?limit=10&days=30&status=filled HTTP/1.1" 200 155 "-" "-"
FAIL tests/unit/routes/portfolio.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully (test mode)

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:100:17)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Portfolio holdings endpoint called for authenticated user: dev-user-bypass

      at log (routes/portfolio.js:1662:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Portfolio performance endpoint called for user: dev-user-bypass, timeframe: 1y

      at log (routes/portfolio.js:1108:13)

    console.log
      üìä Retrieved 0 performance data points

      at log (routes/portfolio.js:1136:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Portfolio analytics endpoint called for authenticated user: dev-user-bypass, timeframe: 1y

      at log (routes/portfolio.js:319:11)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üí∞ Portfolio value requested for user: dev-user-bypass

      at log (routes/portfolio.js:6014:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Portfolio risk analysis endpoint called for user: dev-user-bypass

      at log (routes/portfolio.js:754:11)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìà Portfolio returns requested for user: dev-user-bypass, period: 1y

      at log (routes/portfolio.js:6112:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Portfolio benchmark endpoint called for SPY, timeframe: 1y

      at log (routes/portfolio.js:1438:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Portfolio risk endpoint called for user: dev-user-bypass

      at log (routes/portfolio.js:2153:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Portfolio risk metrics endpoint called for user: dev-user-bypass

      at log (routes/portfolio.js:821:11)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Portfolio rebalance execution called for user: dev-user-bypass

      at log (routes/portfolio.js:2075:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Portfolio rebalance execution called for user: dev-user-bypass

      at log (routes/portfolio.js:2075:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Portfolio rebalance execution called for user: dev-user-bypass

      at log (routes/portfolio.js:2075:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Portfolio rebalance execution called for user: dev-user-bypass

      at log (routes/portfolio.js:2075:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Portfolio allocation requested for user: dev-user-bypass

      at log (routes/portfolio.js:5783:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Portfolio optimization endpoint called for authenticated user: dev-user-bypass

      at log (routes/portfolio.js:2667:11)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Portfolio optimization endpoint called for authenticated user: dev-user-bypass

      at log (routes/portfolio.js:2667:11)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Portfolio optimization endpoint called for authenticated user: dev-user-bypass

      at log (routes/portfolio.js:2667:11)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Portfolio optimization execution requested for user: dev-user-bypass

      at log (routes/portfolio.js:2735:11)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Portfolio analysis requested for user: dev-user-bypass, period: 1y

      at log (routes/portfolio.js:566:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Portfolio analysis requested for user: dev-user-bypass, period: 1y

      at log (routes/portfolio.js:566:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Portfolio analysis requested for user: dev-user-bypass, period: 1y

      at log (routes/portfolio.js:566:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Portfolio rebalance endpoint called for user: dev-user-bypass, strategy: balanced

      at log (routes/portfolio.js:1796:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      POST /rebalance called for user: dev-user-bypass

      at log (routes/portfolio.js:1978:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      POST /rebalance called for user: dev-user-bypass

      at log (routes/portfolio.js:1978:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Portfolio metrics requested for user: dev-user-bypass, period: 30d, include_risk: false

      at log (routes/portfolio.js:2793:11)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Portfolio metrics requested for user: dev-user-bypass, period: 30d, include_risk: true

      at log (routes/portfolio.js:2793:11)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Portfolio metrics requested for user: dev-user-bypass, period: 30d, include_risk: false

      at log (routes/portfolio.js:2793:11)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Detailed holdings requested for user: dev-user-bypass, min_value: 0, sort: market_value desc

      at log (routes/portfolio.js:2947:11)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Detailed holdings requested for user: dev-user-bypass, min_value: 1000, sort: market_value desc

      at log (routes/portfolio.js:2947:11)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Detailed holdings requested for user: dev-user-bypass, min_value: 0, sort: unrealized_pnl desc

      at log (routes/portfolio.js:2947:11)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.error
      Database query error: {
        error: 'column "updated_at" of relation "portfolio_holdings" does not exist',
        query: '\n' +
          '      INSERT INTO portfolio_holdings\n' +
          '      (user_id, symbol, quantity, average_cost, current_price,...',
        params: '6 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/portfolio.js:3089:20

    console.error
      Error adding holding: error: column "updated_at" of relation "portfolio_holdings" does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/portfolio.js:3089:20 {
        length: 142,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '128',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_target.c',
        line: '1066',
        routine: 'checkInsertTargets'
      }

      3108 |     });
      3109 |   } catch (error) {
    > 3110 |     console.error("Error adding holding:", error);
           |             ^
      3111 |     res.status(500).json({
      3112 |       success: false,
      3113 |       error: "Failed to add holding",

      at error (routes/portfolio.js:3110:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.error
      Database query error: {
        error: 'column "updated_at" of relation "portfolio_holdings" does not exist',
        query: '\n' +
          '      INSERT INTO portfolio_holdings\n' +
          '      (user_id, symbol, quantity, average_cost, current_price,...',
        params: '6 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/portfolio.js:3089:20

    console.error
      Error adding holding: error: column "updated_at" of relation "portfolio_holdings" does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/portfolio.js:3089:20 {
        length: 142,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '128',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_target.c',
        line: '1066',
        routine: 'checkInsertTargets'
      }

      3108 |     });
      3109 |   } catch (error) {
    > 3110 |     console.error("Error adding holding:", error);
           |             ^
      3111 |     res.status(500).json({
      3112 |       success: false,
      3113 |       error: "Failed to add holding",

      at error (routes/portfolio.js:3110:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üëÄ Portfolio watchlist requested for user: dev-user-bypass

      at log (routes/portfolio.js:5739:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üëÄ Portfolio watchlist requested for user: dev-user-bypass

      at log (routes/portfolio.js:5739:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Portfolio holdings endpoint called for authenticated user: dev-user-bypass

      at log (routes/portfolio.js:1662:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Portfolio metrics requested for user: dev-user-bypass, period: invalid, include_risk: notboolean

      at log (routes/portfolio.js:2793:11)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Portfolio Routes Unit Tests ‚Ä∫ GET /portfolio/performance ‚Ä∫ should return performance data

    expect(received).toHaveProperty(path)

    Expected path: "metrics"
    Received path: []

    Received value: {"data": {"metadata": {"message": "No portfolio performance data found", "period": "365 days", "suggestion": "Add trades or holdings to generate performance data", "timeframe": "1y"}, "metrics": {"alpha": 0, "annualizedReturn": 0, "beta": 1, "maxDrawdown": 0, "sharpeRatio": 0, "totalReturn": 0, "totalReturnPercent": 0, "volatility": 0, "winRate": 0}, "performance": []}, "message": "Performance data retrieved (empty dataset)", "success": true, "timestamp": "2025-09-23T16:31:51.499Z"}

      73 |       expect(response.body).toHaveProperty("success");
      74 |       expect(response.body.success).toBe(true);
    > 75 |       expect(response.body).toHaveProperty("metrics");
         |                             ^
      76 |       expect(response.body).toHaveProperty("performance");
      77 |     });
      78 |   });

      at Object.toHaveProperty (tests/unit/routes/portfolio.test.js:75:29)

  ‚óè Portfolio Routes Unit Tests ‚Ä∫ GET /portfolio/analysis ‚Ä∫ should return comprehensive portfolio analysis

    expected 200 "OK", got 404 "Not Found"

      359 |         .get("/portfolio/analysis")
      360 |         .set("Authorization", "Bearer dev-bypass-token")
    > 361 |         .expect(200);
          |          ^
      362 |
      363 |       expect(response.body).toHaveProperty("success", true);
      364 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/portfolio.test.js:361:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Portfolio Routes Unit Tests ‚Ä∫ GET /portfolio/analysis ‚Ä∫ should include sector breakdown

    expected 200 "OK", got 404 "Not Found"

      376 |         .get("/portfolio/analysis?include_sectors=true")
      377 |         .set("Authorization", "Bearer dev-bypass-token")
    > 378 |         .expect(200);
          |          ^
      379 |
      380 |       expect(response.body.success).toBe(true);
      381 |       if (response.body.data.analysis.sectors) {

      at Object.expect (tests/unit/routes/portfolio.test.js:378:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Portfolio Routes Unit Tests ‚Ä∫ GET /portfolio/analysis ‚Ä∫ should handle time period analysis

    expected 200 "OK", got 404 "Not Found"

      393 |         .get("/portfolio/analysis?period=1y")
      394 |         .set("Authorization", "Bearer dev-bypass-token")
    > 395 |         .expect(200);
          |          ^
      396 |
      397 |       expect(response.body.success).toBe(true);
      398 |       if (response.body.data.analysis.period_analysis) {

      at Object.expect (tests/unit/routes/portfolio.test.js:395:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Portfolio Routes Unit Tests ‚Ä∫ POST /portfolio/holdings/add ‚Ä∫ should handle duplicate holdings

    expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [201, 200, 409]

      637 |
      638 |       // Should either create or update existing holding
    > 639 |       expect([201, 200, 409]).toContain(response.status);
          |                               ^
      640 |       expect(response.body).toHaveProperty("success");
      641 |     });
      642 |   });

      at Object.toContain (tests/unit/routes/portfolio.test.js:639:31)

::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "GET /api/alerts/active HTTP/1.1" 200 1509 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "GET /api/alerts/active?priority=high&category=price&limit=25 HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "GET /api/alerts/active?include_resolved=true HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "GET /api/alerts HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "GET /api/alerts?status=resolved&limit=50 HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "PUT /api/alerts/test_alert_123/acknowledge HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "PUT /api/alerts/test_alert_456/acknowledge HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "PUT /api/alerts/test_alert_789/acknowledge HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "PUT /api/alerts/test_alert_snooze/snooze HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "PUT /api/alerts/test_alert_custom_snooze/snooze HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "PUT /api/alerts/test_alert_time_validate/snooze HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "POST /api/alerts HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "POST /api/alerts HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "GET /api/alerts/summary HTTP/1.1" 200 1348 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "GET /api/alerts/summary?timeframe=1h HTTP/1.1" 200 1347 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "GET /api/alerts/summary?timeframe=6h HTTP/1.1" 200 1347 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "GET /api/alerts/summary?timeframe=24h HTTP/1.1" 200 1348 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "GET /api/alerts/summary?timeframe=7d HTTP/1.1" 200 1347 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "GET /api/alerts/summary?timeframe=30d HTTP/1.1" 200 1354 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "GET /api/alerts/summary?timeframe=invalid HTTP/1.1" 400 115 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "GET /api/alerts/summary?include_trends=true HTTP/1.1" 200 1348 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "GET /api/alerts/summary?include_stats=true HTTP/1.1" 200 1348 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:51 +0000] "GET /api/alerts/summary HTTP/1.1" 200 1348 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "GET /api/alerts/settings HTTP/1.1" 200 4706 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "GET /api/alerts/settings HTTP/1.1" 200 4706 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "GET /api/alerts/settings HTTP/1.1" 200 4706 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "GET /api/alerts/settings HTTP/1.1" 200 4706 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "GET /api/alerts/history HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "GET /api/alerts/history?limit=50&status=resolved&category=price HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "GET /api/alerts/rules HTTP/1.1" 200 508 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "GET /api/alerts/rules HTTP/1.1" 200 508 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "GET /api/alerts/webhooks HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "GET /api/alerts/webhooks?status=active&webhook_type=slack&limit=10 HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "POST /api/alerts/create HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "POST /api/alerts/create HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "POST /api/alerts/create HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "POST /api/alerts/create HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "DELETE /api/alerts/delete/alert_to_delete_123 HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "DELETE /api/alerts/delete/alert_default_reason HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "DELETE /api/alerts/delete/ HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "GET /api/alerts/price HTTP/1.1" 200 222 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "GET /api/alerts/price?symbol=AAPL HTTP/1.1" 200 222 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "GET /api/alerts/price?threshold_min=100&threshold_max=200 HTTP/1.1" 200 222 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "GET /api/alerts/price?alert_type=stop_loss&status=active HTTP/1.1" 200 222 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "PUT /api/alerts/update/alert_to_update_123 HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "PUT /api/alerts/update/alert_defaults_123 HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "PUT /api/alerts/update/ HTTP/1.1" 401 529 "-" "-"
FAIL tests/integration/routes/alerts.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîî Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:38:13)

    console.log
      üìä Alerts summary requested for user: dev-user-bypass, timeframe: 24h

      at log (routes/alerts.js:504:13)

    console.log
      üìä Alerts summary requested for user: dev-user-bypass, timeframe: 1h

      at log (routes/alerts.js:504:13)

    console.log
      üìä Alerts summary requested for user: dev-user-bypass, timeframe: 6h

      at log (routes/alerts.js:504:13)

    console.log
      üìä Alerts summary requested for user: dev-user-bypass, timeframe: 24h

      at log (routes/alerts.js:504:13)

    console.log
      üìä Alerts summary requested for user: dev-user-bypass, timeframe: 7d

      at log (routes/alerts.js:504:13)

    console.log
      üìä Alerts summary requested for user: dev-user-bypass, timeframe: 30d

      at log (routes/alerts.js:504:13)

    console.log
      üìä Alerts summary requested for user: dev-user-bypass, timeframe: invalid

      at log (routes/alerts.js:504:13)

    console.log
      üìä Alerts summary requested for user: dev-user-bypass, timeframe: 24h

      at log (routes/alerts.js:504:13)

    console.log
      üìä Alerts summary requested for user: dev-user-bypass, timeframe: 24h

      at log (routes/alerts.js:504:13)

    console.log
      üìä Alerts summary requested for user: dev-user-bypass, timeframe: 24h

      at log (routes/alerts.js:504:13)

    console.log
      ‚öôÔ∏è Alert settings requested for user: dev-user-bypass

      at log (routes/alerts.js:781:13)

    console.log
      No user-specific alert settings found, returning defaults

      at log (routes/alerts.js:803:15)

    console.log
      ‚öôÔ∏è Alert settings requested for user: dev-user-bypass

      at log (routes/alerts.js:781:13)

    console.log
      No user-specific alert settings found, returning defaults

      at log (routes/alerts.js:803:15)

    console.log
      ‚öôÔ∏è Alert settings requested for user: dev-user-bypass

      at log (routes/alerts.js:781:13)

    console.log
      No user-specific alert settings found, returning defaults

      at log (routes/alerts.js:803:15)

    console.log
      ‚öôÔ∏è Alert settings requested for user: dev-user-bypass

      at log (routes/alerts.js:781:13)

    console.log
      No user-specific alert settings found, returning defaults

      at log (routes/alerts.js:803:15)

    console.log
      üìã Alert rules requested for user: dev-user-bypass

      at log (routes/alerts.js:1365:13)

    console.log
      üìã Alert rules requested for user: dev-user-bypass

      at log (routes/alerts.js:1365:13)

    console.log
      üí∞ Price alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:1868:13)

    console.log
      üí∞ Price alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:1868:13)

    console.log
      üí∞ Price alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:1868:13)

    console.log
      üí∞ Price alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:1868:13)

    console.log
      ‚öôÔ∏è Alert settings requested for user: dev-user-bypass

      at log (routes/alerts.js:781:13)

    console.log
      No user-specific alert settings found, returning defaults

      at log (routes/alerts.js:803:15)

    console.log
      üìã Alert rules requested for user: dev-user-bypass

      at log (routes/alerts.js:1365:13)

    console.log
      üìä Alerts summary requested for user: dev-user-bypass, timeframe: 24h

      at log (routes/alerts.js:504:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Alerts Routes ‚Ä∫ GET /api/alerts/active ‚Ä∫ should handle query parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: "dev-user-bypass"
    Received: undefined

      50 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
      51 |       expect(response.body.success).toBe(false);
    > 52 |       expect(response.body.user_id).toBe("dev-user-bypass");
         |                                     ^
      53 |     });
      54 |
      55 |     test("should handle include_resolved parameter", async () => {

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:52:37)

  ‚óè Alerts Routes ‚Ä∫ GET /api/alerts ‚Ä∫ should redirect to active alerts

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      67 |       const response = await request(app).get("/api/alerts");
      68 |
    > 69 |       expect([200, 404, 500, 501].includes(response.status)).toBe(true);
         |                                                              ^
      70 |     });
      71 |
      72 |     test("should handle status parameter", async () => {

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:69:62)

  ‚óè Alerts Routes ‚Ä∫ GET /api/alerts ‚Ä∫ should handle status parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      75 |       );
      76 |
    > 77 |       expect([200, 404, 500, 501].includes(response.status)).toBe(true);
         |                                                              ^
      78 |     });
      79 |   });
      80 |

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:77:62)

  ‚óè Alerts Routes ‚Ä∫ PUT /api/alerts/:alertId/acknowledge ‚Ä∫ should acknowledge alert successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      87 |         .send({ action: "acknowledge" });
      88 |
    > 89 |       expect(response.status).toBe(200);
         |                               ^
      90 |       expect(response.body.success).toBe(true);
      91 |       expect(response.body.data.alert_id).toBe(alertId);
      92 |       expect(response.body.data.action).toBe("acknowledge");

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:89:31)

  ‚óè Alerts Routes ‚Ä∫ PUT /api/alerts/:alertId/acknowledge ‚Ä∫ should handle dismiss action

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      104 |         .send({ action: "dismiss" });
      105 |
    > 106 |       expect(response.status).toBe(200);
          |                               ^
      107 |       expect(response.body.success).toBe(true);
      108 |       expect(response.body.data.action).toBe("dismiss");
      109 |       expect(response.body.data.alert_id).toBe(alertId);

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:106:31)

  ‚óè Alerts Routes ‚Ä∫ PUT /api/alerts/:alertId/acknowledge ‚Ä∫ should handle default acknowledge action

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      117 |         .send({});
      118 |
    > 119 |       expect(response.status).toBe(200);
          |                               ^
      120 |       expect(response.body.data.action).toBe("acknowledge");
      121 |     });
      122 |   });

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:119:31)

  ‚óè Alerts Routes ‚Ä∫ PUT /api/alerts/:alertId/snooze ‚Ä∫ should snooze alert with default duration

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      130 |         .send({});
      131 |
    > 132 |       expect(response.status).toBe(200);
          |                               ^
      133 |       expect(response.body.success).toBe(true);
      134 |       expect(response.body.data.alert_id).toBe(alertId);
      135 |       expect(response.body.data.duration_minutes).toBe(60);

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:132:31)

  ‚óè Alerts Routes ‚Ä∫ PUT /api/alerts/:alertId/snooze ‚Ä∫ should snooze alert with custom duration

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      146 |         .send({ duration_minutes: 120 });
      147 |
    > 148 |       expect(response.status).toBe(200);
          |                               ^
      149 |       expect(response.body.data.duration_minutes).toBe(120);
      150 |     });
      151 |

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:148:31)

  ‚óè Alerts Routes ‚Ä∫ PUT /api/alerts/:alertId/snooze ‚Ä∫ should validate snooze_until timestamp

    TypeError: Cannot read properties of undefined (reading 'snooze_until')

      158 |         .send({ duration_minutes: 30 });
      159 |
    > 160 |       const snoozeUntil = new Date(response.body.data.snooze_until);
          |                                                       ^
      161 |       const expectedTime = new Date(beforeRequest + 30 * 60 * 1000);
      162 |
      163 |       expect(response.status).toBe(200);

      at Object.snooze_until (tests/integration/routes/alerts.integration.test.js:160:55)

  ‚óè Alerts Routes ‚Ä∫ POST /api/alerts ‚Ä∫ should create new alert

    expect(received).toContain(expected) // indexOf

    Expected value: 401
    Received array: [200, 201]

      182 |       const response = await request(app).post("/api/alerts").send(alertData);
      183 |
    > 184 |       expect([200, 201]).toContain(response.status);
          |                          ^
      185 |       expect(response.body.success).toBe(true);
      186 |       expect(response.body.data.user_id).toBe("test_user_123");
      187 |       expect(response.body.data.symbol).toBe("AAPL");

      at Object.toContain (tests/integration/routes/alerts.integration.test.js:184:26)

  ‚óè Alerts Routes ‚Ä∫ POST /api/alerts ‚Ä∫ should create alert with defaults

    expect(received).toContain(expected) // indexOf

    Expected value: 401
    Received array: [200, 201]

      209 |       const response = await request(app).post("/api/alerts").send(alertData);
      210 |
    > 211 |       expect([200, 201]).toContain(response.status);
          |                          ^
      212 |       expect(response.body.data.priority).toBe("Medium");
      213 |       expect(response.body.data.notification_methods).toEqual(["email"]);
      214 |     });

      at Object.toContain (tests/integration/routes/alerts.integration.test.js:211:26)

  ‚óè Alerts Routes ‚Ä∫ GET /api/alerts/settings ‚Ä∫ should return comprehensive alert settings

    expect(received).toHaveProperty(path)

    Expected path: "metadata"
    Received path: []

    Received value: {"quick_actions": [{"action": "enable_all_notifications", "description": "Enable all notification channels", "endpoint": "PUT /api/alerts/settings/notifications"}, {"action": "pause_all_alerts", "description": "Temporarily pause all alert delivery", "endpoint": "PUT /api/alerts/settings/pause"}, {"action": "reset_to_defaults", "description": "Reset all settings to recommended defaults", "endpoint": "PUT /api/alerts/settings/reset"}, {"action": "export_settings", "description": "Export current settings as JSON", "endpoint": "GET /api/alerts/settings/export"}], "settings": {"advanced_settings": {"alert_priority_scoring": true, "auto_pause_settings": {"auto_resume": true, "vacation_end": null, "vacation_mode": false, "vacation_start": null}, "batch_alerts": false, "risk_management": {"cool_down_periods": {"high_frequency_symbols": 5, "low_frequency_symbols": 1}, "max_daily_alerts": 50}, "smart_timing": true}, "alert_categories": {"earnings_alerts": {"enabled": true, "post_earnings_enabled": true, "pre_earnings_days": 3, "surprise_threshold": 10}, "market_alerts": {"circuit_breakers": true, "economic_events": true, "enabled": true, "market_open_close": false, "sector_rotation": true, "vix_threshold": 30}, "news_alerts": {"enabled": true, "keywords_blacklist": ["crypto", "bitcoin"], "keywords_whitelist": [], "sentiment_threshold": 0.7, "sources": ["reuters", "bloomberg", "cnbc", "marketwatch"]}, "portfolio_alerts": {"corporate_actions": true, "daily_pnl_threshold": 1000, "dividend_announcements": true, "enabled": true, "margin_alerts": true, "position_change_threshold": 10}, "price_alerts": {"enabled": true, "frequency": "immediate", "include_after_hours": false, "threshold_percentage": 5}, "social_sentiment_alerts": {"enabled": false, "influencer_mentions": true, "mention_threshold": 1000, "platforms": ["twitter", "reddit", "stocktwits"], "sentiment_threshold": 0.8}, "technical_alerts": {"enabled": true, "indicators": {"bollinger_bands": {"enabled": true}, "macd_crossover": {"enabled": true}, "moving_average_cross": {"enabled": true, "periods": [20, 50]}, "rsi_overbought": {"enabled": true, "threshold": 80}, "rsi_oversold": {"enabled": true, "threshold": 20}}, "pattern_alerts": {"breakouts": true, "reversals": true, "support_resistance": true}}, "volume_alerts": {"enabled": true, "frequency": "immediate", "minimum_volume": 1000000, "threshold_multiplier": 2}}, "alert_history": {"duplicate_suppression": true, "max_alerts_per_day": 100, "retention_days": 30, "suppression_window_minutes": 15}, "created_at": "2025-01-15T10:30:00Z", "delivery_settings": {"discord_webhook": null, "email_address": "user@example.com", "phone_number": null, "push_device_tokens": ["device_token_12345"], "quiet_hours": {"days": ["monday", "tuesday", "wednesday", "thursday", "friday"], "enabled": true, "end_time": "07:00", "start_time": "22:00"}, "slack_webhook": null, "time_zone": "America/New_York"}, "integrations": {"third_party_services": {"custom_webhooks": [], "ifttt": {"enabled": false, "webhook_url": null}, "zapier": {"enabled": false, "webhook_url": null}}, "trading_platforms": {"alpaca": {"api_key_set": false, "enabled": false}, "interactive_brokers": {"api_key_set": false, "enabled": false}, "td_ameritrade": {"api_key_set": false, "enabled": false}}}, "last_settings_change": "2025-09-23T16:31:52.000Z", "notification_preferences": {"browser_enabled": false, "discord_enabled": false, "email_enabled": false, "push_enabled": false, "slack_enabled": false, "sms_enabled": false}, "subscription_info": {"alerts_limit_daily": 100, "alerts_used_today": 23, "plan": "premium", "plan_expires": "2025-12-31T23:59:59Z", "premium_features": ["unlimited_alerts", "advanced_indicators", "social_sentiment", "custom_webhooks", "alert_backtesting"]}, "updated_at": "2025-09-23T16:31:52.000Z", "user_id": "dev-user-bypass", "version": "2.1.0", "watchlist_settings": {"default_watchlist_alerts": true, "per_symbol_settings": {"AAPL": {"earnings_priority": "high", "price_threshold": 2.5, "volume_multiplier": 1.5}, "TSLA": {"price_threshold": 7.5, "social_sentiment": true, "volume_multiplier": 3}}}}, "summary": {"alerts_remaining_today": 77, "alerts_used_today": 23, "settings_last_modified": "2025-09-23T16:31:52.000Z", "subscription_plan": "premium", "total_categories_enabled": 7, "total_notification_channels": 0, "watchlist_symbols_with_custom_settings": 2}}

      306 |       expect(response.body.data).toHaveProperty("summary");
      307 |       expect(response.body.data).toHaveProperty("quick_actions");
    > 308 |       expect(response.body.data).toHaveProperty("metadata");
          |                                  ^
      309 |
      310 |       const settings = response.body.data.settings;
      311 |       expect(settings.user_id).toBe("test_user_123");

      at Object.toHaveProperty (tests/integration/routes/alerts.integration.test.js:308:34)

  ‚óè Alerts Routes ‚Ä∫ GET /api/alerts/history ‚Ä∫ should return 501 not implemented

    expect(received).toBe(expected) // Object.is equality

    Expected: "Alert history not implemented"
    Received: "Access token required"

      360 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
      361 |       expect(response.body.success).toBe(false);
    > 362 |       expect(response.body.error).toBe("Alert history not implemented");
          |                                   ^
      363 |       expect(response.body).toHaveProperty("troubleshooting");
      364 |       expect(response.body.user_id).toBe("dev-user-bypass");
      365 |     });

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:362:35)

  ‚óè Alerts Routes ‚Ä∫ GET /api/alerts/webhooks ‚Ä∫ should return 501 not implemented

    expect(received).toBe(expected) // Object.is equality

    Expected: "Alert webhooks not implemented"
    Received: "Access token required"

      412 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
      413 |       expect(response.body.success).toBe(false);
    > 414 |       expect(response.body.error).toBe("Alert webhooks not implemented");
          |                                   ^
      415 |       expect(response.body).toHaveProperty("troubleshooting");
      416 |       expect(response.body.user_id).toBe("dev-user-bypass");
      417 |     });

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:414:35)

  ‚óè Alerts Routes ‚Ä∫ POST /api/alerts/create ‚Ä∫ should create alert with required fields

    expect(received).toContain(expected) // indexOf

    Expected value: 401
    Received array: [200, 201]

      438 |         .send(alertData);
      439 |
    > 440 |       expect([200, 201]).toContain(response.status);
          |                          ^
      441 |       expect(response.body.success).toBe(true);
      442 |       expect(response.body.data.alert.symbol).toBe("NVDA");
      443 |       expect(response.body.data.alert.threshold).toBe(500.0);

      at Object.toContain (tests/integration/routes/alerts.integration.test.js:440:26)

  ‚óè Alerts Routes ‚Ä∫ POST /api/alerts/create ‚Ä∫ should use default values

    expect(received).toContain(expected) // indexOf

    Expected value: 401
    Received array: [200, 201]

      457 |         .send(alertData);
      458 |
    > 459 |       expect([200, 201]).toContain(response.status);
          |                          ^
      460 |       expect(response.body.data.alert.symbol).toBe("MSFT");
      461 |       expect(response.body.data.alert.alert_type).toBe("price");
      462 |       expect(response.body.data.alert.condition).toBe("above");

      at Object.toContain (tests/integration/routes/alerts.integration.test.js:459:26)

  ‚óè Alerts Routes ‚Ä∫ POST /api/alerts/create ‚Ä∫ should reject missing required fields

    expect(received).toContain(expected) // indexOf

    Expected value: 401
    Received array: [400, 422]

      470 |         .send({ symbol: "AAPL" }); // Missing threshold
      471 |
    > 472 |       expect([400, 422]).toContain(response.status);
          |                          ^
      473 |       expect(response.body.success).toBe(false);
      474 |       expect(response.body.error).toBe("Missing required fields");
      475 |       expect(response.body.required).toEqual(["symbol", "threshold"]);

      at Object.toContain (tests/integration/routes/alerts.integration.test.js:472:26)

  ‚óè Alerts Routes ‚Ä∫ POST /api/alerts/create ‚Ä∫ should reject empty request

    expect(received).toContain(expected) // indexOf

    Expected value: 401
    Received array: [400, 422]

      479 |       const response = await request(app).post("/api/alerts/create").send({});
      480 |
    > 481 |       expect([400, 422]).toContain(response.status);
          |                          ^
      482 |       expect(response.body.success).toBe(false);
      483 |     });
      484 |   });

      at Object.toContain (tests/integration/routes/alerts.integration.test.js:481:26)

  ‚óè Alerts Routes ‚Ä∫ DELETE /api/alerts/delete/:alertId ‚Ä∫ should delete alert successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      492 |         .send({ reason: "no_longer_needed" });
      493 |
    > 494 |       expect(response.status).toBe(200);
          |                               ^
      495 |       expect(response.body.success).toBe(true);
      496 |       expect(response.body.data.deleted_alert.alert_id).toBe(alertId);
      497 |       expect(response.body.data.deleted_alert.user_id).toBe("test_user_123");

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:494:31)

  ‚óè Alerts Routes ‚Ä∫ DELETE /api/alerts/delete/:alertId ‚Ä∫ should use default deletion reason

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      510 |         .send({});
      511 |
    > 512 |       expect(response.status).toBe(200);
          |                               ^
      513 |       expect(response.body.data.deleted_alert.deletion_reason).toBe(
      514 |         "user_requested"
      515 |       );

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:512:31)

  ‚óè Alerts Routes ‚Ä∫ DELETE /api/alerts/delete/:alertId ‚Ä∫ should reject empty alert ID

    expect(received).toContain(expected) // indexOf

    Expected value: 401
    Received array: [404, 500]

      521 |         .send({});
      522 |
    > 523 |       expect([404, 500]).toContain(response.status);
          |                          ^
      524 |     });
      525 |   });
      526 |

      at Object.toContain (tests/integration/routes/alerts.integration.test.js:523:26)

  ‚óè Alerts Routes ‚Ä∫ GET /api/alerts/price ‚Ä∫ should return 501 not implemented when no data

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      529 |       const response = await request(app).get("/api/alerts/price");
      530 |
    > 531 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      532 |       expect(response.body.success).toBe(false);
      533 |       expect(response.body.error).toBe("Price alerts not implemented");
      534 |       expect(response.body).toHaveProperty("troubleshooting");

      at Object.toContain (tests/integration/routes/alerts.integration.test.js:531:41)

  ‚óè Alerts Routes ‚Ä∫ GET /api/alerts/price ‚Ä∫ should handle symbol filter

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      539 |       const response = await request(app).get("/api/alerts/price?symbol=AAPL");
      540 |
    > 541 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      542 |       expect(response.body.success).toBe(false);
      543 |     });
      544 |

      at Object.toContain (tests/integration/routes/alerts.integration.test.js:541:41)

  ‚óè Alerts Routes ‚Ä∫ GET /api/alerts/price ‚Ä∫ should handle threshold filters

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      548 |       );
      549 |
    > 550 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      551 |       expect(response.body.success).toBe(false);
      552 |     });
      553 |

      at Object.toContain (tests/integration/routes/alerts.integration.test.js:550:41)

  ‚óè Alerts Routes ‚Ä∫ GET /api/alerts/price ‚Ä∫ should handle alert type filter

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      557 |       );
      558 |
    > 559 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      560 |       expect(response.body.success).toBe(false);
      561 |     });
      562 |   });

      at Object.toContain (tests/integration/routes/alerts.integration.test.js:559:41)

  ‚óè Alerts Routes ‚Ä∫ PUT /api/alerts/update/:alertId ‚Ä∫ should update alert successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      576 |         .send(updateData);
      577 |
    > 578 |       expect(response.status).toBe(200);
          |                               ^
      579 |       expect(response.body.success).toBe(true);
      580 |       expect(response.body.data.updated_alert.alert_id).toBe(alertId);
      581 |       expect(response.body.data.updated_alert.threshold).toBe(180.0);

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:578:31)

  ‚óè Alerts Routes ‚Ä∫ PUT /api/alerts/update/:alertId ‚Ä∫ should use defaults when no data provided

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      598 |         .send({});
      599 |
    > 600 |       expect(response.status).toBe(200);
          |                               ^
      601 |       expect(response.body.data.updated_alert.symbol).toBe("AAPL");
      602 |       expect(response.body.data.updated_alert.enabled).toBe(true);
      603 |       expect(response.body.data.updated_alert.update_reason).toBe(

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:600:31)

  ‚óè Alerts Routes ‚Ä∫ PUT /api/alerts/update/:alertId ‚Ä∫ should reject empty alert ID

    expect(received).toContain(expected) // indexOf

    Expected value: 401
    Received array: [404, 500]

      611 |         .send({ threshold: 200 });
      612 |
    > 613 |       expect([404, 500]).toContain(response.status);
          |                          ^
      614 |     });
      615 |   });
      616 |

      at Object.toContain (tests/integration/routes/alerts.integration.test.js:613:26)

::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "GET /api/alerts/settings HTTP/1.1" 200 4706 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "GET /api/alerts/rules HTTP/1.1" 200 508 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "GET /api/alerts/summary HTTP/1.1" 200 1348 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "GET /api/health HTTP/1.1" 200 500 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "GET /api/portfolio/../../../etc/passwd HTTP/1.1" 404 139 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "GET /api/portfolio/%2e%2e%2f%2e%2e%2fetc%2fpasswd HTTP/1.1" 404 150 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "GET /api/portfolio/ HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "GET /api/calendar/earnings?param=value% HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "GET /api/calendar/earnings?param=value%ZZ HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "POST /api/portfolio/analyze HTTP/1.1" 413 124 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 349 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 349 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 350 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 350 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 347 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 347 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 348 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "POST /api/portfolio/analyze HTTP/1.1" 415 101 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "GET /api/health HTTP/1.1" 200 500 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "GET /api/health HTTP/1.1" 200 501 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:52 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
FAIL tests/integration/errors/malformed-request.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.error
      Error: SyntaxError: Unexpected token 'j', "{"incomplete": json" is not valid JSON
          at JSON.parse (<anonymous>)
          at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
          at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
          at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
          at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
          at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
          at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
          at IncomingMessage.emit (node:events:524:28)
          at endReadableNT (node:internal/streams/readable:1698:12)
          at processTicksAndRejections (node:internal/process/task_queues:82:21) {
        expose: true,
        statusCode: 400,
        status: 400,
        body: '{"incomplete": json',
        type: 'entity.parse.failed'
      }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

    console.error
      Error: SyntaxError: Expected property name or '}' in JSON at position 1
          at JSON.parse (<anonymous>)
          at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
          at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
          at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
          at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
          at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
          at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
          at IncomingMessage.emit (node:events:524:28)
          at endReadableNT (node:internal/streams/readable:1698:12)
          at processTicksAndRejections (node:internal/process/task_queues:82:21) {
        expose: true,
        statusCode: 400,
        status: 400,
        body: '{invalid: "json"',
        type: 'entity.parse.failed'
      }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

    console.error
      Error: SyntaxError: Unexpected token '}', ..."omplete": }" is not valid JSON
          at JSON.parse (<anonymous>)
          at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
          at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
          at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
          at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
          at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
          at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
          at IncomingMessage.emit (node:events:524:28)
          at endReadableNT (node:internal/streams/readable:1698:12)
          at processTicksAndRejections (node:internal/process/task_queues:82:21) {
        expose: true,
        statusCode: 400,
        status: 400,
        body: '{"nested": {"incomplete": }',
        type: 'entity.parse.failed'
      }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.error
      Error: SyntaxError: Unexpected non-whitespace character after JSON at position 18
          at JSON.parse (<anonymous>)
          at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
          at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
          at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
          at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
          at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
          at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
          at IncomingMessage.emit (node:events:524:28)
          at endReadableNT (node:internal/streams/readable:1698:12)
          at processTicksAndRejections (node:internal/process/task_queues:82:21) {
        expose: true,
        statusCode: 400,
        status: 400,
        body: '{"valid": "start"}{invalid continuation}',
        type: 'entity.parse.failed'
      }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

    console.error
      Error: SyntaxError: Unexpected non-whitespace character after JSON at position 27
          at JSON.parse (<anonymous>)
          at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
          at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
          at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
          at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
          at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
          at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
          at IncomingMessage.emit (node:events:524:28)
          at endReadableNT (node:internal/streams/readable:1698:12)
          at processTicksAndRejections (node:internal/process/task_queues:82:21) {
        expose: true,
        statusCode: 400,
        status: 400,
        body: '{"escaped": "quote\\"break"}malformed',
        type: 'entity.parse.failed'
      }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.error
      Error: SyntaxError: Unexpected token 'n', "not json content" is not valid JSON
          at JSON.parse (<anonymous>)
          at createStrictSyntaxError (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:169:10)
          at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:86:15)
          at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
          at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
          at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
          at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
          at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
          at IncomingMessage.emit (node:events:524:28)
          at endReadableNT (node:internal/streams/readable:1698:12)
          at processTicksAndRejections (node:internal/process/task_queues:82:21) {
        expose: true,
        statusCode: 400,
        status: 400,
        body: 'not json content',
        type: 'entity.parse.failed'
      }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.error
      Error: UnsupportedMediaTypeError: unsupported charset "ISO-8859-1"
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:130:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at logger (/home/stocks/algo/webapp/lambda/node_modules/morgan/index.js:144:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at cors (/home/stocks/algo/webapp/lambda/node_modules/cors/lib/index.js:188:7)
          at /home/stocks/algo/webapp/lambda/node_modules/cors/lib/index.js:224:17
          at originCallback (/home/stocks/algo/webapp/lambda/node_modules/cors/lib/index.js:214:15)
          at /home/stocks/algo/webapp/lambda/node_modules/cors/lib/index.js:219:13
          at optionsCallback (/home/stocks/algo/webapp/lambda/node_modules/cors/lib/index.js:199:9)
          at corsMiddleware (/home/stocks/algo/webapp/lambda/node_modules/cors/lib/index.js:204:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:537:6)
          at xXssProtectionMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:315:3)
          at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
          at xPoweredByMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:308:3)
          at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
          at xPermittedCrossDomainPoliciesMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:301:3)
          at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
          at xFrameOptionsMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:285:3)
          at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
          at xDownloadOptionsMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:265:3)
          at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
          at xDnsPrefetchControlMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:258:3)
          at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
          at xContentTypeOptionsMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:250:3)
          at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
          at strictTransportSecurityMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:243:3)
          at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
          at referrerPolicyMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:211:3)
          at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
          at originAgentClusterMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:186:3)
          at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
          at crossOriginResourcePolicyMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:179:3)
          at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
          at crossOriginOpenerPolicyMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:163:3)
          at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
          at contentSecurityPolicyMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:128:4)
          at internalNext (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:535:6)
          at helmetMiddleware (/home/stocks/algo/webapp/lambda/node_modules/helmet/index.cjs:539:6)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17) {
        charset: 'iso-8859-1',
        type: 'charset.unsupported'
      }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:130:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at logger (node_modules/morgan/index.js:144:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at cors (node_modules/cors/lib/index.js:188:7)
      at node_modules/cors/lib/index.js:224:17
      at originCallback (node_modules/cors/lib/index.js:214:15)
      at node_modules/cors/lib/index.js:219:13
      at optionsCallback (node_modules/cors/lib/index.js:199:9)
      at corsMiddleware (node_modules/cors/lib/index.js:204:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at internalNext (node_modules/helmet/index.cjs:537:6)
      at xXssProtectionMiddleware (node_modules/helmet/index.cjs:315:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPoweredByMiddleware (node_modules/helmet/index.cjs:308:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPermittedCrossDomainPoliciesMiddleware (node_modules/helmet/index.cjs:301:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xFrameOptionsMiddleware (node_modules/helmet/index.cjs:285:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDownloadOptionsMiddleware (node_modules/helmet/index.cjs:265:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDnsPrefetchControlMiddleware (node_modules/helmet/index.cjs:258:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xContentTypeOptionsMiddleware (node_modules/helmet/index.cjs:250:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at strictTransportSecurityMiddleware (node_modules/helmet/index.cjs:243:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at referrerPolicyMiddleware (node_modules/helmet/index.cjs:211:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at originAgentClusterMiddleware (node_modules/helmet/index.cjs:186:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginResourcePolicyMiddleware (node_modules/helmet/index.cjs:179:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginOpenerPolicyMiddleware (node_modules/helmet/index.cjs:163:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at contentSecurityPolicyMiddleware (node_modules/helmet/index.cjs:128:4)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at helmetMiddleware (node_modules/helmet/index.cjs:539:6)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      Error: SyntaxError: Expected ',' or '}' after property value in JSON at position 30
          at JSON.parse (<anonymous>)
          at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
          at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
          at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
          at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
          at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
          at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
          at IncomingMessage.emit (node:events:524:28)
          at endReadableNT (node:internal/streams/readable:1698:12)
          at processTicksAndRejections (node:internal/process/task_queues:82:21) {
        expose: true,
        statusCode: 400,
        status: 400,
        body: '{"malicious": "<script>alert("xss")</script>"}',
        type: 'entity.parse.failed'
      }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.error
      Error: SyntaxError: Unterminated string in JSON at position 20
          at JSON.parse (<anonymous>)
          at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
          at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
          at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
          at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
          at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
          at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
          at IncomingMessage.emit (node:events:524:28)
          at endReadableNT (node:internal/streams/readable:1698:12)
          at processTicksAndRejections (node:internal/process/task_queues:82:21) {
        expose: true,
        statusCode: 400,
        status: 400,
        body: '{"unclosed": "string',
        type: 'entity.parse.failed'
      }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

    console.error
      Error: SyntaxError: Unexpected token 'u', ..."nction": function() "... is not valid JSON
          at JSON.parse (<anonymous>)
          at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
          at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
          at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
          at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
          at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
          at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
          at IncomingMessage.emit (node:events:524:28)
          at endReadableNT (node:internal/streams/readable:1698:12)
          at processTicksAndRejections (node:internal/process/task_queues:82:21) {
        expose: true,
        statusCode: 400,
        status: 400,
        body: '{"function": function() {}}',
        type: 'entity.parse.failed'
      }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

    console.error
      Error: SyntaxError: Unexpected token 'u', ..."defined": undefined}" is not valid JSON
          at JSON.parse (<anonymous>)
          at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
          at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
          at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
          at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
          at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
          at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
          at IncomingMessage.emit (node:events:524:28)
          at endReadableNT (node:internal/streams/readable:1698:12)
          at processTicksAndRejections (node:internal/process/task_queues:82:21) {
        expose: true,
        statusCode: 400,
        status: 400,
        body: '{"undefined": undefined}',
        type: 'entity.parse.failed'
      }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

    console.error
      Error: SyntaxError: Unexpected end of JSON input
          at JSON.parse (<anonymous>)
          at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
          at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
          at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
          at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
          at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
          at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
          at IncomingMessage.emit (node:events:524:28)
          at endReadableNT (node:internal/streams/readable:1698:12)
          at processTicksAndRejections (node:internal/process/task_queues:82:21) {
        expose: true,
        statusCode: 400,
        status: 400,
        body: '{"invalid": ',
        type: 'entity.parse.failed'
      }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.error
      Error: SyntaxError: Unexpected end of JSON input
          at JSON.parse (<anonymous>)
          at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
          at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
          at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
          at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
          at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
          at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
          at IncomingMessage.emit (node:events:524:28)
          at endReadableNT (node:internal/streams/readable:1698:12)
          at processTicksAndRejections (node:internal/process/task_queues:82:21) {
        expose: true,
        statusCode: 400,
        status: 400,
        body: '{"invalid": ',
        type: 'entity.parse.failed'
      }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Market overview completed in 11ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Malformed Request Integration ‚Ä∫ JSON Parsing Error Scenarios ‚Ä∫ should handle malformed JSON gracefully

    expect(received).not.toContain(expected) // indexOf

    Expected substring: not ""
    Received string:        "Invalid symbols array"

      71 |         // Error should not expose the malformed content
      72 |         if (response.body?.error) {
    > 73 |           expect(response.body.error).not.toContain(test.body);
         |                                           ^
      74 |         }
      75 |       }
      76 |     });

      at Object.toContain (tests/integration/errors/malformed-request.integration.test.js:73:43)

  ‚óè Malformed Request Integration ‚Ä∫ JSON Parsing Error Scenarios ‚Ä∫ should handle JSON with dangerous characters

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [200, 404]

      114 |
      115 |         // Should handle safely
    > 116 |         expect([200, 404]).toContain(response.status);
          |                            ^
      117 |
      118 |         if (response.status >= 400) {
      119 |           expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/errors/malformed-request.integration.test.js:116:28)

  ‚óè Malformed Request Integration ‚Ä∫ JSON Parsing Error Scenarios ‚Ä∫ should handle deeply nested JSON structures

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [200, 404]

      146 |
      147 |       // Should handle deep nesting gracefully
    > 148 |       expect([200, 404]).toContain(response.status);
          |                          ^
      149 |
      150 |       if (response.status >= 400) {
      151 |         expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/errors/malformed-request.integration.test.js:148:26)

  ‚óè Malformed Request Integration ‚Ä∫ HTTP Header Malformation ‚Ä∫ should handle malformed authorization headers

    TypeError: Invalid character in header content ["Authorization"]

      at Test.setHeader [as request] (node_modules/superagent/src/node/index.js:851:39)
      at Test.request [as end] (node_modules/superagent/src/node/index.js:986:8)
      at Test.end (node_modules/supertest/lib/test.js:118:11)
      at end (node_modules/superagent/src/request-base.js:285:12)
      at Test.Object.<anonymous>.RequestBase.then (node_modules/superagent/src/request-base.js:267:31)

  ‚óè Malformed Request Integration ‚Ä∫ HTTP Header Malformation ‚Ä∫ should handle malformed content-type headers

    TypeError: Invalid character in header content ["Content-Type"]

      at Test.setHeader [as request] (node_modules/superagent/src/node/index.js:851:39)
      at Test.request [as end] (node_modules/superagent/src/node/index.js:986:8)
      at Test.end (node_modules/supertest/lib/test.js:118:11)
      at end (node_modules/superagent/src/request-base.js:285:12)
      at Test.Object.<anonymous>.RequestBase.then (node_modules/superagent/src/request-base.js:267:31)

  ‚óè Malformed Request Integration ‚Ä∫ HTTP Header Malformation ‚Ä∫ should handle custom header injection attempts

    expect(received).toMatch(expected)

    Expected pattern: /invalid|malformed|header/i
    Received string:  "expect(received).not.toMatch(expected)¬∑
    Matcher error: received value must be a string¬∑
    Received has value: undefined"

      283 |         } catch (error) {
      284 |           // Some malformed headers might be rejected at HTTP level
    > 285 |           expect(error.message).toMatch(/invalid|malformed|header/i);
          |                                 ^
      286 |         }
      287 |       }
      288 |     });

      at Object.toMatch (tests/integration/errors/malformed-request.integration.test.js:285:33)

  ‚óè Malformed Request Integration ‚Ä∫ URL and Path Malformation ‚Ä∫ should handle malformed URLs and paths

    expect(received).toMatch(expected)

    Expected pattern: /invalid|malformed|url/i
    Received string:  "expect(received).toContain(expected) // indexOf¬∑
    Expected value: 200
    Received array: [400, 404, 500]"

      336 |         } catch (error) {
      337 |           // Some malformed URLs might be rejected at HTTP level
    > 338 |           expect(error.message).toMatch(/invalid|malformed|url/i);
          |                                 ^
      339 |         }
      340 |       }
      341 |     });

      at Object.toMatch (tests/integration/errors/malformed-request.integration.test.js:338:33)

  ‚óè Malformed Request Integration ‚Ä∫ URL and Path Malformation ‚Ä∫ should handle malformed query parameters

    TypeError: Request path contains unescaped characters

      at Test.request (node_modules/superagent/src/node/index.js:808:22)
      at Test.request [as end] (node_modules/superagent/src/node/index.js:986:8)
      at Test.end (node_modules/supertest/lib/test.js:118:11)
      at end (node_modules/superagent/src/request-base.js:285:12)
      at Test.Object.<anonymous>.RequestBase.then (node_modules/superagent/src/request-base.js:267:31)

  ‚óè Malformed Request Integration ‚Ä∫ Request Body Malformation ‚Ä∫ should handle mismatched content-type and body

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [200, 404]

      472 |           .send(test.body);
      473 |
    > 474 |         expect([200, 404]).toContain(response.status);
          |                            ^
      475 |
      476 |         if (response.status >= 400) {
      477 |           expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/errors/malformed-request.integration.test.js:474:28)

  ‚óè Malformed Request Integration ‚Ä∫ Character Encoding Issues ‚Ä∫ should handle different character encodings

    expect(received).toContain(expected) // indexOf

    Expected value: 415
    Received array: [200, 404]

      538 |           .send(testBody);
      539 |
    > 540 |         expect([200, 404]).toContain(response.status);
          |                            ^
      541 |
      542 |         if (response.status >= 400) {
      543 |           expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/errors/malformed-request.integration.test.js:540:28)

  ‚óè Malformed Request Integration ‚Ä∫ Error Response Consistency ‚Ä∫ should maintain consistent error format for all malformed requests

    TypeError: Invalid character in header content ["Authorization"]

      at Test.setHeader [as request] (node_modules/superagent/src/node/index.js:851:39)
      at Test.request [as end] (node_modules/superagent/src/node/index.js:986:8)
      at Test.end (node_modules/supertest/lib/test.js:118:11)
      at end (node_modules/superagent/src/request-base.js:285:12)
      at Test.Object.<anonymous>.RequestBase.then (node_modules/superagent/src/request-base.js:267:31)

::ffff:127.0.0.1 - - [23/Sep/2025:16:31:54 +0000] "GET /api/recommendations HTTP/1.1" 200 290 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:54 +0000] "GET /api/recommendations?symbol=AAPL HTTP/1.1" 200 297 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:54 +0000] "GET /api/recommendations?category=buy HTTP/1.1" 200 290 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:54 +0000] "GET /api/recommendations?analyst=goldman_sachs HTTP/1.1" 200 300 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:54 +0000] "GET /api/recommendations?limit=50 HTTP/1.1" 200 290 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:54 +0000] "GET /api/recommendations?timeframe=weekly HTTP/1.1" 200 4552 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:54 +0000] "GET /api/recommendations?symbol=MSFT&category=hold&limit=10 HTTP/1.1" 200 298 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:54 +0000] "GET /api/recommendations HTTP/1.1" 200 290 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:54 +0000] "GET /api/recommendations HTTP/1.1" 200 290 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:54 +0000] "GET /api/recommendations HTTP/1.1" 200 290 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:54 +0000] "GET /api/recommendations?symbol=aapl HTTP/1.1" 200 297 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:54 +0000] "GET /api/recommendations?symbol=BRK.A HTTP/1.1" 200 299 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:54 +0000] "GET /api/recommendations/analysts/AAPL HTTP/1.1" 200 2412 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:54 +0000] "GET /api/recommendations/analysts/aapl HTTP/1.1" 200 2412 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:54 +0000] "GET /api/recommendations/analysts/MSFT?limit=5 HTTP/1.1" 200 1390 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:54 +0000] "GET /api/recommendations/analysts/TSLA HTTP/1.1" 200 2382 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:54 +0000] "GET /api/recommendations/analysts/BRK.A HTTP/1.1" 200 270 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:54 +0000] "GET /api/recommendations/analysts/GOOGL HTTP/1.1" 200 2512 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:54 +0000] "GET /api/recommendations/analysts/NVDA HTTP/1.1" 200 268 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:54 +0000] "GET /api/recommendations/analysts/123 HTTP/1.1" 200 266 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:54 +0000] "GET /api/recommendations/analysts/AAPL?limit=invalid HTTP/1.1" 200 2412 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:54 +0000] "GET /api/recommendations/analysts/AAPL?limit=-5 HTTP/1.1" 200 439 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:54 +0000] "GET /api/recommendations/analysts/AAPL?limit=99999 HTTP/1.1" 200 22124 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:54 +0000] "GET /api/recommendations HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:54 +0000] "GET /api/recommendations/analysts/AAPL HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:54 +0000] "GET /api/recommendations HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:54 +0000] "GET /api/recommendations?symbol=%20invalid%20 HTTP/1.1" 200 307 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:54 +0000] "GET /api/recommendations?symbol=&category=&analyst= HTTP/1.1" 200 296 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:54 +0000] "GET /api/recommendations?symbol=BRK%2EA HTTP/1.1" 200 299 "-" "-"
FAIL tests/integration/routes/recommendations.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Stock recommendations requested - symbol: AAPL, category: all

      at log (routes/recommendations.js:20:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Stock recommendations requested - symbol: all, category: buy

      at log (routes/recommendations.js:20:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Stock recommendations requested - symbol: MSFT, category: hold

      at log (routes/recommendations.js:20:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Stock recommendations requested - symbol: aapl, category: all

      at log (routes/recommendations.js:20:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Stock recommendations requested - symbol: BRK.A, category: all

      at log (routes/recommendations.js:20:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üë®‚Äçüíº Analyst coverage requested for AAPL

      at log (routes/recommendations.js:194:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üë®‚Äçüíº Analyst coverage requested for AAPL

      at log (routes/recommendations.js:194:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üë®‚Äçüíº Analyst coverage requested for MSFT

      at log (routes/recommendations.js:194:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üë®‚Äçüíº Analyst coverage requested for TSLA

      at log (routes/recommendations.js:194:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üë®‚Äçüíº Analyst coverage requested for BRK.A

      at log (routes/recommendations.js:194:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üë®‚Äçüíº Analyst coverage requested for GOOGL

      at log (routes/recommendations.js:194:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üë®‚Äçüíº Analyst coverage requested for NVDA

      at log (routes/recommendations.js:194:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üë®‚Äçüíº Analyst coverage requested for 123

      at log (routes/recommendations.js:194:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üë®‚Äçüíº Analyst coverage requested for AAPL

      at log (routes/recommendations.js:194:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üë®‚Äçüíº Analyst coverage requested for AAPL

      at log (routes/recommendations.js:194:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üë®‚Äçüíº Analyst coverage requested for AAPL

      at log (routes/recommendations.js:194:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Stock recommendations requested - symbol:  invalid , category: all

      at log (routes/recommendations.js:20:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Stock recommendations requested - symbol: all, category:

      at log (routes/recommendations.js:20:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Stock recommendations requested - symbol: BRK.A, category: all

      at log (routes/recommendations.js:20:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üë®‚Äçüíº Analyst coverage requested for AAPL

      at log (routes/recommendations.js:194:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üë®‚Äçüíº Analyst coverage requested for AAPL

      at log (routes/recommendations.js:194:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Stock recommendations requested - symbol: MSFT, category: all

      at log (routes/recommendations.js:20:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üë®‚Äçüíº Analyst coverage requested for AAPL

      at log (routes/recommendations.js:194:15)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Recommendations Routes ‚Ä∫ GET /api/recommendations/analysts/:symbol ‚Ä∫ should handle extremely large limit

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      278 |         .set("Authorization", "Bearer dev-bypass-token");
      279 |
    > 280 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      281 |       expect(response.body.limit).toBe(99999);
      282 |     });
      283 |   });

      at Object.toContain (tests/integration/routes/recommendations.integration.test.js:280:41)

  ‚óè Recommendations Routes ‚Ä∫ Error Handling ‚Ä∫ should handle malformed URLs gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      315 |         .set("Authorization", "Bearer dev-bypass-token");
      316 |
    > 317 |       expect([501, 500].includes(response.status)).toBe(true);
          |                                                    ^
      318 |     });
      319 |
      320 |     test("should handle empty parameters", async () => {

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:317:52)

  ‚óè Recommendations Routes ‚Ä∫ Error Handling ‚Ä∫ should handle empty parameters

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      323 |         .set("Authorization", "Bearer dev-bypass-token");
      324 |
    > 325 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      326 |     });
      327 |
      328 |     test("should handle URL encoded parameters", async () => {

      at Object.toContain (tests/integration/routes/recommendations.integration.test.js:325:41)

  ‚óè Recommendations Routes ‚Ä∫ Error Handling ‚Ä∫ should handle URL encoded parameters

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      331 |         .set("Authorization", "Bearer dev-bypass-token");
      332 |
    > 333 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      334 |       expect(response.body.symbol).toBe("BRK.A");
      335 |     });
      336 |   });

      at Object.toContain (tests/integration/routes/recommendations.integration.test.js:333:41)

  ‚óè Recommendations Routes ‚Ä∫ Response Structure Validation ‚Ä∫ should have consistent error response structure

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      342 |         .set("Authorization", "Bearer dev-bypass-token");
      343 |
    > 344 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      345 |       expect(response.body).toHaveProperty("success", false);
      346 |       expect(response.body).toHaveProperty("error");
      347 |       expect(response.body).toHaveProperty("details");

      at Object.toContain (tests/integration/routes/recommendations.integration.test.js:344:41)

  ‚óè Recommendations Routes ‚Ä∫ Response Structure Validation ‚Ä∫ should have consistent analyst coverage response structure

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      367 |         .set("Authorization", "Bearer dev-bypass-token");
      368 |
    > 369 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      370 |       expect(response.body).toHaveProperty("success", false);
      371 |       expect(response.body).toHaveProperty("error");
      372 |       expect(response.body).toHaveProperty("details");

      at Object.toContain (tests/integration/routes/recommendations.integration.test.js:369:41)

  ‚óè Recommendations Routes ‚Ä∫ Performance ‚Ä∫ should respond within reasonable time

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      389 |
      390 |       expect(responseTime).toBeLessThan(3000);
    > 391 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      392 |     });
      393 |
      394 |     test("should handle concurrent requests", async () => {

      at Object.toContain (tests/integration/routes/recommendations.integration.test.js:391:41)

  ‚óè Recommendations Routes ‚Ä∫ Performance ‚Ä∫ should handle concurrent requests

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      408 |
      409 |       responses.forEach((response) => {
    > 410 |         expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                           ^
      411 |       });
      412 |     });
      413 |   });

      at toContain (tests/integration/routes/recommendations.integration.test.js:410:43)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/routes/recommendations.integration.test.js:409:17)

  ‚óè Recommendations Routes ‚Ä∫ Required Setup Documentation ‚Ä∫ should document required setup for recommendations

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      419 |         .set("Authorization", "Bearer dev-bypass-token");
      420 |
    > 421 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      422 |       const setup = response.body.troubleshooting.required_setup;
      423 |
      424 |       // Should include key requirements

      at Object.toContain (tests/integration/routes/recommendations.integration.test.js:421:41)

  ‚óè Recommendations Routes ‚Ä∫ Required Setup Documentation ‚Ä∫ should document required setup for analyst coverage

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      439 |         .set("Authorization", "Bearer dev-bypass-token");
      440 |
    > 441 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      442 |       const setup = response.body.troubleshooting.required_setup;
      443 |
      444 |       // Should include key requirements

      at Object.toContain (tests/integration/routes/recommendations.integration.test.js:441:41)

::ffff:127.0.0.1 - - [23/Sep/2025:16:31:54 +0000] "GET /api/recommendations HTTP/1.1" 200 290 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:54 +0000] "GET /api/recommendations/analysts/AAPL HTTP/1.1" 200 2412 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:54 +0000] "GET /api/recommendations HTTP/1.1" 200 290 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/recommendations HTTP/1.1" 200 290 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/recommendations?symbol=MSFT HTTP/1.1" 200 297 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/recommendations/analysts/AAPL HTTP/1.1" 200 2412 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/recommendations HTTP/1.1" 200 290 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/recommendations/analysts/AAPL HTTP/1.1" 200 2412 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/settings HTTP/1.1" 200 472 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/settings HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/settings/dashboard HTTP/1.1" 200 2899 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/settings/dashboard HTTP/1.1" 200 2899 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/settings/dashboard HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/settings/trading-mode HTTP/1.1" 200 232 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/settings/trading-mode HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "POST /api/settings/trading-mode HTTP/1.1" 200 323 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "POST /api/settings/trading-mode HTTP/1.1" 400 130 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "POST /api/settings/trading-mode HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/settings/api-keys HTTP/1.1" 200 331 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/settings/api-keys HTTP/1.1" 200 331 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/settings/api-keys HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "POST /api/settings/api-keys HTTP/1.1" 400 100 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "POST /api/settings/api-keys HTTP/1.1" 400 100 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "POST /api/settings/api-keys HTTP/1.1" 400 100 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "POST /api/settings/api-keys HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/settings/api-keys/alpaca HTTP/1.1" 404 65 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/settings/api-keys/alpaca HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "PUT /api/settings/api-keys/alpaca HTTP/1.1" 404 79 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "PUT /api/settings/api-keys/alpaca HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "DELETE /api/settings/api-keys/alpaca HTTP/1.1" 404 65 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "DELETE /api/settings/api-keys/alpaca HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/settings HTTP/1.1" 200 472 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/settings/api-keys HTTP/1.1" 200 331 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/settings/dashboard HTTP/1.1" 200 2899 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/settings/trading-mode HTTP/1.1" 200 232 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/settings/dashboard HTTP/1.1" 200 2899 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "POST /api/settings/trading-mode HTTP/1.1" 400 130 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/settings/api-keys/invalid-provider-name HTTP/1.1" 404 80 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "POST /api/settings/api-keys HTTP/1.1" 400 100 "-" "-"
FAIL tests/integration/routes/settings.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      ‚öôÔ∏è Dashboard settings requested for user: dev-user-bypass

      at log (routes/settings.js:44:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      ‚öôÔ∏è Dashboard settings requested for user: dev-user-bypass

      at log (routes/settings.js:44:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Trading mode requested for user: dev-user-bypass

      at log (routes/settings.js:259:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîÑ Trading mode toggle requested for user: dev-user-bypass

      at log (routes/settings.js:310:13)

    console.log
      ‚úÖ Trading mode updated to paper for user: dev-user-bypass

      at log (routes/settings.js:353:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîÑ Trading mode toggle requested for user: dev-user-bypass

      at log (routes/settings.js:310:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.error
      Provider listing error: Error: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)
          at ApiKeyService.listProviders (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1182:15)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at listProviders (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1395:14)
          at /home/stocks/algo/webapp/lambda/routes/settings.js:398:23

      1220 |     } catch (error) {
      1221 |       this.recordFailure(error);
    > 1222 |       console.error("Provider listing error:", error);
           |               ^
      1223 |       throw error; // Re-throw error so wrapper can handle it
      1224 |     }
      1225 |   }

      at ApiKeyService.error [as listProviders] (utils/apiKeyService.js:1222:15)
      at listProviders (utils/apiKeyService.js:1395:14)
      at routes/settings.js:398:23

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.error
      Provider listing error: Error: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)
          at ApiKeyService.listProviders (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1182:15)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at listProviders (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1395:14)
          at /home/stocks/algo/webapp/lambda/routes/settings.js:398:23

      1220 |     } catch (error) {
      1221 |       this.recordFailure(error);
    > 1222 |       console.error("Provider listing error:", error);
           |               ^
      1223 |       throw error; // Re-throw error so wrapper can handle it
      1224 |     }
      1225 |   }

      at ApiKeyService.error [as listProviders] (utils/apiKeyService.js:1222:15)
      at listProviders (utils/apiKeyService.js:1395:14)
      at routes/settings.js:398:23

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.error
      API key retrieval error: Error: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)
          at ApiKeyService.getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:797:15)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1370:14)
          at /home/stocks/algo/webapp/lambda/routes/settings.js:421:24

      905 |     } catch (error) {
      906 |       this.recordFailure(error);
    > 907 |       console.error("API key retrieval error:", error);
          |               ^
      908 |
      909 |       if (error.message.includes("circuit breaker")) {
      910 |         throw error;

      at ApiKeyService.error [as getApiKey] (utils/apiKeyService.js:907:15)
      at getApiKey (utils/apiKeyService.js:1370:14)
      at routes/settings.js:421:24

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.error
      API key retrieval error: Error: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)
          at ApiKeyService.getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:797:15)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1370:14)
          at /home/stocks/algo/webapp/lambda/routes/settings.js:536:26

      905 |     } catch (error) {
      906 |       this.recordFailure(error);
    > 907 |       console.error("API key retrieval error:", error);
          |               ^
      908 |
      909 |       if (error.message.includes("circuit breaker")) {
      910 |         throw error;

      at ApiKeyService.error [as getApiKey] (utils/apiKeyService.js:907:15)
      at getApiKey (utils/apiKeyService.js:1370:14)
      at routes/settings.js:536:26

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      ‚öôÔ∏è Dashboard settings requested for user: dev-user-bypass

      at log (routes/settings.js:44:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Trading mode requested for user: dev-user-bypass

      at log (routes/settings.js:259:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.error
      API key circuit breaker OPENED after 5 failures: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)

      525 |     if (this.circuitBreaker.failures >= this.circuitBreaker.maxFailures) {
      526 |       this.circuitBreaker.state = "OPEN";
    > 527 |       console.error(
          |               ^
      528 |         `API key circuit breaker OPENED after ${this.circuitBreaker.failures} failures:`,
      529 |         error.message
      530 |       );

      at ApiKeyService.error [as recordFailure] (utils/apiKeyService.js:527:15)
      at ApiKeyService.recordFailure (utils/apiKeyService.js:1221:12)
      at listProviders (utils/apiKeyService.js:1395:14)
      at routes/settings.js:398:23

    console.error
      Provider listing error: Error: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)
          at ApiKeyService.listProviders (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1182:15)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at listProviders (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1395:14)
          at /home/stocks/algo/webapp/lambda/routes/settings.js:398:23

      1220 |     } catch (error) {
      1221 |       this.recordFailure(error);
    > 1222 |       console.error("Provider listing error:", error);
           |               ^
      1223 |       throw error; // Re-throw error so wrapper can handle it
      1224 |     }
      1225 |   }

      at ApiKeyService.error [as listProviders] (utils/apiKeyService.js:1222:15)
      at listProviders (utils/apiKeyService.js:1395:14)
      at routes/settings.js:398:23

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      ‚öôÔ∏è Dashboard settings requested for user: dev-user-bypass

      at log (routes/settings.js:44:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîÑ Trading mode toggle requested for user: dev-user-bypass

      at log (routes/settings.js:310:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.error
      API key circuit breaker OPENED after 6 failures: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)

      525 |     if (this.circuitBreaker.failures >= this.circuitBreaker.maxFailures) {
      526 |       this.circuitBreaker.state = "OPEN";
    > 527 |       console.error(
          |               ^
      528 |         `API key circuit breaker OPENED after ${this.circuitBreaker.failures} failures:`,
      529 |         error.message
      530 |       );

      at ApiKeyService.error [as recordFailure] (utils/apiKeyService.js:527:15)
      at ApiKeyService.recordFailure [as getApiKey] (utils/apiKeyService.js:906:12)
      at getApiKey (utils/apiKeyService.js:1370:14)
      at routes/settings.js:421:24

    console.error
      API key retrieval error: Error: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)
          at ApiKeyService.getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:797:15)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1370:14)
          at /home/stocks/algo/webapp/lambda/routes/settings.js:421:24

      905 |     } catch (error) {
      906 |       this.recordFailure(error);
    > 907 |       console.error("API key retrieval error:", error);
          |               ^
      908 |
      909 |       if (error.message.includes("circuit breaker")) {
      910 |         throw error;

      at ApiKeyService.error [as getApiKey] (utils/apiKeyService.js:907:15)
      at getApiKey (utils/apiKeyService.js:1370:14)
      at routes/settings.js:421:24

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.error
      API key circuit breaker OPENED after 7 failures: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)

      525 |     if (this.circuitBreaker.failures >= this.circuitBreaker.maxFailures) {
      526 |       this.circuitBreaker.state = "OPEN";
    > 527 |       console.error(
          |               ^
      528 |         `API key circuit breaker OPENED after ${this.circuitBreaker.failures} failures:`,
      529 |         error.message
      530 |       );

      at ApiKeyService.error [as recordFailure] (utils/apiKeyService.js:527:15)
      at ApiKeyService.recordFailure [as getApiKey] (utils/apiKeyService.js:906:12)
      at getApiKey (utils/apiKeyService.js:1370:14)
      at routes/settings.js:421:24

    console.error
      API key retrieval error: Error: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)
          at ApiKeyService.getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:797:15)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1370:14)
          at /home/stocks/algo/webapp/lambda/routes/settings.js:421:24

      905 |     } catch (error) {
      906 |       this.recordFailure(error);
    > 907 |       console.error("API key retrieval error:", error);
          |               ^
      908 |
      909 |       if (error.message.includes("circuit breaker")) {
      910 |         throw error;

      at ApiKeyService.error [as getApiKey] (utils/apiKeyService.js:907:15)
      at getApiKey (utils/apiKeyService.js:1370:14)
      at routes/settings.js:421:24

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.error
      API key circuit breaker OPENED after 8 failures: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)

      525 |     if (this.circuitBreaker.failures >= this.circuitBreaker.maxFailures) {
      526 |       this.circuitBreaker.state = "OPEN";
    > 527 |       console.error(
          |               ^
      528 |         `API key circuit breaker OPENED after ${this.circuitBreaker.failures} failures:`,
      529 |         error.message
      530 |       );

      at ApiKeyService.error [as recordFailure] (utils/apiKeyService.js:527:15)
      at ApiKeyService.recordFailure [as getApiKey] (utils/apiKeyService.js:906:12)
      at getApiKey (utils/apiKeyService.js:1370:14)
      at routes/settings.js:421:24

    console.error
      API key retrieval error: Error: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)
          at ApiKeyService.getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:797:15)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1370:14)
          at /home/stocks/algo/webapp/lambda/routes/settings.js:421:24

      905 |     } catch (error) {
      906 |       this.recordFailure(error);
    > 907 |       console.error("API key retrieval error:", error);
          |               ^
      908 |
      909 |       if (error.message.includes("circuit breaker")) {
      910 |         throw error;

      at ApiKeyService.error [as getApiKey] (utils/apiKeyService.js:907:15)
      at getApiKey (utils/apiKeyService.js:1370:14)
      at routes/settings.js:421:24

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.error
      API key circuit breaker OPENED after 9 failures: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)

      525 |     if (this.circuitBreaker.failures >= this.circuitBreaker.maxFailures) {
      526 |       this.circuitBreaker.state = "OPEN";
    > 527 |       console.error(
          |               ^
      528 |         `API key circuit breaker OPENED after ${this.circuitBreaker.failures} failures:`,
      529 |         error.message
      530 |       );

      at ApiKeyService.error [as recordFailure] (utils/apiKeyService.js:527:15)
      at ApiKeyService.recordFailure [as getApiKey] (utils/apiKeyService.js:906:12)
      at getApiKey (utils/apiKeyService.js:1370:14)
      at routes/settings.js:421:24

    console.error
      API key retrieval error: Error: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)
          at ApiKeyService.getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:797:15)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1370:14)
          at /home/stocks/algo/webapp/lambda/routes/settings.js:421:24

      905 |     } catch (error) {
      906 |       this.recordFailure(error);
    > 907 |       console.error("API key retrieval error:", error);
          |               ^
      908 |
      909 |       if (error.message.includes("circuit breaker")) {
      910 |         throw error;

      at ApiKeyService.error [as getApiKey] (utils/apiKeyService.js:907:15)
      at getApiKey (utils/apiKeyService.js:1370:14)
      at routes/settings.js:421:24

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.error
      API key circuit breaker OPENED after 10 failures: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)

      525 |     if (this.circuitBreaker.failures >= this.circuitBreaker.maxFailures) {
      526 |       this.circuitBreaker.state = "OPEN";
    > 527 |       console.error(
          |               ^
      528 |         `API key circuit breaker OPENED after ${this.circuitBreaker.failures} failures:`,
      529 |         error.message
      530 |       );

      at ApiKeyService.error [as recordFailure] (utils/apiKeyService.js:527:15)
      at ApiKeyService.recordFailure [as getApiKey] (utils/apiKeyService.js:906:12)
      at getApiKey (utils/apiKeyService.js:1370:14)
      at routes/settings.js:421:24

    console.error
      API key retrieval error: Error: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)
          at ApiKeyService.getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:797:15)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1370:14)
          at /home/stocks/algo/webapp/lambda/routes/settings.js:421:24

      905 |     } catch (error) {
      906 |       this.recordFailure(error);
    > 907 |       console.error("API key retrieval error:", error);
          |               ^
      908 |
      909 |       if (error.message.includes("circuit breaker")) {
      910 |         throw error;

      at ApiKeyService.error [as getApiKey] (utils/apiKeyService.js:907:15)
      at getApiKey (utils/apiKeyService.js:1370:14)
      at routes/settings.js:421:24

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      ‚öôÔ∏è Dashboard settings requested for user: dev-user-bypass

      at log (routes/settings.js:44:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Trading mode requested for user: dev-user-bypass

      at log (routes/settings.js:259:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.error
      API key circuit breaker OPENED after 11 failures: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)

      525 |     if (this.circuitBreaker.failures >= this.circuitBreaker.maxFailures) {
      526 |       this.circuitBreaker.state = "OPEN";
    > 527 |       console.error(
          |               ^
      528 |         `API key circuit breaker OPENED after ${this.circuitBreaker.failures} failures:`,
      529 |         error.message
      530 |       );

      at ApiKeyService.error [as recordFailure] (utils/apiKeyService.js:527:15)
      at ApiKeyService.recordFailure (utils/apiKeyService.js:1221:12)
      at listProviders (utils/apiKeyService.js:1395:14)
      at routes/settings.js:398:23

    console.error
      Provider listing error: Error: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)
          at ApiKeyService.listProviders (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1182:15)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at listProviders (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1395:14)
          at /home/stocks/algo/webapp/lambda/routes/settings.js:398:23

      1220 |     } catch (error) {
      1221 |       this.recordFailure(error);
    > 1222 |       console.error("Provider listing error:", error);
           |               ^
      1223 |       throw error; // Re-throw error so wrapper can handle it
      1224 |     }
      1225 |   }

      at ApiKeyService.error [as listProviders] (utils/apiKeyService.js:1222:15)
      at listProviders (utils/apiKeyService.js:1395:14)
      at routes/settings.js:398:23

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      ‚öôÔ∏è Dashboard settings requested for user: dev-user-bypass

      at log (routes/settings.js:44:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Settings Routes Integration Tests ‚Ä∫ GET /api/settings/api-keys (API Keys) ‚Ä∫ should return user API keys

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      145 |       if (response.status === 200) {
      146 |         expect(response.body).toHaveProperty("providers");
    > 147 |         expect(Array.isArray(response.body.providers)).toBe(true);
          |                                                        ^
      148 |       }
      149 |     });
      150 |

      at Object.toBe (tests/integration/routes/settings.integration.test.js:147:56)

  ‚óè Settings Routes Integration Tests ‚Ä∫ GET /api/settings/api-keys/:provider (Get Specific API Key) ‚Ä∫ should return specific provider API key status

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      232 |         .set("Authorization", "Bearer dev-bypass-token");
      233 |
    > 234 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      235 |
      236 |       if (response.status === 200) {
      237 |         expect(response.body).toHaveProperty("provider", "alpaca");

      at Object.toBe (tests/integration/routes/settings.integration.test.js:234:52)

  ‚óè Settings Routes Integration Tests ‚Ä∫ DELETE /api/settings/api-keys/:provider (Delete API Key) ‚Ä∫ should delete API key

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      281 |         .set("Authorization", "Bearer dev-bypass-token");
      282 |
    > 283 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      284 |
      285 |       if (response.status === 200) {
      286 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/settings.integration.test.js:283:52)

::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/settings/api-keys/%27%3B%20DROP%20TABLE%20user_api_keys%3B%20-- HTTP/1.1" 404 90 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/settings/api-keys/1%27%20OR%20%271%27%3D%271 HTTP/1.1" 404 71 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/settings/api-keys/UNION%20SELECT%20*%20FROM%20users HTTP/1.1" 404 84 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/settings/api-keys/%3Cscript%3Ealert(%27xss%27)%3C%2Fscript%3E HTTP/1.1" 404 88 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/settings HTTP/1.1" 200 472 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/settings/dashboard HTTP/1.1" 200 2899 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/settings/trading-mode HTTP/1.1" 200 232 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/settings/api-keys HTTP/1.1" 200 331 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/settings/dashboard HTTP/1.1" 200 2899 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/settings HTTP/1.1" 401 528 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/settings HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/settings HTTP/1.1" 401 528 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/settings/apikeys HTTP/1.1" 302 44 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:55 +0000] "GET /api/settings/apikeys?broker=test&active=true HTTP/1.1" 302 68 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/health HTTP/1.1" 200 501 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/health HTTP/1.1" 200 501 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/health HTTP/1.1" 200 501 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/health HTTP/1.1" 200 500 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/health HTTP/1.1" 200 501 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/health HTTP/1.1" 200 501 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/stocks/%3Cscript%3Ealert(%27xss%27)%3C/script%3E/details HTTP/1.1" 404 166 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/stocks/AAPL%27;%20DROP%20TABLE%20stocks;%20--/details HTTP/1.1" 404 163 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/stocks/../../etc/passwd HTTP/1.1" 404 133 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/health HTTP/1.1" 200 501 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/health HTTP/1.1" 200 501 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/health HTTP/1.1" 200 501 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/health HTTP/1.1" 200 501 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/health HTTP/1.1" 200 501 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/health HTTP/1.1" 200 501 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/health HTTP/1.1" 200 501 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/health HTTP/1.1" 200 501 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/health HTTP/1.1" 200 501 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/health HTTP/1.1" 200 500 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/health HTTP/1.1" 200 501 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/health HTTP/1.1" 200 501 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/health HTTP/1.1" 200 501 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/health HTTP/1.1" 200 501 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/health HTTP/1.1" 200 501 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/health HTTP/1.1" 200 501 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/health HTTP/1.1" 200 500 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/health HTTP/1.1" 200 501 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/health HTTP/1.1" 200 501 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/health HTTP/1.1" 200 501 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 404 131 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/portfolio/performance HTTP/1.1" 401 521 "-" "-"
FAIL tests/integration/middleware/security-headers.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      CORS not implemented - cross-origin requests allowed without explicit headers

      at Object.log (tests/integration/middleware/security-headers.integration.test.js:66:19)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Request size limiting not implemented - recommendation for DoS protection

      at Object.log (tests/integration/middleware/security-headers.integration.test.js:192:17)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Rate limiting not implemented - recommendation for DDoS protection

      at Object.log (tests/integration/middleware/security-headers.integration.test.js:254:17)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Portfolio positions requested for user: dev-user-bypass

      at log (routes/portfolio.js:258:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Portfolio positions requested for user: dev-user-bypass

      at log (routes/portfolio.js:258:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Portfolio positions requested for user: dev-user-bypass

      at log (routes/portfolio.js:258:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Portfolio positions requested for user: dev-user-bypass

      at log (routes/portfolio.js:258:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Portfolio positions requested for user: dev-user-bypass

      at log (routes/portfolio.js:258:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Portfolio positions requested for user: dev-user-bypass

      at log (routes/portfolio.js:258:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Portfolio positions requested for user: dev-user-bypass

      at log (routes/portfolio.js:258:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Portfolio positions requested for user: dev-user-bypass

      at log (routes/portfolio.js:258:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Portfolio positions requested for user: dev-user-bypass

      at log (routes/portfolio.js:258:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Portfolio positions requested for user: dev-user-bypass

      at log (routes/portfolio.js:258:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Portfolio performance endpoint called for user: dev-user-bypass, timeframe: invalid

      at log (routes/portfolio.js:1108:13)

    console.log
      üìä Retrieved 0 performance data points

      at log (routes/portfolio.js:1136:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Security Headers Integration ‚Ä∫ Request Validation Security ‚Ä∫ should sanitize request parameters

    expect(received).toContain(expected) // indexOf

    Expected value: 404
    Received array: [400, 422]

      201 |         .set("Authorization", "Bearer dev-bypass-token");
      202 |
    > 203 |       expect([400, 422]).toContain(response.status);
          |                          ^
      204 |
      205 |       // Should handle malicious input safely
      206 |       if (response.body && typeof response.body === "string") {

      at Object.toContain (tests/integration/middleware/security-headers.integration.test.js:203:26)

  ‚óè Security Headers Integration ‚Ä∫ Request Validation Security ‚Ä∫ should prevent SQL injection attempts

    expect(received).toContain(expected) // indexOf

    Expected value: 404
    Received array: [400, 422]

      214 |         .set("Authorization", "Bearer dev-bypass-token");
      215 |
    > 216 |       expect([400, 422]).toContain(response.status);
          |                          ^
      217 |       expect(response.headers["content-type"]).toMatch(/application\/json/);
      218 |     });
      219 |

      at Object.toContain (tests/integration/middleware/security-headers.integration.test.js:216:26)

  ‚óè Security Headers Integration ‚Ä∫ Request Validation Security ‚Ä∫ should handle path traversal attempts

    expect(received).toContain(expected) // indexOf

    Expected value: 404
    Received array: [400, 422]

      223 |         .set("Authorization", "Bearer dev-bypass-token");
      224 |
    > 225 |       expect([400, 422]).toContain(response.status);
          |                          ^
      226 |       expect(response.headers["content-type"]).toMatch(/application\/json/);
      227 |     });
      228 |   });

      at Object.toContain (tests/integration/middleware/security-headers.integration.test.js:225:26)

  ‚óè Security Headers Integration ‚Ä∫ Authentication Security ‚Ä∫ should reject requests with malformed authentication

    expect(received).toContain(expected) // indexOf

    Expected value: 401
    Received array: [400, 422]

      352 |           .set("Authorization", token);
      353 |
    > 354 |         expect([400, 422]).toContain(response.status);
          |                            ^
      355 |         expect(response.headers["content-type"]).toMatch(/application\/json/);
      356 |
      357 |         // Should not reflect malicious content in response

      at Object.toContain (tests/integration/middleware/security-headers.integration.test.js:354:28)

::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/portfolio/performance?timeframe=invalid&detailed=true&complex=true HTTP/1.1" 200 456 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/portfolio HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/portfolio HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/portfolio HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/portfolio HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/portfolio HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/portfolio HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:56 +0000] "GET /api/health HTTP/1.1" 200 501 "-" "Mozilla/5.0 TestAgent"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment HTTP/1.1" 200 193 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/health HTTP/1.1" 200 135 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/ping HTTP/1.1" 200 77 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/analysis HTTP/1.1" 422 158 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/analysis?symbol=AAPL HTTP/1.1" 200 347 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/analysis?symbol=AAPL&period=1d HTTP/1.1" 200 347 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/analysis?symbol=AAPL&period=3d HTTP/1.1" 200 347 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/analysis?symbol=AAPL&period=7d HTTP/1.1" 200 347 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/analysis?symbol=AAPL&period=14d HTTP/1.1" 200 348 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/analysis?symbol=AAPL&period=30d HTTP/1.1" 200 348 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/analysis?symbol=MSFT HTTP/1.1" 200 347 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/analysis?symbol=TSLA&period=invalid HTTP/1.1" 200 352 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/analysis?symbol=aapl HTTP/1.1" 200 347 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/analysis?symbol=BRK.A HTTP/1.1" 200 348 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/analysis?symbol=GOOGL HTTP/1.1" 200 348 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/analysis?symbol=NVDA HTTP/1.1" 200 347 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/analysis?symbol=META HTTP/1.1" 200 347 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/social HTTP/1.1" 200 311 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/social/AAPL HTTP/1.1" 200 250 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/social/MSFT HTTP/1.1" 200 250 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/social/BRK.A HTTP/1.1" 200 251 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/trending HTTP/1.1" 200 249 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment HTTP/1.1" 200 193 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/health HTTP/1.1" 200 135 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/ping HTTP/1.1" 200 77 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/social HTTP/1.1" 200 311 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/trending HTTP/1.1" 200 249 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/analysis?symbol=AAPL HTTP/1.1" 200 347 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/analysis?symbol=TEST_ERROR_SYMBOL HTTP/1.1" 200 360 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/analysis?symbol= HTTP/1.1" 422 158 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/analysis?symbol=%20invalid%20 HTTP/1.1" 200 352 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/analysis?symbol=BRK%2EA&period=7d HTTP/1.1" 200 348 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/analysis?symbol=AAPL HTTP/1.1" 200 347 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/analysis?symbol=AAPL HTTP/1.1" 200 347 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/analysis?symbol=MSFT HTTP/1.1" 200 347 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/analysis?symbol=AAPL HTTP/1.1" 200 347 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment HTTP/1.1" 200 193 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/health HTTP/1.1" 200 135 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/ping HTTP/1.1" 200 77 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/social HTTP/1.1" 200 311 "-" "-"
FAIL tests/integration/routes/sentiment.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üòä Sentiment analysis requested for symbol: AAPL, period: 7d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: AAPL, period: 1d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: AAPL, period: 3d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: AAPL, period: 7d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: AAPL, period: 14d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: AAPL, period: 30d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: MSFT, period: 7d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: TSLA, period: invalid

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: aapl, period: 7d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: BRK.A, period: 7d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: GOOGL, period: 7d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: NVDA, period: 7d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: META, period: 7d

      at log (routes/sentiment.js:47:13)

    console.log
      üì± Social sentiment overview requested - not implemented

      at log (routes/sentiment.js:252:13)

    console.log
      üì± Social sentiment for AAPL requested - not implemented

      at log (routes/sentiment.js:764:13)

    console.log
      üì± Social sentiment for MSFT requested - not implemented

      at log (routes/sentiment.js:764:13)

    console.log
      üì± Social sentiment for BRK.A requested - not implemented

      at log (routes/sentiment.js:764:13)

    console.log
      üìà Trending sentiment requested - not implemented

      at log (routes/sentiment.js:1039:13)

    console.log
      üì± Social sentiment overview requested - not implemented

      at log (routes/sentiment.js:252:13)

    console.log
      üìà Trending sentiment requested - not implemented

      at log (routes/sentiment.js:1039:13)

    console.log
      üòä Sentiment analysis requested for symbol: AAPL, period: 7d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: TEST_ERROR_SYMBOL, period: 7d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol:  invalid , period: 7d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: BRK.A, period: 7d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: AAPL, period: 7d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: AAPL, period: 7d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: MSFT, period: 7d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: AAPL, period: 7d

      at log (routes/sentiment.js:47:13)

    console.log
      üì± Social sentiment overview requested - not implemented

      at log (routes/sentiment.js:252:13)

    console.log
      üòä Sentiment analysis requested for symbol: 123, period: 7d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA, period: 7d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: AAPL, period: 7d

      at log (routes/sentiment.js:47:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Sentiment Routes ‚Ä∫ GET /api/sentiment/social ‚Ä∫ should return 501 not implemented

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      244 |         .set("Authorization", "Bearer dev-bypass-token");
      245 |
    > 246 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      247 |       expect(response.body).toHaveProperty("success", false);
      248 |       expect(response.body).toHaveProperty(
      249 |         "error",

      at Object.toContain (tests/integration/routes/sentiment.integration.test.js:246:41)

  ‚óè Sentiment Routes ‚Ä∫ GET /api/sentiment/social/:symbol ‚Ä∫ should return 501 not implemented

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      262 |         .set("Authorization", "Bearer dev-bypass-token");
      263 |
    > 264 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      265 |       expect(response.body).toHaveProperty("success", false);
      266 |       expect(response.body).toHaveProperty(
      267 |         "error",

      at Object.toContain (tests/integration/routes/sentiment.integration.test.js:264:41)

  ‚óè Sentiment Routes ‚Ä∫ GET /api/sentiment/social/:symbol ‚Ä∫ should handle different symbols

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      281 |           .set("Authorization", "Bearer dev-bypass-token");
      282 |
    > 283 |         expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                           ^
      284 |         expect(response.body.message).toContain(symbol);
      285 |       }
      286 |     });

      at Object.toContain (tests/integration/routes/sentiment.integration.test.js:283:43)

  ‚óè Sentiment Routes ‚Ä∫ GET /api/sentiment/social/:symbol ‚Ä∫ should handle special characters in symbol

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      291 |         .set("Authorization", "Bearer dev-bypass-token");
      292 |
    > 293 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      294 |       expect(response.body.message).toContain("BRK.A");
      295 |     });
      296 |   });

      at Object.toContain (tests/integration/routes/sentiment.integration.test.js:293:41)

  ‚óè Sentiment Routes ‚Ä∫ GET /api/sentiment/trending ‚Ä∫ should return 501 not implemented

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      302 |         .set("Authorization", "Bearer dev-bypass-token");
      303 |
    > 304 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      305 |       expect(response.body).toHaveProperty("success", false);
      306 |       expect(response.body).toHaveProperty(
      307 |         "error",

      at Object.toContain (tests/integration/routes/sentiment.integration.test.js:304:41)

  ‚óè Sentiment Routes ‚Ä∫ Error Handling ‚Ä∫ should handle empty symbol parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      360 |         .set("Authorization", "Bearer dev-bypass-token");
      361 |
    > 362 |       expect([400, 500].includes(response.status)).toBe(true);
          |                                                    ^
      363 |     });
      364 |
      365 |     test("should handle malformed URLs", async () => {

      at Object.toBe (tests/integration/routes/sentiment.integration.test.js:362:52)

::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/analysis?symbol=123 HTTP/1.1" 200 346 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/analysis?symbol=AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA HTTP/1.1" 200 393 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/sentiment/analysis?symbol=AAPL&period=7d&extra=ignored HTTP/1.1" 200 347 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/calendar HTTP/1.1" 200 120 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/calendar/earnings?start_date=2024-01-01&end_date=2024-01-31 HTTP/1.1" 200 3006 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/calendar/earnings?symbol=AAPL HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/calendar/earnings?days_ahead=7 HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/calendar/earnings?limit=10 HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/calendar/earnings?symbol=AAPL&days_ahead=30&limit=25 HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/calendar/earnings?symbol=NONEXISTENT&start_date=2050-01-01&end_date=2050-01-02 HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/calendar/earnings?start_date=invalid-date HTTP/1.1" 400 120 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/calendar/dividends HTTP/1.1" 200 12051 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/calendar/dividends?symbol=AAPL HTTP/1.1" 200 1342 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/calendar/economic HTTP/1.1" 200 8364 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/calendar/economic?country=US HTTP/1.1" 200 6701 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/calendar/upcoming HTTP/1.1" 200 9667 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/calendar/upcoming?days=7 HTTP/1.1" 200 2336 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/calendar/upcoming?days=14&type=earnings&symbol=AAPL&limit=25 HTTP/1.1" 200 3102 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/calendar/health HTTP/1.1" 200 157 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/calendar/debug HTTP/1.1" 200 839 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/calendar/debug HTTP/1.1" 200 839 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/calendar/test HTTP/1.1" 200 936 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/calendar/events HTTP/1.1" 200 223 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/calendar/events?page=2 HTTP/1.1" 200 222 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/calendar/events?limit=10 HTTP/1.1" 200 223 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/calendar/events?type=upcoming HTTP/1.1" 200 223 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/calendar/earnings-estimates HTTP/1.1" 200 1442 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/calendar/earnings-estimates?page=1&limit=5 HTTP/1.1" 200 1581 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/calendar/earnings-history HTTP/1.1" 200 2045 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:57 +0000] "GET /api/calendar/earnings-metrics HTTP/1.1" 500 176 "-" "-"
FAIL tests/integration/routes/calendar.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: AAPL, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 7

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: AAPL, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: NONEXISTENT, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üí∞ Dividends calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:870:13)

    console.log
      üí∞ Dividends calendar requested - symbol: AAPL, days_ahead: 30

      at log (routes/calendar.js:870:13)

    console.log
      üìä Economic calendar requested - country: US, importance: all

      at log (routes/calendar.js:1150:13)

    console.log
      üìä Economic calendar requested - country: US, importance: all

      at log (routes/calendar.js:1150:13)

    console.log
      üìÖ Upcoming calendar events requested - days: 30, country: US, importance: all

      at log (routes/calendar.js:1563:13)

    console.log
      üìÖ Upcoming calendar events requested - days: 7, country: US, importance: all

      at log (routes/calendar.js:1563:13)

    console.log
      üìÖ Upcoming calendar events requested - days: 14, country: US, importance: all

      at log (routes/calendar.js:1563:13)

    console.log
      Calendar debug endpoint called

      at log (routes/calendar.js:271:13)

    console.log
      Table exists check: { exists: true }

      at log (routes/calendar.js:283:13)

    console.log
      Total earnings reports: { total: '4' }

      at log (routes/calendar.js:289:15)

    console.log
      Sample records: [
        {
          symbol: 'TSLA',
          event_type: 'earnings',
          start_date: 2024-01-30T06:00:00.000Z,
          title: 'Q1 2024 Earnings Report',
          eps_estimate: '0.8500',
          eps_actual: '0.9100'
        },
        {
          symbol: 'GOOGL',
          event_type: 'earnings',
          start_date: 2024-01-25T06:00:00.000Z,
          title: 'Q1 2024 Earnings Report',
          eps_estimate: '3.2500',
          eps_actual: '3.1800'
        },
        {
          symbol: 'MSFT',
          event_type: 'earnings',
          start_date: 2024-01-20T06:00:00.000Z,
          title: 'Q1 2024 Earnings Report',
          eps_estimate: '2.4500',
          eps_actual: '2.5100'
        },
        {
          symbol: 'AAPL',
          event_type: 'earnings',
          start_date: 2024-01-15T06:00:00.000Z,
          title: 'Q1 2024 Earnings Report',
          eps_estimate: '1.8500',
          eps_actual: '1.9200'
        }
      ]

      at log (routes/calendar.js:301:15)

    console.log
      Calendar debug endpoint called

      at log (routes/calendar.js:271:13)

    console.log
      Table exists check: { exists: true }

      at log (routes/calendar.js:283:13)

    console.log
      Total earnings reports: { total: '4' }

      at log (routes/calendar.js:289:15)

    console.log
      Sample records: [
        {
          symbol: 'TSLA',
          event_type: 'earnings',
          start_date: 2024-01-30T06:00:00.000Z,
          title: 'Q1 2024 Earnings Report',
          eps_estimate: '0.8500',
          eps_actual: '0.9100'
        },
        {
          symbol: 'GOOGL',
          event_type: 'earnings',
          start_date: 2024-01-25T06:00:00.000Z,
          title: 'Q1 2024 Earnings Report',
          eps_estimate: '3.2500',
          eps_actual: '3.1800'
        },
        {
          symbol: 'MSFT',
          event_type: 'earnings',
          start_date: 2024-01-20T06:00:00.000Z,
          title: 'Q1 2024 Earnings Report',
          eps_estimate: '2.4500',
          eps_actual: '2.5100'
        },
        {
          symbol: 'AAPL',
          event_type: 'earnings',
          start_date: 2024-01-15T06:00:00.000Z,
          title: 'Q1 2024 Earnings Report',
          eps_estimate: '1.8500',
          eps_actual: '1.9200'
        }
      ]

      at log (routes/calendar.js:301:15)

    console.log
      Calendar test endpoint called

      at log (routes/calendar.js:332:13)

    console.log
      Calendar events endpoint called with params: {}

      at log (routes/calendar.js:371:13)

    console.log
      Calendar events endpoint called with params: { page: '2' }

      at log (routes/calendar.js:371:13)

    console.log
      Calendar events endpoint called with params: { limit: '10' }

      at log (routes/calendar.js:371:13)

    console.log
      Calendar events endpoint called with params: { type: 'upcoming' }

      at log (routes/calendar.js:371:13)

    console.error
      Database query error: {
        error: 'column "date" does not exist',
        query: '\n' +
          '      SELECT \n' +
          '        symbol,\n' +
          '        symbol as company_name,\n' +
          '        date as report_date,\n' +
          '        ...',
        params: '2 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
          at async Promise.all (index 0)
      at routes/calendar.js:795:57

    console.error
      Error fetching earnings metrics: error: column "date" does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at async Promise.all (index 0)
          at /home/stocks/algo/webapp/lambda/routes/calendar.js:795:57 {
        length: 104,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '72',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      839 |     });
      840 |   } catch (error) {
    > 841 |     console.error("Error fetching earnings metrics:", error);
          |             ^
      842 |     res.status(500).json({
      843 |       success: false,
      844 |       error: "Failed to fetch earnings metrics",

      at error (routes/calendar.js:841:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Calendar Routes ‚Ä∫ GET /api/calendar/earnings ‚Ä∫ should handle invalid dates gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 400

      126 |       );
      127 |
    > 128 |       expect(response.status).toBe(200);
          |                               ^
      129 |       expect(response.body.success).toBe(true);
      130 |       expect(response.body).toHaveProperty("data");
      131 |     });

      at Object.toBe (tests/integration/routes/calendar.integration.test.js:128:31)

  ‚óè Calendar Routes ‚Ä∫ GET /api/calendar/economic ‚Ä∫ should return economic calendar data

    expect(received).toHaveProperty(path)

    Expected path: "troubleshooting"
    Received path: []

    Received value: {"data": {"available_filters": {"categories": ["monetary_policy", "inflation", "employment", "gdp", "consumption", "manufacturing", "sentiment", "housing"], "countries": ["US", "EU", "GB", "JP", "CA", "AU"], "importance_levels": ["all", "high", "medium", "low"]}, "economic_events": [{"actual": null, "category": "sentiment", "country": "US", "currency": "USD", "date": "2025-09-23", "description": "Consumer sentiment and economic outlook confidence", "event_id": "US_sentiment_2025-09-23", "forecast": "110.0", "frequency": "monthly", "impact": "low", "importance": "low", "is_tentative": false, "local_time": "10:00", "previous": "102.6", "source": "Bureau of Labor Statistics", "time": "2025-09-23T15:00:00.000Z", "title": "Consumer Confidence Index", "unit": "index", "volatility_expected": "low"}, {"actual": null, "category": "employment", "country": "US", "currency": "USD", "date": "2025-09-24", "description": "Weekly unemployment insurance claims", "event_id": "US_employment_2025-09-24", "forecast": "165K", "frequency": "weekly", "impact": "low", "importance": "low", "is_tentative": false, "local_time": "08:30", "previous": "207K", "source": "Bureau of Labor Statistics", "time": "2025-09-24T13:30:00.000Z", "title": "Initial Jobless Claims", "unit": "jobs", "volatility_expected": "low"}, {"actual": null, "category": "consumption", "country": "US", "currency": "USD", "date": "2025-09-26", "description": "Monthly consumer spending and retail sector activity", "event_id": "US_consumption_2025-09-26", "forecast": "-0.1%", "frequency": "monthly", "impact": "medium", "importance": "medium", "is_tentative": true, "local_time": "08:30", "previous": "1.3%", "source": "Bureau of Labor Statistics", "time": "2025-09-26T13:30:00.000Z", "title": "Retail Sales", "unit": "index", "volatility_expected": "medium"}, {"actual": null, "category": "employment", "country": "US", "currency": "USD", "date": "2025-09-26", "description": "Weekly unemployment insurance claims", "event_id": "US_employment_2025-09-26", "forecast": "171K", "frequency": "weekly", "impact": "low", "importance": "low", "is_tentative": false, "local_time": "08:30", "previous": "328K", "source": "Bureau of Labor Statistics", "time": "2025-09-26T13:30:00.000Z", "title": "Initial Jobless Claims", "unit": "jobs", "volatility_expected": "low"}, {"actual": null, "category": "employment", "country": "US", "currency": "USD", "date": "2025-09-29", "description": "Monthly employment report and unemployment rate", "event_id": "US_employment_2025-09-29", "forecast": "320K", "frequency": "monthly", "impact": "high", "importance": "high", "is_tentative": false, "local_time": "08:30", "previous": "290K", "source": "Bureau of Labor Statistics", "time": "2025-09-29T13:30:00.000Z", "title": "Non-Farm Payrolls", "unit": "jobs", "volatility_expected": "high"}, {"actual": "118.6", "category": "sentiment", "country": "US", "currency": "USD", "date": "2025-09-29", "description": "Consumer sentiment and economic outlook confidence", "event_id": "US_sentiment_2025-09-29", "forecast": "125.7", "frequency": "monthly", "impact": "low", "importance": "low", "is_tentative": false, "local_time": "10:00", "previous": "106.1", "source": "Bureau of Labor Statistics", "time": "2025-09-29T15:00:00.000Z", "title": "Consumer Confidence Index", "unit": "index", "volatility_expected": "low"}, {"actual": null, "category": "housing", "country": "US", "currency": "USD", "date": "2025-09-29", "description": "New residential construction starts", "event_id": "US_housing_2025-09-29", "forecast": "1426K", "frequency": "monthly", "impact": "low", "importance": "low", "is_tentative": false, "local_time": "08:30", "previous": "1362K", "source": "Bureau of Labor Statistics", "time": "2025-09-29T13:30:00.000Z", "title": "Housing Starts", "unit": "index", "volatility_expected": "low"}, {"actual": null, "category": "employment", "country": "US", "currency": "USD", "date": "2025-09-30", "description": "Weekly unemployment insurance claims", "event_id": "US_employment_2025-09-30", "forecast": "174K", "frequency": "weekly", "impact": "low", "importance": "low", "is_tentative": false, "local_time": "08:30", "previous": "176K", "source": "Bureau of Labor Statistics", "time": "2025-09-30T13:30:00.000Z", "title": "Initial Jobless Claims", "unit": "jobs", "volatility_expected": "low"}, {"actual": "0.9%", "category": "gdp", "country": "US", "currency": "USD", "date": "2025-10-01", "description": "Gross Domestic Product growth rate - quarterly preliminary", "event_id": "US_gdp_2025-10-01", "forecast": "1.7%", "frequency": "quarterly", "impact": "medium", "importance": "high", "is_tentative": false, "local_time": "08:30", "previous": "0.9%", "source": "Bureau of Labor Statistics", "time": "2025-10-01T13:30:00.000Z", "title": "GDP Quarterly Growth", "unit": "index", "volatility_expected": "high"}, {"actual": "0.6%", "category": "consumption", "country": "US", "currency": "USD", "date": "2025-10-01", "description": "Monthly consumer spending and retail sector activity", "event_id": "US_consumption_2025-10-01", "forecast": "-0.7%", "frequency": "monthly", "impact": "medium", "importance": "medium", "is_tentative": false, "local_time": "08:30", "previous": "0.7%", "source": "Bureau of Labor Statistics", "time": "2025-10-01T13:30:00.000Z", "title": "Retail Sales", "unit": "index", "volatility_expected": "medium"}, ‚Ä¶], "filters": {"country": "US", "days_ahead": 14, "importance": "all", "limit": 30}, "summary": {"by_category": {"consumption": 3, "employment": 6, "gdp": 1, "housing": 3, "sentiment": 3}, "by_importance": {"high": 2, "low": 11, "medium": 3}, "country": "US", "date_range": {"days_covered": 14, "from": "2025-09-23", "to": "2025-10-07"}, "next_24h": 1, "this_week": 7, "total_events": 16, "upcoming_high_impact": 1}}, "metadata": {"currency_focus": "USD", "data_source": "simulated_economic_data", "generated_at": "2025-09-23T16:31:57.633Z", "timezone": "UTC", "total_returned": 16}, "success": true, "timestamp": "2025-09-23T16:31:57.633Z"}

      168 |       expect(response.body.data).toHaveProperty("summary");
      169 |       expect(Array.isArray(response.body.data.economic_events)).toBe(true);
    > 170 |       expect(response.body).toHaveProperty("troubleshooting");
          |                             ^
      171 |     });
      172 |
      173 |     test("should handle country parameter in 501 response", async () => {

      at Object.toHaveProperty (tests/integration/routes/calendar.integration.test.js:170:29)

  ‚óè Calendar Routes ‚Ä∫ GET /api/calendar/economic ‚Ä∫ should handle country parameter in 501 response

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      176 |       );
      177 |
    > 178 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      179 |       expect(response.body.success).toBe(false);
      180 |       expect(response.body.country).toBe("US");
      181 |     });

      at Object.toContain (tests/integration/routes/calendar.integration.test.js:178:41)

  ‚óè Calendar Routes ‚Ä∫ GET /api/calendar/upcoming ‚Ä∫ should return 501 not implemented

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      186 |       const response = await request(app).get("/api/calendar/upcoming");
      187 |
    > 188 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      189 |       expect(response.body.success).toBe(false);
      190 |       expect(response.body.error).toBe(
      191 |         "Calendar upcoming events not implemented"

      at Object.toContain (tests/integration/routes/calendar.integration.test.js:188:41)

  ‚óè Calendar Routes ‚Ä∫ GET /api/calendar/upcoming ‚Ä∫ should handle days parameter in 501 response

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      197 |       const response = await request(app).get("/api/calendar/upcoming?days=7");
      198 |
    > 199 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      200 |       expect(response.body.success).toBe(false);
      201 |     });
      202 |

      at Object.toContain (tests/integration/routes/calendar.integration.test.js:199:41)

  ‚óè Calendar Routes ‚Ä∫ GET /api/calendar/upcoming ‚Ä∫ should handle multiple parameters in 501 response

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      206 |       );
      207 |
    > 208 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      209 |       expect(response.body.success).toBe(false);
      210 |       expect(response.body.symbol).toBe("AAPL");
      211 |     });

      at Object.toContain (tests/integration/routes/calendar.integration.test.js:208:41)

  ‚óè Calendar Routes ‚Ä∫ GET /api/calendar/earnings-metrics ‚Ä∫ should handle database dependencies gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      348 |
      349 |       // Earnings metrics requires earnings_history table
    > 350 |       expect(response.status).toBe(200);
          |                               ^
      351 |
      352 |       if (response.status === 200) {
      353 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/calendar.integration.test.js:350:31)

FAIL tests/integration/websocket/websocket.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.error
      Error: SyntaxError: Unexpected token 'n', "not json" is not valid JSON
          at JSON.parse (<anonymous>)
          at createStrictSyntaxError (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:169:10)
          at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:86:15)
          at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
          at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
          at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
          at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
          at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
          at IncomingMessage.emit (node:events:524:28)
          at endReadableNT (node:internal/streams/readable:1698:12)
          at processTicksAndRejections (node:internal/process/task_queues:82:21) {
        expose: true,
        statusCode: 400,
        status: 400,
        body: 'not json',
        type: 'entity.parse.failed'
      }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

    console.error
      Error: SyntaxError: Unexpected token '}', "{"incomplete": }" is not valid JSON
          at JSON.parse (<anonymous>)
          at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
          at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
          at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
          at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
          at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
          at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
          at IncomingMessage.emit (node:events:524:28)
          at endReadableNT (node:internal/streams/readable:1698:12)
          at processTicksAndRejections (node:internal/process/task_queues:82:21) {
        expose: true,
        statusCode: 400,
        status: 400,
        body: '{"incomplete": }',
        type: 'entity.parse.failed'
      }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè WebSocket Integration ‚Ä∫ WebSocket Connection Establishment ‚Ä∫ should handle WebSocket upgrade requests

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [404, 500]

      35 |
      36 |       // WebSocket upgrade might return specific status codes
    > 37 |       expect([404, 500]).toContain(response.status);
         |                          ^
      38 |
      39 |       if (response.status === 101) {
      40 |         // Successful WebSocket upgrade

      at Object.toContain (tests/integration/websocket/websocket.integration.test.js:37:26)

  ‚óè WebSocket Integration ‚Ä∫ WebSocket Connection Establishment ‚Ä∫ should validate WebSocket authentication requirements

    expect(received).toBe(expected) // Object.is equality

    Expected: 401
    Received: 404

      79 |           .set("Connection", "Upgrade");
      80 |
    > 81 |         expect(unauthResponse.status).toBe(401);
         |                                       ^
      82 |
      83 |         // Test with auth header
      84 |         const authResponse = await request(app)

      at Object.toBe (tests/integration/websocket/websocket.integration.test.js:81:39)

  ‚óè WebSocket Integration ‚Ä∫ WebSocket Message Handling ‚Ä∫ should handle invalid WebSocket message formats

    expect(received).toContain(expected) // indexOf

    Expected value: 404
    Received array: [400, 422]

      136 |           .send(message);
      137 |
    > 138 |         expect([400, 422]).toContain(response.status);
          |                            ^
      139 |
      140 |         if (response.status === 400 || response.status === 422) {
      141 |           expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/websocket/websocket.integration.test.js:138:28)

  ‚óè WebSocket Integration ‚Ä∫ WebSocket Error Scenarios ‚Ä∫ should handle connection errors gracefully

    expect(received).toContain(expected) // indexOf

    Expected value: 404
    Received array: [400, 422]

      258 |         const response = await requestBuilder;
      259 |
    > 260 |         expect([400, 422]).toContain(response.status);
          |                            ^
      261 |
      262 |         if ([400, 404].includes(response.status)) {
      263 |           // Error responses should be properly formatted

      at Object.toContain (tests/integration/websocket/websocket.integration.test.js:260:28)

  ‚óè WebSocket Integration ‚Ä∫ WebSocket Error Scenarios ‚Ä∫ should handle malformed WebSocket messages

    expect(received).toContain(expected) // indexOf

    Expected value: 404
    Received array: [400, 422]

      286 |           .send(message);
      287 |
    > 288 |         expect([400, 422]).toContain(response.status);
          |                            ^
      289 |
      290 |         if (response.status >= 400 && response.body) {
      291 |           expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/websocket/websocket.integration.test.js:288:28)

  ‚óè WebSocket Integration ‚Ä∫ WebSocket Performance and Scalability ‚Ä∫ should handle concurrent WebSocket requests

    expect(received).toBeGreaterThan(expected)

    Expected: > 7
    Received:   0

      370 |       // Most connections should succeed
      371 |       const successfulConnections = results.filter((r) => r.success);
    > 372 |       expect(successfulConnections.length).toBeGreaterThan(
          |                                            ^
      373 |         concurrentConnections * 0.7
      374 |       );
      375 |

      at Object.toBeGreaterThan (tests/integration/websocket/websocket.integration.test.js:372:44)

  ‚óè WebSocket Integration ‚Ä∫ WebSocket Integration with Authentication ‚Ä∫ should handle WebSocket authentication flow

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      512 |       results.forEach((result) => {
      513 |         if (result.status) {
    > 514 |           expect(result.status).toBe(200);
          |                                 ^
      515 |           expect(result.authenticated).toBe(true);
      516 |         }
      517 |       });

      at toBe (tests/integration/websocket/websocket.integration.test.js:514:33)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/websocket/websocket.integration.test.js:512:15)

::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/websocket HTTP/1.1" 200 411 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/websocket/portfolio HTTP/1.1" 404 129 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/subscribe/market HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/subscribe/portfolio HTTP/1.1" 404 139 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/subscribe/portfolio HTTP/1.1" 404 139 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/subscribe/portfolio HTTP/1.1" 404 139 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/subscribe/market HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/subscribe/market HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/subscribe/market HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/subscribe/market HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/subscribe/market HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/subscribe/market HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/subscribe/market HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/subscribe/market HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/subscribe/market HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/subscribe/market HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/subscribe/market HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/subscribe/market HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/websocket/invalid HTTP/1.1" 404 127 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 400 135 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 400 135 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/websocket/info HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/subscribe/portfolio HTTP/1.1" 404 139 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/session HTTP/1.1" 404 127 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/session/validate HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/session/refresh HTTP/1.1" 404 135 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/websocket/validate-message HTTP/1.1" 404 136 "-" "-"
FAIL tests/integration/routes/signals.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üìä Signals data requested (deployment refresh v3)

      at log (routes/signals.js:14:13)

    console.log
      üìä Signals requested for symbol: AAPL

      at log (routes/signals.js:514:13)

    console.log
      üìà Trending signals requested for daily timeframe

      at log (routes/signals.js:238:13)

    console.log
      üìà Buy signals requested for daily timeframe

      at log (routes/signals.js:104:13)

    console.log
      üìà Buy signals requested for daily timeframe

      at log (routes/signals.js:104:13)

    console.log
      üìâ Sell signals requested for daily timeframe

      at log (routes/signals.js:172:13)

    console.log
      üîî Signal alerts requested

      at log (routes/signals.js:262:13)

    console.error
      Database query error: {
        error: 'column "alert_id" does not exist',
        query: '\n' +
          '      SELECT\n' +
          '        alert_id,\n' +
          '        symbol,\n' +
          '        signal_type,\n' +
          '        min_strength,\n' +
          '        n...',
        params: 'no parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/signals.js:298:20

    console.error
      Signal alerts error: error: column "alert_id" does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/signals.js:298:20 {
        length: 176,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: 'Perhaps you meant to reference the column "signal_alerts.user_id".',
        position: '23',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3729',
        routine: 'errorMissingColumn'
      }

      305 |     });
      306 |   } catch (error) {
    > 307 |     console.error("Signal alerts error:", error);
          |             ^
      308 |
      309 |     // If table doesn't exist and we can't create it, return empty data instead of error
      310 |     if (error.message.includes('does not exist') || error.message.includes('alert_id')) {

      at error (routes/signals.js:307:13)

    console.log
      üîî Creating signal alert for AAPL

      at log (routes/signals.js:334:13)

    console.error
      Database query error: {
        error: 'column "alert_id" of relation "signal_alerts" does not exist',
        query: '\n' +
          '      INSERT INTO signal_alerts (\n' +
          '        alert_id, symbol, signal_type, min_strength,\n' +
          '        noti...',
        params: '7 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/signals.js:356:20

    console.error
      Create signal alert error: error: column "alert_id" of relation "signal_alerts" does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/signals.js:356:20 {
        length: 134,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '44',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_target.c',
        line: '1066',
        routine: 'checkInsertTargets'
      }

      373 |     });
      374 |   } catch (error) {
    > 375 |     console.error("Create signal alert error:", error);
          |             ^
      376 |     res.status(500).json({
      377 |       success: false,
      378 |       error: "Failed to create signal alert",

      at error (routes/signals.js:375:13)

    console.log
      üîî Creating signal alert for undefined

      at log (routes/signals.js:334:13)

    console.log
      üîô Signal backtest requested for AAPL

      at log (routes/signals.js:435:13)

    console.log
      üîô Signal backtest requested for all symbols

      at log (routes/signals.js:435:13)

    console.log
      üìä Signal performance requested

      at log (routes/signals.js:480:13)

    console.log
      üìä Signal performance requested

      at log (routes/signals.js:480:13)

    console.log
      üóëÔ∏è Deleting signal alert: 123

      at log (routes/signals.js:390:13)

    console.error
      Database query error: {
        error: 'column "alert_id" does not exist',
        query: 'DELETE FROM signal_alerts WHERE alert_id = $1 RETURNING *',
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/signals.js:403:20

    console.error
      Delete signal alert error: error: column "alert_id" does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/signals.js:403:20 {
        length: 176,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: 'Perhaps you meant to reference the column "signal_alerts.user_id".',
        position: '33',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3729',
        routine: 'errorMissingColumn'
      }

      418 |     });
      419 |   } catch (error) {
    > 420 |     console.error("Delete signal alert error:", error);
          |             ^
      421 |     res.status(500).json({
      422 |       success: false,
      423 |       error: "Failed to delete signal alert",

      at error (routes/signals.js:420:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Signals Routes ‚Ä∫ GET /api/signals ‚Ä∫ should return signals with proper AWS-compatible structure

    expect(received).toHaveProperty(path)

    Expected path: "summary"
    Received path: []

    Received value: {"data": [{"confidence": "0.75", "date": "2025-09-23T05:00:00.000Z", "price": 88.38, "signal_type": "BUY", "symbol": "STOCK0", "timeframe": "daily", "volume": "2921732"}, {"confidence": "0.75", "date": "2025-09-23T05:00:00.000Z", "price": 214.75, "signal_type": "BUY", "symbol": "STOCK1", "timeframe": "daily", "volume": "4728920"}, {"confidence": "0.75", "date": "2025-09-23T05:00:00.000Z", "price": 160.86, "signal_type": "BUY", "symbol": "STOCK10", "timeframe": "daily", "volume": "6717632"}, {"confidence": "0.75", "date": "2025-09-23T05:00:00.000Z", "price": 147.69, "signal_type": "BUY", "symbol": "STOCK11", "timeframe": "daily", "volume": "1424946"}, {"confidence": "0.75", "date": "2025-09-23T05:00:00.000Z", "price": 55.77, "signal_type": "BUY", "symbol": "STOCK12", "timeframe": "daily", "volume": "6740601"}, {"confidence": "0.75", "date": "2025-09-23T05:00:00.000Z", "price": 126.44, "signal_type": "BUY", "symbol": "STOCK13", "timeframe": "daily", "volume": "7872623"}, {"confidence": "0.75", "date": "2025-09-23T05:00:00.000Z", "price": 286.08, "signal_type": "BUY", "symbol": "STOCK14", "timeframe": "daily", "volume": "8326620"}, {"confidence": "0.75", "date": "2025-09-23T05:00:00.000Z", "price": 313.85, "signal_type": "BUY", "symbol": "STOCK15", "timeframe": "daily", "volume": "10393402"}, {"confidence": "0.75", "date": "2025-09-23T05:00:00.000Z", "price": 114.11, "signal_type": "BUY", "symbol": "STOCK16", "timeframe": "daily", "volume": "7295934"}, {"confidence": "0.75", "date": "2025-09-23T05:00:00.000Z", "price": 238.12, "signal_type": "BUY", "symbol": "STOCK17", "timeframe": "daily", "volume": "2898422"}, ‚Ä¶], "pagination": {"hasNext": true, "hasPrev": false, "limit": 25, "page": 1, "total": 18364, "totalPages": 735}, "success": true, "timeframe": "daily", "timestamp": "2025-09-23T16:31:58.693Z"}

      25 |       expect(response.body).toHaveProperty("data");
      26 |       expect(Array.isArray(response.body.data)).toBe(true);
    > 27 |       expect(response.body).toHaveProperty("summary");
         |                             ^
      28 |       expect(response.body.summary).toHaveProperty("buy_signals");
      29 |       expect(response.body.summary).toHaveProperty("sell_signals");
      30 |

      at Object.toHaveProperty (tests/integration/routes/signals.integration.test.js:27:29)

  ‚óè Signals Routes ‚Ä∫ GET /api/signals/buy ‚Ä∫ should return buy signals with AWS-compatible structure

    expect(received).toHaveProperty(path)

    Expected path: "current_price"
    Received path: []

    Received value: {"confidence": "0.80", "date": "2025-09-22T05:00:00.000Z", "price": 89.53, "signal_type": "BUY", "symbol": "STOCK0", "timeframe": "daily", "volume": "10899765"}

      78 |         expect(signal).toHaveProperty("signal_type");
      79 |         expect(signal).toHaveProperty("date");
    > 80 |         expect(signal).toHaveProperty("current_price");
         |                        ^
      81 |       }
      82 |     });
      83 |

      at Object.toHaveProperty (tests/integration/routes/signals.integration.test.js:80:24)

  ‚óè Signals Routes ‚Ä∫ GET /api/signals/sell ‚Ä∫ should return sell signals with AWS-compatible structure

    expect(received).toHaveProperty(path)

    Expected path: "signal"
    Received path: []

    Received value: {"confidence": "0.70", "date": "2025-09-23T05:00:00.000Z", "price": 88.38, "signal_type": "SELL", "symbol": "STOCK0", "timeframe": "daily", "volume": "2921732"}

      105 |         const signal = response.body.data[0];
      106 |         expect(signal).toHaveProperty("symbol");
    > 107 |         expect(signal).toHaveProperty("signal");
          |                        ^
      108 |         expect(signal).toHaveProperty("signal_date");
      109 |         expect(signal).toHaveProperty("confidence");
      110 |         expect(signal).toHaveProperty("entry_price"); // from price_daily JOIN

      at Object.toHaveProperty (tests/integration/routes/signals.integration.test.js:107:24)

  ‚óè Signals Routes ‚Ä∫ POST /api/signals/alerts ‚Ä∫ should create signal alert successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: 201
    Received: 500

      138 |         .send(alertData);
      139 |
    > 140 |       expect(response.status).toBe(201);
          |                               ^
      141 |       expect(response.body.success).toBe(true);
      142 |       expect(response.body).toHaveProperty("data");
      143 |       expect(response.body.data).toHaveProperty("alert_id");

      at Object.toBe (tests/integration/routes/signals.integration.test.js:140:31)

  ‚óè Signals Routes ‚Ä∫ DELETE /api/signals/alerts/:alertId ‚Ä∫ should delete alert successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      197 |       const response = await request(app).delete("/api/signals/alerts/123");
      198 |
    > 199 |       expect(response.status).toBe(200);
          |                               ^
      200 |       expect(response.body.success).toBe(true);
      201 |       expect(response.body).toHaveProperty("message");
      202 |     });

      at Object.toBe (tests/integration/routes/signals.integration.test.js:199:31)

::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/signals HTTP/1.1" 200 3897 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/signals/AAPL HTTP/1.1" 200 604 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/signals/trending HTTP/1.1" 200 112 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/signals/buy HTTP/1.1" 200 3917 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/signals/buy?min_strength=0.8 HTTP/1.1" 200 3917 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/signals/sell HTTP/1.1" 200 3942 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/signals/alerts HTTP/1.1" 200 142 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/signals/alerts HTTP/1.1" 500 173 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "POST /api/signals/alerts HTTP/1.1" 400 85 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/signals/backtest?symbol=AAPL&start_date=2023-01-01 HTTP/1.1" 200 231 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/signals/backtest HTTP/1.1" 400 126 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/signals/performance HTTP/1.1" 200 115 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "GET /api/signals/performance?timeframe=1M HTTP/1.1" 200 115 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:58 +0000] "DELETE /api/signals/alerts/123 HTTP/1.1" 500 143 "-" "-"
FAIL tests/integration/routes/risk.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      Processing request: GET /risk

      at log (index.js:403:11)

    console.log
      Initializing database connection...

      at log (index.js:362:13)

    console.log
      Database connection established successfully

      at log (index.js:388:17)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /risk

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /risk

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /risk/analysis

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      ‚ö†Ô∏è Risk analysis requested for user: dev-user-bypass, period: 1y

      at log (routes/risk.js:39:13)

    console.error
      Database query error: {
        error: 'column s.short_name does not exist',
        query: '\n' +
          '      SELECT\n' +
          '        h.symbol, h.quantity, h.average_cost, h.current_price,\n' +
          '        s.sector, s.sho...',
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/risk.js:56:28

    console.error
      Risk analysis error: error: column s.short_name does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/risk.js:56:28 {
        length: 110,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '96',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      226 |     });
      227 |   } catch (error) {
    > 228 |     console.error("Risk analysis error:", error);
          |             ^
      229 |     res.status(500).json({
      230 |       success: false,
      231 |       error: "Failed to perform risk analysis",

      at error (routes/risk.js:228:13)

    console.log
      Processing request: GET /risk/analysis

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      ‚ö†Ô∏è Risk analysis requested for user: dev-user-bypass, period: 1m

      at log (routes/risk.js:39:13)

    console.error
      Database query error: {
        error: 'column s.short_name does not exist',
        query: '\n' +
          '      SELECT\n' +
          '        h.symbol, h.quantity, h.average_cost, h.current_price,\n' +
          '        s.sector, s.sho...',
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/risk.js:56:28

    console.error
      Risk analysis error: error: column s.short_name does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/risk.js:56:28 {
        length: 110,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '96',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      226 |     });
      227 |   } catch (error) {
    > 228 |     console.error("Risk analysis error:", error);
          |             ^
      229 |     res.status(500).json({
      230 |       success: false,
      231 |       error: "Failed to perform risk analysis",

      at error (routes/risk.js:228:13)

    console.log
      Processing request: GET /risk/analysis

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      ‚ö†Ô∏è Risk analysis requested for user: dev-user-bypass, period: 1m

      at log (routes/risk.js:39:13)

    console.error
      Database query error: {
        error: 'column s.short_name does not exist',
        query: '\n' +
          '      SELECT\n' +
          '        h.symbol, h.quantity, h.average_cost, h.current_price,\n' +
          '        s.sector, s.sho...',
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/risk.js:56:28

    console.error
      Risk analysis error: error: column s.short_name does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/risk.js:56:28 {
        length: 110,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '96',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      226 |     });
      227 |   } catch (error) {
    > 228 |     console.error("Risk analysis error:", error);
          |             ^
      229 |     res.status(500).json({
      230 |       success: false,
      231 |       error: "Failed to perform risk analysis",

      at error (routes/risk.js:228:13)

    console.log
      Processing request: GET /risk/health

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /risk/nonexistent

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Processing request: GET /risk

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /risk

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /risk

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /risk/analysis

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      ‚ö†Ô∏è Risk analysis requested for user: dev-user-bypass, period: <script>alert('xss')</script>

      at log (routes/risk.js:39:13)

    console.error
      Database query error: {
        error: 'column s.short_name does not exist',
        query: '\n' +
          '      SELECT\n' +
          '        h.symbol, h.quantity, h.average_cost, h.current_price,\n' +
          '        s.sector, s.sho...',
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/risk.js:56:28

    console.error
      Risk analysis error: error: column s.short_name does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/risk.js:56:28 {
        length: 110,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '96',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      226 |     });
      227 |   } catch (error) {
    > 228 |     console.error("Risk analysis error:", error);
          |             ^
      229 |     res.status(500).json({
      230 |       success: false,
      231 |       error: "Failed to perform risk analysis",

      at error (routes/risk.js:228:13)

    console.log
      Processing request: GET /risk/analysis

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      ‚ö†Ô∏è Risk analysis requested for user: dev-user-bypass, period: '; DROP TABLE portfolio_holdings; --

      at log (routes/risk.js:39:13)

    console.error
      Database query error: {
        error: 'column s.short_name does not exist',
        query: '\n' +
          '      SELECT\n' +
          '        h.symbol, h.quantity, h.average_cost, h.current_price,\n' +
          '        s.sector, s.sho...',
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/risk.js:56:28

    console.error
      Risk analysis error: error: column s.short_name does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/risk.js:56:28 {
        length: 110,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '96',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      226 |     });
      227 |   } catch (error) {
    > 228 |     console.error("Risk analysis error:", error);
          |             ^
      229 |     res.status(500).json({
      230 |       success: false,
      231 |       error: "Failed to perform risk analysis",

      at error (routes/risk.js:228:13)

    console.log
      Processing request: GET /risk

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /risk

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /risk

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /risk

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Risk Routes Integration ‚Ä∫ GET /risk/analysis ‚Ä∫ should handle risk analysis requests

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      60 |         });
      61 |
    > 62 |       expect(response.status).toBe(200);
         |                               ^
      63 |       expect(response.body).toBeDefined();
      64 |       expect(response.body).toHaveProperty("success", true);
      65 |     });

      at Object.toBe (tests/integration/routes/risk.integration.test.js:62:31)

  ‚óè Risk Routes Integration ‚Ä∫ GET /risk/analysis ‚Ä∫ should handle different time periods

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      71 |         .query({ period: "1m" });
      72 |
    > 73 |       expect(response.status).toBe(200);
         |                               ^
      74 |       expect(response.body).toBeDefined();
      75 |       expect(response.body).toHaveProperty("success", true);
      76 |     });

      at Object.toBe (tests/integration/routes/risk.integration.test.js:73:31)

  ‚óè Risk Routes Integration ‚Ä∫ GET /risk/analysis ‚Ä∫ should handle missing query parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      81 |         .set("Authorization", "Bearer dev-bypass-token");
      82 |
    > 83 |       expect(response.status).toBe(200);
         |                               ^
      84 |       expect(response.body).toBeDefined();
      85 |       expect(response.body).toHaveProperty("success", true);
      86 |     });

      at Object.toBe (tests/integration/routes/risk.integration.test.js:83:31)

  ‚óè Risk Routes Integration ‚Ä∫ Security tests ‚Ä∫ should handle XSS attempts in query parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      144 |         });
      145 |
    > 146 |       expect(response.status).toBe(200);
          |                               ^
      147 |       expect(response.body).toBeDefined();
      148 |     });
      149 |

      at Object.toBe (tests/integration/routes/risk.integration.test.js:146:31)

  ‚óè Risk Routes Integration ‚Ä∫ Security tests ‚Ä∫ should handle malicious query parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      157 |         });
      158 |
    > 159 |       expect(response.status).toBe(200);
          |                               ^
      160 |       expect(response.body).toBeDefined();
      161 |     });
      162 |   });

      at Object.toBe (tests/integration/routes/risk.integration.test.js:159:31)

::ffff:127.0.0.1 - - [23/Sep/2025:16:31:59 +0000] "GET /risk HTTP/1.1" 200 125 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:59 +0000] "GET /risk?type=portfolio HTTP/1.1" 200 125 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:59 +0000] "GET /risk?symbol=AAPL HTTP/1.1" 200 125 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:59 +0000] "GET /risk/analysis?period=1y&confidence_level=0.95 HTTP/1.1" 500 106 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:59 +0000] "GET /risk/analysis?period=1m HTTP/1.1" 500 106 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:59 +0000] "GET /risk/analysis HTTP/1.1" 500 106 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:59 +0000] "GET /risk/health HTTP/1.1" 200 134 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:59 +0000] "GET /risk/nonexistent HTTP/1.1" 404 614 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:59 +0000] "GET /risk HTTP/1.1" 200 125 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:59 +0000] "GET /risk HTTP/1.1" 200 125 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:59 +0000] "GET /risk?symbol=%27%3B%20DROP%20TABLE%20trading_alerts%3B%20--&type=portfolio%27%3B%20DELETE%20FROM%20risk_metrics%3B%20-- HTTP/1.1" 200 125 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:59 +0000] "GET /risk/analysis?period=%3Cscript%3Ealert%28%27xss%27%29%3C%2Fscript%3E&confidence_level=%3Cimg%20src%3Dx%20onerror%3Dalert%28%27xss%27%29%3E HTTP/1.1" 500 106 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:59 +0000] "GET /risk/analysis?period=%27%3B%20DROP%20TABLE%20portfolio_holdings%3B%20--&confidence_level=999999 HTTP/1.1" 500 106 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:59 +0000] "GET /risk HTTP/1.1" 200 125 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:59 +0000] "GET /risk HTTP/1.1" 200 125 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:59 +0000] "GET /risk HTTP/1.1" 200 125 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:59 +0000] "GET /risk HTTP/1.1" 200 125 "-" "-"
FAIL tests/integration/routes/earnings.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      Processing request: GET /api/earnings

      at log (index.js:403:11)

    console.log
      Initializing database connection...

      at log (index.js:362:13)

    console.log
      Database connection established successfully

      at log (index.js:388:17)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìà Earnings data requested

      at log (routes/earnings.js:14:13)

    console.log
      Processing request: GET /api/earnings/AAPL

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìà Earnings details requested for symbol: AAPL

      at log (routes/earnings.js:360:13)

    console.log
      Processing request: GET /api/earnings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìà Earnings data requested

      at log (routes/earnings.js:14:13)

    console.log
      Processing request: GET /api/calendar/earnings

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      Processing request: GET /api/calendar/earnings-history

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/calendar/earnings-estimates

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/earnings/INVALID_SYMBOL

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìà Earnings details requested for symbol: INVALID_SYMBOL

      at log (routes/earnings.js:360:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Earnings Data Integration ‚Ä∫ Earnings Calendar (Delegated) ‚Ä∫ should delegate to calendar earnings endpoint

    expect(received).toHaveProperty(path)

    Expected path: "earnings"
    Received path: []

    Received value: {"data": [{"eps_actual": "2.18", "eps_difference": null, "eps_estimate": "2.10", "last_updated": "2025-09-23T16:31:34.900Z", "quarter": "2024-01-01T06:00:00.000Z", "report_date": "2024-01-01T06:00:00.000Z", "surprise_percent": "3.8", "symbol": "AAPL"}, {"eps_actual": "1.64", "eps_difference": null, "eps_estimate": "1.59", "last_updated": "2025-09-23T16:31:34.900Z", "quarter": "2024-01-01T06:00:00.000Z", "report_date": "2024-01-01T06:00:00.000Z", "surprise_percent": "3.1", "symbol": "GOOGL"}, {"eps_actual": "2.93", "eps_difference": null, "eps_estimate": "2.85", "last_updated": "2025-09-23T16:31:34.900Z", "quarter": "2024-01-01T06:00:00.000Z", "report_date": "2024-01-01T06:00:00.000Z", "surprise_percent": "2.8", "symbol": "MSFT"}, {"eps_actual": "0.71", "eps_difference": null, "eps_estimate": "0.73", "last_updated": "2025-09-23T16:31:34.900Z", "quarter": "2024-01-01T06:00:00.000Z", "report_date": "2024-01-01T06:00:00.000Z", "surprise_percent": "-2.7", "symbol": "TSLA"}, {"eps_actual": "1.89", "eps_difference": null, "eps_estimate": "1.85", "last_updated": "2025-09-23T16:31:34.900Z", "quarter": "2023-10-01T05:00:00.000Z", "report_date": "2023-10-01T05:00:00.000Z", "surprise_percent": "2.2", "symbol": "AAPL"}, {"eps_actual": "2.69", "eps_difference": null, "eps_estimate": "2.65", "last_updated": "2025-09-23T16:31:34.900Z", "quarter": "2023-10-01T05:00:00.000Z", "report_date": "2023-10-01T05:00:00.000Z", "surprise_percent": "1.5", "symbol": "MSFT"}], "pagination": {"hasMore": false, "limit": 50, "page": 1, "total": 6}, "success": true, "timestamp": "2025-09-23T16:31:59.755Z"}

      17 |
      18 |       if (response.status === 200) {
    > 19 |         expect(response.body).toHaveProperty("earnings");
         |                               ^
      20 |         expect(Array.isArray(response.body.earnings)).toBe(true);
      21 |       }
      22 |     });

      at Object.toHaveProperty (tests/integration/routes/earnings.integration.test.js:19:31)

  ‚óè Earnings Data Integration ‚Ä∫ Earnings Calendar (Delegated) ‚Ä∫ should delegate symbol-specific requests to calendar

    expect(received).toHaveProperty(path)

    Expected path: "earnings"
    Received path: []

    Received value: {"count": 2, "data": [{"eps_actual": "2.18", "eps_difference": null, "eps_estimate": "2.10", "last_updated": "2025-09-23T16:31:34.900Z", "quarter": "2024-01-01T06:00:00.000Z", "report_date": "2024-01-01T06:00:00.000Z", "surprise_percent": "3.8", "symbol": "AAPL"}, {"eps_actual": "1.89", "eps_difference": null, "eps_estimate": "1.85", "last_updated": "2025-09-23T16:31:34.900Z", "quarter": "2023-10-01T05:00:00.000Z", "report_date": "2023-10-01T05:00:00.000Z", "surprise_percent": "2.2", "symbol": "AAPL"}], "success": true, "symbol": "AAPL", "timestamp": "2025-09-23T16:31:59.760Z"}

      28 |
      29 |       if (response.status === 200) {
    > 30 |         expect(response.body).toHaveProperty("earnings");
         |                               ^
      31 |         expect(Array.isArray(response.body.earnings)).toBe(true);
      32 |       }
      33 |     });

      at Object.toHaveProperty (tests/integration/routes/earnings.integration.test.js:30:31)

  ‚óè Earnings Data Integration ‚Ä∫ Earnings Calendar (Delegated) ‚Ä∫ should handle query parameters for delegation

    expect(received).toHaveProperty(path)

    Expected path: "earnings"
    Received path: []

    Received value: {"data": [{"eps_actual": "2.18", "eps_difference": null, "eps_estimate": "2.10", "last_updated": "2025-09-23T16:31:34.900Z", "quarter": "2024-01-01T06:00:00.000Z", "report_date": "2024-01-01T06:00:00.000Z", "surprise_percent": "3.8", "symbol": "AAPL"}, {"eps_actual": "1.64", "eps_difference": null, "eps_estimate": "1.59", "last_updated": "2025-09-23T16:31:34.900Z", "quarter": "2024-01-01T06:00:00.000Z", "report_date": "2024-01-01T06:00:00.000Z", "surprise_percent": "3.1", "symbol": "GOOGL"}, {"eps_actual": "2.93", "eps_difference": null, "eps_estimate": "2.85", "last_updated": "2025-09-23T16:31:34.900Z", "quarter": "2024-01-01T06:00:00.000Z", "report_date": "2024-01-01T06:00:00.000Z", "surprise_percent": "2.8", "symbol": "MSFT"}, {"eps_actual": "0.71", "eps_difference": null, "eps_estimate": "0.73", "last_updated": "2025-09-23T16:31:34.900Z", "quarter": "2024-01-01T06:00:00.000Z", "report_date": "2024-01-01T06:00:00.000Z", "surprise_percent": "-2.7", "symbol": "TSLA"}, {"eps_actual": "1.89", "eps_difference": null, "eps_estimate": "1.85", "last_updated": "2025-09-23T16:31:34.900Z", "quarter": "2023-10-01T05:00:00.000Z", "report_date": "2023-10-01T05:00:00.000Z", "surprise_percent": "2.2", "symbol": "AAPL"}], "pagination": {"hasMore": true, "limit": 5, "page": 1, "total": 5}, "success": true, "timestamp": "2025-09-23T16:31:59.763Z"}

      41 |
      42 |       if (response.status === 200) {
    > 43 |         expect(response.body).toHaveProperty("earnings");
         |                               ^
      44 |         expect(Array.isArray(response.body.earnings)).toBe(true);
      45 |         // Should respect limit parameter when delegating
      46 |         expect(response.body.earnings.length).toBeLessThanOrEqual(5);

      at Object.toHaveProperty (tests/integration/routes/earnings.integration.test.js:43:31)

  ‚óè Earnings Data Integration ‚Ä∫ Direct Calendar Earnings Access ‚Ä∫ should access earnings via calendar route directly

    expect(received).toHaveProperty(path)

    Expected path: "earnings"
    Received path: []

    Received value: {"data": {"earnings": [], "grouped_by_date": {}, "summary": {"completed_reports": 0, "message": "No earnings data found for the specified criteria", "sectors_represented": 0, "total_earnings": 0, "upcoming_reports": 0}}, "success": true, "timestamp": "2025-09-23T16:31:59.769Z"}

      56 |
      57 |       if (response.status === 200) {
    > 58 |         expect(response.body).toHaveProperty("earnings");
         |                               ^
      59 |         expect(Array.isArray(response.body.earnings)).toBe(true);
      60 |       }
      61 |     });

      at Object.toHaveProperty (tests/integration/routes/earnings.integration.test.js:58:31)

::ffff:127.0.0.1 - - [23/Sep/2025:16:31:59 +0000] "GET /api/earnings HTTP/1.1" 200 1489 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:59 +0000] "GET /api/earnings/AAPL HTTP/1.1" 200 544 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:59 +0000] "GET /api/earnings?period=upcoming&limit=5 HTTP/1.1" 200 1260 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:59 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:59 +0000] "GET /api/calendar/earnings-history HTTP/1.1" 200 2045 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:59 +0000] "GET /api/calendar/earnings-estimates HTTP/1.1" 200 1442 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:31:59 +0000] "GET /api/earnings/INVALID_SYMBOL HTTP/1.1" 404 126 "-" "-"
FAIL tests/integration/middleware/responseFormatter-middleware.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 6ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      Calendar events endpoint called with params: {}

      at log (routes/calendar.js:371:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 4ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 5ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: NONEXISTENT, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 3ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîî Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:38:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Response Formatter Middleware Integration ‚Ä∫ Error Response Formatting ‚Ä∫ should format error responses with consistent structure

    expect(received).toBe(expected) // Object.is equality

    Expected: 404
    Received: 401

      109 |         const response = await request(app).get(scenario.endpoint);
      110 |
    > 111 |         expect(response.status).toBe(scenario.expectedStatus);
          |                                 ^
      112 |         expect(response.headers["content-type"]).toMatch(/application\/json/);
      113 |
      114 |         // Error response should have error information

      at Object.toBe (tests/integration/middleware/responseFormatter-middleware.integration.test.js:111:33)

::ffff:127.0.0.1 - - [23/Sep/2025:16:32:00 +0000] "GET /api/health HTTP/1.1" 200 501 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:00 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:00 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:00 +0000] "GET /api/calendar/events HTTP/1.1" 200 223 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:00 +0000] "GET /api/calendar/earnings-estimates HTTP/1.1" 200 1442 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:00 +0000] "GET /api/calendar/earnings-history HTTP/1.1" 200 2045 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:00 +0000] "GET /api/nonexistent HTTP/1.1" 404 121 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:00 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:00 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:00 +0000] "GET /api/health HTTP/1.1" 200 503 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:00 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:00 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:00 +0000] "GET /api/nonexistent HTTP/1.1" 404 121 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:00 +0000] "GET /api/health HTTP/1.1" 200 504 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:00 +0000] "POST /api/health HTTP/1.1" 404 116 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:00 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:00 +0000] "POST /api/calendar/earnings HTTP/1.1" 404 127 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:00 +0000] "GET /api/health HTTP/1.1" 200 504 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:00 +0000] "GET /api/health HTTP/1.1" 200 504 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:00 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:00 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:00 +0000] "GET /api/calendar/earnings?symbol=NONEXISTENT&start_date=2050-01-01&end_date=2050-01-02 HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:00 +0000] "GET /api/health HTTP/1.1" 200 503 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:00 +0000] "GET /api/health HTTP/1.1" 200 504 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:00 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:00 +0000] "GET /api/calendar/health HTTP/1.1" 200 157 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:00 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:00 +0000] "GET /api/health HTTP/1.1" 200 504 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:00 +0000] "GET /api/portfolio HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:00 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:00 +0000] "GET /api/alerts/active HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:00 +0000] "GET /api/alerts/active HTTP/1.1" 200 1509 "-" "-"
FAIL tests/unit/routes/alerts.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully (test mode)

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:100:17)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîî Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:38:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîî Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:38:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîî Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:38:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîî Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:38:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîî Active alerts requested for user: dev-user-bypass, status: triggered

      at log (routes/alerts.js:38:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìç Alert distance requested for AAPL by user: dev-user-bypass

      at log (routes/alerts.js:1047:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìç Alert distance requested for INVALID by user: dev-user-bypass

      at log (routes/alerts.js:1047:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîî Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:38:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üôà Alert dismiss requested for 1 by user: dev-user-bypass

      at log (routes/alerts.js:1087:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üôà Alert dismiss requested for invalid-id by user: dev-user-bypass

      at log (routes/alerts.js:1087:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üÜï New alert creation requested by user: dev-user-bypass for AAPL

      at log (routes/alerts.js:460:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üí∞ Price alerts requested for AAPL by user: dev-user-bypass, status: all

      at log (routes/alerts.js:1128:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üí∞ Price alerts requested for AAPL by user: dev-user-bypass, status: active

      at log (routes/alerts.js:1128:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üóëÔ∏è Deleting alert 1 for user: dev-user-bypass

      at log (routes/alerts.js:2340:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üóëÔ∏è Deleting alert 99999 for user: dev-user-bypass

      at log (routes/alerts.js:2340:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Alert history requested for user: dev-user-bypass

      at log (routes/alerts.js:1247:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Alert history requested for user: dev-user-bypass

      at log (routes/alerts.js:1247:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Alert history requested for user: dev-user-bypass

      at log (routes/alerts.js:1247:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      ‚öôÔ∏è Alert settings requested for user: test-user-123

      at log (routes/alerts.js:781:13)

    console.log
      No user-specific alert settings found, returning defaults

      at log (routes/alerts.js:803:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Alert settings update requested for user: dev-user-bypass

      at log (routes/alerts.js:1184:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Alert settings update requested for user: dev-user-bypass

      at log (routes/alerts.js:1184:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîî Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:38:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üí∞ Price alerts requested for INVALID_SYMBOL_123! by user: dev-user-bypass, status: all

      at log (routes/alerts.js:1128:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ GET /alerts/ ‚Ä∫ should return alerts info

    expected 200 "OK", got 401 "Unauthorized"

      30 |   describe("GET /alerts/", () => {
      31 |     test("should return alerts info", async () => {
    > 32 |       const response = await request(app).get("/alerts/").expect(200);
         |                                                           ^
      33 |
      34 |       expect(response.body).toHaveProperty("success");
      35 |       expect(response.body).toHaveProperty("status");

      at Object.expect (tests/unit/routes/alerts.test.js:32:59)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ GET /alerts/active ‚Ä∫ should return active alerts with proper structure

    expect(received).toHaveProperty(path)

    Expected path: "by_status"
    Received path: []

    Received value: {"active_alerts": 2, "alert_categories": {"price_alerts": 0, "risk_alerts": 2}, "severity_breakdown": {"high": 0, "low": 1, "medium": 1}, "total_alerts": 2, "triggered_alerts": 0, "urgent_alerts": 0}

      52 |         // Check summary structure
      53 |         expect(response.body.data.summary).toHaveProperty("total_alerts");
    > 54 |         expect(response.body.data.summary).toHaveProperty("by_status");
         |                                            ^
      55 |         expect(response.body.data.summary).toHaveProperty("by_type");
      56 |         expect(response.body.data.summary).toHaveProperty("by_priority");
      57 |       } else {

      at Object.toHaveProperty (tests/unit/routes/alerts.test.js:54:44)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ GET /alerts/active ‚Ä∫ should handle priority filter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      93 |               alert.priority === "high" || alert.priority === "critical"
      94 |           )
    > 95 |         ).toBe(true);
         |           ^
      96 |       }
      97 |     });
      98 |

      at Object.toBe (tests/unit/routes/alerts.test.js:95:11)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ GET /alerts/distance/:symbol ‚Ä∫ should return distance-based alert analysis

    expect(received).toHaveProperty(path)

    Expected path: "alerts"
    Received path: []

    Received value: {"active_alerts_count": 3, "current_price": 155.23, "distance_to_alerts": {"nearest_resistance": 158.75, "nearest_support": 145.5, "price_alerts": [{"distance": 5.23, "level": 150, "type": "price_above"}, {"distance": -10.23, "level": 140, "type": "price_below"}]}, "symbol": "AAPL"}

      123 |         expect(response.body.data).toHaveProperty("symbol", "AAPL");
      124 |         expect(response.body.data).toHaveProperty("current_price");
    > 125 |         expect(response.body.data).toHaveProperty("alerts");
          |                                    ^
      126 |         expect(response.body.data).toHaveProperty("summary");
      127 |
      128 |         // Check alert distance calculations

      at Object.toHaveProperty (tests/unit/routes/alerts.test.js:125:36)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ POST /alerts/volume ‚Ä∫ should create volume alert

    expect(received).toHaveProperty(path, value)

    Expected path: "symbol"
    Received path: []

    Expected value: "TSLA"
    Received value: {"alert": {"condition": "greater_than", "created_at": "2025-09-23T16:32:00.740Z", "id": 1660, "status": "active", "symbol": "TSLA", "threshold_multiplier": "2.50"}, "message": "Volume alert created successfully"}

      331 |       if (response.status === 201) {
      332 |         expect(response.body.success).toBe(true);
    > 333 |         expect(response.body.data).toHaveProperty("symbol", "TSLA");
          |                                    ^
      334 |         expect(response.body.data).toHaveProperty("threshold_multiplier", 2.5);
      335 |       } else {
      336 |         expect([400, 401]).toContain(response.status);

      at Object.toHaveProperty (tests/unit/routes/alerts.test.js:333:36)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ POST /alerts/volume ‚Ä∫ should validate threshold multiplier range

    expect(received).toContain(expected) // indexOf

    Expected substring: "threshold"
    Received string:    "Threshold multiplier must be between 1.1 and 10.0"

      352 |
      353 |       expect(response.body.success).toBe(false);
    > 354 |       expect(response.body.error).toContain("threshold");
          |                                   ^
      355 |     });
      356 |   });
      357 |

      at Object.toContain (tests/unit/routes/alerts.test.js:354:35)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ GET /alerts/volume/analysis/:symbol ‚Ä∫ should return volume analysis for symbol

    expect(received).toHaveProperty(path)

    Expected path: "current_volume"
    Received path: []

    Received value: {"current_analysis": null, "historical_data": [], "summary": {"has_unusual_volume": false, "volume_trend": "unknown"}, "symbol": "TSLA"}

      366 |       expect(response.body).toHaveProperty("data");
      367 |       expect(response.body.data).toHaveProperty("symbol", "TSLA");
    > 368 |       expect(response.body.data).toHaveProperty("current_volume");
          |                                  ^
      369 |       expect(response.body.data).toHaveProperty("average_volume");
      370 |       expect(response.body.data).toHaveProperty("volume_ratio");
      371 |       expect(response.body.data).toHaveProperty("alerts_triggered");

      at Object.toHaveProperty (tests/unit/routes/alerts.test.js:368:34)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ GET /alerts/technical/status/:symbol ‚Ä∫ should return technical alert status

    expect(received).toHaveProperty(path)

    Expected path: "current_indicators"
    Received path: []

    Received value: {"summary": {"active_alerts": 0, "total_alerts": 0, "triggered_alerts": 0}, "symbol": "AAPL", "technical_alerts": []}

      467 |       expect(response.body.data).toHaveProperty("symbol", "AAPL");
      468 |       expect(response.body.data).toHaveProperty("technical_alerts");
    > 469 |       expect(response.body.data).toHaveProperty("current_indicators");
          |                                  ^
      470 |     });
      471 |
      472 |     test("should filter by indicator type", async () => {

      at Object.toHaveProperty (tests/unit/routes/alerts.test.js:469:34)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ POST /alerts/news ‚Ä∫ should create news sentiment alert

    expect(received).toHaveProperty(path, value)

    Expected path: "symbol"
    Received path: []

    Expected value: "NFLX"
    Received value: {"alert": {"created_at": "2025-09-23T16:32:00.763Z", "id": 291, "sentiment_threshold": "-0.5000", "sentiment_type": "negative", "sources": [], "status": "active", "symbol": "NFLX"}, "message": "News sentiment alert created successfully"}

      507 |       if (response.status === 201) {
      508 |         expect(response.body.success).toBe(true);
    > 509 |         expect(response.body.data).toHaveProperty("symbol", "NFLX");
          |                                    ^
      510 |         expect(response.body.data).toHaveProperty("sentiment_threshold", -0.5);
      511 |       } else {
      512 |         expect([400, 401]).toContain(response.status);

      at Object.toHaveProperty (tests/unit/routes/alerts.test.js:509:36)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ POST /alerts/news ‚Ä∫ should validate news sources

    expected 400 "Bad Request", got 201 "Created"

      526 |         .set("Authorization", "Bearer dev-bypass-token")
      527 |         .send(invalidSourceData)
    > 528 |         .expect(400);
          |          ^
      529 |
      530 |       expect(response.body.success).toBe(false);
      531 |       expect(response.body.error).toContain("source");

      at Object.expect (tests/unit/routes/alerts.test.js:528:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ GET /alerts/news/recent/:symbol ‚Ä∫ should return recent news alerts

    expect(received).toHaveProperty(path)

    Expected path: "news_alerts"
    Received path: []

    Received value: {"recent_alerts": [], "summary": {"total_alerts": 0, "unique_sources": []}, "symbol": "AAPL", "time_period": "24 hours"}

      543 |       expect(response.body).toHaveProperty("data");
      544 |       expect(response.body.data).toHaveProperty("symbol", "AAPL");
    > 545 |       expect(response.body.data).toHaveProperty("news_alerts");
          |                                  ^
      546 |       expect(response.body.data).toHaveProperty("sentiment_summary");
      547 |     });
      548 |

      at Object.toHaveProperty (tests/unit/routes/alerts.test.js:545:34)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ GET /alerts/portfolio/status ‚Ä∫ should return portfolio alert status

    expect(received).toHaveProperty(path)

    Expected path: "portfolio_metrics"
    Received path: []

    Received value: {"portfolio_alerts": [], "summary": {"active_alerts": 0, "total_alerts": 0, "triggered_alerts": 0}, "triggered_summary": []}

      620 |       expect(response.body).toHaveProperty("data");
      621 |       expect(response.body.data).toHaveProperty("portfolio_alerts");
    > 622 |       expect(response.body.data).toHaveProperty("portfolio_metrics");
          |                                  ^
      623 |       expect(response.body.data).toHaveProperty("risk_analysis");
      624 |     });
      625 |

      at Object.toHaveProperty (tests/unit/routes/alerts.test.js:622:34)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ GET /alerts/portfolio/status ‚Ä∫ should include triggered alerts summary

    expect(received).toHaveProperty(path)

    Expected path: "total_triggered"
    Received path: []

    Received value: []

      632 |       expect(response.body.success).toBe(true);
      633 |       if (response.body.data.triggered_summary) {
    > 634 |         expect(response.body.data.triggered_summary).toHaveProperty(
          |                                                      ^
      635 |           "total_triggered"
      636 |         );
      637 |         expect(response.body.data.triggered_summary).toHaveProperty("by_type");

      at Object.toHaveProperty (tests/unit/routes/alerts.test.js:634:54)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ POST /alerts/bulk/dismiss ‚Ä∫ should dismiss multiple alerts

    expect(received).toHaveProperty(path)

    Expected path: "failed_count"
    Received path: []

    Received value: {"dismissed_alerts": [{"id": 2, "status": "dismissed", "symbol": "TSLA"}], "dismissed_count": 1, "message": "1 alerts dismissed successfully"}

      722 |         expect(response.body.success).toBe(true);
      723 |         expect(response.body.data).toHaveProperty("dismissed_count");
    > 724 |         expect(response.body.data).toHaveProperty("failed_count");
          |                                    ^
      725 |       } else {
      726 |         expect([400, 401]).toContain(response.status);
      727 |       }

      at Object.toHaveProperty (tests/unit/routes/alerts.test.js:724:36)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ GET /alerts/history ‚Ä∫ should return alert history with pagination

    expect(received).toHaveProperty(path)

    Expected path: "pagination"
    Received path: []

    Received value: {"alerts": [{"condition": "below", "created_at": "2025-09-12T09:41:58.860Z", "current_value": 322.45, "id": 2, "last_triggered": null, "message": "Alert when TSLA drops below $300", "priority": "low", "status": "dismissed", "symbol": "TSLA", "threshold": 300, "trigger_count": 0, "type": "price_alert"}], "by_status": {"dismissed": [{"condition": "below", "created_at": "2025-09-12T09:41:58.860Z", "current_value": 322.45, "id": 2, "last_triggered": null, "message": "Alert when TSLA drops below $300", "priority": "low", "status": "dismissed", "symbol": "TSLA", "threshold": 300, "trigger_count": 0, "type": "price_alert"}]}, "filters": {"category": "all", "limit": 100, "status": "all"}, "summary": {"active": 0, "inactive": 0, "total_alerts": 1, "triggered": 0}, "total": 1}

      758 |       expect(response.body).toHaveProperty("data");
      759 |       expect(response.body.data).toHaveProperty("alerts");
    > 760 |       expect(response.body.data).toHaveProperty("pagination");
          |                                  ^
      761 |       expect(response.body.data).toHaveProperty("summary");
      762 |     });
      763 |

      at Object.toHaveProperty (tests/unit/routes/alerts.test.js:760:34)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ GET /alerts/history ‚Ä∫ should filter by alert type

    expect(received).toBe(expected) // Object.is equality

    Expected: "price_above"
    Received: undefined

      790 |       if (response.body.data.alerts.length > 0) {
      791 |         response.body.data.alerts.forEach((alert) => {
    > 792 |           expect(alert.alert_type).toBe("price_above");
          |                                    ^
      793 |         });
      794 |       }
      795 |     });

      at toBe (tests/unit/routes/alerts.test.js:792:36)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/unit/routes/alerts.test.js:791:35)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ GET /alerts/history/performance ‚Ä∫ should return alert performance analytics

    expect(received).toHaveProperty(path)

    Expected path: "alert_accuracy"
    Received path: []

    Received value: {"breakdown_by_type": [{"alert_type": "price_alert", "avg_days_to_trigger": null, "count": "1", "status": "dismissed"}], "performance_metrics": [{"active_count": "0", "alert_type": "price_alert", "avg_trigger_time_hours": null, "total_alerts": "1", "triggered_count": "0"}], "summary": {"filter_applied": "none", "total_performance_records": 1}}

      806 |       expect(response.body).toHaveProperty("data");
      807 |       expect(response.body.data).toHaveProperty("performance_metrics");
    > 808 |       expect(response.body.data).toHaveProperty("alert_accuracy");
          |                                  ^
      809 |       expect(response.body.data).toHaveProperty("response_times");
      810 |     });
      811 |

      at Object.toHaveProperty (tests/unit/routes/alerts.test.js:808:34)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ GET /alerts/settings ‚Ä∫ should return user alert settings

    expect(received).toHaveProperty(path)

    Expected path: "notification_preferences"
    Received path: []

    Received value: {"quick_actions": [{"action": "enable_all_notifications", "description": "Enable all notification channels", "endpoint": "PUT /api/alerts/settings/notifications"}, {"action": "pause_all_alerts", "description": "Temporarily pause all alert delivery", "endpoint": "PUT /api/alerts/settings/pause"}, {"action": "reset_to_defaults", "description": "Reset all settings to recommended defaults", "endpoint": "PUT /api/alerts/settings/reset"}, {"action": "export_settings", "description": "Export current settings as JSON", "endpoint": "GET /api/alerts/settings/export"}], "settings": {"advanced_settings": {"alert_priority_scoring": true, "auto_pause_settings": {"auto_resume": true, "vacation_end": null, "vacation_mode": false, "vacation_start": null}, "batch_alerts": false, "risk_management": {"cool_down_periods": {"high_frequency_symbols": 5, "low_frequency_symbols": 1}, "max_daily_alerts": 50}, "smart_timing": true}, "alert_categories": {"earnings_alerts": {"enabled": true, "post_earnings_enabled": true, "pre_earnings_days": 3, "surprise_threshold": 10}, "market_alerts": {"circuit_breakers": true, "economic_events": true, "enabled": true, "market_open_close": false, "sector_rotation": true, "vix_threshold": 30}, "news_alerts": {"enabled": true, "keywords_blacklist": ["crypto", "bitcoin"], "keywords_whitelist": [], "sentiment_threshold": 0.7, "sources": ["reuters", "bloomberg", "cnbc", "marketwatch"]}, "portfolio_alerts": {"corporate_actions": true, "daily_pnl_threshold": 1000, "dividend_announcements": true, "enabled": true, "margin_alerts": true, "position_change_threshold": 10}, "price_alerts": {"enabled": true, "frequency": "immediate", "include_after_hours": false, "threshold_percentage": 5}, "social_sentiment_alerts": {"enabled": false, "influencer_mentions": true, "mention_threshold": 1000, "platforms": ["twitter", "reddit", "stocktwits"], "sentiment_threshold": 0.8}, "technical_alerts": {"enabled": true, "indicators": {"bollinger_bands": {"enabled": true}, "macd_crossover": {"enabled": true}, "moving_average_cross": {"enabled": true, "periods": [20, 50]}, "rsi_overbought": {"enabled": true, "threshold": 80}, "rsi_oversold": {"enabled": true, "threshold": 20}}, "pattern_alerts": {"breakouts": true, "reversals": true, "support_resistance": true}}, "volume_alerts": {"enabled": true, "frequency": "immediate", "minimum_volume": 1000000, "threshold_multiplier": 2}}, "alert_history": {"duplicate_suppression": true, "max_alerts_per_day": 100, "retention_days": 30, "suppression_window_minutes": 15}, "created_at": "2025-01-15T10:30:00Z", "delivery_settings": {"discord_webhook": null, "email_address": "user@example.com", "phone_number": null, "push_device_tokens": ["device_token_12345"], "quiet_hours": {"days": ["monday", "tuesday", "wednesday", "thursday", "friday"], "enabled": true, "end_time": "07:00", "start_time": "22:00"}, "slack_webhook": null, "time_zone": "America/New_York"}, "integrations": {"third_party_services": {"custom_webhooks": [], "ifttt": {"enabled": false, "webhook_url": null}, "zapier": {"enabled": false, "webhook_url": null}}, "trading_platforms": {"alpaca": {"api_key_set": false, "enabled": false}, "interactive_brokers": {"api_key_set": false, "enabled": false}, "td_ameritrade": {"api_key_set": false, "enabled": false}}}, "last_settings_change": "2025-09-23T16:32:00.821Z", "notification_preferences": {"browser_enabled": false, "discord_enabled": false, "email_enabled": false, "push_enabled": false, "slack_enabled": false, "sms_enabled": false}, "subscription_info": {"alerts_limit_daily": 100, "alerts_used_today": 23, "plan": "premium", "plan_expires": "2025-12-31T23:59:59Z", "premium_features": ["unlimited_alerts", "advanced_indicators", "social_sentiment", "custom_webhooks", "alert_backtesting"]}, "updated_at": "2025-09-23T16:32:00.821Z", "user_id": "test-user-123", "version": "2.1.0", "watchlist_settings": {"default_watchlist_alerts": true, "per_symbol_settings": {"AAPL": {"earnings_priority": "high", "price_threshold": 2.5, "volume_multiplier": 1.5}, "TSLA": {"price_threshold": 7.5, "social_sentiment": true, "volume_multiplier": 3}}}}, "summary": {"alerts_remaining_today": 77, "alerts_used_today": 23, "settings_last_modified": "2025-09-23T16:32:00.821Z", "subscription_plan": "premium", "total_categories_enabled": 7, "total_notification_channels": 0, "watchlist_symbols_with_custom_settings": 2}}

      836 |       expect(response.body).toHaveProperty("success", true);
      837 |       expect(response.body).toHaveProperty("data");
    > 838 |       expect(response.body.data).toHaveProperty("notification_preferences");
          |                                  ^
      839 |       expect(response.body.data).toHaveProperty("alert_limits");
      840 |       expect(response.body.data).toHaveProperty("default_settings");
      841 |     });

      at Object.toHaveProperty (tests/unit/routes/alerts.test.js:838:34)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ PUT /alerts/settings ‚Ä∫ should validate settings data

    expect(received).toContain(expected) // indexOf

    Expected substring: "validation"
    Received string:    "Invalid settings: max_daily_alerts must be non-negative"

      882 |
      883 |       expect(response.body.success).toBe(false);
    > 884 |       expect(response.body.error).toContain("validation");
          |                                   ^
      885 |     });
      886 |   });
      887 |

      at Object.toContain (tests/unit/routes/alerts.test.js:884:35)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ Error Handling ‚Ä∫ should handle rate limiting for alert creation

    expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      953 |       // At least some should succeed
      954 |       const successCount = responses.filter((r) => r.status === 201).length;
    > 955 |       expect(successCount).toBeGreaterThan(0);
          |                            ^
      956 |     });
      957 |   });
      958 | });

      at Object.toBeGreaterThan (tests/unit/routes/alerts.test.js:955:28)

FAIL tests/unit/routes/stocks.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully (test mode)

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:100:17)

    console.log
      Stocks main endpoint called with params: {}

      at log (routes/stocks.js:407:13)

    console.log
      Triggering workflow deploy

      at log (routes/stocks.js:408:13)

    console.log
      Query params: { whereClause: 'WHERE 1=1', params: [], limit: 50, offset: 0 }

      at log (routes/stocks.js:474:13)

    console.log
      Executing FAST queries with schema validation...

      at log (routes/stocks.js:544:13)

    console.log
      Executing comprehensive stocks query with timeout protection...

      at log (routes/stocks.js:547:13)

    console.log
      FAST query results: 7 stocks, 7 total

      at log (routes/stocks.js:599:13)

    console.log
      üîç Stock search requested for: AAPL

      at log (routes/stocks.js:1244:13)

    console.log
      üìã Stock list endpoint called

      at log (routes/stocks.js:1684:13)

    console.log
      Sectors endpoint called (public)

      at log (routes/stocks.js:15:13)

    console.log
      FIXED stock endpoint called for: AAPL

      at log (routes/stocks.js:2511:13)

    console.log
      FIXED stock endpoint - executing query for AAPL

      at log (routes/stocks.js:2539:13)

    console.log
      FIXED stock endpoint - query result: 1 rows

      at log (routes/stocks.js:2544:15)

    console.log
      FIXED stock endpoint - first row data: {
        symbol: 'AAPL',
        company_name: 'AAPL',
        sector: null,
        exchange: null,
        market_category: null,
        market_cap: '3500000000000',
        current_price: 150.25,
        open: 149.5,
        high: 151.25,
        low: 148.75,
        volume: '65000000',
        price_date: 2024-01-02T06:00:00.000Z
      }

      at log (routes/stocks.js:2560:15)

    console.log
      ‚úÖ FIXED: Successfully returned data for AAPL with price: 150.25

      at log (routes/stocks.js:2625:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîç Stock search requested for: AAPL

      at log (routes/stocks.js:1244:13)

    console.log
      üîç Stock search requested for: A

      at log (routes/stocks.js:1244:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.error
      Database query error: {
        error: 'missing FROM-clause entry for table "ss"',
        query: '\n' +
          '      SELECT\n' +
          '        pd.symbol,\n' +
          '        NULL as name,\n' +
          '        pd.close as current_price,\n' +
          '        pd...',
        params: '1 parameters',
        code: '42P01'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/stocks.js:1765:20

    console.error
      Trending stocks error: missing FROM-clause entry for table "ss"

      1774 |     });
      1775 |   } catch (error) {
    > 1776 |     console.error("Trending stocks error:", error.message);
           |             ^
      1777 |     res.status(500).json({
      1778 |       success: false,
      1779 |       error: "Failed to fetch trending stocks",

      at error (routes/stocks.js:1776:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.error
      Database query error: {
        error: 'missing FROM-clause entry for table "ss"',
        query: '\n' +
          '      SELECT\n' +
          '        pd.symbol,\n' +
          '        NULL as name,\n' +
          '        pd.close as current_price,\n' +
          '        pd...',
        params: '1 parameters',
        code: '42P01'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/stocks.js:1765:20

    console.error
      Trending stocks error: missing FROM-clause entry for table "ss"

      1774 |     });
      1775 |   } catch (error) {
    > 1776 |     console.error("Trending stocks error:", error.message);
           |             ^
      1777 |     res.status(500).json({
      1778 |       success: false,
      1779 |       error: "Failed to fetch trending stocks",

      at error (routes/stocks.js:1776:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.error
      Database query error: {
        error: 'missing FROM-clause entry for table "ss"',
        query: '\n' +
          '      SELECT\n' +
          '        pd.symbol,\n' +
          '        NULL as name,\n' +
          '        pd.close as current_price,\n' +
          '        pd...',
        params: '1 parameters',
        code: '42P01'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/stocks.js:1765:20

    console.error
      Trending stocks error: missing FROM-clause entry for table "ss"

      1774 |     });
      1775 |   } catch (error) {
    > 1776 |     console.error("Trending stocks error:", error.message);
           |             ^
      1777 |     res.status(500).json({
      1778 |       success: false,
      1779 |       error: "Failed to fetch trending stocks",

      at error (routes/stocks.js:1776:13)

    console.log
      Stock details requested for AAPL

      at log (routes/stocks.js:2181:13)

    console.log
      Stock details requested for INVALID123

      at log (routes/stocks.js:2181:13)

    console.log
      Stock details requested for AAPL

      at log (routes/stocks.js:2181:13)

    console.log
      Stock price requested for AAPL, timeframe: 1d, historical: false

      at log (routes/stocks.js:2415:13)

    console.log
      Stock price requested for AAPL, timeframe: 1d, historical: false

      at log (routes/stocks.js:2415:13)

    console.log
      Stock price requested for AAPL, timeframe: 1d, historical: true

      at log (routes/stocks.js:2415:13)

    console.log
      Market movers requested, type: all, limit: 10

      at log (routes/stocks.js:2211:13)

    console.log
      Market movers requested, type: gainers, limit: 10

      at log (routes/stocks.js:2211:13)

    console.log
      Market movers requested, type: all, limit: 10

      at log (routes/stocks.js:2211:13)

    console.log
      Stock recommendations requested for AAPL, criteria: all

      at log (routes/stocks.js:2363:13)

    console.log
      Stock recommendations requested for AAPL, criteria: technical

      at log (routes/stocks.js:2363:13)

    console.log
      Stock comparison requested for symbols: AAPL,MSFT,GOOGL, metrics: price,volume,pe_ratio

      at log (routes/stocks.js:2241:13)

    console.log
      Response status: 200

      at Object.log (tests/unit/routes/stocks.test.js:447:15)

    console.log
      Response body: {
        "success": true,
        "data": {
          "comparison": [
            {
              "symbol": "AAPL",
              "price": 150.25,
              "volume": 65000000,
              "pe_ratio": null,
              "market_cap": 3500000000000,
              "sector": null,
              "industry": null,
              "price_date": "2024-01-02T06:00:00.000Z",
              "source": "yfinance_loaders"
            },
            {
              "symbol": "MSFT",
              "price": 350.75,
              "volume": 45000000,
              "pe_ratio": null,
              "market_cap": 2800000000000,
              "sector": null,
              "industry": null,
              "price_date": "2024-01-02T06:00:00.000Z",
              "source": "yfinance_loaders"
            },
            {
              "symbol": "GOOGL",
              "price": 2865.75,
              "volume": 15000000,
              "pe_ratio": null,
              "market_cap": 2100000000000,
              "sector": null,
              "industry": null,
              "price_date": "2024-01-02T06:00:00.000Z",
              "source": "yfinance_loaders"
            }
          ],
          "metrics": [
            "price",
            "volume",
            "pe_ratio"
          ],
          "count": 3,
          "source": "fundamental_metrics_and_price_daily_tables"
        },
        "timestamp": "2025-09-23T16:32:01.128Z"
      }

      at Object.log (tests/unit/routes/stocks.test.js:448:15)

    console.log
      Stock comparison requested for symbols: AAPL,MSFT, metrics: price,volume,pe_ratio

      at log (routes/stocks.js:2241:13)

    console.log
      Stock comparison requested for symbols: STOCK0,STOCK1,STOCK2,STOCK3,STOCK4,STOCK5,STOCK6,STOCK7,STOCK8,STOCK9,STOCK10,STOCK11,STOCK12,STOCK13,STOCK14,STOCK15,STOCK16,STOCK17,STOCK18,STOCK19, metrics: price,volume,pe_ratio

      at log (routes/stocks.js:2241:13)

    console.log
      Stock statistics requested, sector filter: undefined

      at log (routes/stocks.js:2324:13)

    console.log
      Stock statistics requested, sector filter: Technology

      at log (routes/stocks.js:2324:13)

    console.log
      Stock comparison requested for symbols: undefined, metrics: price,volume,pe_ratio

      at log (routes/stocks.js:2241:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Stocks Routes Unit Tests ‚Ä∫ POST /stocks/init-price-data ‚Ä∫ should initialize price data successfully

    expected 200 "OK", got 501 "Not Implemented"

      145 |         .set("Authorization", "Bearer dev-bypass-token")
      146 |         .send(testData)
    > 147 |         .expect(200);
          |          ^
      148 |
      149 |       expect(response.body.success).toBe(true);
      150 |       expect(response.body.message).toBe("Price data initialization completed");

      at Object.expect (tests/unit/routes/stocks.test.js:147:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Stocks Routes Unit Tests ‚Ä∫ POST /stocks/init-price-data ‚Ä∫ should handle missing symbols array

    expected 400 "Bad Request", got 501 "Not Implemented"

      163 |         .set("Authorization", "Bearer dev-bypass-token")
      164 |         .send({})
    > 165 |         .expect(400);
          |          ^
      166 |
      167 |       expect(response.body.success).toBe(false);
      168 |       expect(response.body.error).toBe("Invalid symbols array");

      at Object.expect (tests/unit/routes/stocks.test.js:165:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Stocks Routes Unit Tests ‚Ä∫ POST /stocks/init-price-data ‚Ä∫ should handle empty symbols array

    expected 400 "Bad Request", got 501 "Not Implemented"

      175 |         .set("Authorization", "Bearer dev-bypass-token")
      176 |         .send({ symbols: [] })
    > 177 |         .expect(400);
          |          ^
      178 |
      179 |       expect(response.body.success).toBe(false);
      180 |       expect(response.body.error).toBe("Invalid symbols array");

      at Object.expect (tests/unit/routes/stocks.test.js:177:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Stocks Routes Unit Tests ‚Ä∫ POST /stocks/init-price-data ‚Ä∫ should handle force_error parameter

    expected 500 "Internal Server Error", got 501 "Not Implemented"

      189 |           force_error: true,
      190 |         })
    > 191 |         .expect(500);
          |          ^
      192 |
      193 |       expect(response.body.success).toBe(false);
      194 |       expect(response.body.error).toBe("Failed to initialize price data");

      at Object.expect (tests/unit/routes/stocks.test.js:191:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Stocks Routes Unit Tests ‚Ä∫ POST /stocks/init-price-data ‚Ä∫ should use default date range when not provided

    expected 200 "OK", got 501 "Not Implemented"

      201 |         .set("Authorization", "Bearer dev-bypass-token")
      202 |         .send({ symbols: ["AAPL"] })
    > 203 |         .expect(200);
          |          ^
      204 |
      205 |       expect(response.body.success).toBe(true);
      206 |       expect(response.body.data.initialization_results[0]).toHaveProperty(

      at Object.expect (tests/unit/routes/stocks.test.js:203:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Stocks Routes Unit Tests ‚Ä∫ POST /stocks/init-price-data ‚Ä∫ should limit symbols to 50 for performance

    expected 200 "OK", got 501 "Not Implemented"

      220 |         .set("Authorization", "Bearer dev-bypass-token")
      221 |         .send({ symbols: manySymbols })
    > 222 |         .expect(200);
          |          ^
      223 |
      224 |       expect(response.body.success).toBe(true);
      225 |       expect(response.body.data.initialization_results).toHaveLength(50); // Should be limited to 50

      at Object.expect (tests/unit/routes/stocks.test.js:222:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Stocks Routes Unit Tests ‚Ä∫ POST /stocks/init-price-data ‚Ä∫ should handle different frequencies

    expected 200 "OK", got 501 "Not Implemented"

      237 |           end_date: "2023-03-31",
      238 |         })
    > 239 |         .expect(200);
          |          ^
      240 |
      241 |       expect(response.body.success).toBe(true);
      242 |       expect(response.body.data.summary.frequency).toBe("weekly");

      at Object.expect (tests/unit/routes/stocks.test.js:239:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Stocks Routes Unit Tests ‚Ä∫ POST /stocks/init-price-data ‚Ä∫ should include realistic price data

    expected 200 "OK", got 501 "Not Implemented"

      255 |           end_date: "2023-01-07",
      256 |         })
    > 257 |         .expect(200);
          |          ^
      258 |
      259 |       expect(response.body.success).toBe(true);
      260 |       const result = response.body.data.initialization_results[0];

      at Object.expect (tests/unit/routes/stocks.test.js:257:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Stocks Routes Unit Tests ‚Ä∫ GET /stocks/trending ‚Ä∫ should return trending stocks

    expected 200 "OK", got 500 "Internal Server Error"

      314 |         .get("/stocks/trending")
      315 |         .set("Authorization", "Bearer dev-bypass-token")
    > 316 |         .expect(200);
          |          ^
      317 |
      318 |       expect(response.body).toHaveProperty("success", true);
      319 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/stocks.test.js:316:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Stocks Routes Unit Tests ‚Ä∫ GET /stocks/trending ‚Ä∫ should handle trending with timeframe

    expected 200 "OK", got 500 "Internal Server Error"

      324 |         .get("/stocks/trending?timeframe=1d")
      325 |         .set("Authorization", "Bearer dev-bypass-token")
    > 326 |         .expect(200);
          |          ^
      327 |
      328 |       expect(response.body).toHaveProperty("success", true);
      329 |     });

      at Object.expect (tests/unit/routes/stocks.test.js:326:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Stocks Routes Unit Tests ‚Ä∫ GET /stocks/trending ‚Ä∫ should handle trending with different categories

    expected 200 "OK", got 500 "Internal Server Error"

      333 |         .get("/stocks/trending?category=gainers")
      334 |         .set("Authorization", "Bearer dev-bypass-token")
    > 335 |         .expect(200);
          |          ^
      336 |
      337 |       expect(response.body).toHaveProperty("success", true);
      338 |     });

      at Object.expect (tests/unit/routes/stocks.test.js:335:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

FAIL tests/unit/routes/trading.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      [TRADING] Debug endpoint called

      at log (routes/trading.js:146:11)

    console.log
      üéØ Trading signals requested - user: test-user-123, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:203:13)

    console.log
      üìù Order placement requested for user: test-user-123, buy 100 AAPL

      at log (routes/trading.js:1458:13)

    console.log
      üîÑ Trading positions requested for user: test-user-123

      at log (routes/trading.js:1212:13)

    console.log
      üéØ Executing paper trading query on table: buy_sell_daily

      at log (utils/tradingModeHelper.js:209:15)

    console.log
      ‚ö†Ô∏è Portfolio risk requested for user: test-user-123

      at log (routes/trading.js:2251:13)

    console.log
      ‚ö†Ô∏è Portfolio risk requested for user: test-user-123

      at log (routes/trading.js:2251:13)

    console.log
      ‚ö†Ô∏è Risk limits update for user: test-user-123

      at log (routes/trading.js:2442:13)

    console.log
      ‚ö†Ô∏è Risk limits update for user: test-user-123

      at log (routes/trading.js:2442:13)

    console.log
      ‚ö†Ô∏è Risk limits update for user: test-user-123

      at log (routes/trading.js:2442:13)

    console.log
      ‚ö†Ô∏è Risk limits update for user: test-user-123

      at log (routes/trading.js:2442:13)

    console.log
      JWT verifier initialized successfully (test mode)

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:100:17)

    console.log
      ‚ö†Ô∏è Risk limits update for user: test-user-123

      at log (routes/trading.js:2442:13)

    console.log
      üîÑ Close position for AAPL, user: test-user-123

      at log (routes/trading.js:2623:13)

    console.log
      üîÑ Close position for AAPL, user: test-user-123

      at log (routes/trading.js:2623:13)

    console.log
      üîÑ Close position for NONEXISTENT, user: test-user-123

      at log (routes/trading.js:2623:13)

    console.log
      üîÑ Close position for AAPL, user: test-user-123

      at log (routes/trading.js:2623:13)

    console.log
      üìà Trading strategies requested - category: all, risk: all, active: false

      at log (routes/trading.js:1790:13)

    console.log
      üìà Trading strategies requested - category: all, risk: all, active: false

      at log (routes/trading.js:1790:13)

    console.log
      üìà Trading strategies requested - category: all, risk: all, active: false

      at log (routes/trading.js:1790:13)

    console.log
      üïê Market hours requested

      at log (routes/trading.js:3094:13)

    console.log
      üïê Market hours requested

      at log (routes/trading.js:3094:13)

    console.log
      üìà Quote requested for symbol: AAPL

      at log (routes/trading.js:3031:13)

    console.log
      üìà Quote requested for symbol: AAPL

      at log (routes/trading.js:3031:13)

    console.log
      üìà Quote requested for symbol: INVALID123

      at log (routes/trading.js:3031:13)

    console.log
      üìä Paper trading status requested

      at log (routes/trading.js:2789:13)

    console.log
      üìä Paper trading status requested

      at log (routes/trading.js:2789:13)

    console.log
      üîÑ Paper trading reset requested

      at log (routes/trading.js:2832:13)

    console.log
      üîÑ Paper trading reset requested

      at log (routes/trading.js:2832:13)

    console.log
      üìã Trading orders requested for user: test-user-123

      at log (routes/trading.js:1346:13)

    console.log
      üìã Trading orders requested for user: test-user-123

      at log (routes/trading.js:1346:13)

    console.log
      üìã Trading orders requested for user: test-user-123

      at log (routes/trading.js:1346:13)

    console.log
      üóëÔ∏è Cancel order requested for user: test-user-123, order: non-existent-order-id

      at log (routes/trading.js:2989:13)

    console.log
      üóëÔ∏è Cancel order requested for user: test-user-123, order: filled-order-id

      at log (routes/trading.js:2989:13)

    console.log
      üîÑ Trading positions requested for user: test-user-123

      at log (routes/trading.js:1212:13)

    console.log
      üéØ Executing paper trading query on table: buy_sell_daily

      at log (utils/tradingModeHelper.js:209:15)

    console.log
      üìà Quote requested for symbol: invalid-symbol-format-123!

      at log (routes/trading.js:3031:13)

    console.log
      üìù Order placement requested for user: test-user-123, buy 100 AAPL

      at log (routes/trading.js:1458:13)

    console.log
      üìù Order placement requested for user: test-user-123, buy 999999 AAPL

      at log (routes/trading.js:1458:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/risk/portfolio ‚Ä∫ should return comprehensive portfolio risk analysis

    expect(received).toBe(expected) // Object.is equality

    Expected: "number"
    Received: "object"

      266 |       expect(data.concentrationRisk).toBeGreaterThanOrEqual(0);
      267 |
    > 268 |       expect(typeof data.volatility).toBe("number");
          |                                      ^
      269 |       expect(data.volatility).toBeGreaterThanOrEqual(0);
      270 |
      271 |       expect(typeof data.beta).toBe("number");

      at Object.toBe (tests/unit/routes/trading.test.js:268:38)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/strategies ‚Ä∫ should return available trading strategies

    expect(received).toHaveProperty(path, value)

    Expected path: "success"
    Received path: []

    Expected value: true
    Received value: {"data": [], "filters_applied": {"active_only": false, "category": "all", "limit": 50, "risk_level": "all"}, "metadata": {"available_categories": [], "available_risk_levels": [], "available_time_horizons": [], "data_quality": "synthetic_high_fidelity", "last_updated": "2025-09-23T16:32:01.422Z"}, "summary": {"active_strategies": 0, "category_breakdown": {}, "filtered_count": 0, "inactive_strategies": 0, "performance_overview": {"avg_win_rate": null, "avg_ytd_return": null, "top_performer": "N/A", "total_signals": 0}, "total_strategies": 0}, "timestamp": "2025-09-23T16:32:01.422Z"}

      606 |         .expect(200);
      607 |
    > 608 |       expect(response.body).toHaveProperty("success", true);
          |                             ^
      609 |       expect(response.body).toHaveProperty("data");
      610 |       expect(response.body.data).toHaveProperty("strategies");
      611 |       expect(Array.isArray(response.body.data.strategies)).toBe(true);

      at Object.toHaveProperty (tests/unit/routes/trading.test.js:608:29)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/strategies ‚Ä∫ should filter strategies by type

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: undefined

      617 |         .expect(200);
      618 |
    > 619 |       expect(response.body.success).toBe(true);
          |                                     ^
      620 |       if (response.body.data.strategies.length > 0) {
      621 |         response.body.data.strategies.forEach((strategy) => {
      622 |           expect(strategy.type).toBe("momentum");

      at Object.toBe (tests/unit/routes/trading.test.js:619:37)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/strategies ‚Ä∫ should include performance metrics

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: undefined

      630 |         .expect(200);
      631 |
    > 632 |       expect(response.body.success).toBe(true);
          |                                     ^
      633 |       if (response.body.data.strategies.length > 0) {
      634 |         const strategy = response.body.data.strategies[0];
      635 |         expect(strategy).toHaveProperty("performance");

      at Object.toBe (tests/unit/routes/trading.test.js:632:37)

  ‚óè Trading Routes Unit Tests ‚Ä∫ POST /trading/strategies ‚Ä∫ should create a new trading strategy

    expected 201 "Created", got 404 "Not Found"

      660 |         .post("/trading/strategies")
      661 |         .send(strategyData)
    > 662 |         .expect(201);
          |          ^
      663 |
      664 |       expect(response.body.success).toBe(true);
      665 |       expect(response.body.data).toHaveProperty("strategyId");

      at Object.expect (tests/unit/routes/trading.test.js:662:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trading Routes Unit Tests ‚Ä∫ POST /trading/strategies ‚Ä∫ should validate required fields

    expected 400 "Bad Request", got 404 "Not Found"

      674 |         .post("/trading/strategies")
      675 |         .send(invalidData)
    > 676 |         .expect(400);
          |          ^
      677 |
      678 |       expect(response.body.success).toBe(false);
      679 |       expect(response.body).toHaveProperty("error");

      at Object.expect (tests/unit/routes/trading.test.js:676:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/analytics/performance ‚Ä∫ should return trading performance analytics

    expected 200 "OK", got 404 "Not Found"

      689 |       const response = await request(app)
      690 |         .get("/trading/analytics/performance")
    > 691 |         .expect(200);
          |          ^
      692 |
      693 |       expect(response.body).toHaveProperty("success", true);
      694 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/trading.test.js:691:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/analytics/performance ‚Ä∫ should handle time period filters

    expected 200 "OK", got 404 "Not Found"

      708 |       const response = await request(app)
      709 |         .get("/trading/analytics/performance?period=30d")
    > 710 |         .expect(200);
          |          ^
      711 |
      712 |       expect(response.body.success).toBe(true);
      713 |       expect(response.body.data).toHaveProperty("period", "30d");

      at Object.expect (tests/unit/routes/trading.test.js:710:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/analytics/performance ‚Ä∫ should include benchmark comparison

    expected 200 "OK", got 404 "Not Found"

      717 |       const response = await request(app)
      718 |         .get("/trading/analytics/performance?benchmark=SPY")
    > 719 |         .expect(200);
          |          ^
      720 |
      721 |       expect(response.body.success).toBe(true);
      722 |       if (response.body.data.benchmark) {

      at Object.expect (tests/unit/routes/trading.test.js:719:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/analytics/trades ‚Ä∫ should return detailed trade analysis

    expected 200 "OK", got 404 "Not Found"

      731 |       const response = await request(app)
      732 |         .get("/trading/analytics/trades")
    > 733 |         .expect(200);
          |          ^
      734 |
      735 |       expect(response.body).toHaveProperty("success", true);
      736 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/trading.test.js:733:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/analytics/trades ‚Ä∫ should filter trades by symbol

    expected 200 "OK", got 404 "Not Found"

      748 |       const response = await request(app)
      749 |         .get("/trading/analytics/trades?symbol=AAPL")
    > 750 |         .expect(200);
          |          ^
      751 |
      752 |       expect(response.body.success).toBe(true);
      753 |       if (response.body.data.trades.length > 0) {

      at Object.expect (tests/unit/routes/trading.test.js:750:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/analytics/trades ‚Ä∫ should support pagination

    expected 200 "OK", got 404 "Not Found"

      761 |       const response = await request(app)
      762 |         .get("/trading/analytics/trades?page=1&limit=10")
    > 763 |         .expect(200);
          |          ^
      764 |
      765 |       expect(response.body.success).toBe(true);
      766 |       expect(response.body.data).toHaveProperty("pagination");

      at Object.expect (tests/unit/routes/trading.test.js:763:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/market/hours ‚Ä∫ should return trading hours for current week

    expect(received).toHaveProperty(path)

    Expected path: "regularHours"
    Received path: []

    Received value: {"after_hours": {"close": "20:00:00", "open": "16:00:00"}, "date": "2025-09-23", "early_hours": {"close": "09:30:00", "open": "04:00:00"}, "is_open": true, "session_close": "16:00:00", "session_open": "09:30:00", "timezone": "America/New_York"}

      811 |       expect(response.body).toHaveProperty("success", true);
      812 |       expect(response.body).toHaveProperty("data");
    > 813 |       expect(response.body.data).toHaveProperty("regularHours");
          |                                  ^
      814 |       expect(response.body.data).toHaveProperty("extendedHours");
      815 |       expect(response.body.data).toHaveProperty("holidays");
      816 |     });

      at Object.toHaveProperty (tests/unit/routes/trading.test.js:813:34)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/quotes/:symbol ‚Ä∫ should return real-time quote for valid symbol

    expected 200 "OK", got 404 "Not Found"

      834 |       const response = await request(app)
      835 |         .get("/trading/quotes/AAPL")
    > 836 |         .expect(200);
          |          ^
      837 |
      838 |       expect(response.body).toHaveProperty("success", true);
      839 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/trading.test.js:836:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/quotes/:symbol ‚Ä∫ should include bid/ask spread information

    expected 200 "OK", got 404 "Not Found"

      850 |       const response = await request(app)
      851 |         .get("/trading/quotes/AAPL?include_spread=true")
    > 852 |         .expect(200);
          |          ^
      853 |
      854 |       expect(response.body.success).toBe(true);
      855 |       if (response.body.data.spread) {

      at Object.expect (tests/unit/routes/trading.test.js:852:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/quotes/:symbol ‚Ä∫ should handle invalid symbols gracefully

    expected 404 "Not Found", got 400 "Bad Request"

      864 |       const response = await request(app)
      865 |         .get("/trading/quotes/INVALID123")
    > 866 |         .expect(404);
          |          ^
      867 |
      868 |       expect(response.body.success).toBe(false);
      869 |       expect(response.body).toHaveProperty("error");

      at Object.expect (tests/unit/routes/trading.test.js:866:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trading Routes Unit Tests ‚Ä∫ POST /trading/quotes/batch ‚Ä∫ should return quotes for multiple symbols

    expected 200 "OK", got 404 "Not Found"

      878 |         .post("/trading/quotes/batch")
      879 |         .send(symbols)
    > 880 |         .expect(200);
          |          ^
      881 |
      882 |       expect(response.body).toHaveProperty("success", true);
      883 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/trading.test.js:880:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trading Routes Unit Tests ‚Ä∫ POST /trading/quotes/batch ‚Ä∫ should limit batch size

    expected 400 "Bad Request", got 404 "Not Found"

      902 |         .post("/trading/quotes/batch")
      903 |         .send(tooManySymbols)
    > 904 |         .expect(400);
          |          ^
      905 |
      906 |       expect(response.body.success).toBe(false);
      907 |       expect(response.body).toHaveProperty("error");

      at Object.expect (tests/unit/routes/trading.test.js:904:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/paper/status ‚Ä∫ should return paper trading account status

    expect(received).toHaveProperty(path)

    Expected path: "account"
    Received path: []

    Received value: {"account_value": 100000, "buying_power": 50000, "cash": 25000, "currency": "USD", "day_trade_buying_power": 200000, "equity": 100000, "pattern_day_trader": false, "pending_transfers": 0}

      922 |       expect(response.body).toHaveProperty("success", true);
      923 |       expect(response.body).toHaveProperty("data");
    > 924 |       expect(response.body.data).toHaveProperty("account");
          |                                  ^
      925 |       expect(response.body.data).toHaveProperty("paperTrading");
      926 |
      927 |       const account = response.body.data.account;

      at Object.toHaveProperty (tests/unit/routes/trading.test.js:924:34)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/paper/status ‚Ä∫ should include performance metrics

    expect(received).toHaveProperty(path)

    Expected path: "totalReturn"
    Received path: []

    Received value: {"day_return": 125, "day_return_percent": 0.125, "realized_pl": 1300, "total_return": 2500, "total_return_percent": 2.5, "unrealized_pl": 1200}

      940 |       expect(response.body.success).toBe(true);
      941 |       if (response.body.data.performance) {
    > 942 |         expect(response.body.data.performance).toHaveProperty("totalReturn");
          |                                                ^
      943 |         expect(response.body.data.performance).toHaveProperty("dailyReturn");
      944 |       }
      945 |     });

      at Object.toHaveProperty (tests/unit/routes/trading.test.js:942:48)

  ‚óè Trading Routes Unit Tests ‚Ä∫ POST /trading/paper/reset ‚Ä∫ should reset paper trading account

    expect(received).toHaveProperty(path, value)

    Expected path: "newBalance"
    Received path: []

    Expected value: 100000
    Received value: {"account_value": 100000, "buying_power": 50000, "cash": 25000, "initial_balance": 100000, "reset_at": "2025-09-23T16:32:01.455Z"}

      960 |       expect(response.body).toHaveProperty("success", true);
      961 |       expect(response.body).toHaveProperty("message");
    > 962 |       expect(response.body.data).toHaveProperty("newBalance", 100000);
          |                                  ^
      963 |       expect(response.body.data).toHaveProperty("resetAt");
      964 |     });
      965 |

      at Object.toHaveProperty (tests/unit/routes/trading.test.js:962:34)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/orders ‚Ä∫ should return user orders with pagination

    expect(received).toHaveProperty(path)

    Expected path: "orders"
    Received path: []

    Received value: []

      986 |       expect(response.body).toHaveProperty("success", true);
      987 |       expect(response.body).toHaveProperty("data");
    > 988 |       expect(response.body.data).toHaveProperty("orders");
          |                                  ^
      989 |       expect(response.body.data).toHaveProperty("pagination");
      990 |       expect(Array.isArray(response.body.data.orders)).toBe(true);
      991 |     });

      at Object.toHaveProperty (tests/unit/routes/trading.test.js:988:34)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/orders ‚Ä∫ should filter orders by status

    TypeError: Cannot read properties of undefined (reading 'length')

       997 |
       998 |       expect(response.body.success).toBe(true);
    >  999 |       if (response.body.data.orders.length > 0) {
           |                                     ^
      1000 |         response.body.data.orders.forEach((order) => {
      1001 |           expect(["pending", "open", "partially_filled"]).toContain(
      1002 |             order.status

      at Object.length (tests/unit/routes/trading.test.js:999:37)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/orders ‚Ä∫ should filter orders by symbol

    TypeError: Cannot read properties of undefined (reading 'length')

      1012 |
      1013 |       expect(response.body.success).toBe(true);
    > 1014 |       if (response.body.data.orders.length > 0) {
           |                                     ^
      1015 |         response.body.data.orders.forEach((order) => {
      1016 |           expect(order.symbol).toBe("AAPL");
      1017 |         });

      at Object.length (tests/unit/routes/trading.test.js:1014:37)

FAIL tests/integration/routes/commodities.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Commodities Routes Integration Tests ‚Ä∫ GET /api/commodities/prices (Current Prices) ‚Ä∫ should handle limit parameter

    expect(received).toBeLessThanOrEqual(expected)

    Expected: <= 5
    Received:    6

      163 |
      164 |       if (response.status === 200 && response.body.data.length > 0) {
    > 165 |         expect(response.body.data.length).toBeLessThanOrEqual(5);
          |                                           ^
      166 |       }
      167 |     });
      168 |

      at Object.toBeLessThanOrEqual (tests/integration/routes/commodities.integration.test.js:165:43)

  ‚óè Commodities Routes Integration Tests ‚Ä∫ GET /api/commodities/correlations (Price Correlations) ‚Ä∫ should validate correlation strength classifications

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      295 |         response.body.data.correlations.forEach((corr) => {
      296 |           if (corr.strength) {
    > 297 |             expect(validStrengths.includes(corr.strength.toLowerCase())).toBe(
          |                                                                          ^
      298 |               true
      299 |             );
      300 |           }

      at toBe (tests/integration/routes/commodities.integration.test.js:297:74)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/routes/commodities.integration.test.js:295:41)

  ‚óè Commodities Routes Integration Tests ‚Ä∫ GET /api/commodities/news (Commodity News) ‚Ä∫ should return commodity-related news

    expect(received).toHaveProperty(path)

    Expected path: "articles"
    Received path: []

    Received value: [{"category": "commodities", "id": 7, "publishedAt": "2025-09-22T04:00:05.183Z", "source": "WSJ", "symbol": "GLD", "title": "Gold Prices Surge on Economic Uncertainty", "url": "https://example.com/4"}, {"category": "energy", "id": 8, "publishedAt": "2025-09-22T03:00:05.183Z", "source": "MarketWatch", "symbol": "OIL", "title": "Oil Futures Rise Due to Supply Concerns", "url": "https://example.com/5"}]

      312 |       if (response.status === 200) {
      313 |         expect(response.body).toHaveProperty("data");
    > 314 |         expect(response.body.data).toHaveProperty("articles");
          |                                    ^
      315 |         expect(Array.isArray(response.body.data.articles)).toBe(true);
      316 |
      317 |         if (response.body.data.articles.length > 0) {

      at Object.toHaveProperty (tests/integration/routes/commodities.integration.test.js:314:36)

  ‚óè Commodities Routes Integration Tests ‚Ä∫ GET /api/commodities/news (Commodity News) ‚Ä∫ should handle category filter for news

    TypeError: Cannot read properties of undefined (reading 'length')

      339 |         expect([200, 400].includes(response.status)).toBe(true);
      340 |
    > 341 |         if (response.status === 200 && response.body.data.articles.length > 0) {
          |                                                                    ^
      342 |           response.body.data.articles.forEach((article) => {
      343 |             expect(article.category.toLowerCase()).toBe(category.toLowerCase());
      344 |           });

      at Object.length (tests/integration/routes/commodities.integration.test.js:341:68)

  ‚óè Commodities Routes Integration Tests ‚Ä∫ GET /api/commodities/news (Commodity News) ‚Ä∫ should handle limit parameter for news

    TypeError: Cannot read properties of undefined (reading 'length')

      353 |
      354 |       if (response.status === 200) {
    > 355 |         expect(response.body.data.articles.length).toBeLessThanOrEqual(5);
          |                                            ^
      356 |       }
      357 |     });
      358 |

      at Object.length (tests/integration/routes/commodities.integration.test.js:355:44)

  ‚óè Commodities Routes Integration Tests ‚Ä∫ GET /api/commodities/news (Commodity News) ‚Ä∫ should validate news article timestamps

    TypeError: Cannot read properties of undefined (reading 'length')

      360 |       const response = await request(app).get("/api/commodities/news");
      361 |
    > 362 |       if (response.status === 200 && response.body.data.articles.length > 0) {
          |                                                                  ^
      363 |         response.body.data.articles.forEach((article) => {
      364 |           if (article.published_at) {
      365 |             expect(new Date(article.published_at)).toBeInstanceOf(Date);

      at Object.length (tests/integration/routes/commodities.integration.test.js:362:66)

::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities HTTP/1.1" 200 415 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities HTTP/1.1" 200 415 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/health HTTP/1.1" 200 130 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/categories HTTP/1.1" 200 1344 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/categories HTTP/1.1" 200 1344 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/categories HTTP/1.1" 200 1344 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/prices HTTP/1.1" 200 1372 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/prices?limit=5 HTTP/1.1" 200 1372 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/prices?category=energy HTTP/1.1" 200 575 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/prices?category=metals HTTP/1.1" 200 178 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/prices?category=agriculture HTTP/1.1" 200 381 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/market-summary HTTP/1.1" 200 517 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/market-summary HTTP/1.1" 200 517 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/market-summary HTTP/1.1" 200 517 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/correlations HTTP/1.1" 200 1252 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/correlations?timeframe=1W HTTP/1.1" 200 1252 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/correlations?timeframe=1M HTTP/1.1" 200 1252 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/correlations?timeframe=3M HTTP/1.1" 200 1252 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/correlations?timeframe=1Y HTTP/1.1" 200 1252 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/correlations HTTP/1.1" 200 1252 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/news HTTP/1.1" 200 484 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/news?category=energy HTTP/1.1" 200 297 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/news?limit=5 HTTP/1.1" 200 483 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/news HTTP/1.1" 200 484 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities HTTP/1.1" 200 415 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/categories HTTP/1.1" 200 1344 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/prices HTTP/1.1" 200 1372 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/market-summary HTTP/1.1" 200 517 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/correlations HTTP/1.1" 200 1252 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/market-summary HTTP/1.1" 200 517 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/prices?limit=-1 HTTP/1.1" 200 1372 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/prices?limit=abc HTTP/1.1" 200 1372 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/prices?category=invalid-category HTTP/1.1" 200 188 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/prices?timeframe=invalid-timeframe HTTP/1.1" 200 1372 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/prices HTTP/1.1" 200 1372 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/prices?limit=1000 HTTP/1.1" 200 1372 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities HTTP/1.1" 200 415 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/categories HTTP/1.1" 200 1344 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/prices HTTP/1.1" 200 1372 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/market-summary HTTP/1.1" 200 517 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/correlations HTTP/1.1" 200 1252 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/news HTTP/1.1" 200 484 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/prices HTTP/1.1" 200 1372 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/prices?category=%27%3B%20DROP%20TABLE%20commodities%3B%20-- HTTP/1.1" 200 201 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/prices?category=1%27%20OR%20%271%27%3D%271 HTTP/1.1" 200 184 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/prices?category=UNION%20SELECT%20*%20FROM%20users HTTP/1.1" 200 197 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:01 +0000] "GET /api/commodities/prices?category=%3Cscript%3Ealert(%27xss%27)%3C%2Fscript%3E HTTP/1.1" 200 201 "-" "-"
FAIL tests/integration/routes/performance.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance (Root Endpoint) ‚Ä∫ should return performance API information

    expect(received).toHaveProperty(path)

    Expected path: "message"
    Received path: []

    Received value: {"data": {"max_drawdown": 0.08, "sharpe_ratio": 1.2, "total_return": 0.15, "volatility": 0.12, "win_rate": 0.65}, "success": true, "timestamp": "2025-09-23T16:32:02.185Z"}

      25 |
      26 |       if (response.status === 200) {
    > 27 |         expect(response.body).toHaveProperty("message");
         |                               ^
      28 |         expect(response.body).toHaveProperty("timestamp");
      29 |         expect(response.body).toHaveProperty("status", "operational");
      30 |         expect(response.body.message).toContain("Performance Analytics API");

      at Object.toHaveProperty (tests/integration/routes/performance.integration.test.js:27:31)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/health (Health Check) ‚Ä∫ should return performance service health status

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      40 |       const response = await request(app).get("/api/performance/health");
      41 |
    > 42 |       expect(response.status).toBe(200);
         |                               ^
      43 |
      44 |       if (response.status === 200) {
      45 |         expect(response.body).toHaveProperty("status", "operational");

      at Object.toBe (tests/integration/routes/performance.integration.test.js:42:31)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/benchmark (Benchmark Comparison) ‚Ä∫ should require authentication for benchmark comparison

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      64 |       const response = await request(app).get("/api/performance/benchmark");
      65 |
    > 66 |       expect([401].includes(response.status)).toBe(true);
         |                                               ^
      67 |     });
      68 |
      69 |     test("should return benchmark comparison with authentication", async () => {

      at Object.toBe (tests/integration/routes/performance.integration.test.js:66:47)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/benchmark (Benchmark Comparison) ‚Ä∫ should return benchmark comparison with authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      72 |         .set("Authorization", `Bearer ${authToken}`);
      73 |
    > 74 |       expect([200, 401].includes(response.status)).toBe(true);
         |                                                    ^
      75 |
      76 |       if (response.status === 200) {
      77 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/performance.integration.test.js:74:52)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/benchmark (Benchmark Comparison) ‚Ä∫ should handle different benchmark symbols

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      100 |           .set("Authorization", `Bearer ${authToken}`);
      101 |
    > 102 |         expect([200, 400, 401].includes(response.status)).toBe(true);
          |                                                           ^
      103 |
      104 |         if (response.status === 200 && response.body.data.benchmark) {
      105 |           expect(response.body.data.benchmark).toHaveProperty(

      at Object.toBe (tests/integration/routes/performance.integration.test.js:102:59)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/benchmark (Benchmark Comparison) ‚Ä∫ should handle different time periods

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      119 |           .set("Authorization", `Bearer ${authToken}`);
      120 |
    > 121 |         expect([200, 400, 401].includes(response.status)).toBe(true);
          |                                                           ^
      122 |
      123 |         if (response.status === 200 && response.body.data.comparison) {
      124 |           expect(response.body.data.comparison).toHaveProperty(

      at Object.toBe (tests/integration/routes/performance.integration.test.js:121:59)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/portfolio (Portfolio Performance) ‚Ä∫ should require authentication for portfolio performance

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      168 |       const response = await request(app).get("/api/performance/portfolio");
      169 |
    > 170 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      171 |     });
      172 |
      173 |     test("should return portfolio performance data with authentication", async () => {

      at Object.toBe (tests/integration/routes/performance.integration.test.js:170:47)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/portfolio (Portfolio Performance) ‚Ä∫ should return portfolio performance data with authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      176 |         .set("Authorization", `Bearer ${authToken}`);
      177 |
    > 178 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      179 |
      180 |       if (response.status === 200) {
      181 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/performance.integration.test.js:178:52)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/portfolio (Portfolio Performance) ‚Ä∫ should handle period parameter for portfolio performance

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      205 |           .set("Authorization", `Bearer ${authToken}`);
      206 |
    > 207 |         expect([200, 400, 401].includes(response.status)).toBe(true);
          |                                                           ^
      208 |       }
      209 |     });
      210 |

      at Object.toBe (tests/integration/routes/performance.integration.test.js:207:59)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/returns (Return Calculations) ‚Ä∫ should require authentication for return calculations

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      257 |       const response = await request(app).get("/api/performance/returns");
      258 |
    > 259 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      260 |     });
      261 |
      262 |     test("should return return calculations with authentication", async () => {

      at Object.toBe (tests/integration/routes/performance.integration.test.js:259:47)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/returns (Return Calculations) ‚Ä∫ should return return calculations with authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      265 |         .set("Authorization", `Bearer ${authToken}`);
      266 |
    > 267 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      268 |
      269 |       if (response.status === 200) {
      270 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/performance.integration.test.js:267:52)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/returns (Return Calculations) ‚Ä∫ should handle calculation type parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      301 |           .set("Authorization", `Bearer ${authToken}`);
      302 |
    > 303 |         expect([200, 400, 401].includes(response.status)).toBe(true);
          |                                                           ^
      304 |       }
      305 |     });
      306 |   });

      at Object.toBe (tests/integration/routes/performance.integration.test.js:303:59)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/attribution (Performance Attribution) ‚Ä∫ should require authentication for performance attribution

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      310 |       const response = await request(app).get("/api/performance/attribution");
      311 |
    > 312 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      313 |     });
      314 |
      315 |     test("should return performance attribution analysis", async () => {

      at Object.toBe (tests/integration/routes/performance.integration.test.js:312:47)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/attribution (Performance Attribution) ‚Ä∫ should return performance attribution analysis

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      318 |         .set("Authorization", `Bearer ${authToken}`);
      319 |
    > 320 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      321 |
      322 |       if (response.status === 200) {
      323 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/performance.integration.test.js:320:52)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/attribution (Performance Attribution) ‚Ä∫ should handle attribution type parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      354 |           .set("Authorization", `Bearer ${authToken}`);
      355 |
    > 356 |         expect([200, 400, 401].includes(response.status)).toBe(true);
          |                                                           ^
      357 |       }
      358 |     });
      359 |   });

      at Object.toBe (tests/integration/routes/performance.integration.test.js:356:59)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/metrics (Performance Metrics) ‚Ä∫ should require authentication for performance metrics

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      363 |       const response = await request(app).get("/api/performance/metrics");
      364 |
    > 365 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      366 |     });
      367 |
      368 |     test("should return comprehensive performance metrics", async () => {

      at Object.toBe (tests/integration/routes/performance.integration.test.js:365:47)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/metrics (Performance Metrics) ‚Ä∫ should return comprehensive performance metrics

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      371 |         .set("Authorization", `Bearer ${authToken}`);
      372 |
    > 373 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      374 |
      375 |       if (response.status === 200) {
      376 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/performance.integration.test.js:373:52)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/metrics (Performance Metrics) ‚Ä∫ should handle period parameter for metrics

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      435 |           .set("Authorization", `Bearer ${authToken}`);
      436 |
    > 437 |         expect([200, 400, 401].includes(response.status)).toBe(true);
          |                                                           ^
      438 |       }
      439 |     });
      440 |   });

      at Object.toBe (tests/integration/routes/performance.integration.test.js:437:59)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/risk (Risk Metrics) ‚Ä∫ should require authentication for risk metrics

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      444 |       const response = await request(app).get("/api/performance/risk");
      445 |
    > 446 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      447 |     });
      448 |
      449 |     test("should return risk analysis metrics", async () => {

      at Object.toBe (tests/integration/routes/performance.integration.test.js:446:47)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/risk (Risk Metrics) ‚Ä∫ should return risk analysis metrics

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      452 |         .set("Authorization", `Bearer ${authToken}`);
      453 |
    > 454 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      455 |
      456 |       if (response.status === 200) {
      457 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/performance.integration.test.js:454:52)

  ‚óè Performance Routes Integration Tests ‚Ä∫ Performance and Edge Cases ‚Ä∫ should handle concurrent requests to performance endpoints

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      507 |
      508 |       responses.forEach((response) => {
    > 509 |         expect([200, 401].includes(response.status)).toBe(true);
          |                                                      ^
      510 |       });
      511 |     });
      512 |

      at toBe (tests/integration/routes/performance.integration.test.js:509:54)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/routes/performance.integration.test.js:508:17)

  ‚óè Performance Routes Integration Tests ‚Ä∫ Performance and Edge Cases ‚Ä∫ should maintain response time consistency

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      518 |       const responseTime = Date.now() - startTime;
      519 |
    > 520 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      521 |       expect(responseTime).toBeLessThan(15000);
      522 |     });
      523 |

      at Object.toBe (tests/integration/routes/performance.integration.test.js:520:52)

  ‚óè Performance Routes Integration Tests ‚Ä∫ Performance and Edge Cases ‚Ä∫ should handle invalid parameters gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      536 |           .set("Authorization", `Bearer ${authToken}`);
      537 |
    > 538 |         expect([200, 400, 401].includes(response.status)).toBe(true);
          |                                                           ^
      539 |       }
      540 |     });
      541 |

      at Object.toBe (tests/integration/routes/performance.integration.test.js:538:59)

  ‚óè Performance Routes Integration Tests ‚Ä∫ Performance and Edge Cases ‚Ä∫ should handle malformed authentication tokens

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      553 |           .set("Authorization", token);
      554 |
    > 555 |         expect([401].includes(response.status)).toBe(true);
          |                                                 ^
      556 |       }
      557 |     });
      558 |

      at Object.toBe (tests/integration/routes/performance.integration.test.js:555:49)

  ‚óè Performance Routes Integration Tests ‚Ä∫ Performance and Edge Cases ‚Ä∫ should handle database connection issues gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      597 |         .set("Authorization", `Bearer ${authToken}`);
      598 |
    > 599 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      600 |
      601 |       if (response.status >= 500) {
      602 |         expect(response.body).toHaveProperty("error");

      at Object.toBe (tests/integration/routes/performance.integration.test.js:599:52)

  ‚óè Performance Routes Integration Tests ‚Ä∫ Performance and Edge Cases ‚Ä∫ should handle memory pressure with large data requests

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      635 |       expect(
      636 |         [200, 400, 401, 403, 413, 500, 503].includes(response.status)
    > 637 |       ).toBe(true);
          |         ^
      638 |     });
      639 |   });
      640 | });

      at Object.toBe (tests/integration/routes/performance.integration.test.js:637:9)

::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance HTTP/1.1" 200 157 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/health HTTP/1.1" 404 128 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/benchmark HTTP/1.1" 404 131 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/benchmark HTTP/1.1" 404 131 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/benchmark?benchmark=SPY HTTP/1.1" 404 145 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/benchmark?period=1d HTTP/1.1" 404 141 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/benchmark?benchmark=SPY&period=1m HTTP/1.1" 404 155 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/portfolio HTTP/1.1" 404 131 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/portfolio HTTP/1.1" 404 131 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/portfolio?period=1d HTTP/1.1" 404 141 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/portfolio HTTP/1.1" 404 131 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/returns HTTP/1.1" 404 129 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/returns HTTP/1.1" 404 129 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/returns?type=time_weighted HTTP/1.1" 404 148 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/attribution HTTP/1.1" 404 133 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/attribution HTTP/1.1" 404 133 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/attribution?type=sector HTTP/1.1" 404 145 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/metrics HTTP/1.1" 404 129 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/metrics HTTP/1.1" 404 129 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/metrics HTTP/1.1" 404 129 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/metrics?period=1m HTTP/1.1" 404 139 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/risk HTTP/1.1" 404 126 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/risk HTTP/1.1" 404 126 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance HTTP/1.1" 200 157 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/benchmark HTTP/1.1" 404 131 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/portfolio HTTP/1.1" 404 131 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/returns HTTP/1.1" 404 129 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/metrics HTTP/1.1" 404 129 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/metrics HTTP/1.1" 404 129 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/portfolio?period=invalid HTTP/1.1" 404 146 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/portfolio HTTP/1.1" 404 131 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/benchmark HTTP/1.1" 404 131 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/portfolio HTTP/1.1" 404 131 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/returns HTTP/1.1" 404 129 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/metrics HTTP/1.1" 404 129 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/portfolio HTTP/1.1" 404 131 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance HTTP/1.1" 200 157 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/health HTTP/1.1" 404 128 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/benchmark HTTP/1.1" 404 131 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/portfolio HTTP/1.1" 404 131 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/returns HTTP/1.1" 404 129 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/metrics HTTP/1.1" 404 129 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/performance/portfolio?period=10y HTTP/1.1" 404 142 "-" "-"
FAIL tests/integration/middleware/errorHandler-middleware.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Portfolio positions requested for user: dev-user-bypass

      at log (routes/portfolio.js:258:13)

    console.log
      Calendar events endpoint called with params: {}

      at log (routes/calendar.js:371:13)

    console.log
      üìä Retrieving backtest results for ID: nonexistent-id

      at log (routes/backtest.js:20:13)

    console.error
      Error: SyntaxError: Unexpected token 'j', "{"malformed": json}" is not valid JSON
          at JSON.parse (<anonymous>)
          at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
          at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
          at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
          at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
          at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
          at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
          at IncomingMessage.emit (node:events:524:28)
          at endReadableNT (node:internal/streams/readable:1698:12)
          at processTicksAndRejections (node:internal/process/task_queues:82:21) {
        expose: true,
        statusCode: 400,
        status: 400,
        body: '{"malformed": json}',
        type: 'entity.parse.failed'
      }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìÖ Earnings calendar requested - symbol: '; DROP TABLE users; --, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Portfolio summary requested for user: dev-user-bypass

      at log (routes/portfolio.js:174:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 5ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Portfolio positions requested for user: dev-user-bypass

      at log (routes/portfolio.js:258:13)

    console.log
      Calendar events endpoint called with params: {}

      at log (routes/calendar.js:371:13)

    console.log
      üìä Backtest results requested - ID: all, limit: 50

      at log (routes/backtest.js:855:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Error Handler Middleware Integration ‚Ä∫ Error Security and Information Disclosure ‚Ä∫ should not expose sensitive information in error responses

    expect(received).not.toMatch(expected)

    Expected pattern: not /password|secret|key|token|database|connection|stack|trace|internal/
    Received string:      "invalid token"

      142 |           // Should not expose sensitive internal information
      143 |           const errorMessage = response.body.error.toLowerCase();
    > 144 |           expect(errorMessage).not.toMatch(
          |                                    ^
      145 |             /password|secret|key|token|database|connection|stack|trace|internal/
      146 |           );
      147 |           expect(errorMessage).not.toMatch(

      at Object.toMatch (tests/integration/middleware/errorHandler-middleware.integration.test.js:144:36)

  ‚óè Error Handler Middleware Integration ‚Ä∫ Error Response Headers ‚Ä∫ should handle CORS headers in error responses

    expect(received).toContain(expected) // indexOf

    Expected value: 204
    Received array: [200, 404, 500, 501]

      214 |
      215 |       // CORS preflight for non-existent endpoint
    > 216 |       expect([200, 404, 500, 501]).toContain(response.status);
          |                                    ^
      217 |
      218 |       // Should still handle CORS appropriately even for errors
      219 |       if (response.headers["access-control-allow-origin"]) {

      at Object.toContain (tests/integration/middleware/errorHandler-middleware.integration.test.js:216:36)

  ‚óè Error Handler Middleware Integration ‚Ä∫ Error Handling Consistency Across Routes ‚Ä∫ should maintain consistent error format across all routes

    expect(received).toBe(expected) // Object.is equality

    Expected: 404
    Received: 401

      295 |         const response = await request(app).get(scenario.endpoint);
      296 |
    > 297 |         expect(response.status).toBe(scenario.expectedStatus);
          |                                 ^
      298 |         expect(response.body).toHaveProperty("success", false);
      299 |         expect(response.body).toHaveProperty("error");
      300 |         expect(response.headers["content-type"]).toMatch(/application\/json/);

      at Object.toBe (tests/integration/middleware/errorHandler-middleware.integration.test.js:297:33)

::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/nonexistent HTTP/1.1" 404 121 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/portfolio/invalid-endpoint HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/calendar/nonexistent-calendar-type HTTP/1.1" 404 144 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/calendar/events HTTP/1.1" 200 223 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/backtest/results/nonexistent-id HTTP/1.1" 404 194 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/nonexistent-endpoint HTTP/1.1" 404 130 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "POST /api/portfolio/invalid-action HTTP/1.1" 404 134 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/nonexistent-endpoint HTTP/1.1" 404 130 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "POST /api/portfolio/positions HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/calendar/earnings?symbol=%27;%20DROP%20TABLE%20users;%20-- HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/nonexistent-endpoint HTTP/1.1" 404 130 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/portfolio/summary HTTP/1.1" 200 656 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/calendar/events HTTP/1.1" 200 223 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/backtest/results HTTP/1.1" 200 2299 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/invalid HTTP/1.1" 404 117 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "GET /api/portfolio/invalid HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "POST /api/health HTTP/1.1" 404 116 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "PUT /api/calendar/earnings HTTP/1.1" 404 127 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:02 +0000] "DELETE /api/market/overview HTTP/1.1" 404 125 "-" "-"
FAIL tests/integration/analytics/sectors.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      Processing request: GET /api/sectors/performance

      at log (index.js:403:11)

    console.log
      Initializing database connection...

      at log (index.js:362:13)

    console.log
      Database connection established successfully

      at log (index.js:388:17)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìà Sector performance requested, period: 1m, limit: 10

      at log (routes/sectors.js:339:13)

    console.log
      üîç No sector performance data found, checking tables...

      at log (routes/sectors.js:404:15)

    console.log
      üìä Company profiles with sectors: 0

      at log (routes/sectors.js:410:15)

    console.log
      üìä Recent price data records: 400

      at log (routes/sectors.js:416:15)

    console.log
      Processing request: GET /api/sectors/rotation

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üîÑ Sector rotation analysis requested, timeframe: 3m

      at log (routes/sectors.js:817:13)

    console.log
      Processing request: GET /api/sectors/technology/stocks

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìä Fetching stocks for sector: technology

      at log (routes/sectors.js:38:13)

    console.log
      ‚úÖ Found 0 stocks in technology sector

      at log (routes/sectors.js:75:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Sectors Analysis API ‚Ä∫ Sector Rotation ‚Ä∫ should analyze sector rotation patterns

    expect(received).toBeTruthy()

    Received: false

      52 |           );
      53 |
    > 54 |           expect(hasRotationData || Array.isArray(data)).toBeTruthy();
         |                                                          ^
      55 |         }
      56 |       }
      57 |     });

      at Object.toBeTruthy (tests/integration/analytics/sectors.test.js:54:58)

::ffff:127.0.0.1 - - [23/Sep/2025:16:32:03 +0000] "GET /api/sectors/performance HTTP/1.1" 200 180 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:03 +0000] "GET /api/sectors/rotation HTTP/1.1" 200 734 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:03 +0000] "GET /api/sectors/technology/stocks HTTP/1.1" 200 121 "-" "-"
FAIL tests/integration/routes/price.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üí∞ Current price requested for AAPL

      at log (routes/price.js:43:13)

    console.log
      üí∞ Current price requested for INVALID

      at log (routes/price.js:43:13)

    console.log
      ‚ùå Invalid symbol format: INVALID

      at log (routes/price.js:61:17)

    console.log
      üìà Price history requested for AAPL (period: 1Y)

      at log (routes/price.js:119:13)

    console.log
      üìà Price history requested for AAPL (period: 1M)

      at log (routes/price.js:119:13)

    console.log
      ‚è∞ Intraday data requested for AAPL (interval: 5m)

      at log (routes/price.js:176:13)

    console.log
      ‚è∞ Intraday data requested for AAPL (interval: 5min)

      at log (routes/price.js:176:13)

    console.log
      üìä Batch price request for 3 symbols

      at log (routes/price.js:247:13)

    console.log
      üí∞ Current price requested for ALERTS

      at log (routes/price.js:43:13)

    console.log
      ‚ùå Invalid symbol format: ALERTS

      at log (routes/price.js:61:17)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Price Routes ‚Ä∫ GET /api/price/alerts ‚Ä∫ should return price alerts

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

       96 |       const response = await request(app).get("/api/price/alerts");
       97 |
    >  98 |       expect(response.status).toBe(200);
          |                               ^
       99 |
      100 |       if (response.status === 200) {
      101 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/price.integration.test.js:98:31)

::ffff:127.0.0.1 - - [23/Sep/2025:16:32:03 +0000] "GET /api/price/AAPL HTTP/1.1" 200 260 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:03 +0000] "GET /api/price/INVALID HTTP/1.1" 404 131 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:03 +0000] "GET /api/price/AAPL/history HTTP/1.1" 200 416 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:03 +0000] "GET /api/price/AAPL/history?period=1M HTTP/1.1" 200 416 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:03 +0000] "GET /api/price/AAPL/intraday HTTP/1.1" 200 571 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:03 +0000] "GET /api/price/AAPL/intraday?interval=5min HTTP/1.1" 200 571 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:03 +0000] "POST /api/price/batch HTTP/1.1" 200 659 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:03 +0000] "POST /api/price/batch HTTP/1.1" 400 92 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:03 +0000] "GET /api/price/alerts HTTP/1.1" 404 130 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:03 +0000] "POST /api/price/alerts HTTP/1.1" 400 179 "-" "-"
FAIL tests/unit/routes/market.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      [MARKET] Debug endpoint called

      at log (routes/market.js:297:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 5ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market sectors endpoint called

      at log (routes/market.js:762:13)

    console.log
      Economic indicators endpoint called for 90 days

      at log (routes/market.js:1486:11)

    console.log
      Found 0 economic data points

      at log (routes/market.js:1548:13)

    console.log
      Processed 0 economic indicators

      at log (routes/market.js:1563:13)

    console.error
      No economic data found in database

      1566 |
      1567 |     if (!result || !Array.isArray(result.rows) || result.rows.length === 0) {
    > 1568 |       console.error("No economic data found in database");
           |               ^
      1569 |       return res.status(404).json({
      1570 |         success: false,
      1571 |         error: "No economic indicators data available",

      at error (routes/market.js:1568:15)

    console.log
      üòä Market sentiment endpoint called

      at log (routes/market.js:1929:11)

    console.log
      üòä Market sentiment endpoint called

      at log (routes/market.js:1929:11)

    console.log
      üìä Market data endpoint called

      at log (routes/market.js:71:13)

    console.log
      üìä Market data endpoint called

      at log (routes/market.js:71:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 4ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 4ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Sector performance endpoint called

      at log (routes/market.js:939:11)

    console.error
      Database query error: {
        error: 'column s.ticker does not exist',
        query: '\n' +
          '      SELECT \n' +
          '        s.sector,\n' +
          '        COUNT(*) as stock_count,\n' +
          '        AVG(CASE WHEN ((pd.close -...',
        params: 'no parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/market.js:990:16

    console.error
      Sector performance query error: column s.ticker does not exist

      990 |       result = await query(sectorQuery);
      991 |     } catch (error) {
    > 992 |       console.error("Sector performance query error:", error.message);
          |               ^
      993 |
      994 |       // Fallback to simple sector data from fundamental_metrics only
      995 |       const fallbackQuery = `

      at error (routes/market.js:992:15)

    console.log
      Sector performance endpoint called

      at log (routes/market.js:939:11)

    console.error
      Database query error: {
        error: 'column s.ticker does not exist',
        query: '\n' +
          '      SELECT \n' +
          '        s.sector,\n' +
          '        COUNT(*) as stock_count,\n' +
          '        AVG(CASE WHEN ((pd.close -...',
        params: 'no parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/market.js:990:16

    console.error
      Sector performance query error: column s.ticker does not exist

      990 |       result = await query(sectorQuery);
      991 |     } catch (error) {
    > 992 |       console.error("Sector performance query error:", error.message);
          |               ^
      993 |
      994 |       // Fallback to simple sector data from fundamental_metrics only
      995 |       const fallbackQuery = `

      at error (routes/market.js:992:15)

    console.log
      üìà Economic indicators - generating simulated data for category: all

      at log (routes/market.js:1070:13)

    console.log
      üìà Economic indicators - generating simulated data for category: inflation

      at log (routes/market.js:1070:13)

    console.log
      üìà Economic indicators - generating simulated data for category: all

      at log (routes/market.js:1070:13)

    console.log
      Market breadth endpoint called

      at log (routes/market.js:1355:11)

    console.log
      Market breadth endpoint called

      at log (routes/market.js:1355:11)

    console.log
      üìä Market summary requested

      at log (routes/market.js:146:13)

    console.log
      üìä Market summary requested

      at log (routes/market.js:146:13)

    console.log
      NAAIM data endpoint called with limit: 30

      at log (routes/market.js:1622:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 4ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      üìà Economic indicators - generating simulated data for category:

      at log (routes/market.js:1070:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Market Routes Unit Tests ‚Ä∫ GET /market/economic ‚Ä∫ should return economic data

    expected 200 "OK", got 404 "Not Found"

      71 |   describe("GET /market/economic", () => {
      72 |     test("should return economic data", async () => {
    > 73 |       const response = await request(app).get("/market/economic").expect(200);
         |                                                                   ^
      74 |
      75 |       expect(response.body).toHaveProperty("success");
      76 |     });

      at Object.expect (tests/unit/routes/market.test.js:73:67)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Market Routes Unit Tests ‚Ä∫ GET /market/sectors/performance ‚Ä∫ should return sector performance data

    expected 200 "OK", got 404 "Not Found"

      175 |       const response = await request(app)
      176 |         .get("/market/sectors/performance")
    > 177 |         .expect(200);
          |          ^
      178 |
      179 |       expect(response.body).toBeDefined();
      180 |       expect(typeof response.body).toBe("object");

      at Object.expect (tests/unit/routes/market.test.js:177:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Market Routes Unit Tests ‚Ä∫ GET /market/sectors/performance ‚Ä∫ should handle sector performance with timeframe

    expected 200 "OK", got 404 "Not Found"

      185 |       const response = await request(app)
      186 |         .get("/market/sectors/performance?timeframe=1d")
    > 187 |         .expect(200);
          |          ^
      188 |
      189 |       expect(response.body).toBeDefined();
      190 |       expect(typeof response.body).toBe("object");

      at Object.expect (tests/unit/routes/market.test.js:187:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Market Routes Unit Tests ‚Ä∫ GET /market/breadth ‚Ä∫ should return market breadth data

    expect(received).toHaveProperty(path)

    Expected path: "data"
    Received path: []

    Received value: {"advance_decline_ratio": "0.92", "advancing": 24, "avg_change": "-0.22", "avg_volume": 5878021, "declining": 26, "strong_advancing": 0, "strong_declining": 0, "total_stocks": 50, "unchanged": 0}

      241 |       expect(response.body).toBeDefined();
      242 |       expect(typeof response.body).toBe("object");
    > 243 |       expect(response.body).toHaveProperty("data");
          |                             ^
      244 |     });
      245 |
      246 |     test("should handle breadth with parameters", async () => {

      at Object.toHaveProperty (tests/unit/routes/market.test.js:243:29)

FAIL tests/integration/analytics/dashboard.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      Processing request: GET /api/dashboard

      at log (index.js:403:11)

    console.log
      Initializing database connection...

      at log (index.js:362:13)

    console.log
      Database connection established successfully

      at log (index.js:388:17)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/dashboard

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/dashboard/market-summary

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/dashboard/indices

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/dashboard/portfolio

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/dashboard/portfolio/top-positions

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/dashboard/watchlists

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üîß Test mode: Using test-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Dashboard watchlists requested for user: test-user-123

      at log (routes/dashboard.js:1466:13)

    console.log
      Processing request: GET /api/dashboard/watchlists/performance

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üîß Test mode: Using test-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Dashboard watchlist performance requested for user: test-user-123

      at log (routes/dashboard.js:1524:13)

    console.log
      Processing request: GET /api/dashboard/news

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/dashboard/news/personalized

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/dashboard/alerts/recent

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/dashboard/alerts/summary

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: POST /api/dashboard/layout

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/dashboard/preferences

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Dashboard API ‚Ä∫ Dashboard Overview ‚Ä∫ should retrieve comprehensive dashboard data

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      33 |         );
      34 |
    > 35 |         expect(hasDashboardData).toBe(true);
         |                                  ^
      36 |       }
      37 |     });
      38 |

      at Object.toBe (tests/integration/analytics/dashboard.test.js:35:34)

  ‚óè Dashboard API ‚Ä∫ Dashboard Overview ‚Ä∫ should handle unauthorized dashboard access

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 500]

      40 |       const response = await request(app).get("/api/dashboard");
      41 |
    > 42 |       expect([401, 500]).toContain(response.status);
         |                          ^
      43 |     });
      44 |   });
      45 |

      at Object.toContain (tests/integration/analytics/dashboard.test.js:42:26)

  ‚óè Dashboard API ‚Ä∫ Market Summary ‚Ä∫ should provide market summary for dashboard

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      48 |       const response = await request(app).get("/api/dashboard/market-summary");
      49 |
    > 50 |       expect(response.status).toBe(200);
         |                               ^
      51 |
      52 |       if (response.status === 200) {
      53 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/dashboard.test.js:50:31)

  ‚óè Dashboard API ‚Ä∫ Market Summary ‚Ä∫ should include major market indices

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      66 |       const response = await request(app).get("/api/dashboard/indices");
      67 |
    > 68 |       expect(response.status).toBe(200);
         |                               ^
      69 |
      70 |       if (response.status === 200) {
      71 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/dashboard.test.js:68:31)

  ‚óè Dashboard API ‚Ä∫ Portfolio Widget ‚Ä∫ should retrieve portfolio summary for dashboard

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

       95 |         .set("Authorization", "Bearer test-token");
       96 |
    >  97 |       expect(response.status).toBe(200);
          |                               ^
       98 |
       99 |       if (response.status === 200) {
      100 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/dashboard.test.js:97:31)

  ‚óè Dashboard API ‚Ä∫ Portfolio Widget ‚Ä∫ should show top portfolio positions

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      122 |         .set("Authorization", "Bearer test-token");
      123 |
    > 124 |       expect(response.status).toBe(200);
          |                               ^
      125 |
      126 |       if (response.status === 200) {
      127 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/dashboard.test.js:124:31)

  ‚óè Dashboard API ‚Ä∫ Watchlist Widget ‚Ä∫ should show watchlist performance

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      156 |         .set("Authorization", "Bearer test-token");
      157 |
    > 158 |       expect(response.status).toBe(200);
          |                               ^
      159 |
      160 |       if (response.status === 200) {
      161 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/dashboard.test.js:158:31)

  ‚óè Dashboard API ‚Ä∫ News Widget ‚Ä∫ should provide market news for dashboard

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      168 |       const response = await request(app).get("/api/dashboard/news?limit=10");
      169 |
    > 170 |       expect(response.status).toBe(200);
          |                               ^
      171 |
      172 |       if (response.status === 200) {
      173 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/dashboard.test.js:170:31)

  ‚óè Dashboard API ‚Ä∫ News Widget ‚Ä∫ should provide personalized news based on portfolio

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      188 |         .set("Authorization", "Bearer test-token");
      189 |
    > 190 |       expect(response.status).toBe(200);
          |                               ^
      191 |
      192 |       if (response.status === 200) {
      193 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/dashboard.test.js:190:31)

  ‚óè Dashboard API ‚Ä∫ Alerts Widget ‚Ä∫ should show recent alerts

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      203 |         .set("Authorization", "Bearer test-token");
      204 |
    > 205 |       expect(response.status).toBe(200);
          |                               ^
      206 |
      207 |       if (response.status === 200) {
      208 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/dashboard.test.js:205:31)

  ‚óè Dashboard API ‚Ä∫ Alerts Widget ‚Ä∫ should show alert summary

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      216 |         .set("Authorization", "Bearer test-token");
      217 |
    > 218 |       expect(response.status).toBe(200);
          |                               ^
      219 |
      220 |       if (response.status === 200) {
      221 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/dashboard.test.js:218:31)

  ‚óè Dashboard API ‚Ä∫ Dashboard Customization ‚Ä∫ should save dashboard layout preferences

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      251 |         .send(layoutConfig);
      252 |
    > 253 |       expect(response.status).toBe(200);
          |                               ^
      254 |
      255 |       if (response.status === 200 || response.status === 201) {
      256 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/dashboard.test.js:253:31)

  ‚óè Dashboard API ‚Ä∫ Dashboard Customization ‚Ä∫ should retrieve user dashboard preferences

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      264 |         .set("Authorization", "Bearer test-token");
      265 |
    > 266 |       expect(response.status).toBe(200);
          |                               ^
      267 |
      268 |       if (response.status === 200) {
      269 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/dashboard.test.js:266:31)

::ffff:127.0.0.1 - - [23/Sep/2025:16:32:04 +0000] "GET /api/dashboard HTTP/1.1" 200 436 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:04 +0000] "GET /api/dashboard HTTP/1.1" 200 436 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:04 +0000] "GET /api/dashboard/market-summary HTTP/1.1" 404 650 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:04 +0000] "GET /api/dashboard/indices HTTP/1.1" 404 629 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:04 +0000] "GET /api/dashboard/portfolio HTTP/1.1" 404 635 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:04 +0000] "GET /api/dashboard/portfolio/top-positions?limit=5 HTTP/1.1" 404 701 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:04 +0000] "GET /api/dashboard/watchlists HTTP/1.1" 200 75 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:04 +0000] "GET /api/dashboard/watchlists/performance HTTP/1.1" 404 144 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:04 +0000] "GET /api/dashboard/news?limit=10 HTTP/1.1" 404 647 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:04 +0000] "GET /api/dashboard/news/personalized HTTP/1.1" 404 659 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:04 +0000] "GET /api/dashboard/alerts/recent HTTP/1.1" 404 647 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:04 +0000] "GET /api/dashboard/alerts/summary HTTP/1.1" 404 650 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:04 +0000] "POST /api/dashboard/layout HTTP/1.1" 404 626 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:04 +0000] "GET /api/dashboard/preferences HTTP/1.1" 404 641 "-" "-"
FAIL tests/integration/services/aiStrategyGenerator.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè AI Strategy Generator Service Integration Tests ‚Ä∫ Strategy Generation Workflow ‚Ä∫ should generate strategy from natural language description

    TypeError: generator.generateStrategy is not a function

      62 |       };
      63 |
    > 64 |       const result = await generator.generateStrategy(description, preferences);
         |                                      ^
      65 |
      66 |       expect(result).toHaveProperty("success", true);
      67 |       expect(result).toHaveProperty("strategy");

      at Object.generateStrategy (tests/integration/services/aiStrategyGenerator.test.js:64:38)

  ‚óè AI Strategy Generator Service Integration Tests ‚Ä∫ Strategy Generation Workflow ‚Ä∫ should handle different asset types

    TypeError: generator.generateStrategy is not a function

      76 |       const description = "Simple moving average crossover strategy";
      77 |
    > 78 |       const stockResult = await generator.generateStrategy(description, {
         |                                           ^
      79 |         risk_level: "low",
      80 |         timeframe: "1hour",
      81 |         asset_type: "stock",

      at Object.generateStrategy (tests/integration/services/aiStrategyGenerator.test.js:78:43)

  ‚óè AI Strategy Generator Service Integration Tests ‚Ä∫ Strategy Generation Workflow ‚Ä∫ should validate generated strategies

    TypeError: generator.generateStrategy is not a function

      102 |       };
      103 |
    > 104 |       const result = await generator.generateStrategy(description, preferences);
          |                                      ^
      105 |
      106 |       expect(result.success).toBe(true);
      107 |       expect(result.strategy).toHaveProperty("validation");

      at Object.generateStrategy (tests/integration/services/aiStrategyGenerator.test.js:104:38)

  ‚óè AI Strategy Generator Service Integration Tests ‚Ä∫ Strategy Generation Workflow ‚Ä∫ should handle complex multi-indicator strategies

    TypeError: generator.generateStrategy is not a function

      120 |       };
      121 |
    > 122 |       const result = await generator.generateStrategy(description, preferences);
          |                                      ^
      123 |
      124 |       expect(result.success).toBe(true);
      125 |       expect(result.strategy.code).toContain("rsi");

      at Object.generateStrategy (tests/integration/services/aiStrategyGenerator.test.js:122:38)

  ‚óè AI Strategy Generator Service Integration Tests ‚Ä∫ Strategy Optimization ‚Ä∫ should optimize strategy parameters

    TypeError: generator.optimizeStrategy is not a function

      147 |       };
      148 |
    > 149 |       const result = await generator.optimizeStrategy(strategy, {
          |                                      ^
      150 |         optimization_method: "grid_search",
      151 |         metric: "sharpe_ratio",
      152 |       });

      at Object.optimizeStrategy (tests/integration/services/aiStrategyGenerator.test.js:149:38)

  ‚óè AI Strategy Generator Service Integration Tests ‚Ä∫ Strategy Optimization ‚Ä∫ should provide optimization explanations

    TypeError: generator.optimizeStrategy is not a function

      167 |       };
      168 |
    > 169 |       const result = await generator.optimizeStrategy(strategy, {
          |                                      ^
      170 |         optimization_method: "bayesian",
      171 |         metric: "total_return",
      172 |       });

      at Object.optimizeStrategy (tests/integration/services/aiStrategyGenerator.test.js:169:38)

  ‚óè AI Strategy Generator Service Integration Tests ‚Ä∫ Strategy Explanation and Documentation ‚Ä∫ should explain strategy logic clearly

    TypeError: generator.generateStrategy is not a function

      194 |       };
      195 |
    > 196 |       const result = await generator.generateStrategy(description, preferences);
          |                                      ^
      197 |
      198 |       expect(result.success).toBe(true);
      199 |       expect(result.strategy.explanation).toContain("RSI");

      at Object.generateStrategy (tests/integration/services/aiStrategyGenerator.test.js:196:38)

  ‚óè AI Strategy Generator Service Integration Tests ‚Ä∫ Strategy Explanation and Documentation ‚Ä∫ should provide educational content

    TypeError: generator.explainStrategy is not a function

      208 |       };
      209 |
    > 210 |       const result = await generator.explainStrategy(strategy);
          |                                      ^
      211 |
      212 |       expect(result).toHaveProperty("success", true);
      213 |       expect(result).toHaveProperty("explanation");

      at Object.explainStrategy (tests/integration/services/aiStrategyGenerator.test.js:210:38)

  ‚óè AI Strategy Generator Service Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle invalid strategy descriptions gracefully

    TypeError: generator.generateStrategy is not a function

      234 |       };
      235 |
    > 236 |       const result = await generator.generateStrategy(
          |                                      ^
      237 |         invalidDescription,
      238 |         preferences
      239 |       );

      at Object.generateStrategy (tests/integration/services/aiStrategyGenerator.test.js:236:38)

  ‚óè AI Strategy Generator Service Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle malformed preferences

    TypeError: generator.generateStrategy is not a function

      252 |       };
      253 |
    > 254 |       const result = await generator.generateStrategy(
          |                                      ^
      255 |         description,
      256 |         invalidPreferences
      257 |       );

      at Object.generateStrategy (tests/integration/services/aiStrategyGenerator.test.js:254:38)

  ‚óè AI Strategy Generator Service Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should fallback to templates when AI is unavailable

    TypeError: generator.generateStrategy is not a function

      274 |       };
      275 |
    > 276 |       const result = await generator.generateStrategy(description, preferences);
          |                                      ^
      277 |
      278 |       expect(result.success).toBe(true);
      279 |       expect(result.strategy.code).toContain("def run_strategy");

      at Object.generateStrategy (tests/integration/services/aiStrategyGenerator.test.js:276:38)

  ‚óè AI Strategy Generator Service Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle timeout scenarios

    TypeError: generator.generateStrategy is not a function

      293 |       generator.aiConfig.timeout = 100; // 100ms
      294 |
    > 295 |       const result = await generator.generateStrategy(description, preferences);
          |                                      ^
      296 |
      297 |       // Should either succeed quickly or fail gracefully with timeout
      298 |       expect(typeof result.success).toBe("boolean");

      at Object.generateStrategy (tests/integration/services/aiStrategyGenerator.test.js:295:38)

  ‚óè AI Strategy Generator Service Integration Tests ‚Ä∫ Performance and Metrics ‚Ä∫ should track generation performance metrics

    TypeError: generator.generateStrategy is not a function

      322 |
      323 |       const startTime = Date.now();
    > 324 |       const result = await generator.generateStrategy(description, preferences);
          |                                      ^
      325 |       const endTime = Date.now();
      326 |
      327 |       expect(result.success).toBe(true);

      at Object.generateStrategy (tests/integration/services/aiStrategyGenerator.test.js:324:38)

  ‚óè AI Strategy Generator Service Integration Tests ‚Ä∫ Performance and Metrics ‚Ä∫ should handle concurrent strategy generation requests

    TypeError: generator.generateStrategy is not a function

      338 |       for (let i = 0; i < 3; i++) {
      339 |         requests.push(
    > 340 |           generator.generateStrategy(`RSI strategy ${i}`, {
          |                     ^
      341 |             risk_level: "medium",
      342 |             timeframe: "1day",
      343 |             asset_type: "stock",

      at Object.generateStrategy (tests/integration/services/aiStrategyGenerator.test.js:340:21)

  ‚óè AI Strategy Generator Service Integration Tests ‚Ä∫ Integration with Backend Services ‚Ä∫ should integrate with database for strategy storage

    TypeError: generator.generateStrategy is not a function

      371 |       };
      372 |
    > 373 |       const result = await generator.generateStrategy(description, preferences);
          |                                      ^
      374 |
      375 |       expect(result.success).toBe(true);
      376 |

      at Object.generateStrategy (tests/integration/services/aiStrategyGenerator.test.js:373:38)

  ‚óè AI Strategy Generator Service Integration Tests ‚Ä∫ Integration with Backend Services ‚Ä∫ should provide strategy export formats

    TypeError: generator.exportStrategy is not a function

      390 |       };
      391 |
    > 392 |       const exportResult = await generator.exportStrategy(strategy, "json");
          |                                            ^
      393 |
      394 |       expect(exportResult).toHaveProperty("success", true);
      395 |       expect(exportResult).toHaveProperty("exported_strategy");

      at Object.exportStrategy (tests/integration/services/aiStrategyGenerator.test.js:392:44)

FAIL tests/unit/routes/technical.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.error
      Technical data table for daily timeframe not found

      1222 |
      1223 |     if (!tableExists.rows[0].exists) {
    > 1224 |       console.error(
           |               ^
      1225 |         `Technical data table for ${timeframe} timeframe not found`
      1226 |       );
      1227 |       return res.status(404).json({

      at error (routes/technical.js:1224:15)

    console.log
      üìä Weekly technical analysis requested for: SUMMARY

      at log (routes/technical.js:209:13)

    console.log
      üìä [TECHNICAL] Fetching technical data for AAPL

      at log (routes/technical.js:1272:11)

    console.log
      Technical data table not found for symbol AAPL, returning empty data

      at log (routes/technical.js:1288:15)

    console.log
      üìä [TECHNICAL] Fetching technical data for NONEXISTENT

      at log (routes/technical.js:1272:11)

    console.log
      Technical data table not found for symbol NONEXISTENT, returning empty data

      at log (routes/technical.js:1288:15)

    console.log
      üìä [TECHNICAL] Fetching technical data for AAPL

      at log (routes/technical.js:1272:11)

    console.log
      üìà [TECHNICAL] Fetching technical indicators for AAPL

      at log (routes/technical.js:1375:11)

    console.error
      ‚ùå [TECHNICAL] Error fetching technical indicators for AAPL: TypeError: Cannot read properties of undefined (reading 'exists')
          at exists (/home/stocks/algo/webapp/lambda/routes/technical.js:1390:67)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      1443 |     });
      1444 |   } catch (error) {
    > 1445 |     console.error(
           |             ^
      1446 |       `‚ùå [TECHNICAL] Error fetching technical indicators for ${symbol}:`,
      1447 |       error
      1448 |     );

      at error (routes/technical.js:1445:13)

    console.log
      üìä [TECHNICAL] Fetching technical history for AAPL (60 days)

      at log (routes/technical.js:1465:11)

    console.log
      Technical data table for daily timeframe not found for symbol AAPL

      at log (routes/technical.js:1590:15)

    console.log
      üîç [PATTERNS] Analyzing patterns for AAPL on 1D timeframe

      at log (routes/technical.js:2010:11)

    console.log
      Price data tables not available for pattern analysis

      at log (routes/technical.js:2314:15)

    console.log
      üîç [PATTERNS] Analyzing patterns for AAPL on 1D timeframe

      at log (routes/technical.js:2010:11)

    console.log
      üìä Technical chart requested - symbol: AAPL, period: 1M, interval: 1d

      at log (routes/technical.js:483:13)

    console.error
      Chart data tables not available or database connection failed

      500 |       !tableCheck.rows[0].exists
      501 |     ) {
    > 502 |       console.error(
          |               ^
      503 |         "Chart data tables not available or database connection failed"
      504 |       );
      505 |       return res.status(404).json({

      at error (routes/technical.js:502:15)

    console.log
      üìä Technical chart requested - symbol: MSFT, period: 1Y, interval: 1d

      at log (routes/technical.js:483:13)

    console.log
      üìä Technical chart requested - symbol: AAPL, period: 1M, interval: 1d

      at log (routes/technical.js:483:13)

    console.log
      üìä Technical chart requested - symbol: AAPL, period: 1M, interval: 1d

      at log (routes/technical.js:483:13)

    console.log
      üìä Technical chart requested - symbol: AAPL, period: 1M, interval: 1d

      at log (routes/technical.js:483:13)

    console.log
      üìä Technical chart requested - symbol: AAPL, period: 1M, interval: 1d

      at log (routes/technical.js:483:13)

    console.error
      Chart data tables not available or database connection failed

      500 |       !tableCheck.rows[0].exists
      501 |     ) {
    > 502 |       console.error(
          |               ^
      503 |         "Chart data tables not available or database connection failed"
      504 |       );
      505 |       return res.status(404).json({

      at error (routes/technical.js:502:15)

    console.log
      üìä Technical chart requested - symbol: AAPL, period: 1M, interval: 1d

      at log (routes/technical.js:483:13)

    console.log
      üìä Technical chart requested - symbol: AAPL, timeframe: invalid, period: 1m

      at log (routes/technical.js:585:13)

    console.log
      üìä Technical chart requested - symbol: AAPL, timeframe: daily, period: invalid

      at log (routes/technical.js:585:13)

    console.log
      üìä Technical chart requested - symbol: AAPL, timeframe: daily, period: 1m

      at log (routes/technical.js:585:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/ - Root technical endpoint ‚Ä∫ should return 503 when technical_data_daily table doesn't exist

    expected 503 "Service Unavailable", got 404 "Not Found"

      117 |       query.mockResolvedValueOnce(mockTableExists);
      118 |
    > 119 |       const response = await request(app).get("/technical/").expect(503);
          |                                                              ^
      120 |
      121 |       expect(response.body).toMatchObject({
      122 |         success: false,

      at Object.expect (tests/unit/routes/technical.test.js:119:62)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/:timeframe - Timeframe-based data ‚Ä∫ should return daily technical data with pagination

    expected 200 "OK", got 400 "Bad Request"

      162 |         .get("/technical/daily")
      163 |         .query({ page: 1, limit: 50 })
    > 164 |         .expect(200);
          |          ^
      165 |
      166 |       expect(response.body).toMatchObject({
      167 |         success: true,

      at Object.expect (tests/unit/routes/technical.test.js:164:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/:timeframe - Timeframe-based data ‚Ä∫ should validate timeframe parameter

    expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 3

      Object {
    -   "error": "Invalid timeframe. Use daily, weekly, or monthly.",
    +   "error": "Invalid symbol format. Use 1-5 letter stock symbols like AAPL",
    +   "success": false,
    +   "timestamp": "2025-09-23T16:32:05.113Z",
      }

      205 |         .expect(400);
      206 |
    > 207 |       expect(response.body).toEqual({
          |                             ^
      208 |         error: "Invalid timeframe. Use daily, weekly, or monthly.",
      209 |       });
      210 |     });

      at Object.toEqual (tests/unit/routes/technical.test.js:207:29)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/:timeframe - Timeframe-based data ‚Ä∫ should handle symbol filtering

    expected 200 "OK", got 400 "Bad Request"

      232 |         .get("/technical/daily")
      233 |         .query({ symbol: "AAPL" })
    > 234 |         .expect(200);
          |          ^
      235 |
      236 |       // Verify symbol filter was applied
      237 |       expect(query.mock.calls[2][1]).toContain("AAPL");

      at Object.expect (tests/unit/routes/technical.test.js:234:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/:timeframe - Timeframe-based data ‚Ä∫ should handle RSI filtering

    expected 200 "OK", got 400 "Bad Request"

      251 |         .get("/technical/daily")
      252 |         .query({ rsi_min: 70, rsi_max: 80 })
    > 253 |         .expect(200);
          |          ^
      254 |
      255 |       // Verify RSI filters were applied
      256 |       const countQuery = query.mock.calls[1][0];

      at Object.expect (tests/unit/routes/technical.test.js:253:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/:timeframe/summary - Technical summary ‚Ä∫ should return technical summary statistics

    expect(received).toMatchObject(expected)

    - Expected  - 17
    + Received  + 14

      Object {
    -   "summary": ObjectContaining {
    -     "averages": ObjectContaining {
    -       "macd": "0.1500",
    -       "rsi": "52.50",
    -       "sma20": "165.80",
    -       "volume": 35000000,
    +   "summary": Object {
    +     "averages": Object {
    +       "macd": null,
    +       "rsi": null,
    +       "sma20": null,
    +       "volume": null,
          },
    -     "dateRange": ObjectContaining {
    -       "earliest": "2024-01-01",
    -       "latest": "2025-07-16",
    -     },
    -     "totalRecords": 1250,
    -     "uniqueSymbols": 50,
    +     "dateRange": Object {},
    +     "totalRecords": null,
    +     "uniqueSymbols": null,
        },
        "timeframe": "daily",
    -   "topSymbols": ArrayContaining [
    -     ObjectContaining {
    -       "recordCount": 252,
    +   "topSymbols": Array [
    +     Object {
    +       "recordCount": null,
            "symbol": "AAPL",
          },
    -     ObjectContaining {
    -       "recordCount": 252,
    +     Object {
    +       "recordCount": null,
            "symbol": "MSFT",
          },
        ],
      }

      296 |         .expect(200);
      297 |
    > 298 |       expect(response.body).toMatchObject({
          |                             ^
      299 |         timeframe: "daily",
      300 |         summary: expect.objectContaining({
      301 |           totalRecords: 1250,

      at Object.toMatchObject (tests/unit/routes/technical.test.js:298:29)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/:timeframe/summary - Technical summary ‚Ä∫ should return fallback summary when table doesn't exist

    expect(received).toMatchObject(expected)

    - Expected  - 15
    + Received  +  8

      Object {
    -   "fallback": true,
    -   "summary": ObjectContaining {
    -     "averages": ObjectContaining {
    -       "macd": "0.1250",
    -       "rsi": "45.2",
    -     },
    -     "totalRecords": 1000,
    -     "uniqueSymbols": 50,
    +   "data": Object {
    +     "count": 1,
    +     "indicators": Array [
    +       Object {
    +         "exists": true,
            },
    +     ],
    +     "symbol": "SUMMARY",
          "timeframe": "weekly",
    -   "topSymbols": ArrayContaining [
    -     ObjectContaining {
    -       "symbol": "AAPL",
        },
    -     ObjectContaining {
    -       "symbol": "MSFT",
    -     },
    -   ],
    +   "success": true,
      }

      334 |         .expect(200);
      335 |
    > 336 |       expect(response.body).toMatchObject({
          |                             ^
      337 |         timeframe: "weekly",
      338 |         summary: expect.objectContaining({
      339 |           totalRecords: 1000,

      at Object.toMatchObject (tests/unit/routes/technical.test.js:336:29)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/data/:symbol - Individual symbol data ‚Ä∫ should return latest technical data for specific symbol

    expected 200 "OK", got 404 "Not Found"

      385 |       const response = await request(app)
      386 |         .get("/technical/data/AAPL")
    > 387 |         .expect(200);
          |          ^
      388 |
      389 |       expect(response.body).toMatchObject({
      390 |         success: true,

      at Object.expect (tests/unit/routes/technical.test.js:387:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/data/:symbol - Individual symbol data ‚Ä∫ should return 404 for non-existent symbol

    expect(received).toMatchObject(expected)

    - Expected  - 1
    + Received  + 1

      Object {
    -   "error": "No technical data found for symbol NONEXISTENT",
    +   "error": "Technical data not available",
        "success": false,
      }

      417 |         .expect(404);
      418 |
    > 419 |       expect(response.body).toMatchObject({
          |                             ^
      420 |         success: false,
      421 |         error: "No technical data found for symbol NONEXISTENT",
      422 |       });

      at Object.toMatchObject (tests/unit/routes/technical.test.js:419:29)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/data/:symbol - Individual symbol data ‚Ä∫ should return fallback data when table missing

    expect(received).toMatchObject(expected)

    - Expected  - 6
    + Received  + 2

      Object {
    -   "data": ObjectContaining {
    -     "macd": Any<Number>,
    -     "rsi": Any<Number>,
    -     "sma_20": Any<Number>,
    -     "symbol": "AAPL",
    +   "data": Object {
    +     "total": "10",
        },
    -   "fallback": true,
        "success": true,
        "symbol": "AAPL",
      }

      432 |         .expect(200);
      433 |
    > 434 |       expect(response.body).toMatchObject({
          |                             ^
      435 |         success: true,
      436 |         data: expect.objectContaining({
      437 |           symbol: "AAPL",

      at Object.toMatchObject (tests/unit/routes/technical.test.js:434:29)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/indicators/:symbol - Technical indicators ‚Ä∫ should return 30-day technical indicators for symbol

    expected 200 "OK", got 500 "Internal Server Error"

      470 |       const response = await request(app)
      471 |         .get("/technical/indicators/AAPL")
    > 472 |         .expect(200);
          |          ^
      473 |
      474 |       expect(response.body).toMatchObject({
      475 |         success: true,

      at Object.expect (tests/unit/routes/technical.test.js:472:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/history/:symbol - Technical history ‚Ä∫ should return technical history with custom days parameter

    expect(received).toMatchObject(expected)

    - Expected  -  3
    + Received  + 16

      Object {
    -   "count": 60,
    -   "data": Any<Array>,
    +   "data": Object {
    +     "count": 1,
    +     "data": Array [
    +       Object {
    +         "avg_macd": "0.15",
    +         "avg_rsi": "52.5",
    +         "avg_sma_20": "165.80",
    +         "avg_volume": "35000000",
    +         "earliest_date": "2024-01-01",
    +         "latest_date": "2025-07-16",
    +         "total_records": "1250",
    +         "unique_symbols": "50",
    +       },
    +     ],
          "period_days": "60",
    -   "success": true,
          "symbol": "AAPL",
    +   },
    +   "success": true,
      }

      517 |         .expect(200);
      518 |
    > 519 |       expect(response.body).toMatchObject({
          |                             ^
      520 |         success: true,
      521 |         data: expect.any(Array),
      522 |         count: 60,

      at Object.toMatchObject (tests/unit/routes/technical.test.js:519:29)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/support-resistance/:symbol - Support/Resistance levels ‚Ä∫ should return support and resistance levels

    expected 200 "OK", got 404 "Not Found"

      557 |         .get("/technical/support-resistance/AAPL")
      558 |         .query({ timeframe: "daily" })
    > 559 |         .expect(200);
          |          ^
      560 |
      561 |       expect(response.body).toMatchObject({
      562 |         symbol: "AAPL",

      at Object.expect (tests/unit/routes/technical.test.js:559:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/daily - Filtered technical data ‚Ä∫ should handle filtered technical data requests

    expected 200 "OK", got 400 "Bad Request"

      626 |           limit: 25,
      627 |         })
    > 628 |         .expect(200);
          |          ^
      629 |
      630 |       expect(response.body).toMatchObject({
      631 |         success: true,

      at Object.expect (tests/unit/routes/technical.test.js:628:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/daily - Filtered technical data ‚Ä∫ should handle technical data queries safely

    expected 200 "OK", got 400 "Bad Request"

      654 |         .get("/technical/daily")
      655 |         .query({ symbol: "AAPL" })
    > 656 |         .expect(200);
          |          ^
      657 |
      658 |       // Should safely query technical data
      659 |       expect(query).toHaveBeenCalled();

      at Object.expect (tests/unit/routes/technical.test.js:656:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/patterns/:symbol - Pattern recognition ‚Ä∫ should return technical pattern analysis

    expect(received).toMatchObject(expected)

    - Expected  - 12
    + Received  +  0

      Object {
    -   "confidence_score": Any<Number>,
    -   "last_updated": Any<String>,
    -   "patterns": Any<Array>,
        "success": true,
    -   "summary": ObjectContaining {
    -     "average_confidence": Any<Number>,
    -     "bearish_patterns": Any<Number>,
    -     "bullish_patterns": Any<Number>,
    -     "market_sentiment": StringMatching /^(bullish|bearish)$/,
    -     "total_patterns": Any<Number>,
    -   },
    -   "symbol": "AAPL",
    -   "timeframe": "1D",
      }

      687 |         .expect(200);
      688 |
    > 689 |       expect(response.body).toMatchObject({
          |                             ^
      690 |         success: true,
      691 |         symbol: "AAPL",
      692 |         timeframe: "1D",

      at Object.toMatchObject (tests/unit/routes/technical.test.js:689:29)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/patterns/:symbol - Pattern recognition ‚Ä∫ should return fallback patterns on database errors

    expect(received).toMatchObject(expected)

    - Expected  - 5
    + Received  + 0

      Object {
    -   "patterns": Any<Array>,
        "success": true,
    -   "summary": ObjectContaining {
    -     "market_sentiment": StringMatching /^(bullish|bearish)$/,
    -   },
    -   "symbol": "AAPL",
      }

      730 |         .expect(200);
      731 |
    > 732 |       expect(response.body).toMatchObject({
          |                             ^
      733 |         success: true,
      734 |         symbol: "AAPL",
      735 |         patterns: expect.any(Array),

      at Object.toMatchObject (tests/unit/routes/technical.test.js:732:29)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ Error handling - Your site's error patterns ‚Ä∫ should handle database errors gracefully with fallback data

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      767 |           response.body.metadata.error ||
      768 |           response.body.data.length > 0
    > 769 |       ).toBe(true);
          |         ^
      770 |     });
      771 |
      772 |     test("should return structured error responses for invalid timeframes", async () => {

      at Object.toBe (tests/unit/routes/technical.test.js:769:9)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ Error handling - Your site's error patterns ‚Ä∫ should return structured error responses for invalid timeframes

    expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 3

      Object {
    -   "error": "Invalid timeframe. Use daily, weekly, or monthly.",
    +   "error": "Invalid symbol format. Use 1-5 letter stock symbols like AAPL",
    +   "success": false,
    +   "timestamp": "2025-09-23T16:32:05.169Z",
      }

      773 |       const response = await request(app).get("/technical/hourly").expect(400);
      774 |
    > 775 |       expect(response.body).toEqual({
          |                             ^
      776 |         error: "Invalid timeframe. Use daily, weekly, or monthly.",
      777 |       });
      778 |     });

      at Object.toEqual (tests/unit/routes/technical.test.js:775:29)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ Error handling - Your site's error patterns ‚Ä∫ should handle large limit values safely

    expected 200 "OK", got 400 "Bad Request"

      791 |         .get("/technical/daily")
      792 |         .query({ limit: 500 }) // Large but reasonable limit
    > 793 |         .expect(200);
          |          ^
      794 |
      795 |       // Your site handles large limits by returning them in pagination
      796 |       expect(response.body.pagination.limit).toBe(500);

      at Object.expect (tests/unit/routes/technical.test.js:793:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/chart/:symbol - Chart data for symbol ‚Ä∫ should return chart data with default parameters

    expected 200 "OK", got 404 "Not Found"

      813 |       const response = await request(app)
      814 |         .get("/technical/chart/AAPL")
    > 815 |         .expect(200);
          |          ^
      816 |
      817 |       expect(response.body.success).toBe(true);
      818 |       expect(response.body.data).toHaveProperty("chart_data");

      at Object.expect (tests/unit/routes/technical.test.js:815:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/chart/:symbol - Chart data for symbol ‚Ä∫ should return chart data with custom parameters

    TypeError: Cannot read properties of undefined (reading 'symbol')

      834 |       expect(response.body.success).toBe(true);
      835 |       expect(response.body.data.chart_data.length).toBeLessThanOrEqual(50);
    > 836 |       expect(response.body.data.metadata.symbol).toBe("MSFT");
          |                                          ^
      837 |       expect(response.body.data.metadata.period).toBe("1Y");
      838 |       expect(response.body.data.metadata.interval).toBe("1d");
      839 |       expect(response.body.data.metadata.include_volume).toBe(true);

      at Object.symbol (tests/unit/routes/technical.test.js:836:42)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/chart/:symbol - Chart data for symbol ‚Ä∫ should include proper OHLCV structure

    expect(received).toHaveProperty(path)

    Expected path: "datetime"
    Received path: []

    Received value: {"adj_close": 0, "close": 179.11800330318235, "date": "2025-09-23", "high": 0, "low": 0, "open": 0, "timestamp": "2025-09-23", "volume": 50231968}

      852 |       if (response.body.data.chart_data.length > 0) {
      853 |         const candle = response.body.data.chart_data[0];
    > 854 |         expect(candle).toHaveProperty("datetime");
          |                        ^
      855 |         expect(candle).toHaveProperty("timestamp");
      856 |         expect(candle).toHaveProperty("open");
      857 |         expect(candle).toHaveProperty("high");

      at Object.toHaveProperty (tests/unit/routes/technical.test.js:854:24)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/chart/:symbol - Chart data for symbol ‚Ä∫ should include technical indicators

    expect(received).toHaveProperty(path)

    Matcher error: received value must not be null nor undefined

    Received has value: undefined

      875 |         const indicators =
      876 |           response.body.data.chart_data[0].technical_indicators;
    > 877 |         expect(indicators).toHaveProperty("sma_20");
          |                            ^
      878 |         expect(indicators).toHaveProperty("sma_50");
      879 |         expect(indicators).toHaveProperty("ema_12");
      880 |         expect(indicators).toHaveProperty("ema_26");

      at Object.toHaveProperty (tests/unit/routes/technical.test.js:877:28)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/chart/:symbol - Chart data for symbol ‚Ä∫ should include summary with price range and technical analysis

    expect(received).toHaveProperty(path, value)

    Matcher error: received value must not be null nor undefined

    Received has value: undefined

      894 |         .expect(200);
      895 |
    > 896 |       expect(response.body.data.summary).toHaveProperty("symbol", "AAPL");
          |                                          ^
      897 |       expect(response.body.data.summary).toHaveProperty("price_range");
      898 |       expect(response.body.data.summary).toHaveProperty("technical_summary");
      899 |       expect(response.body.data.summary.price_range).toHaveProperty("current");

      at Object.toHaveProperty (tests/unit/routes/technical.test.js:896:42)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/chart/:symbol - Chart data for symbol ‚Ä∫ should handle volume inclusion correctly

    expected 200 "OK", got 404 "Not Found"

      912 |       const responseWithVolume = await request(app)
      913 |         .get("/technical/chart/AAPL?include_volume=true&limit=5")
    > 914 |         .expect(200);
          |          ^
      915 |
      916 |       const responseWithoutVolume = await request(app)
      917 |         .get("/technical/chart/AAPL?include_volume=false&limit=5")

      at Object.expect (tests/unit/routes/technical.test.js:914:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/chart/:symbol - Chart data for symbol ‚Ä∫ should handle table not exists gracefully

    expected 404 "Not Found", got 200 "OK"

      944 |       const response = await request(app)
      945 |         .get("/technical/chart/AAPL")
    > 946 |         .expect(404);
          |          ^
      947 |
      948 |       expect(response.body.success).toBe(false);
      949 |       expect(response.body.error).toBe("Chart data not available");

      at Object.expect (tests/unit/routes/technical.test.js:946:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

FAIL tests/integration/routes/screener.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      Screening dividend stocks with min yield: 2%

      at log (routes/screener.js:36:13)

    console.log
      Screening dividend stocks with min yield: 3%

      at log (routes/screener.js:36:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Screener Routes ‚Ä∫ GET /api/screener ‚Ä∫ should return screener endpoints

    expect(received).toHaveProperty(path)

    Expected path: "message"
    Received path: []

    Received value: {"data": {"available_endpoints": ["GET /screener/screen - Main stock screening with filters", "GET /screener/ai-scan - AI-powered market scanner", "GET /screener/ai-strategies - Available AI scanning strategies", "GET /screener/templates - Pre-built screening templates", "GET /screener/factors - Available screening factors"], "status": "operational", "system": "Stock Screener API", "timestamp": "2025-09-23T16:32:05.446Z", "version": "1.0.0"}, "success": true}

      22 |
      23 |       expect(response.status).toBe(200);
    > 24 |       expect(response.body).toHaveProperty("message");
         |                             ^
      25 |       expect(response.body).toHaveProperty("endpoints");
      26 |     });
      27 |   });

      at Object.toHaveProperty (tests/integration/routes/screener.integration.test.js:24:29)

  ‚óè Screener Routes ‚Ä∫ GET /api/screener/screen ‚Ä∫ should screen stocks with basic criteria

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      33 |       );
      34 |
    > 35 |       expect(response.status).toBe(200);
         |                               ^
      36 |       expect(response.body.success).toBe(true);
      37 |       expect(Array.isArray(response.body.data)).toBe(true);
      38 |       expect(response.body.data.length).toBeLessThanOrEqual(100);

      at Object.toBe (tests/integration/routes/screener.integration.test.js:35:31)

  ‚óè Screener Routes ‚Ä∫ GET /api/screener/screen ‚Ä∫ should handle multiple criteria

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      44 |       );
      45 |
    > 46 |       expect(response.status).toBe(200);
         |                               ^
      47 |       expect(response.body.success).toBe(true);
      48 |       expect(Array.isArray(response.body.data)).toBe(true);
      49 |     });

      at Object.toBe (tests/integration/routes/screener.integration.test.js:46:31)

  ‚óè Screener Routes ‚Ä∫ GET /api/screener/screen ‚Ä∫ should handle sector filter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      54 |       );
      55 |
    > 56 |       expect(response.status).toBe(200);
         |                               ^
      57 |       expect(response.body.success).toBe(true);
      58 |     });
      59 |   });

      at Object.toBe (tests/integration/routes/screener.integration.test.js:56:31)

  ‚óè Screener Routes ‚Ä∫ GET /api/screener/presets ‚Ä∫ should return screening presets

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      63 |       const response = await request(app).get("/api/screener/presets");
      64 |
    > 65 |       expect(response.status).toBe(200);
         |                               ^
      66 |       expect(response.body.success).toBe(true);
      67 |       expect(Array.isArray(response.body.data)).toBe(true);
      68 |

      at Object.toBe (tests/integration/routes/screener.integration.test.js:65:31)

  ‚óè Screener Routes ‚Ä∫ GET /api/screener/presets/:presetName ‚Ä∫ should return specific preset

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      79 |       const response = await request(app).get("/api/screener/presets/growth");
      80 |
    > 81 |       expect(response.status).toBe(200);
         |                               ^
      82 |
      83 |       if (response.status === 200) {
      84 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/screener.integration.test.js:81:31)

  ‚óè Screener Routes ‚Ä∫ GET /api/screener/growth ‚Ä∫ should return growth stocks

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      93 |       const response = await request(app).get("/api/screener/growth");
      94 |
    > 95 |       expect(response.status).toBe(200);
         |                               ^
      96 |       expect(response.body.success).toBe(true);
      97 |       expect(Array.isArray(response.body.data)).toBe(true);
      98 |     });

      at Object.toBe (tests/integration/routes/screener.integration.test.js:95:31)

  ‚óè Screener Routes ‚Ä∫ GET /api/screener/growth ‚Ä∫ should handle timeframe parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      103 |       );
      104 |
    > 105 |       expect(response.status).toBe(200);
          |                               ^
      106 |       expect(response.body.success).toBe(true);
      107 |     });
      108 |   });

      at Object.toBe (tests/integration/routes/screener.integration.test.js:105:31)

  ‚óè Screener Routes ‚Ä∫ GET /api/screener/value ‚Ä∫ should return value stocks

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      112 |       const response = await request(app).get("/api/screener/value");
      113 |
    > 114 |       expect(response.status).toBe(200);
          |                               ^
      115 |       expect(response.body.success).toBe(true);
      116 |       expect(Array.isArray(response.body.data)).toBe(true);
      117 |     });

      at Object.toBe (tests/integration/routes/screener.integration.test.js:114:31)

  ‚óè Screener Routes ‚Ä∫ GET /api/screener/growth ‚Ä∫ should return growth stocks

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      122 |       const response = await request(app).get("/api/screener/growth");
      123 |
    > 124 |       expect(response.status).toBe(200);
          |                               ^
      125 |       expect(response.body.success).toBe(true);
      126 |       expect(Array.isArray(response.body.data)).toBe(true);
      127 |     });

      at Object.toBe (tests/integration/routes/screener.integration.test.js:124:31)

  ‚óè Screener Routes ‚Ä∫ GET /api/screener/technical ‚Ä∫ should return technical screening results

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      153 |       );
      154 |
    > 155 |       expect(response.status).toBe(200);
          |                               ^
      156 |       expect(response.body.success).toBe(true);
      157 |       expect(Array.isArray(response.body.data)).toBe(true);
      158 |     });

      at Object.toBe (tests/integration/routes/screener.integration.test.js:155:31)

  ‚óè Screener Routes ‚Ä∫ GET /api/screener/backtest ‚Ä∫ should return backtesting results

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      196 |       );
      197 |
    > 198 |       expect(response.status).toBe(200);
          |                               ^
      199 |
      200 |       if (response.status === 200) {
      201 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/screener.integration.test.js:198:31)

  ‚óè Screener Routes ‚Ä∫ GET /api/screener/backtest ‚Ä∫ should require strategy parameter

    expect(received).toContain(expected) // indexOf

    Expected value: 401
    Received array: [400, 422]

      208 |       const response = await request(app).get("/api/screener/backtest");
      209 |
    > 210 |       expect([400, 422]).toContain(response.status);
          |                          ^
      211 |     });
      212 |   });
      213 |

      at Object.toContain (tests/integration/routes/screener.integration.test.js:210:26)

  ‚óè Screener Routes ‚Ä∫ GET /api/screener/export ‚Ä∫ should export screening results

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      218 |       );
      219 |
    > 220 |       expect(response.status).toBe(200);
          |                               ^
      221 |
      222 |       if (response.status === 200) {
      223 |         expect(response.headers["content-type"]).toContain("text/csv");

      at Object.toBe (tests/integration/routes/screener.integration.test.js:220:31)

::ffff:127.0.0.1 - - [23/Sep/2025:16:32:05 +0000] "GET /api/screener HTTP/1.1" 200 447 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:05 +0000] "GET /api/screener/screen?market_cap_min=1000000000 HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:05 +0000] "GET /api/screener/screen?market_cap_min=1000000000&pe_max=25&volume_min=1000000 HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:05 +0000] "GET /api/screener/screen?sector=Technology HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:05 +0000] "GET /api/screener/presets HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:05 +0000] "GET /api/screener/presets/growth HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:05 +0000] "GET /api/screener/growth HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:05 +0000] "GET /api/screener/momentum?timeframe=1M HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:05 +0000] "GET /api/screener/value HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:05 +0000] "GET /api/screener/growth HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:05 +0000] "GET /api/screener/dividend HTTP/1.1" 200 1247 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:05 +0000] "GET /api/screener/dividend?min_yield=3 HTTP/1.1" 200 595 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:05 +0000] "GET /api/screener/technical?rsi_min=30&rsi_max=70 HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:05 +0000] "POST /api/screener/custom HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:05 +0000] "POST /api/screener/custom HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:05 +0000] "GET /api/screener/backtest?strategy=momentum&start_date=2023-01-01 HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:05 +0000] "GET /api/screener/backtest HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:05 +0000] "GET /api/screener/export?market_cap_min=1000000000&format=csv HTTP/1.1" 401 529 "-" "-"
FAIL tests/integration/routes/watchlist.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üéØ Watchlist performance endpoint called

      at log (routes/watchlist.js:402:11)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üì• Watchlist import requested for user: dev-user-bypass

      at log (routes/watchlist.js:518:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Watchlist Routes ‚Ä∫ GET /api/watchlist/performance ‚Ä∫ should return watchlist performance

    expect(received).toHaveProperty(path)

    Matcher error: received value must not be null nor undefined

    Received has value: undefined

      109 |       if (response.status === 200) {
      110 |         expect(response.body.success).toBe(true);
    > 111 |         expect(response.body.data).toHaveProperty("performance");
          |                                    ^
      112 |       }
      113 |     });
      114 |   });

      at Object.toHaveProperty (tests/integration/routes/watchlist.integration.test.js:111:36)

  ‚óè Watchlist Routes ‚Ä∫ GET /api/watchlist/alerts ‚Ä∫ should return price alerts

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      124 |       if (response.status === 200) {
      125 |         expect(response.body.success).toBe(true);
    > 126 |         expect(Array.isArray(response.body.data)).toBe(true);
          |                                                   ^
      127 |       }
      128 |     });
      129 |   });

      at Object.toBe (tests/integration/routes/watchlist.integration.test.js:126:51)

  ‚óè Watchlist Routes ‚Ä∫ POST /api/watchlist/import ‚Ä∫ should import watchlist from CSV

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [200, 401, 422]

      138 |         .attach("file", Buffer.from(csvData), "watchlist.csv");
      139 |
    > 140 |       expect([200, 401, 422]).toContain(response.status);
          |                               ^
      141 |
      142 |       if (response.status === 200) {
      143 |         expect(response.body.success).toBe(true);

      at Object.toContain (tests/integration/routes/watchlist.integration.test.js:140:31)

  ‚óè Watchlist Routes ‚Ä∫ GET /api/watchlist/export ‚Ä∫ should export watchlist to CSV

    expect(received).toContain(expected) // indexOf

    Expected substring: "text/csv"
    Received string:    "application/json; charset=utf-8"

      155 |
      156 |       if (response.status === 200) {
    > 157 |         expect(response.headers["content-type"]).toContain("text/csv");
          |                                                  ^
      158 |       }
      159 |     });
      160 |   });

      at Object.toContain (tests/integration/routes/watchlist.integration.test.js:157:50)

::ffff:127.0.0.1 - - [23/Sep/2025:16:32:05 +0000] "GET /api/watchlist HTTP/1.1" 200 109978 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:05 +0000] "POST /api/watchlist HTTP/1.1" 400 44 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:05 +0000] "POST /api/watchlist HTTP/1.1" 400 44 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:05 +0000] "DELETE /api/watchlist/AAPL HTTP/1.1" 400 203 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:05 +0000] "GET /api/watchlist/1 HTTP/1.1" 404 47 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:05 +0000] "PUT /api/watchlist/AAPL HTTP/1.1" 400 178 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:05 +0000] "GET /api/watchlist/performance HTTP/1.1" 200 261 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:05 +0000] "GET /api/watchlist/alerts HTTP/1.1" 200 131 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:05 +0000] "POST /api/watchlist/import HTTP/1.1" 400 93 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:05 +0000] "GET /api/watchlist/export HTTP/1.1" 200 131 "-" "-"
FAIL tests/integration/middleware/auth-middleware.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Portfolio summary requested for user: dev-user-bypass

      at log (routes/portfolio.js:174:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Auth Middleware with Service Integration ‚Ä∫ Auth Middleware with Different Route Types ‚Ä∫ should protect all authenticated routes consistently

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 403, 500]

      127 |         const response = await request(app).get(route);
      128 |
    > 129 |         expect([401, 403, 500]).toContain(response.status);
          |                                 ^
      130 |
      131 |         if (response.status === 401 || response.status === 403) {
      132 |           expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/middleware/auth-middleware.integration.test.js:129:33)

  ‚óè Auth Middleware with Service Integration ‚Ä∫ Auth Middleware with Different Route Types ‚Ä∫ should allow public routes without authentication

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 500]

      142 |         const response = await request(app).get(route);
      143 |
    > 144 |         expect([401, 500]).toContain(response.status);
          |                            ^
      145 |       }
      146 |     });
      147 |   });

      at Object.toContain (tests/integration/middleware/auth-middleware.integration.test.js:144:28)

::ffff:127.0.0.1 - - [23/Sep/2025:16:32:06 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:06 +0000] "GET /api/portfolio HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:06 +0000] "GET /api/portfolio HTTP/1.1" 401 528 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:06 +0000] "GET /api/portfolio HTTP/1.1" 401 528 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:06 +0000] "GET /api/portfolio HTTP/1.1" 401 528 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:06 +0000] "GET /api/portfolio HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:06 +0000] "GET /api/portfolio/summary HTTP/1.1" 200 656 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:06 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:06 +0000] "POST /api/portfolio/analyze HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:06 +0000] "GET /api/portfolio HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:06 +0000] "GET /api/alerts/active HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:06 +0000] "GET /api/trades HTTP/1.1" 200 152 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:06 +0000] "GET /api/health HTTP/1.1" 200 503 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:06 +0000] "GET /api/portfolio HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:06 +0000] "GET /api/portfolio HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:06 +0000] "GET /api/portfolio HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:06 +0000] "GET /api/portfolio HTTP/1.1" 401 528 "-" "-"
FAIL tests/integration/infrastructure/settings.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      Processing request: GET /api/settings

      at log (index.js:403:11)

    console.log
      Initializing database connection...

      at log (index.js:362:13)

    console.log
      Database connection established successfully

      at log (index.js:388:17)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üîß Test mode: Using test-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Processing request: GET /api/settings/dashboard

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üîß Test mode: Using test-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      ‚öôÔ∏è Dashboard settings requested for user: test-user-123

      at log (routes/settings.js:44:13)

    console.log
      Processing request: GET /api/settings/providers

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üîß Test mode: Using test-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Processing request: GET /api/settings/api-keys

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üîß Test mode: Using test-token for authentication

      at log (middleware/auth.js:44:15)

    console.error
      Provider listing error: Error: JWT validation failed: JWT string does not consist of exactly 3 parts (header, payload, signature)
          at ApiKeyService.listProviders (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1182:15)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at listProviders (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1395:14)
          at /home/stocks/algo/webapp/lambda/routes/settings.js:398:23

      1220 |     } catch (error) {
      1221 |       this.recordFailure(error);
    > 1222 |       console.error("Provider listing error:", error);
           |               ^
      1223 |       throw error; // Re-throw error so wrapper can handle it
      1224 |     }
      1225 |   }

      at ApiKeyService.error [as listProviders] (utils/apiKeyService.js:1222:15)
      at listProviders (utils/apiKeyService.js:1395:14)
      at routes/settings.js:398:23

    console.log
      Processing request: POST /api/settings/api-keys

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üîß Test mode: Using test-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Processing request: GET /api/settings/health

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üîß Test mode: Using test-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Settings Management API ‚Ä∫ API Key Management ‚Ä∫ should retrieve API keys list

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      62 |       if (response.status === 200) {
      63 |         expect(response.body).toHaveProperty("success", true);
    > 64 |         expect(Array.isArray(response.body.data)).toBe(true);
         |                                                   ^
      65 |       }
      66 |     });
      67 |

      at Object.toBe (tests/integration/infrastructure/settings.test.js:64:51)

  ‚óè Settings Management API ‚Ä∫ API Key Management ‚Ä∫ should handle API key creation request

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [200, 404, 500, 501]

      79 |         .send(keyData);
      80 |
    > 81 |       expect([200, 404, 500, 501]).toContain(response.status);
         |                                    ^
      82 |
      83 |       if (response.status === 200 || response.status === 201) {
      84 |         expect(response.body).toHaveProperty("success", true);

      at Object.toContain (tests/integration/infrastructure/settings.test.js:81:36)

  ‚óè Settings Management API ‚Ä∫ Settings Health Status ‚Ä∫ should retrieve settings health status

    expect(received).toHaveProperty(path, value)

    Expected path: "success"
    Received path: []

    Expected value: true
    Received value: {"health": {"cacheStats": {"keyCache": 0, "sessionCache": 0, "timeout": 300000}, "circuitBreaker": {"failures": 1, "lastFailureTime": 1758645126899, "state": "CLOSED"}, "jwtCircuitBreaker": {"failures": 0, "lastFailureTime": 0, "state": "CLOSED"}, "services": {"encryptionAvailable": false, "jwtVerifierAvailable": true}}, "timestamp": "2025-09-23T16:32:06.924Z"}

       97 |
       98 |       if (response.status === 200) {
    >  99 |         expect(response.body).toHaveProperty("success", true);
          |                               ^
      100 |         expect(response.body).toHaveProperty("status");
      101 |       }
      102 |     });

      at Object.toHaveProperty (tests/integration/infrastructure/settings.test.js:99:31)

::ffff:127.0.0.1 - - [23/Sep/2025:16:32:06 +0000] "GET /api/settings HTTP/1.1" 200 472 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:06 +0000] "GET /api/settings/dashboard HTTP/1.1" 200 2725 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:06 +0000] "GET /api/settings/providers HTTP/1.1" 404 632 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:06 +0000] "GET /api/settings/api-keys HTTP/1.1" 200 331 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:06 +0000] "POST /api/settings/api-keys HTTP/1.1" 400 100 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:06 +0000] "GET /api/settings/health HTTP/1.1" 200 335 "-" "-"
FAIL tests/integration/analytics/analysts.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      Processing request: GET /api/analysts/recommendations/AAPL

      at log (index.js:403:11)

    console.log
      Initializing database connection...

      at log (index.js:362:13)

    console.log
      Database connection established successfully

      at log (index.js:388:17)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìä Analyst recommendations requested for AAPL

      at log (routes/analysts.js:709:13)

    console.log
      Processing request: GET /api/analysts/recommendations/INVALID123

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìä Analyst recommendations requested for INVALID123

      at log (routes/analysts.js:709:13)

    console.log
      Processing request: GET /api/analysts/coverage/AAPL

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/analysts/price-targets/AAPL

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/analysts/consensus/AAPL

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      ü§ù Analyst consensus requested for AAPL

      at log (routes/analysts.js:1187:13)

    console.log
      Processing request: GET /api/analysts/research

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.error
      Database query error: {
        error: 'column "firm" does not exist',
        query: '\n' +
          '      SELECT\n' +
          '        id, symbol, firm, title, rating, price_target,\n' +
          '        published_date, analyst...',
        params: '2 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/analysts.js:1400:20

    console.error
      Research reports error: error: column "firm" does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/analysts.js:1400:20 {
        length: 104,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '35',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      1427 |     });
      1428 |   } catch (error) {
    > 1429 |     console.error("Research reports error:", error);
           |             ^
      1430 |     res.status(500).json({
      1431 |       success: false,
      1432 |       error: "Failed to fetch research reports",

      at error (routes/analysts.js:1429:13)

    console.log
      Processing request: GET /api/analysts/research

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.error
      Database query error: {
        error: 'column "firm" does not exist',
        query: '\n' +
          '      SELECT\n' +
          '        id, symbol, firm, title, rating, price_target,\n' +
          '        published_date, analyst...',
        params: '2 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/analysts.js:1400:20

    console.error
      Research reports error: error: column "firm" does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/analysts.js:1400:20 {
        length: 104,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '35',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      1427 |     });
      1428 |   } catch (error) {
    > 1429 |     console.error("Research reports error:", error);
           |             ^
      1430 |     res.status(500).json({
      1431 |       success: false,
      1432 |       error: "Failed to fetch research reports",

      at error (routes/analysts.js:1429:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Analysts API ‚Ä∫ Analyst Recommendations ‚Ä∫ should retrieve analyst recommendations for stock

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      15 |       );
      16 |
    > 17 |       expect(response.status).toBe(200);
         |                               ^
      18 |
      19 |       if (response.status === 200) {
      20 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/analysts.test.js:17:31)

  ‚óè Analysts API ‚Ä∫ Analyst Coverage ‚Ä∫ should retrieve analyst coverage for stock

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      51 |       const response = await request(app).get("/api/analysts/coverage/AAPL");
      52 |
    > 53 |       expect(response.status).toBe(200);
         |                               ^
      54 |
      55 |       if (response.status === 200) {
      56 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/analysts.test.js:53:31)

  ‚óè Analysts API ‚Ä∫ Price Targets ‚Ä∫ should retrieve price targets for stock

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      80 |       );
      81 |
    > 82 |       expect(response.status).toBe(200);
         |                               ^
      83 |
      84 |       if (response.status === 200) {
      85 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/analysts.test.js:82:31)

  ‚óè Analysts API ‚Ä∫ Price Targets ‚Ä∫ should provide consensus price targets

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      116 |         );
      117 |
    > 118 |         expect(hasConsensusData).toBe(true);
          |                                  ^
      119 |       }
      120 |     });
      121 |   });

      at Object.toBe (tests/integration/analytics/analysts.test.js:118:34)

  ‚óè Analysts API ‚Ä∫ Analyst Research ‚Ä∫ should retrieve research reports

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      127 |       );
      128 |
    > 129 |       expect(response.status).toBe(200);
          |                               ^
      130 |
      131 |       if (response.status === 200) {
      132 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/analysts.test.js:129:31)

  ‚óè Analysts API ‚Ä∫ Analyst Research ‚Ä∫ should filter research by analyst firm

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      147 |       );
      148 |
    > 149 |       expect(response.status).toBe(200);
          |                               ^
      150 |
      151 |       if (response.status === 200) {
      152 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/analysts.test.js:149:31)

::ffff:127.0.0.1 - - [23/Sep/2025:16:32:07 +0000] "GET /api/analysts/recommendations/AAPL HTTP/1.1" 404 123 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:07 +0000] "GET /api/analysts/recommendations/INVALID123 HTTP/1.1" 404 135 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:07 +0000] "GET /api/analysts/coverage/AAPL HTTP/1.1" 404 644 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:07 +0000] "GET /api/analysts/price-targets/AAPL HTTP/1.1" 404 659 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:07 +0000] "GET /api/analysts/consensus/AAPL HTTP/1.1" 200 337 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:07 +0000] "GET /api/analysts/research?symbol=AAPL&limit=10 HTTP/1.1" 500 103 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:07 +0000] "GET /api/analysts/research?firm=Goldman&limit=5 HTTP/1.1" 500 103 "-" "-"
FAIL tests/integration/routes/analytics.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üè≠ Public sectors analytics requested

      at log (routes/analytics.js:925:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîó Correlation analytics requested for user: dev-user-bypass, period: 3m

      at log (routes/analytics.js:531:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Analytics Routes ‚Ä∫ GET /api/analytics/performance ‚Ä∫ should return performance analytics

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      34 |       const response = await request(app).get("/api/analytics/performance");
      35 |
    > 36 |       expect(response.status).toBe(200);
         |                               ^
      37 |
      38 |       if (response.status === 200) {
      39 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/analytics.integration.test.js:36:31)

  ‚óè Analytics Routes ‚Ä∫ GET /api/analytics/risk ‚Ä∫ should return risk analytics

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      47 |       const response = await request(app).get("/api/analytics/risk");
      48 |
    > 49 |       expect(response.status).toBe(200);
         |                               ^
      50 |
      51 |       if (response.status === 200) {
      52 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/analytics.integration.test.js:49:31)

  ‚óè Analytics Routes ‚Ä∫ GET /api/analytics/allocation ‚Ä∫ should return allocation analytics

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      60 |       const response = await request(app).get("/api/analytics/allocation");
      61 |
    > 62 |       expect(response.status).toBe(200);
         |                               ^
      63 |
      64 |       if (response.status === 200) {
      65 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/analytics.integration.test.js:62:31)

  ‚óè Analytics Routes ‚Ä∫ GET /api/analytics/returns ‚Ä∫ should return returns analysis

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      73 |       const response = await request(app).get("/api/analytics/returns");
      74 |
    > 75 |       expect(response.status).toBe(200);
         |                               ^
      76 |
      77 |       if (response.status === 200) {
      78 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/analytics.integration.test.js:75:31)

  ‚óè Analytics Routes ‚Ä∫ GET /api/analytics/correlation ‚Ä∫ should return correlation analysis

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 400

      101 |         .set("Authorization", "Bearer dev-bypass-token");
      102 |
    > 103 |       expect(response.status).toBe(200);
          |                               ^
      104 |
      105 |       if (response.status === 200) {
      106 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/analytics.integration.test.js:103:31)

  ‚óè Analytics Routes ‚Ä∫ GET /api/analytics/volatility ‚Ä∫ should return volatility analysis

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      114 |       const response = await request(app).get("/api/analytics/volatility");
      115 |
    > 116 |       expect(response.status).toBe(200);
          |                               ^
      117 |
      118 |       if (response.status === 200) {
      119 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/analytics.integration.test.js:116:31)

  ‚óè Analytics Routes ‚Ä∫ GET /api/analytics/trends ‚Ä∫ should return trend analysis

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      127 |       const response = await request(app).get("/api/analytics/trends");
      128 |
    > 129 |       expect(response.status).toBe(200);
          |                               ^
      130 |
      131 |       if (response.status === 200) {
      132 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/analytics.integration.test.js:129:31)

  ‚óè Analytics Routes ‚Ä∫ POST /api/analytics/custom ‚Ä∫ should handle custom analytics request

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      148 |         .send(analyticsRequest);
      149 |
    > 150 |       expect(response.status).toBe(200);
          |                               ^
      151 |
      152 |       if (response.status === 200 || response.status === 201) {
      153 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/analytics.integration.test.js:150:31)

::ffff:127.0.0.1 - - [23/Sep/2025:16:32:07 +0000] "GET /api/analytics HTTP/1.1" 200 827 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:07 +0000] "GET /api/analytics/performance HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:07 +0000] "GET /api/analytics/risk HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:07 +0000] "GET /api/analytics/allocation HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:07 +0000] "GET /api/analytics/returns HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:07 +0000] "GET /api/analytics/sectors HTTP/1.1" 200 157 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:07 +0000] "GET /api/analytics/correlation HTTP/1.1" 400 313 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:07 +0000] "GET /api/analytics/volatility HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:07 +0000] "GET /api/analytics/trends HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:07 +0000] "POST /api/analytics/custom HTTP/1.1" 401 529 "-" "-"
FAIL tests/integration/routes/news.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üì∞ Recent news requested, limit: 20, hours: 24

      at log (routes/news.js:58:13)

    console.log
      üì∞ Recent news requested, limit: 5, hours: 24

      at log (routes/news.js:58:13)

    console.log
      üì∞ Recent news requested, limit: 20, hours: 24

      at log (routes/news.js:58:13)

    console.log
      üì∞ Symbol news requested for search

      at log (routes/news.js:1578:13)

    console.log
      DEBUG: /sentiment route hit

      at log (routes/news.js:461:11)

    console.log
      News table columns: [
        'id',        'symbol',
        'headline',  'summary',
        'url',       'published_at',
        'sentiment', 'relevance_score',
        'source',    'fetched_at',
        'category',  'title'
      ]

      at log (routes/news.js:503:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè News Routes ‚Ä∫ GET /api/news ‚Ä∫ should return news API status

    expect(received).toBe(expected) // Object.is equality

    Expected: "News API - Ready"
    Received: undefined

      34 |
      35 |       expect(response.status).toBe(200);
    > 36 |       expect(response.body.message).toBe("News API - Ready");
         |                                     ^
      37 |       expect(response.body.status).toBe("operational");
      38 |       expect(response.body.timestamp).toBeDefined();
      39 |     });

      at Object.toBe (tests/integration/routes/news.integration.test.js:36:37)

  ‚óè News Routes ‚Ä∫ GET /api/news/recent ‚Ä∫ should return recent news

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      46 |       expect(response.status).toBe(200);
      47 |       expect(response.body.success).toBe(true);
    > 48 |       expect(Array.isArray(response.body.data)).toBe(true);
         |                                                 ^
      49 |
      50 |       if (response.body.data.length > 0) {
      51 |         const article = response.body.data[0];

      at Object.toBe (tests/integration/routes/news.integration.test.js:48:49)

  ‚óè News Routes ‚Ä∫ GET /api/news/recent ‚Ä∫ should handle limit parameter

    expect(received).toBeLessThanOrEqual(expected)

    Matcher error: received value must be a number or bigint

    Received has value: undefined

      61 |       expect(response.status).toBe(200);
      62 |       expect(response.body.success).toBe(true);
    > 63 |       expect(response.body.data.length).toBeLessThanOrEqual(5);
         |                                         ^
      64 |     });
      65 |
      66 |     test("should handle category filtering", async () => {

      at Object.toBeLessThanOrEqual (tests/integration/routes/news.integration.test.js:63:41)

  ‚óè News Routes ‚Ä∫ GET /api/news/search ‚Ä∫ should search news articles

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: undefined

      81 |
      82 |       if (response.status === 200) {
    > 83 |         expect(response.body.success).toBe(true);
         |                                       ^
      84 |         expect(Array.isArray(response.body.data)).toBe(true);
      85 |       }
      86 |     });

      at Object.toBe (tests/integration/routes/news.integration.test.js:83:39)

  ‚óè News Routes ‚Ä∫ GET /api/news/sentiment ‚Ä∫ should return news sentiment analysis

    expect(received).toHaveProperty(path)

    Expected path: "sentiment"
    Received path: []

    Received value: {"overall_sentiment": {"distribution": {"negative": 0, "neutral": 0, "positive": 0}, "label": "neutral", "score": 0, "total_articles": 0}, "timeframe": "24h", "timestamp": "2025-09-23T16:32:08.332Z"}

       95 |       if (response.status === 200) {
       96 |         expect(response.body.success).toBe(true);
    >  97 |         expect(response.body.data).toHaveProperty("sentiment");
          |                                    ^
       98 |       }
       99 |     });
      100 |   });

      at Object.toHaveProperty (tests/integration/routes/news.integration.test.js:97:36)

  ‚óè News Routes ‚Ä∫ GET /api/news/symbols/:symbol ‚Ä∫ should return news for specific symbol

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      104 |       const response = await request(app).get("/api/news/symbols/AAPL");
      105 |
    > 106 |       expect(response.status).toBe(200);
          |                               ^
      107 |       expect(response.body.success).toBe(true);
      108 |       expect(Array.isArray(response.body.data)).toBe(true);
      109 |     });

      at Object.toBe (tests/integration/routes/news.integration.test.js:106:31)

::ffff:127.0.0.1 - - [23/Sep/2025:16:32:08 +0000] "GET /api/news/health HTTP/1.1" 200 131 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:08 +0000] "GET /api/news HTTP/1.1" 200 26 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:08 +0000] "GET /api/news/recent HTTP/1.1" 200 189 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:08 +0000] "GET /api/news/recent?limit=5 HTTP/1.1" 200 189 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:08 +0000] "GET /api/news/recent?category=earnings HTTP/1.1" 200 189 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:08 +0000] "GET /api/news/search?q=market HTTP/1.1" 200 135 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:08 +0000] "GET /api/news/sentiment HTTP/1.1" 200 206 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:08 +0000] "GET /api/news/symbols/AAPL HTTP/1.1" 404 127 "-" "-"
FAIL tests/integration/analytics/recommendations.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      Processing request: GET /api/recommendations

      at log (index.js:403:11)

    console.log
      Initializing database connection...

      at log (index.js:362:13)

    console.log
      Database connection established successfully

      at log (index.js:388:17)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üîß Test mode: Using test-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

    console.log
      Processing request: GET /api/recommendations

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üîß Test mode: Using test-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

    console.log
      Processing request: GET /api/recommendations/sectors

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/recommendations/sectors/Technology

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/recommendations/ai

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üîß Test mode: Using test-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      ü§ñ AI recommendations requested - symbol: all, risk: moderate, strategy: balanced

      at log (routes/recommendations.js:327:15)

    console.log
      Processing request: GET /api/recommendations/allocation

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/recommendations/similar/AAPL

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/recommendations/alternatives

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/recommendations/performance

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Recommendations API ‚Ä∫ Stock Recommendations ‚Ä∫ should retrieve personalized stock recommendations

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      19 |       if (response.status === 200) {
      20 |         expect(response.body).toHaveProperty("success", true);
    > 21 |         expect(Array.isArray(response.body.data)).toBe(true);
         |                                                   ^
      22 |
      23 |         if (response.body.data.length > 0) {
      24 |           const recommendation = response.body.data[0];

      at Object.toBe (tests/integration/analytics/recommendations.test.js:21:51)

  ‚óè Recommendations API ‚Ä∫ Stock Recommendations ‚Ä∫ should filter recommendations by type

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      52 |       if (response.status === 200) {
      53 |         expect(response.body).toHaveProperty("success", true);
    > 54 |         expect(Array.isArray(response.body.data)).toBe(true);
         |                                                   ^
      55 |
      56 |         if (response.body.data.length > 0) {
      57 |           const recommendation = response.body.data[0];

      at Object.toBe (tests/integration/analytics/recommendations.test.js:54:51)

  ‚óè Recommendations API ‚Ä∫ Sector Recommendations ‚Ä∫ should provide sector-based recommendations

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      66 |       const response = await request(app).get("/api/recommendations/sectors");
      67 |
    > 68 |       expect(response.status).toBe(200);
         |                               ^
      69 |
      70 |       if (response.status === 200) {
      71 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/recommendations.test.js:68:31)

  ‚óè Recommendations API ‚Ä∫ Sector Recommendations ‚Ä∫ should get recommendations for specific sector

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      94 |       );
      95 |
    > 96 |       expect(response.status).toBe(200);
         |                               ^
      97 |
      98 |       if (response.status === 200) {
      99 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/recommendations.test.js:96:31)

  ‚óè Recommendations API ‚Ä∫ AI-Generated Recommendations ‚Ä∫ should provide AI-generated stock picks

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      115 |       if (response.status === 200) {
      116 |         expect(response.body).toHaveProperty("success", true);
    > 117 |         expect(Array.isArray(response.body.data)).toBe(true);
          |                                                   ^
      118 |
      119 |         if (response.body.data.length > 0) {
      120 |           const aiRec = response.body.data[0];

      at Object.toBe (tests/integration/analytics/recommendations.test.js:117:51)

  ‚óè Recommendations API ‚Ä∫ AI-Generated Recommendations ‚Ä∫ should generate portfolio allocation recommendations

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      131 |         .set("Authorization", "Bearer test-token");
      132 |
    > 133 |       expect(response.status).toBe(200);
          |                               ^
      134 |
      135 |       if (response.status === 200) {
      136 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/recommendations.test.js:133:31)

  ‚óè Recommendations API ‚Ä∫ Similar Stocks ‚Ä∫ should find similar stocks based on characteristics

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      155 |       );
      156 |
    > 157 |       expect(response.status).toBe(200);
          |                               ^
      158 |
      159 |       if (response.status === 200) {
      160 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/recommendations.test.js:157:31)

  ‚óè Recommendations API ‚Ä∫ Similar Stocks ‚Ä∫ should recommend alternatives to current holdings

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      175 |         .set("Authorization", "Bearer test-token");
      176 |
    > 177 |       expect(response.status).toBe(200);
          |                               ^
      178 |
      179 |       if (response.status === 200) {
      180 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/recommendations.test.js:177:31)

  ‚óè Recommendations API ‚Ä∫ Performance Tracking ‚Ä∫ should track recommendation performance

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      196 |         .set("Authorization", "Bearer test-token");
      197 |
    > 198 |       expect(response.status).toBe(200);
          |                               ^
      199 |
      200 |       if (response.status === 200) {
      201 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/recommendations.test.js:198:31)

::ffff:127.0.0.1 - - [23/Sep/2025:16:32:08 +0000] "GET /api/recommendations HTTP/1.1" 200 290 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:08 +0000] "GET /api/recommendations?type=buy&limit=10 HTTP/1.1" 200 290 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:08 +0000] "GET /api/recommendations/sectors HTTP/1.1" 404 647 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:08 +0000] "GET /api/recommendations/sectors/Technology HTTP/1.1" 404 680 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:08 +0000] "GET /api/recommendations/ai?risk_tolerance=moderate&investment_horizon=long HTTP/1.1" 200 7859 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:08 +0000] "GET /api/recommendations/allocation HTTP/1.1" 404 656 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:08 +0000] "GET /api/recommendations/similar/AAPL HTTP/1.1" 404 662 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:08 +0000] "GET /api/recommendations/alternatives HTTP/1.1" 404 662 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:08 +0000] "GET /api/recommendations/performance HTTP/1.1" 404 659 "-" "-"
FAIL tests/integration/routes/scoring.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      Processing request: GET /api/scoring

      at log (index.js:403:11)

    console.log
      Initializing database connection...

      at log (index.js:362:13)

    console.log
      Database connection established successfully

      at log (index.js:388:17)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/scoring/factors

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üéØ Scoring factors requested - category: all, symbol: none

      at log (routes/scoring.js:32:13)

    console.error
      Database query error: {
        error: 'column "updated_at" does not exist',
        query: '\n' +
          '        SELECT \n' +
          "          'quality' as factor,\n" +
          '          AVG(quality_score) as avg_score,\n' +
          '         ...',
        params: 'no parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/scoring.js:271:27

    console.warn
      Could not fetch factor statistics: column "updated_at" does not exist

      341 |       });
      342 |     } catch (statsError) {
    > 343 |       console.warn("Could not fetch factor statistics:", statsError.message);
          |               ^
      344 |     }
      345 |
      346 |     // Enhanced factor analysis with symbol-specific scores

      at warn (routes/scoring.js:343:15)

    console.log
      Processing request: GET /api/scoring/factors

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üéØ Scoring factors requested - category: fundamental, symbol: none

      at log (routes/scoring.js:32:13)

    console.error
      Database query error: {
        error: 'column "updated_at" does not exist',
        query: '\n' +
          '        SELECT \n' +
          "          'quality' as factor,\n" +
          '          AVG(quality_score) as avg_score,\n' +
          '         ...',
        params: 'no parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/scoring.js:271:27

    console.warn
      Could not fetch factor statistics: column "updated_at" does not exist

      341 |       });
      342 |     } catch (statsError) {
    > 343 |       console.warn("Could not fetch factor statistics:", statsError.message);
          |               ^
      344 |     }
      345 |
      346 |     // Enhanced factor analysis with symbol-specific scores

      at warn (routes/scoring.js:343:15)

    console.log
      Processing request: GET /api/scoring/AAPL

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/scoring/AAPL/factors

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/scoring/compare

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /api/scoring/sectors

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìä Sector scoring requested

      at log (routes/scoring.js:827:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Scoring Analysis API ‚Ä∫ Scoring Factors ‚Ä∫ should filter scoring factors by category

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      52 |       if (response.status === 200) {
      53 |         expect(response.body).toHaveProperty("success", true);
    > 54 |         expect(Array.isArray(response.body.data)).toBe(true);
         |                                                   ^
      55 |       }
      56 |     });
      57 |   });

      at Object.toBe (tests/integration/routes/scoring.integration.test.js:54:51)

  ‚óè Scoring Analysis API ‚Ä∫ Symbol Scoring ‚Ä∫ should calculate scoring metrics for symbol

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      61 |       const response = await request(app).get("/api/scoring/AAPL");
      62 |
    > 63 |       expect(response.status).toBe(200);
         |                               ^
      64 |
      65 |       if (response.status === 200) {
      66 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/scoring.integration.test.js:63:31)

  ‚óè Scoring Analysis API ‚Ä∫ Symbol Scoring ‚Ä∫ should provide factor-based scoring breakdown

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      87 |       const response = await request(app).get("/api/scoring/AAPL/factors");
      88 |
    > 89 |       expect(response.status).toBe(200);
         |                               ^
      90 |
      91 |       if (response.status === 200) {
      92 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/scoring.integration.test.js:89:31)

  ‚óè Scoring Analysis API ‚Ä∫ Score Comparison ‚Ä∫ should compare scores between multiple symbols

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      113 |       );
      114 |
    > 115 |       expect(response.status).toBe(200);
          |                               ^
      116 |
      117 |       if (response.status === 200) {
      118 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/scoring.integration.test.js:115:31)

  ‚óè Scoring Analysis API ‚Ä∫ Sector Scoring ‚Ä∫ should provide sector-based scoring analysis

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      136 |       if (response.status === 200) {
      137 |         expect(response.body).toHaveProperty("success", true);
    > 138 |         expect(Array.isArray(response.body.data)).toBe(true);
          |                                                   ^
      139 |
      140 |         if (response.body.data.length > 0) {
      141 |           const sectorScoring = response.body.data[0];

      at Object.toBe (tests/integration/routes/scoring.integration.test.js:138:51)

::ffff:127.0.0.1 - - [23/Sep/2025:16:32:09 +0000] "GET /api/scoring HTTP/1.1" 200 383 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:09 +0000] "GET /api/scoring/factors HTTP/1.1" 200 5050 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:09 +0000] "GET /api/scoring/factors?category=fundamental HTTP/1.1" 200 5059 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:09 +0000] "GET /api/scoring/AAPL HTTP/1.1" 404 614 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:09 +0000] "GET /api/scoring/AAPL/factors HTTP/1.1" 404 638 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:09 +0000] "GET /api/scoring/compare?symbols=AAPL,GOOGL,MSFT HTTP/1.1" 404 695 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:09 +0000] "GET /api/scoring/sectors HTTP/1.1" 200 340 "-" "-"
FAIL tests/integration/routes/sectors.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üìà Sector performance requested, period: 1m, limit: 10

      at log (routes/sectors.js:339:13)

    console.log
      üîç No sector performance data found, checking tables...

      at log (routes/sectors.js:404:15)

    console.log
      üìä Company profiles with sectors: 0

      at log (routes/sectors.js:410:15)

    console.log
      üìä Recent price data records: 400

      at log (routes/sectors.js:416:15)

    console.log
      üìà Sector performance requested, period: 1M, limit: 10

      at log (routes/sectors.js:339:13)

    console.log
      üèÜ Sector leaders requested, period: 1d

      at log (routes/sectors.js:888:13)

    console.log
      üîÑ Sector rotation analysis requested, timeframe: 3m

      at log (routes/sectors.js:817:13)

    console.log
      üìä Fetching stocks for sector: Technology

      at log (routes/sectors.js:38:13)

    console.log
      ‚úÖ Found 0 stocks in Technology sector

      at log (routes/sectors.js:75:13)

    console.log
      üìä Fetching stocks for sector: Technology

      at log (routes/sectors.js:38:13)

    console.log
      ‚úÖ Found 0 stocks in Technology sector

      at log (routes/sectors.js:75:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Sectors Routes ‚Ä∫ GET /api/sectors/performance ‚Ä∫ should handle period parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 400

      47 |       );
      48 |
    > 49 |       expect(response.status).toBe(200);
         |                               ^
      50 |       expect(response.body.success).toBe(true);
      51 |     });
      52 |   });

      at Object.toBe (tests/integration/routes/sectors.integration.test.js:49:31)

  ‚óè Sectors Routes ‚Ä∫ GET /api/sectors/leaders ‚Ä∫ should return sector leaders

    expect(received).toHaveProperty(path)

    Expected path: "gainers"
    Received path: []

    Received value: {"last_updated": "2025-09-23T16:32:09.906Z", "period": "1d", "sector_breadth": {"advancing_sectors": 7, "breadth_ratio": 1.75, "declining_sectors": 4, "neutral_sectors": 0}, "top_performing_sectors": [{"return": 0, "sector": "Technology", "volume_flow": 2400000000}, {"return": 0, "sector": "Healthcare", "volume_flow": 1800000000}, {"return": 0, "sector": "Consumer Discretionary", "volume_flow": 1500000000}]}

      58 |       expect(response.status).toBe(200);
      59 |       expect(response.body.success).toBe(true);
    > 60 |       expect(response.body.data).toHaveProperty("gainers");
         |                                  ^
      61 |       expect(response.body.data).toHaveProperty("losers");
      62 |     });
      63 |   });

      at Object.toHaveProperty (tests/integration/routes/sectors.integration.test.js:60:34)

  ‚óè Sectors Routes ‚Ä∫ GET /api/sectors/rotation ‚Ä∫ should return sector rotation analysis

    expect(received).toHaveProperty(path)

    Expected path: "rotation"
    Received path: []

    Received value: {"analysis_date": "2025-09-23T16:32:09.908Z", "last_updated": "2025-09-23T16:32:09.908Z", "market_cycle": {"confidence": 0, "current_phase": "EARLY_CYCLE", "duration_estimate": 60}, "sector_rankings": [{"flow_direction": "INFLOW", "momentum": 8.2, "relative_strength": 92.5, "sector": "Technology"}, {"flow_direction": "INFLOW", "momentum": 6.1, "relative_strength": 87.3, "sector": "Healthcare"}, {"flow_direction": "OUTFLOW", "momentum": -2.4, "relative_strength": 45.8, "sector": "Financials"}, {"flow_direction": "OUTFLOW", "momentum": -4.7, "relative_strength": 38.2, "sector": "Energy"}, {"flow_direction": "NEUTRAL", "momentum": 3.8, "relative_strength": 74.1, "sector": "Consumer Discretionary"}], "timeframe": "3m"}

      69 |       expect(response.status).toBe(200);
      70 |       expect(response.body.success).toBe(true);
    > 71 |       expect(response.body.data).toHaveProperty("rotation");
         |                                  ^
      72 |       expect(response.body.data).toHaveProperty("momentum");
      73 |     });
      74 |   });

      at Object.toHaveProperty (tests/integration/routes/sectors.integration.test.js:71:34)

  ‚óè Sectors Routes ‚Ä∫ GET /api/sectors/:sector ‚Ä∫ should return specific sector data

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      78 |       const response = await request(app).get("/api/sectors/Technology");
      79 |
    > 80 |       expect(response.status).toBe(200);
         |                               ^
      81 |       expect(response.body.success).toBe(true);
      82 |       expect(response.body.data).toHaveProperty("sector");
      83 |       expect(response.body.data).toHaveProperty("stocks");

      at Object.toBe (tests/integration/routes/sectors.integration.test.js:80:31)

  ‚óè Sectors Routes ‚Ä∫ GET /api/sectors/heatmap ‚Ä∫ should return sector heatmap data

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      109 |       const response = await request(app).get("/api/sectors/heatmap");
      110 |
    > 111 |       expect(response.status).toBe(200);
          |                               ^
      112 |       expect(response.body.success).toBe(true);
      113 |       expect(Array.isArray(response.body.data)).toBe(true);
      114 |     });

      at Object.toBe (tests/integration/routes/sectors.integration.test.js:111:31)

::ffff:127.0.0.1 - - [23/Sep/2025:16:32:09 +0000] "GET /api/sectors HTTP/1.1" 200 120 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:09 +0000] "GET /api/sectors/performance HTTP/1.1" 200 180 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:09 +0000] "GET /api/sectors/performance?period=1M HTTP/1.1" 400 82 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:09 +0000] "GET /api/sectors/leaders HTTP/1.1" 200 443 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:09 +0000] "GET /api/sectors/rotation HTTP/1.1" 200 734 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:09 +0000] "GET /api/sectors/Technology HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:09 +0000] "GET /api/sectors/Technology/stocks HTTP/1.1" 200 121 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:09 +0000] "GET /api/sectors/Technology/stocks?limit=10 HTTP/1.1" 200 121 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:09 +0000] "GET /api/sectors/heatmap HTTP/1.1" 401 529 "-" "-"
FAIL tests/integration/routes/insider.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      Processing request: GET /api/insider/trades/AAPL

      at log (index.js:403:11)

    console.log
      Initializing database connection...

      at log (index.js:362:13)

    console.log
      Database connection established successfully

      at log (index.js:388:17)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üë• Insider trades requested for AAPL

      at log (routes/insider.js:25:13)

    console.log
      Processing request: GET /api/insider/trades/GOOGL

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üë• Insider trades requested for GOOGL

      at log (routes/insider.js:25:13)

    console.log
      Processing request: GET /api/insider/trades/INVALID123

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üë• Insider trades requested for INVALID123

      at log (routes/insider.js:25:13)

    console.log
      Processing request: GET /api/insider/trades/AAPL

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üë• Insider trades requested for AAPL

      at log (routes/insider.js:25:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Insider Trading API ‚Ä∫ Insider Trades ‚Ä∫ should return not implemented status for insider trades

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      13 |       const response = await request(app).get("/api/insider/trades/AAPL");
      14 |
    > 15 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
         |                                         ^
      16 |       expect(response.body).toHaveProperty("success", false);
      17 |       expect(response.body).toHaveProperty(
      18 |         "error",

      at Object.toContain (tests/integration/routes/insider.integration.test.js:15:41)

  ‚óè Insider Trading API ‚Ä∫ Insider Trades ‚Ä∫ should handle different symbols correctly

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      25 |       const response = await request(app).get("/api/insider/trades/GOOGL");
      26 |
    > 27 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
         |                                         ^
      28 |       expect(response.body).toHaveProperty("success", false);
      29 |       expect(response.body).toHaveProperty(
      30 |         "error",

      at Object.toContain (tests/integration/routes/insider.integration.test.js:27:41)

  ‚óè Insider Trading API ‚Ä∫ Error handling ‚Ä∫ should handle invalid symbols

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      39 |       const response = await request(app).get("/api/insider/trades/INVALID123");
      40 |
    > 41 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
         |                                         ^
      42 |       expect(response.body).toHaveProperty("success", false);
      43 |       expect(response.body).toHaveProperty(
      44 |         "error",

      at Object.toContain (tests/integration/routes/insider.integration.test.js:41:41)

  ‚óè Insider Trading API ‚Ä∫ Error handling ‚Ä∫ should handle server errors gracefully

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [501]

      52 |
      53 |       // Should return 501 for not implemented, not crash with 500
    > 54 |       expect([501]).toContain(response.status);
         |                     ^
      55 |       if (response.status === 501) {
      56 |         expect(response.body).toHaveProperty("success", false);
      57 |         expect(response.body).toHaveProperty("error");

      at Object.toContain (tests/integration/routes/insider.integration.test.js:54:21)

::ffff:127.0.0.1 - - [23/Sep/2025:16:32:10 +0000] "GET /api/insider/trades/AAPL HTTP/1.1" 200 265 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:10 +0000] "GET /api/insider/trades/GOOGL HTTP/1.1" 200 267 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:10 +0000] "GET /api/insider/trades/INVALID123 HTTP/1.1" 200 277 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:10 +0000] "GET /api/insider/trades/AAPL HTTP/1.1" 200 265 "-" "-"
FAIL tests/unit/routes/analytics.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully (test mode)

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:100:17)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìà Performance analytics requested for user: dev-user-bypass, period: 1m

      at log (routes/analytics.js:150:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      ‚ö†Ô∏è Risk analytics requested for user: dev-user-bypass, timeframe: 1m

      at log (routes/analytics.js:362:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Asset allocation analytics requested for user: dev-user-bypass, period: current

      at log (routes/analytics.js:716:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìà Returns analytics requested for user: dev-user-bypass, period: 1m

      at log (routes/analytics.js:832:13)

    console.log
      üè≠ Public sectors analytics requested

      at log (routes/analytics.js:925:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Volatility analytics requested for user: dev-user-bypass, period: 1m

      at log (routes/analytics.js:991:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìà Trends analytics requested for user: dev-user-bypass, period: 1m

      at log (routes/analytics.js:1074:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üî¨ Custom analytics requested for user: dev-user-bypass, type: undefined

      at log (routes/analytics.js:1167:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Analytics Routes Unit Tests ‚Ä∫ GET /analytics/correlation ‚Ä∫ should handle correlation analysis

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      65 |       const response = await request(app).get("/analytics/correlation");
      66 |
    > 67 |       expect(response.status).toBe(200);
         |                               ^
      68 |       expect(response.body).toHaveProperty("success");
      69 |     });
      70 |   });

      at Object.toBe (tests/unit/routes/analytics.test.js:67:31)

  ‚óè Analytics Routes Unit Tests ‚Ä∫ POST /analytics/custom ‚Ä∫ should handle custom analytics request

    expect(received).toContain(expected) // indexOf

    Expected value: 422
    Received array: [200, 401, 500]

      138 |         .send(customRequest);
      139 |
    > 140 |       expect([200, 401, 500]).toContain(response.status);
          |                               ^
      141 |       expect(response.body).toHaveProperty("success");
      142 |     });
      143 |   });

      at Object.toContain (tests/unit/routes/analytics.test.js:140:31)

FAIL tests/integration/routes/technical.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      üìä Daily technical analysis requested for: AAPL

      at log (routes/technical.js:150:13)

    console.log
      üìä Daily technical analysis requested for: MSFT

      at log (routes/technical.js:150:13)

    console.log
      üìä Daily technical analysis requested for: AAPL

      at log (routes/technical.js:150:13)

    console.error
      Technical analysis error for AAPL: Error: Database connection failed
          at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/routes/technical.integration.test.js:135:31)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      182 |     res.json(responseData);
      183 |   } catch (error) {
    > 184 |     console.error(`Technical analysis error for ${req.params.symbol}:`, error);
          |             ^
      185 |
      186 |     // Handle specific error types
      187 |     if (error.message && error.message.toLowerCase().includes("timeout")) {

      at error (routes/technical.js:184:13)

    console.log
      üìä Daily technical analysis requested for: AAPL

      at log (routes/technical.js:150:13)

    console.log
      üìä Weekly technical analysis requested for: AAPL

      at log (routes/technical.js:209:13)

    console.log
      üìä Weekly technical analysis requested for: UNKNOWN

      at log (routes/technical.js:209:13)

    console.error
      üìä No weekly data in database for UNKNOWN

      220 |
      221 |     if (result.rows.length === 0) {
    > 222 |       console.error(
          |               ^
      223 |         `üìä No weekly data in database for ${symbolUpper}`
      224 |       );
      225 |

      at error (routes/technical.js:222:15)

    console.log
      üìä Monthly technical analysis requested for: AAPL

      at log (routes/technical.js:263:13)

    console.log
      üìä Technical signals requested for: AAPL

      at log (routes/technical.js:2486:13)

    console.log
      üìä Technical signals requested for: AAPL

      at log (routes/technical.js:2486:13)

    console.log
      üìä Technical signals requested for: AAPL

      at log (routes/technical.js:2486:13)

    console.log
      üîç Technical screener requested - RSI: 0-30, Volume: 0+, Price: 0-10000

      at log (routes/technical.js:793:13)

    console.log
      üîç Technical screener requested - RSI: 30-70, Volume: 1000000+, Price: 0-10000

      at log (routes/technical.js:793:13)

    console.log
      üîç Technical screener requested - RSI: 0-30, Volume: 0+, Price: 0-10000

      at log (routes/technical.js:793:13)

    console.log
      üìä Daily technical analysis requested for: AAPL

      at log (routes/technical.js:150:13)

    console.error
      Technical analysis error for AAPL: Error: Query timeout
          at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/routes/technical.integration.test.js:496:31)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      182 |     res.json(responseData);
      183 |   } catch (error) {
    > 184 |     console.error(`Technical analysis error for ${req.params.symbol}:`, error);
          |             ^
      185 |
      186 |     // Handle specific error types
      187 |     if (error.message && error.message.toLowerCase().includes("timeout")) {

      at error (routes/technical.js:184:13)

    console.log
      üìä Daily technical analysis requested for: AAPL

      at log (routes/technical.js:150:13)

    console.error
      Technical analysis error for AAPL: TypeError: Cannot read properties of null (reading 'rows')
          at rows (/home/stocks/algo/webapp/lambda/routes/technical.js:163:17)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      182 |     res.json(responseData);
      183 |   } catch (error) {
    > 184 |     console.error(`Technical analysis error for ${req.params.symbol}:`, error);
          |             ^
      185 |
      186 |     // Handle specific error types
      187 |     if (error.message && error.message.toLowerCase().includes("timeout")) {

      at error (routes/technical.js:184:13)

    console.log
      üìä Daily technical analysis requested for: AAPL

      at log (routes/technical.js:150:13)

    console.log
      üìä Daily technical analysis requested for: AAPL

      at log (routes/technical.js:150:13)

    console.log
      üìä Daily technical analysis requested for: AAPL

      at log (routes/technical.js:150:13)

    console.log
      üìä Daily technical analysis requested for: AAPL

      at log (routes/technical.js:150:13)

    console.log
      üìä Daily technical analysis requested for: AAPL

      at log (routes/technical.js:150:13)

    console.log
      üìä Daily technical analysis requested for: AAPL

      at log (routes/technical.js:150:13)

    console.log
      üìä Daily technical analysis requested for: AAPL

      at log (routes/technical.js:150:13)

    console.log
      üìä Daily technical analysis requested for: AAPL

      at log (routes/technical.js:150:13)

    console.log
      üìä Daily technical analysis requested for: AAPL

      at log (routes/technical.js:150:13)

    console.log
      üìä Daily technical analysis requested for: AAPL

      at log (routes/technical.js:150:13)

    console.log
      üìä Daily technical analysis requested for: AAPL

      at log (routes/technical.js:150:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Technical Router ‚Ä∫ GET /ping ‚Ä∫ should return ping response

    expect(received).toBe(expected) // Object.is equality

    Expected: "ok"
    Received: undefined

      40 |
      41 |       expect(response.body.success).toBe(true);
    > 42 |       expect(response.body.status).toBe("ok");
         |                                    ^
      43 |       expect(response.body.endpoint).toBe("technical");
      44 |       expect(response.body.timestamp).toBeDefined();
      45 |     });

      at Object.toBe (tests/integration/routes/technical.integration.test.js:42:36)

  ‚óè Technical Router ‚Ä∫ GET /compare ‚Ä∫ should compare technical indicators across multiple symbols

    expect(received).toBe(expected) // Object.is equality

    Expected: "MSFT"
    Received: "AAPL"

      260 |       expect(response.body.data.comparison).toHaveLength(2);
      261 |       expect(response.body.data.comparison[0].symbol).toBe("AAPL");
    > 262 |       expect(response.body.data.comparison[1].symbol).toBe("MSFT");
          |                                                       ^
      263 |     });
      264 |
      265 |     test("should require symbols query parameter", async () => {

      at Object.toBe (tests/integration/routes/technical.integration.test.js:262:55)

FAIL tests/unit/routes/sentiment.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      üòä Sentiment analysis requested for symbol: AAPL, period: 7d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: AAPL, period: 7d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: AAPL, period: 1d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: AAPL, period: 3d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: AAPL, period: 7d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: AAPL, period: 14d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: AAPL, period: 30d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: AAPL, period: invalid_period

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: aapl, period: 7d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: INVALID, period: 7d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: AAPL, period: 7d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis for history, period: 7d

      at log (routes/sentiment.js:1785:13)

    console.log
      üòä Sentiment analysis for history, period: 7d

      at log (routes/sentiment.js:1785:13)

    console.log
      üì± Social sentiment overview requested - not implemented

      at log (routes/sentiment.js:252:13)

    console.log
      üì± Social sentiment overview requested - not implemented

      at log (routes/sentiment.js:252:13)

    console.log
      üì± Social sentiment overview requested - not implemented

      at log (routes/sentiment.js:252:13)

    console.log
      üìà Trending sentiment requested - not implemented

      at log (routes/sentiment.js:1039:13)

    console.log
      üìà Trending sentiment requested - not implemented

      at log (routes/sentiment.js:1039:13)

    console.log
      üìà Trending sentiment requested - not implemented

      at log (routes/sentiment.js:1039:13)

    console.log
      üìà Trending sentiment requested - not implemented

      at log (routes/sentiment.js:1039:13)

    console.log
      üìà Trending sentiment requested - not implemented

      at log (routes/sentiment.js:1039:13)

    console.log
      üìà Trending sentiment requested - not implemented

      at log (routes/sentiment.js:1039:13)

    console.log
      üìä Market sentiment analysis requested, period: 7d

      at log (routes/sentiment.js:1750:13)

    console.log
      üìä Market sentiment analysis requested, period: 7d

      at log (routes/sentiment.js:1750:13)

    console.log
      üòä Sentiment analysis requested for symbol: AAPL'; DROP TABLE sentiment; --, period: 7d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: invalid-symbol-format!@#$%, period: 7d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA, period: 7d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: AAPL, period: 7d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: AAPL, period: 7d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: AAPL, period: 7d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: AAPL, period: 7d

      at log (routes/sentiment.js:47:13)

    console.log
      üòä Sentiment analysis requested for symbol: AAPL, period: 7d

      at log (routes/sentiment.js:47:13)

    console.error
      Sentiment analysis error: TypeError: Cannot read properties of null (reading 'rows')
          at rows (/home/stocks/algo/webapp/lambda/routes/sentiment.js:84:33)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      216 |     });
      217 |   } catch (error) {
    > 218 |     console.error("Sentiment analysis error:", error);
          |             ^
      219 |     res.json({
      220 |       success: false,
      221 |       error: "Failed to perform sentiment analysis",

      at error (routes/sentiment.js:218:13)

    console.log
      üòä Sentiment analysis requested for symbol: AAPL, period: 7d

      at log (routes/sentiment.js:47:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ GET /sentiment ‚Ä∫ should return sentiment API information without authentication

    expect(received).toHaveProperty(path, value)

    Expected path: "status"
    Received path: []

    Expected value: "operational"
    Received value: {"data": {"endpoints": ["analysis", "trends", "social", "news"], "service": "sentiment", "status": "operational"}, "message": "Sentiment API - Ready", "success": true, "timestamp": "2025-09-23T16:32:11.109Z"}

      85 |       expect(response.status).toBe(200);
      86 |       expect(response.body).toHaveProperty("message", "Sentiment API - Ready");
    > 87 |       expect(response.body).toHaveProperty("status", "operational");
         |                             ^
      88 |       expect(response.body).toHaveProperty("timestamp");
      89 |
      90 |       // Verify timestamp is a valid ISO string

      at Object.toHaveProperty (tests/unit/routes/sentiment.test.js:87:29)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ GET /sentiment/analysis ‚Ä∫ should require symbol parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 422

       98 |       const response = await request(app).get("/sentiment/analysis");
       99 |
    > 100 |       expect(response.status).toBe(400);
          |                               ^
      101 |       expect(response.body).toHaveProperty("success", false);
      102 |       expect(response.body).toHaveProperty(
      103 |         "error",

      at Object.toBe (tests/unit/routes/sentiment.test.js:100:31)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ GET /sentiment/analysis ‚Ä∫ should return sentiment analysis with valid symbol

    expect(received).toHaveProperty(path, value)

    Expected path: "sentiment_score"

    Expected value: 0.75
    Received value: 0

      138 |       expect(response.body).toHaveProperty("data");
      139 |       expect(response.body.data).toHaveProperty("symbol", "AAPL");
    > 140 |       expect(response.body.data).toHaveProperty("sentiment_score", 0.75);
          |                                  ^
      141 |       expect(response.body.data).toHaveProperty("total_mentions", 80);
      142 |       expect(mockQuery).toHaveBeenCalledWith(
      143 |         expect.stringContaining("sentiment_analysis"),

      at Object.toHaveProperty (tests/unit/routes/sentiment.test.js:140:34)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ GET /sentiment/analysis ‚Ä∫ should handle empty sentiment data

    expect(received).toBe(expected) // Object.is equality

    Expected: 404
    Received: 200

      214 |         .query({ symbol: "INVALID" });
      215 |
    > 216 |       expect(response.status).toBe(404);
          |                               ^
      217 |       expect(response.body).toHaveProperty("success", false);
      218 |       expect(response.body.error).toContain("No sentiment data found");
      219 |     });

      at Object.toBe (tests/unit/routes/sentiment.test.js:216:31)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ GET /sentiment/analysis ‚Ä∫ should handle database query errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      227 |         .query({ symbol: "AAPL" });
      228 |
    > 229 |       expect(response.status).toBe(500);
          |                               ^
      230 |       expect(response.body).toHaveProperty("success", false);
      231 |       expect(response.body.error).toBeDefined();
      232 |     });

      at Object.toBe (tests/unit/routes/sentiment.test.js:229:31)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ GET /sentiment/history ‚Ä∫ should return sentiment history for symbol

    expect(received).toHaveProperty(path)

    Expected path: "data"
    Received path: []

    Received value: {"metadata": {"data_quality": "simulated", "last_updated": "2025-09-23T16:32:11.138Z", "period": "7d", "period_days": 7, "symbol": "HISTORY"}, "sentiment": {"confidence": 96, "last_updated": "2025-09-23T16:32:11.138Z", "metrics": {"mention_velocity": 137, "negative_mentions": 504, "neutral_mentions": 192, "positive_mentions": 458, "sentiment_volatility": 0.12, "total_mentions": 963}, "overall_sentiment": 0.48, "period": "7d", "sentiment_label": "Neutral", "sources": {"discord": 96, "reddit": 288, "stocktwits": 144, "twitter": 433}, "symbol": "HISTORY", "trending_keywords": ["history", "bearish", "earnings", "price", "target"]}, "success": true}

      262 |       expect(response.status).toBe(200);
      263 |       expect(response.body).toHaveProperty("success", true);
    > 264 |       expect(response.body).toHaveProperty("data");
          |                             ^
      265 |       expect(response.body.data).toHaveProperty("symbol", "GOOGL");
      266 |       expect(response.body.data).toHaveProperty("history");
      267 |       expect(Array.isArray(response.body.data.history)).toBe(true);

      at Object.toHaveProperty (tests/unit/routes/sentiment.test.js:264:29)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ GET /sentiment/history ‚Ä∫ should handle history limit parameter

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "LIMIT", ArrayContaining ["AAPL", 50]

    Number of calls: 0

      281 |
      282 |       expect(response.status).toBe(200);
    > 283 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      284 |         expect.stringContaining("LIMIT"),
      285 |         expect.arrayContaining(["AAPL", 50])
      286 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/sentiment.test.js:283:25)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ GET /sentiment/social ‚Ä∫ should return social sentiment analysis with proper structure

    expect(received).toHaveProperty(path, value)

    Expected path: "success"

    Expected value: true
    Received value: false

      295 |
      296 |       if (response.status === 200) {
    > 297 |         expect(response.body).toHaveProperty("success", true);
          |                               ^
      298 |         expect(response.body).toHaveProperty("data");
      299 |         expect(response.body.data).toHaveProperty("symbol", "AAPL");
      300 |         expect(response.body.data).toHaveProperty("social_sentiment");

      at Object.toHaveProperty (tests/unit/routes/sentiment.test.js:297:31)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ GET /sentiment/social ‚Ä∫ should handle timeframe parameter for social sentiment

    TypeError: Cannot read properties of undefined (reading 'summary')

      348 |
      349 |       if (response.status === 200) {
    > 350 |         expect(response.body.data.summary.analysis_period).toBe("24h");
          |                                   ^
      351 |       }
      352 |     });
      353 |

      at Object.summary (tests/unit/routes/sentiment.test.js:350:35)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ GET /sentiment/trending ‚Ä∫ should return trending sentiment analysis with proper structure

    expect(received).toHaveProperty(path, value)

    Expected path: "success"

    Expected value: true
    Received value: false

      369 |
      370 |       if (response.status === 200) {
    > 371 |         expect(response.body).toHaveProperty("success", true);
          |                               ^
      372 |         expect(response.body).toHaveProperty("data");
      373 |         expect(response.body.data).toHaveProperty("trending_symbols");
      374 |         expect(response.body.data).toHaveProperty("momentum_analysis");

      at Object.toHaveProperty (tests/unit/routes/sentiment.test.js:371:31)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ GET /sentiment/trending ‚Ä∫ should handle limit parameter for trending sentiment

    TypeError: Cannot read properties of undefined (reading 'trending_symbols')

      422 |
      423 |       if (response.status === 200) {
    > 424 |         expect(response.body.data.trending_symbols.length).toBeLessThanOrEqual(
          |                                   ^
      425 |           10
      426 |         );
      427 |       }

      at Object.trending_symbols (tests/unit/routes/sentiment.test.js:424:35)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ GET /sentiment/trending ‚Ä∫ should handle timeframe parameter for trending sentiment

    TypeError: Cannot read properties of undefined (reading 'summary')

      434 |
      435 |       if (response.status === 200) {
    > 436 |         expect(response.body.data.summary.analysis_window).toBe("1h");
          |                                   ^
      437 |       }
      438 |     });
      439 |

      at Object.summary (tests/unit/routes/sentiment.test.js:436:35)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ GET /sentiment/trending ‚Ä∫ should handle sorting for trending sentiment

    TypeError: Cannot read properties of undefined (reading 'trending_symbols')

      445 |       if (response.status === 200) {
      446 |         // Should be sorted by momentum/trending score
    > 447 |         const symbols = response.body.data.trending_symbols;
          |                                            ^
      448 |         if (symbols.length > 1) {
      449 |           for (let i = 1; i < symbols.length; i++) {
      450 |             expect(symbols[i - 1].trending_score).toBeGreaterThanOrEqual(

      at Object.trending_symbols (tests/unit/routes/sentiment.test.js:447:44)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ GET /sentiment/trending ‚Ä∫ should handle sector filter for trending sentiment

    TypeError: Cannot read properties of undefined (reading 'summary')

      463 |       if (response.status === 200) {
      464 |         // Should filter by sector
    > 465 |         expect(response.body.data.summary).toHaveProperty(
          |                                   ^
      466 |           "sector_filter",
      467 |           "Technology"
      468 |         );

      at Object.summary (tests/unit/routes/sentiment.test.js:465:35)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ GET /sentiment/trending ‚Ä∫ should handle minimum trending score filter

    TypeError: Cannot read properties of undefined (reading 'trending_symbols')

      476 |
      477 |       if (response.status === 200) {
    > 478 |         const symbols = response.body.data.trending_symbols;
          |                                            ^
      479 |         symbols.forEach((symbol) => {
      480 |           expect(symbol.trending_score).toBeGreaterThanOrEqual(70);
      481 |         });

      at Object.trending_symbols (tests/unit/routes/sentiment.test.js:478:44)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ GET /sentiment/market ‚Ä∫ should return overall market sentiment

    expect(received).toHaveProperty(path, value)

    Expected path: "overall_sentiment"

    Expected value: 0.62
    Received value: 0.55

      507 |       expect(response.body).toHaveProperty("success", true);
      508 |       expect(response.body).toHaveProperty("data");
    > 509 |       expect(response.body.data).toHaveProperty("overall_sentiment", 0.62);
          |                                  ^
      510 |       expect(response.body.data).toHaveProperty(
      511 |         "market_mood",
      512 |         "cautiously_optimistic"

      at Object.toHaveProperty (tests/unit/routes/sentiment.test.js:509:34)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ GET /sentiment/market ‚Ä∫ should handle empty market sentiment data

    expect(received).toHaveProperty(path, value)

    Expected path: "message"
    Received path: []

    Expected value: "No market sentiment data available"
    Received value: {"fear_greed_index": 82, "market_cap_sentiment": {"large_cap": 0.425, "mid_cap": 0.677, "small_cap": 0.68}, "overall_sentiment": 0.635, "period": "7d", "vix_level": 31.64}

      526 |       expect(response.status).toBe(200);
      527 |       expect(response.body).toHaveProperty("success", true);
    > 528 |       expect(response.body.data).toHaveProperty(
          |                                  ^
      529 |         "message",
      530 |         "No market sentiment data available"
      531 |       );

      at Object.toHaveProperty (tests/unit/routes/sentiment.test.js:528:34)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ Parameter validation ‚Ä∫ should sanitize symbol parameter

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ArrayContaining ["AAPL'; DROP TABLE sentiment; --"]
    Received: "
          SELECT
            sentiment,
            published_at,
            title,
            source,
            symbols
          FROM news_articles
          WHERE sentiment IS NOT NULL
            AND (symbols @> ARRAY[$1] OR $1 = ANY(symbols))
            AND published_at >= NOW() - INTERVAL '1 day' * $2
          ORDER BY published_at DESC
          LIMIT 100
          ", ["AAPL'; DROP TABLE SENTIMENT; --", 7]

    Number of calls: 1

      543 |       expect(response.status).toBe(200);
      544 |       // Symbol should be sanitized and used safely in prepared statement
    > 545 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      546 |         expect.any(String),
      547 |         expect.arrayContaining(["AAPL'; DROP TABLE sentiment; --"])
      548 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/sentiment.test.js:545:25)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ Parameter validation ‚Ä∫ should handle invalid symbol format

    expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 200

      554 |         .query({ symbol: "invalid-symbol-format!@#$%" });
      555 |
    > 556 |       expect(response.status).toBe(400);
          |                               ^
      557 |       expect(response.body).toHaveProperty("success", false);
      558 |       expect(response.body.error).toContain("Invalid symbol format");
      559 |     });

      at Object.toBe (tests/unit/routes/sentiment.test.js:556:31)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ Parameter validation ‚Ä∫ should handle extremely long symbol parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 200

      566 |         .query({ symbol: longSymbol });
      567 |
    > 568 |       expect(response.status).toBe(400);
          |                               ^
      569 |       expect(response.body).toHaveProperty("success", false);
      570 |       expect(response.body.error).toContain("Symbol too long");
      571 |     });

      at Object.toBe (tests/unit/routes/sentiment.test.js:568:31)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ Error handling ‚Ä∫ should handle database connection timeout

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      609 |         .query({ symbol: "AAPL" });
      610 |
    > 611 |       expect(response.status).toBe(500);
          |                               ^
      612 |       expect(response.body).toHaveProperty("success", false);
      613 |       expect(response.body.error).toContain("timeout");
      614 |     });

      at Object.toBe (tests/unit/routes/sentiment.test.js:611:31)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ Error handling ‚Ä∫ should handle malformed database results

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      621 |         .query({ symbol: "AAPL" });
      622 |
    > 623 |       expect(response.status).toBe(500);
          |                               ^
      624 |       expect(response.body).toHaveProperty("success", false);
      625 |     });
      626 |

      at Object.toBe (tests/unit/routes/sentiment.test.js:623:31)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ Error handling ‚Ä∫ should handle sentiment calculation errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      644 |         .query({ symbol: "AAPL" });
      645 |
    > 646 |       expect(response.status).toBe(500);
          |                               ^
      647 |       expect(response.body).toHaveProperty("success", false);
      648 |       expect(response.body.error).toContain("Sentiment calculation failed");
      649 |     });

      at Object.toBe (tests/unit/routes/sentiment.test.js:646:31)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ Response format ‚Ä∫ should include metadata in sentiment responses

    expect(received).toHaveProperty(path)

    Expected path: "data"
    Received path: []

    Received value: {"details": "Cannot read properties of null (reading 'rows')", "error": "Failed to perform sentiment analysis", "success": false}

      667 |       if (response.status === 200) {
      668 |         expect(response.body).toHaveProperty("success");
    > 669 |         expect(response.body).toHaveProperty("data");
          |                               ^
      670 |       }
      671 |     });
      672 |

      at Object.toHaveProperty (tests/unit/routes/sentiment.test.js:669:31)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ Response format ‚Ä∫ should include analysis metadata

    expect(received).toHaveProperty(path, value)

    Expected path: "analysis_period"
    Received path: []

    Expected value: "7d"
    Received value: {"articles_analyzed": 1, "daily_sentiment": {"2025-09-23": {"negative": 0, "neutral": 1, "positive": 0, "total": 1}}, "period": "7d", "recent_articles": [{}], "sentiment_breakdown": {"negative": 0, "negative_pct": "0.0", "neutral": 1, "neutral_pct": "100.0", "positive": 0, "positive_pct": "0.0"}, "sentiment_grade": "Neutral", "sentiment_score": 0, "symbol": "AAPL", "trend": "stable"}

      692 |       expect(response.status).toBe(200);
      693 |       expect(response.body.data).toHaveProperty("symbol");
    > 694 |       expect(response.body.data).toHaveProperty("analysis_period", "7d");
          |                                  ^
      695 |       expect(response.body.data).toHaveProperty("last_updated");
      696 |     });
      697 |   });

      at Object.toHaveProperty (tests/unit/routes/sentiment.test.js:694:34)

FAIL tests/performance/api-load-testing.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè API Load Testing and Performance ‚Ä∫ Concurrent Request Handling ‚Ä∫ should handle multiple concurrent health check requests

    TypeError: Cannot read properties of undefined (reading 'query')

      17 |
      18 |     // Setup test data for load testing
    > 19 |     await testDatabase.query(`
         |                        ^
      20 |       INSERT INTO stock_prices (symbol, price, change_amount, change_percent, volume)
      21 |       VALUES 
      22 |         ('AAPL', 189.45, 2.15, 1.15, 45000000),

      at Object.query (tests/performance/api-load-testing.test.js:19:24)

  ‚óè API Load Testing and Performance ‚Ä∫ Concurrent Request Handling ‚Ä∫ should handle concurrent authenticated requests

    TypeError: Cannot read properties of undefined (reading 'query')

      17 |
      18 |     // Setup test data for load testing
    > 19 |     await testDatabase.query(`
         |                        ^
      20 |       INSERT INTO stock_prices (symbol, price, change_amount, change_percent, volume)
      21 |       VALUES 
      22 |         ('AAPL', 189.45, 2.15, 1.15, 45000000),

      at Object.query (tests/performance/api-load-testing.test.js:19:24)

  ‚óè API Load Testing and Performance ‚Ä∫ Concurrent Request Handling ‚Ä∫ should maintain performance under database load

    TypeError: Cannot read properties of undefined (reading 'query')

      17 |
      18 |     // Setup test data for load testing
    > 19 |     await testDatabase.query(`
         |                        ^
      20 |       INSERT INTO stock_prices (symbol, price, change_amount, change_percent, volume)
      21 |       VALUES 
      22 |         ('AAPL', 189.45, 2.15, 1.15, 45000000),

      at Object.query (tests/performance/api-load-testing.test.js:19:24)

  ‚óè API Load Testing and Performance ‚Ä∫ Response Time Benchmarks ‚Ä∫ health endpoint should respond quickly

    TypeError: Cannot read properties of undefined (reading 'query')

      17 |
      18 |     // Setup test data for load testing
    > 19 |     await testDatabase.query(`
         |                        ^
      20 |       INSERT INTO stock_prices (symbol, price, change_amount, change_percent, volume)
      21 |       VALUES 
      22 |         ('AAPL', 189.45, 2.15, 1.15, 45000000),

      at Object.query (tests/performance/api-load-testing.test.js:19:24)

  ‚óè API Load Testing and Performance ‚Ä∫ Response Time Benchmarks ‚Ä∫ stock data endpoints should meet performance targets

    TypeError: Cannot read properties of undefined (reading 'query')

      17 |
      18 |     // Setup test data for load testing
    > 19 |     await testDatabase.query(`
         |                        ^
      20 |       INSERT INTO stock_prices (symbol, price, change_amount, change_percent, volume)
      21 |       VALUES 
      22 |         ('AAPL', 189.45, 2.15, 1.15, 45000000),

      at Object.query (tests/performance/api-load-testing.test.js:19:24)

  ‚óè API Load Testing and Performance ‚Ä∫ Response Time Benchmarks ‚Ä∫ should maintain performance with large response payloads

    TypeError: Cannot read properties of undefined (reading 'query')

      17 |
      18 |     // Setup test data for load testing
    > 19 |     await testDatabase.query(`
         |                        ^
      20 |       INSERT INTO stock_prices (symbol, price, change_amount, change_percent, volume)
      21 |       VALUES 
      22 |         ('AAPL', 189.45, 2.15, 1.15, 45000000),

      at Object.query (tests/performance/api-load-testing.test.js:19:24)

  ‚óè API Load Testing and Performance ‚Ä∫ Rate Limiting and Throttling ‚Ä∫ should handle rapid successive requests appropriately

    TypeError: Cannot read properties of undefined (reading 'query')

      17 |
      18 |     // Setup test data for load testing
    > 19 |     await testDatabase.query(`
         |                        ^
      20 |       INSERT INTO stock_prices (symbol, price, change_amount, change_percent, volume)
      21 |       VALUES 
      22 |         ('AAPL', 189.45, 2.15, 1.15, 45000000),

      at Object.query (tests/performance/api-load-testing.test.js:19:24)

  ‚óè API Load Testing and Performance ‚Ä∫ Rate Limiting and Throttling ‚Ä∫ should recover from rate limiting gracefully

    TypeError: Cannot read properties of undefined (reading 'query')

      17 |
      18 |     // Setup test data for load testing
    > 19 |     await testDatabase.query(`
         |                        ^
      20 |       INSERT INTO stock_prices (symbol, price, change_amount, change_percent, volume)
      21 |       VALUES 
      22 |         ('AAPL', 189.45, 2.15, 1.15, 45000000),

      at Object.query (tests/performance/api-load-testing.test.js:19:24)

  ‚óè API Load Testing and Performance ‚Ä∫ Memory and Resource Usage ‚Ä∫ should maintain stable memory usage under load

    TypeError: Cannot read properties of undefined (reading 'query')

      17 |
      18 |     // Setup test data for load testing
    > 19 |     await testDatabase.query(`
         |                        ^
      20 |       INSERT INTO stock_prices (symbol, price, change_amount, change_percent, volume)
      21 |       VALUES 
      22 |         ('AAPL', 189.45, 2.15, 1.15, 45000000),

      at Object.query (tests/performance/api-load-testing.test.js:19:24)

  ‚óè API Load Testing and Performance ‚Ä∫ Memory and Resource Usage ‚Ä∫ should handle connection cleanup properly

    TypeError: Cannot read properties of undefined (reading 'query')

      17 |
      18 |     // Setup test data for load testing
    > 19 |     await testDatabase.query(`
         |                        ^
      20 |       INSERT INTO stock_prices (symbol, price, change_amount, change_percent, volume)
      21 |       VALUES 
      22 |         ('AAPL', 189.45, 2.15, 1.15, 45000000),

      at Object.query (tests/performance/api-load-testing.test.js:19:24)

  ‚óè API Load Testing and Performance ‚Ä∫ Database Performance Under Load ‚Ä∫ should handle concurrent database queries efficiently

    TypeError: Cannot read properties of undefined (reading 'query')

      17 |
      18 |     // Setup test data for load testing
    > 19 |     await testDatabase.query(`
         |                        ^
      20 |       INSERT INTO stock_prices (symbol, price, change_amount, change_percent, volume)
      21 |       VALUES 
      22 |         ('AAPL', 189.45, 2.15, 1.15, 45000000),

      at Object.query (tests/performance/api-load-testing.test.js:19:24)

  ‚óè API Load Testing and Performance ‚Ä∫ Database Performance Under Load ‚Ä∫ should maintain query performance with data growth

    TypeError: Cannot read properties of undefined (reading 'query')

      17 |
      18 |     // Setup test data for load testing
    > 19 |     await testDatabase.query(`
         |                        ^
      20 |       INSERT INTO stock_prices (symbol, price, change_amount, change_percent, volume)
      21 |       VALUES 
      22 |         ('AAPL', 189.45, 2.15, 1.15, 45000000),

      at Object.query (tests/performance/api-load-testing.test.js:19:24)

  ‚óè API Load Testing and Performance ‚Ä∫ Error Handling Performance ‚Ä∫ should handle errors efficiently without performance degradation

    TypeError: Cannot read properties of undefined (reading 'query')

      17 |
      18 |     // Setup test data for load testing
    > 19 |     await testDatabase.query(`
         |                        ^
      20 |       INSERT INTO stock_prices (symbol, price, change_amount, change_percent, volume)
      21 |       VALUES 
      22 |         ('AAPL', 189.45, 2.15, 1.15, 45000000),

      at Object.query (tests/performance/api-load-testing.test.js:19:24)

  ‚óè API Load Testing and Performance ‚Ä∫ Error Handling Performance ‚Ä∫ should handle authentication errors efficiently

    TypeError: Cannot read properties of undefined (reading 'query')

      17 |
      18 |     // Setup test data for load testing
    > 19 |     await testDatabase.query(`
         |                        ^
      20 |       INSERT INTO stock_prices (symbol, price, change_amount, change_percent, volume)
      21 |       VALUES 
      22 |         ('AAPL', 189.45, 2.15, 1.15, 45000000),

      at Object.query (tests/performance/api-load-testing.test.js:19:24)

  ‚óè API Load Testing and Performance ‚Ä∫ Performance Monitoring and Metrics ‚Ä∫ should track response time metrics

    TypeError: Cannot read properties of undefined (reading 'query')

      17 |
      18 |     // Setup test data for load testing
    > 19 |     await testDatabase.query(`
         |                        ^
      20 |       INSERT INTO stock_prices (symbol, price, change_amount, change_percent, volume)
      21 |       VALUES 
      22 |         ('AAPL', 189.45, 2.15, 1.15, 45000000),

      at Object.query (tests/performance/api-load-testing.test.js:19:24)

  ‚óè API Load Testing and Performance ‚Ä∫ Performance Monitoring and Metrics ‚Ä∫ should maintain consistent performance across test run

    TypeError: Cannot read properties of undefined (reading 'query')

      17 |
      18 |     // Setup test data for load testing
    > 19 |     await testDatabase.query(`
         |                        ^
      20 |       INSERT INTO stock_prices (symbol, price, change_amount, change_percent, volume)
      21 |       VALUES 
      22 |         ('AAPL', 189.45, 2.15, 1.15, 45000000),

      at Object.query (tests/performance/api-load-testing.test.js:19:24)

FAIL tests/unit/routes/trades.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      JWT verifier initialized successfully (test mode)

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:100:17)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      Getting trade import status for user: test-user-123

      at log (routes/trades.js:760:13)

    console.error
      Database query failed for broker status: Cannot read properties of undefined (reading 'rows')

      793 |       });
      794 |     } catch (dbError) {
    > 795 |       console.error(
          |               ^
      796 |         "Database query failed for broker status:",
      797 |         dbError.message
      798 |       );

      at error (routes/trades.js:795:15)

    console.error
      ‚ùå Broker status unavailable - comprehensive diagnosis needed {
        database_query_failed: true,
        detailed_diagnostics: {
          attempted_operations: [ 'broker_api_configs_query', 'user_api_keys_join' ],
          potential_causes: [
            'Database connection failure',
            'broker_api_configs table missing',
            'user_api_keys table missing',
            'Data sync process failed',
            'User authentication issues'
          ],
          troubleshooting_steps: [
            'Check database connectivity',
            'Verify broker_api_configs table exists',
            'Verify user_api_keys table exists',
            'Check data sync process status',
            'Review user authentication flow'
          ],
          system_checks: [
            'Database health status',
            'Table existence validation',
            'Data sync service availability',
            'Authentication service health'
          ]
        }
      }

      799 |
      800 |       // Return empty broker status with comprehensive diagnostics
    > 801 |       console.error(
          |               ^
      802 |         "‚ùå Broker status unavailable - comprehensive diagnosis needed",
      803 |         {
      804 |           database_query_failed: true,

      at error (routes/trades.js:801:15)

    console.log
      Getting trade import status for user: test-user-123

      at log (routes/trades.js:760:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ Authentication ‚Ä∫ should handle route errors gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 401

      146 |
      147 |       // Should return 500 for database errors
    > 148 |       expect(response.status).toBe(500);
          |                               ^
      149 |       expect(response.body).toHaveProperty("success", false);
      150 |     });
      151 |   });

      at Object.toBe (tests/unit/routes/trades.test.js:148:31)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/history - Trade history ‚Ä∫ should return user trade history with pagination

    expected 200 "OK", got 401 "Unauthorized"

      180 |       query.mockResolvedValue({ rows: mockTrades });
      181 |
    > 182 |       const response = await request(app).get("/trades/history").expect(200);
          |                                                                  ^
      183 |
      184 |       expect(response.body).toHaveProperty("success", true);
      185 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/trades.test.js:182:66)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/history - Trade history ‚Ä∫ should handle date range filtering

    expected 200 "OK", got 401 "Unauthorized"

      202 |       const response = await request(app)
      203 |         .get("/trades/history?start_date=2024-01-01&end_date=2024-01-31")
    > 204 |         .expect(200);
          |          ^
      205 |
      206 |       expect(response.body.success).toBe(true);
      207 |       expect(query).toHaveBeenCalled();

      at Object.expect (tests/unit/routes/trades.test.js:204:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/history - Trade history ‚Ä∫ should filter by symbol

    expected 200 "OK", got 401 "Unauthorized"

      213 |       const response = await request(app)
      214 |         .get("/trades/history?symbol=AAPL")
    > 215 |         .expect(200);
          |          ^
      216 |
      217 |       expect(response.body.success).toBe(true);
      218 |       expect(query).toHaveBeenCalled();

      at Object.expect (tests/unit/routes/trades.test.js:215:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/history - Trade history ‚Ä∫ should support pagination parameters

    expected 200 "OK", got 401 "Unauthorized"

      224 |       const response = await request(app)
      225 |         .get("/trades/history?page=2&limit=25")
    > 226 |         .expect(200);
          |          ^
      227 |
      228 |       expect(response.body.success).toBe(true);
      229 |       expect(response.body.data.pagination).toHaveProperty("page", 2);

      at Object.expect (tests/unit/routes/trades.test.js:226:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/analytics - Trade analytics ‚Ä∫ should return trade performance analytics

    expected 200 "OK", got 401 "Unauthorized"

      249 |       query.mockResolvedValue({ rows: [mockAnalytics] });
      250 |
    > 251 |       const response = await request(app).get("/trades/analytics").expect(200);
          |                                                                    ^
      252 |
      253 |       expect(response.body).toHaveProperty("success", true);
      254 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/trades.test.js:251:68)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/analytics - Trade analytics ‚Ä∫ should handle time period filters

    expected 200 "OK", got 401 "Unauthorized"

      267 |       const response = await request(app)
      268 |         .get("/trades/analytics?period=30d")
    > 269 |         .expect(200);
          |          ^
      270 |
      271 |       expect(response.body.success).toBe(true);
      272 |       expect(query).toHaveBeenCalled();

      at Object.expect (tests/unit/routes/trades.test.js:269:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/analytics - Trade analytics ‚Ä∫ should include benchmark comparison

    expected 200 "OK", got 401 "Unauthorized"

      278 |       const response = await request(app)
      279 |         .get("/trades/analytics?benchmark=SPY")
    > 280 |         .expect(200);
          |          ^
      281 |
      282 |       expect(response.body.success).toBe(true);
      283 |       expect(query).toHaveBeenCalled();

      at Object.expect (tests/unit/routes/trades.test.js:280:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ POST /trades/import - Import trades ‚Ä∫ should import trades from CSV data

    expected 200 "OK", got 401 "Unauthorized"

      304 |         .field("format", "csv")
      305 |         .field("data", csvData)
    > 306 |         .expect(200);
          |          ^
      307 |
      308 |       expect(response.body).toHaveProperty("success", true);
      309 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/trades.test.js:306:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ POST /trades/import - Import trades ‚Ä∫ should validate required fields

    expected 400 "Bad Request", got 401 "Unauthorized"

      316 |         .post("/trades/import")
      317 |         .send({})
    > 318 |         .expect(400);
          |          ^
      319 |
      320 |       expect(response.body.success).toBe(false);
      321 |       expect(response.body).toHaveProperty("error");

      at Object.expect (tests/unit/routes/trades.test.js:318:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ POST /trades/import - Import trades ‚Ä∫ should handle duplicate trades

    expected 200 "OK", got 401 "Unauthorized"

      345 |         .post("/trades/import")
      346 |         .send(tradeData)
    > 347 |         .expect(200);
          |          ^
      348 |
      349 |       expect(response.body.success).toBe(true);
      350 |       expect(response.body.data).toHaveProperty("duplicates_skipped");

      at Object.expect (tests/unit/routes/trades.test.js:347:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ POST /trades/import - Import trades ‚Ä∫ should handle invalid data formats

    expected 400 "Bad Request", got 401 "Unauthorized"

      355 |         .post("/trades/import")
      356 |         .send({ format: "invalid", data: "bad data" })
    > 357 |         .expect(400);
          |          ^
      358 |
      359 |       expect(response.body.success).toBe(false);
      360 |       expect(response.body.error).toContain("format");

      at Object.expect (tests/unit/routes/trades.test.js:357:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/export - Export trades ‚Ä∫ should export trades in CSV format

    expected 200 "OK", got 401 "Unauthorized"

      378 |       const response = await request(app)
      379 |         .get("/trades/export?format=csv")
    > 380 |         .expect(200);
          |          ^
      381 |
      382 |       expect(response.body).toHaveProperty("success", true);
      383 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/trades.test.js:380:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/export - Export trades ‚Ä∫ should export trades in JSON format

    expected 200 "OK", got 401 "Unauthorized"

      401 |       const response = await request(app)
      402 |         .get("/trades/export?format=json")
    > 403 |         .expect(200);
          |          ^
      404 |
      405 |       expect(response.body.success).toBe(true);
      406 |       expect(response.body.data.format).toBe("json");

      at Object.expect (tests/unit/routes/trades.test.js:403:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/export - Export trades ‚Ä∫ should handle date range for export

    expected 200 "OK", got 401 "Unauthorized"

      415 |           "/trades/export?format=csv&start_date=2024-01-01&end_date=2024-01-31"
      416 |         )
    > 417 |         .expect(200);
          |          ^
      418 |
      419 |       expect(response.body.success).toBe(true);
      420 |       expect(query).toHaveBeenCalled();

      at Object.expect (tests/unit/routes/trades.test.js:417:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/brokers - Broker integration status ‚Ä∫ should return connected brokers status

    expected 200 "OK", got 401 "Unauthorized"

      445 |       query.mockResolvedValue({ rows: mockBrokers });
      446 |
    > 447 |       const response = await request(app).get("/trades/brokers").expect(200);
          |                                                                  ^
      448 |
      449 |       expect(response.body).toHaveProperty("success", true);
      450 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/trades.test.js:447:66)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ POST /trades/sync/:broker - Sync trades from broker ‚Ä∫ should sync trades from Alpaca

    expected 200 "OK", got 404 "Not Found"

      479 |         .post("/trades/sync/alpaca")
      480 |         .send({ start_date: "2024-01-01", end_date: "2024-01-15" })
    > 481 |         .expect(200);
          |          ^
      482 |
      483 |       expect(response.body).toHaveProperty("success", true);
      484 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/trades.test.js:481:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ POST /trades/sync/:broker - Sync trades from broker ‚Ä∫ should handle unsupported broker

    expected 400 "Bad Request", got 404 "Not Found"

      492 |         .post("/trades/sync/unsupported_broker")
      493 |         .send({ start_date: "2024-01-01" })
    > 494 |         .expect(400);
          |          ^
      495 |
      496 |       expect(response.body.success).toBe(false);
      497 |       expect(response.body.error).toContain("broker");

      at Object.expect (tests/unit/routes/trades.test.js:494:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ POST /trades/sync/:broker - Sync trades from broker ‚Ä∫ should validate date parameters

    expected 400 "Bad Request", got 404 "Not Found"

      502 |         .post("/trades/sync/alpaca")
      503 |         .send({ start_date: "invalid-date" })
    > 504 |         .expect(400);
          |          ^
      505 |
      506 |       expect(response.body.success).toBe(false);
      507 |       expect(response.body.error).toContain("date");

      at Object.expect (tests/unit/routes/trades.test.js:504:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/performance - Performance analysis ‚Ä∫ should return detailed performance metrics

    expected 200 "OK", got 401 "Unauthorized"

      531 |       const response = await request(app)
      532 |         .get("/trades/performance")
    > 533 |         .expect(200);
          |          ^
      534 |
      535 |       expect(response.body).toHaveProperty("success", true);
      536 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/trades.test.js:533:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/performance - Performance analysis ‚Ä∫ should include benchmark comparison

    expected 200 "OK", got 401 "Unauthorized"

      549 |       const response = await request(app)
      550 |         .get("/trades/performance?benchmark=SPY")
    > 551 |         .expect(200);
          |          ^
      552 |
      553 |       expect(response.body.success).toBe(true);
      554 |       if (response.body.data.benchmark) {

      at Object.expect (tests/unit/routes/trades.test.js:551:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/performance - Performance analysis ‚Ä∫ should support different time periods

    expected 200 "OK", got 401 "Unauthorized"

      563 |       const response = await request(app)
      564 |         .get("/trades/performance?period=1y")
    > 565 |         .expect(200);
          |          ^
      566 |
      567 |       expect(response.body.success).toBe(true);
      568 |       if (response.body.data.period_info) {

      at Object.expect (tests/unit/routes/trades.test.js:565:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/performance/attribution - Performance attribution ‚Ä∫ should return performance attribution analysis

    expected 200 "OK", got 404 "Not Found"

      594 |       const response = await request(app)
      595 |         .get("/trades/performance/attribution")
    > 596 |         .expect(200);
          |          ^
      597 |
      598 |       expect(response.body).toHaveProperty("success", true);
      599 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/trades.test.js:596:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/stats - Trade statistics ‚Ä∫ should return comprehensive trade statistics

    expected 200 "OK", got 401 "Unauthorized"

      628 |       query.mockResolvedValue({ rows: [mockStats] });
      629 |
    > 630 |       const response = await request(app).get("/trades/stats").expect(200);
          |                                                                ^
      631 |
      632 |       expect(response.body).toHaveProperty("success", true);
      633 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/trades.test.js:630:64)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/stats - Trade statistics ‚Ä∫ should filter stats by date range

    expected 200 "OK", got 401 "Unauthorized"

      646 |       const response = await request(app)
      647 |         .get("/trades/stats?start_date=2024-01-01&end_date=2024-01-31")
    > 648 |         .expect(200);
          |          ^
      649 |
      650 |       expect(response.body.success).toBe(true);
      651 |       expect(query).toHaveBeenCalled();

      at Object.expect (tests/unit/routes/trades.test.js:648:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/stats - Trade statistics ‚Ä∫ should group stats by time period

    expected 200 "OK", got 401 "Unauthorized"

      657 |       const response = await request(app)
      658 |         .get("/trades/stats?group_by=month")
    > 659 |         .expect(200);
          |          ^
      660 |
      661 |       expect(response.body.success).toBe(true);
      662 |       expect(query).toHaveBeenCalled();

      at Object.expect (tests/unit/routes/trades.test.js:659:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ POST /trades/validate - Trade validation ‚Ä∫ should validate trade data before import

    expected 200 "OK", got 404 "Not Found"

      681 |         .post("/trades/validate")
      682 |         .send({ trades: [tradeData] })
    > 683 |         .expect(200);
          |          ^
      684 |
      685 |       expect(response.body).toHaveProperty("success", true);
      686 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/trades.test.js:683:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ POST /trades/validate - Trade validation ‚Ä∫ should identify invalid trade data

    expected 200 "OK", got 404 "Not Found"

      702 |         .post("/trades/validate")
      703 |         .send({ trades: [invalidTrade] })
    > 704 |         .expect(200);
          |          ^
      705 |
      706 |       expect(response.body.success).toBe(true);
      707 |       expect(response.body.data.invalid_trades.length).toBeGreaterThan(0);

      at Object.expect (tests/unit/routes/trades.test.js:704:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ POST /trades/search - Advanced trade search ‚Ä∫ should search trades by multiple criteria

    expected 200 "OK", got 404 "Not Found"

      734 |         .post("/trades/search")
      735 |         .send(searchCriteria)
    > 736 |         .expect(200);
          |          ^
      737 |
      738 |       expect(response.body).toHaveProperty("success", true);
      739 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/trades.test.js:736:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ POST /trades/search - Advanced trade search ‚Ä∫ should handle empty search criteria

    expected 400 "Bad Request", got 404 "Not Found"

      747 |         .post("/trades/search")
      748 |         .send({})
    > 749 |         .expect(400);
          |          ^
      750 |
      751 |       expect(response.body.success).toBe(false);
      752 |       expect(response.body.error).toContain("criteria");

      at Object.expect (tests/unit/routes/trades.test.js:749:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ Error handling ‚Ä∫ should handle database connection errors

    expected 500 "Internal Server Error", got 401 "Unauthorized"

      762 |       query.mockRejectedValue(new Error("Connection timeout"));
      763 |
    > 764 |       const response = await request(app).get("/trades/history").expect(500);
          |                                                                  ^
      765 |
      766 |       expect(response.body).toHaveProperty("success", false);
      767 |       expect(response.body).toHaveProperty("error");

      at Object.expect (tests/unit/routes/trades.test.js:764:66)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ Error handling ‚Ä∫ should handle transaction rollback on import errors

    expected 500 "Internal Server Error", got 401 "Unauthorized"

      774 |         .post("/trades/import")
      775 |         .send({ format: "json", trades: [] })
    > 776 |         .expect(500);
          |          ^
      777 |
      778 |       expect(response.body.success).toBe(false);
      779 |       expect(response.body.error).toContain("import");

      at Object.expect (tests/unit/routes/trades.test.js:776:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ Error handling ‚Ä∫ should handle malformed request data

    expected 400 "Bad Request", got 401 "Unauthorized"

      784 |         .post("/trades/import")
      785 |         .send("invalid json data")
    > 786 |         .expect(400);
          |          ^
      787 |
      788 |       expect(response.body).toHaveProperty("error");
      789 |     });

      at Object.expect (tests/unit/routes/trades.test.js:786:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ Error handling ‚Ä∫ should handle various error scenarios

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 401

      809 |
      810 |       // Should return 500 for database errors
    > 811 |       expect(response.status).toBe(500);
          |                               ^
      812 |       expect(response.body).toHaveProperty("success", false);
      813 |     });
      814 |

      at Object.toBe (tests/unit/routes/trades.test.js:811:31)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ Error handling ‚Ä∫ should validate request parameters

    expected one of "200, 400", got 401 "Unauthorized"

      816 |       const response = await request(app)
      817 |         .get("/trades/history?page=invalid&limit=abc")
    > 818 |         .expect([200, 400]); // May succeed with defaults or return validation error
          |          ^
      819 |
      820 |       expect(response.body).toHaveProperty("success");
      821 |     });

      at Object.expect (tests/unit/routes/trades.test.js:818:10)
      ----
      at Test._assertStatusArray (node_modules/supertest/lib/test.js:268:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

FAIL tests/unit/routes/dividend.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      üí∞ Dividend history requested for AAPL

      at log (routes/dividend.js:440:13)

    console.warn
      No database result for dividend history query: AAPL

      464 |     // Handle cases where query returns undefined or null (database not available)
      465 |     if (!result) {
    > 466 |       console.warn(`No database result for dividend history query: ${symbol}`);
          |               ^
      467 |       // Return 200 with empty data for test compatibility when database unavailable
      468 |       return res.status(200).json({
      469 |         success: true,

      at warn (routes/dividend.js:466:15)

    console.log
      üí∞ Dividend history requested for AAPL

      at log (routes/dividend.js:440:13)

    console.warn
      No database result for dividend history query: aapl

      464 |     // Handle cases where query returns undefined or null (database not available)
      465 |     if (!result) {
    > 466 |       console.warn(`No database result for dividend history query: ${symbol}`);
          |               ^
      467 |       // Return 200 with empty data for test compatibility when database unavailable
      468 |       return res.status(200).json({
      469 |         success: true,

      at warn (routes/dividend.js:466:15)

    console.log
      üí∞ Dividend history requested for BRK.B

      at log (routes/dividend.js:440:13)

    console.warn
      No database result for dividend history query: BRK.B

      464 |     // Handle cases where query returns undefined or null (database not available)
      465 |     if (!result) {
    > 466 |       console.warn(`No database result for dividend history query: ${symbol}`);
          |               ^
      467 |       // Return 200 with empty data for test compatibility when database unavailable
      468 |       return res.status(200).json({
      469 |         success: true,

      at warn (routes/dividend.js:466:15)

    console.log
      üí∞ Dividend history requested for AAPL

      at log (routes/dividend.js:440:13)

    console.warn
      No database result for dividend history query: AAPL

      464 |     // Handle cases where query returns undefined or null (database not available)
      465 |     if (!result) {
    > 466 |       console.warn(`No database result for dividend history query: ${symbol}`);
          |               ^
      467 |       // Return 200 with empty data for test compatibility when database unavailable
      468 |       return res.status(200).json({
      469 |         success: true,

      at warn (routes/dividend.js:466:15)

    console.error
      Dividend history error: Error: Console error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:79:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:440:13)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:365:14)
          at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:376:14)
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:421:3)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      560 |     });
      561 |   } catch (error) {
    > 562 |     console.error("Dividend history error:", error);
          |             ^
      563 |     res.status(500).json({
      564 |       success: false,
      565 |       error: "Failed to fetch dividend history",

      at error (routes/dividend.js:562:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      Calendar error: Error: Console error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:79:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:33:13)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      87 |     });
      88 |   } catch (error) {
    > 89 |     console.error("Calendar error:", error);
         |             ^
      90 |     res.status(500).json({
      91 |       success: false,
      92 |       error: "Failed to fetch dividend calendar",

      at error (routes/dividend.js:89:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      Calendar error: Error: Console error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:79:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:33:13)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      87 |     });
      88 |   } catch (error) {
    > 89 |     console.error("Calendar error:", error);
         |             ^
      90 |     res.status(500).json({
      91 |       success: false,
      92 |       error: "Failed to fetch dividend calendar",

      at error (routes/dividend.js:89:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      Calendar error: Error: Console error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:79:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:33:13)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      87 |     });
      88 |   } catch (error) {
    > 89 |     console.error("Calendar error:", error);
         |             ^
      90 |     res.status(500).json({
      91 |       success: false,
      92 |       error: "Failed to fetch dividend calendar",

      at error (routes/dividend.js:89:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      Calendar error: Error: Console error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:79:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:33:13)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      87 |     });
      88 |   } catch (error) {
    > 89 |     console.error("Calendar error:", error);
         |             ^
      90 |     res.status(500).json({
      91 |       success: false,
      92 |       error: "Failed to fetch dividend calendar",

      at error (routes/dividend.js:89:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      Calendar error: Error: Console error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:79:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:33:13)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      87 |     });
      88 |   } catch (error) {
    > 89 |     console.error("Calendar error:", error);
         |             ^
      90 |     res.status(500).json({
      91 |       success: false,
      92 |       error: "Failed to fetch dividend calendar",

      at error (routes/dividend.js:89:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      Calendar error: Error: Console error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:79:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:33:13)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      87 |     });
      88 |   } catch (error) {
    > 89 |     console.error("Calendar error:", error);
         |             ^
      90 |     res.status(500).json({
      91 |       success: false,
      92 |       error: "Failed to fetch dividend calendar",

      at error (routes/dividend.js:89:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      Calendar error: Error: Console error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:79:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:33:13)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      87 |     });
      88 |   } catch (error) {
    > 89 |     console.error("Calendar error:", error);
         |             ^
      90 |     res.status(500).json({
      91 |       success: false,
      92 |       error: "Failed to fetch dividend calendar",

      at error (routes/dividend.js:89:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      Calendar error: Error: Console error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:79:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:33:13)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      87 |     });
      88 |   } catch (error) {
    > 89 |     console.error("Calendar error:", error);
         |             ^
      90 |     res.status(500).json({
      91 |       success: false,
      92 |       error: "Failed to fetch dividend calendar",

      at error (routes/dividend.js:89:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      Calendar error: Error: Console error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:79:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:33:13)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      87 |     });
      88 |   } catch (error) {
    > 89 |     console.error("Calendar error:", error);
         |             ^
      90 |     res.status(500).json({
      91 |       success: false,
      92 |       error: "Failed to fetch dividend calendar",

      at error (routes/dividend.js:89:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      Calendar error: Error: Console error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:79:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:33:13)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      87 |     });
      88 |   } catch (error) {
    > 89 |     console.error("Calendar error:", error);
         |             ^
      90 |     res.status(500).json({
      91 |       success: false,
      92 |       error: "Failed to fetch dividend calendar",

      at error (routes/dividend.js:89:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      Calendar error: Error: Console error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:79:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:33:13)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      87 |     });
      88 |   } catch (error) {
    > 89 |     console.error("Calendar error:", error);
         |             ^
      90 |     res.status(500).json({
      91 |       success: false,
      92 |       error: "Failed to fetch dividend calendar",

      at error (routes/dividend.js:89:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      Dividend history error: Error: Console error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:79:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:440:13)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:365:14)
          at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:376:14)
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:421:3)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      560 |     });
      561 |   } catch (error) {
    > 562 |     console.error("Dividend history error:", error);
          |             ^
      563 |     res.status(500).json({
      564 |       success: false,
      565 |       error: "Failed to fetch dividend history",

      at error (routes/dividend.js:562:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      Dividend history error: Error: Console error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:79:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:440:13)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:365:14)
          at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:376:14)
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:421:3)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      560 |     });
      561 |   } catch (error) {
    > 562 |     console.error("Dividend history error:", error);
          |             ^
      563 |     res.status(500).json({
      564 |       success: false,
      565 |       error: "Failed to fetch dividend history",

      at error (routes/dividend.js:562:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      Calendar error: Error: Console error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:79:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:33:13)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      87 |     });
      88 |   } catch (error) {
    > 89 |     console.error("Calendar error:", error);
         |             ^
      90 |     res.status(500).json({
      91 |       success: false,
      92 |       error: "Failed to fetch dividend calendar",

      at error (routes/dividend.js:89:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      Calendar error: Error: Console error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:79:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:33:13)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      87 |     });
      88 |   } catch (error) {
    > 89 |     console.error("Calendar error:", error);
         |             ^
      90 |     res.status(500).json({
      91 |       success: false,
      92 |       error: "Failed to fetch dividend calendar",

      at error (routes/dividend.js:89:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      Calendar error: Error: Console error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:79:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:33:13)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      87 |     });
      88 |   } catch (error) {
    > 89 |     console.error("Calendar error:", error);
         |             ^
      90 |     res.status(500).json({
      91 |       success: false,
      92 |       error: "Failed to fetch dividend calendar",

      at error (routes/dividend.js:89:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      Calendar error: Error: Console error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:79:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:33:13)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      87 |     });
      88 |   } catch (error) {
    > 89 |     console.error("Calendar error:", error);
         |             ^
      90 |     res.status(500).json({
      91 |       success: false,
      92 |       error: "Failed to fetch dividend calendar",

      at error (routes/dividend.js:89:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      Calendar error: Error: Console error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:79:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:33:13)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      87 |     });
      88 |   } catch (error) {
    > 89 |     console.error("Calendar error:", error);
         |             ^
      90 |     res.status(500).json({
      91 |       success: false,
      92 |       error: "Failed to fetch dividend calendar",

      at error (routes/dividend.js:89:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      Dividend history error: Error: Console error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:79:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:440:13)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:365:14)
          at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:376:14)
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:421:3)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      560 |     });
      561 |   } catch (error) {
    > 562 |     console.error("Dividend history error:", error);
          |             ^
      563 |     res.status(500).json({
      564 |       success: false,
      565 |       error: "Failed to fetch dividend history",

      at error (routes/dividend.js:562:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      Dividend history error: Error: Console error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:79:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:440:13)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:365:14)
          at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:376:14)
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:421:3)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      560 |     });
      561 |   } catch (error) {
    > 562 |     console.error("Dividend history error:", error);
          |             ^
      563 |     res.status(500).json({
      564 |       success: false,
      565 |       error: "Failed to fetch dividend history",

      at error (routes/dividend.js:562:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      Dividend history error: Error: Console error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:79:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:440:13)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:365:14)
          at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:376:14)
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:421:3)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      560 |     });
      561 |   } catch (error) {
    > 562 |     console.error("Dividend history error:", error);
          |             ^
      563 |     res.status(500).json({
      564 |       success: false,
      565 |       error: "Failed to fetch dividend history",

      at error (routes/dividend.js:562:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      Dividend history error: Error: Console error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:79:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:440:13)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:365:14)
          at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:376:14)
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:421:3)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      560 |     });
      561 |   } catch (error) {
    > 562 |     console.error("Dividend history error:", error);
          |             ^
      563 |     res.status(500).json({
      564 |       success: false,
      565 |       error: "Failed to fetch dividend history",

      at error (routes/dividend.js:562:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      Dividend history error: Error: Console error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:79:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:440:13)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:365:14)
          at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:376:14)
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:421:3)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      560 |     });
      561 |   } catch (error) {
    > 562 |     console.error("Dividend history error:", error);
          |             ^
      563 |     res.status(500).json({
      564 |       success: false,
      565 |       error: "Failed to fetch dividend history",

      at error (routes/dividend.js:562:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      Dividend history error: Error: Console error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:79:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:440:13)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:365:14)
          at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:376:14)
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:421:3)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      560 |     });
      561 |   } catch (error) {
    > 562 |     console.error("Dividend history error:", error);
          |             ^
      563 |     res.status(500).json({
      564 |       success: false,
      565 |       error: "Failed to fetch dividend history",

      at error (routes/dividend.js:562:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      Dividend history error: Error: Console error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:79:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:440:13)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:365:14)
          at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:376:14)
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:421:3)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      560 |     });
      561 |   } catch (error) {
    > 562 |     console.error("Dividend history error:", error);
          |             ^
      563 |     res.status(500).json({
      564 |       success: false,
      565 |       error: "Failed to fetch dividend history",

      at error (routes/dividend.js:562:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      Dividend history error: Error: Console error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:79:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:440:13)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:365:14)
          at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:376:14)
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:421:3)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      560 |     });
      561 |   } catch (error) {
    > 562 |     console.error("Dividend history error:", error);
          |             ^
      563 |     res.status(500).json({
      564 |       success: false,
      565 |       error: "Failed to fetch dividend history",

      at error (routes/dividend.js:562:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      Dividend history error: Error: Console error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:79:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:440:13)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:365:14)
          at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:376:14)
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:421:3)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      560 |     });
      561 |   } catch (error) {
    > 562 |     console.error("Dividend history error:", error);
          |             ^
      563 |     res.status(500).json({
      564 |       success: false,
      565 |       error: "Failed to fetch dividend history",

      at error (routes/dividend.js:562:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      Dividend history error: Error: Console error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:79:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:440:13)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:365:14)
          at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:376:14)
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:421:3)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      560 |     });
      561 |   } catch (error) {
    > 562 |     console.error("Dividend history error:", error);
          |             ^
      563 |     res.status(500).json({
      564 |       success: false,
      565 |       error: "Failed to fetch dividend history",

      at error (routes/dividend.js:562:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      Calendar error: Error: Console error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:79:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:33:13)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      87 |     });
      88 |   } catch (error) {
    > 89 |     console.error("Calendar error:", error);
         |             ^
      90 |     res.status(500).json({
      91 |       success: false,
      92 |       error: "Failed to fetch dividend calendar",

      at error (routes/dividend.js:89:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      Dividend history error: Error: Console error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:79:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:440:13)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:365:14)
          at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:376:14)
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:421:3)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      560 |     });
      561 |   } catch (error) {
    > 562 |     console.error("Dividend history error:", error);
          |             ^
      563 |     res.status(500).json({
      564 |       success: false,
      565 |       error: "Failed to fetch dividend history",

      at error (routes/dividend.js:562:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      Dividend history error: Error: Console error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:79:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:440:13)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:365:14)
          at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:376:14)
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:421:3)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      560 |     });
      561 |   } catch (error) {
    > 562 |     console.error("Dividend history error:", error);
          |             ^
      563 |     res.status(500).json({
      564 |       success: false,
      565 |       error: "Failed to fetch dividend history",

      at error (routes/dividend.js:562:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      Dividend history error: Error: Test error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:485:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:440:13)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:365:14)
          at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:376:14)
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:421:3)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      560 |     });
      561 |   } catch (error) {
    > 562 |     console.error("Dividend history error:", error);
          |             ^
      563 |     res.status(500).json({
      564 |       success: false,
      565 |       error: "Failed to fetch dividend history",

      at error (routes/dividend.js:562:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      Calendar error: Error: Test error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:485:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:33:13)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      87 |     });
      88 |   } catch (error) {
    > 89 |     console.error("Calendar error:", error);
         |             ^
      90 |     res.status(500).json({
      91 |       success: false,
      92 |       error: "Failed to fetch dividend calendar",

      at error (routes/dividend.js:89:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.error
      ‚ùå Error closing test database: Error: Test error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:485:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at Object.log (/home/stocks/algo/webapp/lambda/tests/setup.js:115:13)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusHook (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:281:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:154:7)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      115 |     console.log("‚úÖ Test database connection closed");
      116 |   } catch (error) {
    > 117 |     console.error("‚ùå Error closing test database:", error);
          |             ^
      118 |   }
      119 | });
      120 |

      at Object.error (tests/setup.js:117:13)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ GET /api/dividend/history/:symbol ‚Ä∫ should handle errors in dividend history gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: "Console error"
    Received: undefined

      86 |       expect(response.body.success).toBe(false);
      87 |       expect(response.body.error).toBe("Failed to fetch dividend history");
    > 88 |       expect(response.body.message).toBe("Console error");
         |                                     ^
      89 |
      90 |       // Restore console.log
      91 |       console.log = originalConsoleLog;

      at Object.toBe (tests/unit/routes/dividend.test.js:88:37)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ GET /api/dividend/calendar ‚Ä∫ should get dividend calendar with valid database data

    expected 200 "OK", got 500 "Internal Server Error"

      126 |       const response = await request(app)
      127 |         .get("/api/dividend/calendar")
    > 128 |         .expect(200);
          |          ^
      129 |
      130 |       expect(response.body.success).toBe(true);
      131 |       expect(response.body.data.dividend_calendar).toHaveLength(2);

      at Object.expect (tests/unit/routes/dividend.test.js:128:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ GET /api/dividend/calendar ‚Ä∫ should handle empty database results and generate sample data

    expected 200 "OK", got 500 "Internal Server Error"

      148 |       const response = await request(app)
      149 |         .get("/api/dividend/calendar")
    > 150 |         .expect(200);
          |          ^
      151 |
      152 |       expect(response.body.success).toBe(true);
      153 |       expect(response.body.data.dividend_calendar).toBeDefined();

      at Object.expect (tests/unit/routes/dividend.test.js:150:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ GET /api/dividend/calendar ‚Ä∫ should handle database connection failures gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: "Database connection failed"
    Received: "Console error"

      166 |       expect(response.body.success).toBe(false);
      167 |       expect(response.body.error).toBe("Failed to fetch dividend calendar");
    > 168 |       expect(response.body.message).toBe("Database connection failed");
          |                                     ^
      169 |     });
      170 |
      171 |     test("should handle query parameters correctly", async () => {

      at Object.toBe (tests/unit/routes/dividend.test.js:168:37)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ GET /api/dividend/calendar ‚Ä∫ should handle query parameters correctly

    expected 200 "OK", got 500 "Internal Server Error"

      176 |           "/api/dividend/calendar?days=7&symbol=AAPL&min_yield=2.0&max_yield=5.0&limit=25&sort_by=yield"
      177 |         )
    > 178 |         .expect(200);
          |          ^
      179 |
      180 |       expect(response.body.data.filters).toMatchObject({
      181 |         days: 7,

      at Object.expect (tests/unit/routes/dividend.test.js:178:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ GET /api/dividend/calendar ‚Ä∫ should handle sorting options correctly

    expected 200 "OK", got 500 "Internal Server Error"

      192 |       const response = await request(app)
      193 |         .get("/api/dividend/calendar?sort_by=amount")
    > 194 |         .expect(200);
          |          ^
      195 |
      196 |       expect(response.body.success).toBe(true);
      197 |       expect(response.body.data.filters.sort_by).toBe("amount");

      at Object.expect (tests/unit/routes/dividend.test.js:194:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ GET /api/dividend/calendar ‚Ä∫ should handle invalid sorting options with fallback

    expected 200 "OK", got 500 "Internal Server Error"

      204 |       const response = await request(app)
      205 |         .get("/api/dividend/calendar?sort_by=invalid")
    > 206 |         .expect(200);
          |          ^
      207 |
      208 |       expect(response.body.success).toBe(true);
      209 |       expect(response.body.data.filters.sort_by).toBe("invalid");

      at Object.expect (tests/unit/routes/dividend.test.js:206:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ GET /api/dividend/calendar ‚Ä∫ should calculate dividend statistics correctly

    expected 200 "OK", got 500 "Internal Server Error"

      243 |       const response = await request(app)
      244 |         .get("/api/dividend/calendar")
    > 245 |         .expect(200);
          |          ^
      246 |
      247 |       expect(response.body.data.summary.dividend_stats).toMatchObject({
      248 |         avg_yield: 3.0,

      at Object.expect (tests/unit/routes/dividend.test.js:245:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ GET /api/dividend/calendar ‚Ä∫ should handle null database results gracefully

    expected 501 "Not Implemented", got 500 "Internal Server Error"

      259 |       const response = await request(app)
      260 |         .get("/api/dividend/calendar")
    > 261 |         .expect(501);
          |          ^
      262 |
      263 |       expect(response.body.success).toBe(false);
      264 |       expect(response.body.error).toBe("Dividend calendar not implemented");

      at Object.expect (tests/unit/routes/dividend.test.js:261:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ GET /api/dividend/calendar ‚Ä∫ should handle malformed database results

    expected 501 "Not Implemented", got 500 "Internal Server Error"

      270 |       const response = await request(app)
      271 |         .get("/api/dividend/calendar")
    > 272 |         .expect(501);
          |          ^
      273 |
      274 |       expect(response.body.success).toBe(false);
      275 |       expect(response.body.error).toBe("Dividend calendar not implemented");

      at Object.expect (tests/unit/routes/dividend.test.js:272:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ GET /api/dividend/calendar ‚Ä∫ should handle string dividend amounts and yields correctly

    expected 200 "OK", got 500 "Internal Server Error"

      296 |       const response = await request(app)
      297 |         .get("/api/dividend/calendar")
    > 298 |         .expect(200);
          |          ^
      299 |
      300 |       expect(response.body.data.dividend_calendar[0].dividend_amount).toBe(
      301 |         0.24

      at Object.expect (tests/unit/routes/dividend.test.js:298:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ GET /api/dividend/calendar ‚Ä∫ should handle error in dividend calendar

    expected 400 "Bad Request", got 500 "Internal Server Error"

      308 |       const response = await request(app)
      309 |         .get("/api/dividend/calendar?days_ahead=invalid_number")
    > 310 |         .expect(400);
          |          ^
      311 |
      312 |       expect(response.body.success).toBe(false);
      313 |       expect(response.body.error).toBe("Invalid days_ahead parameter");

      at Object.expect (tests/unit/routes/dividend.test.js:310:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ Edge Cases and Error Handling ‚Ä∫ should handle very long symbol names

    expected 501 "Not Implemented", got 500 "Internal Server Error"

      322 |       const response = await request(app)
      323 |         .get("/api/dividend/history/VERYLONGSYMBOLNAME123456")
    > 324 |         .expect(501);
          |          ^
      325 |
      326 |       expect(response.body.symbol).toBe("VERYLONGSYMBOLNAME123456");
      327 |       expect(response.body.success).toBe(false);

      at Object.expect (tests/unit/routes/dividend.test.js:324:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ Edge Cases and Error Handling ‚Ä∫ should handle symbols with special characters

    expected 501 "Not Implemented", got 500 "Internal Server Error"

      331 |       const response = await request(app)
      332 |         .get("/api/dividend/history/TEST@123")
    > 333 |         .expect(501);
          |          ^
      334 |
      335 |       expect(response.body.symbol).toBe("TEST@123");
      336 |       expect(response.body.error).toBe("Dividend history not implemented");

      at Object.expect (tests/unit/routes/dividend.test.js:333:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ Edge Cases and Error Handling ‚Ä∫ should handle extreme query parameters gracefully

    expected 501 "Not Implemented", got 500 "Internal Server Error"

      344 |           "/api/dividend/calendar?days=99999&limit=99999&min_yield=-100&max_yield=100"
      345 |         )
    > 346 |         .expect(501);
          |          ^
      347 |
      348 |       expect(response.body.filters.days).toBe(99999);
      349 |       expect(mockQuery).toHaveBeenCalledWith(

      at Object.expect (tests/unit/routes/dividend.test.js:346:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ Edge Cases and Error Handling ‚Ä∫ should handle non-numeric parameters correctly

    expected 501 "Not Implemented", got 500 "Internal Server Error"

      358 |       const response = await request(app)
      359 |         .get("/api/dividend/calendar?days=invalid&limit=abc&min_yield=xyz")
    > 360 |         .expect(501);
          |          ^
      361 |
      362 |       // The route returns 501 and the filters object should contain parsed days (NaN for 'invalid')
      363 |       expect(response.body.filters.days).toBeNaN();

      at Object.expect (tests/unit/routes/dividend.test.js:360:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ Edge Cases and Error Handling ‚Ä∫ should handle empty query parameters

    expected 501 "Not Implemented", got 500 "Internal Server Error"

      373 |       await request(app)
      374 |         .get("/api/dividend/calendar?symbol=&days=&limit=")
    > 375 |         .expect(501);
          |          ^
      376 |
      377 |       // Empty symbol should be processed but the query should not include symbol filter
      378 |       expect(mockQuery).toHaveBeenCalledWith(

      at Object.expect (tests/unit/routes/dividend.test.js:375:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ Edge Cases and Error Handling ‚Ä∫ should handle database timeout errors

    expected 501 "Not Implemented", got 500 "Internal Server Error"

      387 |       const response = await request(app)
      388 |         .get("/api/dividend/calendar")
    > 389 |         .expect(501);
          |          ^
      390 |
      391 |       expect(response.body.success).toBe(false);
      392 |       expect(response.body.error).toBe("Dividend calendar not implemented");

      at Object.expect (tests/unit/routes/dividend.test.js:389:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ Edge Cases and Error Handling ‚Ä∫ should handle SQL injection attempts safely

    expected 501 "Not Implemented", got 500 "Internal Server Error"

      400 |           "/api/dividend/calendar?symbol=AAPL'; DROP TABLE dividend_calendar; --"
      401 |         )
    > 402 |         .expect(501);
          |          ^
      403 |
      404 |       // Should be safely parameterized
      405 |       expect(mockQuery).toHaveBeenCalledWith(

      at Object.expect (tests/unit/routes/dividend.test.js:402:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ Performance Testing ‚Ä∫ should handle concurrent requests efficiently

    expect(received).toBe(expected) // Object.is equality

    Expected: 501
    Received: 500

      420 |
      421 |       responses.forEach((response, index) => {
    > 422 |         expect(response.status).toBe(501);
          |                                 ^
      423 |         expect(response.body.symbol).toBe(`STOCK${index}`);
      424 |         expect(response.body.error).toBe("Dividend history not implemented");
      425 |       });

      at toBe (tests/unit/routes/dividend.test.js:422:33)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/unit/routes/dividend.test.js:421:17)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ Performance Testing ‚Ä∫ should handle large dividend datasets efficiently

    expected 200 "OK", got 500 "Internal Server Error"

      445 |       const response = await request(app)
      446 |         .get("/api/dividend/calendar")
    > 447 |         .expect(200);
          |          ^
      448 |       const endTime = Date.now();
      449 |
      450 |       expect(response.body.data.dividend_calendar).toHaveLength(1000);

      at Object.expect (tests/unit/routes/dividend.test.js:447:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ Response Format Validation ‚Ä∫ should return consistent JSON response format

    expected 501 "Not Implemented", got 500 "Internal Server Error"

      459 |       const response = await request(app)
      460 |         .get("/api/dividend/history/AAPL")
    > 461 |         .expect(501);
          |          ^
      462 |
      463 |       expect(response.headers["content-type"]).toMatch(/json/);
      464 |       expect(typeof response.body).toBe("object");

      at Object.expect (tests/unit/routes/dividend.test.js:461:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ Response Format Validation ‚Ä∫ should include timestamp in ISO format

    expected 501 "Not Implemented", got 500 "Internal Server Error"

      470 |       const response = await request(app)
      471 |         .get("/api/dividend/history/AAPL")
    > 472 |         .expect(501);
          |          ^
      473 |
      474 |       expect(response.body.timestamp).toBeDefined();
      475 |       expect(new Date(response.body.timestamp)).toBeInstanceOf(Date);

      at Object.expect (tests/unit/routes/dividend.test.js:472:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ Response Format Validation ‚Ä∫ should maintain consistent error response format

    expect(received).toBeDefined()

    Received: undefined

      493 |       expect(response.body.error).toBeDefined();
      494 |       expect(typeof response.body.error).toBe("string");
    > 495 |       expect(response.body.message).toBeDefined();
          |                                     ^
      496 |
      497 |       // Restore console.log
      498 |       console.log = originalConsoleLog;

      at Object.toBeDefined (tests/unit/routes/dividend.test.js:495:37)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ Response Format Validation ‚Ä∫ should include proper metadata in calendar responses

    expected 200 "OK", got 500 "Internal Server Error"

      519 |       const response = await request(app)
      520 |         .get("/api/dividend/calendar")
    > 521 |         .expect(200);
          |          ^
      522 |
      523 |       expect(response.body.data).toBeDefined();
      524 |       expect(response.body.data.filters).toBeDefined();

      at Object.expect (tests/unit/routes/dividend.test.js:521:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

FAIL tests/unit/routes/analysts.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.error
      EPS trend fetch error: TypeError: Cannot read properties of null (reading 'rows')
          at rows (/home/stocks/algo/webapp/lambda/routes/analysts.js:210:20)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      215 |     });
      216 |   } catch (error) {
    > 217 |     console.error("EPS trend fetch error:", error);
          |             ^
      218 |     return res.status(500).json({
      219 |       success: false,
      220 |       error: "Failed to fetch EPS trend",

      at error (routes/analysts.js:217:13)

    console.log
      üìà [GROWTH] Calculating growth estimates for AAPL

      at log (routes/analysts.js:232:13)

    console.log
      ‚úÖ [GROWTH] Calculated growth estimates for AAPL: Revenue 0%, EPS 0%

      at log (routes/analysts.js:473:13)

    console.error
      Analyst overview fetch error: Error: Database connection failed
          at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/analysts.test.js:429:35)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      595 |     });
      596 |   } catch (error) {
    > 597 |     console.error("Analyst overview fetch error:", error);
          |             ^
      598 |     return res.status(500).json({
      599 |       success: false,
      600 |       error: "Failed to fetch analyst overview",

      at error (routes/analysts.js:597:13)

    console.log
      üìä Analyst recommendations requested for AAPL

      at log (routes/analysts.js:709:13)

    console.log
      üìä Analyst recommendations requested for INVALID

      at log (routes/analysts.js:709:13)

    console.log
      üìä Analyst recommendations requested for AAPL

      at log (routes/analysts.js:709:13)

    console.error
      Analyst recommendations error: Error: Database connection failed
          at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/analysts.test.js:554:35)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      797 |     });
      798 |   } catch (error) {
    > 799 |     console.error("Analyst recommendations error:", error);
          |             ^
      800 |     res.status(500).json({
      801 |       success: false,
      802 |       error: "Failed to fetch analyst recommendations",

      at error (routes/analysts.js:799:13)

    console.log
      üéØ Price targets requested for AAPL

      at log (routes/analysts.js:812:13)

    console.log
      üìâ Analyst downgrades requested - limit: 50, timeframe: 30d

      at log (routes/analysts.js:870:13)

    console.log
      üìâ Analyst downgrades requested - limit: 10, timeframe: 30d

      at log (routes/analysts.js:870:13)

    console.log
      üìâ Analyst downgrades requested - limit: 50, timeframe: 7d

      at log (routes/analysts.js:870:13)

    console.log
      üìâ Analyst downgrades requested - limit: 20, timeframe: 30d

      at log (routes/analysts.js:870:13)

    console.log
      üìâ Analyst downgrades requested - limit: 50, timeframe: 30d

      at log (routes/analysts.js:870:13)

    console.log
      üìâ Analyst downgrades requested - limit: 5, timeframe: 7d

      at log (routes/analysts.js:870:13)

    console.log
      üìâ Analyst downgrades requested - limit: 5, timeframe: 30d

      at log (routes/analysts.js:870:13)

    console.log
      üìâ Analyst downgrades requested - limit: 5, timeframe: 90d

      at log (routes/analysts.js:870:13)

    console.log
      üìâ Analyst downgrades requested - limit: invalid, timeframe: 30d

      at log (routes/analysts.js:870:13)

    console.log
      ü§ù Analyst consensus requested for AAPL

      at log (routes/analysts.js:1187:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Analysts Route - Comprehensive Unit Tests ‚Ä∫ GET /api/analysts/upgrades ‚Ä∫ should get paginated analyst upgrades with valid data

    expected 200 "OK", got 500 "Internal Server Error"

      81 |       const response = await request(app)
      82 |         .get("/api/analysts/upgrades")
    > 83 |         .expect(200);
         |          ^
      84 |
      85 |       expect(response.body.data).toHaveLength(1);
      86 |       expect(response.body.data[0].symbol).toBe("AAPL");

      at Object.expect (tests/unit/routes/analysts.test.js:83:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Analysts Route - Comprehensive Unit Tests ‚Ä∫ GET /api/analysts/upgrades ‚Ä∫ should handle pagination parameters correctly

    expected 200 "OK", got 500 "Internal Server Error"

      107 |       const response = await request(app)
      108 |         .get("/api/analysts/upgrades?page=3&limit=10")
    > 109 |         .expect(200);
          |          ^
      110 |
      111 |       expect(mockQuery).toHaveBeenCalledWith(
      112 |         expect.stringContaining("LIMIT $1 OFFSET $2"),

      at Object.expect (tests/unit/routes/analysts.test.js:109:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Analysts Route - Comprehensive Unit Tests ‚Ä∫ GET /api/analysts/upgrades ‚Ä∫ should handle database unavailability gracefully

    expected 503 "Service Unavailable", got 500 "Internal Server Error"

      130 |       const response = await request(app)
      131 |         .get("/api/analysts/upgrades")
    > 132 |         .expect(503);
          |          ^
      133 |
      134 |       expect(response.body.message).toContain("database connection issue");
      135 |       expect(response.body.data).toEqual([]);

      at Object.expect (tests/unit/routes/analysts.test.js:132:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Analysts Route - Comprehensive Unit Tests ‚Ä∫ GET /api/analysts/:ticker/earnings-estimates ‚Ä∫ should get earnings estimates for valid ticker

    expected 200 "OK", got 500 "Internal Server Error"

      165 |       const response = await request(app)
      166 |         .get("/api/analysts/AAPL/earnings-estimates")
    > 167 |         .expect(200);
          |          ^
      168 |
      169 |       expect(response.body.ticker).toBe("AAPL");
      170 |       expect(response.body.estimates).toHaveLength(1);

      at Object.expect (tests/unit/routes/analysts.test.js:167:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Analysts Route - Comprehensive Unit Tests ‚Ä∫ GET /api/analysts/:ticker/earnings-estimates ‚Ä∫ should handle case insensitive ticker symbols

    expected 200 "OK", got 500 "Internal Server Error"

      183 |       await request(app)
      184 |         .get("/api/analysts/aapl/earnings-estimates")
    > 185 |         .expect(200);
          |          ^
      186 |
      187 |       expect(mockQuery).toHaveBeenCalledWith(
      188 |         expect.stringContaining("UPPER($1)"),

      at Object.expect (tests/unit/routes/analysts.test.js:185:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Analysts Route - Comprehensive Unit Tests ‚Ä∫ GET /api/analysts/:ticker/revenue-estimates ‚Ä∫ should get revenue estimates for valid ticker

    expect(received).toBe(expected) // Object.is equality

    Expected: 119300000000
    Received: undefined

      223 |       expect(response.body.ticker).toBe("AAPL");
      224 |       expect(response.body.estimates).toHaveLength(1);
    > 225 |       expect(response.body.estimates[0].actual).toBe(119300000000);
          |                                                 ^
      226 |       expect(mockQuery).toHaveBeenCalledWith(
      227 |         expect.stringContaining("er.revenue as actual"),
      228 |         ["AAPL"]

      at Object.toBe (tests/unit/routes/analysts.test.js:225:49)

  ‚óè Analysts Route - Comprehensive Unit Tests ‚Ä∫ GET /api/analysts/:ticker/earnings-history ‚Ä∫ should get earnings history for valid ticker

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 1
    Received array:  [{"total": "25"}]

      259 |
      260 |       expect(response.body.ticker).toBe("AAPL");
    > 261 |       expect(response.body.history).toHaveLength(2);
          |                                     ^
      262 |       expect(response.body.history[0].quarter).toBe("Q4 2023");
      263 |       expect(mockQuery).toHaveBeenCalledWith(
      264 |         expect.stringContaining("LIMIT 12"),

      at Object.toHaveLength (tests/unit/routes/analysts.test.js:261:37)

  ‚óè Analysts Route - Comprehensive Unit Tests ‚Ä∫ GET /api/analysts/:ticker/eps-revisions ‚Ä∫ should get EPS revisions for valid ticker

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 0
    Received array:  []

      289 |
      290 |       expect(response.body.ticker).toBe("AAPL");
    > 291 |       expect(response.body.data).toHaveLength(1);
          |                                  ^
      292 |       expect(response.body.data[0].up_last30days).toBe(3);
      293 |       expect(response.body.metadata.count).toBe(1);
      294 |       expect(response.body.metadata.timestamp).toBeDefined();

      at Object.toHaveLength (tests/unit/routes/analysts.test.js:291:34)

  ‚óè Analysts Route - Comprehensive Unit Tests ‚Ä∫ GET /api/analysts/:ticker/eps-revisions ‚Ä∫ should handle database errors for EPS revisions

    expected 500 "Internal Server Error", got 200 "OK"

      300 |       const response = await request(app)
      301 |         .get("/api/analysts/AAPL/eps-revisions")
    > 302 |         .expect(500);
          |          ^
      303 |
      304 |       expect(response.body.success).toBe(false);
      305 |       expect(response.body.error).toContain("Failed to fetch EPS revisions");

      at Object.expect (tests/unit/routes/analysts.test.js:302:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Analysts Route - Comprehensive Unit Tests ‚Ä∫ GET /api/analysts/:ticker/eps-trend ‚Ä∫ should get EPS trend for valid ticker

    expected 200 "OK", got 500 "Internal Server Error"

      327 |       const response = await request(app)
      328 |         .get("/api/analysts/AAPL/eps-trend")
    > 329 |         .expect(200);
          |          ^
      330 |
      331 |       expect(response.body.ticker).toBe("AAPL");
      332 |       expect(response.body.data).toHaveLength(1);

      at Object.expect (tests/unit/routes/analysts.test.js:329:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Analysts Route - Comprehensive Unit Tests ‚Ä∫ Edge Cases and Error Handling ‚Ä∫ should handle invalid ticker symbols gracefully

    expected 200 "OK", got 500 "Internal Server Error"

      777 |       const response = await request(app)
      778 |         .get("/api/analysts/INVALID123/earnings-estimates")
    > 779 |         .expect(200);
          |          ^
      780 |
      781 |       expect(response.body.ticker).toBe("INVALID123");
      782 |       expect(response.body.estimates).toHaveLength(0);

      at Object.expect (tests/unit/routes/analysts.test.js:779:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Analysts Route - Comprehensive Unit Tests ‚Ä∫ Edge Cases and Error Handling ‚Ä∫ should handle special characters in ticker symbols

    expected 200 "OK", got 500 "Internal Server Error"

      788 |       await request(app)
      789 |         .get("/api/analysts/BRK.B/earnings-estimates")
    > 790 |         .expect(200);
          |          ^
      791 |
      792 |       expect(mockQuery).toHaveBeenCalledWith(
      793 |         expect.stringContaining("UPPER($1)"),

      at Object.expect (tests/unit/routes/analysts.test.js:790:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Analysts Route - Comprehensive Unit Tests ‚Ä∫ Edge Cases and Error Handling ‚Ä∫ should handle very large page numbers

    expected 200 "OK", got 500 "Internal Server Error"

      806 |       const response = await request(app)
      807 |         .get("/api/analysts/upgrades?page=999999&limit=25")
    > 808 |         .expect(200);
          |          ^
      809 |
      810 |       expect(response.body.pagination.page).toBe(999999);
      811 |       expect(response.body.pagination.hasNext).toBe(false);

      at Object.expect (tests/unit/routes/analysts.test.js:808:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Analysts Route - Comprehensive Unit Tests ‚Ä∫ Edge Cases and Error Handling ‚Ä∫ should handle zero or negative page numbers

    expected 200 "OK", got 500 "Internal Server Error"

      823 |       const response = await request(app)
      824 |         .get("/api/analysts/upgrades?page=0&limit=25")
    > 825 |         .expect(200);
          |          ^
      826 |
      827 |       expect(response.body.pagination.page).toBe(1);
      828 |     });

      at Object.expect (tests/unit/routes/analysts.test.js:825:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Analysts Route - Comprehensive Unit Tests ‚Ä∫ Edge Cases and Error Handling ‚Ä∫ should handle null database results gracefully

    expected 200 "OK", got 500 "Internal Server Error"

      833 |       const response = await request(app)
      834 |         .get("/api/analysts/AAPL/earnings-estimates")
    > 835 |         .expect(200);
          |          ^
      836 |
      837 |       expect(response.body.ticker).toBe("AAPL");
      838 |       expect(Array.isArray(response.body.estimates)).toBe(true);

      at Object.expect (tests/unit/routes/analysts.test.js:835:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Analysts Route - Comprehensive Unit Tests ‚Ä∫ Performance Testing ‚Ä∫ should handle multiple concurrent requests

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      852 |
      853 |       responses.forEach((response, index) => {
    > 854 |         expect(response.status).toBe(200);
          |                                 ^
      855 |         expect(response.body.ticker).toBe(`AAPL${index}`);
      856 |       });
      857 |     });

      at toBe (tests/unit/routes/analysts.test.js:854:33)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/unit/routes/analysts.test.js:853:17)

  ‚óè Analysts Route - Comprehensive Unit Tests ‚Ä∫ Performance Testing ‚Ä∫ should handle large dataset responses efficiently

    expected 200 "OK", got 500 "Internal Server Error"

      872 |       const response = await request(app)
      873 |         .get("/api/analysts/AAPL/earnings-estimates")
    > 874 |         .expect(200);
          |          ^
      875 |       const endTime = Date.now();
      876 |
      877 |       expect(response.body.estimates).toHaveLength(1000);

      at Object.expect (tests/unit/routes/analysts.test.js:874:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

FAIL tests/unit/routes/commodities.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.error
      Database query error: {
        error: 'LIMIT must not be negative',
        query: '\n' +
          '      SELECT\n' +
          '        id,\n' +
          '        title,\n' +
          '        publisher as source,\n' +
          '        link as url,\n' +
          '        p...',
        params: '2 parameters',
        code: '2201W'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/commodities.js:756:20

    console.error
      Commodities news error: error: LIMIT must not be negative
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/commodities.js:756:20 {
        length: 90,
        severity: 'ERROR',
        code: '2201W',
        detail: undefined,
        hint: undefined,
        position: undefined,
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'nodeLimit.c',
        line: '398',
        routine: 'recompute_limits'
      }

      775 |     });
      776 |   } catch (error) {
    > 777 |     console.error("Commodities news error:", error);
          |             ^
      778 |     res.status(500).json({
      779 |       success: false,
      780 |       error: "Failed to fetch commodities news",

      at error (routes/commodities.js:777:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Commodities Routes ‚Ä∫ GET /api/commodities/ ‚Ä∫ should return commodities API overview

    expect(received).toEqual(expected) // deep equality

    - Expected  - 0
    + Received  + 1

    @@ -10,6 +10,7 @@
          "status": "operational",
          "system": "Commodities API",
          "timestamp": Any<String>,
          "version": "1.0.0",
        },
    +   "success": true,
      }

      50 |       const response = await request(app).get("/api/commodities/").expect(200);
      51 |
    > 52 |       expect(response.body).toEqual({
         |                             ^
      53 |         data: {
      54 |           system: "Commodities API",
      55 |           version: "1.0.0",

      at Object.toEqual (tests/unit/routes/commodities.test.js:52:29)

  ‚óè Commodities Routes ‚Ä∫ GET /api/commodities/news ‚Ä∫ should include required news fields

    expect(received).toHaveProperty(path)

    Expected path: "summary"
    Received path: []

    Received value: {"category": "commodities", "id": 7, "publishedAt": "2025-09-22T04:00:05.183Z", "source": "WSJ", "symbol": "GLD", "title": "Gold Prices Surge on Economic Uncertainty", "url": "https://example.com/4"}

      438 |         const newsItem = response.body.data[0];
      439 |         expect(newsItem).toHaveProperty("title");
    > 440 |         expect(newsItem).toHaveProperty("summary");
          |                          ^
      441 |       }
      442 |     });
      443 |

      at Object.toHaveProperty (tests/unit/routes/commodities.test.js:440:26)

  ‚óè Commodities Routes ‚Ä∫ Edge Cases and Error Handling ‚Ä∫ should handle negative limit values

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      570 |
      571 |       // Handle different possible status codes
    > 572 |       expect(response.status).toBe(200);
          |                               ^
      573 |
      574 |       if (response.status === 200) {
      575 |         // Should use default limit

      at Object.toBe (tests/unit/routes/commodities.test.js:572:31)

FAIL tests/integration/utils/database.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.error
      Database query error: {
        error: 'column "name" of relation "stock_symbols" does not exist',
        query: 'INSERT INTO stock_symbols (symbol, name, sector, market_cap) VALUES ($1, $2, $3, $4) ON CONFLICT (sy...',
        params: '4 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:62:7)

    console.error
      Database query error: {
        error: 'relation "non_existent_table_12345" does not exist',
        query: 'SELECT * FROM non_existent_table_12345',
        params: 'no parameters',
        code: '42P01'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:100:22)

    console.error
      Database query error: {
        error: 'syntax error at or near "INVALID"',
        query: 'INVALID SQL SYNTAX HERE',
        params: 'no parameters',
        code: '42601'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:106:22)

    console.error
      Database query error: {
        error: 'column "symbol" of relation "market_data" does not exist',
        query: 'INSERT INTO market_data (symbol, name, date, price, volume) VALUES ($1, $2, $3, $4, $5) ON CONFLICT ...',
        params: '5 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:114:7)

    console.error
      Database query error: {
        error: 'column "symbol" of relation "market_data" does not exist',
        query: 'INSERT INTO market_data (symbol, name, date, price, volume) VALUES ($1, $2, $3, $4, $5) ON CONFLICT ...',
        params: '5 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:145:9)

    console.error
      Database query error: {
        error: 'value too long for type character varying(10)',
        query: 'INSERT INTO temp_test_1758645132602 (test_symbol) VALUES ($1) RETURNING id',
        params: '1 parameters',
        code: '22001'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:274:28)

    console.error
      Database query error: {
        error: 'column "name" of relation "stock_symbols" does not exist',
        query: 'INSERT INTO stock_symbols (symbol, name) VALUES ($1, $2) RETURNING symbol',
        params: '2 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:287:27)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.error
      Database query error: {
        error: 'column "symbol" does not exist',
        query: 'SELECT * FROM market_data WHERE symbol = $1',
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:438:29)

    console.error
      Database query error: {
        error: 'column "name" of relation "stock_symbols" does not exist',
        query: 'INSERT INTO stock_symbols (symbol, name, sector) VALUES ($1, $2, $3) ON CONFLICT (symbol) DO UPDATE ...',
        params: '3 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:502:7)

    console.error
      Database query error: {
        error: 'column "name" of relation "stock_symbols" does not exist',
        query: 'INSERT INTO stock_symbols (symbol, name, sector, market_cap) VALUES ($1, $2, $3, $4) ON CONFLICT (sy...',
        params: '4 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:552:7)

    console.error
      Database query error: {
        error: 'column "name" of relation "stock_symbols" does not exist',
        query: 'INSERT INTO stock_symbols (symbol, name) VALUES ($1, $2) ON CONFLICT (symbol) DO UPDATE SET name = $...',
        params: '2 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:624:7)

    console.error
      Database query error: {
        error: 'column "name" of relation "stock_symbols" does not exist',
        query: 'INSERT INTO stock_symbols (symbol, name) VALUES ($1, $2) ON CONFLICT (symbol) DO UPDATE SET name = $...',
        params: '2 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:746:7)

    console.error
      Database query error: {
        error: 'column "name" of relation "stock_symbols" does not exist',
        query: 'INSERT INTO stock_symbols (symbol, name, sector) VALUES ($1, $2, $3) ON CONFLICT (symbol) DO UPDATE ...',
        params: '3 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:821:7)

    console.error
      Database query error: {
        error: 'column "symbol" does not exist',
        query: "DELETE FROM market_data WHERE symbol LIKE 'T%' OR symbol LIKE 'U%' OR symbol LIKE 'A%' OR symbol LIK...",
        params: 'no parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:37:7)

    console.warn
      Cleanup warning: column "symbol" does not exist

      42 |       );
      43 |     } catch (error) {
    > 44 |       console.warn("Cleanup warning:", error.message);
         |               ^
      45 |     }
      46 |
      47 |     await closeDatabase();

      at Object.warn (tests/integration/utils/database.integration.test.js:44:15)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Real Database Query Operations ‚Ä∫ should handle parameterized queries correctly

    error: column "name" of relation "stock_symbols" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:62:7)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Real Database Query Operations ‚Ä∫ should prevent SQL injection attacks with parameterized queries

    expect(received).toBeGreaterThan(expected)

    Matcher error: received value must be a number or bigint

    Received has type:  string
    Received has value: "4153"

      93 |         "SELECT COUNT(*) as count FROM stock_symbols"
      94 |       );
    > 95 |       expect(tableCheck.rows[0].count).toBeGreaterThan(0);
         |                                        ^
      96 |     });
      97 |
      98 |     test("should handle database errors gracefully", async () => {

      at Object.toBeGreaterThan (tests/integration/utils/database.integration.test.js:95:40)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Real Database Query Operations ‚Ä∫ should handle database errors gracefully

    error: relation "non_existent_table_12345" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:100:22)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Real Database Query Operations ‚Ä∫ should handle syntax errors gracefully

    error: syntax error at or near "INVALID"

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:106:22)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Real Database Query Operations ‚Ä∫ should work with complex JOIN queries on real tables

    error: column "symbol" of relation "market_data" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:114:7)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Real Database Query Operations ‚Ä∫ should handle aggregate functions and calculations

    error: column "symbol" of relation "market_data" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:145:9)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Database Initialization and Schema ‚Ä∫ should verify database connection and schema integrity

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: {"connections": 1, "idle": 1, "status": "healthy", "timestamp": 2025-09-23T16:32:12.600Z, "version": "PostgreSQL 16.10 (Ubuntu 16.10-0ubuntu0.24.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0, 64-bit", "waiting": 0}

      210 |       const healthResult = await healthCheck();
      211 |
    > 212 |       expect(healthResult).toBe(true);
          |                            ^
      213 |
      214 |       // Test actual schema by checking table structure
      215 |       const columnsResult = await query(`

      at Object.toBe (tests/integration/utils/database.integration.test.js:212:28)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Database Initialization and Schema ‚Ä∫ should handle database configuration from environment variables

    TypeError: getDbConfig is not a function

      229 |
      230 |     test("should handle database configuration from environment variables", async () => {
    > 231 |       const config = await getDbConfig();
          |                            ^
      232 |
      233 |       expect(config).toBeDefined();
      234 |       expect(config.host).toBe("localhost");

      at Object.getDbConfig (tests/integration/utils/database.integration.test.js:231:28)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Real Database Schema Operations ‚Ä∫ should initialize and verify schema tables

    TypeError: initializeSchema is not a function

      241 |   describe("Real Database Schema Operations", () => {
      242 |     test("should initialize and verify schema tables", async () => {
    > 243 |       const result = await initializeSchema();
          |                            ^
      244 |
      245 |       expect(result).toBe(true);
      246 |

      at Object.initializeSchema (tests/integration/utils/database.integration.test.js:243:28)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Real Database Schema Operations ‚Ä∫ should handle table creation and constraints

    error: value too long for type character varying(10)

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:274:28)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Real Database Schema Operations ‚Ä∫ should handle unique constraints properly

    error: column "name" of relation "stock_symbols" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:287:27)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Connection Pool Management ‚Ä∫ should perform accurate health checks

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: {"connections": 1, "idle": 1, "status": "healthy", "timestamp": 2025-09-23T16:32:12.626Z, "version": "PostgreSQL 16.10 (Ubuntu 16.10-0ubuntu0.24.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0, 64-bit", "waiting": 0}

      336 |       const isHealthy = await healthCheck();
      337 |
    > 338 |       expect(isHealthy).toBe(true);
          |                         ^
      339 |
      340 |       // Verify health check actually tests database responsiveness
      341 |       const startTime = Date.now();

      at Object.toBe (tests/integration/utils/database.integration.test.js:338:25)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Transaction Support ‚Ä∫ should execute transactions with commit

    error: column "name" of relation "stock_symbols" does not exist

      382 |       const result = await transaction(async (client) => {
      383 |         // Insert test data within transaction
    > 384 |         await client.query(
          |         ^
      385 |           "INSERT INTO stock_symbols (symbol, name, sector) VALUES ($1, $2, $3) ON CONFLICT (symbol) DO UPDATE SET name = $2",
      386 |           [`TXN${testId}`, "Transaction Test Co", "Technology"]
      387 |         );

      at node_modules/pg/lib/client.js:545:17
      at tests/integration/utils/database.integration.test.js:384:9
      at transaction (utils/database.js:1457:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:382:22)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Transaction Support ‚Ä∫ should rollback transactions on error

    error: column "symbol" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:438:29)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Transaction Support ‚Ä∫ should handle nested transaction operations

    error: column "name" of relation "stock_symbols" does not exist

      449 |       const result = await transaction(async (client) => {
      450 |         // Multiple operations that should all succeed or fail together
    > 451 |         const symbolInsert = await client.query(
          |                              ^
      452 |           "INSERT INTO stock_symbols (symbol, name, sector, market_cap) VALUES ($1, $2, $3, $4) ON CONFLICT (symbol) DO UPDATE SET name = $2 RETURNING symbol",
      453 |           [`NEST${testId}`, "Nested Transaction Co", "Finance", 5000000000]
      454 |         );

      at node_modules/pg/lib/client.js:545:17
      at tests/integration/utils/database.integration.test.js:451:30
      at transaction (utils/database.js:1457:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:449:22)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Real-World Data Operations ‚Ä∫ should handle bulk data insertions efficiently

    error: column "name" of relation "stock_symbols" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:502:7)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Real-World Data Operations ‚Ä∫ should handle complex analytical queries

    error: column "name" of relation "stock_symbols" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:552:7)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Real-World Data Operations ‚Ä∫ should handle time-based queries with proper indexing performance

    error: column "name" of relation "stock_symbols" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:624:7)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Advanced Transaction Integration Scenarios ‚Ä∫ should handle concurrent transactions without conflicts

    error: column "name" of relation "stock_symbols" does not exist

      694 |
      695 |           // Insert stock symbol
    > 696 |           await client.query(
          |           ^
      697 |             "INSERT INTO stock_symbols (symbol, name, sector) VALUES ($1, $2, $3) ON CONFLICT (symbol) DO UPDATE SET name = $2",
      698 |             [symbol, `Concurrent Test ${i}`, "Technology"]
      699 |           );

      at node_modules/pg/lib/client.js:545:17
      at tests/integration/utils/database.integration.test.js:696:11
      at transaction (utils/database.js:1457:20)
          at async Promise.all (index 0)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:720:23)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Advanced Transaction Integration Scenarios ‚Ä∫ should handle transaction rollback with concurrent access

    error: column "name" of relation "stock_symbols" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:746:7)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Advanced Transaction Integration Scenarios ‚Ä∫ should handle cross-table transaction consistency

    error: column "name" of relation "stock_symbols" does not exist

      782 |       const result = await transaction(async (client) => {
      783 |         // Insert stock symbol and market data in same transaction
    > 784 |         const stockResult = await client.query(
          |                             ^
      785 |           "INSERT INTO stock_symbols (symbol, name, sector, market_cap) VALUES ($1, $2, $3, $4) ON CONFLICT (symbol) DO UPDATE SET name = $2 RETURNING symbol",
      786 |           [symbol, "Cross Table Test", "Finance", 1000000000]
      787 |         );

      at node_modules/pg/lib/client.js:545:17
      at tests/integration/utils/database.integration.test.js:784:29
      at transaction (utils/database.js:1457:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:782:22)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Advanced Transaction Integration Scenarios ‚Ä∫ should handle transaction isolation levels

    error: column "name" of relation "stock_symbols" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:821:7)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Advanced Transaction Integration Scenarios ‚Ä∫ should handle large transaction data volumes

    error: column "name" of relation "stock_symbols" does not exist

      916 |         }
      917 |
    > 918 |         await Promise.all(insertPromises);
          |         ^
      919 |
      920 |         // Verify all data within transaction
      921 |         const countResult = await client.query(

      at node_modules/pg/lib/client.js:545:17
          at async Promise.all (index 0)
      at tests/integration/utils/database.integration.test.js:918:9
      at transaction (utils/database.js:1457:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:888:22)

FAIL tests/unit/routes/risk.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      ‚ö†Ô∏è Risk analysis requested for user: test-user-123, period: 1m

      at log (routes/risk.js:39:13)

    console.log
      ‚ö†Ô∏è Risk analysis requested for user: test-user-123, period: 1y

      at log (routes/risk.js:39:13)

    console.log
      ‚ö†Ô∏è Risk analysis requested for user: test-user-123, period: invalid_period

      at log (routes/risk.js:39:13)

    console.log
      ‚ö†Ô∏è Risk analysis requested for user: test-user-123, period: 1m

      at log (routes/risk.js:39:13)

    console.log
      ‚ö†Ô∏è Risk analysis requested for user: test-user-123, period: 1m

      at log (routes/risk.js:39:13)

    console.log
      ‚ö†Ô∏è Risk analysis requested for user: test-user-123, period: 1m

      at log (routes/risk.js:39:13)

    console.error
      Risk analysis error: Error: Database connection failed
          at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/risk.test.js:237:23)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      226 |     });
      227 |   } catch (error) {
    > 228 |     console.error("Risk analysis error:", error);
          |             ^
      229 |     res.status(500).json({
      230 |       success: false,
      231 |       error: "Failed to perform risk analysis",

      at error (routes/risk.js:228:13)

    console.log
      ‚ö†Ô∏è Risk analysis requested for user: test-user-123, period: 1m

      at log (routes/risk.js:39:13)

    console.log
      ‚ö†Ô∏è Risk analysis requested for user: test-user-123, period: 1m

      at log (routes/risk.js:39:13)

    console.log
      ‚ö†Ô∏è Risk analysis requested for user: test-user-123, period: 1m

      at log (routes/risk.js:39:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Risk Routes Unit Tests ‚Ä∫ GET /risk ‚Ä∫ should return risk API information without authentication

    expect(received).toHaveProperty(path, value)

    Expected path: "message"
    Received path: []

    Expected value: "Risk Analysis API - Ready"
    Received value: {"data": {"message": "Risk Analysis API - Ready", "status": "operational", "timestamp": "2025-09-23T16:32:12.742Z"}, "success": true}

      94 |
      95 |       expect(response.status).toBe(200);
    > 96 |       expect(response.body).toHaveProperty(
         |                             ^
      97 |         "message",
      98 |         "Risk Analysis API - Ready"
      99 |       );

      at Object.toHaveProperty (tests/unit/routes/risk.test.js:96:29)

  ‚óè Risk Routes Unit Tests ‚Ä∫ GET /risk/analysis (authenticated) ‚Ä∫ should handle risk engine calculation errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      256 |       const response = await request(app).get("/risk/analysis");
      257 |
    > 258 |       expect(response.status).toBe(500);
          |                               ^
      259 |       expect(response.body).toHaveProperty("success", false);
      260 |       expect(response.body.error).toBe("Failed to perform risk analysis");
      261 |     });

      at Object.toBe (tests/unit/routes/risk.test.js:258:31)

  ‚óè Risk Routes Unit Tests ‚Ä∫ Authentication middleware ‚Ä∫ should allow public root endpoint

    expect(received).toHaveProperty(path, value)

    Expected path: "message"
    Received path: []

    Expected value: "Risk Analysis API - Ready"
    Received value: {"data": {"message": "Risk Analysis API - Ready", "status": "operational", "timestamp": "2025-09-23T16:32:12.771Z"}, "success": true}

      283 |
      284 |       expect(response.status).toBe(200);
    > 285 |       expect(response.body).toHaveProperty(
          |                             ^
      286 |         "message",
      287 |         "Risk Analysis API - Ready"
      288 |       );

      at Object.toHaveProperty (tests/unit/routes/risk.test.js:285:29)

FAIL tests/contract/api-contracts.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      üöÄ Starting API contract tests against: http://localhost:3001

      at Object.log (tests/contract/api-contracts.test.js:11:13)

    console.log
      üîç Testing GET /api/health...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/health - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/portfolio...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/portfolio - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/market/overview...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/market/overview - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/diagnostics/database-connectivity...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/diagnostics/database-connectivity - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/health...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/health - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/portfolio...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/portfolio - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/portfolio/positions...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/portfolio/positions - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/portfolio/performance...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/portfolio/performance - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/market/overview...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/market/overview - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/alerts/active...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/alerts/active - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/calendar/earnings...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/calendar/earnings - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/diagnostics...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/diagnostics - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/diagnostics/database-connectivity...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/diagnostics/database-connectivity - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/backtest/strategies...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/backtest/strategies - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/portfolio/holdings...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/portfolio/holdings - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/portfolio/value...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/portfolio/value - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/portfolio/analytics...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/portfolio/analytics - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/portfolio/transactions...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/portfolio/transactions - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/portfolio/summary...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/portfolio/summary - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/portfolio/metrics...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/portfolio/metrics - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/market...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/market - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/stocks...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/stocks - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/technical...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/technical - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/live-data...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/live-data - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/live-data/status...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/live-data/status - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/analytics...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/analytics - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/performance...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/performance - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/risk...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/risk - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/news...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/news - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/signals...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/signals - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/trading...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/trading - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/orders...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/orders - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/watchlist...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/watchlist - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/screener...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/screener - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/scores...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/scores - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/metrics...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/metrics - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/sectors...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/sectors - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/sentiment...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/sentiment - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/etf...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/etf - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      Running comprehensive site functionality tests...

      at Object.log (tests/contract/api-contracts.test.js:55:15)

    console.log
      
      üåê Running site functionality tests...

      at log (tests/contract/contract-test-runner.js:509:11)

    console.log
      
      üìã Testing workflow: Portfolio Dashboard Load

      at log (tests/contract/contract-test-runner.js:535:13)

    console.log
      üîç Testing GET /api/health...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/health - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/portfolio...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/portfolio - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/portfolio/positions...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/portfolio/positions - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      ‚ùå Workflow 'Portfolio Dashboard Load' has failures

      at log (tests/contract/contract-test-runner.js:549:15)

    console.log
      
      üìã Testing workflow: Market Data Access

      at log (tests/contract/contract-test-runner.js:535:13)

    console.log
      üîç Testing GET /api/market/overview...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/market/overview - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/calendar/earnings...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/calendar/earnings - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      ‚ùå Workflow 'Market Data Access' has failures

      at log (tests/contract/contract-test-runner.js:549:15)

    console.log
      
      üìã Testing workflow: System Diagnostics

      at log (tests/contract/contract-test-runner.js:535:13)

    console.log
      üîç Testing GET /api/diagnostics/database-connectivity...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/diagnostics/database-connectivity - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      üîç Testing GET /api/diagnostics...

      at log (tests/contract/contract-test-runner.js:454:13)

    console.log
      ‚ùå GET /api/diagnostics - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:493:13)

    console.log
      ‚ùå Workflow 'System Diagnostics' has failures

      at log (tests/contract/contract-test-runner.js:549:15)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè API Contract Tests ‚Ä∫ Critical Endpoints ‚Ä∫ Health endpoint contract

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      16 |     test("Health endpoint contract", async () => {
      17 |       const result = await runContractTest("GET /api/health", baseURL);
    > 18 |       expect(result).toBe(true);
         |                      ^
      19 |     });
      20 |
      21 |     test("Portfolio endpoint contract", async () => {

      at Object.toBe (tests/contract/api-contracts.test.js:18:22)

  ‚óè API Contract Tests ‚Ä∫ Critical Endpoints ‚Ä∫ Portfolio endpoint contract

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      21 |     test("Portfolio endpoint contract", async () => {
      22 |       const result = await runContractTest("GET /api/portfolio", baseURL);
    > 23 |       expect(result).toBe(true);
         |                      ^
      24 |     });
      25 |
      26 |     test("Market overview endpoint contract", async () => {

      at Object.toBe (tests/contract/api-contracts.test.js:23:22)

  ‚óè API Contract Tests ‚Ä∫ Critical Endpoints ‚Ä∫ Market overview endpoint contract

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      26 |     test("Market overview endpoint contract", async () => {
      27 |       const result = await runContractTest("GET /api/market/overview", baseURL);
    > 28 |       expect(result).toBe(true);
         |                      ^
      29 |     });
      30 |
      31 |     test("Database connectivity contract", async () => {

      at Object.toBe (tests/contract/api-contracts.test.js:28:22)

  ‚óè API Contract Tests ‚Ä∫ Critical Endpoints ‚Ä∫ Database connectivity contract

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      34 |         baseURL
      35 |       );
    > 36 |       expect(result).toBe(true);
         |                      ^
      37 |     });
      38 |   });
      39 |

      at Object.toBe (tests/contract/api-contracts.test.js:36:22)

FAIL tests/unit/routes/strategyBuilder.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      AI strategy generation request { userId: 'test-user-123', prompt: 'short', symbolCount: 2 }

      at log (routes/strategyBuilder.js:167:13)

    console.log
      AI strategy generation request {
        userId: 'test-user-123',
        prompt: 'Create a momentum strategy for AAPL',
        symbolCount: 0
      }

      at log (routes/strategyBuilder.js:167:13)

    console.log
      AI strategy generation request { userId: 'test-user-123', prompt: '', symbolCount: 2 }

      at log (routes/strategyBuilder.js:167:13)

    console.log
      AI strategy generation request {
        userId: 'test-user-123',
        prompt: 'Create a momentum strategy',
        symbolCount: 0
      }

      at log (routes/strategyBuilder.js:167:13)

    console.log
      AI strategy generation request { userId: 'test-user-123', prompt: 'Test strategy', symbolCount: 1 }

      at log (routes/strategyBuilder.js:167:13)

    console.error
      AI strategy generation error {
        userId: 'test-user-123',
        error: "Cannot read properties of undefined (reading 'success')"
      }

      219 |     }
      220 |   } catch (err) {
    > 221 |     console.error("AI strategy generation error", {
          |             ^
      222 |       userId: req.user?.id,
      223 |       error: err.message,
      224 |     });

      at error (routes/strategyBuilder.js:221:13)

    console.log
      AI strategy generation request {
        userId: 'test-user-123',
        prompt: 'Create a test strategy',
        symbolCount: 1
      }

      at log (routes/strategyBuilder.js:167:13)

    console.error
      AI strategy generation error {
        userId: 'test-user-123',
        error: "Cannot read properties of undefined (reading 'success')"
      }

      219 |     }
      220 |   } catch (err) {
    > 221 |     console.error("AI strategy generation error", {
          |             ^
      222 |       userId: req.user?.id,
      223 |       error: err.message,
      224 |     });

      at error (routes/strategyBuilder.js:221:13)

    console.log
      AI strategy generation request { userId: 'test-user-123', prompt: 'short', symbolCount: 0 }

      at log (routes/strategyBuilder.js:167:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Strategy Builder Routes ‚Ä∫ POST /api/strategies/ai-generate ‚Ä∫ should return error when no symbols provided

    expect(received).toBe(expected) // Object.is equality

    Expected: "No symbols provided for strategy not found"
    Received: "No symbols provided for strategy"

      130 |
      131 |       expect(response.body.success).toBe(false);
    > 132 |       expect(response.body.error).toBe(
          |                                   ^
      133 |         "No symbols provided for strategy not found"
      134 |       );
      135 |     });

      at Object.toBe (tests/unit/routes/strategyBuilder.test.js:132:35)

  ‚óè Strategy Builder Routes ‚Ä∫ POST /api/strategies/ai-generate ‚Ä∫ should use default symbols array when not provided

    expect(received).toBe(expected) // Object.is equality

    Expected: "No symbols provided for strategy not found"
    Received: "No symbols provided for strategy"

      189 |         .expect(400);
      190 |
    > 191 |       expect(response.body.error).toBe(
          |                                   ^
      192 |         "No symbols provided for strategy not found"
      193 |       );
      194 |     });

      at Object.toBe (tests/unit/routes/strategyBuilder.test.js:191:35)

  ‚óè Strategy Builder Routes ‚Ä∫ POST /api/strategies/validate ‚Ä∫ should validate strategy successfully

    expected 200 "OK", got 500 "Internal Server Error"

      215 |         .post("/api/strategies/validate")
      216 |         .send({ strategy: validStrategy })
    > 217 |         .expect(200);
          |          ^
      218 |
      219 |       expect(response.body).toEqual({
      220 |         success: true,

      at Object.expect (tests/unit/routes/strategyBuilder.test.js:217:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Strategy Builder Routes ‚Ä∫ POST /api/strategies/validate ‚Ä∫ should handle validation with errors and warnings

    expected 200 "OK", got 500 "Internal Server Error"

      280 |         .post("/api/strategies/validate")
      281 |         .send({ strategy: validStrategy })
    > 282 |         .expect(200);
          |          ^
      283 |
      284 |       expect(response.body.validation.isValid).toBe(false);
      285 |       expect(response.body.validation.errors).toHaveLength(2);

      at Object.expect (tests/unit/routes/strategyBuilder.test.js:282:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Strategy Builder Routes ‚Ä∫ POST /api/strategies/run-ai-strategy ‚Ä∫ should return 501 for backtest (not implemented)

    expected 501 "Not Implemented", got 200 "OK"

      306 |         .post("/api/strategies/run-ai-strategy")
      307 |         .send(validBacktestRequest)
    > 308 |         .expect(501);
          |          ^
      309 |
      310 |       expect(response.body.success).toBe(false);
      311 |       expect(response.body.error).toBe(

      at Object.expect (tests/unit/routes/strategyBuilder.test.js:308:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Strategy Builder Routes ‚Ä∫ POST /api/strategies/run-ai-strategy ‚Ä∫ should handle missing symbols

    expected 400 "Bad Request", got 500 "Internal Server Error"

      351 |         .post("/api/strategies/run-ai-strategy")
      352 |         .send(requestWithoutSymbols)
    > 353 |         .expect(400);
          |          ^
      354 |
      355 |       expect(response.body).toEqual({
      356 |         success: false,

      at Object.expect (tests/unit/routes/strategyBuilder.test.js:353:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Strategy Builder Routes ‚Ä∫ POST /api/strategies/deploy-hft ‚Ä∫ should return 501 for HFT deployment (not implemented)

    expected 501 "Not Implemented", got 500 "Internal Server Error"

      383 |         .post("/api/strategies/deploy-hft")
      384 |         .send(validDeployRequest)
    > 385 |         .expect(501);
          |          ^
      386 |
      387 |       expect(response.body.success).toBe(false);
      388 |       expect(response.body.error).toBe(

      at Object.expect (tests/unit/routes/strategyBuilder.test.js:385:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Strategy Builder Routes ‚Ä∫ GET /api/strategies/available-symbols ‚Ä∫ should return available symbols successfully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "SELECT DISTINCT symbol FROM stock_symbols WHERE is_active = true ORDER BY symbol LIMIT 100"
    Received: "SELECT DISTINCT symbol FROM fundamental_metrics WHERE market_cap > 0 ORDER BY symbol LIMIT 100"

    Number of calls: 1

      493 |       });
      494 |
    > 495 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      496 |         "SELECT DISTINCT symbol FROM stock_symbols WHERE is_active = true ORDER BY symbol LIMIT 100"
      497 |       );
      498 |     });

      at Object.toHaveBeenCalledWith (tests/unit/routes/strategyBuilder.test.js:495:25)

  ‚óè Strategy Builder Routes ‚Ä∫ GET /api/strategies/available-symbols ‚Ä∫ should handle database error

    expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 3

      Object {
    -   "error": "Failed to retrieve available symbols",
    +   "details": "Database connection failed",
    +   "error": "Available symbols query failed",
        "success": false,
    +   "timestamp": "2025-09-23T16:32:13.055Z",
      }

      505 |         .expect(500);
      506 |
    > 507 |       expect(response.body).toEqual({
          |                             ^
      508 |         success: false,
      509 |         error: "Failed to retrieve available symbols",
      510 |       });

      at Object.toEqual (tests/unit/routes/strategyBuilder.test.js:507:29)

  ‚óè Strategy Builder Routes ‚Ä∫ GET /api/strategies/available-symbols ‚Ä∫ should handle null database result

    expected 503 "Service Unavailable", got 500 "Internal Server Error"

      516 |       const response = await request(app)
      517 |         .get("/api/strategies/available-symbols")
    > 518 |         .expect(503);
          |          ^
      519 |
      520 |       expect(response.body.success).toBe(false);
      521 |       expect(response.body.error).toBe(

      at Object.expect (tests/unit/routes/strategyBuilder.test.js:518:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Strategy Builder Routes ‚Ä∫ GET /api/strategies/list ‚Ä∫ should return 501 for user strategies list (not implemented)

    expected 501 "Not Implemented", got 200 "OK"

      543 |       const response = await request(app)
      544 |         .get("/api/strategies/list")
    > 545 |         .expect(501);
          |          ^
      546 |
      547 |       expect(response.body.success).toBe(false);
      548 |       expect(response.body.error).toBe(

      at Object.expect (tests/unit/routes/strategyBuilder.test.js:545:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Strategy Builder Routes ‚Ä∫ GET /api/strategies/list ‚Ä∫ should handle query parameters

    expected 501 "Not Implemented", got 200 "OK"

      556 |           "/api/strategies/list?includeBacktests=true&includeDeployments=true"
      557 |         )
    > 558 |         .expect(501);
          |          ^
      559 |
      560 |       expect(response.body.success).toBe(false);
      561 |     });

      at Object.expect (tests/unit/routes/strategyBuilder.test.js:558:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Strategy Builder Routes ‚Ä∫ GET /api/strategies/templates ‚Ä∫ should handle missing strategy templates

    expect(received).toEqual(expected) // deep equality

    - Expected  -  1
    + Received  + 26

    - Array []
    + Array [
    +   Object {
    +     "aiEnhanced": true,
    +     "complexity": "medium",
    +     "description": "Mean reversion strategy",
    +     "id": "meanReversion",
    +     "name": "Mean reversion strategy",
    +     "parameters": Array [
    +       "period",
    +       "threshold",
    +     ],
    +     "type": "meanReversion",
    +   },
    +   Object {
    +     "aiEnhanced": true,
    +     "complexity": "high",
    +     "description": "Momentum strategy",
    +     "id": "momentum",
    +     "name": "Momentum strategy",
    +     "parameters": Array [
    +       "window",
    +       "signal",
    +     ],
    +     "type": "momentum",
    +   },
    + ]

      598 |
      599 |       expect(response.body.success).toBe(true);
    > 600 |       expect(response.body.templates).toEqual([]);
          |                                       ^
      601 |       expect(response.body.count).toBe(0);
      602 |     });
      603 |   });

      at Object.toEqual (tests/unit/routes/strategyBuilder.test.js:600:39)

  ‚óè Strategy Builder Routes ‚Ä∫ Error handling and middleware ‚Ä∫ should log user actions properly

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      644 |       // Logger should be called for the request
      645 |       // Since we're mocking the logger, we can't easily verify this without more complex setup
    > 646 |       expect(mockAiGenerator.generateFromNaturalLanguage).toHaveBeenCalled();
          |                                                           ^
      647 |     });
      648 |   });
      649 |

      at Object.toHaveBeenCalled (tests/unit/routes/strategyBuilder.test.js:646:59)

FAIL tests/unit/utils/apiKeyService.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      JWT verifier initialized successfully (test mode)

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:100:17)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.error
      API key storage error: Error: API key data exceeds maximum length limits
          at ApiKeyService.storeApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:652:15)
          at storeApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1363:34)
          at Object.storeApiKey (/home/stocks/algo/webapp/lambda/tests/unit/utils/apiKeyService.test.js:197:28)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      775 |     } catch (error) {
      776 |       this.recordFailure(error);
    > 777 |       console.error("API key storage error:", error);
          |               ^
      778 |       throw new Error(
      779 |         `Failed to store API key for ${provider}: ${error.message}`
      780 |       );

      at ApiKeyService.error [as storeApiKey] (utils/apiKeyService.js:777:15)
      at storeApiKey (utils/apiKeyService.js:1363:34)
      at Object.storeApiKey (tests/unit/utils/apiKeyService.test.js:197:28)

    console.error
      API key storage error: Error: Database connection failed
          at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/utils/apiKeyService.test.js:226:23)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      775 |     } catch (error) {
      776 |       this.recordFailure(error);
    > 777 |       console.error("API key storage error:", error);
          |               ^
      778 |       throw new Error(
      779 |         `Failed to store API key for ${provider}: ${error.message}`
      780 |       );

      at ApiKeyService.error [as storeApiKey] (utils/apiKeyService.js:777:15)
      at storeApiKey (utils/apiKeyService.js:1363:14)
      at Object.<anonymous> (tests/unit/utils/apiKeyService.test.js:230:22)

    console.error
      API key deletion error: Error: Database connection failed
          at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/utils/apiKeyService.test.js:431:23)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      1160 |     } catch (error) {
      1161 |       this.recordFailure(error);
    > 1162 |       console.error("API key deletion error:", error);
           |               ^
      1163 |       return {
      1164 |         success: false,
      1165 |         error: `Failed to delete API key for ${provider}: ${error.message}`,

      at ApiKeyService.error [as deleteApiKey] (utils/apiKeyService.js:1162:15)
      at deleteApiKey (utils/apiKeyService.js:1388:14)
      at Object.<anonymous> (tests/unit/utils/apiKeyService.test.js:434:22)

    console.warn
      API key providers query returned null result, database may be unavailable

      1197 |       // Add null checking for database availability
      1198 |       if (!dbResult || !dbResult.rows) {
    > 1199 |         console.warn(
           |                 ^
      1200 |           "API key providers query returned null result, database may be unavailable"
      1201 |         );
      1202 |         this.recordFailure(new Error("Database temporarily unavailable"));

      at ApiKeyService.warn [as listProviders] (utils/apiKeyService.js:1199:17)
      at listProviders (utils/apiKeyService.js:1395:14)
      at Object.<anonymous> (tests/unit/utils/apiKeyService.test.js:501:22)

    console.error
      API key circuit breaker OPENED after 5 failures: Database connection failed

      525 |     if (this.circuitBreaker.failures >= this.circuitBreaker.maxFailures) {
      526 |       this.circuitBreaker.state = "OPEN";
    > 527 |       console.error(
          |               ^
      528 |         `API key circuit breaker OPENED after ${this.circuitBreaker.failures} failures:`,
      529 |         error.message
      530 |       );

      at ApiKeyService.error [as recordFailure] (utils/apiKeyService.js:527:15)
      at ApiKeyService.recordFailure [as storeApiKey] (utils/apiKeyService.js:776:12)
      at storeApiKey (utils/apiKeyService.js:1363:14)
      at Object.<anonymous> (tests/unit/utils/apiKeyService.test.js:601:22)

    console.error
      API key storage error: Error: Database connection failed
          at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/utils/apiKeyService.test.js:595:23)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      775 |     } catch (error) {
      776 |       this.recordFailure(error);
    > 777 |       console.error("API key storage error:", error);
          |               ^
      778 |       throw new Error(
      779 |         `Failed to store API key for ${provider}: ${error.message}`
      780 |       );

      at ApiKeyService.error [as storeApiKey] (utils/apiKeyService.js:777:15)
      at storeApiKey (utils/apiKeyService.js:1363:14)
      at Object.<anonymous> (tests/unit/utils/apiKeyService.test.js:601:22)

    console.error
      API key circuit breaker OPENED after 6 failures: API key data exceeds maximum length limits

      525 |     if (this.circuitBreaker.failures >= this.circuitBreaker.maxFailures) {
      526 |       this.circuitBreaker.state = "OPEN";
    > 527 |       console.error(
          |               ^
      528 |         `API key circuit breaker OPENED after ${this.circuitBreaker.failures} failures:`,
      529 |         error.message
      530 |       );

      at ApiKeyService.error [as recordFailure] (utils/apiKeyService.js:527:15)
      at ApiKeyService.recordFailure [as storeApiKey] (utils/apiKeyService.js:776:12)
      at storeApiKey (utils/apiKeyService.js:1363:34)
      at Object.storeApiKey (tests/unit/utils/apiKeyService.test.js:681:28)

    console.error
      API key storage error: Error: API key data exceeds maximum length limits
          at ApiKeyService.storeApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:652:15)
          at storeApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1363:34)
          at Object.storeApiKey (/home/stocks/algo/webapp/lambda/tests/unit/utils/apiKeyService.test.js:681:28)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      775 |     } catch (error) {
      776 |       this.recordFailure(error);
    > 777 |       console.error("API key storage error:", error);
          |               ^
      778 |       throw new Error(
      779 |         `Failed to store API key for ${provider}: ${error.message}`
      780 |       );

      at ApiKeyService.error [as storeApiKey] (utils/apiKeyService.js:777:15)
      at storeApiKey (utils/apiKeyService.js:1363:34)
      at Object.storeApiKey (tests/unit/utils/apiKeyService.test.js:681:28)

    console.log
      üîß Development mode: Resetting API key circuit breaker to CLOSED state

      at ApiKeyService.log [as checkCircuitBreaker] (utils/apiKeyService.js:476:17)

    console.error
      Audit logging error: Error: Audit log failed
          at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/utils/apiKeyService.test.js:953:32)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      928 |       ); // IP address can be added later
      929 |     } catch (error) {
    > 930 |       console.error("Audit logging error:", error);
          |               ^
      931 |       // Don't throw - audit logging failures shouldn't break main functionality
      932 |     }
      933 |   }

      at ApiKeyService.error [as logAuditEvent] (utils/apiKeyService.js:930:15)
      at ApiKeyService.storeApiKey (utils/apiKeyService.js:755:7)
      at storeApiKey (utils/apiKeyService.js:1363:14)
      at Object.<anonymous> (tests/unit/utils/apiKeyService.test.js:956:22)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè API Key Service ‚Ä∫ validateJwtToken ‚Ä∫ should reject invalid JWT tokens

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      109 |       const result = await validateJwtToken(token);
      110 |
    > 111 |       expect(result.valid).toBe(false);
          |                            ^
      112 |       expect(result.error).toContain("JWT verification not configured");
      113 |     });
      114 |

      at Object.toBe (tests/unit/utils/apiKeyService.test.js:111:28)

  ‚óè API Key Service ‚Ä∫ storeApiKey ‚Ä∫ should handle JWT validation failure

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      219 |       );
      220 |
    > 221 |       expect(result.success).toBe(false);
          |                              ^
      222 |       expect(result.error).toContain("JWT verification not configured");
      223 |     });
      224 |

      at Object.toBe (tests/unit/utils/apiKeyService.test.js:221:30)

  ‚óè API Key Service ‚Ä∫ validateApiKey ‚Ä∫ should handle JWT validation failure

    expect(received).toContain(expected) // indexOf

    Expected substring: "JWT verification not configured"
    Received string:    "API key not configured"

      359 |
      360 |       expect(result.valid).toBe(false);
    > 361 |       expect(result.error).toContain("JWT verification not configured");
          |                            ^
      362 |     });
      363 |
      364 |     test("should test connection when requested", async () => {

      at Object.toContain (tests/unit/utils/apiKeyService.test.js:361:28)

  ‚óè API Key Service ‚Ä∫ deleteApiKey ‚Ä∫ should handle JWT validation failure gracefully

    expect(received).toContain(expected) // indexOf

    Matcher error: received value must not be null nor undefined

    Received has value: undefined

      425 |       expect(result.success).toBe(true);
      426 |       expect(result.deleted).toBe(false);
    > 427 |       expect(result.message).toContain("Token validation failed");
          |                              ^
      428 |     });
      429 |
      430 |     test("should handle database errors", async () => {

      at Object.toContain (tests/unit/utils/apiKeyService.test.js:427:30)

  ‚óè API Key Service ‚Ä∫ listProviders ‚Ä∫ should return list of configured providers

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      465 |       const result = await listProviders("dev-bypass-token");
      466 |
    > 467 |       expect(Array.isArray(result)).toBe(true);
          |                                     ^
      468 |       expect(result).toHaveLength(2);
      469 |       expect(result[0]).toEqual(
      470 |         expect.objectContaining({

      at Object.toBe (tests/unit/utils/apiKeyService.test.js:467:37)

  ‚óè API Key Service ‚Ä∫ listProviders ‚Ä∫ should return empty array for no providers

    expect(received).toEqual(expected) // deep equality

    Expected: []
    Received: {"details": [], "providers": []}

      483 |       const result = await listProviders("dev-bypass-token");
      484 |
    > 485 |       expect(result).toEqual([]);
          |                      ^
      486 |     });
      487 |
      488 |     test("should handle JWT validation failure", async () => {

      at Object.toEqual (tests/unit/utils/apiKeyService.test.js:485:22)

  ‚óè API Key Service ‚Ä∫ listProviders ‚Ä∫ should handle JWT validation failure

    expect(received).toEqual(expected) // deep equality

    Expected: []
    Received: {"details": [], "providers": []}

      493 |       const result = await listProviders("invalid-jwt-token");
      494 |
    > 495 |       expect(result).toEqual([]);
          |                      ^
      496 |     });
      497 |
      498 |     test("should handle database unavailable gracefully", async () => {

      at Object.toEqual (tests/unit/utils/apiKeyService.test.js:495:22)

  ‚óè API Key Service ‚Ä∫ listProviders ‚Ä∫ should handle database unavailable gracefully

    expect(received).toEqual(expected) // deep equality

    Expected: []
    Received: {"providers": []}

      501 |       const result = await listProviders("dev-bypass-token");
      502 |
    > 503 |       expect(result).toEqual([]);
          |                      ^
      504 |     });
      505 |   });
      506 |

      at Object.toEqual (tests/unit/utils/apiKeyService.test.js:503:22)

  ‚óè API Key Service ‚Ä∫ circuit breaker functionality ‚Ä∫ should test JWT circuit breaker functionality

    expect(received).toContain(expected) // indexOf

    Expected substring: "JWT verification not configured"
    Received string:    "Invalid test token provided"

      617 |
      618 |       expect(result.valid).toBe(false);
    > 619 |       expect(result.error).toContain("JWT verification not configured");
          |                            ^
      620 |     });
      621 |   });
      622 |

      at Object.toContain (tests/unit/utils/apiKeyService.test.js:619:28)

  ‚óè API Key Service ‚Ä∫ development mode features ‚Ä∫ should handle development bypass token

    expect(received).toBe(expected) // Object.is equality

    Expected: "admin"
    Received: "user"

      976 |       expect(result.valid).toBe(true);
      977 |       expect(result.user.sub).toBe("dev-user-bypass");
    > 978 |       expect(result.user.role).toBe("admin");
          |                                ^
      979 |     });
      980 |
      981 |     test("should reset circuit breaker in development", async () => {

      at Object.toBe (tests/unit/utils/apiKeyService.test.js:978:32)

FAIL tests/unit/routes/news.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.error
      Error fetching news articles: Error: Database connection failed
          at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/news.test.js:208:31)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      338 |     });
      339 |   } catch (error) {
    > 340 |     console.error("Error fetching news articles:", error);
          |             ^
      341 |     res.status(500).json({
      342 |       success: false,
      343 |       error: "Failed to fetch news articles",

      at error (routes/news.js:340:13)

    console.error
      Error fetching sentiment analysis: Error: Database query failed
          at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/news.test.js:298:31)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      448 |     res.json({ success: true, data: sentimentAnalysis });
      449 |   } catch (error) {
    > 450 |     console.error("Error fetching sentiment analysis:", error);
          |             ^
      451 |     res.status(500).json({
      452 |       success: false,
      453 |       error: "Failed to fetch sentiment analysis",

      at error (routes/news.js:450:13)

    console.error
      Error analyzing sentiment: Error: Analysis failed
          at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/news.test.js:463:9)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      660 |     res.json({ success: true, data: analysis });
      661 |   } catch (error) {
    > 662 |     console.error("Error analyzing sentiment:", error);
          |             ^
      663 |     res.status(500).json({
      664 |       success: false,
      665 |       error: "Failed to analyze sentiment",

      at error (routes/news.js:662:13)

    console.log
      üì∞ News feed requested - category: technology, limit: 5

      at log (routes/news.js:875:13)

    console.log
      üì∞ News feed requested - category: technology, limit: 50

      at log (routes/news.js:875:13)

    console.log
      üìÖ Economic calendar requested - importance: high, country: US

      at log (routes/news.js:990:13)

    console.log
      üìä Sentiment dashboard requested for timeframe: 24h

      at log (routes/news.js:1120:13)

    console.log
      üì∞ Symbol news requested for search

      at log (routes/news.js:1578:13)

    console.log
      üì∞ Symbol news requested for search

      at log (routes/news.js:1578:13)

    console.log
      üì∞ Symbol news requested for search

      at log (routes/news.js:1578:13)

    console.log
      üì∞ Symbol news requested for search

      at log (routes/news.js:1578:13)

    console.log
      üì∞ Symbol news requested for search

      at log (routes/news.js:1578:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè News Routes ‚Ä∫ GET /news/ ‚Ä∫ should return API status

    expect(received).toEqual(expected) // deep equality

    - Expected  - 3
    + Received  + 1

      Object {
    -   "message": "News API - Ready",
    -   "status": "operational",
    +   "data": Array [],
        "success": true,
    -   "timestamp": Any<String>,
      }

      100 |       const response = await request(app).get("/news/").expect(200);
      101 |
    > 102 |       expect(response.body).toEqual({
          |                             ^
      103 |         success: true,
      104 |         message: "News API - Ready",
      105 |         timestamp: expect.any(String),

      at Object.toEqual (tests/unit/routes/news.test.js:102:29)

  ‚óè News Routes ‚Ä∫ GET /news/articles ‚Ä∫ should return news articles with sentiment analysis

    expect(received).toMatchObject(expected)

    - Expected  - 4
    + Received  + 9

    @@ -1,27 +1,32 @@
      Object {
        "data": Object {
    -     "articles": ArrayContaining [
    -       ObjectContaining {
    +     "articles": Array [
    +       Object {
              "author": "John Smith",
              "category": "technology",
    +         "content": "Technology companies showed strong earnings growth this quarter...",
    +         "created_at": "2025-09-23T16:32:13.328Z",
              "id": 1,
              "impact_score": 0.8,
              "keywords": Array [
                "tech",
                "earnings",
                "growth",
              ],
    +         "published_at": "2025-09-23T16:32:13.328Z",
              "relevance_score": 0.9,
              "sentiment": Object {
                "confidence": 0.85,
    -           "label": "positive",
    -           "score": 0.75,
    +           "label": "neutral",
    +           "score": 0,
              },
              "source": "Reuters",
    +         "summary": "Strong tech earnings drive market optimism",
              "symbol": "AAPL",
              "title": "Tech Stocks Rally on Strong Earnings",
    +         "url": "https://reuters.com/article/1",
            },
          ],
          "filters": Object {
            "symbol": "AAPL",
            "timeframe": "24h",

      147 |         .expect(200);
      148 |
    > 149 |       expect(response.body).toMatchObject({
          |                             ^
      150 |         success: true,
      151 |         data: {
      152 |           articles: expect.arrayContaining([

      at Object.toMatchObject (tests/unit/routes/news.test.js:149:29)

  ‚óè News Routes ‚Ä∫ GET /news/sentiment/:symbol ‚Ä∫ should return sentiment analysis for symbol

    expect(received).toMatchObject(expected)

    - Expected  - 25
    + Received  +  6

      Object {
        "data": Object {
    -     "keywords": ArrayContaining [
    -       Object {
    -         "frequency": 10,
    -         "keyword": "growth",
    -       },
    -       Object {
    -         "frequency": 8,
    -         "keyword": "earnings",
    -       },
    -     ],
          "overall_sentiment": Object {
    -       "avg_impact": 0.75,
    -       "avg_relevance": 0.8,
            "distribution": Object {
    -         "negative": 5,
    -         "neutral": 5,
    -         "positive": 15,
    +         "negative": 0,
    +         "neutral": 0,
    +         "positive": 0,
            },
    -       "label": "positive",
    -       "score": 0.65,
    -       "total_articles": 25,
    +       "label": "neutral",
    +       "score": 0,
    +       "total_articles": 0,
          },
          "symbol": "AAPL",
          "timeframe": "24h",
    -     "trend": ArrayContaining [
    -       ObjectContaining {
    -         "article_count": 5,
    -         "hour": "2024-01-01T10:00:00.000Z",
    -         "sentiment": 0.7,
    -       },
    -     ],
        },
        "success": true,
      }

      261 |         .expect(200);
      262 |
    > 263 |       expect(response.body).toMatchObject({
          |                             ^
      264 |         success: true,
      265 |         data: {
      266 |           symbol: "AAPL",

      at Object.toMatchObject (tests/unit/routes/news.test.js:263:29)

  ‚óè News Routes ‚Ä∫ GET /news/market-sentiment ‚Ä∫ should return market sentiment overview

    expect(received).toMatchObject(expected)

    - Expected  - 36
    + Received  +  8

      Object {
        "data": Object {
    -     "by_category": ArrayContaining [
    -       ObjectContaining {
    -         "article_count": 30,
    -         "category": "technology",
    -         "label": "positive",
    -         "sentiment": 0.7,
    -       },
    -       ObjectContaining {
    -         "article_count": 25,
    -         "category": "finance",
    -         "label": "positive",
    -         "sentiment": 0.4,
    -       },
    -     ],
          "overall_sentiment": Object {
            "distribution": Object {
    -         "negative": 25,
    -         "neutral": 15,
    -         "positive": 60,
    +         "negative": 0,
    +         "neutral": 0,
    +         "positive": 0,
            },
    -       "label": "positive",
    -       "score": 0.55,
    -       "total_articles": 100,
    +       "label": "neutral",
    +       "score": 0.1,
    +       "total_articles": 0,
          },
          "timeframe": "24h",
    -     "top_symbols": ArrayContaining [
    -       ObjectContaining {
    -         "article_count": 15,
    -         "impact": 0.85,
    -         "label": "positive",
    -         "sentiment": 0.8,
    -         "symbol": "AAPL",
    -       },
    -     ],
    -     "trend": ArrayContaining [
    -       ObjectContaining {
    -         "article_count": 20,
    -         "hour": "2024-01-01T10:00:00.000Z",
    -         "sentiment": 0.6,
    -       },
    -     ],
    +     "top_symbols": Array [],
    +     "trend": Array [],
        },
        "success": true,
      }

      371 |         .expect(200);
      372 |
    > 373 |       expect(response.body).toMatchObject({
          |                             ^
      374 |         success: true,
      375 |         data: {
      376 |           timeframe: "24h",

      at Object.toMatchObject (tests/unit/routes/news.test.js:373:29)

  ‚óè News Routes ‚Ä∫ GET /news/sources ‚Ä∫ should return news sources with reliability scores

    expect(received).toMatchObject(expected)

    - Expected  - 16
    + Received  + 10

      Object {
        "data": Object {
    -     "sources": ArrayContaining [
    -       ObjectContaining {
    -         "article_count": 150,
    -         "avg_impact": 0.75,
    -         "avg_relevance": 0.85,
    -         "reliability_score": 0.95,
    +     "sources": Array [
    +       Object {
    +         "article_count": null,
    +         "avg_impact": null,
    +         "avg_relevance": null,
    +         "reliability_score": 0.75,
              "sentiment_distribution": Object {
    -           "negative": 30,
    -           "neutral": 30,
    -           "positive": 90,
    -         },
    -         "source": "Reuters",
    +           "negative": 25,
    +           "neutral": 15,
    +           "positive": 60,
              },
    -       ObjectContaining {
    -         "article_count": 120,
    -         "reliability_score": 0.92,
    -         "source": "Bloomberg",
            },
          ],
    -     "total": 2,
    +     "total": 1,
        },
        "success": true,
      }

      506 |       const response = await request(app).get("/news/sources").expect(200);
      507 |
    > 508 |       expect(response.body).toMatchObject({
          |                             ^
      509 |         success: true,
      510 |         data: {
      511 |           sources: expect.arrayContaining([

      at Object.toMatchObject (tests/unit/routes/news.test.js:508:29)

  ‚óè News Routes ‚Ä∫ GET /news/categories ‚Ä∫ should return news categories with sentiment data

    expect(received).toMatchObject(expected)

    - Expected  - 9
    + Received  + 9

    @@ -1,19 +1,19 @@
      Object {
        "data": Object {
    -     "categories": ArrayContaining [
    -       ObjectContaining {
    -         "article_count": 75,
    -         "avg_impact": 0.8,
    -         "avg_sentiment": 0.65,
    +     "categories": Array [
    +       Object {
    +         "article_count": 30,
    +         "avg_impact": null,
    +         "avg_sentiment": 0.7,
              "category": "technology",
              "sentiment_label": "positive",
            },
    -       ObjectContaining {
    -         "article_count": 60,
    -         "avg_impact": 0.7,
    -         "avg_sentiment": 0.45,
    +       Object {
    +         "article_count": 25,
    +         "avg_impact": null,
    +         "avg_sentiment": 0.4,
              "category": "finance",
              "sentiment_label": "positive",
            },
          ],
          "total": 2,

      563 |       const response = await request(app).get("/news/categories").expect(200);
      564 |
    > 565 |       expect(response.body).toMatchObject({
          |                             ^
      566 |         success: true,
      567 |         data: {
      568 |           categories: expect.arrayContaining([

      at Object.toMatchObject (tests/unit/routes/news.test.js:565:29)

  ‚óè News Routes ‚Ä∫ GET /news/trending ‚Ä∫ should return trending topics

    expect(received).toMatchObject(expected)

    - Expected  - 25
    + Received  +  9

    @@ -1,37 +1,21 @@
      Object {
        "data": Object {
    -     "keywords": ArrayContaining [
    -       ObjectContaining {
    +     "keywords": Array [
    +       Object {
              "avg_impact": 0.85,
    -         "avg_sentiment": 0.7,
    -         "frequency": 25,
    -         "keyword": "earnings",
    -         "sentiment_label": "positive",
    -       },
    -       ObjectContaining {
    -         "avg_impact": 0.9,
    -         "avg_sentiment": 0.3,
    -         "frequency": 20,
    -         "keyword": "federal reserve",
    +         "avg_sentiment": 0.8,
    +         "frequency": null,
              "sentiment_label": "positive",
            },
          ],
    -     "symbols": ArrayContaining [
    -       ObjectContaining {
    -         "avg_impact": 0.8,
    -         "avg_sentiment": 0.75,
    -         "mention_count": 15,
    +     "symbols": Array [
    +       Object {
    +         "avg_impact": null,
    +         "avg_sentiment": 0.6,
    +         "mention_count": null,
              "sentiment_label": "positive",
    -         "symbol": "AAPL",
    -       },
    -       ObjectContaining {
    -         "avg_impact": 0.75,
    -         "avg_sentiment": -0.2,
    -         "mention_count": 12,
    -         "sentiment_label": "negative",
    -         "symbol": "TSLA",
            },
          ],
          "timeframe": "24h",
        },
        "success": true,

      633 |         .expect(200);
      634 |
    > 635 |       expect(response.body).toMatchObject({
          |                             ^
      636 |         success: true,
      637 |         data: {
      638 |           timeframe: "24h",

      at Object.toMatchObject (tests/unit/routes/news.test.js:635:29)

  ‚óè News Routes ‚Ä∫ GET /news/feed ‚Ä∫ should return enhanced news feed

    expect(received).toMatchObject(expected)

    - Expected  - 16
    + Received  +  3

      Object {
    -   "data": ObjectContaining {
    -     "articles": Any<Array>,
    -     "summary": ObjectContaining {
    -       "avg_impact_score": Any<Number>,
    -       "sentiment_distribution": ObjectContaining {
    -         "negative": Any<Number>,
    -         "neutral": Any<Number>,
    -         "positive": Any<Number>,
    -       },
    -       "total_articles": Any<Number>,
    -     },
    -   },
        "filters": Object {
          "category": "technology",
    -     "sentiment_filter": "ALL",
    -     "source_filter": "ALL",
    -     "symbol": "ALL",
    +     "sentiment_filter": null,
    +     "source_filter": null,
    +     "symbol": null,
          "time_range": "24h",
        },
    -   "last_updated": Any<String>,
        "success": true,
      }

      682 |         .expect(200);
      683 |
    > 684 |       expect(response.body).toMatchObject({
          |                             ^
      685 |         success: true,
      686 |         data: expect.objectContaining({
      687 |           articles: expect.any(Array),

      at Object.toMatchObject (tests/unit/routes/news.test.js:684:29)

  ‚óè News Routes ‚Ä∫ GET /news/feed ‚Ä∫ should return fallback data on error

    expect(received).toMatchObject(expected)

    - Expected  - 4
    + Received  + 0

      Object {
    -   "data": Any<Object>,
    -   "error": Any<String>,
    -   "fallback": true,
    -   "last_updated": Any<String>,
        "success": true,
      }

      727 |         .expect(200);
      728 |
    > 729 |       expect(response.body).toMatchObject({
          |                             ^
      730 |         success: true,
      731 |         data: expect.any(Object),
      732 |         fallback: true,

      at Object.toMatchObject (tests/unit/routes/news.test.js:729:29)

  ‚óè News Routes ‚Ä∫ GET /news/economic-calendar ‚Ä∫ should return economic calendar data

    expect(received).toMatchObject(expected)

    - Expected  - 10
    + Received  +  0

      Object {
    -   "data": ObjectContaining {
    -     "events": Any<Array>,
    -     "summary": ObjectContaining {
    -       "countries_covered": Any<Array>,
    -       "high_impact_events": Any<Number>,
    -       "next_major_event": Any<Object>,
    -       "total_events": Any<Number>,
    -     },
    -   },
        "filters": Object {
          "country": "US",
          "date_range": "7d",
          "importance": "high",
        },
    -   "last_updated": Any<String>,
        "success": true,
      }

      748 |         .expect(200);
      749 |
    > 750 |       expect(response.body).toMatchObject({
          |                             ^
      751 |         success: true,
      752 |         data: expect.objectContaining({
      753 |           events: expect.any(Array),

      at Object.toMatchObject (tests/unit/routes/news.test.js:750:29)

  ‚óè News Routes ‚Ä∫ GET /news/sentiment-dashboard ‚Ä∫ should return sentiment dashboard data

    Cannot set headers after they are sent to the client

      1284 |     console.error("Sentiment dashboard error:", error);
      1285 |
    > 1286 |     return res.status(500).json({
           |                            ^
      1287 |       success: false,
      1288 |       error: "Sentiment dashboard query failed",
      1289 |       details: error.message,

      at ServerResponse.header (node_modules/express/lib/response.js:794:10)
      at ServerResponse.send (node_modules/express/lib/response.js:174:12)
      at ServerResponse.json (node_modules/express/lib/response.js:278:15)
      at json (routes/news.js:1286:28)

  ‚óè News Routes ‚Ä∫ GET /news/sentiment-dashboard ‚Ä∫ should return sentiment dashboard data

    expect(received).toMatchObject(expected)

    - Expected  - 20
    + Received  + 14

      Object {
    -   "data": ObjectContaining {
    -     "fear_greed_index": ObjectContaining {
    -       "change_24h": Any<Number>,
    -       "label": Any<String>,
    -       "value": Any<Number>,
    +   "data": Object {
    +     "market_sentiment": Object {
    +       "distribution": Object {
    +         "negative": 0,
    +         "neutral": 0,
    +         "positive": 0,
            },
    -     "news_sentiment": ObjectContaining {
    -       "negative_articles": Any<Number>,
    -       "neutral_articles": Any<Number>,
    -       "positive_articles": Any<Number>,
    +       "overall_score": 0.1,
    +       "sentiment_label": "neutral",
    +       "total_articles": 0,
          },
    -     "overall_sentiment": ObjectContaining {
    -       "change_24h": Any<Number>,
    -       "confidence": Any<Number>,
    -       "label": StringMatching /^(bullish|bearish|neutral)$/,
    -       "score": Any<Number>,
    +     "message": "Sentiment data temporarily unavailable - showing neutral baseline",
    +     "sector_sentiment": Array [],
    +     "symbol_sentiment": Array [],
    +     "timeframe": "24h",
    +     "updated_at": "2025-09-23T16:32:13.369Z",
        },
    -     "sentiment_by_sector": Any<Array>,
    -     "social_sentiment": Any<Object>,
    -     "trending_topics": Any<Array>,
    -   },
    -   "last_updated": Any<String>,
        "success": true,
    -   "timeframe": "24h",
      }

      782 |
      783 |       if (response.status === 200) {
    > 784 |         expect(response.body).toMatchObject({
          |                               ^
      785 |           success: true,
      786 |           data: expect.objectContaining({
      787 |             overall_sentiment: expect.objectContaining({

      at Object.toMatchObject (tests/unit/routes/news.test.js:784:31)

  ‚óè News Routes ‚Ä∫ GET /news/search ‚Ä∫ should return search results for valid query

    expect(received).toMatchObject(expected)

    - Expected  - 33
    + Received  +  6

      Object {
        "data": Object {
    -     "articles": ArrayContaining [
    -       ObjectContaining {
    -         "headline": "Apple reports strong earnings",
    -         "id": 1,
    -         "matching_snippet": Any<String>,
    -         "search_relevance_score": Any<Number>,
    -         "symbol": "AAPL",
    -         "time_ago": Any<String>,
    -       },
    +     "articles": Array [
    +       Object {
    +         "relatedTickers": Array [
    +           "SEARCH",
              ],
    -     "estimated_total": 1,
    -     "search_metadata": ObjectContaining {
    -       "query": "Apple earnings",
    -       "relevance_scores": ObjectContaining {
    -         "avg": Any<Number>,
    -         "max": Any<Number>,
    -         "min": Any<Number>,
    -       },
    -       "suggestions": Any<Array>,
    -     },
    -     "search_statistics": ObjectContaining {
    -       "sentiment_distribution": Any<Object>,
    -       "total_matches": 1,
    -       "unique_categories": 1,
    -       "unique_sources": 1,
    -     },
    -     "total_results": 1,
    +         "url": "https://example.com/apple-earnings",
            },
    -   "filters": ObjectContaining {
    -     "category": "all",
    -     "query": "Apple earnings",
    -     "sentiment": "all",
    -     "timeframe": "30d",
    +     ],
        },
    -   "methodology": Any<Object>,
    -   "success": true,
      }

      856 |         .expect(200);
      857 |
    > 858 |       expect(response.body).toMatchObject({
          |                             ^
      859 |         success: true,
      860 |         data: {
      861 |           articles: expect.arrayContaining([

      at Object.toMatchObject (tests/unit/routes/news.test.js:858:29)

  ‚óè News Routes ‚Ä∫ GET /news/search ‚Ä∫ should require search query parameter

    expected 400 "Bad Request", got 200 "OK"

      898 |
      899 |     test("should require search query parameter", async () => {
    > 900 |       const response = await request(app).get("/news/search").expect(400);
          |                                                               ^
      901 |
      902 |       expect(response.body).toMatchObject({
      903 |         success: false,

      at Object.expect (tests/unit/routes/news.test.js:900:63)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè News Routes ‚Ä∫ GET /news/search ‚Ä∫ should handle empty search results

    expect(received).toMatchObject(expected)

    - Expected  - 9
    + Received  + 0

      Object {
        "data": Object {
          "articles": Array [],
    -     "search_metadata": Object {
    -       "query": "nonexistent",
    -       "suggestions": ArrayContaining [
    -         "Try broader search terms",
    -         "Check spelling and try synonyms",
    -       ],
    -     },
    -     "total_results": 0,
        },
    -   "success": true,
      }

      916 |         .expect(200);
      917 |
    > 918 |       expect(response.body).toMatchObject({
          |                             ^
      919 |         success: true,
      920 |         data: {
      921 |           articles: [],

      at Object.toMatchObject (tests/unit/routes/news.test.js:918:29)

  ‚óè News Routes ‚Ä∫ GET /news/search ‚Ä∫ should handle database errors gracefully

    expected 500 "Internal Server Error", got 200 "OK"

      937 |       const response = await request(app)
      938 |         .get("/news/search?query=test")
    > 939 |         .expect(500);
          |          ^
      940 |
      941 |       expect(response.body).toMatchObject({
      942 |         success: false,

      at Object.expect (tests/unit/routes/news.test.js:939:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè News Routes ‚Ä∫ GET /news/search ‚Ä∫ should support filtering parameters

    expected 200 "OK", got 500 "Internal Server Error"

      979 |           "/news/search?query=AAPL&category=earnings&sentiment=positive&symbol=AAPL&timeframe=7d&limit=10"
      980 |         )
    > 981 |         .expect(200);
          |          ^
      982 |
      983 |       expect(response.body.filters).toMatchObject({
      984 |         query: "AAPL",

      at Object.expect (tests/unit/routes/news.test.js:981:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

FAIL tests/unit/routes/financials.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      üìä Financial statements requested - symbol: AAPL, period: annual, type: income

      at log (routes/financials.js:47:13)

    console.log
      üìä Financial statements requested - symbol: required, period: annual, type: all

      at log (routes/financials.js:47:13)

    console.log
      üìä Financial statements requested - symbol: AAPL, period: annual, type: all

      at log (routes/financials.js:47:13)

    console.log
      üìä Financial statements requested - symbol: AAPL, period: quarterly, type: all

      at log (routes/financials.js:47:13)

    console.log
      üìä Financial statements requested - symbol: AAPL, period: annual, type: balance_sheet

      at log (routes/financials.js:47:13)

    console.log
      üìä Financial statements requested - symbol: INVALID, period: annual, type: all

      at log (routes/financials.js:47:13)

    console.log
      üìä Financial statements requested - symbol: AAPL, period: annual, type: all

      at log (routes/financials.js:47:13)

    console.warn
      Balance sheet data not available for AAPL: Database connection failed

      105 |         statements.balance_sheet = balanceResult.rows || [];
      106 |       } catch (e) {
    > 107 |         console.warn(`Balance sheet data not available for ${symbol}:`, e.message);
          |                 ^
      108 |         statements.balance_sheet = [];
      109 |       }
      110 |     }

      at warn (routes/financials.js:107:17)

    console.warn
      Income statement data not available for AAPL: Database connection failed

      124 |         statements.income_statement = incomeResult.rows || [];
      125 |       } catch (e) {
    > 126 |         console.warn(`Income statement data not available for ${symbol}:`, e.message);
          |                 ^
      127 |         statements.income_statement = [];
      128 |       }
      129 |     }

      at warn (routes/financials.js:126:17)

    console.warn
      Cash flow data not available for AAPL: Database connection failed

      143 |         statements.cash_flow = cashflowResult.rows || [];
      144 |       } catch (e) {
    > 145 |         console.warn(`Cash flow data not available for ${symbol}:`, e.message);
          |                 ^
      146 |         statements.cash_flow = [];
      147 |       }
      148 |     }

      at warn (routes/financials.js:145:17)

    console.log
      üí∞ [FINANCIALS] Fetching basic financial data for AAPL

      at log (routes/financials.js:1189:11)

    console.log
      üí∞ [FINANCIALS] Fetching basic financial data for aapl

      at log (routes/financials.js:1189:11)

    console.log
      üí∞ [FINANCIALS] Fetching basic financial data for INVALID

      at log (routes/financials.js:1189:11)

    console.log
      üí∞ [FINANCIALS] Fetching ratios for GOOGL (test endpoint)

      at log (routes/financials.js:1573:11)

    console.log
      üìä [FINANCIALS] Fetching earnings data for MSFT

      at log (routes/financials.js:1959:11)

    console.log
      üìä [FINANCIALS] Fetching earnings data for AAPL

      at log (routes/financials.js:1959:11)

    console.log
      Financials debug endpoint called

      at log (routes/financials.js:536:13)

    console.log
      Financials debug endpoint called

      at log (routes/financials.js:536:13)

    console.log
      üìä Financial statements requested - symbol: AAPL'; DROP TABLE financial_statements; --, period: annual, type: all

      at log (routes/financials.js:47:13)

    console.warn
      Income statement data not available for AAPL'; DROP TABLE financial_statements; --: Database connection failed

      124 |         statements.income_statement = incomeResult.rows || [];
      125 |       } catch (e) {
    > 126 |         console.warn(`Income statement data not available for ${symbol}:`, e.message);
          |                 ^
      127 |         statements.income_statement = [];
      128 |       }
      129 |     }

      at warn (routes/financials.js:126:17)

    console.warn
      Cash flow data not available for AAPL'; DROP TABLE financial_statements; --: Database connection failed

      143 |         statements.cash_flow = cashflowResult.rows || [];
      144 |       } catch (e) {
    > 145 |         console.warn(`Cash flow data not available for ${symbol}:`, e.message);
          |                 ^
      146 |         statements.cash_flow = [];
      147 |       }
      148 |     }

      at warn (routes/financials.js:145:17)

    console.log
      üí∞ [FINANCIALS] Fetching basic financial data for invalid-symbol-format!@

      at log (routes/financials.js:1189:11)

    console.error
      ‚ùå [FINANCIALS] Error fetching basic financial data for invalid-symbol-format!@: Error: Database connection failed
          at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/financials.test.js:193:23)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      1232 |     });
      1233 |   } catch (error) {
    > 1234 |     console.error(
           |             ^
      1235 |       `‚ùå [FINANCIALS] Error fetching basic financial data for ${symbol}:`,
      1236 |       error
      1237 |     );

      at error (routes/financials.js:1234:13)

    console.log
      üìä Financial statements requested - symbol: AAPL, period: invalid_period, type: all

      at log (routes/financials.js:47:13)

    console.log
      üìä Financial statements requested - symbol: AAPL, period: annual, type: invalid_type

      at log (routes/financials.js:47:13)

    console.log
      üí∞ [FINANCIALS] Fetching basic financial data for AAPL

      at log (routes/financials.js:1189:11)

    console.log
      üí∞ [FINANCIALS] Fetching basic financial data for AAPL

      at log (routes/financials.js:1189:11)

    console.log
      üìä Financial statements requested - symbol: AAPL, period: annual, type: all

      at log (routes/financials.js:47:13)

    console.warn
      Balance sheet data not available for AAPL: Query timeout

      105 |         statements.balance_sheet = balanceResult.rows || [];
      106 |       } catch (e) {
    > 107 |         console.warn(`Balance sheet data not available for ${symbol}:`, e.message);
          |                 ^
      108 |         statements.balance_sheet = [];
      109 |       }
      110 |     }

      at warn (routes/financials.js:107:17)

    console.warn
      Income statement data not available for AAPL: Cannot read properties of null (reading 'rows')

      124 |         statements.income_statement = incomeResult.rows || [];
      125 |       } catch (e) {
    > 126 |         console.warn(`Income statement data not available for ${symbol}:`, e.message);
          |                 ^
      127 |         statements.income_statement = [];
      128 |       }
      129 |     }

      at warn (routes/financials.js:126:17)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Financials Routes Unit Tests ‚Ä∫ GET /financials/statements ‚Ä∫ should filter by statement type

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      171 |         .query({ symbol: "AAPL", type: "balance_sheet" });
      172 |
    > 173 |       expect(response.status).toBe(200);
          |                               ^
      174 |       expect(mockQuery).toHaveBeenCalledWith(
      175 |         expect.stringContaining("annual_balance_sheet"),
      176 |         expect.any(Array)

      at Object.toBe (tests/unit/routes/financials.test.js:173:31)

  ‚óè Financials Routes Unit Tests ‚Ä∫ GET /financials/statements ‚Ä∫ should handle empty results

    expect(received).toBe(expected) // Object.is equality

    Expected: 404
    Received: 200

      185 |         .query({ symbol: "INVALID" });
      186 |
    > 187 |       expect(response.status).toBe(404);
          |                               ^
      188 |       expect(response.body).toHaveProperty("success", false);
      189 |       expect(response.body.error).toContain("No financial data found");
      190 |     });

      at Object.toBe (tests/unit/routes/financials.test.js:187:31)

  ‚óè Financials Routes Unit Tests ‚Ä∫ GET /financials/statements ‚Ä∫ should handle database errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 404

      198 |         .query({ symbol: "AAPL" });
      199 |
    > 200 |       expect(response.status).toBe(500);
          |                               ^
      201 |       expect(response.body).toHaveProperty("success", false);
      202 |       expect(response.body.error).toBeDefined();
      203 |     });

      at Object.toBe (tests/unit/routes/financials.test.js:200:31)

  ‚óè Financials Routes Unit Tests ‚Ä∫ GET /financials/:symbol ‚Ä∫ should return basic financial overview

    expect(received).toHaveProperty(path, value)

    Expected path: "market_cap"
    Received path: []

    Expected value: 2800000000000
    Received value: {"count": 1, "financials": [{"current_ratio": 0.98, "debt_to_equity": 1.73, "market_cap": 2800000000000, "net_income": 96995000000, "pe_ratio": 28.5, "revenue": 394328000000, "roe": 0.27, "symbol": "AAPL"}], "symbol": "AAPL"}

      229 |       expect(response.body).toHaveProperty("data");
      230 |       expect(response.body.data).toHaveProperty("symbol", "AAPL");
    > 231 |       expect(response.body.data).toHaveProperty("market_cap", 2800000000000);
          |                                  ^
      232 |       expect(mockQuery).toHaveBeenCalledWith(
      233 |         expect.stringContaining("financial_overview"),
      234 |         ["AAPL"]

      at Object.toHaveProperty (tests/unit/routes/financials.test.js:231:34)

  ‚óè Financials Routes Unit Tests ‚Ä∫ GET /financials/:symbol ‚Ä∫ should handle symbol not found

    expect(received).toContain(expected) // indexOf

    Expected substring: "Financial data not found"
    Received string:    "No financial data found for symbol INVALID"

      254 |       expect(response.status).toBe(404);
      255 |       expect(response.body).toHaveProperty("success", false);
    > 256 |       expect(response.body.error).toContain("Financial data not found");
          |                                   ^
      257 |     });
      258 |   });
      259 |

      at Object.toContain (tests/unit/routes/financials.test.js:256:35)

  ‚óè Financials Routes Unit Tests ‚Ä∫ GET /financials/:symbol/ratios ‚Ä∫ should return financial ratios

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

    - StringContaining "key_metrics",
    + "
          SELECT
            fr.symbol,
            COALESCE(fr.price_to_earnings, fm.pe_ratio) as trailing_pe,
            fm.forward_pe,
            COALESCE(fr.price_to_book, fm.price_to_book) as price_to_book,
            fr.debt_to_equity,
            fr.current_ratio,
            fr.quick_ratio,
            fr.profit_margin as profit_margin_pct,
            fr.return_on_equity as return_on_equity_pct,
            fr.return_on_assets as return_on_assets_pct
          FROM financial_ratios fr
          LEFT JOIN fundamental_metrics fm ON fr.symbol = fm.symbol
          WHERE fr.symbol ILIKE $1
          ORDER BY fr.fiscal_year DESC
          LIMIT 1
        ",
      ["GOOGL"],

    Number of calls: 1

      287 |       expect(response.body.data.ratios).toHaveProperty("pe_ratio", 22.8);
      288 |       expect(response.body.data.ratios).toHaveProperty("return_on_equity_pct", 0.18);
    > 289 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      290 |         expect.stringContaining("key_metrics"),
      291 |         ["GOOGL"]
      292 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/financials.test.js:289:25)

  ‚óè Financials Routes Unit Tests ‚Ä∫ GET /financials/earnings/:symbol ‚Ä∫ should return earnings history

    expect(received).toHaveProperty(path, value)

    Expected path: "symbol"
    Received path: []

    Expected value: "MSFT"
    Received value: [{"earnings_date": "2023-10-24", "eps_actual": 2.45, "eps_estimate": 2.38, "quarter": "Q4 2023", "revenue_actual": 56517000000, "revenue_estimate": 55490000000, "surprise_percent": 2.94, "symbol": "MSFT"}, {"earnings_date": "2023-07-25", "eps_actual": 2.32, "eps_estimate": 2.28, "quarter": "Q3 2023", "revenue_actual": 53445000000, "revenue_estimate": 52740000000, "surprise_percent": 1.75, "symbol": "MSFT"}]

      328 |       expect(response.body).toHaveProperty("success", true);
      329 |       expect(response.body).toHaveProperty("data");
    > 330 |       expect(response.body.data).toHaveProperty("symbol", "MSFT");
          |                                  ^
      331 |       expect(response.body.data).toHaveProperty("earnings_history");
      332 |       expect(Array.isArray(response.body.data.earnings_history)).toBe(true);
      333 |       expect(response.body.data.earnings_history).toHaveLength(2);

      at Object.toHaveProperty (tests/unit/routes/financials.test.js:330:34)

  ‚óè Financials Routes Unit Tests ‚Ä∫ GET /financials/earnings/:symbol ‚Ä∫ should handle earnings limit parameter

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "LIMIT", ArrayContaining ["AAPL", 8]
    Received: "
            SELECT 
              symbol,
              report_date,
              actual_eps,
              estimated_eps,
              surprise_percent,
              revenue_actual,
              revenue_estimated,
              revenue_surprise_percent
            FROM earnings_history
            WHERE symbol = $1
            ORDER BY report_date DESC
            LIMIT 20
          ", ["AAPL"]

    Number of calls: 1

      350 |
      351 |       expect(response.status).toBe(200);
    > 352 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      353 |         expect.stringContaining("LIMIT"),
      354 |         expect.arrayContaining(["AAPL", 8])
      355 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/financials.test.js:352:25)

  ‚óè Financials Routes Unit Tests ‚Ä∫ GET /financials/debug/tables ‚Ä∫ should return table structure information

    expect(received).toHaveProperty(path, value)

    Expected path: "success"
    Received path: []

    Expected value: true
    Received value: {"status": "ok", "tables": {"balance_sheet": {"exists": false, "message": "balance_sheet table does not exist"}, "quarterly_balance_sheet": {"error": "Database connection failed", "exists": false}, "quarterly_cashflow": {"error": "Database connection failed", "exists": false}, "quarterly_income_stmt": {"error": "Database connection failed", "exists": false}, "ttm_cashflow": {"error": "Database connection failed", "exists": false}, "ttm_income_stmt": {"error": "Database connection failed", "exists": false}}, "timestamp": "2025-09-23T16:32:13.529Z"}

      376 |
      377 |       expect(response.status).toBe(200);
    > 378 |       expect(response.body).toHaveProperty("success", true);
          |                             ^
      379 |       expect(response.body).toHaveProperty("tables");
      380 |       expect(Array.isArray(response.body.tables)).toBe(true);
      381 |       expect(response.body.tables).toHaveLength(3);

      at Object.toHaveProperty (tests/unit/routes/financials.test.js:378:29)

  ‚óè Financials Routes Unit Tests ‚Ä∫ GET /financials/debug/tables ‚Ä∫ should handle debug query errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      393 |       const response = await request(app).get("/financials/debug/tables");
      394 |
    > 395 |       expect(response.status).toBe(500);
          |                               ^
      396 |       expect(response.body).toHaveProperty("success", false);
      397 |       expect(response.body.error).toContain("Debug query failed");
      398 |     });

      at Object.toBe (tests/unit/routes/financials.test.js:395:31)

  ‚óè Financials Routes Unit Tests ‚Ä∫ Parameter validation ‚Ä∫ should sanitize symbol parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      407 |         .query({ symbol: "AAPL'; DROP TABLE financial_statements; --" });
      408 |
    > 409 |       expect(response.status).toBe(200);
          |                               ^
      410 |       // Symbol should be sanitized and used safely in prepared statement
      411 |       expect(mockQuery).toHaveBeenCalledWith(
      412 |         expect.any(String),

      at Object.toBe (tests/unit/routes/financials.test.js:409:31)

  ‚óè Financials Routes Unit Tests ‚Ä∫ Parameter validation ‚Ä∫ should handle invalid symbol format

    expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 500

      420 |       );
      421 |
    > 422 |       expect(response.status).toBe(400);
          |                               ^
      423 |       expect(response.body).toHaveProperty("success", false);
      424 |       expect(response.body.error).toContain("Invalid symbol format");
      425 |     });

      at Object.toBe (tests/unit/routes/financials.test.js:422:31)

  ‚óè Financials Routes Unit Tests ‚Ä∫ Error handling ‚Ä∫ should handle database connection timeout

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 404

      458 |       const response = await request(app).get("/financials/AAPL");
      459 |
    > 460 |       expect(response.status).toBe(500);
          |                               ^
      461 |       expect(response.body).toHaveProperty("success", false);
      462 |       expect(response.body.error).toContain("timeout");
      463 |     });

      at Object.toBe (tests/unit/routes/financials.test.js:460:31)

  ‚óè Financials Routes Unit Tests ‚Ä∫ Error handling ‚Ä∫ should handle malformed database results

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 404

      468 |       const response = await request(app).get("/financials/AAPL");
      469 |
    > 470 |       expect(response.status).toBe(500);
          |                               ^
      471 |       expect(response.body).toHaveProperty("success", false);
      472 |     });
      473 |   });

      at Object.toBe (tests/unit/routes/financials.test.js:470:31)

FAIL tests/unit/routes/data.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      üìä Data API info requested

      at log (routes/data.js:19:15)

    console.error
      ‚ùå [DATA] Error fetching data for AAPL: Error: Database connection failed
          at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/data.test.js:203:35)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      300 |   } catch (error) {
      301 |     try {
    > 302 |       console.error(`‚ùå [DATA] Error fetching data for ${symbolUpper}:`, error);
          |               ^
      303 |     } catch (e) {
      304 |       // Ignore console logging errors
      305 |     }

      at error (routes/data.js:302:15)

    console.error
      ‚ùå [DATA] Error fetching historical data for AAPL: Error: Query timeout
          at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/data.test.js:323:35)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      390 |   } catch (error) {
      391 |     try {
    > 392 |       console.error(
          |               ^
      393 |         `‚ùå [DATA] Error fetching historical data for ${symbolUpper}:`,
      394 |         error
      395 |       );

      at error (routes/data.js:392:15)

    console.error
      ‚ùå [DATA] Error fetching real-time data for AAPL: Error: Connection lost
          at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/data.test.js:393:35)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      468 |   } catch (error) {
      469 |     try {
    > 470 |       console.error(
          |               ^
      471 |         `‚ùå [DATA] Error fetching real-time data for ${symbolUpper}:`,
      472 |         error
      473 |       );

      at error (routes/data.js:470:15)

    console.error
      ‚ùå [DATA] Error fetching bulk data: Error: Database timeout
          at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/data.test.js:492:35)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      106 |   } catch (error) {
      107 |     try {
    > 108 |       console.error("‚ùå [DATA] Error fetching bulk data:", error);
          |               ^
      109 |     } catch (e) {
      110 |       // Ignore console logging errors
      111 |     }

      at error (routes/data.js:108:15)

    console.error
      ‚ùå Error closing test database: Error: Unexpected error
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/data.test.js:74:15)
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
          at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at Object.log (/home/stocks/algo/webapp/lambda/tests/setup.js:115:13)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusHook (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:281:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:154:7)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      115 |     console.log("‚úÖ Test database connection closed");
      116 |   } catch (error) {
    > 117 |     console.error("‚ùå Error closing test database:", error);
          |             ^
      118 |   }
      119 | });
      120 |

      at Object.error (tests/setup.js:117:13)

  ‚óè Data Routes Unit Tests ‚Ä∫ GET /data ‚Ä∫ should handle errors gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      77 |       const response = await request(app).get("/data");
      78 |
    > 79 |       expect(response.status).toBe(500);
         |                               ^
      80 |       expect(response.body).toHaveProperty("success", false);
      81 |       expect(response.body).toHaveProperty(
      82 |         "error",

      at Object.toBe (tests/unit/routes/data.test.js:79:31)

  ‚óè Data Routes Unit Tests ‚Ä∫ GET /data/realtime/:symbol ‚Ä∫ should return real-time data for a symbol

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

    - StringContaining "ORDER BY date DESC LIMIT 1",
    + "
          SELECT symbol, date, open, high, low, close, adj_close, volume
          FROM price_daily 
          WHERE symbol = $1 
          ORDER BY date DESC 
          LIMIT 1
        ",
      ["AAPL"],

    Number of calls: 1

      361 |       );
      362 |
    > 363 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      364 |         expect.stringContaining("ORDER BY date DESC LIMIT 1"),
      365 |         ["AAPL"]
      366 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/data.test.js:363:25)

  ‚óè Data Routes Unit Tests ‚Ä∫ GET /data/bulk ‚Ä∫ should return 400 when symbols parameter is missing

    expect(received).toHaveProperty(path, value)

    Expected path: "error"

    Expected value: "symbols parameter is required"
    Received value: "Validation error"

      463 |
      464 |       expect(response.status).toBe(400);
    > 465 |       expect(response.body).toHaveProperty(
          |                             ^
      466 |         "error",
      467 |         "symbols parameter is required"
      468 |       );

      at Object.toHaveProperty (tests/unit/routes/data.test.js:465:29)

FAIL tests/unit/routes/sectors.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      JWT verifier initialized successfully (test mode)

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:100:17)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      üìä Fetching sector analysis...

      at log (routes/sectors.js:124:13)

    console.log
      ‚úÖ Found 2 sectors

      at log (routes/sectors.js:184:13)

    console.log
      üìä Fetching sector analysis...

      at log (routes/sectors.js:124:13)

    console.log
      üìä Fetching sector analysis...

      at log (routes/sectors.js:124:13)

    console.log
      ‚úÖ Found 0 sectors

      at log (routes/sectors.js:184:13)

    console.log
      üìä Fetching sector analysis...

      at log (routes/sectors.js:124:13)

    console.error
      ‚ùå Error in sector analysis: Error: Database connection failed
          at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/sectors.test.js:233:35)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      239 |     res.json(response);
      240 |   } catch (error) {
    > 241 |     console.error("‚ùå Error in sector analysis:", error);
          |             ^
      242 |     res.status(500).json({
      243 |       success: false,
      244 |       error: error.message || "Failed to fetch sector analysis",

      at error (routes/sectors.js:241:13)

    console.log
      üìã Fetching sector and industry list...

      at log (routes/sectors.js:256:13)

    console.log
      ‚úÖ Found 5 sectors with 5 industries

      at log (routes/sectors.js:302:13)

    console.log
      üìã Fetching sector and industry list...

      at log (routes/sectors.js:256:13)

    console.log
      ‚úÖ Found 0 sectors with 0 industries

      at log (routes/sectors.js:302:13)

    console.log
      üìã Fetching sector and industry list...

      at log (routes/sectors.js:256:13)

    console.error
      ‚ùå Error fetching sector list: Error: Database query failed
          at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/sectors.test.js:336:35)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      324 |     });
      325 |   } catch (error) {
    > 326 |     console.error("‚ùå Error fetching sector list:", error);
          |             ^
      327 |     res.status(500).json({
      328 |       success: false,
      329 |       error: error.message || "Failed to fetch sector list",

      at error (routes/sectors.js:326:13)

    console.log
      üìä Fetching detailed analysis for sector: Technology

      at log (routes/sectors.js:488:13)

    console.log
      ‚úÖ Found 2 stocks in Technology sector

      at log (routes/sectors.js:609:13)

    console.log
      üìä Fetching detailed analysis for sector: NonExistentSector

      at log (routes/sectors.js:488:13)

    console.log
      üìä Fetching detailed analysis for sector: Technology

      at log (routes/sectors.js:488:13)

    console.error
      ‚ùå Error fetching details for sector Technology: Error: Database connection failed
          at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/sectors.test.js:488:35)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      653 |     });
      654 |   } catch (error) {
    > 655 |     console.error(
          |             ^
      656 |       `‚ùå Error fetching details for sector ${req.params.sector}:`,
      657 |       error
      658 |     );

      at error (routes/sectors.js:655:13)

    console.log
      üìä Fetching detailed analysis for sector: Consumer Discretionary

      at log (routes/sectors.js:488:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Sectors Routes ‚Ä∫ GET /sectors/analysis ‚Ä∫ should return comprehensive sector analysis with default timeframe

    expect(received).toMatchObject(expected)

    - Expected  - 25
    + Received  + 36

    @@ -1,39 +1,50 @@
      Object {
    -   "data": ObjectContaining {
    -     "sectors": ArrayContaining [
    -       ObjectContaining {
    -         "industry": Any<String>,
    -         "metrics": ObjectContaining {
    -           "avg_price": Any<String>,
    -           "performance": ObjectContaining {
    -             "daily_change": Any<String>,
    -             "monthly_change": Any<String>,
    -             "performance_rank": Any<Number>,
    -             "weekly_change": Any<String>,
    +   "data": Object {
    +     "sectors": Array [
    +       Object {
    +         "metrics": Object {
    +           "avg_price": "125.50",
    +           "performance": Object {
    +             "monthly_change": "0.00",
                },
    -           "priced_stocks": Any<Number>,
    -           "stock_count": Any<Number>,
    +           "stock_count": 145,
    +           "technicals": Object {
    +             "avg_momentum": "0.15",
    +             "avg_rsi": "65.20",
                },
    +           "volume": Object {
    +             "total_volume": 0,
    +           },
    +         },
              "sector": "Technology",
            },
    -       ObjectContaining {
    -         "industry": Any<String>,
    -         "metrics": ObjectContaining {
    -           "priced_stocks": Any<Number>,
    -           "stock_count": Any<Number>,
    +       Object {
    +         "metrics": Object {
    +           "avg_price": "98.75",
    +           "performance": Object {
    +             "monthly_change": "0.00",
    +           },
    +           "stock_count": 98,
    +           "technicals": Object {
    +             "avg_momentum": "0.08",
    +             "avg_rsi": "58.10",
    +           },
    +           "volume": Object {
    +             "total_volume": 0,
    +           },
              },
              "sector": "Healthcare",
            },
          ],
    -     "summary": ObjectContaining {
    -       "avg_market_return": Any<String>,
    -       "bearish_sectors": Any<Number>,
    -       "bullish_sectors": Any<Number>,
    -       "neutral_sectors": Any<Number>,
    -       "total_sectors": Any<Number>,
    -       "total_stocks_analyzed": Any<Number>,
    +     "summary": Object {
    +       "avg_market_return": "0.00",
    +       "bearish_sectors": 0,
    +       "bullish_sectors": 0,
    +       "neutral_sectors": 2,
    +       "total_sectors": 2,
    +       "total_stocks_analyzed": 243,
          },
          "timeframe": "daily",
        },
        "success": true,
        "timestamp": Any<String>,

      159 |       const response = await request(app).get("/sectors/analysis").expect(200);
      160 |
    > 161 |       expect(response.body).toMatchObject({
          |                             ^
      162 |         success: true,
      163 |         data: expect.objectContaining({
      164 |           timeframe: "daily",

      at Object.toMatchObject (tests/unit/routes/sectors.test.js:161:29)

  ‚óè Sectors Routes ‚Ä∫ GET /sectors/:sector/details ‚Ä∫ should return detailed sector information

    expect(received).toMatchObject(expected)

    - Expected  - 24
    + Received  + 40

    @@ -1,41 +1,57 @@
      Object {
        "data": Object {
          "industries": Any<Array>,
          "sector": "Technology",
    -     "stocks": ArrayContaining [
    -       ObjectContaining {
    -         "current_price": Any<String>,
    +     "stocks": Array [
    +       Object {
    +         "current_price": "175.25",
              "industry": "Consumer Electronics",
    -         "momentum": ObjectContaining {
    -           "jt_momentum_12_1": Any<String>,
    -           "momentum_3m": Any<String>,
    -           "momentum_6m": Any<String>,
    -           "risk_adjusted": Any<String>,
    -           "strength": Any<String>,
    +         "momentum": Object {
    +           "jt_momentum_12_1": "0.1200",
    +           "momentum_3m": "0.0800",
    +           "momentum_6m": "0.0600",
    +           "risk_adjusted": "0.1000",
    +           "strength": "85.50",
              },
              "name": "Apple Inc.",
    -         "performance": ObjectContaining {
    -           "daily_change": Any<String>,
    -           "monthly_change": Any<String>,
    -           "weekly_change": Any<String>,
    +         "performance": Object {
    +           "monthly_change": "12.50",
              },
    -         "symbol": "AAPL",
    -         "technicals": ObjectContaining {
    -           "macd": Any<String>,
    -           "macd_signal": Any<String>,
    -           "momentum": Any<String>,
    -           "rsi": Any<String>,
    -           "rsi_signal": Any<String>,
    -           "trend": Any<String>,
    +         "technicals": Object {
    +           "macd": "0.0250",
    +           "macd_signal": "bullish",
    +           "momentum": "0.15",
    +           "rsi": "65.20",
    +           "rsi_signal": "neutral",
    +           "trend": "bullish",
              },
    -         "volume": Any<Number>,
    +         "volume": 45000000,
            },
    -       ObjectContaining {
    +       Object {
    +         "current_price": "378.50",
              "industry": "Software Infrastructure",
    +         "momentum": Object {
    +           "jt_momentum_12_1": "0.0600",
    +           "momentum_3m": "0.0400",
    +           "momentum_6m": "0.0300",
    +           "risk_adjusted": "0.0500",
    +           "strength": "72.30",
    +         },
              "name": "Microsoft Corporation",
    -         "symbol": "MSFT",
    +         "performance": Object {
    +           "monthly_change": "9.75",
    +         },
    +         "technicals": Object {
    +           "macd": "0.0150",
    +           "macd_signal": "bullish",
    +           "momentum": "0.08",
    +           "rsi": "58.10",
    +           "rsi_signal": "neutral",
    +           "trend": "bullish",
    +         },
    +         "volume": 28000000,
            },
          ],
          "summary": ObjectContaining {
            "avg_jt_momentum": Any<String>,
            "avg_monthly_return": Any<String>,

      416 |         .expect(200);
      417 |
    > 418 |       expect(response.body).toMatchObject({
          |                             ^
      419 |         success: true,
      420 |         data: {
      421 |           sector: "Technology",

      at Object.toMatchObject (tests/unit/routes/sectors.test.js:418:29)

FAIL tests/unit/routes/recommendations.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully (test mode)

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:100:17)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ GET /recommendations ‚Ä∫ should return recommendations with mocked data

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      62 |       const response = await request(app).get("/recommendations");
      63 |
    > 64 |       expect(response.status).toBe(200);
         |                               ^
      65 |       expect(response.body).toHaveProperty("success", true);
      66 |       expect(response.body).toHaveProperty("recommendations");
      67 |       expect(response.body).toHaveProperty("summary");

      at Object.toBe (tests/unit/routes/recommendations.test.js:64:31)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ GET /recommendations ‚Ä∫ should handle query parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      106 |       });
      107 |
    > 108 |       expect(response.status).toBe(200);
          |                               ^
      109 |       expect(response.body).toHaveProperty("success", true);
      110 |       expect(response.body.filters).toHaveProperty("symbol", "AAPL");
      111 |       expect(response.body.filters).toHaveProperty("category", "buy");

      at Object.toBe (tests/unit/routes/recommendations.test.js:108:31)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ GET /recommendations ‚Ä∫ should include comprehensive troubleshooting information

    expect(received).toHaveProperty(path)

    Matcher error: received value must not be null nor undefined

    Received has value: undefined

      119 |       const response = await request(app).get("/recommendations");
      120 |
    > 121 |       expect(response.body.troubleshooting).toHaveProperty("suggestion");
          |                                             ^
      122 |       expect(response.body.troubleshooting).toHaveProperty("required_setup");
      123 |       expect(response.body.troubleshooting).toHaveProperty("status");
      124 |       expect(Array.isArray(response.body.troubleshooting.required_setup)).toBe(

      at Object.toHaveProperty (tests/unit/routes/recommendations.test.js:121:45)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ GET /recommendations ‚Ä∫ should handle different category parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 501
    Received: 500

      141 |           .query({ category });
      142 |
    > 143 |         expect(response.status).toBe(501);
          |                                 ^
      144 |         expect(response.body.filters).toHaveProperty("category", category);
      145 |         expect(response.body).toHaveProperty("success", false);
      146 |       }

      at Object.toBe (tests/unit/routes/recommendations.test.js:143:33)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ GET /recommendations ‚Ä∫ should default to all category

    expect(received).toBe(expected) // Object.is equality

    Expected: 501
    Received: 500

      152 |         .query({ symbol: "AAPL" });
      153 |
    > 154 |       expect(response.status).toBe(501);
          |                               ^
      155 |       expect(response.body.filters).toHaveProperty("category", "all"); // default value
      156 |     });
      157 |

      at Object.toBe (tests/unit/routes/recommendations.test.js:154:31)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ GET /recommendations ‚Ä∫ should handle different timeframe parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 501
    Received: 500

      164 |           .query({ timeframe });
      165 |
    > 166 |         expect(response.status).toBe(501);
          |                                 ^
      167 |         expect(response.body.filters).toHaveProperty("timeframe", timeframe);
      168 |         expect(response.body).toHaveProperty("success", false);
      169 |       }

      at Object.toBe (tests/unit/routes/recommendations.test.js:166:33)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ GET /recommendations ‚Ä∫ should handle analyst filter parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 501
    Received: 500

      175 |         .query({ analyst: "morgan_stanley" });
      176 |
    > 177 |       expect(response.status).toBe(501);
          |                               ^
      178 |       expect(response.body.filters).toHaveProperty("analyst", "morgan_stanley");
      179 |       expect(response.body).toHaveProperty("success", false);
      180 |     });

      at Object.toBe (tests/unit/routes/recommendations.test.js:177:31)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ GET /recommendations ‚Ä∫ should handle limit parameter and parse as integer

    expect(received).toBe(expected) // Object.is equality

    Expected: 501
    Received: 500

      185 |         .query({ limit: "100" });
      186 |
    > 187 |       expect(response.status).toBe(501);
          |                               ^
      188 |       expect(response.body.filters).toHaveProperty("limit", 100); // Should be parsed as number
      189 |       expect(response.body).toHaveProperty("success", false);
      190 |     });

      at Object.toBe (tests/unit/routes/recommendations.test.js:187:31)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ GET /recommendations ‚Ä∫ should handle default limit parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 501
    Received: 500

      193 |       const response = await request(app).get("/recommendations");
      194 |
    > 195 |       expect(response.status).toBe(501);
          |                               ^
      196 |       expect(response.body.filters).toHaveProperty("limit", 20); // default value
      197 |     });
      198 |

      at Object.toBe (tests/unit/routes/recommendations.test.js:195:31)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ GET /recommendations ‚Ä∫ should handle symbol parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 501
    Received: 500

      202 |         .query({ symbol: "GOOGL" });
      203 |
    > 204 |       expect(response.status).toBe(501);
          |                               ^
      205 |       expect(response.body).toHaveProperty("symbol", "GOOGL");
      206 |       expect(response.body).toHaveProperty("success", false);
      207 |     });

      at Object.toBe (tests/unit/routes/recommendations.test.js:204:31)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ GET /recommendations ‚Ä∫ should handle no symbol parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 501
    Received: 500

      210 |       const response = await request(app).get("/recommendations");
      211 |
    > 212 |       expect(response.status).toBe(501);
          |                               ^
      213 |       expect(response.body).toHaveProperty("symbol", null);
      214 |       expect(response.body).toHaveProperty("success", false);
      215 |     });

      at Object.toBe (tests/unit/routes/recommendations.test.js:212:31)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ Error handling ‚Ä∫ should handle implementation errors gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: 501
    Received: 500

      257 |
      258 |       // Should still return the not implemented response
    > 259 |       expect(response.status).toBe(501);
          |                               ^
      260 |       expect(response.body).toHaveProperty("success", false);
      261 |
      262 |       // Restore console.error

      at Object.toBe (tests/unit/routes/recommendations.test.js:259:31)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ Error handling ‚Ä∫ should handle malformed query parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 501
    Received: 500

      271 |       });
      272 |
    > 273 |       expect(response.status).toBe(501);
          |                               ^
      274 |       expect(response.body).toHaveProperty("success", false);
      275 |       expect(response.body.filters).toHaveProperty("limit", NaN); // parseInt of invalid string
      276 |       expect(response.body.filters).toHaveProperty(

      at Object.toBe (tests/unit/routes/recommendations.test.js:273:31)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ Error handling ‚Ä∫ should handle special characters in parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 501
    Received: 500

      287 |       });
      288 |
    > 289 |       expect(response.status).toBe(501);
          |                               ^
      290 |       expect(response.body).toHaveProperty("success", false);
      291 |       expect(response.body).toHaveProperty(
      292 |         "symbol",

      at Object.toBe (tests/unit/routes/recommendations.test.js:289:31)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ Error handling ‚Ä∫ should handle empty string parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 501
    Received: 500

      307 |       });
      308 |
    > 309 |       expect(response.status).toBe(501);
          |                               ^
      310 |       expect(response.body).toHaveProperty("symbol", "");
      311 |       expect(response.body.filters).toHaveProperty("category", "");
      312 |       expect(response.body.filters).toHaveProperty("analyst", "");

      at Object.toBe (tests/unit/routes/recommendations.test.js:309:31)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ Response format ‚Ä∫ should return consistent JSON response format

    expect(received).toMatch(expected)

    Expected pattern: /json/
    Received string:  "text/html; charset=utf-8"

      319 |       const response = await request(app).get("/recommendations");
      320 |
    > 321 |       expect(response.headers["content-type"]).toMatch(/json/);
          |                                                ^
      322 |       expect(typeof response.body).toBe("object");
      323 |       expect(response.body).toHaveProperty("success");
      324 |       expect(response.body).toHaveProperty("timestamp");

      at Object.toMatch (tests/unit/routes/recommendations.test.js:321:48)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ Response format ‚Ä∫ should include detailed implementation requirements

    expect(received).toHaveProperty(path)

    Expected path: "details"
    Received path: []

    Received value: {}

      328 |       const response = await request(app).get("/recommendations");
      329 |
    > 330 |       expect(response.body).toHaveProperty("details");
          |                             ^
      331 |       expect(response.body.details).toContain("analyst recommendations data");
      332 |       expect(response.body).toHaveProperty("troubleshooting");
      333 |       expect(response.body.troubleshooting).toHaveProperty("required_setup");

      at Object.toHaveProperty (tests/unit/routes/recommendations.test.js:330:29)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ Response format ‚Ä∫ should preserve query parameters in response

    expect(received).toHaveProperty(path, value)

    Expected path: "symbol"
    Received path: []

    Expected value: "TSLA"
    Received value: {}

      344 |       });
      345 |
    > 346 |       expect(response.body).toHaveProperty("symbol", "TSLA");
          |                             ^
      347 |       expect(response.body.filters).toHaveProperty("category", "buy");
      348 |       expect(response.body.filters).toHaveProperty("limit", 25);
      349 |     });

      at Object.toHaveProperty (tests/unit/routes/recommendations.test.js:346:29)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ Response format ‚Ä∫ should include all filter parameters in response

    expect(received).toHaveProperty(path)

    Expected path: "filters"
    Received path: []

    Received value: {}

      358 |       });
      359 |
    > 360 |       expect(response.body).toHaveProperty("filters");
          |                             ^
      361 |       expect(response.body.filters).toHaveProperty("category", "hold");
      362 |       expect(response.body.filters).toHaveProperty("analyst", "jp_morgan");
      363 |       expect(response.body.filters).toHaveProperty("timeframe", "monthly");

      at Object.toHaveProperty (tests/unit/routes/recommendations.test.js:360:29)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ Future implementation readiness ‚Ä∫ should be ready for future implementation with proper parameter handling

    expect(received).toHaveProperty(path)

    Expected path: "symbol"
    Received path: []

    Received value: {}

      377 |
      378 |       // Response structure should support future implementation
    > 379 |       expect(response.body).toHaveProperty("symbol");
          |                             ^
      380 |       expect(response.body).toHaveProperty("filters");
      381 |       expect(response.body).toHaveProperty("timestamp");
      382 |

      at Object.toHaveProperty (tests/unit/routes/recommendations.test.js:379:29)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ Future implementation readiness ‚Ä∫ should handle all expected recommendation categories

    expect(received).toHaveProperty(path, value)

    Matcher error: received value must not be null nor undefined

    Received has value: undefined

      398 |           .query({ category });
      399 |
    > 400 |         expect(response.body.filters).toHaveProperty("category", category);
          |                                       ^
      401 |         // Future implementation should support these categories
      402 |       }
      403 |     });

      at Object.toHaveProperty (tests/unit/routes/recommendations.test.js:400:39)

FAIL tests/unit/routes/liveData.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully (test mode)

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:100:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üìä Live quotes requested for symbols: popular

      at log (routes/liveData.js:554:15)

    console.error
      Database query error: {
        error: 'column ti.ticker does not exist',
        query: '\n' +
          '      WITH latest_prices AS (\n' +
          '        SELECT DISTINCT ON (p.symbol)\n' +
          '          p.symbol,\n' +
          '          p...',
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/liveData.js:643:21

    console.error
      Live quotes error: error: column ti.ticker does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/liveData.js:643:21 {
        length: 109,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '2197',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      735 |   } catch (error) {
      736 |     try {
    > 737 |       console.error("Live quotes error:", error);
          |               ^
      738 |     } catch (e) {
      739 |       // Ignore console logging errors
      740 |     }

      at error (routes/liveData.js:737:15)

    console.log
      üìä Live quotes requested for symbols: AAPL,MSFT,GOOGL

      at log (routes/liveData.js:554:15)

    console.error
      Database query error: {
        error: 'column ti.ticker does not exist',
        query: '\n' +
          '      WITH latest_prices AS (\n' +
          '        SELECT DISTINCT ON (p.symbol)\n' +
          '          p.symbol,\n' +
          '          p...',
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/liveData.js:643:21

    console.error
      Live quotes error: error: column ti.ticker does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/liveData.js:643:21 {
        length: 109,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '2197',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      735 |   } catch (error) {
      736 |     try {
    > 737 |       console.error("Live quotes error:", error);
          |               ^
      738 |     } catch (e) {
      739 |       // Ignore console logging errors
      740 |     }

      at error (routes/liveData.js:737:15)

    console.log
      üìä Live quotes requested for symbols: popular

      at log (routes/liveData.js:554:15)

    console.error
      Database query error: {
        error: 'column ti.ticker does not exist',
        query: '\n' +
          '      WITH latest_prices AS (\n' +
          '        SELECT DISTINCT ON (p.symbol)\n' +
          '          p.symbol,\n' +
          '          p...',
        params: '1 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/liveData.js:643:21

    console.error
      Live quotes error: error: column ti.ticker does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at /home/stocks/algo/webapp/lambda/routes/liveData.js:643:21 {
        length: 109,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '2197',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      735 |   } catch (error) {
      736 |     try {
    > 737 |       console.error("Live quotes error:", error);
          |               ^
      738 |     } catch (e) {
      739 |       // Ignore console logging errors
      740 |     }

      at error (routes/liveData.js:737:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      {"timestamp":"2025-09-23T16:32:14.286Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Processing live data stream request","correlationId":"livedata-stream-1758645134286","userId":"dev-user-bypass","symbols":"default_watchlist","type":"quotes","format":"json","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:32:14.287Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Live data stream request completed (test mode)","correlationId":"livedata-stream-1758645134286","duration":1,"symbols":["AAPL","MSFT","GOOGL","AMZN","TSLA","NVDA","META"],"type":"quotes","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Live Data Routes Unit Tests ‚Ä∫ GET /live-data/ ‚Ä∫ should return live data info

    expect(received).toHaveProperty(path)

    Expected path: "status"
    Received path: []

    Received value: {"data": {"authentication": "Required for most endpoints", "endpoints": ["/status - Get live data service status", "/stream/:symbols - Stream real-time data for symbols (requires auth)", "/latest/:symbols - Get latest data for symbols (requires auth)", "/health - Health check endpoint", "/metrics - Performance metrics"], "message": "Live Data API - Ready", "status": "operational", "timestamp": "2025-09-23T16:32:14.249Z"}, "success": true, "timestamp": "2025-09-23T16:32:14.249Z"}

      33 |
      34 |       expect(response.body).toHaveProperty("success");
    > 35 |       expect(response.body).toHaveProperty("status");
         |                             ^
      36 |     });
      37 |   });
      38 |

      at Object.toHaveProperty (tests/unit/routes/liveData.test.js:35:29)

  ‚óè Live Data Routes Unit Tests ‚Ä∫ GET /live-data/quotes ‚Ä∫ should return live quotes with proper structure

    expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [401]

      67 |         expect(response.body.data.summary).toHaveProperty("losers");
      68 |       } else {
    > 69 |         expect([401]).toContain(response.status);
         |                       ^
      70 |         expect(response.body).toHaveProperty("success", false);
      71 |       }
      72 |     });

      at Object.toContain (tests/unit/routes/liveData.test.js:69:23)

  ‚óè Live Data Routes Unit Tests ‚Ä∫ GET /live-data/stream ‚Ä∫ should setup SSE stream with proper headers

    expect(received).toBe(expected) // Object.is equality

    Expected: "text/event-stream"
    Received: "application/json; charset=utf-8"

      107 |       if (response.status === 200) {
      108 |         // Check SSE headers are set
    > 109 |         expect(response.headers["content-type"]).toBe("text/event-stream");
          |                                                  ^
      110 |         expect(response.headers["cache-control"]).toBe("no-cache");
      111 |         expect(response.headers["connection"]).toBe("keep-alive");
      112 |       } else {

      at Object.toBe (tests/unit/routes/liveData.test.js:109:50)

  ‚óè Live Data Routes Unit Tests ‚Ä∫ GET /live-data/optimization ‚Ä∫ should return optimization status

    expect(received).toContain(expected) // indexOf

    Expected value: 404
    Received array: [401]

      139 |         expect(Array.isArray(response.body.data.recommendations)).toBe(true);
      140 |       } else {
    > 141 |         expect([401]).toContain(response.status);
          |                       ^
      142 |       }
      143 |     });
      144 |   });

      at Object.toContain (tests/unit/routes/liveData.test.js:141:23)

  ‚óè Live Data Routes Unit Tests ‚Ä∫ POST /live-data/admin/toggle-stream ‚Ä∫ should handle stream toggle for admin

    expect(received).toContain(expected) // indexOf

    Expected value: 404
    Received array: [401, 403]

      157 |         expect(response.body.data).toHaveProperty("active_connections");
      158 |       } else {
    > 159 |         expect([401, 403]).toContain(response.status);
          |                            ^
      160 |       }
      161 |     });
      162 |

      at Object.toContain (tests/unit/routes/liveData.test.js:159:28)

  ‚óè Live Data Routes Unit Tests ‚Ä∫ POST /live-data/admin/toggle-stream ‚Ä∫ should validate toggle request body

    expect(received).toContain(expected) // indexOf

    Expected value: 404
    Received array: [400, 422]

      168 |
      169 |       if (response.status !== 401) {
    > 170 |         expect([400, 422]).toContain(response.status);
          |                            ^
      171 |         expect(response.body).toHaveProperty("success", false);
      172 |       }
      173 |     });

      at Object.toContain (tests/unit/routes/liveData.test.js:170:28)

  ‚óè Live Data Routes Unit Tests ‚Ä∫ POST /live-data/admin/clear-cache ‚Ä∫ should handle cache clearing for admin

    expect(received).toContain(expected) // indexOf

    Expected value: 404
    Received array: [401, 403]

      186 |         expect(response.body.data).toHaveProperty("cleared_entries");
      187 |       } else {
    > 188 |         expect([401, 403]).toContain(response.status);
          |                            ^
      189 |       }
      190 |     });
      191 |   });

      at Object.toContain (tests/unit/routes/liveData.test.js:188:28)

FAIL tests/unit/routes/screener.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      Stock screening with filters: {}

      at log (routes/screener.js:102:13)

    console.log
      Executing screener queries with params: 2 parameters

      at log (routes/screener.js:418:13)

    console.log
      Stock screening with filters: { priceMin: '100', priceMax: '500' }

      at log (routes/screener.js:102:13)

    console.log
      Executing screener queries with params: 4 parameters

      at log (routes/screener.js:418:13)

    console.log
      Stock screening with filters: { marketCapMin: '1000000000', marketCapMax: '100000000000' }

      at log (routes/screener.js:102:13)

    console.log
      Executing screener queries with params: 4 parameters

      at log (routes/screener.js:418:13)

    console.log
      Stock screening with filters: { volumeMin: '1000000' }

      at log (routes/screener.js:102:13)

    console.log
      Executing screener queries with params: 3 parameters

      at log (routes/screener.js:418:13)

    console.log
      Stock screening with filters: { sector: 'Technology' }

      at log (routes/screener.js:102:13)

    console.log
      Executing screener queries with params: 3 parameters

      at log (routes/screener.js:418:13)

    console.log
      Stock screening with filters: { peRatioMin: '10', peRatioMax: '30' }

      at log (routes/screener.js:102:13)

    console.log
      Executing screener queries with params: 4 parameters

      at log (routes/screener.js:418:13)

    console.log
      Stock screening with filters: { dividendYieldMin: '2', dividendYieldMax: '8' }

      at log (routes/screener.js:102:13)

    console.log
      Dividend yield filter skipped - data not available

      at log (routes/screener.js:227:15)

    console.log
      Dividend yield filter skipped - data not available

      at log (routes/screener.js:231:15)

    console.log
      Executing screener queries with params: 2 parameters

      at log (routes/screener.js:418:13)

    console.log
      Stock screening with filters: { page: '3', limit: '100' }

      at log (routes/screener.js:102:13)

    console.log
      Executing screener queries with params: 2 parameters

      at log (routes/screener.js:418:13)

    console.log
      Stock screening with filters: { limit: '1000' }

      at log (routes/screener.js:102:13)

    console.log
      Executing screener queries with params: 2 parameters

      at log (routes/screener.js:418:13)

    console.log
      Stock screening with filters: {
        priceMin: '50',
        priceMax: '200',
        marketCapMin: '5000000000',
        sector: 'Technology',
        peRatioMin: '15',
        peRatioMax: '25'
      }

      at log (routes/screener.js:102:13)

    console.log
      Executing screener queries with params: 8 parameters

      at log (routes/screener.js:418:13)

    console.log
      Stock screening with filters: { priceMin: 'not_a_number', marketCapMax: 'also_not_a_number' }

      at log (routes/screener.js:102:13)

    console.log
      Executing screener queries with params: 4 parameters

      at log (routes/screener.js:418:13)

    console.log
      Stock screening with filters: { priceMin: '10000' }

      at log (routes/screener.js:102:13)

    console.log
      Executing screener queries with params: 3 parameters

      at log (routes/screener.js:418:13)

    console.log
      Stock screening with filters: {}

      at log (routes/screener.js:102:13)

    console.log
      Executing screener queries with params: 2 parameters

      at log (routes/screener.js:418:13)

    console.error
      Screener database query failed: Error: Database connection failed
          at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/screener.test.js:331:23)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      429 |       ]);
      430 |     } catch (queryError) {
    > 431 |       console.error("Screener database query failed:", queryError);
          |               ^
      432 |       return res.status(500).json({
      433 |         success: false,
      434 |         error: "Database query failed",

      at error (routes/screener.js:431:15)

    console.log
      Stock screening with filters: {
        sector: "Technology'; DROP TABLE stocks; --",
        priceMin: '50; DELETE FROM screener_templates; --'
      }

      at log (routes/screener.js:102:13)

    console.log
      Executing screener queries with params: 4 parameters

      at log (routes/screener.js:418:13)

    console.log
      Stock screening with filters: { priceMin: '-1000000', priceMax: '999999999999', marketCapMin: '0' }

      at log (routes/screener.js:102:13)

    console.log
      Executing screener queries with params: 5 parameters

      at log (routes/screener.js:418:13)

    console.log
      Stock screening with filters: {}

      at log (routes/screener.js:102:13)

    console.log
      Executing screener queries with params: 2 parameters

      at log (routes/screener.js:418:13)

    console.error
      Screener database query failed: Error: Query timeout
          at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/screener.test.js:420:28)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34) {
        code: 'QUERY_TIMEOUT'
      }

      429 |       ]);
      430 |     } catch (queryError) {
    > 431 |       console.error("Screener database query failed:", queryError);
          |               ^
      432 |       return res.status(500).json({
      433 |         success: false,
      434 |         error: "Database query failed",

      at error (routes/screener.js:431:15)

    console.log
      Stock screening with filters: { page: '2', limit: '50' }

      at log (routes/screener.js:102:13)

    console.log
      Executing screener queries with params: 2 parameters

      at log (routes/screener.js:418:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Screener Routes Unit Tests ‚Ä∫ GET /screener/screen (authenticated) ‚Ä∫ should handle volume filter parameters

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "COALESCE(md.volume, pd.volume) >=", ArrayContaining [1000000]
    Received
           1: "
          SELECT
            s.symbol,
            COALESCE(cp.short_name, cp.long_name) as company_name,
            cp.sector,
            s.exchange,
            pd.close as price,
            pd.volume,
            pd.date as price_date,
            s.market_cap,
            km.trailing_pe as pe_ratio,
            km.dividend_yield,
            sc.overall_score as factor_score,
            CASE
              WHEN sc.overall_score >= 80 THEN 'A'
              WHEN sc.overall_score >= 70 THEN 'B'
              WHEN sc.overall_score >= 60 THEN 'C'
              WHEN sc.overall_score >= 50 THEN 'D'
              ELSE 'F'
            END as factor_grade,
            NULL as sma_20,
            NULL as sma_50,
            NULL as sma_200,
            CASE
              WHEN pd.close > LAG(pd.close, 63) OVER (PARTITION BY s.symbol ORDER BY pd.date)
              THEN ((pd.close / LAG(pd.close, 63) OVER (PARTITION BY s.symbol ORDER BY pd.date)) - 1) * 100
              ELSE NULL
            END as price_momentum_3m,
            CASE
              WHEN pd.close > LAG(pd.close, 252) OVER (PARTITION BY s.symbol ORDER BY pd.date)
              THEN ((pd.close / LAG(pd.close, 252) OVER (PARTITION BY s.symbol ORDER BY pd.date)) - 1) * 100
              ELSE NULL
            END as price_momentum_12m,
            CASE
              WHEN pd.close IS NOT NULL AND pd.close > 0 AND LAG(pd.close) OVER (PARTITION BY s.symbol ORDER BY pd.date) > 0
              THEN ((pd.close - LAG(pd.close) OVER (PARTITION BY s.symbol ORDER BY pd.date)) / LAG(pd.close) OVER (PARTITION BY s.symbol ORDER BY pd.date)) * 100
              ELSE 0
            END as price_change_percent,
            NULL as rsi,
            NULL as macd,
            NULL as macd_signal
          FROM fundamental_metrics s
          LEFT JOIN fundamental_metrics cp ON s.symbol = cp.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, date, close, volume, open, high, low
            FROM price_daily
            WHERE date = (SELECT MAX(date) FROM price_daily WHERE symbol = price_daily.symbol)
              AND close IS NOT NULL AND close > 0
            ORDER BY symbol, date DESC
          ) pd ON s.symbol = pd.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, price_to_earnings as trailing_pe, NULL as dividend_yield, NULL as peg_ratio, price_to_book
            FROM financial_ratios
            ORDER BY symbol, fiscal_year DESC
          ) km ON s.symbol = km.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, overall_score
            FROM stock_scores
            ORDER BY symbol, date DESC
          ) sc ON s.symbol = sc.symbol
          WHERE pd.close IS NOT NULL AND pd.close > 0
          AND pd.volume >= $1
          ORDER BY s.market_cap DESC NULLS LAST
          LIMIT $2 OFFSET $3
        ", [1000000, 50, 0]
           2: "
          SELECT COUNT(*) as total
          FROM fundamental_metrics s
          LEFT JOIN fundamental_metrics cp ON s.symbol = cp.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, date, close, volume, open, high, low
            FROM price_daily
            WHERE date = (SELECT MAX(date) FROM price_daily WHERE symbol = price_daily.symbol)
              AND close IS NOT NULL AND close > 0
            ORDER BY symbol, date DESC
          ) pd ON s.symbol = pd.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, price_to_earnings as trailing_pe, NULL as dividend_yield, NULL as peg_ratio, price_to_book
            FROM financial_ratios
            ORDER BY symbol, fiscal_year DESC
          ) km ON s.symbol = km.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, overall_score
            FROM stock_scores
            ORDER BY symbol, date DESC
          ) sc ON s.symbol = sc.symbol
          WHERE pd.close IS NOT NULL AND pd.close > 0
          AND pd.volume >= $1
        ", [1000000]

    Number of calls: 2

      200 |
      201 |       expect(response.status).toBe(200);
    > 202 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      203 |         expect.stringContaining("COALESCE(md.volume, pd.volume) >="),
      204 |         expect.arrayContaining([1000000])
      205 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/screener.test.js:202:25)

  ‚óè Screener Routes Unit Tests ‚Ä∫ GET /screener/screen (authenticated) ‚Ä∫ should handle dividend yield filters

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "km.dividend_yield >=", ArrayContaining [2, 8]
    Received
           1: "
          SELECT
            s.symbol,
            COALESCE(cp.short_name, cp.long_name) as company_name,
            cp.sector,
            s.exchange,
            pd.close as price,
            pd.volume,
            pd.date as price_date,
            s.market_cap,
            km.trailing_pe as pe_ratio,
            km.dividend_yield,
            sc.overall_score as factor_score,
            CASE
              WHEN sc.overall_score >= 80 THEN 'A'
              WHEN sc.overall_score >= 70 THEN 'B'
              WHEN sc.overall_score >= 60 THEN 'C'
              WHEN sc.overall_score >= 50 THEN 'D'
              ELSE 'F'
            END as factor_grade,
            NULL as sma_20,
            NULL as sma_50,
            NULL as sma_200,
            CASE
              WHEN pd.close > LAG(pd.close, 63) OVER (PARTITION BY s.symbol ORDER BY pd.date)
              THEN ((pd.close / LAG(pd.close, 63) OVER (PARTITION BY s.symbol ORDER BY pd.date)) - 1) * 100
              ELSE NULL
            END as price_momentum_3m,
            CASE
              WHEN pd.close > LAG(pd.close, 252) OVER (PARTITION BY s.symbol ORDER BY pd.date)
              THEN ((pd.close / LAG(pd.close, 252) OVER (PARTITION BY s.symbol ORDER BY pd.date)) - 1) * 100
              ELSE NULL
            END as price_momentum_12m,
            CASE
              WHEN pd.close IS NOT NULL AND pd.close > 0 AND LAG(pd.close) OVER (PARTITION BY s.symbol ORDER BY pd.date) > 0
              THEN ((pd.close - LAG(pd.close) OVER (PARTITION BY s.symbol ORDER BY pd.date)) / LAG(pd.close) OVER (PARTITION BY s.symbol ORDER BY pd.date)) * 100
              ELSE 0
            END as price_change_percent,
            NULL as rsi,
            NULL as macd,
            NULL as macd_signal
          FROM fundamental_metrics s
          LEFT JOIN fundamental_metrics cp ON s.symbol = cp.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, date, close, volume, open, high, low
            FROM price_daily
            WHERE date = (SELECT MAX(date) FROM price_daily WHERE symbol = price_daily.symbol)
              AND close IS NOT NULL AND close > 0
            ORDER BY symbol, date DESC
          ) pd ON s.symbol = pd.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, price_to_earnings as trailing_pe, NULL as dividend_yield, NULL as peg_ratio, price_to_book
            FROM financial_ratios
            ORDER BY symbol, fiscal_year DESC
          ) km ON s.symbol = km.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, overall_score
            FROM stock_scores
            ORDER BY symbol, date DESC
          ) sc ON s.symbol = sc.symbol
          WHERE pd.close IS NOT NULL AND pd.close > 0¬∑¬∑¬∑¬∑¬∑¬∑¬∑
          ORDER BY s.market_cap DESC NULLS LAST
          LIMIT $1 OFFSET $2
        ", [50, 0]
           2: "
          SELECT COUNT(*) as total
          FROM fundamental_metrics s
          LEFT JOIN fundamental_metrics cp ON s.symbol = cp.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, date, close, volume, open, high, low
            FROM price_daily
            WHERE date = (SELECT MAX(date) FROM price_daily WHERE symbol = price_daily.symbol)
              AND close IS NOT NULL AND close > 0
            ORDER BY symbol, date DESC
          ) pd ON s.symbol = pd.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, price_to_earnings as trailing_pe, NULL as dividend_yield, NULL as peg_ratio, price_to_book
            FROM financial_ratios
            ORDER BY symbol, fiscal_year DESC
          ) km ON s.symbol = km.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, overall_score
            FROM stock_scores
            ORDER BY symbol, date DESC
          ) sc ON s.symbol = sc.symbol
          WHERE pd.close IS NOT NULL AND pd.close > 0¬∑¬∑¬∑¬∑¬∑¬∑¬∑
        ", []

    Number of calls: 2

      246 |
      247 |       expect(response.status).toBe(200);
    > 248 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      249 |         expect.stringContaining("km.dividend_yield >="),
      250 |         expect.arrayContaining([2, 8])
      251 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/screener.test.js:248:25)

  ‚óè Screener Routes Unit Tests ‚Ä∫ GET /screener/screen (authenticated) ‚Ä∫ should handle multiple filters combined

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringMatching /pd\.close >= .* AND pd\.close <= .* AND cp\.market_cap >= .* AND cp\.sector = .* AND km\.trailing_pe >= .* AND km\.trailing_pe <=/, ArrayContaining [50, 200, 5000000000, "Technology", 15, 25]
    Received
           1: "
          SELECT
            s.symbol,
            COALESCE(cp.short_name, cp.long_name) as company_name,
            cp.sector,
            s.exchange,
            pd.close as price,
            pd.volume,
            pd.date as price_date,
            s.market_cap,
            km.trailing_pe as pe_ratio,
            km.dividend_yield,
            sc.overall_score as factor_score,
            CASE
              WHEN sc.overall_score >= 80 THEN 'A'
              WHEN sc.overall_score >= 70 THEN 'B'
              WHEN sc.overall_score >= 60 THEN 'C'
              WHEN sc.overall_score >= 50 THEN 'D'
              ELSE 'F'
            END as factor_grade,
            NULL as sma_20,
            NULL as sma_50,
            NULL as sma_200,
            CASE
              WHEN pd.close > LAG(pd.close, 63) OVER (PARTITION BY s.symbol ORDER BY pd.date)
              THEN ((pd.close / LAG(pd.close, 63) OVER (PARTITION BY s.symbol ORDER BY pd.date)) - 1) * 100
              ELSE NULL
            END as price_momentum_3m,
            CASE
              WHEN pd.close > LAG(pd.close, 252) OVER (PARTITION BY s.symbol ORDER BY pd.date)
              THEN ((pd.close / LAG(pd.close, 252) OVER (PARTITION BY s.symbol ORDER BY pd.date)) - 1) * 100
              ELSE NULL
            END as price_momentum_12m,
            CASE
              WHEN pd.close IS NOT NULL AND pd.close > 0 AND LAG(pd.close) OVER (PARTITION BY s.symbol ORDER BY pd.date) > 0
              THEN ((pd.close - LAG(pd.close) OVER (PARTITION BY s.symbol ORDER BY pd.date)) / LAG(pd.close) OVER (PARTITION BY s.symbol ORDER BY pd.date)) * 100
              ELSE 0
            END as price_change_percent,
            NULL as rsi,
            NULL as macd,
            NULL as macd_signal
          FROM fundamental_metrics s
          LEFT JOIN fundamental_metrics cp ON s.symbol = cp.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, date, close, volume, open, high, low
            FROM price_daily
            WHERE date = (SELECT MAX(date) FROM price_daily WHERE symbol = price_daily.symbol)
              AND close IS NOT NULL AND close > 0
            ORDER BY symbol, date DESC
          ) pd ON s.symbol = pd.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, price_to_earnings as trailing_pe, NULL as dividend_yield, NULL as peg_ratio, price_to_book
            FROM financial_ratios
            ORDER BY symbol, fiscal_year DESC
          ) km ON s.symbol = km.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, overall_score
            FROM stock_scores
            ORDER BY symbol, date DESC
          ) sc ON s.symbol = sc.symbol
          WHERE pd.close IS NOT NULL AND pd.close > 0
          AND pd.close >= $1 AND pd.close <= $2 AND s.market_cap >= $3 AND km.trailing_pe >= $4 AND km.trailing_pe <= $5 AND cp.sector = $6
          ORDER BY s.market_cap DESC NULLS LAST
          LIMIT $7 OFFSET $8
        ", [50, 200, 5000000000, 15, 25, "Technology", 50, 0]
           2: "
          SELECT COUNT(*) as total
          FROM fundamental_metrics s
          LEFT JOIN fundamental_metrics cp ON s.symbol = cp.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, date, close, volume, open, high, low
            FROM price_daily
            WHERE date = (SELECT MAX(date) FROM price_daily WHERE symbol = price_daily.symbol)
              AND close IS NOT NULL AND close > 0
            ORDER BY symbol, date DESC
          ) pd ON s.symbol = pd.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, price_to_earnings as trailing_pe, NULL as dividend_yield, NULL as peg_ratio, price_to_book
            FROM financial_ratios
            ORDER BY symbol, fiscal_year DESC
          ) km ON s.symbol = km.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, overall_score
            FROM stock_scores
            ORDER BY symbol, date DESC
          ) sc ON s.symbol = sc.symbol
          WHERE pd.close IS NOT NULL AND pd.close > 0
          AND pd.close >= $1 AND pd.close <= $2 AND s.market_cap >= $3 AND km.trailing_pe >= $4 AND km.trailing_pe <= $5 AND cp.sector = $6
        ", [50, 200, 5000000000, 15, 25, "Technology"]

    Number of calls: 2

      294 |
      295 |       expect(response.status).toBe(200);
    > 296 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      297 |         expect.stringMatching(
      298 |           /pd\.close >= .* AND pd\.close <= .* AND cp\.market_cap >= .* AND cp\.sector = .* AND km\.trailing_pe >= .* AND km\.trailing_pe <=/
      299 |         ),

      at Object.toHaveBeenCalledWith (tests/unit/routes/screener.test.js:296:25)

FAIL tests/integration/risk-management-workflow.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully (test mode)

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:100:17)

    console.log
      Step 1: Setting up risk limits...

      at Object.log (tests/integration/risk-management-workflow.integration.test.js:62:15)

    console.log
      ‚ö†Ô∏è Portfolio risk requested for user: integration-test-user

      at log (routes/trading.js:2251:13)

    console.error
      Database query error: {
        error: 'column "total_value" of relation "portfolio_holdings" does not exist',
        query: '\n' +
          '          INSERT INTO portfolio_holdings (\n' +
          '            user_id, symbol, quantity, average_cost, cur...',
        params: '10 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at Object.<anonymous> (tests/integration/risk-management-workflow.integration.test.js:400:9)

    console.error
      Database query error: {
        error: 'column "total_value" of relation "portfolio_holdings" does not exist',
        query: '\n' +
          '        INSERT INTO portfolio_holdings (\n' +
          '          user_id, symbol, quantity, average_cost, current...',
        params: '10 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at Object.<anonymous> (tests/integration/risk-management-workflow.integration.test.js:448:7)

    console.error
      Database query error: {
        error: 'column "total_value" of relation "portfolio_holdings" does not exist',
        query: '\n' +
          '        INSERT INTO portfolio_holdings (\n' +
          '          user_id, symbol, quantity, average_cost, current...',
        params: '10 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at Object.<anonymous> (tests/integration/risk-management-workflow.integration.test.js:510:7)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Risk Management Workflow Integration Tests ‚Ä∫ Complete Risk Management Workflow ‚Ä∫ should execute full risk management lifecycle

    expected 200 "OK", got 401 "Unauthorized"

      76 |         .post("/api/trading/risk/limits")
      77 |         .send(riskLimits)
    > 78 |         .expect(200);
         |          ^
      79 |
      80 |       expect(limitsResponse.body.success).toBe(true);
      81 |       expect(limitsResponse.body.data.maxDrawdown).toBe(15.0);

      at Object.expect (tests/integration/risk-management-workflow.integration.test.js:78:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Risk Management Workflow Integration Tests ‚Ä∫ Complete Risk Management Workflow ‚Ä∫ should handle empty portfolio risk analysis

    TypeError: Cannot read properties of undefined (reading 'totalPositions')

      385 |
      386 |       expect(response.body.success).toBe(true);
    > 387 |       expect(response.body.data.portfolioSummary.totalPositions).toBe(0);
          |                                                  ^
      388 |       expect(response.body.data.portfolioSummary.totalValue).toBe(0);
      389 |       expect(response.body.data.riskMetrics.riskLevel).toBe("low");
      390 |       expect(response.body.data.recommendations).toContain(

      at Object.totalPositions (tests/integration/risk-management-workflow.integration.test.js:387:50)

  ‚óè Risk Management Workflow Integration Tests ‚Ä∫ Complete Risk Management Workflow ‚Ä∫ should handle multiple rapid position closes

    error: column "total_value" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at Object.<anonymous> (tests/integration/risk-management-workflow.integration.test.js:400:9)

  ‚óè Risk Management Workflow Integration Tests ‚Ä∫ Complete Risk Management Workflow ‚Ä∫ should maintain data consistency across concurrent operations

    error: column "total_value" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at Object.<anonymous> (tests/integration/risk-management-workflow.integration.test.js:448:7)

  ‚óè Risk Management Workflow Integration Tests ‚Ä∫ Risk Limit Compliance Checking ‚Ä∫ should detect and report risk limit violations

    error: column "total_value" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at Object.<anonymous> (tests/integration/risk-management-workflow.integration.test.js:510:7)

FAIL tests/unit/routes/etf.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      üìà ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for spy

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for INVALID

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

    console.error
      ETF holdings database error: Error: Database connection failed
          at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/etf.test.js:215:35)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      142 |     });
      143 |   } catch (error) {
    > 144 |     console.error("ETF holdings database error:", error);
          |             ^
      145 |
      146 |     if (error.code === "42P01") {
      147 |       return res.status(500).json({

      at error (routes/etf.js:144:13)

    console.log
      üìà ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for VTI-B

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for ETF0

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for ETF1

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for ETF2

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for ETF3

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for ETF4

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for LARGE

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

    console.log
      üìà ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

    console.error
      ETF holdings database error: Error: Test error
          at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/etf.test.js:629:35)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      142 |     });
      143 |   } catch (error) {
    > 144 |     console.error("ETF holdings database error:", error);
          |             ^
      145 |
      146 |     if (error.code === "42P01") {
      147 |       return res.status(500).json({

      at error (routes/etf.js:144:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè ETF Route - Comprehensive Unit Tests ‚Ä∫ GET /api/etf/:symbol/holdings ‚Ä∫ should handle missing symbol parameter

    expected 404 "Not Found", got 200 "OK"

      164 |       const response = await request(app)
      165 |         .get("/api/etf/ /holdings")
    > 166 |         .expect(404); // Empty symbol becomes " " which gets processed as ETF not found
          |          ^
      167 |
      168 |       expect(response.body.success).toBe(false);
      169 |       expect(response.body.error).toBe("ETF not found");

      at Object.expect (tests/unit/routes/etf.test.js:166:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè ETF Route - Comprehensive Unit Tests ‚Ä∫ GET /api/etf/:symbol/holdings ‚Ä∫ should handle ETF not found

    expect(received).toContain(expected) // indexOf

    Expected substring: "No holdings data found for ETF symbol: INVALID"
    Received string:    "ETF symbol INVALID not found in database. Please verify the symbol is correct."

      179 |       expect(response.body.success).toBe(false);
      180 |       expect(response.body.error).toBe("ETF not found");
    > 181 |       expect(response.body.message).toContain(
          |                                     ^
      182 |         "No holdings data found for ETF symbol: INVALID"
      183 |       );
      184 |     });

      at Object.toContain (tests/unit/routes/etf.test.js:181:37)

  ‚óè ETF Route - Comprehensive Unit Tests ‚Ä∫ GET /api/etf/:symbol/holdings ‚Ä∫ should handle null database results gracefully

    expected 404 "Not Found", got 200 "OK"

      189 |       const response = await request(app)
      190 |         .get("/api/etf/SPY/holdings")
    > 191 |         .expect(404);
          |          ^
      192 |
      193 |       expect(response.body.success).toBe(false);
      194 |       expect(response.body.error).toBe("ETF not found");

      at Object.expect (tests/unit/routes/etf.test.js:191:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè ETF Route - Comprehensive Unit Tests ‚Ä∫ GET /api/etf/:symbol/holdings ‚Ä∫ should handle database table not found error

    expected 500 "Internal Server Error", got 200 "OK"

      203 |       const response = await request(app)
      204 |         .get("/api/etf/SPY/holdings")
    > 205 |         .expect(500);
          |          ^
      206 |
      207 |       expect(response.body.success).toBe(false);
      208 |       expect(response.body.error).toBe("Database table not found");

      at Object.expect (tests/unit/routes/etf.test.js:205:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè ETF Route - Comprehensive Unit Tests ‚Ä∫ Edge Cases and Error Handling ‚Ä∫ should handle very large limit parameter

    expected 404 "Not Found", got 200 "OK"

      416 |       const response = await request(app)
      417 |         .get("/api/etf/SPY/holdings?limit=99999")
    > 418 |         .expect(404);
          |          ^
      419 |
      420 |       expect(mockQuery).toHaveBeenCalledWith(
      421 |         expect.stringContaining("LIMIT $2"),

      at Object.expect (tests/unit/routes/etf.test.js:418:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè ETF Route - Comprehensive Unit Tests ‚Ä∫ Edge Cases and Error Handling ‚Ä∫ should handle non-numeric limit parameter

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "LIMIT $2", ["SPY", NaN]
    Received
           1
              "
          SELECT
            h.holding_symbol, h.company_name, h.weight_percent,
            h.shares_held, h.market_value, h.sector,
            e.fund_name, e.total_assets, e.expense_ratio, e.dividend_yield
          FROM etf_holdings h
          JOIN etfs e ON h.etf_symbol = e.symbol
          WHERE h.etf_symbol = $1
          ORDER BY h.weight_percent DESC
          LIMIT $2
        ",
              Array [
                "SPY",
            -   NaN,
            +   25,
              ],
           2
              "
          SELECT sector, SUM(weight_percent) as total_weight
          FROM etf_holdings¬∑
          WHERE etf_symbol = $1¬∑
          GROUP BY sector
          ORDER BY total_weight DESC
        ",
              Array [
                "SPY",
            -   NaN,
              ],

    Number of calls: 2

      447 |
      448 |       // Should fallback to default limit of 25 but parseInt converts 'invalid' to NaN
    > 449 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      450 |         expect.stringContaining("LIMIT $2"),
      451 |         ["SPY", NaN]
      452 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/etf.test.js:449:25)

  ‚óè ETF Route - Comprehensive Unit Tests ‚Ä∫ Edge Cases and Error Handling ‚Ä∫ should handle negative limit parameter

    expected 404 "Not Found", got 200 "OK"

      460 |       const response = await request(app)
      461 |         .get("/api/etf/SPY/holdings?limit=-10")
    > 462 |         .expect(404);
          |          ^
      463 |
      464 |       expect(mockQuery).toHaveBeenCalledWith(
      465 |         expect.stringContaining("LIMIT $2"),

      at Object.expect (tests/unit/routes/etf.test.js:462:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

FAIL tests/unit/utils/database.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/test

      at log (utils/database.js:215:15)

    console.error
      Database query error: {
        error: 'Database connection failed - no fallback available',
        query: 'SELECT * FROM test WHERE id = $1',
        params: '1 parameters',
        code: 'DB_CONNECTION_FAILED'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at Object.<anonymous> (tests/unit/utils/database.test.js:142:22)

    console.error
      Database connection error - no fallback available

      1392 |       error.code === "ECONNABORTED"
      1393 |     ) {
    > 1394 |       console.error("Database connection error - no fallback available");
           |               ^
      1395 |       error.message = `Database connection failed: ${error.message}`;
      1396 |       throw error;
      1397 |     }

      at error (utils/database.js:1394:15)
      at Object.<anonymous> (tests/unit/utils/database.test.js:142:22)

    console.error
      Database query error: {
        error: 'Database connection failed - no fallback available',
        query: 'SELECT 1',
        params: 'no parameters',
        code: 'DB_CONNECTION_FAILED'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at Object.<anonymous> (tests/unit/utils/database.test.js:155:22)

    console.error
      Database connection error - no fallback available

      1392 |       error.code === "ECONNABORTED"
      1393 |     ) {
    > 1394 |       console.error("Database connection error - no fallback available");
           |               ^
      1395 |       error.message = `Database connection failed: ${error.message}`;
      1396 |       throw error;
      1397 |     }

      at error (utils/database.js:1394:15)
      at Object.<anonymous> (tests/unit/utils/database.test.js:155:22)

    console.error
      Database query error: {
        error: 'Database connection failed - no fallback available',
        query: 'SELECT 1',
        params: 'no parameters',
        code: 'DB_CONNECTION_FAILED'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at Object.<anonymous> (tests/unit/utils/database.test.js:168:22)

    console.error
      Database connection error - no fallback available

      1392 |       error.code === "ECONNABORTED"
      1393 |     ) {
    > 1394 |       console.error("Database connection error - no fallback available");
           |               ^
      1395 |       error.message = `Database connection failed: ${error.message}`;
      1396 |       throw error;
      1397 |     }

      at error (utils/database.js:1394:15)
      at Object.<anonymous> (tests/unit/utils/database.test.js:168:22)

    console.error
      Database query error: {
        error: 'Database connection failed - no fallback available',
        query: 'INVALID SQL',
        params: 'no parameters',
        code: 'DB_CONNECTION_FAILED'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at Object.<anonymous> (tests/unit/utils/database.test.js:181:7)

    console.error
      Database connection error - no fallback available

      1392 |       error.code === "ECONNABORTED"
      1393 |     ) {
    > 1394 |       console.error("Database connection error - no fallback available");
           |               ^
      1395 |       error.message = `Database connection failed: ${error.message}`;
      1396 |       throw error;
      1397 |     }

      at error (utils/database.js:1394:15)
      at Object.<anonymous> (tests/unit/utils/database.test.js:181:7)

    console.error
      Database query error: {
        error: 'Database connection failed - no fallback available',
        query: 'SELECT 1',
        params: 'no parameters',
        code: 'DB_CONNECTION_FAILED'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at Object.<anonymous> (tests/unit/utils/database.test.js:192:7)

    console.error
      Database connection error - no fallback available

      1392 |       error.code === "ECONNABORTED"
      1393 |     ) {
    > 1394 |       console.error("Database connection error - no fallback available");
           |               ^
      1395 |       error.message = `Database connection failed: ${error.message}`;
      1396 |       throw error;
      1397 |     }

      at error (utils/database.js:1394:15)
      at Object.<anonymous> (tests/unit/utils/database.test.js:192:7)

    console.error
      Database query error: {
        error: 'Database connection failed - no fallback available',
        query: 'SELECT NOW() as timestamp, version() as db_version',
        params: 'no parameters',
        code: 'DB_CONNECTION_FAILED'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at healthCheck (utils/database.js:1491:20)
      at Object.<anonymous> (tests/unit/utils/database.test.js:266:22)

    console.error
      Database connection error - no fallback available

      1392 |       error.code === "ECONNABORTED"
      1393 |     ) {
    > 1394 |       console.error("Database connection error - no fallback available");
           |               ^
      1395 |       error.message = `Database connection failed: ${error.message}`;
      1396 |       throw error;
      1397 |     }

      at error (utils/database.js:1394:15)
      at healthCheck (utils/database.js:1491:20)
      at Object.<anonymous> (tests/unit/utils/database.test.js:266:22)

    console.error
      Database query error: {
        error: 'Database connection failed - no fallback available',
        query: 'SELECT NOW() as timestamp, version() as db_version',
        params: 'no parameters',
        code: 'DB_CONNECTION_FAILED'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at healthCheck (utils/database.js:1491:20)
      at Object.<anonymous> (tests/unit/utils/database.test.js:275:22)

    console.error
      Database connection error - no fallback available

      1392 |       error.code === "ECONNABORTED"
      1393 |     ) {
    > 1394 |       console.error("Database connection error - no fallback available");
           |               ^
      1395 |       error.message = `Database connection failed: ${error.message}`;
      1396 |       throw error;
      1397 |     }

      at error (utils/database.js:1394:15)
      at healthCheck (utils/database.js:1491:20)
      at Object.<anonymous> (tests/unit/utils/database.test.js:275:22)

    console.error
      Database query error: {
        error: 'Database connection failed - no fallback available',
        query: 'SELECT 1',
        params: 'no parameters',
        code: 'DB_CONNECTION_FAILED'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at Object.<anonymous> (tests/unit/utils/database.test.js:332:22)

    console.error
      Database connection error - no fallback available

      1392 |       error.code === "ECONNABORTED"
      1393 |     ) {
    > 1394 |       console.error("Database connection error - no fallback available");
           |               ^
      1395 |       error.message = `Database connection failed: ${error.message}`;
      1396 |       throw error;
      1397 |     }

      at error (utils/database.js:1394:15)
      at Object.<anonymous> (tests/unit/utils/database.test.js:332:22)

    console.error
      Database query error: {
        error: 'Database connection failed - no fallback available',
        query: 'SELECT 1',
        params: 'no parameters',
        code: 'DB_CONNECTION_FAILED'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at Object.<anonymous> (tests/unit/utils/database.test.js:345:22)

    console.error
      Database connection error - no fallback available

      1392 |       error.code === "ECONNABORTED"
      1393 |     ) {
    > 1394 |       console.error("Database connection error - no fallback available");
           |               ^
      1395 |       error.message = `Database connection failed: ${error.message}`;
      1396 |       throw error;
      1397 |     }

      at error (utils/database.js:1394:15)
      at Object.<anonymous> (tests/unit/utils/database.test.js:345:22)

    console.error
      Database query error: {
        error: 'Database connection failed - no fallback available',
        query: 'SELECT * FROM slow_table',
        params: 'no parameters',
        code: 'DB_CONNECTION_FAILED'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at Object.<anonymous> (tests/unit/utils/database.test.js:361:22)

    console.error
      Database connection error - no fallback available

      1392 |       error.code === "ECONNABORTED"
      1393 |     ) {
    > 1394 |       console.error("Database connection error - no fallback available");
           |               ^
      1395 |       error.message = `Database connection failed: ${error.message}`;
      1396 |       throw error;
      1397 |     }

      at error (utils/database.js:1394:15)
      at Object.<anonymous> (tests/unit/utils/database.test.js:361:22)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Database Utilities - Unit Tests ‚Ä∫ Connection Pool Management ‚Ä∫ should initialize database and return pool object

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      112 |       const result = await initializeDatabase();
      113 |
    > 114 |       expect(mockPoolConstructor).toHaveBeenCalled();
          |                                   ^
      115 |       expect(result).toBeDefined();
      116 |       expect(typeof result).toBe("object");
      117 |     });

      at Object.toHaveBeenCalled (tests/unit/utils/database.test.js:114:35)

  ‚óè Database Utilities - Unit Tests ‚Ä∫ Connection Pool Management ‚Ä∫ should handle initialization with environment variables

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      126 |
      127 |       expect(result).toBeDefined();
    > 128 |       expect(mockPool.on).toHaveBeenCalled();
          |                           ^
      129 |     });
      130 |   });
      131 |

      at Object.toHaveBeenCalled (tests/unit/utils/database.test.js:128:27)

  ‚óè Database Utilities - Unit Tests ‚Ä∫ Query Execution ‚Ä∫ should execute queries through connection pool

    Database connection failed: Database connection failed - no fallback available

      1318 |       if (!result || !pool) {
      1319 |         // Database is not available - throw error instead of fallback
    > 1320 |         const error = new Error("Database connection failed - no fallback available");
           |                       ^
      1321 |         error.code = "DB_CONNECTION_FAILED";
      1322 |         throw error;
      1323 |       }

      at query (utils/database.js:1320:23)
      at Object.<anonymous> (tests/unit/utils/database.test.js:142:22)

  ‚óè Database Utilities - Unit Tests ‚Ä∫ Query Execution ‚Ä∫ should return null when database is not initialized

    Database connection failed: Database connection failed - no fallback available

      1318 |       if (!result || !pool) {
      1319 |         // Database is not available - throw error instead of fallback
    > 1320 |         const error = new Error("Database connection failed - no fallback available");
           |                       ^
      1321 |         error.code = "DB_CONNECTION_FAILED";
      1322 |         throw error;
      1323 |       }

      at query (utils/database.js:1320:23)
      at Object.<anonymous> (tests/unit/utils/database.test.js:155:22)

  ‚óè Database Utilities - Unit Tests ‚Ä∫ Query Execution ‚Ä∫ should handle connection errors gracefully

    Database connection failed: Database connection failed - no fallback available

      1318 |       if (!result || !pool) {
      1319 |         // Database is not available - throw error instead of fallback
    > 1320 |         const error = new Error("Database connection failed - no fallback available");
           |                       ^
      1321 |         error.code = "DB_CONNECTION_FAILED";
      1322 |         throw error;
      1323 |       }

      at query (utils/database.js:1320:23)
      at Object.<anonymous> (tests/unit/utils/database.test.js:168:22)

  ‚óè Database Utilities - Unit Tests ‚Ä∫ Query Execution ‚Ä∫ should handle non-connection errors by throwing

    expect(received).rejects.toThrow(expected)

    Expected substring: "syntax error"
    Received message:   "Database connection failed: Database connection failed - no fallback available"

          1318 |       if (!result || !pool) {
          1319 |         // Database is not available - throw error instead of fallback
        > 1320 |         const error = new Error("Database connection failed - no fallback available");
               |                       ^
          1321 |         error.code = "DB_CONNECTION_FAILED";
          1322 |         throw error;
          1323 |       }

      at query (utils/database.js:1320:23)
      at Object.<anonymous> (tests/unit/utils/database.test.js:181:7)
      at Object.toThrow (node_modules/expect/build/index.js:218:22)
      at Object.toThrow (tests/unit/utils/database.test.js:181:50)

  ‚óè Database Utilities - Unit Tests ‚Ä∫ Query Execution ‚Ä∫ should handle pool exhaustion errors

    expect(received).rejects.toThrow(expected)

    Expected substring: "Pool exhausted"
    Received message:   "Database connection failed: Database connection failed - no fallback available"

          1318 |       if (!result || !pool) {
          1319 |         // Database is not available - throw error instead of fallback
        > 1320 |         const error = new Error("Database connection failed - no fallback available");
               |                       ^
          1321 |         error.code = "DB_CONNECTION_FAILED";
          1322 |         throw error;
          1323 |       }

      at query (utils/database.js:1320:23)
      at Object.<anonymous> (tests/unit/utils/database.test.js:192:7)
      at Object.toThrow (node_modules/expect/build/index.js:218:22)
      at Object.toThrow (tests/unit/utils/database.test.js:192:47)

  ‚óè Database Utilities - Unit Tests ‚Ä∫ Transaction Management ‚Ä∫ should execute transaction with proper BEGIN/COMMIT

    Database not initialized. Call initializeDatabase() first.

      1298 | function getPool() {
      1299 |   if (!pool || !dbInitialized) {
    > 1300 |     throw new Error(
           |           ^
      1301 |       "Database not initialized. Call initializeDatabase() first."
      1302 |     );
      1303 |   }

      at getPool (utils/database.js:1300:11)
      at getPool (utils/database.js:1453:24)
      at Object.transaction (tests/unit/utils/database.test.js:213:28)

  ‚óè Database Utilities - Unit Tests ‚Ä∫ Transaction Management ‚Ä∫ should rollback transaction on error

    expect(received).rejects.toThrow(expected)

    Expected substring: "Transaction failed"
    Received message:   "Database not initialized. Call initializeDatabase() first."

          1298 | function getPool() {
          1299 |   if (!pool || !dbInitialized) {
        > 1300 |     throw new Error(
               |           ^
          1301 |       "Database not initialized. Call initializeDatabase() first."
          1302 |     );
          1303 |   }

      at getPool (utils/database.js:1300:11)
      at getPool (utils/database.js:1453:24)
      at Object.transaction (tests/unit/utils/database.test.js:236:20)
      at Object.toThrow (node_modules/expect/build/index.js:218:22)
      at Object.toThrow (tests/unit/utils/database.test.js:236:62)

  ‚óè Database Utilities - Unit Tests ‚Ä∫ Health Check ‚Ä∫ should handle database errors gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: "Connection failed"
    Received: "Database connection failed: Database connection failed - no fallback available"

      277 |       expect(result).toBeDefined();
      278 |       expect(result.status).toBe("unhealthy");
    > 279 |       expect(result.error).toBe("Connection failed");
          |                            ^
      280 |     });
      281 |   });
      282 |

      at Object.toBe (tests/unit/utils/database.test.js:279:28)

  ‚óè Database Utilities - Unit Tests ‚Ä∫ Connection Cleanup ‚Ä∫ should close database connections

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      291 |       await closeDatabase();
      292 |
    > 293 |       expect(mockPool.end).toHaveBeenCalled();
          |                            ^
      294 |     });
      295 |
      296 |     test("should handle cleanup when no pool exists", async () => {

      at Object.toHaveBeenCalled (tests/unit/utils/database.test.js:293:28)

  ‚óè Database Utilities - Unit Tests ‚Ä∫ Pool Access ‚Ä∫ should return connection pool when initialized

    Database not initialized. Call initializeDatabase() first.

      1298 | function getPool() {
      1299 |   if (!pool || !dbInitialized) {
    > 1300 |     throw new Error(
           |           ^
      1301 |       "Database not initialized. Call initializeDatabase() first."
      1302 |     );
      1303 |   }

      at getPool (utils/database.js:1300:11)
      at Object.getPool (tests/unit/utils/database.test.js:316:20)

  ‚óè Database Utilities - Unit Tests ‚Ä∫ Error Handling Edge Cases ‚Ä∫ should handle database connection timeout errors

    Database connection failed: Database connection failed - no fallback available

      1318 |       if (!result || !pool) {
      1319 |         // Database is not available - throw error instead of fallback
    > 1320 |         const error = new Error("Database connection failed - no fallback available");
           |                       ^
      1321 |         error.code = "DB_CONNECTION_FAILED";
      1322 |         throw error;
      1323 |       }

      at query (utils/database.js:1320:23)
      at Object.<anonymous> (tests/unit/utils/database.test.js:332:22)

  ‚óè Database Utilities - Unit Tests ‚Ä∫ Error Handling Edge Cases ‚Ä∫ should handle unexpected error formats

    Database connection failed: Database connection failed - no fallback available

      1318 |       if (!result || !pool) {
      1319 |         // Database is not available - throw error instead of fallback
    > 1320 |         const error = new Error("Database connection failed - no fallback available");
           |                       ^
      1321 |         error.code = "DB_CONNECTION_FAILED";
      1322 |         throw error;
      1323 |       }

      at query (utils/database.js:1320:23)
      at Object.<anonymous> (tests/unit/utils/database.test.js:345:22)

  ‚óè Database Utilities - Unit Tests ‚Ä∫ Error Handling Edge Cases ‚Ä∫ should handle query logging for slow queries

    Database connection failed: Database connection failed - no fallback available

      1318 |       if (!result || !pool) {
      1319 |         // Database is not available - throw error instead of fallback
    > 1320 |         const error = new Error("Database connection failed - no fallback available");
           |                       ^
      1321 |         error.code = "DB_CONNECTION_FAILED";
      1322 |         throw error;
      1323 |       }

      at query (utils/database.js:1320:23)
      at Object.<anonymous> (tests/unit/utils/database.test.js:361:22)

FAIL tests/unit/routes/price.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      üí∞ Current price requested for AAPL

      at log (routes/price.js:43:13)

    console.log
      üí∞ Current price requested for INVALID

      at log (routes/price.js:43:13)

    console.log
      ‚ùå Invalid symbol format: INVALID

      at log (routes/price.js:61:17)

    console.log
      üí∞ Current price requested for AAPL

      at log (routes/price.js:43:13)

    console.error
      Price error for AAPL: Error: Database connection failed
          at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/price.test.js:92:35)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      101 |     });
      102 |   } catch (error) {
    > 103 |     console.error(`Price error for ${req.params.symbol}:`, error);
          |             ^
      104 |     return res.status(500).json({
      105 |       success: false,
      106 |       error: "Failed to fetch price data",

      at error (routes/price.js:103:13)

    console.log
      ‚è∞ Intraday data requested for AAPL (interval: 5m)

      at log (routes/price.js:176:13)

    console.error
      Intraday data error for AAPL: RangeError: Invalid time value
          at Date.toISOString (<anonymous>)
          at toISOString (/home/stocks/algo/webapp/lambda/routes/price.js:202:37)
          at Array.map (<anonymous>)
          at map (/home/stocks/algo/webapp/lambda/routes/price.js:200:35)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      223 |     });
      224 |   } catch (error) {
    > 225 |     console.error(`Intraday data error for ${req.params.symbol}:`, error);
          |             ^
      226 |     return res.status(500).json({
      227 |       success: false,
      228 |       error: "Failed to fetch intraday data",

      at error (routes/price.js:225:13)

    console.log
      ‚è∞ Intraday data requested for AAPL (interval: 1min)

      at log (routes/price.js:176:13)

    console.log
      ‚è∞ Intraday data requested for AAPL (interval: invalid)

      at log (routes/price.js:176:13)

    console.log
      üìà Futures prices requested for CLZ24

      at log (routes/price.js:1216:13)

    console.log
      üìà Futures data generated for CLZ24: 1 contracts

      at log (routes/price.js:1282:13)

    console.log
      üìà Futures prices requested for INVALID

      at log (routes/price.js:1216:13)

    console.log
      üìà Futures data generated for INVALID: 0 contracts

      at log (routes/price.js:1282:13)

    console.log
      üìä Batch price request for 3 symbols

      at log (routes/price.js:247:13)

    console.error
      Batch price error: RangeError: Invalid time value
          at Date.toISOString (<anonymous>)
          at toISOString (/home/stocks/algo/webapp/lambda/routes/price.js:268:39)
          at Array.forEach (<anonymous>)
          at forEach (/home/stocks/algo/webapp/lambda/routes/price.js:262:17)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      295 |     });
      296 |   } catch (error) {
    > 297 |     console.error(`Batch price error:`, error);
          |             ^
      298 |     return res.status(500).json({
      299 |       success: false,
      300 |       error: "Failed to fetch batch prices",

      at error (routes/price.js:297:13)

    console.log
      üìä Batch price request for 101 symbols

      at log (routes/price.js:247:13)

    console.error
      Batch price error: RangeError: Invalid time value
          at Date.toISOString (<anonymous>)
          at toISOString (/home/stocks/algo/webapp/lambda/routes/price.js:268:39)
          at Array.forEach (<anonymous>)
          at forEach (/home/stocks/algo/webapp/lambda/routes/price.js:262:17)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)

      295 |     });
      296 |   } catch (error) {
    > 297 |     console.error(`Batch price error:`, error);
          |             ^
      298 |     return res.status(500).json({
      299 |       success: false,
      300 |       error: "Failed to fetch batch prices",

      at error (routes/price.js:297:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Price Route - Unit Tests ‚Ä∫ GET /api/price/:symbol ‚Ä∫ should handle symbol not found

    expect(received).toContain(expected) // indexOf

    Expected substring: "not found"
    Received string:    "Invalid symbol format: INVALID. Use 1-5 letter symbols like AAPL"

      86 |
      87 |       expect(response.body.success).toBe(false);
    > 88 |       expect(response.body.error).toContain("not found");
         |                                   ^
      89 |     });
      90 |
      91 |     test("should handle database errors", async () => {

      at Object.toContain (tests/unit/routes/price.test.js:88:35)

  ‚óè Price Route - Unit Tests ‚Ä∫ GET /api/price/:symbol/intraday ‚Ä∫ should return intraday data with default 5min interval

    expected 200 "OK", got 500 "Internal Server Error"

      118 |       const response = await request(app)
      119 |         .get("/api/price/AAPL/intraday")
    > 120 |         .expect(200);
          |          ^
      121 |
      122 |       expect(response.body.symbol).toBe("AAPL");
      123 |       expect(response.body.data.interval).toBe("5min");

      at Object.expect (tests/unit/routes/price.test.js:120:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Price Route - Unit Tests ‚Ä∫ GET /api/price/:symbol/intraday ‚Ä∫ should handle different intervals

    expected 200 "OK", got 404 "Not Found"

      134 |       const response = await request(app)
      135 |         .get("/api/price/AAPL/intraday?interval=1min")
    > 136 |         .expect(200);
          |          ^
      137 |
      138 |       expect(response.body.data.interval).toBe("1min");
      139 |       expect(mockQuery).toHaveBeenCalledWith(

      at Object.expect (tests/unit/routes/price.test.js:136:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Price Route - Unit Tests ‚Ä∫ GET /api/price/:symbol/intraday ‚Ä∫ should validate interval parameter

    expected 400 "Bad Request", got 404 "Not Found"

      146 |       const response = await request(app)
      147 |         .get("/api/price/AAPL/intraday?interval=invalid")
    > 148 |         .expect(400);
          |          ^
      149 |
      150 |       expect(response.body.success).toBe(false);
      151 |       expect(response.body.error).toContain("Invalid interval");

      at Object.expect (tests/unit/routes/price.test.js:148:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Price Route - Unit Tests ‚Ä∫ GET /api/price/futures/:symbol ‚Ä∫ should return futures pricing data

    expect(received).toBe(expected) // Object.is equality

    Expected: "CLZ24"
    Received: undefined

      175 |         .expect(200);
      176 |
    > 177 |       expect(response.body.symbol).toBe("CLZ24");
          |                                    ^
      178 |       expect(response.body.data).toHaveProperty("contract_details");
      179 |       expect(response.body.data).toHaveProperty("pricing_analysis");
      180 |       expect(response.body.data.contract_details).toHaveProperty(

      at Object.toBe (tests/unit/routes/price.test.js:177:36)

  ‚óè Price Route - Unit Tests ‚Ä∫ GET /api/price/futures/:symbol ‚Ä∫ should handle non-existent futures contract

    expected 404 "Not Found", got 200 "OK"

      192 |       const response = await request(app)
      193 |         .get("/api/price/futures/INVALID")
    > 194 |         .expect(404);
          |          ^
      195 |
      196 |       expect(response.body.success).toBe(false);
      197 |       expect(response.body.error).toContain("Futures contract not found");

      at Object.expect (tests/unit/routes/price.test.js:194:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Price Route - Unit Tests ‚Ä∫ GET /api/price/:symbol/prediction ‚Ä∫ should return price prediction analysis

    expected 200 "OK", got 404 "Not Found"

      217 |       const response = await request(app)
      218 |         .get("/api/price/AAPL/prediction")
    > 219 |         .expect(200);
          |          ^
      220 |
      221 |       expect(response.body.symbol).toBe("AAPL");
      222 |       expect(response.body.data).toHaveProperty("current_analysis");

      at Object.expect (tests/unit/routes/price.test.js:219:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Price Route - Unit Tests ‚Ä∫ GET /api/price/:symbol/prediction ‚Ä∫ should handle different timeframes

    expected 200 "OK", got 404 "Not Found"

      236 |       const response = await request(app)
      237 |         .get("/api/price/AAPL/prediction?timeframe=1w")
    > 238 |         .expect(200);
          |          ^
      239 |
      240 |       expect(response.body.data.timeframe).toBe("1w");
      241 |     });

      at Object.expect (tests/unit/routes/price.test.js:238:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Price Route - Unit Tests ‚Ä∫ GET /api/price/:symbol/prediction ‚Ä∫ should validate timeframe parameter

    expected 400 "Bad Request", got 404 "Not Found"

      244 |       const response = await request(app)
      245 |         .get("/api/price/AAPL/prediction?timeframe=invalid")
    > 246 |         .expect(400);
          |          ^
      247 |
      248 |       expect(response.body.success).toBe(false);
      249 |       expect(response.body.error).toContain("Invalid timeframe");

      at Object.expect (tests/unit/routes/price.test.js:246:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Price Route - Unit Tests ‚Ä∫ GET /api/price/:symbol/alerts ‚Ä∫ should return price alert recommendations

    expected 200 "OK", got 404 "Not Found"

      267 |       const response = await request(app)
      268 |         .get("/api/price/AAPL/alerts")
    > 269 |         .expect(200);
          |          ^
      270 |
      271 |       expect(response.body.symbol).toBe("AAPL");
      272 |       expect(response.body.data).toHaveProperty("current_price");

      at Object.expect (tests/unit/routes/price.test.js:269:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Price Route - Unit Tests ‚Ä∫ POST /api/price/batch ‚Ä∫ should handle batch price requests

    expected 200 "OK", got 500 "Internal Server Error"

      290 |         .post("/api/price/batch")
      291 |         .send({ symbols: ["AAPL", "MSFT", "GOOGL"] })
    > 292 |         .expect(200);
          |          ^
      293 |
      294 |       expect(response.body.success).toBe(true);
      295 |       expect(response.body.data).toHaveProperty("prices");

      at Object.expect (tests/unit/routes/price.test.js:292:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Price Route - Unit Tests ‚Ä∫ POST /api/price/batch ‚Ä∫ should limit batch size

    expected 400 "Bad Request", got 500 "Internal Server Error"

      317 |         .post("/api/price/batch")
      318 |         .send({ symbols: tooManySymbols })
    > 319 |         .expect(400);
          |          ^
      320 |
      321 |       expect(response.body.success).toBe(false);
      322 |       expect(response.body.error).toContain("Maximum 100 symbols allowed");

      at Object.expect (tests/unit/routes/price.test.js:319:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

FAIL tests/unit/routes/websocket.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      üöÄ [test] Live data stream request initiated {
        symbols: 'AAPL',
        userId: 'test-use...',
        userAgent: undefined,
        ip: '::ffff:127.0.0.1',
        timestamp: '2025-09-23T16:32:15.112Z'
      }

      at log (routes/websocket.js:190:13)

    console.log
      üîç [test] Parsing requested symbols: AAPL

      at log (routes/websocket.js:199:13)

    console.log
      ‚úÖ [test] Symbols validated: { validSymbols: [ 'AAPL' ], symbolCount: 1 }

      at log (routes/websocket.js:221:13)

    console.log
      üîë [test] Retrieving user API credentials for live data access

      at log (routes/websocket.js:227:13)

    console.log
      ‚úÖ [test] API credentials retrieved in 0ms {
        provider: 'alpaca',
        environment: 'sandbox',
        keyLength: 15,
        hasSecret: true
      }

      at log (routes/websocket.js:269:15)

    console.log
      üè≠ [test] Initializing Alpaca service for live data

      at log (routes/websocket.js:311:13)

    console.log
      ‚úÖ [test] Alpaca service initialized in 0ms { environment: 'sandbox', hasApiKey: true, hasSecret: true }

      at log (routes/websocket.js:323:15)

    console.error
      ‚ùå [test] Live data stream FAILED after 2ms: {
        error: 'undefined is not iterable (cannot read property Symbol(Symbol.iterator))',
        errorStack: 'TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))\n' +
          '    at Function.from (<anonymous>)\n' +
          '    at from (/home/stocks/algo/webapp/lambda/routes/websocket.js:372:36)\n' +
          '    at processTicksAndRejections (node:internal/process/task_queues:95:5)',
        errorCode: undefined,
        symbols: 'AAPL',
        impact: 'Live data stream request failed completely',
        recommendation: 'Check authentication, API credentials, and Alpaca service status'
      }

      584 |   } catch (streamError) {
      585 |     const errorDuration = Date.now() - requestStart;
    > 586 |     console.error(
          |             ^
      587 |       `‚ùå [${requestId}] Live data stream FAILED after ${errorDuration}ms:`,
      588 |       {
      589 |         error: streamError.message,

      at error (routes/websocket.js:586:13)

    console.log
      üöÄ [test] Live data stream request initiated {
        symbols: 'AAPL',
        userId: 'test-use...',
        userAgent: undefined,
        ip: '::ffff:127.0.0.1',
        timestamp: '2025-09-23T16:32:15.128Z'
      }

      at log (routes/websocket.js:190:13)

    console.log
      üîç [test] Parsing requested symbols: AAPL

      at log (routes/websocket.js:199:13)

    console.log
      ‚úÖ [test] Symbols validated: { validSymbols: [ 'AAPL' ], symbolCount: 1 }

      at log (routes/websocket.js:221:13)

    console.log
      üîë [test] Retrieving user API credentials for live data access

      at log (routes/websocket.js:227:13)

    console.error
      ‚ùå [test] No API credentials found after 0ms {
        requestedProvider: 'alpaca',
        userId: 'test-use...',
        impact: 'Live market data will not be available',
        recommendation: 'User needs to configure Alpaca API keys in settings'
      }

      236 |
      237 |       if (!credentials) {
    > 238 |         console.error(
          |                 ^
      239 |           `‚ùå [${requestId}] No API credentials found after ${credentialsDuration}ms`,
      240 |           {
      241 |             requestedProvider: "alpaca",

      at error (routes/websocket.js:238:17)

    console.log
      üöÄ [test] Live data stream request initiated {
        symbols: 'AAPL',
        userId: 'test-use...',
        userAgent: undefined,
        ip: '::ffff:127.0.0.1',
        timestamp: '2025-09-23T16:32:15.131Z'
      }

      at log (routes/websocket.js:190:13)

    console.log
      üîç [test] Parsing requested symbols: AAPL

      at log (routes/websocket.js:199:13)

    console.log
      ‚úÖ [test] Symbols validated: { validSymbols: [ 'AAPL' ], symbolCount: 1 }

      at log (routes/websocket.js:221:13)

    console.log
      üîë [test] Retrieving user API credentials for live data access

      at log (routes/websocket.js:227:13)

    console.error
      ‚ùå [test] Failed to retrieve API credentials after 0ms: {
        error: 'Database connection failed',
        errorStack: 'Error: Database connection failed\n' +
          '    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/websocket.test.js:179:9)\n' +
          '    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n' +
          '    at new Promise (<anonymous>)\n' +
          '    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n' +
          '    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n' +
          '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
          '    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n' +
          '    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n' +
          '    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n' +
          '    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n' +
          '    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n' +
          '    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n' +
          '    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n' +
          '    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n' +
          '    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)',
        provider: 'alpaca',
        impact: 'Cannot access live market data',
        recommendation: 'Check API key configuration and database connectivity'
      }

      278 |     } catch (credentialsError) {
      279 |       const credentialsDuration = Date.now() - credentialsStart;
    > 280 |       console.error(
          |               ^
      281 |         `‚ùå [${requestId}] Failed to retrieve API credentials after ${credentialsDuration}ms:`,
      282 |         {
      283 |           error: credentialsError.message,

      at error (routes/websocket.js:280:15)

    console.log
      üöÄ [test] Live data stream request initiated {
        symbols: 'AAPL',
        userId: 'test-use...',
        userAgent: undefined,
        ip: '::ffff:127.0.0.1',
        timestamp: '2025-09-23T16:32:15.133Z'
      }

      at log (routes/websocket.js:190:13)

    console.log
      üîç [test] Parsing requested symbols: AAPL

      at log (routes/websocket.js:199:13)

    console.log
      ‚úÖ [test] Symbols validated: { validSymbols: [ 'AAPL' ], symbolCount: 1 }

      at log (routes/websocket.js:221:13)

    console.log
      üîë [test] Retrieving user API credentials for live data access

      at log (routes/websocket.js:227:13)

    console.log
      ‚úÖ [test] API credentials retrieved in 0ms {
        provider: 'alpaca',
        environment: 'sandbox',
        keyLength: 11,
        hasSecret: true
      }

      at log (routes/websocket.js:269:15)

    console.log
      üè≠ [test] Initializing Alpaca service for live data

      at log (routes/websocket.js:311:13)

    console.error
      ‚ùå [test] Alpaca service initialization FAILED after 0ms: {
        error: 'Invalid API credentials',
        errorStack: 'Error: Invalid API credentials\n' +
          '    at mockConstructor.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/websocket.test.js:202:15)\n' +
          '    at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:387:43\n' +
          '    at mockConstructor.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)\n' +
          '    at new mockConstructor (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)\n' +
          '    at /home/stocks/algo/webapp/lambda/routes/websocket.js:316:27\n' +
          '    at processTicksAndRejections (node:internal/process/task_queues:95:5)',
        environment: 'sandbox',
        impact: 'Cannot initialize live data service',
        recommendation: 'Check API key validity and Alpaca service status'
      }

      331 |     } catch (alpacaError) {
      332 |       const alpacaInitDuration = Date.now() - alpacaInitStart;
    > 333 |       console.error(
          |               ^
      334 |         `‚ùå [${requestId}] Alpaca service initialization FAILED after ${alpacaInitDuration}ms:`,
      335 |         {
      336 |           error: alpacaError.message,

      at error (routes/websocket.js:333:15)

    console.log
      üöÄ [test] Live data stream request initiated {
        symbols: 'INVALID!@',
        userId: 'test-use...',
        userAgent: undefined,
        ip: '::ffff:127.0.0.1',
        timestamp: '2025-09-23T16:32:15.136Z'
      }

      at log (routes/websocket.js:190:13)

    console.log
      üîç [test] Parsing requested symbols: INVALID!@

      at log (routes/websocket.js:199:13)

    console.error
      ‚ùå [test] Invalid symbols provided: {
        originalSymbols: 'INVALID!@',
        filteredSymbols: [],
        impact: 'No valid symbols to stream'
      }

      206 |
      207 |     if (symbols.length === 0) {
    > 208 |       console.error(`‚ùå [${requestId}] Invalid symbols provided:`, {
          |               ^
      209 |         originalSymbols: req.params.symbols,
      210 |         filteredSymbols: symbols,
      211 |         impact: "No valid symbols to stream",

      at error (routes/websocket.js:208:15)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at next (tests/unit/routes/websocket.test.js:38:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè WebSocket API Routes - API Key Dependencies ‚Ä∫ Stream Endpoint - Critical API Key Dependency ‚Ä∫ should stream market data with valid API credentials

    expected 200 "OK", got 500 "Internal Server Error"

      135 |       const response = await request(app)
      136 |         .get("/api/websocket/stream/AAPL")
    > 137 |         .expect(200);
          |          ^
      138 |
      139 |       expect(response.body.success).toBe(true);
      140 |       expect(response.body.data.symbols).toEqual(["AAPL"]);

      at Object.expect (tests/unit/routes/websocket.test.js:137:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

FAIL tests/unit/routes/economic.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.warn
      Economic data count query returned null result, database may be unavailable

      89 |     // Add null safety check
      90 |     if (!countResult || !countResult.rows || countResult.rows.length === 0) {
    > 91 |       console.warn(
         |               ^
      92 |         "Economic data count query returned null result, database may be unavailable"
      93 |       );
      94 |       return res.status(503).json({

      at warn (routes/economic.js:91:15)

    console.error
      Economic data query failed: Database connection failed

      78 |       ]);
      79 |     } catch (error) {
    > 80 |       console.error("Economic data query failed:", error.message);
         |               ^
      81 |       return res.status(500).json({
      82 |         success: false,
      83 |         error: "Failed to fetch economic data",

      at error (routes/economic.js:80:15)

    console.warn
      Economic data count query returned null result, database may be unavailable

      89 |     // Add null safety check
      90 |     if (!countResult || !countResult.rows || countResult.rows.length === 0) {
    > 91 |       console.warn(
         |               ^
      92 |         "Economic data count query returned null result, database may be unavailable"
      93 |       );
      94 |       return res.status(503).json({

      at warn (routes/economic.js:91:15)

    console.log
      Economic data endpoint called with limit: 50

      at log (routes/economic.js:168:13)

    console.log
      Economic data endpoint called with limit: 100

      at log (routes/economic.js:168:13)

    console.log
      Economic data endpoint called with limit: 10

      at log (routes/economic.js:168:13)

    console.log
      Economic data endpoint called with limit: 50

      at log (routes/economic.js:168:13)

    console.log
      Economic data endpoint called with limit: 50

      at log (routes/economic.js:168:13)

    console.log
      Economic data endpoint called with limit: 50

      at log (routes/economic.js:168:13)

    console.log
      Economic data endpoint called with limit: 50

      at log (routes/economic.js:168:13)

    console.log
      Economic data endpoint called with limit: 50

      at log (routes/economic.js:168:13)

    console.error
      Error fetching economic data: Error: Query timeout
          at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/economic.test.js:326:35)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      191 |     });
      192 |   } catch (error) {
    > 193 |     console.error("Error fetching economic data:", error);
          |             ^
      194 |     // Return 200 with empty data instead of 500
      195 |     res.json({
      196 |       success: true,

      at error (routes/economic.js:193:13)

    console.log
      Economic data endpoint called with limit: 50

      at log (routes/economic.js:168:13)

    console.log
      Economic data endpoint called with limit: 50

      at log (routes/economic.js:168:13)

    console.log
      Economic data endpoint called with limit: 50

      at log (routes/economic.js:168:13)

    console.log
      Economic data endpoint called with limit: 50

      at log (routes/economic.js:168:13)

    console.log
      Economic data endpoint called with limit: 100

      at log (routes/economic.js:168:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Economic Routes Unit Tests ‚Ä∫ GET /economic ‚Ä∫ should handle database errors

    expect(received).toHaveProperty(path, value)

    Expected path: "error"

    Expected value: "Database error"
    Received value: "Failed to fetch economic data"

      189 |       expect(response.status).toBe(500);
      190 |       expect(response.body).toHaveProperty("success", false);
    > 191 |       expect(response.body).toHaveProperty("error", "Database error");
          |                             ^
      192 |       expect(response.body).toHaveProperty(
      193 |         "message",
      194 |         "Database connection failed"

      at Object.toHaveProperty (tests/unit/routes/economic.test.js:191:29)

  ‚óè Economic Routes Unit Tests ‚Ä∫ GET /economic/data ‚Ä∫ should handle database errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      328 |       const response = await request(app).get("/economic/data");
      329 |
    > 330 |       expect(response.status).toBe(500);
          |                               ^
      331 |       expect(response.body).toHaveProperty("success", false);
      332 |       expect(response.body).toHaveProperty("error", "Database error");
      333 |       expect(response.body).toHaveProperty("message", "Query timeout");

      at Object.toBe (tests/unit/routes/economic.test.js:330:31)

  ‚óè Economic Routes Unit Tests ‚Ä∫ Edge cases and error handling ‚Ä∫ should handle invalid page numbers

    TypeError: Cannot read properties of undefined (reading 'page')

      366 |       );
      367 |
    > 368 |       expect(response.body.pagination.page).toBe(1); // Default page
          |                                       ^
      369 |       expect(response.body.pagination.limit).toBe(25); // Default limit
      370 |     });
      371 |

      at Object.page (tests/unit/routes/economic.test.js:368:39)

  ‚óè Economic Routes Unit Tests ‚Ä∫ Edge cases and error handling ‚Ä∫ should handle negative page and limit

    TypeError: Cannot read properties of undefined (reading 'page')

      382 |       const response = await request(app).get("/economic?page=-5&limit=-10");
      383 |
    > 384 |       expect(response.body.pagination.page).toBe(1); // Defaults to 1
          |                                       ^
      385 |       expect(response.body.pagination.limit).toBe(25); // Defaults to 25
      386 |     });
      387 |

      at Object.page (tests/unit/routes/economic.test.js:384:39)

  ‚óè Economic Routes Unit Tests ‚Ä∫ Edge cases and error handling ‚Ä∫ should handle very large page numbers

    expect(received).toMatchObject(expected)

    - Expected  - 2
    + Received  + 2

      Object {
        "hasNext": false,
        "hasPrev": true,
        "limit": 25,
        "page": 999,
    -   "total": 10,
    -   "totalPages": 1,
    +   "total": 50,
    +   "totalPages": 2,
      }

      398 |       const response = await request(app).get("/economic?page=999&limit=25");
      399 |
    > 400 |       expect(response.body.pagination).toMatchObject({
          |                                        ^
      401 |         page: 999,
      402 |         limit: 25,
      403 |         total: 10,

      at Object.toMatchObject (tests/unit/routes/economic.test.js:400:40)

  ‚óè Economic Routes Unit Tests ‚Ä∫ Edge cases and error handling ‚Ä∫ should handle empty series parameter

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "WHERE series_id = $1", ["", 25, 0]
    Received
           1
              "
          SELECT¬∑
            series_id,
            date,
            value
          FROM economic_data¬∑¬∑¬∑¬∑¬∑¬∑¬∑
          ORDER BY series_id, date DESC
          LIMIT $1 OFFSET $2
        ",
              Array [
            -   "",
                25,
                0,
              ],
           2
              "
          SELECT COUNT(*) as total FROM economic_data¬∑
        ",
            - Array [
            -   "",
            -   25,
            -   0,
            - ]
            + Array [],

    Number of calls: 2

      443 |       const response = await request(app).get("/economic?series=");
      444 |
    > 445 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      446 |         expect.stringContaining("WHERE series_id = $1"),
      447 |         ["", 25, 0]
      448 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/economic.test.js:445:25)

  ‚óè Economic Routes Unit Tests ‚Ä∫ Response format validation ‚Ä∫ should maintain consistent error response format

    expect(received).toHaveProperty(path, value)

    Expected path: "success"

    Expected value: false
    Received value: true

      487 |       const response = await request(app).get("/economic");
      488 |
    > 489 |       expect(response.body).toHaveProperty("success", false);
          |                             ^
      490 |       expect(response.body).toHaveProperty("error");
      491 |       expect(response.body).toHaveProperty("message");
      492 |       expect(typeof response.body.error).toBe("string");

      at Object.toHaveProperty (tests/unit/routes/economic.test.js:489:29)

  ‚óè Economic Routes Unit Tests ‚Ä∫ Response format validation ‚Ä∫ should return proper data structure

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 1
    Received array:  [{"total": "1"}]

      504 |
      505 |       expect(Array.isArray(response.body.data)).toBe(true);
    > 506 |       expect(response.body.data).toHaveLength(2);
          |                                  ^
      507 |       expect(response.body.data[0]).toHaveProperty("series_id");
      508 |       expect(response.body.data[0]).toHaveProperty("date");
      509 |       expect(response.body.data[0]).toHaveProperty("value");

      at Object.toHaveLength (tests/unit/routes/economic.test.js:506:34)

FAIL tests/unit/routes/performance.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/health ‚Ä∫ should return health status without authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      76 |       const response = await request(app).get("/performance/health");
      77 |
    > 78 |       expect(response.status).toBe(200);
         |                               ^
      79 |       expect(response.body).toHaveProperty("status", "operational");
      80 |       expect(response.body).toHaveProperty("service", "performance-analytics");
      81 |       expect(response.body).toHaveProperty("timestamp");

      at Object.toBe (tests/unit/routes/performance.test.js:78:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance ‚Ä∫ should return performance API information without authentication

    expect(received).toHaveProperty(path, value)

    Expected path: "message"
    Received path: []

    Expected value: "Performance Analytics API - Ready"
    Received value: {"data": {"max_drawdown": 0.08, "sharpe_ratio": 1.2, "total_return": 0.15, "volatility": 0.12, "win_rate": 0.65}, "success": true, "timestamp": "2025-09-23T16:32:15.370Z"}

       96 |
       97 |       expect(response.status).toBe(200);
    >  98 |       expect(response.body).toHaveProperty(
          |                             ^
       99 |         "message",
      100 |         "Performance Analytics API - Ready"
      101 |       );

      at Object.toHaveProperty (tests/unit/routes/performance.test.js:98:29)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/benchmark (authenticated) ‚Ä∫ should return benchmark comparison with default parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      166 |       const response = await request(app).get("/performance/benchmark");
      167 |
    > 168 |       expect(response.status).toBe(200);
          |                               ^
      169 |       expect(response.body).toHaveProperty("success", true);
      170 |       expect(response.body).toHaveProperty("data");
      171 |       expect(response.body.data).toHaveProperty("portfolio");

      at Object.toBe (tests/unit/routes/performance.test.js:168:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/benchmark (authenticated) ‚Ä∫ should handle custom benchmark parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      188 |         .query({ benchmark: "QQQ" });
      189 |
    > 190 |       expect(response.status).toBe(200);
          |                               ^
      191 |       expect(mockQuery).toHaveBeenCalledWith(
      192 |         expect.stringContaining("QQQ"),
      193 |         expect.any(Array)

      at Object.toBe (tests/unit/routes/performance.test.js:190:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/benchmark (authenticated) ‚Ä∫ should handle custom period parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      204 |         .query({ period: "6m" });
      205 |
    > 206 |       expect(response.status).toBe(200);
          |                               ^
      207 |       expect(mockQuery).toHaveBeenCalledWith(
      208 |         expect.stringContaining("180"), // 6 months = 180 days
      209 |         expect.any(Array)

      at Object.toBe (tests/unit/routes/performance.test.js:206:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/benchmark (authenticated) ‚Ä∫ should handle invalid period gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      220 |         .query({ period: "invalid_period" });
      221 |
    > 222 |       expect(response.status).toBe(200);
          |                               ^
      223 |       // Should default to 365 days (1 year)
      224 |       expect(mockQuery).toHaveBeenCalledWith(
      225 |         expect.stringContaining("365"),

      at Object.toBe (tests/unit/routes/performance.test.js:222:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/benchmark (authenticated) ‚Ä∫ should use authenticated user ID in query

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "user_id", ArrayContaining ["test-user-123"]

    Number of calls: 0

      235 |       await request(app).get("/performance/benchmark");
      236 |
    > 237 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      238 |         expect.stringContaining("user_id"),
      239 |         expect.arrayContaining(["test-user-123"])
      240 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/performance.test.js:237:25)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/benchmark (authenticated) ‚Ä∫ should handle empty portfolio data

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      248 |       const response = await request(app).get("/performance/benchmark");
      249 |
    > 250 |       expect(response.status).toBe(200);
          |                               ^
      251 |       expect(response.body).toHaveProperty("success", true);
      252 |       expect(response.body).toHaveProperty(
      253 |         "message",

      at Object.toBe (tests/unit/routes/performance.test.js:250:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/benchmark (authenticated) ‚Ä∫ should handle database query errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 404

      262 |       const response = await request(app).get("/performance/benchmark");
      263 |
    > 264 |       expect(response.status).toBe(500);
          |                               ^
      265 |       expect(response.body).toHaveProperty("success", false);
      266 |       expect(response.body.error).toBeDefined();
      267 |     });

      at Object.toBe (tests/unit/routes/performance.test.js:264:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/benchmark (authenticated) ‚Ä∫ should handle performance calculation errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 404

      282 |       const response = await request(app).get("/performance/benchmark");
      283 |
    > 284 |       expect(response.status).toBe(500);
          |                               ^
      285 |       expect(response.body).toHaveProperty("success", false);
      286 |       expect(response.body.error).toContain("Failed to fetch performance benchmark data");
      287 |     });

      at Object.toBe (tests/unit/routes/performance.test.js:284:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/analytics (authenticated) ‚Ä∫ should return performance analytics

    expect(received).toHaveProperty(path, value)

    Expected path: "volatility"

    Expected value: 0.15
    Received value: 0.18

      310 |       expect(response.body).toHaveProperty("data");
      311 |       expect(response.body.data).toHaveProperty("total_return", 0.25);
    > 312 |       expect(response.body.data).toHaveProperty("volatility", 0.15);
          |                                  ^
      313 |       expect(
      314 |         mockPerformanceMonitor.getPerformanceAnalytics
      315 |       ).toHaveBeenCalledWith("test-user-123");

      at Object.toHaveProperty (tests/unit/routes/performance.test.js:312:34)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/analytics (authenticated) ‚Ä∫ should handle analytics calculation errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      323 |       const response = await request(app).get("/performance/analytics");
      324 |
    > 325 |       expect(response.status).toBe(500);
          |                               ^
      326 |       expect(response.body).toHaveProperty("success", false);
      327 |       expect(response.body.error).toContain("Failed to fetch performance analytics");
      328 |     });

      at Object.toBe (tests/unit/routes/performance.test.js:325:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/metrics (authenticated) ‚Ä∫ should return system performance metrics

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      346 |       const response = await request(app).get("/performance/metrics");
      347 |
    > 348 |       expect(response.status).toBe(200);
          |                               ^
      349 |       expect(response.body).toHaveProperty("success", true);
      350 |       expect(response.body).toHaveProperty("data");
      351 |       expect(response.body.data).toHaveProperty("cpu_usage", 0.45);

      at Object.toBe (tests/unit/routes/performance.test.js:348:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/metrics (authenticated) ‚Ä∫ should handle metrics collection errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 404

      361 |       const response = await request(app).get("/performance/metrics");
      362 |
    > 363 |       expect(response.status).toBe(500);
          |                               ^
      364 |       expect(response.body).toHaveProperty("success", false);
      365 |       expect(response.body.error).toContain("Failed to retrieve performance metrics");
      366 |     });

      at Object.toBe (tests/unit/routes/performance.test.js:363:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/attribution (authenticated) ‚Ä∫ should return Brinson attribution analysis

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      398 |       const response = await request(app).get("/performance/attribution");
      399 |
    > 400 |       expect(response.status).toBe(200);
          |                               ^
      401 |       expect(response.body).toHaveProperty("success", true);
      402 |       expect(response.body).toHaveProperty("data");
      403 |       expect(response.body.data).toHaveProperty("attribution_analysis");

      at Object.toBe (tests/unit/routes/performance.test.js:400:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/attribution (authenticated) ‚Ä∫ should handle custom benchmark for attribution

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      439 |       );
      440 |
    > 441 |       expect(response.status).toBe(200);
          |                               ^
      442 |       expect(mockQuery).toHaveBeenCalledWith(
      443 |         expect.stringContaining("QQQ"),
      444 |         expect.any(Array)

      at Object.toBe (tests/unit/routes/performance.test.js:441:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/attribution (authenticated) ‚Ä∫ should handle custom period for attribution

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      453 |       );
      454 |
    > 455 |       expect(response.status).toBe(200);
          |                               ^
      456 |       expect(mockQuery).toHaveBeenCalledWith(
      457 |         expect.stringContaining("90"), // 3 months = 90 days
      458 |         expect.any(Array)

      at Object.toBe (tests/unit/routes/performance.test.js:455:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/attribution (authenticated) ‚Ä∫ should handle insufficient data for attribution

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      465 |       const response = await request(app).get("/performance/attribution");
      466 |
    > 467 |       expect(response.status).toBe(200);
          |                               ^
      468 |       expect(response.body).toHaveProperty("success", true);
      469 |       expect(response.body).toHaveProperty(
      470 |         "message",

      at Object.toBe (tests/unit/routes/performance.test.js:467:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/attribution (authenticated) ‚Ä∫ should validate attribution parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 404

      479 |       );
      480 |
    > 481 |       expect(response.status).toBe(400);
          |                               ^
      482 |       expect(response.body).toHaveProperty("success", false);
      483 |       expect(response.body.error).toContain("Invalid benchmark symbol");
      484 |     });

      at Object.toBe (tests/unit/routes/performance.test.js:481:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/portfolio/:symbol (authenticated) ‚Ä∫ should return symbol-specific performance

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      505 |       const response = await request(app).get("/performance/portfolio/AAPL");
      506 |
    > 507 |       expect(response.status).toBe(200);
          |                               ^
      508 |       expect(response.body).toHaveProperty("success", true);
      509 |       expect(response.body).toHaveProperty("data");
      510 |       expect(response.body.data).toHaveProperty("symbol", "AAPL");

      at Object.toBe (tests/unit/routes/performance.test.js:507:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/portfolio/:symbol (authenticated) ‚Ä∫ should handle lowercase symbol conversion

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ArrayContaining ["test-user-123", "AAPL"]

    Number of calls: 0

      521 |       await request(app).get("/performance/portfolio/aapl");
      522 |
    > 523 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      524 |         expect.any(String),
      525 |         expect.arrayContaining(["test-user-123", "AAPL"]) // Should be uppercase
      526 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/performance.test.js:523:25)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/portfolio/:symbol (authenticated) ‚Ä∫ should handle symbol not found

    expect(received).toHaveProperty(path, value)

    Expected path: "success"
    Received path: []

    Expected value: false
    Received value: {}

      533 |
      534 |       expect(response.status).toBe(404);
    > 535 |       expect(response.body).toHaveProperty("success", false);
          |                             ^
      536 |       expect(response.body.error).toContain("No performance data found");
      537 |     });
      538 |   });

      at Object.toHaveProperty (tests/unit/routes/performance.test.js:535:29)

  ‚óè Performance Routes Unit Tests ‚Ä∫ Authentication ‚Ä∫ should allow public access to health endpoint

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      542 |       const response = await request(app).get("/performance/health");
      543 |
    > 544 |       expect(response.status).toBe(200);
          |                               ^
      545 |       // Should work without authentication
      546 |     });
      547 |

      at Object.toBe (tests/unit/routes/performance.test.js:544:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ Parameter validation ‚Ä∫ should validate benchmark symbol format

    expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 404

      567 |         .query({ benchmark: "invalid-benchmark-format!@#" });
      568 |
    > 569 |       expect(response.status).toBe(400);
          |                               ^
      570 |       expect(response.body).toHaveProperty("success", false);
      571 |       expect(response.body.error).toContain("Invalid benchmark symbol");
      572 |     });

      at Object.toBe (tests/unit/routes/performance.test.js:569:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ Parameter validation ‚Ä∫ should sanitize period parameter

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "365", Any<Array>

    Number of calls: 0

      582 |
      583 |       // Should handle malicious input by using predefined period values
    > 584 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      585 |         expect.stringContaining("365"), // Should default to 1y = 365 days
      586 |         expect.any(Array)
      587 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/performance.test.js:584:25)

  ‚óè Performance Routes Unit Tests ‚Ä∫ Error handling ‚Ä∫ should handle database connection timeout

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 404

      597 |       const response = await request(app).get("/performance/benchmark");
      598 |
    > 599 |       expect(response.status).toBe(500);
          |                               ^
      600 |       expect(response.body).toHaveProperty("success", false);
      601 |       expect(response.body.error).toContain("timeout");
      602 |     });

      at Object.toBe (tests/unit/routes/performance.test.js:599:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ Error handling ‚Ä∫ should handle performance monitor failures

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 404

      609 |       const response = await request(app).get("/performance/metrics");
      610 |
    > 611 |       expect(response.status).toBe(500);
          |                               ^
      612 |       expect(response.body).toHaveProperty("success", false);
      613 |       expect(response.body.error).toContain("Monitor unavailable");
      614 |     });

      at Object.toBe (tests/unit/routes/performance.test.js:611:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ Response format ‚Ä∫ should return consistent JSON response format

    expect(received).toMatch(expected)

    Expected pattern: /json/
    Received string:  "text/html; charset=utf-8"

      619 |       const response = await request(app).get("/performance/health");
      620 |
    > 621 |       expect(response.headers["content-type"]).toMatch(/json/);
          |                                                ^
      622 |       expect(typeof response.body).toBe("object");
      623 |     });
      624 |

      at Object.toMatch (tests/unit/routes/performance.test.js:621:48)

  ‚óè Performance Routes Unit Tests ‚Ä∫ Response format ‚Ä∫ should include metadata in performance responses

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      630 |       const response = await request(app).get("/performance/benchmark");
      631 |
    > 632 |       expect(response.status).toBe(200);
          |                               ^
      633 |       expect(response.body).toHaveProperty("success");
      634 |       expect(response.body).toHaveProperty("data");
      635 |     });

      at Object.toBe (tests/unit/routes/performance.test.js:632:31)

(node:1073667) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 alertCreated listeners added to [AlertSystem]. MaxListeners is 10. Use emitter.setMaxListeners() to increase limit
(Use `node --trace-warnings ...` to show where the warning was created)
(node:1073667) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 alertResolved listeners added to [AlertSystem]. MaxListeners is 10. Use emitter.setMaxListeners() to increase limit
(node:1073667) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 notificationSent listeners added to [AlertSystem]. MaxListeners is 10. Use emitter.setMaxListeners() to increase limit
FAIL tests/unit/utils/liveDataManager.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.error
      Failed to subscribe user AAPL to symbols: TypeError: Cannot read properties of undefined (reading 'length')
          at LiveDataManager.length [as subscribe] (/home/stocks/algo/webapp/lambda/utils/liveDataManager.js:1342:41)
          at Object.subscribe (/home/stocks/algo/webapp/lambda/tests/unit/utils/liveDataManager.test.js:231:23)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      1378 |       };
      1379 |     } catch (error) {
    > 1380 |       console.error(`Failed to subscribe user ${userId} to symbols:`, error);
           |               ^
      1381 |       return {
      1382 |         success: false,
      1383 |         error: error.message,

      at LiveDataManager.error [as subscribe] (utils/liveDataManager.js:1380:15)
      at Object.subscribe (tests/unit/utils/liveDataManager.test.js:231:23)

    console.error
      Failed to subscribe user GOOGL to symbols: TypeError: Cannot read properties of undefined (reading 'length')
          at LiveDataManager.length [as subscribe] (/home/stocks/algo/webapp/lambda/utils/liveDataManager.js:1342:41)
          at Object.subscribe (/home/stocks/algo/webapp/lambda/tests/unit/utils/liveDataManager.test.js:232:23)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      1378 |       };
      1379 |     } catch (error) {
    > 1380 |       console.error(`Failed to subscribe user ${userId} to symbols:`, error);
           |               ^
      1381 |       return {
      1382 |         success: false,
      1383 |         error: error.message,

      at LiveDataManager.error [as subscribe] (utils/liveDataManager.js:1380:15)
      at Object.subscribe (tests/unit/utils/liveDataManager.test.js:232:23)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.error
      Failed to subscribe user AAPL to symbols: TypeError: Cannot read properties of undefined (reading 'length')
          at LiveDataManager.length [as subscribe] (/home/stocks/algo/webapp/lambda/utils/liveDataManager.js:1342:41)
          at Object.subscribe (/home/stocks/algo/webapp/lambda/tests/unit/utils/liveDataManager.test.js:240:23)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      1378 |       };
      1379 |     } catch (error) {
    > 1380 |       console.error(`Failed to subscribe user ${userId} to symbols:`, error);
           |               ^
      1381 |       return {
      1382 |         success: false,
      1383 |         error: error.message,

      at LiveDataManager.error [as subscribe] (utils/liveDataManager.js:1380:15)
      at Object.subscribe (tests/unit/utils/liveDataManager.test.js:240:23)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.error
      Failed to subscribe user AAPL to symbols: TypeError: Cannot read properties of undefined (reading 'length')
          at LiveDataManager.length [as subscribe] (/home/stocks/algo/webapp/lambda/utils/liveDataManager.js:1342:41)
          at Object.subscribe (/home/stocks/algo/webapp/lambda/tests/unit/utils/liveDataManager.test.js:248:23)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      1378 |       };
      1379 |     } catch (error) {
    > 1380 |       console.error(`Failed to subscribe user ${userId} to symbols:`, error);
           |               ^
      1381 |       return {
      1382 |         success: false,
      1383 |         error: error.message,

      at LiveDataManager.error [as subscribe] (utils/liveDataManager.js:1380:15)
      at Object.subscribe (tests/unit/utils/liveDataManager.test.js:248:23)

    console.error
      Failed to subscribe user GOOGL to symbols: TypeError: Cannot read properties of undefined (reading 'length')
          at LiveDataManager.length [as subscribe] (/home/stocks/algo/webapp/lambda/utils/liveDataManager.js:1342:41)
          at Object.subscribe (/home/stocks/algo/webapp/lambda/tests/unit/utils/liveDataManager.test.js:249:23)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      1378 |       };
      1379 |     } catch (error) {
    > 1380 |       console.error(`Failed to subscribe user ${userId} to symbols:`, error);
           |               ^
      1381 |       return {
      1382 |         success: false,
      1383 |         error: error.message,

      at LiveDataManager.error [as subscribe] (utils/liveDataManager.js:1380:15)
      at Object.subscribe (tests/unit/utils/liveDataManager.test.js:249:23)

    console.error
      Failed to subscribe user TSLA to symbols: TypeError: Cannot read properties of undefined (reading 'length')
          at LiveDataManager.length [as subscribe] (/home/stocks/algo/webapp/lambda/utils/liveDataManager.js:1342:41)
          at Object.subscribe (/home/stocks/algo/webapp/lambda/tests/unit/utils/liveDataManager.test.js:250:23)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      1378 |       };
      1379 |     } catch (error) {
    > 1380 |       console.error(`Failed to subscribe user ${userId} to symbols:`, error);
           |               ^
      1381 |       return {
      1382 |         success: false,
      1383 |         error: error.message,

      at LiveDataManager.error [as subscribe] (utils/liveDataManager.js:1380:15)
      at Object.subscribe (tests/unit/utils/liveDataManager.test.js:250:23)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Live Data Manager ‚Ä∫ data provider management ‚Ä∫ should initialize with default providers

    expect(received).toBeGreaterThan(expected)

    Matcher error: received value must be a number or bigint

    Received has value: undefined

      15 |     test("should initialize with default providers", () => {
      16 |       expect(liveDataManager.providers).toBeDefined();
    > 17 |       expect(liveDataManager.providers.length).toBeGreaterThan(0);
         |                                                ^
      18 |     });
      19 |
      20 |     test("should add new data provider", () => {

      at Object.toBeGreaterThan (tests/unit/utils/liveDataManager.test.js:17:48)

  ‚óè Live Data Manager ‚Ä∫ data provider management ‚Ä∫ should add new data provider

    TypeError: liveDataManager.addProvider is not a function

      26 |       };
      27 |
    > 28 |       const result = liveDataManager.addProvider(provider);
         |                                      ^
      29 |       expect(result.success).toBe(true);
      30 |       expect(
      31 |         liveDataManager.providers.some((p) => p.name === "testProvider")

      at Object.addProvider (tests/unit/utils/liveDataManager.test.js:28:38)

  ‚óè Live Data Manager ‚Ä∫ data provider management ‚Ä∫ should validate provider configuration

    TypeError: liveDataManager.validateProvider is not a function

      39 |       };
      40 |
    > 41 |       const result = liveDataManager.validateProvider(invalidProvider);
         |                                      ^
      42 |       expect(result.valid).toBe(false);
      43 |       expect(result.errors).toBeDefined();
      44 |     });

      at Object.validateProvider (tests/unit/utils/liveDataManager.test.js:41:38)

  ‚óè Live Data Manager ‚Ä∫ data provider management ‚Ä∫ should get provider status

    expect(received).toHaveProperty(path)

    Expected path: "lastUpdate"
    Received path: []

    Received value: {"connections": Map {}, "metrics": {"errors": [], "latency": [], "successRate": 100, "uptime": 0}, "name": "Alpaca Markets", "rateLimits": {"costPerRequest": 0, "maxConcurrentConnections": 1, "monthlyQuota": 1000000, "requestsPerMinute": 200}, "status": "idle", "symbols": Set {}, "usage": {"lastReset": "2025-09-23", "requestsThisMonth": 0, "requestsToday": 0, "totalCost": 0}}

      48 |
      49 |       expect(result).toHaveProperty("status");
    > 50 |       expect(result).toHaveProperty("lastUpdate");
         |                      ^
      51 |       expect(result).toHaveProperty("health");
      52 |     });
      53 |   });

      at Object.toHaveProperty (tests/unit/utils/liveDataManager.test.js:50:22)

  ‚óè Live Data Manager ‚Ä∫ real-time data streaming ‚Ä∫ should start data stream for symbol

    TypeError: liveDataManager.startStream is not a function

      57 |       const mockCallback = jest.fn();
      58 |
    > 59 |       const result = await liveDataManager.startStream("AAPL", mockCallback);
         |                                            ^
      60 |
      61 |       expect(result.success).toBe(true);
      62 |       expect(result.streamId).toBeDefined();

      at Object.startStream (tests/unit/utils/liveDataManager.test.js:59:44)

  ‚óè Live Data Manager ‚Ä∫ real-time data streaming ‚Ä∫ should stop data stream

    TypeError: liveDataManager.startStream is not a function

      65 |     test("should stop data stream", async () => {
      66 |       const mockCallback = jest.fn();
    > 67 |       const stream = await liveDataManager.startStream("AAPL", mockCallback);
         |                                            ^
      68 |
      69 |       const result = await liveDataManager.stopStream(stream.streamId);
      70 |

      at Object.startStream (tests/unit/utils/liveDataManager.test.js:67:44)

  ‚óè Live Data Manager ‚Ä∫ real-time data streaming ‚Ä∫ should handle multiple symbol streams

    TypeError: liveDataManager.startStream is not a function

      78 |       const results = await Promise.all(
      79 |         symbols.map((symbol) =>
    > 80 |           liveDataManager.startStream(symbol, mockCallback)
         |                           ^
      81 |         )
      82 |       );
      83 |

      at startStream (tests/unit/utils/liveDataManager.test.js:80:27)
          at Array.map (<anonymous>)
      at Object.map (tests/unit/utils/liveDataManager.test.js:79:17)

  ‚óè Live Data Manager ‚Ä∫ real-time data streaming ‚Ä∫ should process incoming market data

    TypeError: liveDataManager.processMarketData is not a function

      94 |       };
      95 |
    > 96 |       const result = liveDataManager.processMarketData(marketData);
         |                                      ^
      97 |
      98 |       expect(result.success).toBe(true);
      99 |       expect(result.processed).toBeDefined();

      at Object.processMarketData (tests/unit/utils/liveDataManager.test.js:96:38)

  ‚óè Live Data Manager ‚Ä∫ data caching and storage ‚Ä∫ should cache market data

    TypeError: liveDataManager.cacheData is not a function

      109 |       };
      110 |
    > 111 |       liveDataManager.cacheData("AAPL", data);
          |                       ^
      112 |       const cached = liveDataManager.getCachedData("AAPL");
      113 |
      114 |       expect(cached).toMatchObject(data);

      at Object.cacheData (tests/unit/utils/liveDataManager.test.js:111:23)

  ‚óè Live Data Manager ‚Ä∫ data caching and storage ‚Ä∫ should handle cache expiration

    TypeError: liveDataManager.cacheData is not a function

      122 |       };
      123 |
    > 124 |       liveDataManager.cacheData("AAPL", data);
          |                       ^
      125 |       const cached = liveDataManager.getCachedData("AAPL");
      126 |
      127 |       expect(cached).toBeNull();

      at Object.cacheData (tests/unit/utils/liveDataManager.test.js:124:23)

  ‚óè Live Data Manager ‚Ä∫ data caching and storage ‚Ä∫ should store data to database

    TypeError: liveDataManager.storeData is not a function

      138 |       query.mockResolvedValue({ rowCount: 1 });
      139 |
    > 140 |       const result = await liveDataManager.storeData(data);
          |                                            ^
      141 |
      142 |       expect(result.success).toBe(true);
      143 |       expect(query).toHaveBeenCalledWith(

      at Object.storeData (tests/unit/utils/liveDataManager.test.js:140:44)

  ‚óè Live Data Manager ‚Ä∫ rate limiting and throttling ‚Ä∫ should reset rate limit counters

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: undefined

      169 |       const result = liveDataManager.makeRequest("testProvider", "/test");
      170 |
    > 171 |       expect(result.rateLimited).toBe(false);
          |                                  ^
      172 |     });
      173 |
      174 |     test("should get rate limit status", () => {

      at Object.toBe (tests/unit/utils/liveDataManager.test.js:171:34)

  ‚óè Live Data Manager ‚Ä∫ rate limiting and throttling ‚Ä∫ should get rate limit status

    TypeError: liveDataManager.getRateLimitStatus is not a function

      173 |
      174 |     test("should get rate limit status", () => {
    > 175 |       const status = liveDataManager.getRateLimitStatus("alpaca");
          |                                      ^
      176 |
      177 |       expect(status).toHaveProperty("remaining");
      178 |       expect(status).toHaveProperty("resetTime");

      at Object.getRateLimitStatus (tests/unit/utils/liveDataManager.test.js:175:38)

  ‚óè Live Data Manager ‚Ä∫ data quality and validation ‚Ä∫ should validate market data format

    TypeError: liveDataManager.validateData is not a function

      190 |       };
      191 |
    > 192 |       const result = liveDataManager.validateData(validData);
          |                                      ^
      193 |       expect(result.valid).toBe(true);
      194 |     });
      195 |

      at Object.validateData (tests/unit/utils/liveDataManager.test.js:192:38)

  ‚óè Live Data Manager ‚Ä∫ data quality and validation ‚Ä∫ should reject invalid market data

    TypeError: liveDataManager.validateData is not a function

      201 |       };
      202 |
    > 203 |       const result = liveDataManager.validateData(invalidData);
          |                                      ^
      204 |       expect(result.valid).toBe(false);
      205 |       expect(result.errors).toBeDefined();
      206 |     });

      at Object.validateData (tests/unit/utils/liveDataManager.test.js:203:38)

  ‚óè Live Data Manager ‚Ä∫ data quality and validation ‚Ä∫ should detect stale data

    TypeError: liveDataManager.isDataStale is not a function

      213 |       };
      214 |
    > 215 |       const result = liveDataManager.isDataStale(staleData);
          |                                      ^
      216 |       expect(result).toBe(true);
      217 |     });
      218 |

      at Object.isDataStale (tests/unit/utils/liveDataManager.test.js:215:38)

  ‚óè Live Data Manager ‚Ä∫ data quality and validation ‚Ä∫ should calculate data freshness

    TypeError: liveDataManager.calculateFreshness is not a function

      222 |       };
      223 |
    > 224 |       const freshness = liveDataManager.calculateFreshness(data);
          |                                         ^
      225 |       expect(freshness).toBeCloseTo(60, -1); // approximately 60 seconds
      226 |     });
      227 |   });

      at Object.calculateFreshness (tests/unit/utils/liveDataManager.test.js:224:41)

  ‚óè Live Data Manager ‚Ä∫ subscription management ‚Ä∫ should manage symbol subscriptions

    TypeError: liveDataManager.getSubscriptions is not a function

      232 |       liveDataManager.subscribe("GOOGL");
      233 |
    > 234 |       const subscriptions = liveDataManager.getSubscriptions();
          |                                             ^
      235 |       expect(subscriptions).toContain("AAPL");
      236 |       expect(subscriptions).toContain("GOOGL");
      237 |     });

      at Object.getSubscriptions (tests/unit/utils/liveDataManager.test.js:234:45)

  ‚óè Live Data Manager ‚Ä∫ subscription management ‚Ä∫ should unsubscribe from symbols

    TypeError: liveDataManager.unsubscribe is not a function

      239 |     test("should unsubscribe from symbols", () => {
      240 |       liveDataManager.subscribe("AAPL");
    > 241 |       liveDataManager.unsubscribe("AAPL");
          |                       ^
      242 |
      243 |       const subscriptions = liveDataManager.getSubscriptions();
      244 |       expect(subscriptions).not.toContain("AAPL");

      at Object.unsubscribe (tests/unit/utils/liveDataManager.test.js:241:23)

  ‚óè Live Data Manager ‚Ä∫ subscription management ‚Ä∫ should get subscription statistics

    TypeError: liveDataManager.getSubscriptionStats is not a function

      250 |       liveDataManager.subscribe("TSLA");
      251 |
    > 252 |       const stats = liveDataManager.getSubscriptionStats();
          |                                     ^
      253 |       expect(stats.total).toBe(3);
      254 |       expect(stats.active).toBeDefined();
      255 |     });

      at Object.getSubscriptionStats (tests/unit/utils/liveDataManager.test.js:252:37)

  ‚óè Live Data Manager ‚Ä∫ error handling and recovery ‚Ä∫ should handle provider connection errors

    TypeError: liveDataManager.testConnection is not a function

      258 |   describe("error handling and recovery", () => {
      259 |     test("should handle provider connection errors", async () => {
    > 260 |       const result = await liveDataManager.testConnection("invalidProvider");
          |                                            ^
      261 |
      262 |       expect(result.success).toBe(false);
      263 |       expect(result.error).toBeDefined();

      at Object.testConnection (tests/unit/utils/liveDataManager.test.js:260:44)

  ‚óè Live Data Manager ‚Ä∫ error handling and recovery ‚Ä∫ should implement retry logic for failed requests

    TypeError: liveDataManager.retryRequest is not a function

      271 |         .mockResolvedValue({ success: true });
      272 |
    > 273 |       const result = await liveDataManager.retryRequest(mockRetryCallback, 3);
          |                                            ^
      274 |
      275 |       expect(result.success).toBe(true);
      276 |       expect(mockRetryCallback).toHaveBeenCalledTimes(3);

      at Object.retryRequest (tests/unit/utils/liveDataManager.test.js:273:44)

  ‚óè Live Data Manager ‚Ä∫ error handling and recovery ‚Ä∫ should handle websocket disconnections

    TypeError: liveDataManager.handleWebSocketError is not a function

      280 |       const mockWs = { readyState: 3 }; // CLOSED
      281 |
    > 282 |       const result = liveDataManager.handleWebSocketError(
          |                                      ^
      283 |         mockWs,
      284 |         new Error("Connection lost")
      285 |       );

      at Object.handleWebSocketError (tests/unit/utils/liveDataManager.test.js:282:38)

  ‚óè Live Data Manager ‚Ä∫ error handling and recovery ‚Ä∫ should implement circuit breaker pattern

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: undefined

      302 |       );
      303 |
    > 304 |       expect(result.circuitOpen).toBe(true);
          |                                  ^
      305 |       expect(result.error).toContain("Circuit breaker");
      306 |     });
      307 |   });

      at Object.toBe (tests/unit/utils/liveDataManager.test.js:304:34)

  ‚óè Live Data Manager ‚Ä∫ performance monitoring ‚Ä∫ should track request latency

    TypeError: liveDataManager.getPerformanceMetrics is not a function

      312 |       await liveDataManager.makeRequest("testProvider", "/quote/AAPL");
      313 |
    > 314 |       const metrics = liveDataManager.getPerformanceMetrics();
          |                                       ^
      315 |       expect(metrics.averageLatency).toBeDefined();
      316 |       expect(metrics.requestCount).toBeGreaterThan(0);
      317 |     });

      at Object.getPerformanceMetrics (tests/unit/utils/liveDataManager.test.js:314:39)

  ‚óè Live Data Manager ‚Ä∫ performance monitoring ‚Ä∫ should monitor data throughput

    TypeError: liveDataManager.processMarketData is not a function

      319 |     test("should monitor data throughput", () => {
      320 |       for (let i = 0; i < 10; i++) {
    > 321 |         liveDataManager.processMarketData({
          |                         ^
      322 |           symbol: "AAPL",
      323 |           price: 150 + i,
      324 |           timestamp: Date.now(),

      at Object.processMarketData (tests/unit/utils/liveDataManager.test.js:321:25)

FAIL tests/unit/middleware/errorHandler.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Error Handler Middleware ‚Ä∫ Generic Error Handling ‚Ä∫ should log error details

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "Error occurred:", ObjectContaining {"message": "Generic error message", "method": "GET", "stack": Any<String>, "timestamp": Any<String>, "url": "/test-generic-error"}
    Received: "AWS Lambda Error:", "{
      \"message\": \"Generic error message\",
      \"url\": \"/test-generic-error\",
      \"method\": \"GET\",
      \"timestamp\": \"2025-09-23T16:32:15.608Z\",
      \"environment\": \"test\"
    }"

    Number of calls: 1

      116 |       await request(app).get("/test-generic-error");
      117 |
    > 118 |       expect(consoleErrorSpy).toHaveBeenCalledWith(
          |                               ^
      119 |         "Error occurred:",
      120 |         expect.objectContaining({
      121 |           message: "Generic error message",

      at Object.toHaveBeenCalledWith (tests/unit/middleware/errorHandler.test.js:118:31)

FAIL tests/unit/utils/riskEngine.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      {"timestamp":"2025-09-23T16:32:15.737Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Stock returns calculation failed for AAPL:","correlationId":"cfbfcffb","severity":"ERROR"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Risk Engine ‚Ä∫ risk limit monitoring ‚Ä∫ should monitor leverage limits

    expect(received).toBeCloseTo(expected, precision)

    Expected: 1.67
    Received: 0

    Expected precision:    2
    Expected difference: < 0.005
    Received difference:   1.67

      177 |       const check = riskEngine.checkLeverageLimits(portfolio, limits);
      178 |
    > 179 |       expect(check.currentLeverage).toBeCloseTo(1.67, 2);
          |                                     ^
      180 |       expect(check.exceeded).toBe(true);
      181 |     });
      182 |

      at Object.toBeCloseTo (tests/unit/utils/riskEngine.test.js:179:37)

  ‚óè Risk Engine ‚Ä∫ error handling and edge cases ‚Ä∫ should handle missing price data

    expect(received).toBeNull()

    Received: 0.2

      380 |       const volatility = await riskEngine.calculateVolatility("INVALID", 30);
      381 |
    > 382 |       expect(volatility).toBeNull();
          |                          ^
      383 |     });
      384 |
      385 |     test("should handle portfolio with zero weights", () => {

      at Object.toBeNull (tests/unit/utils/riskEngine.test.js:382:26)

  ‚óè Risk Engine ‚Ä∫ error handling and edge cases ‚Ä∫ should handle database connection errors

    expect(received).toBeNull()

    Received: 0.2

      411 |       const result = await riskEngine.calculateVolatility("AAPL", 30);
      412 |
    > 413 |       expect(result).toBeNull();
          |                      ^
      414 |     });
      415 |   });
      416 | });

      at Object.toBeNull (tests/unit/utils/riskEngine.test.js:413:22)

FAIL tests/unit/services/aiStrategyGenerator.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè AIStrategyGenerator Service ‚Ä∫ generateFromNaturalLanguage ‚Ä∫ should handle errors gracefully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "Strategy generation failed", ObjectContaining {"error": Any<Error>}
    Received: "Strategy generation failed", {"correlationId": "ai-strategy-1758645135808-w2lx0enxc", "error": "Service error"}

    Number of calls: 1

      165 |       expect(result.success).toBe(false);
      166 |       expect(result.error).toContain("Failed to generate strategy");
    > 167 |       expect(mockLogger.error).toHaveBeenCalledWith(
          |                                ^
      168 |         "Strategy generation failed",
      169 |         expect.objectContaining({
      170 |           error: expect.any(Error),

      at Object.toHaveBeenCalledWith (tests/unit/services/aiStrategyGenerator.test.js:167:32)

  ‚óè AIStrategyGenerator Service ‚Ä∫ generateWithClaude ‚Ä∫ should attempt Claude generation but fail due to configuration

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      181 |       const result = await generator.generateWithClaude(prompt, symbols);
      182 |
    > 183 |       expect(result.success).toBe(false);
          |                              ^
      184 |       expect(result.error).toContain("Claude AI service not configured");
      185 |       expect(mockLogger.warn).toHaveBeenCalledWith(
      186 |         "Claude AI service not available, using template fallback"

      at Object.toBe (tests/unit/services/aiStrategyGenerator.test.js:183:30)

  ‚óè AIStrategyGenerator Service ‚Ä∫ generateWithClaude ‚Ä∫ should handle Claude configuration errors

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      194 |       const result = await generator.generateWithClaude(prompt);
      195 |
    > 196 |       expect(result.success).toBe(false);
          |                              ^
      197 |       expect(result.error).toBeDefined();
      198 |     });
      199 |   });

      at Object.toBe (tests/unit/services/aiStrategyGenerator.test.js:196:30)

  ‚óè AIStrategyGenerator Service ‚Ä∫ generateWithTemplates ‚Ä∫ should generate momentum strategy from template

    expect(received).toBe(expected) // Object.is equality

    Expected: "template"
    Received: undefined

      211 |       expect(result.strategy.parameters).toHaveProperty("short_window");
      212 |       expect(result.strategy.parameters).toHaveProperty("long_window");
    > 213 |       expect(result.source).toBe("template");
          |                             ^
      214 |     });
      215 |
      216 |     test("should generate mean reversion strategy from template", async () => {

      at Object.toBe (tests/unit/services/aiStrategyGenerator.test.js:213:29)

  ‚óè AIStrategyGenerator Service ‚Ä∫ generateWithTemplates ‚Ä∫ should generate mean reversion strategy from template

    expect(received).toContain(expected) // indexOf

    Expected substring: "Mean Reversion"
    Received string:    "Mean_reversion-Multi-Asset-Trade-2025-09-23"

      221 |
      222 |       expect(result.success).toBe(true);
    > 223 |       expect(result.strategy.name).toContain("Mean Reversion");
          |                                    ^
      224 |       expect(result.strategy.parameters).toHaveProperty("rsi_period");
      225 |       expect(result.strategy.parameters).toHaveProperty("oversold_threshold");
      226 |     });

      at Object.toContain (tests/unit/services/aiStrategyGenerator.test.js:223:36)

  ‚óè AIStrategyGenerator Service ‚Ä∫ generateWithTemplates ‚Ä∫ should handle empty symbols gracefully

    No symbols available for strategy generation. Symbol data service must be configured and accessible for AI strategy creation.

      425 |   filterSymbolsByIntent(intent, availableSymbols) {
      426 |     if (!availableSymbols || availableSymbols.length === 0) {
    > 427 |       throw new Error(
          |             ^
      428 |         "No symbols available for strategy generation. Symbol data service must be configured and accessible for AI strategy creation."
      429 |       );
      430 |     }

      at AIStrategyGenerator.filterSymbolsByIntent (services/aiStrategyGenerator.js:427:13)
      at AIStrategyGenerator.filterSymbolsByIntent (services/aiStrategyGenerator.js:224:34)
      at Object.<anonymous> (tests/unit/services/aiStrategyGenerator.test.js:254:22)

  ‚óè AIStrategyGenerator Service ‚Ä∫ parseIntent ‚Ä∫ should parse buy intent correctly

    expect(received).toBe(expected) // Object.is equality

    Expected: "buy"
    Received: "unknown"

      269 |       for (const prompt of prompts) {
      270 |         const intent = await generator.parseIntent(prompt);
    > 271 |         expect(intent.action).toBe("buy");
          |                               ^
      272 |       }
      273 |     });
      274 |

      at Object.toBe (tests/unit/services/aiStrategyGenerator.test.js:271:31)

  ‚óè AIStrategyGenerator Service ‚Ä∫ parseIntent ‚Ä∫ should parse sell intent correctly

    expect(received).toBe(expected) // Object.is equality

    Expected: "sell"
    Received: "unknown"

      282 |       for (const prompt of prompts) {
      283 |         const intent = await generator.parseIntent(prompt);
    > 284 |         expect(intent.action).toBe("sell");
          |                               ^
      285 |       }
      286 |     });
      287 |

      at Object.toBe (tests/unit/services/aiStrategyGenerator.test.js:284:31)

  ‚óè AIStrategyGenerator Service ‚Ä∫ parseIntent ‚Ä∫ should parse strategy types correctly

    expect(received).toBe(expected) // Object.is equality

    Expected: "momentum"
    Received: undefined

      302 |       for (const testCase of testCases) {
      303 |         const intent = await generator.parseIntent(testCase.prompt);
    > 304 |         expect(intent.strategyType).toBe(testCase.expectedType);
          |                                     ^
      305 |       }
      306 |     });
      307 |

      at Object.toBe (tests/unit/services/aiStrategyGenerator.test.js:304:37)

  ‚óè AIStrategyGenerator Service ‚Ä∫ parseIntent ‚Ä∫ should identify timeframes from prompt

    expect(received).toBe(expected) // Object.is equality

    Expected: "5min"
    Received: "1min"

      325 |       for (const testCase of testCases) {
      326 |         const intent = await generator.parseIntent(testCase.prompt);
    > 327 |         expect(intent.timeframe).toBe(testCase.expected);
          |                                  ^
      328 |       }
      329 |     });
      330 |

      at Object.toBe (tests/unit/services/aiStrategyGenerator.test.js:327:34)

  ‚óè AIStrategyGenerator Service ‚Ä∫ generateStrategyCode ‚Ä∫ should generate code for momentum strategy

    expect(received).toContain(expected) // indexOf

    Expected substring: "def momentum_strategy"
    Received string:    "# AI Generated Strategy: undefined
    # Generated on: 2025-09-23T16:32:15.841Z¬∑¬∑
    # Filter to specific symbols of interest
    target_symbols = [\"AAPL\"]
    data_frames = {k: v for k, v in data_frames.items() if k in target_symbols}¬∑
    # Momentum Strategy Template
    # Buys when short MA crosses above long MA, sells when opposite¬∑
    import pandas as pd
    import numpy as np¬∑
    # Strategy Parameters
    short_window = parameters.get('short_window', 10)
    long_window = parameters.get('long_window', 30)
    position_size = parameters.get('position_size', 0.1)¬∑
    # Process each symbol
    for symbol in data_frames.keys():
        df = data_frames[symbol]¬∑¬∑¬∑¬∑¬∑
        if len(df) < long_window:
            continue¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑
        # Calculate moving averages
        df['SMA_short'] = df['close'].rolling(window=short_window).mean()
        df['SMA_long'] = df['close'].rolling(window=long_window).mean()¬∑¬∑¬∑¬∑¬∑
        # Get current values
        current_price = df['close'].iloc[-1]
        current_short_ma = df['SMA_short'].iloc[-1]
        current_long_ma = df['SMA_long'].iloc[-1]¬∑¬∑¬∑¬∑¬∑
        # Previous values for crossover detection
        prev_short_ma = df['SMA_short'].iloc[-2] if len(df) > 1 else current_short_ma
        prev_long_ma = df['SMA_long'].iloc[-2] if len(df) > 1 else current_long_ma¬∑¬∑¬∑¬∑¬∑
        # Check for crossover signals
        golden_cross = (current_short_ma > current_long_ma and prev_short_ma <= prev_long_ma)
        death_cross = (current_short_ma < current_long_ma and prev_short_ma >= prev_long_ma)¬∑¬∑¬∑¬∑¬∑
        # Calculate position size
        portfolio_value = context.portfolio_value
        dollar_amount = portfolio_value * position_size
        shares = int(dollar_amount / current_price)¬∑¬∑¬∑¬∑¬∑
        # Generate signals
        if golden_cross and shares > 0:
            success = context.buy(symbol, shares, current_price)
            signals.append({
                'action': 'BUY',
                'symbol': symbol,
                'shares': shares,
                'price': current_price,
                'reason': 'Golden Cross',
                'short_ma': current_short_ma,
                'long_ma': current_long_ma,
                'success': success
            })
        elif death_cross:
            # Sell existing position
            current_position = context.get_position(symbol)
            if current_position > 0:
                success = context.sell(symbol, current_position, current_price)
                signals.append({
                    'action': 'SELL',
                    'symbol': symbol,
                    'shares': current_position,
                    'price': current_price,
                    'reason': 'Death Cross',
                    'short_ma': current_short_ma,
                    'long_ma': current_long_ma,
                    'success': success
                })¬∑
    # Log strategy performance
    signals.append({
        'info': f'Processed {len(data_frames)} symbols with momentum strategy',
        'parameters': {
            'short_window': short_window,
            'long_window': long_window,
            'position_size': position_size
        }
    })"

      353 |       );
      354 |
    > 355 |       expect(code).toContain("def momentum_strategy");
          |                    ^
      356 |       expect(code).toContain("short_window");
      357 |       expect(code).toContain("long_window");
      358 |       expect(code).toContain("context.buy");

      at Object.toContain (tests/unit/services/aiStrategyGenerator.test.js:355:20)

  ‚óè AIStrategyGenerator Service ‚Ä∫ generateStrategyCode ‚Ä∫ should generate code for mean reversion strategy

    expect(received).toContain(expected) // indexOf

    Expected substring: "def mean_reversion_strategy"
    Received string:    "# AI Generated Strategy: undefined
    # Generated on: 2025-09-23T16:32:15.842Z¬∑¬∑
    # Filter to specific symbols of interest
    target_symbols = [\"MSFT\"]
    data_frames = {k: v for k, v in data_frames.items() if k in target_symbols}¬∑
    # Mean Reversion Strategy Template
    # Uses RSI to identify oversold/overbought conditions¬∑
    import pandas as pd
    import numpy as np¬∑
    # Strategy Parameters
    rsi_period = parameters.get('rsi_period', 14)
    oversold_threshold = parameters.get('oversold_threshold', 30)
    overbought_threshold = parameters.get('overbought_threshold', 70)
    position_size = parameters.get('position_size', 0.1)¬∑
    def calculate_rsi(prices, period=14):
        \"\"\"Calculate RSI indicator\"\"\"
        delta = prices.diff()
        gain = (delta.where(delta > 0, 0)).rolling(window=period).mean()
        loss = (-delta.where(delta < 0, 0)).rolling(window=period).mean()
        rs = gain / loss
        rsi = 100 - (100 / (1 + rs))
        return rsi¬∑
    # Process each symbol
    for symbol in data_frames.keys():
        df = data_frames[symbol]¬∑¬∑¬∑¬∑¬∑
        if len(df) < rsi_period + 1:
            continue¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑
        # Calculate RSI
        df['RSI'] = calculate_rsi(df['close'], rsi_period)¬∑¬∑¬∑¬∑¬∑
        # Get current values
        current_price = df['close'].iloc[-1]
        current_rsi = df['RSI'].iloc[-1]¬∑¬∑¬∑¬∑¬∑
        # Skip if RSI not available
        if pd.isna(current_rsi):
            continue¬∑¬∑¬∑¬∑¬∑
        # Calculate position size
        portfolio_value = context.portfolio_value
        dollar_amount = portfolio_value * position_size
        shares = int(dollar_amount / current_price)¬∑¬∑¬∑¬∑¬∑
        # Generate signals based on RSI
        if current_rsi < oversold_threshold and shares > 0:
            # Oversold - Buy signal
            success = context.buy(symbol, shares, current_price)
            signals.append({
                'action': 'BUY',
                'symbol': symbol,
                'shares': shares,
                'price': current_price,
                'reason': 'RSI Oversold',
                'rsi': current_rsi,
                'threshold': oversold_threshold,
                'success': success
            })
        elif current_rsi > overbought_threshold:
            # Overbought - Sell signal
            current_position = context.get_position(symbol)
            if current_position > 0:
                success = context.sell(symbol, current_position, current_price)
                signals.append({
                    'action': 'SELL',
                    'symbol': symbol,
                    'shares': current_position,
                    'price': current_price,
                    'reason': 'RSI Overbought',
                    'rsi': current_rsi,
                    'threshold': overbought_threshold,
                    'success': success
                })¬∑
    # Log strategy performance
    signals.append({
        'info': f'Processed {len(data_frames)} symbols with mean reversion strategy',
        'parameters': {
            'rsi_period': rsi_period,
            'oversold_threshold': oversold_threshold,
            'overbought_threshold': overbought_threshold,
            'position_size': position_size
        }
    })"

      376 |       );
      377 |
    > 378 |       expect(code).toContain("def mean_reversion_strategy");
          |                    ^
      379 |       expect(code).toContain("rsi_period");
      380 |       expect(code).toContain("oversold_threshold");
      381 |       expect(code).toContain("overbought_threshold");

      at Object.toContain (tests/unit/services/aiStrategyGenerator.test.js:378:20)

  ‚óè AIStrategyGenerator Service ‚Ä∫ generateStrategyCode ‚Ä∫ should generate code for breakout strategy

    expect(received).toContain(expected) // indexOf

    Expected substring: "def breakout_strategy"
    Received string:    "# AI Generated Strategy: undefined
    # Generated on: 2025-09-23T16:32:15.842Z¬∑¬∑
    # Filter to specific symbols of interest
    target_symbols = [\"GOOGL\"]
    data_frames = {k: v for k, v in data_frames.items() if k in target_symbols}¬∑
    # Breakout Strategy Template
    # Uses Bollinger Bands to identify breakout opportunities¬∑
    import pandas as pd
    import numpy as np¬∑
    # Strategy Parameters
    bb_period = parameters.get('bb_period', 20)
    bb_std = parameters.get('bb_std', 2)
    volume_threshold = parameters.get('volume_threshold', 1.5)
    position_size = parameters.get('position_size', 0.1)¬∑
    def calculate_bollinger_bands(prices, period=20, std_dev=2):
        \"\"\"Calculate Bollinger Bands\"\"\"
        sma = prices.rolling(window=period).mean()
        std = prices.rolling(window=period).std()
        upper_band = sma + (std * std_dev)
        lower_band = sma - (std * std_dev)
        return sma, upper_band, lower_band¬∑
    # Process each symbol
    for symbol in data_frames.keys():
        df = data_frames[symbol]¬∑¬∑¬∑¬∑¬∑
        if len(df) < bb_period + 1:
            continue¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑
        # Calculate Bollinger Bands
        df['BB_Middle'], df['BB_Upper'], df['BB_Lower'] = calculate_bollinger_bands(
            df['close'], bb_period, bb_std
        )¬∑¬∑¬∑¬∑¬∑
        # Calculate volume moving average
        df['Volume_MA'] = df['volume'].rolling(window=bb_period).mean()¬∑¬∑¬∑¬∑¬∑
        # Get current values
        current_price = df['close'].iloc[-1]
        current_volume = df['volume'].iloc[-1]
        bb_upper = df['BB_Upper'].iloc[-1]
        bb_lower = df['BB_Lower'].iloc[-1]
        volume_ma = df['Volume_MA'].iloc[-1]¬∑¬∑¬∑¬∑¬∑
        # Skip if indicators not available
        if pd.isna(bb_upper) or pd.isna(volume_ma):
            continue¬∑¬∑¬∑¬∑¬∑
        # Check for volume spike
        volume_spike = current_volume > (volume_ma * volume_threshold)¬∑¬∑¬∑¬∑¬∑
        # Calculate position size
        portfolio_value = context.portfolio_value
        dollar_amount = portfolio_value * position_size
        shares = int(dollar_amount / current_price)¬∑¬∑¬∑¬∑¬∑
        # Generate breakout signals
        if current_price > bb_upper and volume_spike and shares > 0:
            # Upward breakout with volume confirmation
            success = context.buy(symbol, shares, current_price)
            signals.append({
                'action': 'BUY',
                'symbol': symbol,
                'shares': shares,
                'price': current_price,
                'reason': 'Upward Breakout',
                'bb_upper': bb_upper,
                'volume_ratio': current_volume / volume_ma,
                'success': success
            })
        elif current_price < bb_lower and volume_spike:
            # Downward breakout - sell existing positions
            current_position = context.get_position(symbol)
            if current_position > 0:
                success = context.sell(symbol, current_position, current_price)
                signals.append({
                    'action': 'SELL',
                    'symbol': symbol,
                    'shares': current_position,
                    'price': current_price,
                    'reason': 'Downward Breakout',
                    'bb_lower': bb_lower,
                    'volume_ratio': current_volume / volume_ma,
                    'success': success
                })¬∑
    # Log strategy performance
    signals.append({
        'info': f'Processed {len(data_frames)} symbols with breakout strategy',
        'parameters': {
            'bb_period': bb_period,
            'bb_std': bb_std,
            'volume_threshold': volume_threshold,
            'position_size': position_size
        }
    })"

      398 |       );
      399 |
    > 400 |       expect(code).toContain("def breakout_strategy");
          |                    ^
      401 |       expect(code).toContain("bb_period");
      402 |       expect(code).toContain("bb_std");
      403 |       expect(code).toContain("volume_threshold");

      at Object.toContain (tests/unit/services/aiStrategyGenerator.test.js:400:20)

  ‚óè AIStrategyGenerator Service ‚Ä∫ generateStrategyCode ‚Ä∫ should include proper error handling in generated code

    expect(received).toContain(expected) // indexOf

    Expected substring: "try:"
    Received string:    "# AI Generated Strategy: undefined
    # Generated on: 2025-09-23T16:32:15.843Z¬∑¬∑
    # Filter to specific symbols of interest
    target_symbols = [\"SPY\"]
    data_frames = {k: v for k, v in data_frames.items() if k in target_symbols}¬∑
    # Momentum Strategy Template
    # Buys when short MA crosses above long MA, sells when opposite¬∑
    import pandas as pd
    import numpy as np¬∑
    # Strategy Parameters
    short_window = parameters.get('short_window', 10)
    long_window = parameters.get('long_window', 30)
    position_size = parameters.get('position_size', 0.1)¬∑
    # Process each symbol
    for symbol in data_frames.keys():
        df = data_frames[symbol]¬∑¬∑¬∑¬∑¬∑
        if len(df) < long_window:
            continue¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑
        # Calculate moving averages
        df['SMA_short'] = df['close'].rolling(window=short_window).mean()
        df['SMA_long'] = df['close'].rolling(window=long_window).mean()¬∑¬∑¬∑¬∑¬∑
        # Get current values
        current_price = df['close'].iloc[-1]
        current_short_ma = df['SMA_short'].iloc[-1]
        current_long_ma = df['SMA_long'].iloc[-1]¬∑¬∑¬∑¬∑¬∑
        # Previous values for crossover detection
        prev_short_ma = df['SMA_short'].iloc[-2] if len(df) > 1 else current_short_ma
        prev_long_ma = df['SMA_long'].iloc[-2] if len(df) > 1 else current_long_ma¬∑¬∑¬∑¬∑¬∑
        # Check for crossover signals
        golden_cross = (current_short_ma > current_long_ma and prev_short_ma <= prev_long_ma)
        death_cross = (current_short_ma < current_long_ma and prev_short_ma >= prev_long_ma)¬∑¬∑¬∑¬∑¬∑
        # Calculate position size
        portfolio_value = context.portfolio_value
        dollar_amount = portfolio_value * position_size
        shares = int(dollar_amount / current_price)¬∑¬∑¬∑¬∑¬∑
        # Generate signals
        if golden_cross and shares > 0:
            success = context.buy(symbol, shares, current_price)
            signals.append({
                'action': 'BUY',
                'symbol': symbol,
                'shares': shares,
                'price': current_price,
                'reason': 'Golden Cross',
                'short_ma': current_short_ma,
                'long_ma': current_long_ma,
                'success': success
            })
        elif death_cross:
            # Sell existing position
            current_position = context.get_position(symbol)
            if current_position > 0:
                success = context.sell(symbol, current_position, current_price)
                signals.append({
                    'action': 'SELL',
                    'symbol': symbol,
                    'shares': current_position,
                    'price': current_price,
                    'reason': 'Death Cross',
                    'short_ma': current_short_ma,
                    'long_ma': current_long_ma,
                    'success': success
                })¬∑
    # Log strategy performance
    signals.append({
        'info': f'Processed {len(data_frames)} symbols with momentum strategy',
        'parameters': {
            'short_window': short_window,
            'long_window': long_window,
            'position_size': position_size
        }
    })"

      430 |       );
      431 |
    > 432 |       expect(code).toContain("try:");
          |                    ^
      433 |       expect(code).toContain("except Exception as e:");
      434 |       expect(code).toContain('print(f"Error: {e}")');
      435 |     });

      at Object.toContain (tests/unit/services/aiStrategyGenerator.test.js:432:20)

  ‚óè AIStrategyGenerator Service ‚Ä∫ validateStrategy ‚Ä∫ should validate complete strategy successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: undefined

      448 |       const result = await generator.validateStrategy(strategy);
      449 |
    > 450 |       expect(result.valid).toBe(true);
          |                            ^
      451 |       expect(result.errors).toHaveLength(0);
      452 |     });
      453 |

      at Object.toBe (tests/unit/services/aiStrategyGenerator.test.js:450:28)

  ‚óè AIStrategyGenerator Service ‚Ä∫ validateStrategy ‚Ä∫ should identify missing required fields

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: undefined

      460 |       const result = await generator.validateStrategy(incompleteStrategy);
      461 |
    > 462 |       expect(result.valid).toBe(false);
          |                            ^
      463 |       expect(result.errors.length).toBeGreaterThan(0);
      464 |       expect(result.errors).toEqual(
      465 |         expect.arrayContaining([

      at Object.toBe (tests/unit/services/aiStrategyGenerator.test.js:462:28)

  ‚óè AIStrategyGenerator Service ‚Ä∫ validateStrategy ‚Ä∫ should validate code syntax

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: undefined

      482 |       const result = await generator.validateStrategy(strategyWithBadCode);
      483 |
    > 484 |       expect(result.valid).toBe(false);
          |                            ^
      485 |       expect(result.errors).toEqual(
      486 |         expect.arrayContaining([expect.stringContaining("syntax")])
      487 |       );

      at Object.toBe (tests/unit/services/aiStrategyGenerator.test.js:484:28)

  ‚óè AIStrategyGenerator Service ‚Ä∫ validateStrategy ‚Ä∫ should validate parameter types

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: undefined

      502 |       const result = await generator.validateStrategy(strategyWithBadParams);
      503 |
    > 504 |       expect(result.valid).toBe(false);
          |                            ^
      505 |       expect(result.errors.length).toBeGreaterThan(0);
      506 |     });
      507 |

      at Object.toBe (tests/unit/services/aiStrategyGenerator.test.js:504:28)

  ‚óè AIStrategyGenerator Service ‚Ä∫ Template Methods ‚Ä∫ should return momentum template code

    expect(received).toContain(expected) // indexOf

    Expected substring: "def momentum_strategy"
    Received string:    "# Momentum Strategy Template
    # Buys when short MA crosses above long MA, sells when opposite¬∑
    import pandas as pd
    import numpy as np¬∑
    # Strategy Parameters
    short_window = parameters.get('short_window', 10)
    long_window = parameters.get('long_window', 30)
    position_size = parameters.get('position_size', 0.1)¬∑
    # Process each symbol
    for symbol in data_frames.keys():
        df = data_frames[symbol]¬∑¬∑¬∑¬∑¬∑
        if len(df) < long_window:
            continue¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑
        # Calculate moving averages
        df['SMA_short'] = df['close'].rolling(window=short_window).mean()
        df['SMA_long'] = df['close'].rolling(window=long_window).mean()¬∑¬∑¬∑¬∑¬∑
        # Get current values
        current_price = df['close'].iloc[-1]
        current_short_ma = df['SMA_short'].iloc[-1]
        current_long_ma = df['SMA_long'].iloc[-1]¬∑¬∑¬∑¬∑¬∑
        # Previous values for crossover detection
        prev_short_ma = df['SMA_short'].iloc[-2] if len(df) > 1 else current_short_ma
        prev_long_ma = df['SMA_long'].iloc[-2] if len(df) > 1 else current_long_ma¬∑¬∑¬∑¬∑¬∑
        # Check for crossover signals
        golden_cross = (current_short_ma > current_long_ma and prev_short_ma <= prev_long_ma)
        death_cross = (current_short_ma < current_long_ma and prev_short_ma >= prev_long_ma)¬∑¬∑¬∑¬∑¬∑
        # Calculate position size
        portfolio_value = context.portfolio_value
        dollar_amount = portfolio_value * position_size
        shares = int(dollar_amount / current_price)¬∑¬∑¬∑¬∑¬∑
        # Generate signals
        if golden_cross and shares > 0:
            success = context.buy(symbol, shares, current_price)
            signals.append({
                'action': 'BUY',
                'symbol': symbol,
                'shares': shares,
                'price': current_price,
                'reason': 'Golden Cross',
                'short_ma': current_short_ma,
                'long_ma': current_long_ma,
                'success': success
            })
        elif death_cross:
            # Sell existing position
            current_position = context.get_position(symbol)
            if current_position > 0:
                success = context.sell(symbol, current_position, current_price)
                signals.append({
                    'action': 'SELL',
                    'symbol': symbol,
                    'shares': current_position,
                    'price': current_price,
                    'reason': 'Death Cross',
                    'short_ma': current_short_ma,
                    'long_ma': current_long_ma,
                    'success': success
                })¬∑
    # Log strategy performance
    signals.append({
        'info': f'Processed {len(data_frames)} symbols with momentum strategy',
        'parameters': {
            'short_window': short_window,
            'long_window': long_window,
            'position_size': position_size
        }
    })"

      526 |       const code = generator.getMomentumTemplate();
      527 |
    > 528 |       expect(code).toContain("def momentum_strategy");
          |                    ^
      529 |       expect(code).toContain("short_window");
      530 |       expect(code).toContain("long_window");
      531 |       expect(typeof code).toBe("string");

      at Object.toContain (tests/unit/services/aiStrategyGenerator.test.js:528:20)

  ‚óè AIStrategyGenerator Service ‚Ä∫ Template Methods ‚Ä∫ should return mean reversion template code

    expect(received).toContain(expected) // indexOf

    Expected substring: "def mean_reversion_strategy"
    Received string:    "# Mean Reversion Strategy Template
    # Uses RSI to identify oversold/overbought conditions¬∑
    import pandas as pd
    import numpy as np¬∑
    # Strategy Parameters
    rsi_period = parameters.get('rsi_period', 14)
    oversold_threshold = parameters.get('oversold_threshold', 30)
    overbought_threshold = parameters.get('overbought_threshold', 70)
    position_size = parameters.get('position_size', 0.1)¬∑
    def calculate_rsi(prices, period=14):
        \"\"\"Calculate RSI indicator\"\"\"
        delta = prices.diff()
        gain = (delta.where(delta > 0, 0)).rolling(window=period).mean()
        loss = (-delta.where(delta < 0, 0)).rolling(window=period).mean()
        rs = gain / loss
        rsi = 100 - (100 / (1 + rs))
        return rsi¬∑
    # Process each symbol
    for symbol in data_frames.keys():
        df = data_frames[symbol]¬∑¬∑¬∑¬∑¬∑
        if len(df) < rsi_period + 1:
            continue¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑
        # Calculate RSI
        df['RSI'] = calculate_rsi(df['close'], rsi_period)¬∑¬∑¬∑¬∑¬∑
        # Get current values
        current_price = df['close'].iloc[-1]
        current_rsi = df['RSI'].iloc[-1]¬∑¬∑¬∑¬∑¬∑
        # Skip if RSI not available
        if pd.isna(current_rsi):
            continue¬∑¬∑¬∑¬∑¬∑
        # Calculate position size
        portfolio_value = context.portfolio_value
        dollar_amount = portfolio_value * position_size
        shares = int(dollar_amount / current_price)¬∑¬∑¬∑¬∑¬∑
        # Generate signals based on RSI
        if current_rsi < oversold_threshold and shares > 0:
            # Oversold - Buy signal
            success = context.buy(symbol, shares, current_price)
            signals.append({
                'action': 'BUY',
                'symbol': symbol,
                'shares': shares,
                'price': current_price,
                'reason': 'RSI Oversold',
                'rsi': current_rsi,
                'threshold': oversold_threshold,
                'success': success
            })
        elif current_rsi > overbought_threshold:
            # Overbought - Sell signal
            current_position = context.get_position(symbol)
            if current_position > 0:
                success = context.sell(symbol, current_position, current_price)
                signals.append({
                    'action': 'SELL',
                    'symbol': symbol,
                    'shares': current_position,
                    'price': current_price,
                    'reason': 'RSI Overbought',
                    'rsi': current_rsi,
                    'threshold': overbought_threshold,
                    'success': success
                })¬∑
    # Log strategy performance
    signals.append({
        'info': f'Processed {len(data_frames)} symbols with mean reversion strategy',
        'parameters': {
            'rsi_period': rsi_period,
            'oversold_threshold': oversold_threshold,
            'overbought_threshold': overbought_threshold,
            'position_size': position_size
        }
    })"

      536 |       const code = generator.getMeanReversionTemplate();
      537 |
    > 538 |       expect(code).toContain("def mean_reversion_strategy");
          |                    ^
      539 |       expect(code).toContain("rsi_period");
      540 |       expect(code).toContain("oversold_threshold");
      541 |       expect(typeof code).toBe("string");

      at Object.toContain (tests/unit/services/aiStrategyGenerator.test.js:538:20)

  ‚óè AIStrategyGenerator Service ‚Ä∫ Template Methods ‚Ä∫ should return breakout template code

    expect(received).toContain(expected) // indexOf

    Expected substring: "def breakout_strategy"
    Received string:    "# Breakout Strategy Template
    # Uses Bollinger Bands to identify breakout opportunities¬∑
    import pandas as pd
    import numpy as np¬∑
    # Strategy Parameters
    bb_period = parameters.get('bb_period', 20)
    bb_std = parameters.get('bb_std', 2)
    volume_threshold = parameters.get('volume_threshold', 1.5)
    position_size = parameters.get('position_size', 0.1)¬∑
    def calculate_bollinger_bands(prices, period=20, std_dev=2):
        \"\"\"Calculate Bollinger Bands\"\"\"
        sma = prices.rolling(window=period).mean()
        std = prices.rolling(window=period).std()
        upper_band = sma + (std * std_dev)
        lower_band = sma - (std * std_dev)
        return sma, upper_band, lower_band¬∑
    # Process each symbol
    for symbol in data_frames.keys():
        df = data_frames[symbol]¬∑¬∑¬∑¬∑¬∑
        if len(df) < bb_period + 1:
            continue¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑
        # Calculate Bollinger Bands
        df['BB_Middle'], df['BB_Upper'], df['BB_Lower'] = calculate_bollinger_bands(
            df['close'], bb_period, bb_std
        )¬∑¬∑¬∑¬∑¬∑
        # Calculate volume moving average
        df['Volume_MA'] = df['volume'].rolling(window=bb_period).mean()¬∑¬∑¬∑¬∑¬∑
        # Get current values
        current_price = df['close'].iloc[-1]
        current_volume = df['volume'].iloc[-1]
        bb_upper = df['BB_Upper'].iloc[-1]
        bb_lower = df['BB_Lower'].iloc[-1]
        volume_ma = df['Volume_MA'].iloc[-1]¬∑¬∑¬∑¬∑¬∑
        # Skip if indicators not available
        if pd.isna(bb_upper) or pd.isna(volume_ma):
            continue¬∑¬∑¬∑¬∑¬∑
        # Check for volume spike
        volume_spike = current_volume > (volume_ma * volume_threshold)¬∑¬∑¬∑¬∑¬∑
        # Calculate position size
        portfolio_value = context.portfolio_value
        dollar_amount = portfolio_value * position_size
        shares = int(dollar_amount / current_price)¬∑¬∑¬∑¬∑¬∑
        # Generate breakout signals
        if current_price > bb_upper and volume_spike and shares > 0:
            # Upward breakout with volume confirmation
            success = context.buy(symbol, shares, current_price)
            signals.append({
                'action': 'BUY',
                'symbol': symbol,
                'shares': shares,
                'price': current_price,
                'reason': 'Upward Breakout',
                'bb_upper': bb_upper,
                'volume_ratio': current_volume / volume_ma,
                'success': success
            })
        elif current_price < bb_lower and volume_spike:
            # Downward breakout - sell existing positions
            current_position = context.get_position(symbol)
            if current_position > 0:
                success = context.sell(symbol, current_position, current_price)
                signals.append({
                    'action': 'SELL',
                    'symbol': symbol,
                    'shares': current_position,
                    'price': current_price,
                    'reason': 'Downward Breakout',
                    'bb_lower': bb_lower,
                    'volume_ratio': current_volume / volume_ma,
                    'success': success
                })¬∑
    # Log strategy performance
    signals.append({
        'info': f'Processed {len(data_frames)} symbols with breakout strategy',
        'parameters': {
            'bb_period': bb_period,
            'bb_std': bb_std,
            'volume_threshold': volume_threshold,
            'position_size': position_size
        }
    })"

      546 |       const code = generator.getBreakoutTemplate();
      547 |
    > 548 |       expect(code).toContain("def breakout_strategy");
          |                    ^
      549 |       expect(code).toContain("bb_period");
      550 |       expect(code).toContain("volume_threshold");
      551 |       expect(typeof code).toBe("string");

      at Object.toContain (tests/unit/services/aiStrategyGenerator.test.js:548:20)

  ‚óè AIStrategyGenerator Service ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle null or undefined prompts

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      618 |       results.forEach((result) => {
      619 |         expect(result.status).toBe("fulfilled");
    > 620 |         expect(result.value.success).toBe(false);
          |                                      ^
      621 |       });
      622 |     });
      623 |

      at toBe (tests/unit/services/aiStrategyGenerator.test.js:620:38)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/unit/services/aiStrategyGenerator.test.js:618:15)

  ‚óè AIStrategyGenerator Service ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle empty symbols array

    expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 7

    - Array []
    + Array [
    +   "AAPL",
    +   "GOOGL",
    +   "MSFT",
    +   "SPY",
    +   "QQQ",
    + ]

      645 |
      646 |       expect(result.success).toBe(true);
    > 647 |       expect(result.strategy.symbols).toEqual([]);
          |                                       ^
      648 |     });
      649 |
      650 |     test("should handle very large symbols array", async () => {

      at Object.toEqual (tests/unit/services/aiStrategyGenerator.test.js:647:39)

  ‚óè AIStrategyGenerator Service ‚Ä∫ Integration with Logger ‚Ä∫ should log errors appropriately

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "Strategy generation failed", ObjectContaining {"error": Any<Error>}

    Number of calls: 0

      725 |       await generator.generateFromNaturalLanguage("test strategy");
      726 |
    > 727 |       expect(mockLogger.error).toHaveBeenCalledWith(
          |                                ^
      728 |         "Strategy generation failed",
      729 |         expect.objectContaining({
      730 |           error: expect.any(Error),

      at Object.toHaveBeenCalledWith (tests/unit/services/aiStrategyGenerator.test.js:727:32)

FAIL tests/integration/utils/schemaValidator.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Stock Data Validation ‚Ä∫ should reject invalid stock data

    expect(received).toContain(expected) // indexOf

    Expected value: "symbol"
    Received array: [undefined, undefined, undefined]

      55 |
      56 |       const errorFields = validation.errors.map((err) => err.field);
    > 57 |       expect(errorFields).toContain("symbol");
         |                           ^
      58 |       expect(errorFields).toContain("price");
      59 |       expect(errorFields).toContain("volume");
      60 |       expect(errorFields).toContain("timestamp");

      at Object.toContain (tests/integration/utils/schemaValidator.test.js:57:27)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Stock Data Validation ‚Ä∫ should validate portfolio data

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      85 |       const validation = schemaValidator.validate(validPortfolio, "portfolio");
      86 |
    > 87 |       expect(validation.isValid).toBe(true);
         |                                  ^
      88 |       expect(validation.errors).toEqual([]);
      89 |       expect(validation.sanitizedData.holdings.length).toBe(2);
      90 |     });

      at Object.toBe (tests/integration/utils/schemaValidator.test.js:87:34)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Trading Order Validation ‚Ä∫ should validate buy order

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      105 |       const validation = schemaValidator.validate(buyOrder, "tradingOrder");
      106 |
    > 107 |       expect(validation.isValid).toBe(true);
          |                                  ^
      108 |       expect(validation.sanitizedData.side).toBe("buy");
      109 |       expect(validation.sanitizedData.type).toBe("market");
      110 |       expect(validation.sanitizedData.quantity).toBe(100);

      at Object.toBe (tests/integration/utils/schemaValidator.test.js:107:34)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Trading Order Validation ‚Ä∫ should validate limit order with price

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      125 |       const validation = schemaValidator.validate(limitOrder, "tradingOrder");
      126 |
    > 127 |       expect(validation.isValid).toBe(true);
          |                                  ^
      128 |       expect(validation.sanitizedData.type).toBe("limit");
      129 |       expect(validation.sanitizedData.limitPrice).toBe(155.0);
      130 |     });

      at Object.toBe (tests/integration/utils/schemaValidator.test.js:127:34)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Trading Order Validation ‚Ä∫ should reject invalid trading orders

    expect(received).toContain(expected) // indexOf

    Expected value: "INVALID_USER_ID"
    Received array: [undefined, undefined, undefined, undefined, undefined]

      146 |
      147 |       const errorCodes = validation.errors.map((err) => err.code);
    > 148 |       expect(errorCodes).toContain("INVALID_USER_ID");
          |                          ^
      149 |       expect(errorCodes).toContain("INVALID_SYMBOL");
      150 |       expect(errorCodes).toContain("INVALID_SIDE");
      151 |       expect(errorCodes).toContain("INVALID_QUANTITY");

      at Object.toContain (tests/integration/utils/schemaValidator.test.js:148:26)

  ‚óè Schema Validator Integration Tests ‚Ä∫ User Data Validation ‚Ä∫ should validate user registration data

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      168 |       const validation = schemaValidator.validate(userData, "userRegistration");
      169 |
    > 170 |       expect(validation.isValid).toBe(true);
          |                                  ^
      171 |       expect(validation.sanitizedData.email).toBe("test@example.com");
      172 |       expect(validation.sanitizedData.country).toBe("US");
      173 |       // Password should be excluded from sanitized data for security

      at Object.toBe (tests/integration/utils/schemaValidator.test.js:170:34)

  ‚óè Schema Validator Integration Tests ‚Ä∫ User Data Validation ‚Ä∫ should validate API key configuration

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      189 |       const validation = schemaValidator.validate(apiKeyConfig, "apiKeyConfig");
      190 |
    > 191 |       expect(validation.isValid).toBe(true);
          |                                  ^
      192 |       expect(validation.sanitizedData.provider).toBe("alpaca");
      193 |       expect(validation.sanitizedData.environment).toBe("paper");
      194 |       expect(Array.isArray(validation.sanitizedData.permissions)).toBe(true);

      at Object.toBe (tests/integration/utils/schemaValidator.test.js:191:34)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Market Data Validation ‚Ä∫ should validate technical indicators

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      223 |       );
      224 |
    > 225 |       expect(validation.isValid).toBe(true);
          |                                  ^
      226 |       expect(validation.sanitizedData.indicators.rsi).toBe(65.5);
      227 |       expect(validation.sanitizedData.indicators.macd.macd).toBe(1.25);
      228 |       expect(validation.sanitizedData.indicators.bollinger.upper).toBe(155.0);

      at Object.toBe (tests/integration/utils/schemaValidator.test.js:225:34)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Market Data Validation ‚Ä∫ should validate earnings data

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      249 |       const validation = schemaValidator.validate(earningsData, "earningsData");
      250 |
    > 251 |       expect(validation.isValid).toBe(true);
          |                                  ^
      252 |       expect(validation.sanitizedData.quarter).toBe("Q1");
      253 |       expect(validation.sanitizedData.year).toBe(2023);
      254 |       expect(validation.sanitizedData.surprise.epsPercent).toBe(4.83);

      at Object.toBe (tests/integration/utils/schemaValidator.test.js:251:34)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Real-time Data Validation ‚Ä∫ should validate WebSocket message format

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      276 |       );
      277 |
    > 278 |       expect(validation.isValid).toBe(true);
          |                                  ^
      279 |       expect(validation.sanitizedData.type).toBe("quote");
      280 |       expect(validation.sanitizedData.symbol).toBe("AAPL");
      281 |       expect(validation.sanitizedData.data.price).toBe(150.25);

      at Object.toBe (tests/integration/utils/schemaValidator.test.js:278:34)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Real-time Data Validation ‚Ä∫ should validate streaming data batch

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      312 |       );
      313 |
    > 314 |       expect(validation.isValid).toBe(true);
          |                                  ^
      315 |       expect(validation.sanitizedData.messages.length).toBe(2);
      316 |       expect(validation.sanitizedData.source).toBe("alpaca");
      317 |     });

      at Object.toBe (tests/integration/utils/schemaValidator.test.js:314:34)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Custom Schema Validation ‚Ä∫ should validate with custom schema

    TypeError: schemaValidator.validateWithCustomSchema is not a function

      340 |       };
      341 |
    > 342 |       const validation = schemaValidator.validateWithCustomSchema(
          |                                          ^
      343 |         testData,
      344 |         customSchema
      345 |       );

      at Object.validateWithCustomSchema (tests/integration/utils/schemaValidator.test.js:342:42)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Custom Schema Validation ‚Ä∫ should register and use persistent custom schemas

    TypeError: schemaValidator.registerSchema is not a function

      362 |
      363 |       // Register schema
    > 364 |       schemaValidator.registerSchema(schemaName, schema);
          |                       ^
      365 |
      366 |       // Use registered schema
      367 |       const testData = { id: "test_123", value: 456 };

      at Object.registerSchema (tests/integration/utils/schemaValidator.test.js:364:23)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Data Sanitization ‚Ä∫ should sanitize and transform data

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      389 |       });
      390 |
    > 391 |       expect(validation.isValid).toBe(true);
          |                                  ^
      392 |       expect(validation.sanitizedData.symbol).toBe("AAPL");
      393 |       expect(validation.sanitizedData.price).toBe(150.25);
      394 |       expect(validation.sanitizedData.description).not.toContain("<script>");

      at Object.toBe (tests/integration/utils/schemaValidator.test.js:391:34)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Data Sanitization ‚Ä∫ should handle SQL injection attempts

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: undefined

      408 |       });
      409 |
    > 410 |       expect(validation.sanitized).toBe(true);
          |                                    ^
      411 |       expect(validation.sanitizedData.symbol).not.toContain("DROP TABLE");
      412 |       expect(validation.sanitizedData.userId).not.toContain("OR '1'='1");
      413 |       expect(validation.sanitizedData.description).not.toContain("DELETE FROM");

      at Object.toBe (tests/integration/utils/schemaValidator.test.js:410:36)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Performance and Scalability ‚Ä∫ should cache compiled schemas for performance

    expect(received).toBeLessThan(expected)

    Expected: < 0
    Received:   0

      452 |       expect(validation1.isValid).toBe(true);
      453 |       expect(validation2.isValid).toBe(true);
    > 454 |       expect(duration2).toBeLessThan(duration1); // Cached should be faster
          |                         ^
      455 |     });
      456 |   });
      457 |

      at Object.toBeLessThan (tests/integration/utils/schemaValidator.test.js:454:25)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle malformed data gracefully

    TypeError: Cannot read properties of null (reading 'symbol')

      732 |     // Check required fields
      733 |     for (const requiredField of schema.required) {
    > 734 |       if (data[requiredField] === undefined || data[requiredField] === null) {
          |               ^
      735 |         errors.push(`Required field "${requiredField}" is missing`);
      736 |       }
      737 |     }

      at SchemaValidator.validate (utils/schemaValidator.js:734:15)
      at Object.validate (utils/schemaValidator.js:1576:51)
      at validate (tests/integration/utils/schemaValidator.test.js:463:44)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/utils/schemaValidator.test.js:462:21)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle circular references

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      477 |       expect(
      478 |         validation.errors.some((err) => err.code === "CIRCULAR_REFERENCE")
    > 479 |       ).toBe(true);
          |         ^
      480 |     });
      481 |
      482 |     test("should handle very large numbers", () => {

      at Object.toBe (tests/integration/utils/schemaValidator.test.js:479:9)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle very large numbers

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      496 |       expect(
      497 |         validation.errors.some((err) => err.code === "INVALID_NUMBER")
    > 498 |       ).toBe(true);
          |         ^
      499 |     });
      500 |   });
      501 |

      at Object.toBe (tests/integration/utils/schemaValidator.test.js:498:9)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Integration with Database ‚Ä∫ should validate data before database insertion

    TypeError: schemaValidator.validateForDatabase is not a function

      509 |       };
      510 |
    > 511 |       const validation = await schemaValidator.validateForDatabase(
          |                                                ^
      512 |         stockData,
      513 |         "stock_quotes"
      514 |       );

      at Object.validateForDatabase (tests/integration/utils/schemaValidator.test.js:511:48)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Integration with Database ‚Ä∫ should handle database constraint violations

    TypeError: schemaValidator.validateForDatabase is not a function

      527 |       };
      528 |
    > 529 |       const validation = await schemaValidator.validateForDatabase(
          |                                                ^
      530 |         duplicateData,
      531 |         "stock_quotes"
      532 |       );

      at Object.validateForDatabase (tests/integration/utils/schemaValidator.test.js:529:48)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Multi-language Support ‚Ä∫ should support localized error messages

    expect(received).not.toBe(expected) // Object.is equality

    Expected: not undefined

      556 |       expect(validationEn.isValid).toBe(false);
      557 |       expect(validationEs.isValid).toBe(false);
    > 558 |       expect(validationEn.errors[0].message).not.toBe(
          |                                                  ^
      559 |         validationEs.errors[0].message
      560 |       );
      561 |     });

      at Object.toBe (tests/integration/utils/schemaValidator.test.js:558:50)

FAIL tests/unit/routes/insider.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Insider Routes ‚Ä∫ GET /api/insider/trades/:symbol ‚Ä∫ should return 501 status for not implemented endpoint

    expected 501 "Not Implemented", got 200 "OK"

      24 |       const response = await request(app)
      25 |         .get("/api/insider/trades/AAPL")
    > 26 |         .expect(501);
         |          ^
      27 |
      28 |       expect(response.body).toEqual({
      29 |         success: false,

      at Object.expect (tests/unit/routes/insider.test.js:26:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Insider Routes ‚Ä∫ GET /api/insider/trades/:symbol ‚Ä∫ should convert symbol to uppercase

    expected 501 "Not Implemented", got 200 "OK"

      49 |       const response = await request(app)
      50 |         .get("/api/insider/trades/aapl")
    > 51 |         .expect(501);
         |          ^
      52 |
      53 |       expect(response.body.symbol).toBe("AAPL");
      54 |     });

      at Object.expect (tests/unit/routes/insider.test.js:51:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Insider Routes ‚Ä∫ GET /api/insider/trades/:symbol ‚Ä∫ should log the request with symbol

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "üë• Insider trades requested for TSLA - not implemented"
    Received: "üë• Insider trades requested for TSLA"

    Number of calls: 1

      57 |       await request(app).get("/api/insider/trades/TSLA");
      58 |
    > 59 |       expect(consoleSpy).toHaveBeenCalledWith(
         |                          ^
      60 |         "üë• Insider trades requested for TSLA - not implemented"
      61 |       );
      62 |     });

      at Object.toHaveBeenCalledWith (tests/unit/routes/insider.test.js:59:26)

  ‚óè Insider Routes ‚Ä∫ GET /api/insider/trades/:symbol ‚Ä∫ should include valid ISO timestamp

    expected 501 "Not Implemented", got 200 "OK"

      65 |       const response = await request(app)
      66 |         .get("/api/insider/trades/GOOGL")
    > 67 |         .expect(501);
         |          ^
      68 |
      69 |       const timestamp = response.body.timestamp;
      70 |       expect(timestamp).toMatch(

      at Object.expect (tests/unit/routes/insider.test.js:67:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Insider Routes ‚Ä∫ GET /api/insider/trades/:symbol ‚Ä∫ should handle symbols with special characters

    expected 501 "Not Implemented", got 200 "OK"

      78 |       const response = await request(app)
      79 |         .get("/api/insider/trades/BRK.A")
    > 80 |         .expect(501);
         |          ^
      81 |
      82 |       expect(response.body.symbol).toBe("BRK.A");
      83 |       expect(response.body.success).toBe(false);

      at Object.expect (tests/unit/routes/insider.test.js:80:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Insider Routes ‚Ä∫ GET /api/insider/trades/:symbol ‚Ä∫ should handle long symbol names

    expected 501 "Not Implemented", got 200 "OK"

      88 |       const response = await request(app)
      89 |         .get(`/api/insider/trades/${longSymbol}`)
    > 90 |         .expect(501);
         |          ^
      91 |
      92 |       expect(response.body.symbol).toBe(longSymbol);
      93 |       expect(consoleSpy).toHaveBeenCalledWith(

      at Object.expect (tests/unit/routes/insider.test.js:90:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Insider Routes ‚Ä∫ GET /api/insider/trades/:symbol ‚Ä∫ should handle empty symbol gracefully

    expected 404 "Not Found", got 500 "Internal Server Error"

       99 |       const response = await request(app)
      100 |         .get("/api/insider/trades/")
    > 101 |         .expect(404); // Express router will return 404 for missing route parameter
          |          ^
      102 |     });
      103 |
      104 |     it("should handle route error and return 500", async () => {

      at Object.expect (tests/unit/routes/insider.test.js:101:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Insider Routes ‚Ä∫ GET /api/insider/trades/:symbol ‚Ä∫ should handle route error and return 500

    expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 3

      Object {
    +   "details": "Console logging failed",
        "error": "Failed to fetch insider trades",
    -   "message": "Console logging failed",
        "success": false,
    +   "symbol": "AAPL",
    +   "timestamp": "2025-09-23T16:32:16.075Z",
      }

      112 |         .expect(500);
      113 |
    > 114 |       expect(response.body).toEqual({
          |                             ^
      115 |         success: false,
      116 |         error: "Failed to fetch insider trades",
      117 |         message: "Console logging failed",

      at Object.toEqual (tests/unit/routes/insider.test.js:114:29)

  ‚óè Insider Routes ‚Ä∫ GET /api/insider/trades/:symbol ‚Ä∫ should maintain consistent response structure for different symbols

    expected 501 "Not Implemented", got 200 "OK"

      130 |         const response = await request(app)
      131 |           .get(`/api/insider/trades/${symbol}`)
    > 132 |           .expect(501);
          |            ^
      133 |
      134 |         expect(response.body).toHaveProperty("success", false);
      135 |         expect(response.body).toHaveProperty("error");

      at Object.expect (tests/unit/routes/insider.test.js:132:12)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Insider Routes ‚Ä∫ GET /api/insider/trades/:symbol ‚Ä∫ should have consistent error message structure

    expected 501 "Not Implemented", got 200 "OK"

      148 |       const response = await request(app)
      149 |         .get("/api/insider/trades/TEST")
    > 150 |         .expect(501);
          |          ^
      151 |
      152 |       expect(response.body.troubleshooting.required_setup).toHaveLength(3);
      153 |       expect(response.body.troubleshooting.required_setup).toContain(

      at Object.expect (tests/unit/routes/insider.test.js:150:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Insider Routes ‚Ä∫ GET /api/insider/trades/:symbol ‚Ä∫ should handle numeric symbol inputs

    expected 501 "Not Implemented", got 200 "OK"

      165 |       const response = await request(app)
      166 |         .get("/api/insider/trades/123")
    > 167 |         .expect(501);
          |          ^
      168 |
      169 |       expect(response.body.symbol).toBe("123");
      170 |       expect(response.body.success).toBe(false);

      at Object.expect (tests/unit/routes/insider.test.js:167:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

FAIL tests/unit/routes/watchlist.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.error
      Error fetching watchlists: Error: Database connection failed
          at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/watchlist.test.js:73:35)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      91 |     });
      92 |   } catch (error) {
    > 93 |     console.error("Error fetching watchlists:", error);
         |             ^
      94 |     res.status(500).json({
      95 |       success: false,
      96 |       error: "Failed to fetch watchlists",

      at error (routes/watchlist.js:93:13)

    console.error
      Error fetching watchlists: Error: Connection timeout
          at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/watchlist.test.js:312:35)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      91 |     });
      92 |   } catch (error) {
    > 93 |     console.error("Error fetching watchlists:", error);
         |             ^
      94 |     res.status(500).json({
      95 |       success: false,
      96 |       error: "Failed to fetch watchlists",

      at error (routes/watchlist.js:93:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Watchlist Routes ‚Ä∫ GET /api/watchlist/ ‚Ä∫ should return user watchlists

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "SELECT", ["test-user-123"]
    Received: "
            SELECT
              symbol as id,
              'My Watchlist' as name,
              symbol,
              created_at
            FROM portfolio_transactions
            GROUP BY symbol, created_at
            ORDER BY created_at DESC
            LIMIT 20
          "

    Number of calls: 1

      54 |       });
      55 |
    > 56 |       expect(query).toHaveBeenCalledWith(expect.stringContaining("SELECT"), [
         |                     ^
      57 |         "test-user-123",
      58 |       ]);
      59 |     });

      at Object.toHaveBeenCalledWith (tests/unit/routes/watchlist.test.js:56:21)

  ‚óè Watchlist Routes ‚Ä∫ Error handling ‚Ä∫ should handle invalid watchlist IDs

    expect(received).toBe(expected) // Object.is equality

    Expected: 404
    Received: 400

      327 |       const response = await request(app).get("/api/watchlist/invalid");
      328 |
    > 329 |       expect(response.status).toBe(404);
          |                               ^
      330 |       expect(response.body).toMatchObject({
      331 |         success: false,
      332 |         error: "Watchlist not found",

      at Object.toBe (tests/unit/routes/watchlist.test.js:329:31)

FAIL tests/integration/utils/riskEngine.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.error
      Database query error: {
        error: 'column "cost_basis" of relation "portfolio_holdings" does not exist',
        query: '\n' +
          '        INSERT INTO portfolio_holdings (user_id, symbol, quantity, average_cost, current_price, mar...',
        params: '7 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Portfolio Risk Assessment with Database Integration ‚Ä∫ should calculate portfolio-wide risk metrics from database

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Portfolio Risk Assessment with Database Integration ‚Ä∫ should identify concentration risk

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Portfolio Risk Assessment with Database Integration ‚Ä∫ should calculate sector allocation risk

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Historical Volatility Analysis ‚Ä∫ should calculate volatility from historical price data

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Historical Volatility Analysis ‚Ä∫ should handle insufficient data gracefully

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Historical Volatility Analysis ‚Ä∫ should calculate beta relative to market

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Value at Risk (VaR) Calculations ‚Ä∫ should calculate portfolio VaR using historical method

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Value at Risk (VaR) Calculations ‚Ä∫ should calculate VaR for different confidence levels

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Value at Risk (VaR) Calculations ‚Ä∫ should calculate parametric VaR

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Position Sizing and Risk Management ‚Ä∫ should recommend optimal position sizes

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Position Sizing and Risk Management ‚Ä∫ should validate position size against risk limits

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Correlation and Covariance Analysis ‚Ä∫ should calculate correlation matrix for portfolio

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Correlation and Covariance Analysis ‚Ä∫ should identify highly correlated positions

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Stress Testing and Scenario Analysis ‚Ä∫ should perform market crash stress test

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Stress Testing and Scenario Analysis ‚Ä∫ should perform custom scenario analysis

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Risk Monitoring and Alerts ‚Ä∫ should monitor portfolio risk limits

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Risk Monitoring and Alerts ‚Ä∫ should generate risk alerts for violations

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Performance and Scalability ‚Ä∫ should handle large portfolios efficiently

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Performance and Scalability ‚Ä∫ should maintain accuracy with concurrent calculations

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle empty portfolio gracefully

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle database connection errors

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle invalid risk parameters

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

FAIL tests/integration/services/alpacaService.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.error
      Alpaca account fetch error: API Error

      84 |       };
      85 |     } catch (error) {
    > 86 |       console.error("Alpaca account fetch error:", error.message);
         |               ^
      87 |       throw new Error(`Failed to fetch account information: ${error.message}`);
      88 |     }
      89 |   }

      at AlpacaService.error [as getAccount] (utils/alpacaService.js:86:15)
      at Object.<anonymous> (tests/integration/services/alpacaService.test.js:149:7)

    console.error
      Error fetching position: Cannot read properties of undefined (reading 'find')

      819 |       };
      820 |     } catch (error) {
    > 821 |       console.error("Error fetching position:", error.message);
          |               ^
      822 |       throw new Error(
      823 |         `Failed to fetch position for ${symbol}: ${error.message}`
      824 |       );

      at AlpacaService.error [as getPosition] (utils/alpacaService.js:821:15)
      at Object.<anonymous> (tests/integration/services/alpacaService.test.js:218:24)

    console.error
      Alpaca order creation error: Quantity must be a positive number

      738 |       };
      739 |     } catch (error) {
    > 740 |       console.error("Alpaca order creation error:", error.message);
          |               ^
      741 |       throw new Error(`Failed to create order: ${error.message}`);
      742 |     }
      743 |   }

      at AlpacaService.error [as createOrder] (utils/alpacaService.js:740:15)
      at Object.createOrder (tests/integration/services/alpacaService.test.js:238:41)

    console.error
      Alpaca order creation error: Quantity must be a positive number

      738 |       };
      739 |     } catch (error) {
    > 740 |       console.error("Alpaca order creation error:", error.message);
          |               ^
      741 |       throw new Error(`Failed to create order: ${error.message}`);
      742 |     }
      743 |   }

      at AlpacaService.error [as createOrder] (utils/alpacaService.js:740:15)
      at Object.createOrder (tests/integration/services/alpacaService.test.js:267:41)

    console.log
      Fetching orders from Alpaca

      at AlpacaService.log [as getOrders] (utils/alpacaService.js:748:15)

    console.log
      Canceling order order-123 on Alpaca

      at AlpacaService.log [as cancelOrder] (utils/alpacaService.js:776:15)

    console.error
      Alpaca order creation error: Quantity must be a positive number

      738 |       };
      739 |     } catch (error) {
    > 740 |       console.error("Alpaca order creation error:", error.message);
          |               ^
      741 |       throw new Error(`Failed to create order: ${error.message}`);
      742 |     }
      743 |   }

      at AlpacaService.error [as createOrder] (utils/alpacaService.js:740:15)
      at Object.createOrder (tests/integration/services/alpacaService.test.js:311:23)

    console.log
      üìä Fetching bars for AAPL from Alpaca { timeframe: '1Day', start: '2023-01-01', limit: 100 }

      at AlpacaService.log [as getBars] (utils/alpacaService.js:538:15)

    console.log
      ‚úÖ Bars fetched for AAPL: 1 bars

      at AlpacaService.log [as getBars] (utils/alpacaService.js:559:15)

    console.error
      Alpaca account fetch error: Network error

      84 |       };
      85 |     } catch (error) {
    > 86 |       console.error("Alpaca account fetch error:", error.message);
         |               ^
      87 |       throw new Error(`Failed to fetch account information: ${error.message}`);
      88 |     }
      89 |   }

      at AlpacaService.error [as getAccount] (utils/alpacaService.js:86:15)
      at Object.<anonymous> (tests/integration/services/alpacaService.test.js:466:7)

    console.error
      Alpaca account fetch error: Rate limit exceeded

      84 |       };
      85 |     } catch (error) {
    > 86 |       console.error("Alpaca account fetch error:", error.message);
         |               ^
      87 |       throw new Error(`Failed to fetch account information: ${error.message}`);
      88 |     }
      89 |   }

      at AlpacaService.error [as getAccount] (utils/alpacaService.js:86:15)
      at Object.<anonymous> (tests/integration/services/alpacaService.test.js:474:7)

    console.error
      Alpaca account fetch error: Invalid API credentials

      84 |       };
      85 |     } catch (error) {
    > 86 |       console.error("Alpaca account fetch error:", error.message);
         |               ^
      87 |       throw new Error(`Failed to fetch account information: ${error.message}`);
      88 |     }
      89 |   }

      at AlpacaService.error [as getAccount] (utils/alpacaService.js:86:15)
      at Object.<anonymous> (tests/integration/services/alpacaService.test.js:484:7)

    console.error
      Alpaca order creation error: Quantity must be a positive number

      738 |       };
      739 |     } catch (error) {
    > 740 |       console.error("Alpaca order creation error:", error.message);
          |               ^
      741 |       throw new Error(`Failed to create order: ${error.message}`);
      742 |     }
      743 |   }

      at AlpacaService.error [as createOrder] (utils/alpacaService.js:740:15)
      at Object.createOrder (tests/integration/services/alpacaService.test.js:495:23)

    console.error
      Alpaca order creation error: Quantity must be a positive number

      738 |       };
      739 |     } catch (error) {
    > 740 |       console.error("Alpaca order creation error:", error.message);
          |               ^
      741 |       throw new Error(`Failed to create order: ${error.message}`);
      742 |     }
      743 |   }

      at AlpacaService.error [as createOrder] (utils/alpacaService.js:740:15)
      at Object.createOrder (tests/integration/services/alpacaService.test.js:510:23)

    console.log
      Fetching orders from Alpaca

      at AlpacaService.log [as getOrders] (utils/alpacaService.js:748:15)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Alpaca Service Integration Tests ‚Ä∫ Account Operations ‚Ä∫ should fetch account information

    expect(received).toEqual(expected) // deep equality

    - Expected  -  4
    + Received  + 21

      Object {
    -   "buying_power": "20000.00",
    -   "cash": "10000.00",
    -   "id": "test-account-id",
    -   "portfolio_value": "12000.00",
    +   "accountBlocked": undefined,
    +   "accountId": "test-account-id",
    +   "buyingPower": 20000,
    +   "cash": 10000,
    +   "createdAt": undefined,
    +   "currency": undefined,
    +   "dayTradeCount": NaN,
    +   "dayTradingBuyingPower": NaN,
    +   "environment": "paper",
    +   "equity": NaN,
    +   "initialMargin": NaN,
    +   "lastEquity": NaN,
    +   "longMarketValue": NaN,
    +   "maintenanceMargin": NaN,
    +   "multiplier": NaN,
    +   "patternDayTrader": undefined,
    +   "portfolioValue": 12000,
    +   "regtBuyingPower": NaN,
    +   "shortMarketValue": NaN,
        "status": "ACTIVE",
    +   "tradingBlocked": undefined,
    +   "transfersBlocked": undefined,
      }

      141 |
      142 |       expect(mockClient.getAccount).toHaveBeenCalledTimes(1);
    > 143 |       expect(account).toEqual(mockAccount);
          |                       ^
      144 |     });
      145 |
      146 |     test("should handle account fetch errors gracefully", async () => {

      at Object.toEqual (tests/integration/services/alpacaService.test.js:143:23)

  ‚óè Alpaca Service Integration Tests ‚Ä∫ Account Operations ‚Ä∫ should fetch portfolio history

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      Object {
    +   "extended_hours": true,
    +   "period": Object {
          "period": "1D",
          "timeframe": "1Min",
    +   },
    +   "timeframe": "1Day",
      },

    Number of calls: 1

      165 |       });
      166 |
    > 167 |       expect(mockClient.getPortfolioHistory).toHaveBeenCalledWith({
          |                                              ^
      168 |         period: "1D",
      169 |         timeframe: "1Min",
      170 |       });

      at Object.toHaveBeenCalledWith (tests/integration/services/alpacaService.test.js:167:46)

  ‚óè Alpaca Service Integration Tests ‚Ä∫ Position Management ‚Ä∫ should fetch position for specific symbol

    Failed to fetch position for AAPL: Cannot read properties of undefined (reading 'find')

      820 |     } catch (error) {
      821 |       console.error("Error fetching position:", error.message);
    > 822 |       throw new Error(
          |             ^
      823 |         `Failed to fetch position for ${symbol}: ${error.message}`
      824 |       );
      825 |     }

      at AlpacaService.getPosition (utils/alpacaService.js:822:13)
      at Object.<anonymous> (tests/integration/services/alpacaService.test.js:218:24)

  ‚óè Alpaca Service Integration Tests ‚Ä∫ Order Management ‚Ä∫ should place market buy order

    Failed to create order: Quantity must be a positive number

      739 |     } catch (error) {
      740 |       console.error("Alpaca order creation error:", error.message);
    > 741 |       throw new Error(`Failed to create order: ${error.message}`);
          |             ^
      742 |     }
      743 |   }
      744 |

      at AlpacaService.createOrder (utils/alpacaService.js:741:13)
      at Object.createOrder (tests/integration/services/alpacaService.test.js:238:41)

  ‚óè Alpaca Service Integration Tests ‚Ä∫ Order Management ‚Ä∫ should place limit sell order

    Failed to create order: Quantity must be a positive number

      739 |     } catch (error) {
      740 |       console.error("Alpaca order creation error:", error.message);
    > 741 |       throw new Error(`Failed to create order: ${error.message}`);
          |             ^
      742 |     }
      743 |   }
      744 |

      at AlpacaService.createOrder (utils/alpacaService.js:741:13)
      at Object.createOrder (tests/integration/services/alpacaService.test.js:267:41)

  ‚óè Alpaca Service Integration Tests ‚Ä∫ Order Management ‚Ä∫ should cancel specific order

    expect(received).toBe(expected) // Object.is equality

    Expected: "order-123"
    Received: undefined

      303 |
      304 |       expect(mockClient.cancelOrder).toHaveBeenCalledWith("order-123");
    > 305 |       expect(result.id).toBe("order-123");
          |                         ^
      306 |     });
      307 |
      308 |     test("should validate order parameters", async () => {

      at Object.toBe (tests/integration/services/alpacaService.test.js:305:25)

  ‚óè Alpaca Service Integration Tests ‚Ä∫ Order Management ‚Ä∫ should validate order parameters

    expect(received).rejects.toThrow(expected)

    Expected substring: "Symbol is required"
    Received message:   "Failed to create order: Quantity must be a positive number"

          739 |     } catch (error) {
          740 |       console.error("Alpaca order creation error:", error.message);
        > 741 |       throw new Error(`Failed to create order: ${error.message}`);
              |             ^
          742 |     }
          743 |   }
          744 |

      at AlpacaService.createOrder (utils/alpacaService.js:741:13)
      at Object.createOrder (tests/integration/services/alpacaService.test.js:311:23)
      at Object.toThrow (node_modules/expect/build/index.js:218:22)
      at Object.toThrow (tests/integration/services/alpacaService.test.js:317:17)

  ‚óè Alpaca Service Integration Tests ‚Ä∫ Market Data Operations ‚Ä∫ should fetch historical bars data

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      "AAPL",
      Object {
    +   "asof": null,
        "end": "2023-01-02",
    +   "feed": null,
    +   "limit": 100,
    +   "page_token": null,
        "start": "2023-01-01",
        "timeframe": "1Day",
      },

    Number of calls: 1

      396 |       });
      397 |
    > 398 |       expect(mockClient.getBars).toHaveBeenCalledWith("AAPL", {
          |                                  ^
      399 |         start: "2023-01-01",
      400 |         end: "2023-01-02",
      401 |         timeframe: "1Day",

      at Object.toHaveBeenCalledWith (tests/integration/services/alpacaService.test.js:398:34)

  ‚óè Alpaca Service Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle market closed scenarios

    expect(received).rejects.toThrow(expected)

    Expected substring: "Market is closed"
    Received message:   "Failed to create order: Quantity must be a positive number"

          739 |     } catch (error) {
          740 |       console.error("Alpaca order creation error:", error.message);
        > 741 |       throw new Error(`Failed to create order: ${error.message}`);
              |             ^
          742 |     }
          743 |   }
          744 |

      at AlpacaService.createOrder (utils/alpacaService.js:741:13)
      at Object.createOrder (tests/integration/services/alpacaService.test.js:495:23)
      at Object.toThrow (node_modules/expect/build/index.js:218:22)
      at Object.toThrow (tests/integration/services/alpacaService.test.js:501:17)

  ‚óè Alpaca Service Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle insufficient funds

    expect(received).rejects.toThrow(expected)

    Expected substring: "Insufficient buying power"
    Received message:   "Failed to create order: Quantity must be a positive number"

          739 |     } catch (error) {
          740 |       console.error("Alpaca order creation error:", error.message);
        > 741 |       throw new Error(`Failed to create order: ${error.message}`);
              |             ^
          742 |     }
          743 |   }
          744 |

      at AlpacaService.createOrder (utils/alpacaService.js:741:13)
      at Object.createOrder (tests/integration/services/alpacaService.test.js:510:23)
      at Object.toThrow (node_modules/expect/build/index.js:218:22)
      at Object.toThrow (tests/integration/services/alpacaService.test.js:516:17)

FAIL tests/unit/utils/schemaValidator.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Schema Validator ‚Ä∫ validateData ‚Ä∫ should fail validation for missing required fields

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 1
    Received array:  [{"code": "REQUIRED_FIELD_MISSING", "field": "ticker", "message": "Required field \"ticker\" is missing"}]

      68 |       expect(result.isValid).toBe(false);
      69 |       expect(result.errors).toContain('Required field "ticker" is missing');
    > 70 |       expect(result.errorDetails).toHaveLength(2);
         |                                   ^
      71 |     });
      72 |
      73 |     test("should fail validation for unknown table", () => {

      at Object.toHaveLength (tests/unit/utils/schemaValidator.test.js:70:35)

  ‚óè Schema Validator ‚Ä∫ validateIndexes ‚Ä∫ should return valid for table without indexes

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      926 |       const result = await validateIndexes("fear_greed_index"); // Table with only created_at index
      927 |
    > 928 |       expect(result.valid).toBe(true);
          |                            ^
      929 |       expect(result.missingIndexes).toBeDefined();
      930 |     });
      931 |

      at Object.toBe (tests/unit/utils/schemaValidator.test.js:928:28)

  ‚óè Schema Validator ‚Ä∫ validateIndexes ‚Ä∫ should handle database errors

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: {"actualIndexes": ["fear_greed_index_created_at_idx"], "expectedIndexes": ["stock_prices_symbol_idx", "stock_prices_date_idx"], "isValid": false, "missingIndexes": ["stock_prices_symbol_idx", "stock_prices_date_idx"], "valid": false}

      934 |       mockQuery.mockRejectedValueOnce(dbError);
      935 |
    > 936 |       await expect(validateIndexes("stock_prices")).rejects.toThrow(
          |             ^
      937 |         "Index query failed"
      938 |       );
      939 |       expect(mockLogger.error).toHaveBeenCalled();

      at expect (node_modules/expect/build/index.js:113:15)
      at Object.expect (tests/unit/utils/schemaValidator.test.js:936:13)

  ‚óè Schema Validator ‚Ä∫ safeQuery ‚Ä∫ should execute query successfully

    expect(received).toEqual(expected) // deep equality

    Expected: {"rows": [{"count": 5}]}
    Received: null

      951 |       const result = await safeQuery("SELECT COUNT(*) as count FROM test");
      952 |
    > 953 |       expect(result).toEqual(expectedResult);
          |                      ^
      954 |       expect(mockQuery).toHaveBeenCalledWith(
      955 |         "SELECT COUNT(*) as count FROM test",
      956 |         []

      at Object.toEqual (tests/unit/utils/schemaValidator.test.js:953:22)

  ‚óè Schema Validator ‚Ä∫ safeQuery ‚Ä∫ should return null on database error and log warning

    expect(received).toBeNull()

    Received: {"rows": [{"count": 5}]}

      967 |       const result = await safeQuery("SELECT * FROM test", ["param"]);
      968 |
    > 969 |       expect(result).toBeNull();
          |                      ^
      970 |       expect(mockLogger.warn).toHaveBeenCalledWith(
      971 |         "Safe query failed, database may be unavailable",
      972 |         expect.objectContaining({

      at Object.toBeNull (tests/unit/utils/schemaValidator.test.js:969:22)

  ‚óè Schema Validator ‚Ä∫ edge cases and error scenarios ‚Ä∫ should handle very long strings gracefully

    expect(received).toContain(expected) // indexOf

    Expected value: "Field \"ticker\" exceeds maximum length of 10 characters"
    Received array: ["Field \"symbol\" exceeds maximum length of 10 characters"]

      1098 |
      1099 |       expect(result.valid).toBe(false);
    > 1100 |       expect(result.errors).toContain(
           |                             ^
      1101 |         'Field "ticker" exceeds maximum length of 10 characters'
      1102 |       );
      1103 |     });

      at Object.toContain (tests/unit/utils/schemaValidator.test.js:1100:29)

FAIL tests/unit/routes/backtest.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      üìä [BACKTEST] Getting user backtest results

      at log (routes/backtest.js:923:13)

    console.log
      üìä Retrieving backtest results for ID: test-123

      at log (routes/backtest.js:20:13)

    console.log
      üìä [BACKTEST] Getting backtest optimize

      at log (routes/backtest.js:986:13)

    console.log
      üìä [BACKTEST] Getting backtest optimize

      at log (routes/backtest.js:986:13)

    console.log
      üìä [BACKTEST] Getting backtest optimize

      at log (routes/backtest.js:986:13)

    console.log
      üìä [BACKTEST] Getting backtest optimize

      at log (routes/backtest.js:986:13)

    console.log
      üìä [BACKTEST] Getting backtest optimize

      at log (routes/backtest.js:986:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Backtest Routes Unit Tests ‚Ä∫ POST /backtest/run ‚Ä∫ should handle backtest run request

    expect(received).toHaveProperty(path)

    Expected path: "success"
    Received path: []

    Received value: {"error": "Start date and end date are required"}

      64 |       // API may return 200 for success or 400 for validation errors
      65 |       expect([200, 400]).toContain(response.status);
    > 66 |       expect(response.body).toHaveProperty("success");
         |                             ^
      67 |     });
      68 |   });
      69 |

      at Object.toHaveProperty (tests/unit/routes/backtest.test.js:66:29)

  ‚óè Backtest Routes Unit Tests ‚Ä∫ GET /backtest/results/:id ‚Ä∫ should return backtest results

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      73 |
      74 |       // API may return 200 for found or 404 for not found
    > 75 |       expect(response.status).toBe(200);
         |                               ^
      76 |       expect(response.body).toHaveProperty("success");
      77 |     });
      78 |   });

      at Object.toBe (tests/unit/routes/backtest.test.js:75:31)

  ‚óè Backtest Routes Unit Tests ‚Ä∫ GET /backtest/optimize ‚Ä∫ should return optimization results for valid strategy

    expected 200 "OK", got 404 "Not Found"

       95 |         .get("/backtest/optimize")
       96 |         .query(optimizationParams)
    >  97 |         .expect(200);
          |          ^
       98 |
       99 |       expect(response.body).toMatchObject({
      100 |         success: true,

      at Object.expect (tests/unit/routes/backtest.test.js:97:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Backtest Routes Unit Tests ‚Ä∫ GET /backtest/optimize ‚Ä∫ should require strategy_id parameter

    expected 400 "Bad Request", got 404 "Not Found"

      139 |
      140 |     test("should require strategy_id parameter", async () => {
    > 141 |       const response = await request(app).get("/backtest/optimize").expect(400);
          |                                                                     ^
      142 |
      143 |       expect(response.body).toMatchObject({
      144 |         success: false,

      at Object.expect (tests/unit/routes/backtest.test.js:141:69)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Backtest Routes Unit Tests ‚Ä∫ GET /backtest/optimize ‚Ä∫ should handle invalid parameters JSON

    expected 400 "Bad Request", got 404 "Not Found"

      151 |       const response = await request(app)
      152 |         .get("/backtest/optimize?strategy_id=test&parameters=invalid-json")
    > 153 |         .expect(400);
          |          ^
      154 |
      155 |       expect(response.body).toMatchObject({
      156 |         success: false,

      at Object.expect (tests/unit/routes/backtest.test.js:153:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Backtest Routes Unit Tests ‚Ä∫ GET /backtest/optimize ‚Ä∫ should support different optimization types and targets

    expected 200 "OK", got 404 "Not Found"

      170 |           max_iterations: 25,
      171 |         })
    > 172 |         .expect(200);
          |          ^
      173 |
      174 |       expect(response.body.data.optimization_config).toMatchObject({
      175 |         method: "genetic_algorithm",

      at Object.expect (tests/unit/routes/backtest.test.js:172:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Backtest Routes Unit Tests ‚Ä∫ GET /backtest/optimize ‚Ä∫ should handle optimization errors gracefully

    expected 200 "OK", got 404 "Not Found"

      186 |       const response = await request(app)
      187 |         .get("/backtest/optimize?strategy_id=error-test&parameters={}")
    > 188 |         .expect(200); // Our implementation generates synthetic data, so it won't error
          |          ^
      189 |
      190 |       // Restore console.error
      191 |       console.error = originalConsoleError;

      at Object.expect (tests/unit/routes/backtest.test.js:188:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

FAIL tests/unit/routes/settings.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.error
      Error fetching API keys: Error: Database connection failed
          at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/settings.test.js:79:39)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      405 |     });
      406 |   } catch (error) {
    > 407 |     console.error("Error fetching API keys:", error);
          |             ^
      408 |     res.status(500).json({
      409 |       success: false,
      410 |       error: "Failed to fetch API keys",

      at error (routes/settings.js:407:13)

    console.error
      Error storing API key: Error: API key for this provider already exists
          at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/settings.test.js:155:21)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      508 |     });
      509 |   } catch (error) {
    > 510 |     console.error("Error storing API key:", error);
          |             ^
      511 |
      512 |     if (error.message.includes("circuit breaker")) {
      513 |       return res.status(503).json({

      at error (routes/settings.js:510:13)

    console.log
      Database not available - using default onboarding status

      at log (routes/settings.js:783:15)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Settings API Routes ‚Ä∫ POST /api/settings/api-keys ‚Ä∫ should add new API key successfully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "test-jwt-token", "alpaca", ObjectContaining {"apiKey": "test-api-key", "apiSecret": "test-secret", "description": "New API Key", "isSandbox": true}
    Received: "test-jwt-token", "alpaca", {"createdAt": "2025-09-23T16:32:16.690Z", "description": "New API Key", "isSandbox": true, "keyId": "test-api-key", "secret": "test-secret"}

    Number of calls: 1

      124 |       });
      125 |
    > 126 |       expect(storeApiKey).toHaveBeenCalledWith(
          |                           ^
      127 |         "test-jwt-token",
      128 |         "alpaca",
      129 |         expect.objectContaining({

      at Object.toHaveBeenCalledWith (tests/unit/routes/settings.test.js:126:27)

  ‚óè Settings API Routes ‚Ä∫ PUT /api/settings/api-keys/:provider ‚Ä∫ should update API key successfully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "test-jwt-token", "alpaca", ObjectContaining {"apiKey": "existing-key", "apiSecret": "existing-secret", "description": "Updated API Key", "isSandbox": false}
    Received: "test-jwt-token", "alpaca", {"description": "Updated API Key", "isSandbox": false, "keyId": undefined, "secret": undefined, "updatedAt": "2025-09-23T16:32:16.700Z"}

    Number of calls: 1

      209 |
      210 |       expect(getApiKey).toHaveBeenCalledWith("test-jwt-token", "alpaca");
    > 211 |       expect(storeApiKey).toHaveBeenCalledWith(
          |                           ^
      212 |         "test-jwt-token",
      213 |         "alpaca",
      214 |         expect.objectContaining({

      at Object.toHaveBeenCalledWith (tests/unit/routes/settings.test.js:211:27)

  ‚óè Settings API Routes ‚Ä∫ GET /api/settings/onboarding-status ‚Ä∫ should return onboarding status

    expect(received).toEqual(expected) // deep equality

    - Expected  - 0
    + Received  + 1

    @@ -1,9 +1,10 @@
      Object {
        "onboarding": Object {
          "completed": true,
          "configuredProviders": 1,
    +     "fallback": false,
          "hasApiKeys": true,
          "nextStep": "complete",
        },
        "success": true,
        "timestamp": Any<String>,

      275 |         .expect(200);
      276 |
    > 277 |       expect(response.body).toEqual({
          |                             ^
      278 |         success: true,
      279 |         onboarding: {
      280 |           completed: true,

      at Object.toEqual (tests/unit/routes/settings.test.js:277:29)

FAIL tests/integration/routes/portfolio.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Core Portfolio APIs ‚Ä∫ GET /api/portfolio - should return portfolio API info

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Core Portfolio APIs ‚Ä∫ GET /api/portfolio/summary - should return portfolio summary

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Core Portfolio APIs ‚Ä∫ GET /api/portfolio/positions - should return portfolio positions

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Core Portfolio APIs ‚Ä∫ GET /api/portfolio/holdings - should return portfolio holdings

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Core Portfolio APIs ‚Ä∫ GET /api/portfolio/value - should return portfolio value data

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Core Portfolio APIs ‚Ä∫ GET /api/portfolio/allocation - should return portfolio allocation

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Core Portfolio APIs ‚Ä∫ GET /api/portfolio/allocations - should return portfolio allocations

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Analytics and Analysis APIs ‚Ä∫ GET /api/portfolio/analytics - should return portfolio analytics

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Performance and Returns APIs ‚Ä∫ GET /api/portfolio/returns - should return portfolio returns

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Performance and Returns APIs ‚Ä∫ GET /api/portfolio/benchmark - should return benchmark comparison

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Risk Management APIs ‚Ä∫ GET /api/portfolio/risk - should return risk assessment

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Risk Management APIs ‚Ä∫ GET /api/portfolio/risk-analysis - should return risk analysis

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Risk Management APIs ‚Ä∫ GET /api/portfolio/risk/analysis - should return detailed risk analysis

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Risk Management APIs ‚Ä∫ GET /api/portfolio/risk/var - should return VaR analysis

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Risk Management APIs ‚Ä∫ GET /api/portfolio/risk/stress-test - should return stress test results

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Risk Management APIs ‚Ä∫ GET /api/portfolio/risk/concentration - should return concentration risk

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Portfolio Management APIs ‚Ä∫ GET /api/portfolio/rebalance - should return rebalance recommendations

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Portfolio Management APIs ‚Ä∫ GET /api/portfolio/optimization - should return optimization suggestions

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Portfolio Management APIs ‚Ä∫ GET /api/portfolio/watchlist - should return portfolio watchlist

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Portfolio Management APIs ‚Ä∫ GET /api/portfolio/transactions - should return portfolio transactions

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Broker Integration APIs ‚Ä∫ GET /api/portfolio/api-keys - should return API keys status

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Broker Integration APIs ‚Ä∫ POST /api/portfolio/api-keys - should handle API key creation

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Health and System APIs ‚Ä∫ GET /api/portfolio/health - should return portfolio service health

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Error Handling and Authentication ‚Ä∫ should require authentication for protected endpoints

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Error Handling and Authentication ‚Ä∫ should handle invalid endpoints gracefully

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Error Handling and Authentication ‚Ä∫ should handle invalid user IDs gracefully

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Error Handling and Authentication ‚Ä∫ DELETE /api/portfolio/api-keys/test-broker - should handle API key deletion

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Error Handling and Authentication ‚Ä∫ GET /api/portfolio/data - should redirect to holdings endpoint

    connect ECONNREFUSED 127.0.0.1:3001



FAIL tests/unit/utils/logger.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Logger ‚Ä∫ Initialization ‚Ä∫ should initialize with environment variables

    expect(received).toBe(expected) // Object.is equality

    Expected: 3
    Received: 2

      43 |       const newLogger = require("../../../utils/logger");
      44 |
    > 45 |       expect(newLogger.currentLevel).toBe(3); // DEBUG level
         |                                      ^
      46 |       expect(newLogger.serviceName).toBe("test-service");
      47 |       expect(newLogger.version).toBe("2.0.0");
      48 |     });

      at Object.toBe (tests/unit/utils/logger.test.js:45:38)

  ‚óè Logger ‚Ä∫ Log Level Parsing ‚Ä∫ should default to INFO for invalid log levels

    TypeError: Cannot read properties of null (reading 'toUpperCase')

      30 |    */
      31 |   parseLogLevel(levelStr) {
    > 32 |     const level = levelStr.toUpperCase();
         |                            ^
      33 |     return LOG_LEVELS[level] !== undefined
      34 |       ? LOG_LEVELS[level]
      35 |       : LOG_LEVELS.INFO;

      at Logger.toUpperCase [as parseLogLevel] (utils/logger.js:32:28)
      at Object.parseLogLevel (tests/unit/utils/logger.test.js:69:21)

  ‚óè Logger ‚Ä∫ Output Formatting ‚Ä∫ should format output for development environment

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 2
    Received number of calls: 1

      131 |       logger.output(logEntry);
      132 |
    > 133 |       expect(consoleSpy).toHaveBeenCalledTimes(2);
          |                          ^
      134 |       expect(consoleSpy).toHaveBeenNthCalledWith(
      135 |         1,
      136 |         "[2023-01-01T00:00:00.000Z] [INFO] [12345] Test message"

      at Object.toHaveBeenCalledTimes (tests/unit/utils/logger.test.js:133:26)

  ‚óè Logger ‚Ä∫ Output Formatting ‚Ä∫ should handle development output without extra context

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "[2023-01-01T00:00:00.000Z] [INFO] [12345] Test message"
    Received: "{\"timestamp\":\"2023-01-01T00:00:00.000Z\",\"level\":\"INFO\",\"message\":\"Test message\",\"correlationId\":\"12345\"}"

    Number of calls: 1

      171 |
      172 |       expect(consoleSpy).toHaveBeenCalledTimes(1);
    > 173 |       expect(consoleSpy).toHaveBeenCalledWith(
          |                          ^
      174 |         "[2023-01-01T00:00:00.000Z] [INFO] [12345] Test message"
      175 |       );
      176 |     });

      at Object.toHaveBeenCalledWith (tests/unit/utils/logger.test.js:173:26)

  ‚óè Logger ‚Ä∫ Warning Logging ‚Ä∫ should log warning messages

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      209 |       logger.warn("Warning message");
      210 |
    > 211 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      212 |     });
      213 |
      214 |     test("should log warning with context", () => {

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:211:26)

  ‚óè Logger ‚Ä∫ Warning Logging ‚Ä∫ should log warning with context

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      215 |       logger.warn("Warning message", { component: "test" });
      216 |
    > 217 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      218 |     });
      219 |   });
      220 |

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:217:26)

  ‚óè Logger ‚Ä∫ Info Logging ‚Ä∫ should log info messages

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      223 |       logger.info("Info message");
      224 |
    > 225 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      226 |     });
      227 |
      228 |     test("should log info with context", () => {

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:225:26)

  ‚óè Logger ‚Ä∫ Info Logging ‚Ä∫ should log info with context

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      229 |       logger.info("Info message", { operation: "test" });
      230 |
    > 231 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      232 |     });
      233 |   });
      234 |

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:231:26)

  ‚óè Logger ‚Ä∫ Debug Logging ‚Ä∫ should log debug messages when level is DEBUG

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      247 |       debugLogger.debug("Debug message");
      248 |
    > 249 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      250 |     });
      251 |   });
      252 |

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:249:26)

  ‚óè Logger ‚Ä∫ Specialized Logging Methods ‚Ä∫ should log database operations

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      257 |       });
      258 |
    > 259 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      260 |     });
      261 |
      262 |     test("should log API calls", () => {

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:259:26)

  ‚óè Logger ‚Ä∫ Specialized Logging Methods ‚Ä∫ should log API calls

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      263 |       logger.apiCall("GET", "/api/stocks", { statusCode: 200 });
      264 |
    > 265 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      266 |     });
      267 |
      268 |     test("should log authentication events", () => {

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:265:26)

  ‚óè Logger ‚Ä∫ Specialized Logging Methods ‚Ä∫ should log authentication events

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      269 |       logger.auth("login_attempt", { userId: "123" });
      270 |
    > 271 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      272 |     });
      273 |
      274 |     test("should log performance with normal duration", () => {

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:271:26)

  ‚óè Logger ‚Ä∫ Specialized Logging Methods ‚Ä∫ should log performance with normal duration

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      275 |       logger.performance("database_query", 1000, { table: "stocks" });
      276 |
    > 277 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      278 |     });
      279 |
      280 |     test("should log performance warning for slow operations", () => {

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:277:26)

  ‚óè Logger ‚Ä∫ Specialized Logging Methods ‚Ä∫ should log performance warning for slow operations

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      281 |       logger.performance("slow_query", 6000, { table: "stocks" });
      282 |
    > 283 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      284 |     });
      285 |
      286 |     test("should log security events", () => {

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:283:26)

  ‚óè Logger ‚Ä∫ Specialized Logging Methods ‚Ä∫ should log security events

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      287 |       logger.security("unauthorized_access", { ip: "192.168.1.1" });
      288 |
    > 289 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      290 |     });
      291 |
      292 |     test("should log user actions", () => {

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:289:26)

  ‚óè Logger ‚Ä∫ Specialized Logging Methods ‚Ä∫ should log user actions

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      293 |       logger.userAction("user123456789", "login", { method: "oauth" });
      294 |
    > 295 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      296 |     });
      297 |
      298 |     test("should log user actions for anonymous users", () => {

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:295:26)

  ‚óè Logger ‚Ä∫ Specialized Logging Methods ‚Ä∫ should log user actions for anonymous users

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      299 |       logger.userAction(null, "view_page", { page: "home" });
      300 |
    > 301 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      302 |     });
      303 |   });
      304 |

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:301:26)

  ‚óè Logger ‚Ä∫ Request Middleware ‚Ä∫ should handle incoming request

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      328 |       expect(req.logger).toBe(logger);
      329 |       expect(next).toHaveBeenCalled();
    > 330 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      331 |     });
      332 |
      333 |     test("should handle request with authorization header", () => {

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:330:26)

  ‚óè Logger ‚Ä∫ Error Middleware ‚Ä∫ should handle errors

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      400 |
      401 |       expect(next).toHaveBeenCalledWith(error);
    > 402 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      403 |     });
      404 |   });
      405 |

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:402:26)

  ‚óè Logger ‚Ä∫ Child Logger ‚Ä∫ should use child logger context in logs

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      416 |       childLogger.info("Test message", { extra: "data" });
      417 |
    > 418 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      419 |     });
      420 |   });
      421 |

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:418:26)

  ‚óè Logger ‚Ä∫ Application Lifecycle Logging ‚Ä∫ should log application startup

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      424 |       logger.startup({ port: 3000 });
      425 |
    > 426 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      427 |     });
      428 |
      429 |     test("should log application shutdown", () => {

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:426:26)

  ‚óè Logger ‚Ä∫ Application Lifecycle Logging ‚Ä∫ should log application shutdown

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      430 |       logger.shutdown({ reason: "SIGTERM" });
      431 |
    > 432 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      433 |     });
      434 |
      435 |     test("should log configuration loaded", () => {

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:432:26)

  ‚óè Logger ‚Ä∫ Application Lifecycle Logging ‚Ä∫ should log configuration loaded

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      442 |       logger.configLoaded(config);
      443 |
    > 444 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      445 |     });
      446 |   });
      447 |

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:444:26)

FAIL tests/unit/routes/metrics.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      üìä Metrics endpoint called

      at log (routes/metrics.js:152:13)

    console.log
      üìä Metrics endpoint called

      at log (routes/metrics.js:152:13)

    console.log
      üìä Metrics endpoint called

      at log (routes/metrics.js:152:13)

    console.log
      üìä Metrics endpoint called

      at log (routes/metrics.js:152:13)

    console.log
      üìä Metrics endpoint called

      at log (routes/metrics.js:152:13)

    console.log
      üìä Metrics endpoint called

      at log (routes/metrics.js:152:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Metrics Routes ‚Ä∫ GET /metrics/ ‚Ä∫ should return comprehensive metrics with default pagination

    expect(received).toHaveProperty(path)

    Expected path: "stocks"
    Received path: []

    Received value: {"data": [{"currentPrice": 100, "growthMetric": 0.5, "lastUpdated": "2025-09-23T16:32:16.985Z", "macd": 0, "momentumMetric": 0.5, "overallScore": 0.5, "qualityMetric": 0.5, "rsi": 50, "sma20": 100, "symbol": "TEST", "trendMetric": 0.5, "valueMetric": 0.5, "volume": 1000000}], "pagination": {"hasMore": false, "limit": 50, "page": 1, "total": 1, "totalPages": 1}, "service": "financial-platform", "success": true, "summary": {"averageScore": 0.5, "totalStocks": 1}, "timestamp": "2025-09-23T16:32:16.985Z"}

      39 |       const response = await request(app).get("/metrics/").expect(200);
      40 |
    > 41 |       expect(response.body).toHaveProperty("stocks");
         |                             ^
      42 |       expect(response.body).toHaveProperty("pagination");
      43 |       expect(response.body.pagination).toMatchObject({
      44 |         currentPage: 1,

      at Object.toHaveProperty (tests/unit/routes/metrics.test.js:41:29)

  ‚óè Metrics Routes ‚Ä∫ GET /metrics/ ‚Ä∫ should handle search filtering

    expect(received).toMatchObject(expected)

    - Expected  - 3
    + Received  + 0

      Object {
    -   "currentPage": 1,
    -   "itemsPerPage": 10,
    -   "totalItems": Any<Number>,
        "totalPages": Any<Number>,
      }

      101 |
      102 |       expect(response.body).toHaveProperty("pagination");
    > 103 |       expect(response.body.pagination).toMatchObject({
          |                                        ^
      104 |         currentPage: 1,
      105 |         itemsPerPage: 10,
      106 |         totalPages: expect.any(Number),

      at Object.toMatchObject (tests/unit/routes/metrics.test.js:103:40)

  ‚óè Metrics Routes ‚Ä∫ GET /metrics/ ‚Ä∫ should handle sector filtering

    expect(received).toBeDefined()

    Received: undefined

      119 |         .expect(200);
      120 |
    > 121 |       expect(response.body.stocks).toBeDefined();
          |                                    ^
      122 |       expect(response.body).toHaveProperty("pagination");
      123 |     });
      124 |

      at Object.toBeDefined (tests/unit/routes/metrics.test.js:121:36)

  ‚óè Metrics Routes ‚Ä∫ GET /metrics/ ‚Ä∫ should handle metric range filtering

    expect(received).toBeDefined()

    Received: undefined

      129 |         .expect(200);
      130 |
    > 131 |       expect(response.body.stocks).toBeDefined();
          |                                    ^
      132 |       expect(response.body).toHaveProperty("pagination");
      133 |     });
      134 |

      at Object.toBeDefined (tests/unit/routes/metrics.test.js:131:36)

  ‚óè Metrics Routes ‚Ä∫ GET /metrics/ ‚Ä∫ should prevent SQL injection in sort parameters

    expect(received).toBeDefined()

    Received: undefined

      142 |         .expect(200);
      143 |
    > 144 |       expect(response.body.stocks).toBeDefined();
          |                                    ^
      145 |       expect(response.body).toHaveProperty("pagination");
      146 |     });
      147 |

      at Object.toBeDefined (tests/unit/routes/metrics.test.js:144:36)

  ‚óè Metrics Routes ‚Ä∫ GET /metrics/ ‚Ä∫ should limit page size to maximum

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: undefined

      152 |         .expect(200);
      153 |
    > 154 |       expect(response.body.pagination.itemsPerPage).toBe(200);
          |                                                     ^
      155 |     });
      156 |
      157 |     // Database error testing skipped - using real database

      at Object.toBe (tests/unit/routes/metrics.test.js:154:53)

FAIL tests/unit/routes/user.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè User Routes - 2FA Functionality ‚Ä∫ POST /user/two-factor (enable) ‚Ä∫ should enable 2FA and save secret to database

    expected 200 "OK", got 404 "Not Found"

      62 |           userId: "test-user-123",
      63 |         })
    > 64 |         .expect(200);
         |          ^
      65 |
      66 |       expect(response.body.success).toBe(true);
      67 |       expect(response.body.message).toContain("2FA setup initiated");

      at Object.expect (tests/unit/routes/user.test.js:64:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè User Routes - 2FA Functionality ‚Ä∫ POST /user/two-factor (enable) ‚Ä∫ should handle database errors gracefully during setup

    expected 200 "OK", got 404 "Not Found"

      86 |           userId: "test-user-123",
      87 |         })
    > 88 |         .expect(200);
         |          ^
      89 |
      90 |       expect(response.body.success).toBe(true);
      91 |       expect(response.body.message).toContain("2FA setup initiated");

      at Object.expect (tests/unit/routes/user.test.js:88:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè User Routes - 2FA Functionality ‚Ä∫ POST /user/two-factor (verify) ‚Ä∫ should verify 2FA code and activate

    expected 200 "OK", got 404 "Not Found"

      115 |           code: "123456",
      116 |         })
    > 117 |         .expect(200);
          |          ^
      118 |
      119 |       expect(response.body.success).toBe(true);
      120 |       expect(response.body.message).toContain("setup completed successfully");

      at Object.expect (tests/unit/routes/user.test.js:117:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè User Routes - 2FA Functionality ‚Ä∫ POST /user/two-factor (verify) ‚Ä∫ should reject invalid 2FA codes

    expected 400 "Bad Request", got 404 "Not Found"

      148 |           code: "invalid",
      149 |         })
    > 150 |         .expect(400);
          |          ^
      151 |
      152 |       expect(response.body.success).toBe(false);
      153 |       expect(response.body.error).toBe("Invalid 2FA code");

      at Object.expect (tests/unit/routes/user.test.js:150:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè User Routes - 2FA Functionality ‚Ä∫ POST /user/two-factor (verify) ‚Ä∫ should handle missing 2FA setup

    expected 400 "Bad Request", got 404 "Not Found"

      164 |           code: "123456",
      165 |         })
    > 166 |         .expect(400);
          |          ^
      167 |
      168 |       expect(response.body.success).toBe(false);
      169 |       expect(response.body.error).toBe("No 2FA setup found");

      at Object.expect (tests/unit/routes/user.test.js:166:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè User Routes - 2FA Functionality ‚Ä∫ POST /user/two-factor (disable) ‚Ä∫ should disable 2FA after verifying current code

    expected 200 "OK", got 404 "Not Found"

      191 |           code: "123456",
      192 |         })
    > 193 |         .expect(200);
          |          ^
      194 |
      195 |       expect(response.body.success).toBe(true);
      196 |       expect(response.body.message).toContain("disabled successfully");

      at Object.expect (tests/unit/routes/user.test.js:193:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè User Routes - 2FA Functionality ‚Ä∫ POST /user/two-factor (disable) ‚Ä∫ should require valid code to disable

    expected 400 "Bad Request", got 404 "Not Found"

      223 |           code: "invalid",
      224 |         })
    > 225 |         .expect(400);
          |          ^
      226 |
      227 |       expect(response.body.success).toBe(false);
      228 |       expect(response.body.error).toBe("Invalid 2FA code");

      at Object.expect (tests/unit/routes/user.test.js:225:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè User Routes - 2FA Functionality ‚Ä∫ Error handling ‚Ä∫ should require action parameter

    expected 400 "Bad Request", got 404 "Not Found"

      237 |           userId: "test-user-123",
      238 |         })
    > 239 |         .expect(400);
          |          ^
      240 |
      241 |       expect(response.body.success).toBe(false);
      242 |       expect(response.body.error).toBe("Missing required parameters");

      at Object.expect (tests/unit/routes/user.test.js:239:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè User Routes - 2FA Functionality ‚Ä∫ Error handling ‚Ä∫ should require userId parameter

    expected 400 "Bad Request", got 404 "Not Found"

      249 |           action: "enable",
      250 |         })
    > 251 |         .expect(400);
          |          ^
      252 |
      253 |       expect(response.body.success).toBe(false);
      254 |       expect(response.body.error).toBe("Missing required parameters");

      at Object.expect (tests/unit/routes/user.test.js:251:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè User Routes - 2FA Functionality ‚Ä∫ Error handling ‚Ä∫ should handle invalid actions

    expected 400 "Bad Request", got 404 "Not Found"

      262 |           userId: "test-user-123",
      263 |         })
    > 264 |         .expect(400);
          |          ^
      265 |
      266 |       expect(response.body.success).toBe(false);
      267 |       expect(response.body.error).toBe("Invalid action");

      at Object.expect (tests/unit/routes/user.test.js:264:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

FAIL tests/integration/utils/liveDataManager.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.error
      Failed to add connection : Error: Connection ID is required
          at LiveDataManager._addConnectionInternal (/home/stocks/algo/webapp/lambda/utils/liveDataManager.js:303:15)
          at LiveDataManager._addConnectionInternal [as addConnection] (/home/stocks/algo/webapp/lambda/utils/liveDataManager.js:292:17)
          at Object.addConnection (/home/stocks/algo/webapp/lambda/tests/integration/utils/liveDataManager.test.js:530:38)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      370 |       };
      371 |     } catch (error) {
    > 372 |       console.error(`Failed to add connection ${connectionId}:`, error);
          |               ^
      373 |       return {
      374 |         success: false,
      375 |         error: error.message,

      at LiveDataManager.error [as _addConnectionInternal] (utils/liveDataManager.js:372:15)
      at LiveDataManager._addConnectionInternal [as addConnection] (utils/liveDataManager.js:292:17)
      at Object.addConnection (tests/integration/utils/liveDataManager.test.js:530:38)

    console.error
      Failed to add subscription for symbol , user : Error: Symbol, provider, connectionId, and userId are required
          at LiveDataManager.addSubscription (/home/stocks/algo/webapp/lambda/utils/liveDataManager.js:547:15)
          at Object.addSubscription (/home/stocks/algo/webapp/lambda/tests/integration/utils/liveDataManager.test.js:538:38)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      598 |       };
      599 |     } catch (error) {
    > 600 |       console.error(
          |               ^
      601 |         `Failed to add subscription for symbol ${symbol}, user ${userId}:`,
      602 |         error
      603 |       );

      at LiveDataManager.error [as addSubscription] (utils/liveDataManager.js:600:15)
      at Object.addSubscription (tests/integration/utils/liveDataManager.test.js:538:38)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Live Data Manager Integration Tests ‚Ä∫ Connection Management ‚Ä∫ should get connection status

    TypeError: Cannot read properties of null (reading 'connectionId')

      84 |
      85 |       expect(status).toBeDefined();
    > 86 |       expect(status.connectionId).toBe(connectionId);
         |                     ^
      87 |       expect(status.provider).toBe("alpaca");
      88 |       expect(status.symbols).toBeDefined();
      89 |       expect(status.status).toBe("active");

      at Object.connectionId (tests/integration/utils/liveDataManager.test.js:86:21)

  ‚óè Live Data Manager Integration Tests ‚Ä∫ Connection Management ‚Ä∫ should remove connection successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      100 |
      101 |       expect(result).toBeDefined();
    > 102 |       expect(result.success).toBe(true);
          |                              ^
      103 |       expect(result.connectionId).toBe(connectionId);
      104 |       expect(result.removedAt).toBeDefined();
      105 |       expect(result.provider).toBe("alpaca");

      at Object.toBe (tests/integration/utils/liveDataManager.test.js:102:30)

FAIL tests/unit/routes/earnings.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      üìà Earnings data requested

      at log (routes/earnings.js:14:13)

    console.log
      üìà Earnings data requested

      at log (routes/earnings.js:14:13)

    console.log
      üìà Earnings details requested for symbol: AAPL

      at log (routes/earnings.js:360:13)

    console.log
      üìà Earnings details requested for symbol: INVALID

      at log (routes/earnings.js:360:13)

    console.log
      üìà Earnings data requested

      at log (routes/earnings.js:14:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Earnings Routes Unit Tests ‚Ä∫ GET /earnings ‚Ä∫ should delegate to calendar earnings endpoint

    expect(received).toMatchObject(expected)

    - Expected  - 2
    + Received  + 0

      Object {
    -   "earnings": Any<Array>,
        "success": true,
    -   "summary": Any<Object>,
      }

      49 |
      50 |       expect(response.status).toBe(200);
    > 51 |       expect(response.body).toMatchObject({
         |                             ^
      52 |         success: true,
      53 |         earnings: expect.any(Array),
      54 |         summary: expect.any(Object),

      at Object.toMatchObject (tests/unit/routes/earnings.test.js:51:29)

  ‚óè Earnings Routes Unit Tests ‚Ä∫ GET /earnings ‚Ä∫ should handle calendar delegation errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      66 |       const response = await request(app).get("/earnings");
      67 |
    > 68 |       expect(response.status).toBe(500);
         |                               ^
      69 |       expect(response.body).toMatchObject({
      70 |         success: false,
      71 |         error: "Failed to fetch earnings data",

      at Object.toBe (tests/unit/routes/earnings.test.js:68:31)

  ‚óè Earnings Routes Unit Tests ‚Ä∫ GET /earnings/:symbol ‚Ä∫ should delegate to calendar earnings with symbol filter

    expect(received).toMatchObject(expected)

    - Expected  - 1
    + Received  + 0

      Object {
    -   "earnings": Any<Array>,
        "success": true,
        "symbol": "AAPL",
      }

       96 |
       97 |       expect(response.status).toBe(200);
    >  98 |       expect(response.body).toMatchObject({
          |                             ^
       99 |         success: true,
      100 |         earnings: expect.any(Array),
      101 |         symbol: "AAPL",

      at Object.toMatchObject (tests/unit/routes/earnings.test.js:98:29)

  ‚óè Earnings Routes Unit Tests ‚Ä∫ GET /earnings/:symbol ‚Ä∫ should handle symbol-specific delegation errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 404

      113 |       const response = await request(app).get("/earnings/INVALID");
      114 |
    > 115 |       expect(response.status).toBe(500);
          |                               ^
      116 |       expect(response.body).toMatchObject({
      117 |         success: false,
      118 |         error: "Failed to fetch earnings details",

      at Object.toBe (tests/unit/routes/earnings.test.js:115:31)

  ‚óè Earnings Routes Unit Tests ‚Ä∫ Error handling ‚Ä∫ should handle unexpected errors gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      131 |       const response = await request(app).get("/earnings");
      132 |
    > 133 |       expect(response.status).toBe(500);
          |                               ^
      134 |       expect(response.body).toMatchObject({
      135 |         success: false,
      136 |         error: "Failed to fetch earnings data",

      at Object.toBe (tests/unit/routes/earnings.test.js:133:31)

FAIL tests/integration/utils/tradingModeHelper.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Trading Mode Management ‚Ä∫ should get current trading mode

    expect(received).toBeDefined()

    Received: undefined

      24 |
      25 |       expect(currentMode).toBeDefined();
    > 26 |       expect(currentMode.mode).toBeDefined();
         |                                ^
      27 |       expect(["paper", "live", "simulation", "backtest"]).toContain(
      28 |         currentMode.mode
      29 |       );

      at Object.toBeDefined (tests/integration/utils/tradingModeHelper.test.js:26:32)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Trading Mode Management ‚Ä∫ should switch to paper trading mode

    expect(received).toBe(expected) // Object.is equality

    Expected: "paper"
    Received: undefined

      43 |       expect(switchResult.success).toBe(true);
      44 |       expect(switchResult.previousMode).toBeDefined();
    > 45 |       expect(switchResult.currentMode).toBe("paper");
         |                                        ^
      46 |       expect(switchResult.switchedAt).toBeDefined();
      47 |       expect(switchResult.confirmation).toBeDefined();
      48 |     });

      at Object.toBe (tests/integration/utils/tradingModeHelper.test.js:45:40)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Trading Mode Management ‚Ä∫ should switch to live trading mode with validation

    expect(received).toBe(expected) // Object.is equality

    Expected: "live"
    Received: undefined

      70 |
      71 |       if (switchResult.success) {
    > 72 |         expect(switchResult.currentMode).toBe("live");
         |                                          ^
      73 |         expect(switchResult.riskLimits).toEqual(liveConfig.riskLimits);
      74 |         expect(switchResult.safeguards).toBeDefined();
      75 |       } else {

      at Object.toBe (tests/integration/utils/tradingModeHelper.test.js:72:42)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Trading Mode Management ‚Ä∫ should handle simulation mode

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

       95 |       );
       96 |
    >  97 |       expect(switchResult.success).toBe(true);
          |                                    ^
       98 |       expect(switchResult.currentMode).toBe("simulation");
       99 |       expect(switchResult.simulationSettings).toEqual(simulationConfig);
      100 |     });

      at Object.toBe (tests/integration/utils/tradingModeHelper.test.js:97:36)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Mode Validation ‚Ä∫ should validate paper trading requirements

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: undefined

      110 |
      111 |       expect(validation).toBeDefined();
    > 112 |       expect(validation.isValid).toBe(true);
          |                                  ^
      113 |       expect(validation.requirements).toBeDefined();
      114 |       expect(validation.checks).toBeDefined();
      115 |

      at Object.toBe (tests/integration/utils/tradingModeHelper.test.js:112:34)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Mode Validation ‚Ä∫ should validate live trading requirements

    TypeError: Cannot read properties of undefined (reading 'find')

      141 |
      142 |       requiredChecks.forEach((checkName) => {
    > 143 |         const check = validation.checks.find((c) => c.name === checkName);
          |                                         ^
      144 |         expect(check).toBeDefined();
      145 |       });
      146 |     });

      at find (tests/integration/utils/tradingModeHelper.test.js:143:41)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/utils/tradingModeHelper.test.js:142:22)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Mode Validation ‚Ä∫ should prevent unauthorized mode switches

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      155 |       );
      156 |
    > 157 |       expect(switchResult.success).toBe(false);
          |                                    ^
      158 |       expect(switchResult.error).toBeDefined();
      159 |       expect(switchResult.error.code).toBe("UNAUTHORIZED");
      160 |     });

      at Object.toBe (tests/integration/utils/tradingModeHelper.test.js:157:36)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Trading Environment Configuration ‚Ä∫ should configure paper trading environment

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: undefined

      177 |
      178 |       expect(configResult).toBeDefined();
    > 179 |       expect(configResult.success).toBe(true);
          |                                    ^
      180 |       expect(configResult.configuration).toEqual(paperConfig);
      181 |       expect(configResult.environmentReady).toBe(true);
      182 |     });

      at Object.toBe (tests/integration/utils/tradingModeHelper.test.js:179:36)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Trading Environment Configuration ‚Ä∫ should configure live trading environment

    expect(received).toBeDefined()

    Received: undefined

      204 |       } else {
      205 |         // May fail in test environment
    > 206 |         expect(configResult.error).toBeDefined();
          |                                    ^
      207 |       }
      208 |     });
      209 |

      at Object.toBeDefined (tests/integration/utils/tradingModeHelper.test.js:206:36)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Trading Environment Configuration ‚Ä∫ should handle environment health checks

    expect(received).toBeDefined()

    Received: undefined

      213 |
      214 |       expect(healthCheck).toBeDefined();
    > 215 |       expect(healthCheck.status).toBeDefined();
          |                                  ^
      216 |       expect(["healthy", "degraded", "unhealthy"]).toContain(
      217 |         healthCheck.status
      218 |       );

      at Object.toBeDefined (tests/integration/utils/tradingModeHelper.test.js:215:34)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Risk Management Integration ‚Ä∫ should enforce risk limits by trading mode

    expect(received).toBeDefined()

    Received: undefined

      245 |
      246 |       expect(riskCheck).toBeDefined();
    > 247 |       expect(riskCheck.approved).toBeDefined();
          |                                  ^
      248 |       expect(riskCheck.riskScore).toBeDefined();
      249 |       expect(riskCheck.appliedLimits).toBeDefined();
      250 |

      at Object.toBeDefined (tests/integration/utils/tradingModeHelper.test.js:247:34)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Mode-Specific Features ‚Ä∫ should track paper trading performance

    expect(received).toBeDefined()

    Received: undefined

      321 |       expect(performance).toBeDefined();
      322 |       expect(performance.totalReturn).toBeDefined();
    > 323 |       expect(performance.realizedPnL).toBeDefined();
          |                                       ^
      324 |       expect(performance.unrealizedPnL).toBeDefined();
      325 |       expect(performance.tradeCount).toBeDefined();
      326 |       expect(performance.winRate).toBeDefined();

      at Object.toBeDefined (tests/integration/utils/tradingModeHelper.test.js:323:39)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Mode-Specific Features ‚Ä∫ should handle backtesting mode

    expect(received).toBeDefined()

    Received: undefined

      348 |
      349 |       expect(backtestResult).toBeDefined();
    > 350 |       expect(backtestResult.backtestId).toBeDefined();
          |                                         ^
      351 |       expect(backtestResult.status).toBeDefined();
      352 |       expect(backtestResult.progress).toBeDefined();
      353 |

      at Object.toBeDefined (tests/integration/utils/tradingModeHelper.test.js:350:41)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Data Isolation and Security ‚Ä∫ should maintain data isolation between modes

    TypeError: tradingModeHelper.getPositions is not a function

      374 |       });
      375 |
    > 376 |       const paperPositions = await tradingModeHelper.getPositions(userId);
          |                                                      ^
      377 |
      378 |       // Switch to simulation mode
      379 |       await tradingModeHelper.switchMode(userId, "simulation");

      at Object.getPositions (tests/integration/utils/tradingModeHelper.test.js:376:54)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Data Isolation and Security ‚Ä∫ should secure live trading credentials

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: undefined

      398 |
      399 |       expect(securityCheck).toBeDefined();
    > 400 |       expect(securityCheck.encrypted).toBe(true);
          |                                       ^
      401 |       expect(securityCheck.keyStrength).toBeDefined();
      402 |       expect(securityCheck.securityScore).toBeDefined();
      403 |

      at Object.toBe (tests/integration/utils/tradingModeHelper.test.js:400:39)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Performance and Monitoring ‚Ä∫ should monitor mode switching performance

    expect(received).toBeDefined()

    Received: undefined

      421 |       expect(metrics.averageSwitchTime).toBeDefined();
      422 |       expect(metrics.successRate).toBeDefined();
    > 423 |       expect(metrics.activeUsers).toBeDefined();
          |                                   ^
      424 |     });
      425 |
      426 |     test("should handle concurrent mode operations", async () => {

      at Object.toBeDefined (tests/integration/utils/tradingModeHelper.test.js:423:35)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Performance and Monitoring ‚Ä∫ should handle concurrent mode operations

    TypeError: tradingModeHelper.getPositions is not a function

      432 |         tradingModeHelper.validateModeRequirements(userId, "paper"),
      433 |         tradingModeHelper.getCurrentRiskLimits(userId),
    > 434 |         tradingModeHelper.getPositions(userId),
          |                           ^
      435 |       ];
      436 |
      437 |       const results = await Promise.all(operations);

      at Object.getPositions (tests/integration/utils/tradingModeHelper.test.js:434:27)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle invalid mode transitions

    expect(received).toBe(expected) // Object.is equality

    Expected: "INVALID_MODE"
    Received: undefined

      455 |       expect(invalidTransition.success).toBe(false);
      456 |       expect(invalidTransition.error).toBeDefined();
    > 457 |       expect(invalidTransition.error.code).toBe("INVALID_MODE");
          |                                            ^
      458 |     });
      459 |
      460 |     test("should handle system failures gracefully", async () => {

      at Object.toBe (tests/integration/utils/tradingModeHelper.test.js:457:44)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle system failures gracefully

    expect(received).toBeDefined()

    Received: undefined

      471 |
      472 |       expect(failureRecovery).toBeDefined();
    > 473 |       expect(failureRecovery.recovered).toBeDefined();
          |                                         ^
      474 |       expect(failureRecovery.fallbackActivated).toBeDefined();
      475 |
      476 |       if (failureRecovery.fallbackActivated) {

      at Object.toBeDefined (tests/integration/utils/tradingModeHelper.test.js:473:41)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle network connectivity issues

    expect(received).toBeDefined()

    Received: undefined

      485 |
      486 |       expect(connectivityCheck).toBeDefined();
    > 487 |       expect(connectivityCheck.status).toBeDefined();
          |                                        ^
      488 |       expect(["connected", "degraded", "disconnected"]).toContain(
      489 |         connectivityCheck.status
      490 |       );

      at Object.toBeDefined (tests/integration/utils/tradingModeHelper.test.js:487:40)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Audit and Compliance ‚Ä∫ should log all mode changes

    expect(received).toBe(expected) // Object.is equality

    Expected: "MODE_SWITCH"
    Received: "mode_switch"

      516 |
      517 |       const latestEntry = auditLog.entries[0];
    > 518 |       expect(latestEntry.action).toBe("MODE_SWITCH");
          |                                  ^
      519 |       expect(latestEntry.userId).toBe(userId);
      520 |       expect(latestEntry.details.targetMode).toBe("paper");
      521 |       expect(latestEntry.timestamp).toBeDefined();

      at Object.toBe (tests/integration/utils/tradingModeHelper.test.js:518:34)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Audit and Compliance ‚Ä∫ should maintain compliance records

    expect(received).toBeDefined()

    Received: undefined

      527 |
      528 |       expect(compliance).toBeDefined();
    > 529 |       expect(compliance.status).toBeDefined();
          |                                 ^
      530 |       expect(compliance.checks).toBeDefined();
      531 |       expect(compliance.lastUpdate).toBeDefined();
      532 |

      at Object.toBeDefined (tests/integration/utils/tradingModeHelper.test.js:529:33)

FAIL tests/integration/utils/alertSystem.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Alert System Integration Tests ‚Ä∫ Alert Processing and Database Integration ‚Ä∫ should create and store alerts in database

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)

  ‚óè Alert System Integration Tests ‚Ä∫ Alert Processing and Database Integration ‚Ä∫ should handle multiple alert types

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)

  ‚óè Alert System Integration Tests ‚Ä∫ Alert Processing and Database Integration ‚Ä∫ should process provider performance alerts

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)

  ‚óè Alert System Integration Tests ‚Ä∫ Alert Processing and Database Integration ‚Ä∫ should handle cost monitoring alerts

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)

  ‚óè Alert System Integration Tests ‚Ä∫ Alert Subscription and Filtering ‚Ä∫ should manage alert subscriptions

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)

  ‚óè Alert System Integration Tests ‚Ä∫ Alert Subscription and Filtering ‚Ä∫ should handle multiple subscriptions

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)

  ‚óè Alert System Integration Tests ‚Ä∫ Alert Deduplication and Rate Limiting ‚Ä∫ should deduplicate similar alerts

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)

  ‚óè Alert System Integration Tests ‚Ä∫ Alert Deduplication and Rate Limiting ‚Ä∫ should respect rate limiting

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)

  ‚óè Alert System Integration Tests ‚Ä∫ Alert Metrics and Analytics ‚Ä∫ should calculate alert statistics

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)

  ‚óè Alert System Integration Tests ‚Ä∫ Alert Metrics and Analytics ‚Ä∫ should track alert trends

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)

  ‚óè Alert System Integration Tests ‚Ä∫ Error Handling and Recovery ‚Ä∫ should handle invalid alert data gracefully

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)

  ‚óè Alert System Integration Tests ‚Ä∫ Error Handling and Recovery ‚Ä∫ should recover from subscription callback errors

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)

  ‚óè Alert System Integration Tests ‚Ä∫ Error Handling and Recovery ‚Ä∫ should handle database connectivity issues

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)

  ‚óè Alert System Integration Tests ‚Ä∫ Configuration and Customization ‚Ä∫ should allow threshold customization

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)

  ‚óè Alert System Integration Tests ‚Ä∫ Configuration and Customization ‚Ä∫ should support custom alert processors

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)

  ‚óè Alert System Integration Tests ‚Ä∫ Performance and Scalability ‚Ä∫ should handle high volume of alerts efficiently

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)

  ‚óè Alert System Integration Tests ‚Ä∫ Performance and Scalability ‚Ä∫ should maintain memory usage under control

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)

  ‚óè Alert System Integration Tests ‚Ä∫ Integration with Real-Time Services ‚Ä∫ should integrate with live data monitoring

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)


  ‚óè Test suite failed to run

    TypeError: alertSystem.stop is not a function

      19 |   afterAll(async () => {
      20 |     if (alertSystem) {
    > 21 |       alertSystem.stop();
         |                   ^
      22 |     }
      23 |     await closeDatabase();
      24 |   });

      at Object.stop (tests/integration/utils/alertSystem.test.js:21:19)

FAIL tests/integration/utils/logger.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      {"timestamp":"2025-09-23T16:32:17.674Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Test error message","correlationId":"20c2f87e","userId":"test123","operation":"test","severity":"ERROR"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

    console.log
      {"timestamp":"2025-09-23T16:32:17.676Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Test warning message","correlationId":"984cf482","severity":"WARN"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

    console.log
      {"timestamp":"2025-09-23T16:32:17.676Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Test info message","correlationId":"59a46d2c","severity":"INFO"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

    console.log
      {"timestamp":"2025-09-23T16:32:17.677Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Database operation: SELECT * FROM company_profile","correlationId":"a8b9550c","duration":150,"rows":25,"component":"database","operation":"SELECT * FROM company_profile","severity":"INFO"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

    console.log
      {"timestamp":"2025-09-23T16:32:17.677Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"API call: GET /api/portfolio","correlationId":"505e8ad1","userId":"test123","component":"api-client","method":"GET","url":"/api/portfolio","severity":"INFO"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

    console.log
      {"timestamp":"2025-09-23T16:32:17.678Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Authentication event: login_success","correlationId":"9aa5530d","userId":"test123","ip":"127.0.0.1","component":"auth","event":"login_success","severity":"INFO"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

    console.log
      {"timestamp":"2025-09-23T16:32:17.678Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Performance: portfolio_calculation completed in 250ms","correlationId":"e3bafb49","symbols":10,"userId":"test123","component":"performance","operation":"portfolio_calculation","duration_ms":250,"severity":"INFO"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

    console.log
      {"timestamp":"2025-09-23T16:32:17.679Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Security event: unauthorized_access_attempt","correlationId":"39d44044","ip":"192.168.1.100","endpoint":"/admin","component":"security","event":"unauthorized_access_attempt","severity":"WARN"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

    console.log
      {"timestamp":1758645137679,"level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"User action: portfolio_view","correlationId":"556f1ef1","symbol":"AAPL","component":"user-action","userId":"test_use...","action":"portfolio_view","severity":"INFO"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

    console.log
      {"timestamp":"2025-09-23T16:32:17.680Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Portfolio calculation completed","correlationId":"6e462774","userId":"test123","portfolioId":"port456","symbols":["AAPL","GOOGL","MSFT"],"metrics":{"total_value":1250000,"gainLoss":5000,"returnPercent":5},"duration":150,"severity":"INFO"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

    console.log
      {"timestamp":"2025-09-23T16:32:17.681Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Database operation failed","correlationId":"6e4043a1","error":{"name":"Error","message":"Test database connection error","stack":"Error: Test database connection error\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/logger.test.js:295:21)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","code":"DB_CONNECTION_FAILED"},"severity":"ERROR"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

    console.log
      {"timestamp":"2025-09-23T16:32:17.694Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Configuration loaded","correlationId":"0c0e56b7","component":"config","config":{"appName":"test-app","version":"1.0.0","apiKey":"[REDACTED]"},"severity":"INFO"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

    console.log
      {"timestamp":"2025-09-23T16:32:17.694Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Application starting","correlationId":"54db23ae","port":3000,"env":"test","component":"startup","nodeVersion":"v20.19.4","pid":1073667,"memory":{"rss":1663213568,"heapTotal":1504088064,"heapUsed":1220267480,"external":18131197,"arrayBuffers":14666368},"severity":"INFO"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

    console.log
      {"timestamp":"2025-09-23T16:32:17.695Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Application shutting down","correlationId":"6c93d2bb","reason":"test_shutdown","component":"shutdown","uptime":41.336959575,"severity":"INFO"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

    console.log
      {"timestamp":"2025-09-23T16:32:17.696Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Child logger test message","correlationId":"d11af95b","requestId":"req_789","userId":"user_xyz","severity":"INFO"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

    console.log
      {"timestamp":"2025-09-23T16:32:17.696Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Performance: slow_database_query completed in 6000ms","correlationId":"71e75015","query":"SELECT * FROM large_table","component":"performance","operation":"slow_database_query","duration_ms":6000,"slow_operation":true,"severity":"WARN"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

    console.log
      {"timestamp":"2025-09-23T16:32:17.696Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Performance: fast_api_call completed in 100ms","correlationId":"b8e60212","endpoint":"/api/health","component":"performance","operation":"fast_api_call","duration_ms":100,"severity":"INFO"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

    console.log
      {"timestamp":"2025-09-23T16:32:17.697Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Test message","correlationId":"282299b2","severity":"INFO"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

    console.log
      {"timestamp":"2025-09-23T16:32:17.697Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Test message","correlationId":"5572f12d","severity":"INFO"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

    console.log
      {"timestamp":"2025-09-23T16:32:17.697Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Test message","correlationId":"c43569f1","severity":"INFO"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

    console.log
      {"timestamp":"2025-09-23T16:32:17.702Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Large context test","correlationId":"8f1ff207","data":[{"id":0,"value":"item_0"},{"id":1,"value":"item_1"},{"id":2,"value":"item_2"},{"id":3,"value":"item_3"},{"id":4,"value":"item_4"},{"id":5,"value":"item_5"},{"id":6,"value":"item_6"},{"id":7,"value":"item_7"},{"id":8,"value":"item_8"},{"id":9,"value":"item_9"},{"id":10,"value":"item_10"},{"id":11,"value":"item_11"},{"id":12,"value":"item_12"},{"id":13,"value":"item_13"},{"id":14,"value":"item_14"},{"id":15,"value":"item_15"},{"id":16,"value":"item_16"},{"id":17,"value":"item_17"},{"id":18,"value":"item_18"},{"id":19,"value":"item_19"},{"id":20,"value":"item_20"},{"id":21,"value":"item_21"},{"id":22,"value":"item_22"},{"id":23,"value":"item_23"},{"id":24,"value":"item_24"},{"id":25,"value":"item_25"},{"id":26,"value":"item_26"},{"id":27,"value":"item_27"},{"id":28,"value":"item_28"},{"id":29,"value":"item_29"},{"id":30,"value":"item_30"},{"id":31,"value":"item_31"},{"id":32,"value":"item_32"},{"id":33,"value":"item_33"},{"id":34,"value":"item_34"},{"id":35,"value":"item_35"},{"id":36,"value":"item_36"},{"id":37,"value":"item_37"},{"id":38,"value":"item_38"},{"id":39,"value":"item_39"},{"id":40,"value":"item_40"},{"id":41,"value":"item_41"},{"id":42,"value":"item_42"},{"id":43,"value":"item_43"},{"id":44,"value":"item_44"},{"id":45,"value":"item_45"},{"id":46,"value":"item_46"},{"id":47,"value":"item_47"},{"id":48,"value":"item_48"},{"id":49,"value":"item_49"},{"id":50,"value":"item_50"},{"id":51,"value":"item_51"},{"id":52,"value":"item_52"},{"id":53,"value":"item_53"},{"id":54,"value":"item_54"},{"id":55,"value":"item_55"},{"id":56,"value":"item_56"},{"id":57,"value":"item_57"},{"id":58,"value":"item_58"},{"id":59,"value":"item_59"},{"id":60,"value":"item_60"},{"id":61,"value":"item_61"},{"id":62,"value":"item_62"},{"id":63,"value":"item_63"},{"id":64,"value":"item_64"},{"id":65,"value":"item_65"},{"id":66,"value":"item_66"},{"id":67,"value":"item_67"},{"id":68,"value":"item_68"},{"id":69,"value":"item_69"},{"id":70,"value":"item_70"},{"id":71,"value":"item_71"},{"id":72,"value":"item_72"},{"id":73,"value":"item_73"},{"id":74,"value":"item_74"},{"id":75,"value":"item_75"},{"id":76,"value":"item_76"},{"id":77,"value":"item_77"},{"id":78,"value":"item_78"},{"id":79,"value":"item_79"},{"id":80,"value":"item_80"},{"id":81,"value":"item_81"},{"id":82,"value":"item_82"},{"id":83,"value":"item_83"},{"id":84,"value":"item_84"},{"id":85,"value":"item_85"},{"id":86,"value":"item_86"},{"id":87,"value":"item_87"},{"id":88,"value":"item_88"},{"id":89,"value":"item_89"},{"id":90,"value":"item_90"},{"id":91,"value":"item_91"},{"id":92,"value":"item_92"},{"id":93,"value":"item_93"},{"id":94,"value":"item_94"},{"id":95,"value":"item_95"},{"id":96,"value":"item_96"},{"id":97,"value":"item_97"},{"id":98,"value":"item_98"},{"id":99,"value":"item_99"},{"id":100,"value":"item_100"},{"id":101,"value":"item_101"},{"id":102,"value":"item_102"},{"id":103,"value":"item_103"},{"id":104,"value":"item_104"},{"id":105,"value":"item_105"},{"id":106,"value":"item_106"},{"id":107,"value":"item_107"},{"id":108,"value":"item_108"},{"id":109,"value":"item_109"},{"id":110,"value":"item_110"},{"id":111,"value":"item_111"},{"id":112,"value":"item_112"},{"id":113,"value":"item_113"},{"id":114,"value":"item_114"},{"id":115,"value":"item_115"},{"id":116,"value":"item_116"},{"id":117,"value":"item_117"},{"id":118,"value":"item_118"},{"id":119,"value":"item_119"},{"id":120,"value":"item_120"},{"id":121,"value":"item_121"},{"id":122,"value":"item_122"},{"id":123,"value":"item_123"},{"id":124,"value":"item_124"},{"id":125,"value":"item_125"},{"id":126,"value":"item_126"},{"id":127,"value":"item_127"},{"id":128,"value":"item_128"},{"id":129,"value":"item_129"},{"id":130,"value":"item_130"},{"id":131,"value":"item_131"},{"id":132,"value":"item_132"},{"id":133,"value":"item_133"},{"id":134,"value":"item_134"},{"id":135,"value":"item_135"},{"id":136,"value":"item_136"},{"id":137,"value":"item_137"},{"id":138,"value":"item_138"},{"id":139,"value":"item_139"},{"id":140,"value":"item_140"},{"id":141,"value":"item_141"},{"id":142,"value":"item_142"},{"id":143,"value":"item_143"},{"id":144,"value":"item_144"},{"id":145,"value":"item_145"},{"id":146,"value":"item_146"},{"id":147,"value":"item_147"},{"id":148,"value":"item_148"},{"id":149,"value":"item_149"},{"id":150,"value":"item_150"},{"id":151,"value":"item_151"},{"id":152,"value":"item_152"},{"id":153,"value":"item_153"},{"id":154,"value":"item_154"},{"id":155,"value":"item_155"},{"id":156,"value":"item_156"},{"id":157,"value":"item_157"},{"id":158,"value":"item_158"},{"id":159,"value":"item_159"},{"id":160,"value":"item_160"},{"id":161,"value":"item_161"},{"id":162,"value":"item_162"},{"id":163,"value":"item_163"},{"id":164,"value":"item_164"},{"id":165,"value":"item_165"},{"id":166,"value":"item_166"},{"id":167,"value":"item_167"},{"id":168,"value":"item_168"},{"id":169,"value":"item_169"},{"id":170,"value":"item_170"},{"id":171,"value":"item_171"},{"id":172,"value":"item_172"},{"id":173,"value":"item_173"},{"id":174,"value":"item_174"},{"id":175,"value":"item_175"},{"id":176,"value":"item_176"},{"id":177,"value":"item_177"},{"id":178,"value":"item_178"},{"id":179,"value":"item_179"},{"id":180,"value":"item_180"},{"id":181,"value":"item_181"},{"id":182,"value":"item_182"},{"id":183,"value":"item_183"},{"id":184,"value":"item_184"},{"id":185,"value":"item_185"},{"id":186,"value":"item_186"},{"id":187,"value":"item_187"},{"id":188,"value":"item_188"},{"id":189,"value":"item_189"},{"id":190,"value":"item_190"},{"id":191,"value":"item_191"},{"id":192,"value":"item_192"},{"id":193,"value":"item_193"},{"id":194,"value":"item_194"},{"id":195,"value":"item_195"},{"id":196,"value":"item_196"},{"id":197,"value":"item_197"},{"id":198,"value":"item_198"},{"id":199,"value":"item_199"},{"id":200,"value":"item_200"},{"id":201,"value":"item_201"},{"id":202,"value":"item_202"},{"id":203,"value":"item_203"},{"id":204,"value":"item_204"},{"id":205,"value":"item_205"},{"id":206,"value":"item_206"},{"id":207,"value":"item_207"},{"id":208,"value":"item_208"},{"id":209,"value":"item_209"},{"id":210,"value":"item_210"},{"id":211,"value":"item_211"},{"id":212,"value":"item_212"},{"id":213,"value":"item_213"},{"id":214,"value":"item_214"},{"id":215,"value":"item_215"},{"id":216,"value":"item_216"},{"id":217,"value":"item_217"},{"id":218,"value":"item_218"},{"id":219,"value":"item_219"},{"id":220,"value":"item_220"},{"id":221,"value":"item_221"},{"id":222,"value":"item_222"},{"id":223,"value":"item_223"},{"id":224,"value":"item_224"},{"id":225,"value":"item_225"},{"id":226,"value":"item_226"},{"id":227,"value":"item_227"},{"id":228,"value":"item_228"},{"id":229,"value":"item_229"},{"id":230,"value":"item_230"},{"id":231,"value":"item_231"},{"id":232,"value":"item_232"},{"id":233,"value":"item_233"},{"id":234,"value":"item_234"},{"id":235,"value":"item_235"},{"id":236,"value":"item_236"},{"id":237,"value":"item_237"},{"id":238,"value":"item_238"},{"id":239,"value":"item_239"},{"id":240,"value":"item_240"},{"id":241,"value":"item_241"},{"id":242,"value":"item_242"},{"id":243,"value":"item_243"},{"id":244,"value":"item_244"},{"id":245,"value":"item_245"},{"id":246,"value":"item_246"},{"id":247,"value":"item_247"},{"id":248,"value":"item_248"},{"id":249,"value":"item_249"},{"id":250,"value":"item_250"},{"id":251,"value":"item_251"},{"id":252,"value":"item_252"},{"id":253,"value":"item_253"},{"id":254,"value":"item_254"},{"id":255,"value":"item_255"},{"id":256,"value":"item_256"},{"id":257,"value":"item_257"},{"id":258,"value":"item_258"},{"id":259,"value":"item_259"},{"id":260,"value":"item_260"},{"id":261,"value":"item_261"},{"id":262,"value":"item_262"},{"id":263,"value":"item_263"},{"id":264,"value":"item_264"},{"id":265,"value":"item_265"},{"id":266,"value":"item_266"},{"id":267,"value":"item_267"},{"id":268,"value":"item_268"},{"id":269,"value":"item_269"},{"id":270,"value":"item_270"},{"id":271,"value":"item_271"},{"id":272,"value":"item_272"},{"id":273,"value":"item_273"},{"id":274,"value":"item_274"},{"id":275,"value":"item_275"},{"id":276,"value":"item_276"},{"id":277,"value":"item_277"},{"id":278,"value":"item_278"},{"id":279,"value":"item_279"},{"id":280,"value":"item_280"},{"id":281,"value":"item_281"},{"id":282,"value":"item_282"},{"id":283,"value":"item_283"},{"id":284,"value":"item_284"},{"id":285,"value":"item_285"},{"id":286,"value":"item_286"},{"id":287,"value":"item_287"},{"id":288,"value":"item_288"},{"id":289,"value":"item_289"},{"id":290,"value":"item_290"},{"id":291,"value":"item_291"},{"id":292,"value":"item_292"},{"id":293,"value":"item_293"},{"id":294,"value":"item_294"},{"id":295,"value":"item_295"},{"id":296,"value":"item_296"},{"id":297,"value":"item_297"},{"id":298,"value":"item_298"},{"id":299,"value":"item_299"},{"id":300,"value":"item_300"},{"id":301,"value":"item_301"},{"id":302,"value":"item_302"},{"id":303,"value":"item_303"},{"id":304,"value":"item_304"},{"id":305,"value":"item_305"},{"id":306,"value":"item_306"},{"id":307,"value":"item_307"},{"id":308,"value":"item_308"},{"id":309,"value":"item_309"},{"id":310,"value":"item_310"},{"id":311,"value":"item_311"},{"id":312,"value":"item_312"},{"id":313,"value":"item_313"},{"id":314,"value":"item_314"},{"id":315,"value":"item_315"},{"id":316,"value":"item_316"},{"id":317,"value":"item_317"},{"id":318,"value":"item_318"},{"id":319,"value":"item_319"},{"id":320,"value":"item_320"},{"id":321,"value":"item_321"},{"id":322,"value":"item_322"},{"id":323,"value":"item_323"},{"id":324,"value":"item_324"},{"id":325,"value":"item_325"},{"id":326,"value":"item_326"},{"id":327,"value":"item_327"},{"id":328,"value":"item_328"},{"id":329,"value":"item_329"},{"id":330,"value":"item_330"},{"id":331,"value":"item_331"},{"id":332,"value":"item_332"},{"id":333,"value":"item_333"},{"id":334,"value":"item_334"},{"id":335,"value":"item_335"},{"id":336,"value":"item_336"},{"id":337,"value":"item_337"},{"id":338,"value":"item_338"},{"id":339,"value":"item_339"},{"id":340,"value":"item_340"},{"id":341,"value":"item_341"},{"id":342,"value":"item_342"},{"id":343,"value":"item_343"},{"id":344,"value":"item_344"},{"id":345,"value":"item_345"},{"id":346,"value":"item_346"},{"id":347,"value":"item_347"},{"id":348,"value":"item_348"},{"id":349,"value":"item_349"},{"id":350,"value":"item_350"},{"id":351,"value":"item_351"},{"id":352,"value":"item_352"},{"id":353,"value":"item_353"},{"id":354,"value":"item_354"},{"id":355,"value":"item_355"},{"id":356,"value":"item_356"},{"id":357,"value":"item_357"},{"id":358,"value":"item_358"},{"id":359,"value":"item_359"},{"id":360,"value":"item_360"},{"id":361,"value":"item_361"},{"id":362,"value":"item_362"},{"id":363,"value":"item_363"},{"id":364,"value":"item_364"},{"id":365,"value":"item_365"},{"id":366,"value":"item_366"},{"id":367,"value":"item_367"},{"id":368,"value":"item_368"},{"id":369,"value":"item_369"},{"id":370,"value":"item_370"},{"id":371,"value":"item_371"},{"id":372,"value":"item_372"},{"id":373,"value":"item_373"},{"id":374,"value":"item_374"},{"id":375,"value":"item_375"},{"id":376,"value":"item_376"},{"id":377,"value":"item_377"},{"id":378,"value":"item_378"},{"id":379,"value":"item_379"},{"id":380,"value":"item_380"},{"id":381,"value":"item_381"},{"id":382,"value":"item_382"},{"id":383,"value":"item_383"},{"id":384,"value":"item_384"},{"id":385,"value":"item_385"},{"id":386,"value":"item_386"},{"id":387,"value":"item_387"},{"id":388,"value":"item_388"},{"id":389,"value":"item_389"},{"id":390,"value":"item_390"},{"id":391,"value":"item_391"},{"id":392,"value":"item_392"},{"id":393,"value":"item_393"},{"id":394,"value":"item_394"},{"id":395,"value":"item_395"},{"id":396,"value":"item_396"},{"id":397,"value":"item_397"},{"id":398,"value":"item_398"},{"id":399,"value":"item_399"},{"id":400,"value":"item_400"},{"id":401,"value":"item_401"},{"id":402,"value":"item_402"},{"id":403,"value":"item_403"},{"id":404,"value":"item_404"},{"id":405,"value":"item_405"},{"id":406,"value":"item_406"},{"id":407,"value":"item_407"},{"id":408,"value":"item_408"},{"id":409,"value":"item_409"},{"id":410,"value":"item_410"},{"id":411,"value":"item_411"},{"id":412,"value":"item_412"},{"id":413,"value":"item_413"},{"id":414,"value":"item_414"},{"id":415,"value":"item_415"},{"id":416,"value":"item_416"},{"id":417,"value":"item_417"},{"id":418,"value":"item_418"},{"id":419,"value":"item_419"},{"id":420,"value":"item_420"},{"id":421,"value":"item_421"},{"id":422,"value":"item_422"},{"id":423,"value":"item_423"},{"id":424,"value":"item_424"},{"id":425,"value":"item_425"},{"id":426,"value":"item_426"},{"id":427,"value":"item_427"},{"id":428,"value":"item_428"},{"id":429,"value":"item_429"},{"id":430,"value":"item_430"},{"id":431,"value":"item_431"},{"id":432,"value":"item_432"},{"id":433,"value":"item_433"},{"id":434,"value":"item_434"},{"id":435,"value":"item_435"},{"id":436,"value":"item_436"},{"id":437,"value":"item_437"},{"id":438,"value":"item_438"},{"id":439,"value":"item_439"},{"id":440,"value":"item_440"},{"id":441,"value":"item_441"},{"id":442,"value":"item_442"},{"id":443,"value":"item_443"},{"id":444,"value":"item_444"},{"id":445,"value":"item_445"},{"id":446,"value":"item_446"},{"id":447,"value":"item_447"},{"id":448,"value":"item_448"},{"id":449,"value":"item_449"},{"id":450,"value":"item_450"},{"id":451,"value":"item_451"},{"id":452,"value":"item_452"},{"id":453,"value":"item_453"},{"id":454,"value":"item_454"},{"id":455,"value":"item_455"},{"id":456,"value":"item_456"},{"id":457,"value":"item_457"},{"id":458,"value":"item_458"},{"id":459,"value":"item_459"},{"id":460,"value":"item_460"},{"id":461,"value":"item_461"},{"id":462,"value":"item_462"},{"id":463,"value":"item_463"},{"id":464,"value":"item_464"},{"id":465,"value":"item_465"},{"id":466,"value":"item_466"},{"id":467,"value":"item_467"},{"id":468,"value":"item_468"},{"id":469,"value":"item_469"},{"id":470,"value":"item_470"},{"id":471,"value":"item_471"},{"id":472,"value":"item_472"},{"id":473,"value":"item_473"},{"id":474,"value":"item_474"},{"id":475,"value":"item_475"},{"id":476,"value":"item_476"},{"id":477,"value":"item_477"},{"id":478,"value":"item_478"},{"id":479,"value":"item_479"},{"id":480,"value":"item_480"},{"id":481,"value":"item_481"},{"id":482,"value":"item_482"},{"id":483,"value":"item_483"},{"id":484,"value":"item_484"},{"id":485,"value":"item_485"},{"id":486,"value":"item_486"},{"id":487,"value":"item_487"},{"id":488,"value":"item_488"},{"id":489,"value":"item_489"},{"id":490,"value":"item_490"},{"id":491,"value":"item_491"},{"id":492,"value":"item_492"},{"id":493,"value":"item_493"},{"id":494,"value":"item_494"},{"id":495,"value":"item_495"},{"id":496,"value":"item_496"},{"id":497,"value":"item_497"},{"id":498,"value":"item_498"},{"id":499,"value":"item_499"},{"id":500,"value":"item_500"},{"id":501,"value":"item_501"},{"id":502,"value":"item_502"},{"id":503,"value":"item_503"},{"id":504,"value":"item_504"},{"id":505,"value":"item_505"},{"id":506,"value":"item_506"},{"id":507,"value":"item_507"},{"id":508,"value":"item_508"},{"id":509,"value":"item_509"},{"id":510,"value":"item_510"},{"id":511,"value":"item_511"},{"id":512,"value":"item_512"},{"id":513,"value":"item_513"},{"id":514,"value":"item_514"},{"id":515,"value":"item_515"},{"id":516,"value":"item_516"},{"id":517,"value":"item_517"},{"id":518,"value":"item_518"},{"id":519,"value":"item_519"},{"id":520,"value":"item_520"},{"id":521,"value":"item_521"},{"id":522,"value":"item_522"},{"id":523,"value":"item_523"},{"id":524,"value":"item_524"},{"id":525,"value":"item_525"},{"id":526,"value":"item_526"},{"id":527,"value":"item_527"},{"id":528,"value":"item_528"},{"id":529,"value":"item_529"},{"id":530,"value":"item_530"},{"id":531,"value":"item_531"},{"id":532,"value":"item_532"},{"id":533,"value":"item_533"},{"id":534,"value":"item_534"},{"id":535,"value":"item_535"},{"id":536,"value":"item_536"},{"id":537,"value":"item_537"},{"id":538,"value":"item_538"},{"id":539,"value":"item_539"},{"id":540,"value":"item_540"},{"id":541,"value":"item_541"},{"id":542,"value":"item_542"},{"id":543,"value":"item_543"},{"id":544,"value":"item_544"},{"id":545,"value":"item_545"},{"id":546,"value":"item_546"},{"id":547,"value":"item_547"},{"id":548,"value":"item_548"},{"id":549,"value":"item_549"},{"id":550,"value":"item_550"},{"id":551,"value":"item_551"},{"id":552,"value":"item_552"},{"id":553,"value":"item_553"},{"id":554,"value":"item_554"},{"id":555,"value":"item_555"},{"id":556,"value":"item_556"},{"id":557,"value":"item_557"},{"id":558,"value":"item_558"},{"id":559,"value":"item_559"},{"id":560,"value":"item_560"},{"id":561,"value":"item_561"},{"id":562,"value":"item_562"},{"id":563,"value":"item_563"},{"id":564,"value":"item_564"},{"id":565,"value":"item_565"},{"id":566,"value":"item_566"},{"id":567,"value":"item_567"},{"id":568,"value":"item_568"},{"id":569,"value":"item_569"},{"id":570,"value":"item_570"},{"id":571,"value":"item_571"},{"id":572,"value":"item_572"},{"id":573,"value":"item_573"},{"id":574,"value":"item_574"},{"id":575,"value":"item_575"},{"id":576,"value":"item_576"},{"id":577,"value":"item_577"},{"id":578,"value":"item_578"},{"id":579,"value":"item_579"},{"id":580,"value":"item_580"},{"id":581,"value":"item_581"},{"id":582,"value":"item_582"},{"id":583,"value":"item_583"},{"id":584,"value":"item_584"},{"id":585,"value":"item_585"},{"id":586,"value":"item_586"},{"id":587,"value":"item_587"},{"id":588,"value":"item_588"},{"id":589,"value":"item_589"},{"id":590,"value":"item_590"},{"id":591,"value":"item_591"},{"id":592,"value":"item_592"},{"id":593,"value":"item_593"},{"id":594,"value":"item_594"},{"id":595,"value":"item_595"},{"id":596,"value":"item_596"},{"id":597,"value":"item_597"},{"id":598,"value":"item_598"},{"id":599,"value":"item_599"},{"id":600,"value":"item_600"},{"id":601,"value":"item_601"},{"id":602,"value":"item_602"},{"id":603,"value":"item_603"},{"id":604,"value":"item_604"},{"id":605,"value":"item_605"},{"id":606,"value":"item_606"},{"id":607,"value":"item_607"},{"id":608,"value":"item_608"},{"id":609,"value":"item_609"},{"id":610,"value":"item_610"},{"id":611,"value":"item_611"},{"id":612,"value":"item_612"},{"id":613,"value":"item_613"},{"id":614,"value":"item_614"},{"id":615,"value":"item_615"},{"id":616,"value":"item_616"},{"id":617,"value":"item_617"},{"id":618,"value":"item_618"},{"id":619,"value":"item_619"},{"id":620,"value":"item_620"},{"id":621,"value":"item_621"},{"id":622,"value":"item_622"},{"id":623,"value":"item_623"},{"id":624,"value":"item_624"},{"id":625,"value":"item_625"},{"id":626,"value":"item_626"},{"id":627,"value":"item_627"},{"id":628,"value":"item_628"},{"id":629,"value":"item_629"},{"id":630,"value":"item_630"},{"id":631,"value":"item_631"},{"id":632,"value":"item_632"},{"id":633,"value":"item_633"},{"id":634,"value":"item_634"},{"id":635,"value":"item_635"},{"id":636,"value":"item_636"},{"id":637,"value":"item_637"},{"id":638,"value":"item_638"},{"id":639,"value":"item_639"},{"id":640,"value":"item_640"},{"id":641,"value":"item_641"},{"id":642,"value":"item_642"},{"id":643,"value":"item_643"},{"id":644,"value":"item_644"},{"id":645,"value":"item_645"},{"id":646,"value":"item_646"},{"id":647,"value":"item_647"},{"id":648,"value":"item_648"},{"id":649,"value":"item_649"},{"id":650,"value":"item_650"},{"id":651,"value":"item_651"},{"id":652,"value":"item_652"},{"id":653,"value":"item_653"},{"id":654,"value":"item_654"},{"id":655,"value":"item_655"},{"id":656,"value":"item_656"},{"id":657,"value":"item_657"},{"id":658,"value":"item_658"},{"id":659,"value":"item_659"},{"id":660,"value":"item_660"},{"id":661,"value":"item_661"},{"id":662,"value":"item_662"},{"id":663,"value":"item_663"},{"id":664,"value":"item_664"},{"id":665,"value":"item_665"},{"id":666,"value":"item_666"},{"id":667,"value":"item_667"},{"id":668,"value":"item_668"},{"id":669,"value":"item_669"},{"id":670,"value":"item_670"},{"id":671,"value":"item_671"},{"id":672,"value":"item_672"},{"id":673,"value":"item_673"},{"id":674,"value":"item_674"},{"id":675,"value":"item_675"},{"id":676,"value":"item_676"},{"id":677,"value":"item_677"},{"id":678,"value":"item_678"},{"id":679,"value":"item_679"},{"id":680,"value":"item_680"},{"id":681,"value":"item_681"},{"id":682,"value":"item_682"},{"id":683,"value":"item_683"},{"id":684,"value":"item_684"},{"id":685,"value":"item_685"},{"id":686,"value":"item_686"},{"id":687,"value":"item_687"},{"id":688,"value":"item_688"},{"id":689,"value":"item_689"},{"id":690,"value":"item_690"},{"id":691,"value":"item_691"},{"id":692,"value":"item_692"},{"id":693,"value":"item_693"},{"id":694,"value":"item_694"},{"id":695,"value":"item_695"},{"id":696,"value":"item_696"},{"id":697,"value":"item_697"},{"id":698,"value":"item_698"},{"id":699,"value":"item_699"},{"id":700,"value":"item_700"},{"id":701,"value":"item_701"},{"id":702,"value":"item_702"},{"id":703,"value":"item_703"},{"id":704,"value":"item_704"},{"id":705,"value":"item_705"},{"id":706,"value":"item_706"},{"id":707,"value":"item_707"},{"id":708,"value":"item_708"},{"id":709,"value":"item_709"},{"id":710,"value":"item_710"},{"id":711,"value":"item_711"},{"id":712,"value":"item_712"},{"id":713,"value":"item_713"},{"id":714,"value":"item_714"},{"id":715,"value":"item_715"},{"id":716,"value":"item_716"},{"id":717,"value":"item_717"},{"id":718,"value":"item_718"},{"id":719,"value":"item_719"},{"id":720,"value":"item_720"},{"id":721,"value":"item_721"},{"id":722,"value":"item_722"},{"id":723,"value":"item_723"},{"id":724,"value":"item_724"},{"id":725,"value":"item_725"},{"id":726,"value":"item_726"},{"id":727,"value":"item_727"},{"id":728,"value":"item_728"},{"id":729,"value":"item_729"},{"id":730,"value":"item_730"},{"id":731,"value":"item_731"},{"id":732,"value":"item_732"},{"id":733,"value":"item_733"},{"id":734,"value":"item_734"},{"id":735,"value":"item_735"},{"id":736,"value":"item_736"},{"id":737,"value":"item_737"},{"id":738,"value":"item_738"},{"id":739,"value":"item_739"},{"id":740,"value":"item_740"},{"id":741,"value":"item_741"},{"id":742,"value":"item_742"},{"id":743,"value":"item_743"},{"id":744,"value":"item_744"},{"id":745,"value":"item_745"},{"id":746,"value":"item_746"},{"id":747,"value":"item_747"},{"id":748,"value":"item_748"},{"id":749,"value":"item_749"},{"id":750,"value":"item_750"},{"id":751,"value":"item_751"},{"id":752,"value":"item_752"},{"id":753,"value":"item_753"},{"id":754,"value":"item_754"},{"id":755,"value":"item_755"},{"id":756,"value":"item_756"},{"id":757,"value":"item_757"},{"id":758,"value":"item_758"},{"id":759,"value":"item_759"},{"id":760,"value":"item_760"},{"id":761,"value":"item_761"},{"id":762,"value":"item_762"},{"id":763,"value":"item_763"},{"id":764,"value":"item_764"},{"id":765,"value":"item_765"},{"id":766,"value":"item_766"},{"id":767,"value":"item_767"},{"id":768,"value":"item_768"},{"id":769,"value":"item_769"},{"id":770,"value":"item_770"},{"id":771,"value":"item_771"},{"id":772,"value":"item_772"},{"id":773,"value":"item_773"},{"id":774,"value":"item_774"},{"id":775,"value":"item_775"},{"id":776,"value":"item_776"},{"id":777,"value":"item_777"},{"id":778,"value":"item_778"},{"id":779,"value":"item_779"},{"id":780,"value":"item_780"},{"id":781,"value":"item_781"},{"id":782,"value":"item_782"},{"id":783,"value":"item_783"},{"id":784,"value":"item_784"},{"id":785,"value":"item_785"},{"id":786,"value":"item_786"},{"id":787,"value":"item_787"},{"id":788,"value":"item_788"},{"id":789,"value":"item_789"},{"id":790,"value":"item_790"},{"id":791,"value":"item_791"},{"id":792,"value":"item_792"},{"id":793,"value":"item_793"},{"id":794,"value":"item_794"},{"id":795,"value":"item_795"},{"id":796,"value":"item_796"},{"id":797,"value":"item_797"},{"id":798,"value":"item_798"},{"id":799,"value":"item_799"},{"id":800,"value":"item_800"},{"id":801,"value":"item_801"},{"id":802,"value":"item_802"},{"id":803,"value":"item_803"},{"id":804,"value":"item_804"},{"id":805,"value":"item_805"},{"id":806,"value":"item_806"},{"id":807,"value":"item_807"},{"id":808,"value":"item_808"},{"id":809,"value":"item_809"},{"id":810,"value":"item_810"},{"id":811,"value":"item_811"},{"id":812,"value":"item_812"},{"id":813,"value":"item_813"},{"id":814,"value":"item_814"},{"id":815,"value":"item_815"},{"id":816,"value":"item_816"},{"id":817,"value":"item_817"},{"id":818,"value":"item_818"},{"id":819,"value":"item_819"},{"id":820,"value":"item_820"},{"id":821,"value":"item_821"},{"id":822,"value":"item_822"},{"id":823,"value":"item_823"},{"id":824,"value":"item_824"},{"id":825,"value":"item_825"},{"id":826,"value":"item_826"},{"id":827,"value":"item_827"},{"id":828,"value":"item_828"},{"id":829,"value":"item_829"},{"id":830,"value":"item_830"},{"id":831,"value":"item_831"},{"id":832,"value":"item_832"},{"id":833,"value":"item_833"},{"id":834,"value":"item_834"},{"id":835,"value":"item_835"},{"id":836,"value":"item_836"},{"id":837,"value":"item_837"},{"id":838,"value":"item_838"},{"id":839,"value":"item_839"},{"id":840,"value":"item_840"},{"id":841,"value":"item_841"},{"id":842,"value":"item_842"},{"id":843,"value":"item_843"},{"id":844,"value":"item_844"},{"id":845,"value":"item_845"},{"id":846,"value":"item_846"},{"id":847,"value":"item_847"},{"id":848,"value":"item_848"},{"id":849,"value":"item_849"},{"id":850,"value":"item_850"},{"id":851,"value":"item_851"},{"id":852,"value":"item_852"},{"id":853,"value":"item_853"},{"id":854,"value":"item_854"},{"id":855,"value":"item_855"},{"id":856,"value":"item_856"},{"id":857,"value":"item_857"},{"id":858,"value":"item_858"},{"id":859,"value":"item_859"},{"id":860,"value":"item_860"},{"id":861,"value":"item_861"},{"id":862,"value":"item_862"},{"id":863,"value":"item_863"},{"id":864,"value":"item_864"},{"id":865,"value":"item_865"},{"id":866,"value":"item_866"},{"id":867,"value":"item_867"},{"id":868,"value":"item_868"},{"id":869,"value":"item_869"},{"id":870,"value":"item_870"},{"id":871,"value":"item_871"},{"id":872,"value":"item_872"},{"id":873,"value":"item_873"},{"id":874,"value":"item_874"},{"id":875,"value":"item_875"},{"id":876,"value":"item_876"},{"id":877,"value":"item_877"},{"id":878,"value":"item_878"},{"id":879,"value":"item_879"},{"id":880,"value":"item_880"},{"id":881,"value":"item_881"},{"id":882,"value":"item_882"},{"id":883,"value":"item_883"},{"id":884,"value":"item_884"},{"id":885,"value":"item_885"},{"id":886,"value":"item_886"},{"id":887,"value":"item_887"},{"id":888,"value":"item_888"},{"id":889,"value":"item_889"},{"id":890,"value":"item_890"},{"id":891,"value":"item_891"},{"id":892,"value":"item_892"},{"id":893,"value":"item_893"},{"id":894,"value":"item_894"},{"id":895,"value":"item_895"},{"id":896,"value":"item_896"},{"id":897,"value":"item_897"},{"id":898,"value":"item_898"},{"id":899,"value":"item_899"},{"id":900,"value":"item_900"},{"id":901,"value":"item_901"},{"id":902,"value":"item_902"},{"id":903,"value":"item_903"},{"id":904,"value":"item_904"},{"id":905,"value":"item_905"},{"id":906,"value":"item_906"},{"id":907,"value":"item_907"},{"id":908,"value":"item_908"},{"id":909,"value":"item_909"},{"id":910,"value":"item_910"},{"id":911,"value":"item_911"},{"id":912,"value":"item_912"},{"id":913,"value":"item_913"},{"id":914,"value":"item_914"},{"id":915,"value":"item_915"},{"id":916,"value":"item_916"},{"id":917,"value":"item_917"},{"id":918,"value":"item_918"},{"id":919,"value":"item_919"},{"id":920,"value":"item_920"},{"id":921,"value":"item_921"},{"id":922,"value":"item_922"},{"id":923,"value":"item_923"},{"id":924,"value":"item_924"},{"id":925,"value":"item_925"},{"id":926,"value":"item_926"},{"id":927,"value":"item_927"},{"id":928,"value":"item_928"},{"id":929,"value":"item_929"},{"id":930,"value":"item_930"},{"id":931,"value":"item_931"},{"id":932,"value":"item_932"},{"id":933,"value":"item_933"},{"id":934,"value":"item_934"},{"id":935,"value":"item_935"},{"id":936,"value":"item_936"},{"id":937,"value":"item_937"},{"id":938,"value":"item_938"},{"id":939,"value":"item_939"},{"id":940,"value":"item_940"},{"id":941,"value":"item_941"},{"id":942,"value":"item_942"},{"id":943,"value":"item_943"},{"id":944,"value":"item_944"},{"id":945,"value":"item_945"},{"id":946,"value":"item_946"},{"id":947,"value":"item_947"},{"id":948,"value":"item_948"},{"id":949,"value":"item_949"},{"id":950,"value":"item_950"},{"id":951,"value":"item_951"},{"id":952,"value":"item_952"},{"id":953,"value":"item_953"},{"id":954,"value":"item_954"},{"id":955,"value":"item_955"},{"id":956,"value":"item_956"},{"id":957,"value":"item_957"},{"id":958,"value":"item_958"},{"id":959,"value":"item_959"},{"id":960,"value":"item_960"},{"id":961,"value":"item_961"},{"id":962,"value":"item_962"},{"id":963,"value":"item_963"},{"id":964,"value":"item_964"},{"id":965,"value":"item_965"},{"id":966,"value":"item_966"},{"id":967,"value":"item_967"},{"id":968,"value":"item_968"},{"id":969,"value":"item_969"},{"id":970,"value":"item_970"},{"id":971,"value":"item_971"},{"id":972,"value":"item_972"},{"id":973,"value":"item_973"},{"id":974,"value":"item_974"},{"id":975,"value":"item_975"},{"id":976,"value":"item_976"},{"id":977,"value":"item_977"},{"id":978,"value":"item_978"},{"id":979,"value":"item_979"},{"id":980,"value":"item_980"},{"id":981,"value":"item_981"},{"id":982,"value":"item_982"},{"id":983,"value":"item_983"},{"id":984,"value":"item_984"},{"id":985,"value":"item_985"},{"id":986,"value":"item_986"},{"id":987,"value":"item_987"},{"id":988,"value":"item_988"},{"id":989,"value":"item_989"},{"id":990,"value":"item_990"},{"id":991,"value":"item_991"},{"id":992,"value":"item_992"},{"id":993,"value":"item_993"},{"id":994,"value":"item_994"},{"id":995,"value":"item_995"},{"id":996,"value":"item_996"},{"id":997,"value":"item_997"},{"id":998,"value":"item_998"},{"id":999,"value":"item_999"}],"severity":"INFO"}

      at console.apply [as log] (tests/integration/utils/logger.test.js:28:26)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Logger Integration Tests ‚Ä∫ Error Handling ‚Ä∫ should handle circular references in context

    expect(received).not.toThrow()

    Error name:    "TypeError"
    Error message: "Converting circular structure to JSON
        --> starting at object with constructor 'Object'
        --- property 'self' closes the circle"

          89 |     } else {
          90 |       // JSON format for production (structured logging)
        > 91 |       console.log(JSON.stringify(logEntry));
             |                        ^
          92 |     }
          93 |   }
          94 |

      at Logger.stringify [as output] (utils/logger.js:91:24)
      at Logger.output [as info] (utils/logger.js:144:10)
      at info (tests/integration/utils/logger.test.js:584:16)
      at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:74:11)
      at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:320:21)
      at Object.toThrow (tests/integration/utils/logger.test.js:585:14)
      at Object.toThrow (tests/integration/utils/logger.test.js:585:14)

FAIL tests/integration/utils/newsAnalyzer.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè News Analyzer Integration Tests ‚Ä∫ News Data Processing ‚Ä∫ should analyze news sentiment

    expect(received).toBeDefined()

    Received: undefined

      34 |       expect(sentiment).toBeDefined();
      35 |       expect(sentiment.score).toBeDefined();
    > 36 |       expect(sentiment.magnitude).toBeDefined();
         |                                   ^
      37 |       expect(sentiment.label).toBeDefined();
      38 |
      39 |       expect(typeof sentiment.score).toBe("number");

      at Object.toBeDefined (tests/integration/utils/newsAnalyzer.test.js:36:35)

  ‚óè News Analyzer Integration Tests ‚Ä∫ News Data Processing ‚Ä∫ should extract key topics from news

    expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      54 |
      55 |       expect(Array.isArray(topics)).toBe(true);
    > 56 |       expect(topics.length).toBeGreaterThan(0);
         |                             ^
      57 |
      58 |       topics.forEach((topic) => {
      59 |         expect(topic.keyword).toBeDefined();

      at Object.toBeGreaterThan (tests/integration/utils/newsAnalyzer.test.js:56:29)

  ‚óè News Analyzer Integration Tests ‚Ä∫ Real-time News Processing ‚Ä∫ should process news feed

    TypeError: newsAnalyzer.processNewsFeed is not a function

      83 |       ];
      84 |
    > 85 |       const processedFeed = await newsAnalyzer.processNewsFeed(newsFeed);
         |                                                ^
      86 |
      87 |       expect(Array.isArray(processedFeed)).toBe(true);
      88 |       expect(processedFeed.length).toBe(newsFeed.length);

      at Object.processNewsFeed (tests/integration/utils/newsAnalyzer.test.js:85:48)

  ‚óè News Analyzer Integration Tests ‚Ä∫ Real-time News Processing ‚Ä∫ should handle high-volume news processing

    TypeError: newsAnalyzer.processBulkNews is not a function

      103 |
      104 |       const startTime = Date.now();
    > 105 |       const processed = await newsAnalyzer.processBulkNews(largeNewsFeed);
          |                                            ^
      106 |       const duration = Date.now() - startTime;
      107 |
      108 |       expect(processed.length).toBe(100);

      at Object.processBulkNews (tests/integration/utils/newsAnalyzer.test.js:105:44)

  ‚óè News Analyzer Integration Tests ‚Ä∫ Symbol-Specific Analysis ‚Ä∫ should analyze news for specific symbols

    TypeError: newsAnalyzer.getSymbolNews is not a function

      119 |     test("should analyze news for specific symbols", async () => {
      120 |       const symbol = "AAPL";
    > 121 |       const symbolNews = await newsAnalyzer.getSymbolNews(symbol, {
          |                                             ^
      122 |         limit: 10,
      123 |       });
      124 |

      at Object.getSymbolNews (tests/integration/utils/newsAnalyzer.test.js:121:45)

  ‚óè News Analyzer Integration Tests ‚Ä∫ Symbol-Specific Analysis ‚Ä∫ should calculate symbol sentiment score

    TypeError: newsAnalyzer.getSymbolSentimentScore is not a function

      133 |     test("should calculate symbol sentiment score", async () => {
      134 |       const symbol = "AAPL";
    > 135 |       const sentimentScore = await newsAnalyzer.getSymbolSentimentScore(symbol);
          |                                                 ^
      136 |
      137 |       expect(sentimentScore).toBeDefined();
      138 |       expect(sentimentScore.composite).toBeDefined();

      at Object.getSymbolSentimentScore (tests/integration/utils/newsAnalyzer.test.js:135:49)

  ‚óè News Analyzer Integration Tests ‚Ä∫ Trend Analysis ‚Ä∫ should identify trending topics

    TypeError: newsAnalyzer.getTrendingTopics is not a function

      149 |   describe("Trend Analysis", () => {
      150 |     test("should identify trending topics", async () => {
    > 151 |       const trendingTopics = await newsAnalyzer.getTrendingTopics({
          |                                                 ^
      152 |         period: "24h",
      153 |       });
      154 |

      at Object.getTrendingTopics (tests/integration/utils/newsAnalyzer.test.js:151:49)

  ‚óè News Analyzer Integration Tests ‚Ä∫ Trend Analysis ‚Ä∫ should analyze sentiment trends over time

    TypeError: newsAnalyzer.analyzeSentimentTrends is not a function

      167 |     test("should analyze sentiment trends over time", async () => {
      168 |       const symbol = "AAPL";
    > 169 |       const trendAnalysis = await newsAnalyzer.analyzeSentimentTrends(symbol, {
          |                                                ^
      170 |         period: "7days",
      171 |         granularity: "1hour",
      172 |       });

      at Object.analyzeSentimentTrends (tests/integration/utils/newsAnalyzer.test.js:169:48)

  ‚óè News Analyzer Integration Tests ‚Ä∫ News Source Quality ‚Ä∫ should evaluate news source credibility

    TypeError: newsAnalyzer.evaluateSourceCredibility is not a function

      191 |       for (const source of sources) {
      192 |         const credibility =
    > 193 |           await newsAnalyzer.evaluateSourceCredibility(source);
          |                              ^
      194 |
      195 |         expect(credibility).toBeDefined();
      196 |         expect(credibility.score).toBeDefined();

      at Object.evaluateSourceCredibility (tests/integration/utils/newsAnalyzer.test.js:193:30)

  ‚óè News Analyzer Integration Tests ‚Ä∫ News Source Quality ‚Ä∫ should weight analysis by source quality

    expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      224 |         await newsAnalyzer.analyzeSentiment(lowQualityArticle);
      225 |
    > 226 |       expect(highQualitySentiment.confidence).toBeGreaterThan(
          |                                               ^
      227 |         lowQualitySentiment.confidence
      228 |       );
      229 |       expect(highQualitySentiment.weight).toBeGreaterThan(

      at Object.toBeGreaterThan (tests/integration/utils/newsAnalyzer.test.js:226:47)

  ‚óè News Analyzer Integration Tests ‚Ä∫ Language Processing ‚Ä∫ should handle multiple languages

    expect(received).toBe(expected) // Object.is equality

    Expected: "en"
    Received: undefined

      252 |
      253 |         expect(analysis).toBeDefined();
    > 254 |         expect(analysis.language).toBe(article.language);
          |                                   ^
      255 |         expect(analysis.sentiment).toBeDefined();
      256 |       }
      257 |     });

      at Object.toBe (tests/integration/utils/newsAnalyzer.test.js:254:35)

  ‚óè News Analyzer Integration Tests ‚Ä∫ Language Processing ‚Ä∫ should detect article language automatically

    TypeError: newsAnalyzer.detectLanguageAndAnalyze is not a function

      264 |       };
      265 |
    > 266 |       const analysis = await newsAnalyzer.detectLanguageAndAnalyze(article);
          |                                           ^
      267 |
      268 |       expect(analysis).toBeDefined();
      269 |       expect(analysis.detectedLanguage).toBe("fr");

      at Object.detectLanguageAndAnalyze (tests/integration/utils/newsAnalyzer.test.js:266:43)

  ‚óè News Analyzer Integration Tests ‚Ä∫ Market Impact Analysis ‚Ä∫ should predict market impact from news

    TypeError: newsAnalyzer.predictMarketImpact is not a function

      282 |       };
      283 |
    > 284 |       const marketImpact = await newsAnalyzer.predictMarketImpact(breakingNews);
          |                                               ^
      285 |
      286 |       expect(marketImpact).toBeDefined();
      287 |       expect(marketImpact.impactScore).toBeDefined();

      at Object.predictMarketImpact (tests/integration/utils/newsAnalyzer.test.js:284:47)

  ‚óè News Analyzer Integration Tests ‚Ä∫ Market Impact Analysis ‚Ä∫ should correlate news with price movements

    TypeError: newsAnalyzer.correlateSentimentWithPrice is not a function

      298 |     test("should correlate news with price movements", async () => {
      299 |       const symbol = "AAPL";
    > 300 |       const correlation = await newsAnalyzer.correlateSentimentWithPrice(
          |                                              ^
      301 |         symbol,
      302 |         {
      303 |           period: "30days",

      at Object.correlateSentimentWithPrice (tests/integration/utils/newsAnalyzer.test.js:300:46)

  ‚óè News Analyzer Integration Tests ‚Ä∫ Alert Integration ‚Ä∫ should trigger news-based alerts

    TypeError: newsAnalyzer.setupNewsAlert is not a function

      326 |       };
      327 |
    > 328 |       const newsAlert = await newsAnalyzer.setupNewsAlert(alertConfig);
          |                                            ^
      329 |
      330 |       expect(newsAlert).toBeDefined();
      331 |       expect(newsAlert.alertId).toBeDefined();

      at Object.setupNewsAlert (tests/integration/utils/newsAnalyzer.test.js:328:44)

  ‚óè News Analyzer Integration Tests ‚Ä∫ Alert Integration ‚Ä∫ should process real-time news alerts

    TypeError: newsAnalyzer.processNewsAlert is not a function

      344 |       };
      345 |
    > 346 |       const alertTriggered = await newsAnalyzer.processNewsAlert(urgentNews);
          |                                                 ^
      347 |
      348 |       expect(alertTriggered).toBeDefined();
      349 |       expect(typeof alertTriggered.triggered).toBe("boolean");

      at Object.processNewsAlert (tests/integration/utils/newsAnalyzer.test.js:346:49)

  ‚óè News Analyzer Integration Tests ‚Ä∫ Performance and Scalability ‚Ä∫ should process news articles efficiently

    TypeError: newsAnalyzer.processBulkNews is not a function

      364 |
      365 |       const startTime = Date.now();
    > 366 |       const results = await newsAnalyzer.processBulkNews(testArticles);
          |                                          ^
      367 |       const duration = Date.now() - startTime;
      368 |
      369 |       expect(results.length).toBe(50);

      at Object.processBulkNews (tests/integration/utils/newsAnalyzer.test.js:366:42)

  ‚óè News Analyzer Integration Tests ‚Ä∫ Performance and Scalability ‚Ä∫ should handle memory efficiently with large datasets

    TypeError: newsAnalyzer.processBulkNews is not a function

      387 |       }));
      388 |
    > 389 |       await newsAnalyzer.processBulkNews(largeDataset);
          |                          ^
      390 |
      391 |       const finalMemory = process.memoryUsage().heapUsed;
      392 |       const memoryIncrease = finalMemory - initialMemory;

      at Object.processBulkNews (tests/integration/utils/newsAnalyzer.test.js:389:26)

FAIL tests/integration/utils/apiKeyService.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      JWT verifier initialized successfully (test mode)

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:100:17)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè API Key Service Integration Tests ‚Ä∫ API Key Encryption ‚Ä∫ should encrypt and decrypt API keys

    TypeError: apiKeyService.encryptApiKey is not a function

      24 |       const userSalt = "user-salt-456";
      25 |
    > 26 |       const encrypted = await apiKeyService.encryptApiKey(testKey, userSalt);
         |                                             ^
      27 |       expect(encrypted).toBeDefined();
      28 |       expect(encrypted).not.toBe(testKey);
      29 |

      at Object.encryptApiKey (tests/integration/utils/apiKeyService.test.js:26:45)

  ‚óè API Key Service Integration Tests ‚Ä∫ API Key Encryption ‚Ä∫ should handle encryption with different salts

    TypeError: apiKeyService.encryptApiKey is not a function

      37 |       const salt2 = "salt2";
      38 |
    > 39 |       const encrypted1 = await apiKeyService.encryptApiKey(testKey, salt1);
         |                                              ^
      40 |       const encrypted2 = await apiKeyService.encryptApiKey(testKey, salt2);
      41 |
      42 |       // Same key with different salts should produce different encrypted results

      at Object.encryptApiKey (tests/integration/utils/apiKeyService.test.js:39:46)

  ‚óè API Key Service Integration Tests ‚Ä∫ API Key Encryption ‚Ä∫ should handle decryption with wrong salt gracefully

    TypeError: apiKeyService.encryptApiKey is not a function

      57 |       const wrongSalt = "wrong-salt";
      58 |
    > 59 |       const encrypted = await apiKeyService.encryptApiKey(testKey, correctSalt);
         |                                             ^
      60 |
      61 |       // Should not decrypt correctly with wrong salt
      62 |       try {

      at Object.encryptApiKey (tests/integration/utils/apiKeyService.test.js:59:45)

  ‚óè API Key Service Integration Tests ‚Ä∫ JWT Token Validation ‚Ä∫ should handle JWT token validation

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      134 |       expect(result).toBeDefined();
      135 |       // Invalid token should return null or false
    > 136 |       expect(result === null || result === false).toBe(true);
          |                                                   ^
      137 |     });
      138 |
      139 |     test("should check JWT circuit breaker", () => {

      at Object.toBe (tests/integration/utils/apiKeyService.test.js:136:51)

  ‚óè API Key Service Integration Tests ‚Ä∫ JWT Token Validation ‚Ä∫ should check JWT circuit breaker

    TypeError: apiKeyService.checkJwtCircuitBreaker is not a function

      138 |
      139 |     test("should check JWT circuit breaker", () => {
    > 140 |       const circuitBreakerStatus = apiKeyService.checkJwtCircuitBreaker();
          |                                                  ^
      141 |       expect(typeof circuitBreakerStatus).toBe("boolean");
      142 |     });
      143 |

      at Object.checkJwtCircuitBreaker (tests/integration/utils/apiKeyService.test.js:140:50)

  ‚óè API Key Service Integration Tests ‚Ä∫ JWT Token Validation ‚Ä∫ should record JWT success and failure

    expect(received).not.toThrow()

    Error name:    "TypeError"
    Error message: "apiKeyService.recordJwtSuccess is not a function"

          145 |       // These methods should not throw errors
          146 |       expect(() => {
        > 147 |         apiKeyService.recordJwtSuccess();
              |                       ^
          148 |         apiKeyService.recordJwtFailure(new Error("test error"));
          149 |       }).not.toThrow();
          150 |     });

      at recordJwtSuccess (tests/integration/utils/apiKeyService.test.js:147:23)
      at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:74:11)
      at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:320:21)
      at Object.toThrow (tests/integration/utils/apiKeyService.test.js:149:14)
      at Object.toThrow (tests/integration/utils/apiKeyService.test.js:149:14)

  ‚óè API Key Service Integration Tests ‚Ä∫ Circuit Breaker Functionality ‚Ä∫ should check circuit breaker status

    TypeError: apiKeyService.checkCircuitBreaker is not a function

      153 |   describe("Circuit Breaker Functionality", () => {
      154 |     test("should check circuit breaker status", () => {
    > 155 |       const status = apiKeyService.checkCircuitBreaker();
          |                                    ^
      156 |       expect(typeof status).toBe("boolean");
      157 |     });
      158 |

      at Object.checkCircuitBreaker (tests/integration/utils/apiKeyService.test.js:155:36)

  ‚óè API Key Service Integration Tests ‚Ä∫ Circuit Breaker Functionality ‚Ä∫ should record success and failure

    expect(received).not.toThrow()

    Error name:    "TypeError"
    Error message: "apiKeyService.recordSuccess is not a function"

          160 |       // These methods should not throw errors
          161 |       expect(() => {
        > 162 |         apiKeyService.recordSuccess();
              |                       ^
          163 |         apiKeyService.recordFailure(new Error("test error"));
          164 |       }).not.toThrow();
          165 |     });

      at recordSuccess (tests/integration/utils/apiKeyService.test.js:162:23)
      at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:74:11)
      at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:320:21)
      at Object.toThrow (tests/integration/utils/apiKeyService.test.js:164:14)
      at Object.toThrow (tests/integration/utils/apiKeyService.test.js:164:14)

  ‚óè API Key Service Integration Tests ‚Ä∫ Audit Logging ‚Ä∫ should log audit events

    TypeError: apiKeyService.logAuditEvent is not a function

      175 |       // Should not throw error
      176 |       await expect(
    > 177 |         apiKeyService.logAuditEvent(userId, action, provider, sessionId)
          |                       ^
      178 |       ).resolves.not.toThrow();
      179 |     });
      180 |

      at Object.logAuditEvent (tests/integration/utils/apiKeyService.test.js:177:23)

  ‚óè API Key Service Integration Tests ‚Ä∫ Audit Logging ‚Ä∫ should handle audit logging failures gracefully

    TypeError: apiKeyService.logAuditEvent is not a function

      182 |       // Should not throw even with invalid data
      183 |       await expect(
    > 184 |         apiKeyService.logAuditEvent(null, null, null, null)
          |                       ^
      185 |       ).resolves.not.toThrow();
      186 |     });
      187 |   });

      at Object.logAuditEvent (tests/integration/utils/apiKeyService.test.js:184:23)

  ‚óè API Key Service Integration Tests ‚Ä∫ Encryption Key Management ‚Ä∫ should get encryption key

    TypeError: apiKeyService.getEncryptionKey is not a function

      189 |   describe("Encryption Key Management", () => {
      190 |     test("should get encryption key", async () => {
    > 191 |       const encryptionKey = await apiKeyService.getEncryptionKey();
          |                                                 ^
      192 |       expect(encryptionKey).toBeDefined();
      193 |       expect(typeof encryptionKey).toBe("string");
      194 |     });

      at Object.getEncryptionKey (tests/integration/utils/apiKeyService.test.js:191:49)

FAIL tests/unit/services/alpacaIntegration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Alpaca Integration Service Unit Tests ‚Ä∫ Account Information ‚Ä∫ should retrieve account information

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "test-user-123", "alpaca"

    Number of calls: 0

      55 |       expect(result).toEqual(mockAccountInfo);
      56 |       expect(alpacaService.getAccountInfo).toHaveBeenCalledWith(testUserId);
    > 57 |       expect(getDecryptedApiKey).toHaveBeenCalledWith(testUserId, "alpaca");
         |                                  ^
      58 |     });
      59 |
      60 |     test("should handle account information errors", async () => {

      at Object.toHaveBeenCalledWith (tests/unit/services/alpacaIntegration.test.js:57:34)

  ‚óè Alpaca Integration Service Unit Tests ‚Ä∫ Error Handling ‚Ä∫ should handle authentication failures

    expect(received).rejects.toThrow(expected)

    Expected substring: "Invalid API credentials"
    Received message:   "Request timeout"

          391 |     test("should handle network timeouts", async () => {
          392 |       alpacaService.getAccountInfo.mockRejectedValue(
        > 393 |         new Error("Request timeout")
              |         ^
          394 |       );
          395 |
          396 |       await expect(alpacaService.getAccountInfo(testUserId)).rejects.toThrow(

      at Object.<anonymous> (tests/unit/services/alpacaIntegration.test.js:393:9)
      at Object.toThrow (node_modules/expect/build/index.js:218:22)
      at Object.toThrow (tests/unit/services/alpacaIntegration.test.js:406:70)

FAIL tests/integration/utils/sentimentEngine.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      {"timestamp":"2025-09-23T16:32:17.948Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Sentiment analysis failed:","correlationId":"74c68741","severity":"ERROR"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:32:17.949Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Sentiment analysis failed:","correlationId":"027a5db6","severity":"ERROR"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:32:17.949Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Sentiment analysis failed:","correlationId":"8084c3fc","severity":"ERROR"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:32:17.950Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Sentiment analysis failed:","correlationId":"e4204b8a","severity":"ERROR"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Sentiment Engine Integration Tests ‚Ä∫ Score to Label Conversion ‚Ä∫ should handle invalid scores gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: "neutral"
    Received: "positive"

      141 |       invalidScores.forEach((score) => {
      142 |         const label = sentimentEngine.scoreToLabel(score);
    > 143 |         expect(label).toBe("neutral");
          |                       ^
      144 |       });
      145 |     });
      146 |

      at toBe (tests/integration/utils/sentimentEngine.test.js:143:23)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/utils/sentimentEngine.test.js:141:21)

FAIL tests/unit/utils/tradingModeHelper.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      Trading mode check failed, defaulting to paper: Database connection failed

      at Object.log [as getUserTradingMode] (utils/tradingModeHelper.js:37:13)

    console.log
      üéØ Executing paper trading query on table: portfolio_holdings

      at Object.log [as executeWithTradingMode] (utils/tradingModeHelper.js:209:15)

    console.log
      üéØ Executing paper trading query on table: portfolio_holdings

      at Object.log [as executeWithTradingMode] (utils/tradingModeHelper.js:209:15)

    console.log
      Table portfolio_holdings not found, using fallback table: portfolio_holdings

      at Object.log [as executeWithTradingMode] (utils/tradingModeHelper.js:221:19)

    console.log
      API key check failed: Database error

      at Object.log [as checkLiveTradingRequirements] (utils/tradingModeHelper.js:158:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Trading Mode Helper Unit Tests ‚Ä∫ getTradingModeTable ‚Ä∫ should return live table name for live mode

    expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 1

      Object {
        "fallbackTable": "orders",
        "mode": "live",
    -   "table": "orders_live",
    +   "table": "orders",
      }

      370 |       );
      371 |
    > 372 |       expect(result).toEqual({
          |                      ^
      373 |         table: "orders_live",
      374 |         mode: "live",
      375 |         fallbackTable: "orders",

      at Object.toEqual (tests/unit/utils/tradingModeHelper.test.js:372:22)

  ‚óè Trading Mode Helper Unit Tests ‚Ä∫ formatPortfolioWithMode ‚Ä∫ should format portfolio data with paper trading context

    expect(received).toMatchObject(expected)

    - Expected  - 1
    + Received  + 6

    @@ -3,7 +3,12 @@
        "paper_trading": true,
        "performance_disclaimer": "Paper trading performance - results are simulated and may not reflect real trading conditions",
        "risk_warning": null,
        "total_pnl": 5000,
        "total_value": 50000,
    -   "trading_mode": "paper",
    +   "trading_mode": Object {
    +     "isLive": false,
    +     "isPaper": true,
    +     "mode": "paper",
    +     "source": "database",
    +   },
      }

      475 |       );
      476 |
    > 477 |       expect(result).toMatchObject({
          |                      ^
      478 |         total_value: 50000,
      479 |         total_pnl: 5000,
      480 |         trading_mode: "paper",

      at Object.toMatchObject (tests/unit/utils/tradingModeHelper.test.js:477:22)

  ‚óè Trading Mode Helper Unit Tests ‚Ä∫ formatPortfolioWithMode ‚Ä∫ should format portfolio data with live trading context

    expect(received).toMatchObject(expected)

    - Expected  - 1
    + Received  + 6

    @@ -3,7 +3,12 @@
        "paper_trading": false,
        "performance_disclaimer": "Live trading performance - actual results from real money trades",
        "risk_warning": "‚ö†Ô∏è Live trading results reflect real money gains/losses",
        "total_pnl": 5000,
        "total_value": 50000,
    -   "trading_mode": "live",
    +   "trading_mode": Object {
    +     "isLive": true,
    +     "isPaper": false,
    +     "mode": "live",
    +     "source": "database",
    +   },
      }

      508 |       );
      509 |
    > 510 |       expect(result).toMatchObject({
          |                      ^
      511 |         total_value: 50000,
      512 |         total_pnl: 5000,
      513 |         trading_mode: "live",

      at Object.toMatchObject (tests/unit/utils/tradingModeHelper.test.js:510:22)

::ffff:127.0.0.1 - - [23/Sep/2025:16:32:18 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:18 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:18 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:18 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:18 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:18 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:18 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:18 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:19 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:19 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:19 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:19 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:19 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:19 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:19 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:19 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:19 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/health HTTP/1.1" 200 504 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/health HTTP/1.1" 200 504 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/health HTTP/1.1" 200 504 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/health HTTP/1.1" 200 504 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/health HTTP/1.1" 200 504 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/health HTTP/1.1" 200 504 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/health HTTP/1.1" 200 504 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/health HTTP/1.1" 200 504 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/health HTTP/1.1" 200 504 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/health HTTP/1.1" 200 504 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/health HTTP/1.1" 200 503 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/health HTTP/1.1" 200 504 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/health HTTP/1.1" 200 504 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/health HTTP/1.1" 200 504 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:20 +0000] "GET /api/health HTTP/1.1" 200 504 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:21 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:21 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:21 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:21 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:21 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:21 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:21 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:21 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:21 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:21 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:21 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:21 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:21 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:21 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:21 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:22 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 346 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:22 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 348 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:22 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 350 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:22 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 349 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:22 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 348 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:22 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 344 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:22 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 348 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:22 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 349 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:22 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 348 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:22 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 349 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:22 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 350 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:22 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 347 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:22 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 349 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:22 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 348 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:22 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 349 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:23 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:23 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:23 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:23 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:23 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:23 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:23 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:23 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:23 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:23 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:23 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:23 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:25 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:29 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:29 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:29 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:29 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:30 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:30 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:30 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:30 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:30 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:31 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:31 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:31 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:31 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:31 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:32 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:32 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:32 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:32 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:32 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
PASS tests/integration/errors/rate-limiting.integration.test.js (16.103 s)
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 7ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 4ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 6ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 4ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 4ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 4ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 8ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 6ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 7ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 5ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 4ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 4ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 4ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 4ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 5ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 4ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 4ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 10ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 3ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 4ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 13ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 19ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 26ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 18ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 17ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 20ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 28ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 27ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 18ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 21ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 21ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 18ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 20ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 20ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 31ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 38ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 42ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 40ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 44ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 37ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 43ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 45ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 43ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 42ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 36ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 36ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 44ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 36ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 35ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 36ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 45ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 35ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 34ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 36ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 40ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 33ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 39ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 30ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 38ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 37ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 37ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 30ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 37ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 37ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 33ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 39ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 41ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 42ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 39ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 33ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 34ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 42ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 40ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 42ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 36ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 38ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 35ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 29ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 33ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 32ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 37ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 29ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 35ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 26ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 35ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 33ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 31ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 37ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 29ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 29ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 6ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 67ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 66ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 69ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 65ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 66ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 65ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 65ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 69ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 65ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 68ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 60ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 56ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 57ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 67ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 63ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 59ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 64ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 57ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 57ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 56ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 50ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 64ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 64ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 60ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 59ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 61ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 67ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 60ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 50ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 50ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 54ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 50ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 54ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 49ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 50ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 54ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 57ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 50ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 52ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 50ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/livedata HTTP/1.1" 200 465 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/livedata HTTP/1.1" 200 465 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/livedata HTTP/1.1" 200 465 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/livedata HTTP/1.1" 200 465 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/livedata HTTP/1.1" 200 465 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/livedata HTTP/1.1" 200 465 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/livedata HTTP/1.1" 200 465 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/livedata/status HTTP/1.1" 200 3286 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/livedata/status HTTP/1.1" 200 3289 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/livedata/status HTTP/1.1" 200 3286 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/livedata/status HTTP/1.1" 200 3286 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/livedata/symbols HTTP/1.1" 200 804 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/livedata/symbols?category=stocks HTTP/1.1" 200 804 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/livedata/symbols?limit=50 HTTP/1.1" 200 804 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/livedata/symbols?search=AAPL HTTP/1.1" 200 804 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/livedata/providers HTTP/1.1" 200 744 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/livedata/providers HTTP/1.1" 200 744 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/livedata/providers?status=active HTTP/1.1" 200 744 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/livedata/connections HTTP/1.1" 200 178 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/livedata/connections HTTP/1.1" 200 178 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/livedata/market HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/livedata/market HTTP/1.1" 200 332 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/livedata/market?status=true HTTP/1.1" 200 332 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/livedata/market?sector=technology HTTP/1.1" 200 332 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/livedata/stream/AAPL HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/livedata/stream/AAPL HTTP/1.1" 200 166 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/livedata/stream/AAPL,MSFT,GOOGL HTTP/1.1" 200 176 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/livedata/stream/AAPL?interval=1m HTTP/1.1" 200 166 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/livedata/stream/INVALID@SYMBOL HTTP/1.1" 400 65 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/livedata/stream/SYM0,SYM1,SYM2,SYM3,SYM4,SYM5,SYM6,SYM7,SYM8,SYM9,SYM10,SYM11,SYM12,SYM13,SYM14,SYM15,SYM16,SYM17,SYM18,SYM19,SYM20,SYM21,SYM22,SYM23,SYM24,SYM25,SYM26,SYM27,SYM28,SYM29,SYM30,SYM31,SYM32,SYM33,SYM34,SYM35,SYM36,SYM37,SYM38,SYM39,SYM40,SYM41,SYM42,SYM43,SYM44,SYM45,SYM46,SYM47,SYM48,SYM49 HTTP/1.1" 400 389 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/livedata/latest/AAPL HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:34 +0000] "GET /api/livedata/latest/AAPL HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:35 +0000] "GET /api/livedata/latest/AAPL,MSFT HTTP/1.1" 404 223 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:35 +0000] "GET /api/livedata/latest/AAPL?fields=price,volume,change HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:35 +0000] "POST /api/livedata/admin/restart HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:37 +0000] "POST /api/livedata/admin/restart HTTP/1.1" 200 611 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:39 +0000] "POST /api/livedata/admin/restart HTTP/1.1" 200 611 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:39 +0000] "POST /api/livedata/admin/optimize HTTP/1.1" 401 529 "-" "-"
FAIL tests/integration/routes/liveData.integration.test.js (7.332 s)
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      {"timestamp":"2025-09-23T16:32:34.933Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Processing live data status request","correlationId":"livedata-status-1758645154933","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:32:34.934Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Live data status request completed","correlationId":"livedata-status-1758645154933","duration":1,"cacheEntries":0,"totalConnections":0,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:32:34.936Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Processing live data status request","correlationId":"test-correlation-1758645154935","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:32:34.937Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Live data status request completed","correlationId":"test-correlation-1758645154935","duration":1,"cacheEntries":0,"totalConnections":0,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:32:34.942Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Processing live data status request","correlationId":"livedata-status-1758645154942","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:32:34.943Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Live data status request completed","correlationId":"livedata-status-1758645154942","duration":1,"cacheEntries":0,"totalConnections":0,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:32:34.945Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Processing live data status request","correlationId":"livedata-status-1758645154945","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:32:34.947Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Live data status request completed","correlationId":"livedata-status-1758645154945","duration":2,"cacheEntries":0,"totalConnections":0,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      {"timestamp":"2025-09-23T16:32:34.963Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Processing live market data request","correlationId":"livedata-market-1758645154963","userId":"dev-user-bypass","query":{},"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:32:34.964Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Live market data request completed","correlationId":"livedata-market-1758645154963","duration":1,"hasIndices":true,"hasWatchlist":true,"errors":0,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      {"timestamp":"2025-09-23T16:32:34.966Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Processing live market data request","correlationId":"livedata-market-1758645154966","userId":"dev-user-bypass","query":{"status":"true"},"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:32:34.967Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Live market data request completed","correlationId":"livedata-market-1758645154966","duration":1,"hasIndices":true,"hasWatchlist":true,"errors":0,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      {"timestamp":"2025-09-23T16:32:34.972Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Processing live market data request","correlationId":"livedata-market-1758645154972","userId":"dev-user-bypass","query":{"sector":"technology"},"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:32:34.972Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Live market data request completed","correlationId":"livedata-market-1758645154972","duration":0,"hasIndices":true,"hasWatchlist":true,"errors":0,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1210:15)

    console.log
      üìä Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1210:15)

    console.log
      üìä Latest data requested for symbols: AAPL, MSFT

      at log (routes/liveData.js:1210:15)

    console.log
      üìä Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1210:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîÑ Live data service restart requested { force: false, maintenance_window: false }

      at log (routes/liveData.js:291:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîÑ Live data service restart requested { force: false, maintenance_window: false }

      at log (routes/liveData.js:291:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      ‚ö° Live data optimization requested { target_latency: 50, cost_limit: 1000 }

      at log (routes/liveData.js:352:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      {"timestamp":"2025-09-23T16:32:42.050Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Processing live data status request","correlationId":"livedata-status-1758645162050","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:32:42.051Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Live data status request completed","correlationId":"livedata-status-1758645162050","duration":1,"cacheEntries":0,"totalConnections":0,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

  ‚óè Live Data Routes Integration Tests ‚Ä∫ GET /api/livedata/latest/:symbols (Authenticated) ‚Ä∫ should require authentication for latest data

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      329 |       const response = await request(app).get("/api/livedata/latest/AAPL");
      330 |
    > 331 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      332 |     });
      333 |
      334 |     test("should return latest data for single symbol", async () => {

      at Object.toBe (tests/integration/routes/liveData.integration.test.js:331:52)

  ‚óè Live Data Routes Integration Tests ‚Ä∫ GET /api/livedata/latest/:symbols (Authenticated) ‚Ä∫ should return latest data for single symbol

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      337 |         .set("Authorization", `Bearer ${authToken}`);
      338 |
    > 339 |       expect(response.status).toBe(200);
          |                               ^
      340 |
      341 |       if (response.status === 200) {
      342 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/liveData.integration.test.js:339:31)

  ‚óè Live Data Routes Integration Tests ‚Ä∫ GET /api/livedata/latest/:symbols (Authenticated) ‚Ä∫ should return latest data for multiple symbols

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      353 |         .set("Authorization", `Bearer ${authToken}`);
      354 |
    > 355 |       expect([200, 400].includes(response.status)).toBe(true);
          |                                                    ^
      356 |
      357 |       if (response.status === 200) {
      358 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/liveData.integration.test.js:355:52)

  ‚óè Live Data Routes Integration Tests ‚Ä∫ GET /api/livedata/latest/:symbols (Authenticated) ‚Ä∫ should handle fields parameter for latest data

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      366 |         .set("Authorization", `Bearer ${authToken}`);
      367 |
    > 368 |       expect([200, 400].includes(response.status)).toBe(true);
          |                                                    ^
      369 |     });
      370 |   });
      371 |

      at Object.toBe (tests/integration/routes/liveData.integration.test.js:368:52)

::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "POST /api/livedata/admin/optimize HTTP/1.1" 200 1873 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/health HTTP/1.1" 200 211 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/health HTTP/1.1" 200 211 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/health?detailed=true HTTP/1.1" 200 397 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/metrics HTTP/1.1" 200 304 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/metrics?timeRange=1h HTTP/1.1" 200 321 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/metrics?category=performance HTTP/1.1" 200 337 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/websocket/info HTTP/1.1" 200 213 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "POST /api/livedata/subscriptions HTTP/1.1" 200 161 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/stream/AAPL HTTP/1.1" 200 166 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/stream/AAPL HTTP/1.1" 200 166 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/stream/AAPL HTTP/1.1" 200 166 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/stream/AAPL HTTP/1.1" 200 166 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/stream/AAPL HTTP/1.1" 200 166 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/stream/ HTTP/1.1" 400 70 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/stream/AAPL%40%23%24 HTTP/1.1" 400 58 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/stream/123 HTTP/1.1" 400 54 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/stream/aaaaaaaaaaaaaaaaaaaa HTTP/1.1" 400 71 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/status HTTP/1.1" 200 3292 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/symbols HTTP/1.1" 200 804 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/symbols HTTP/1.1" 200 804 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/symbols HTTP/1.1" 200 804 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/symbols HTTP/1.1" 200 804 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/symbols HTTP/1.1" 200 804 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/symbols HTTP/1.1" 200 804 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/symbols HTTP/1.1" 200 804 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/symbols HTTP/1.1" 200 804 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/symbols HTTP/1.1" 200 804 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/symbols HTTP/1.1" 200 804 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/symbols HTTP/1.1" 200 804 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/symbols HTTP/1.1" 200 804 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/symbols HTTP/1.1" 200 804 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/symbols HTTP/1.1" 200 804 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/symbols HTTP/1.1" 200 804 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/symbols HTTP/1.1" 200 804 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/symbols HTTP/1.1" 200 804 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/symbols HTTP/1.1" 200 804 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/symbols HTTP/1.1" 200 804 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/symbols HTTP/1.1" 200 804 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/market HTTP/1.1" 401 528 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/market HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/market HTTP/1.1" 401 528 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/symbols HTTP/1.1" 200 804 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:32:42 +0000] "GET /api/livedata/stream/AAPL,MSFT,GOOGL,TSLA,NVDA,AMZN,META,NFLX,CRM,ORCL HTTP/1.1" 200 258 "-" "-"
PASS tests/unit/services/aiStrategyGeneratorStreaming.test.js (8.538 s)
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

PASS tests/performance/connection-pool-stress.performance.test.js (5.834 s)
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

PASS tests/integration/services/aiStrategyGeneratorStreaming.test.js (7.274 s)
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      {"timestamp":"2025-09-23T16:32:56.839Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Starting streaming strategy generation","correlationId":"ai-strategy-1758645176838-qj0yqkvo5","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758645176839-wb25fwhh6","prompt":"Create a momentum strategy using moving averages","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:32:57.644Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Streaming strategy generation completed","correlationId":"ai-strategy-1758645176838-qj0yqkvo5","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758645176839-wb25fwhh6","strategyName":"AI Momentum Strategy","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:32:57.646Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Starting streaming strategy generation","correlationId":"ai-strategy-1758645177646-3h6qua81k","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758645177646-r0f2nr20x","prompt":"Create a simple trading strategy","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:32:58.448Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Streaming strategy generation completed","correlationId":"ai-strategy-1758645177646-3h6qua81k","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758645177646-r0f2nr20x","strategyName":"AI Momentum Strategy","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:32:58.450Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Starting streaming strategy generation","correlationId":"ai-strategy-1758645178449-1o2bmefam","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758645178450-rw6n8g9gp","prompt":"Create a strategy","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:32:59.252Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Streaming strategy generation completed","correlationId":"ai-strategy-1758645178449-1o2bmefam","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758645178450-rw6n8g9gp","strategyName":"AI Momentum Strategy","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:32:59.253Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Starting streaming strategy generation","correlationId":"ai-strategy-1758645179252-gcvyjeq7q","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758645179253-g3o7o9w9l","prompt":"Strategy 1","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:32:59.253Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Starting streaming strategy generation","correlationId":"ai-strategy-1758645179252-gcvyjeq7q","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758645179253-7bqz63tcd","prompt":"Strategy 2","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:32:59.253Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Stream rejected due to concurrent limit","correlationId":"d1a472c7","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758645179253-7bqz63tcd","activeStreams":1,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:32:59.253Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Streaming strategy generation failed","correlationId":"ai-strategy-1758645179252-gcvyjeq7q","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758645179253-7bqz63tcd","error":"Maximum concurrent streams reached","severity":"ERROR"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:00.454Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Streaming strategy generation completed","correlationId":"ai-strategy-1758645179252-gcvyjeq7q","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758645179253-g3o7o9w9l","strategyName":"AI Momentum Strategy","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:00.455Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Stream cancelled","correlationId":"a9215045","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758645180455-wjuk98vk7","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:00.464Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Starting streaming strategy generation","correlationId":"ai-strategy-1758645180464-c5eix944w","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758645180464-2hs60nb4b","prompt":"Create a strategy","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:00.668Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Streaming failed, attempting template fallback","correlationId":"df25f41b","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758645180464-2hs60nb4b","error":"Streaming connection failed","severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:00.668Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Generating AI-powered strategy from natural language","correlationId":"ai-strategy-1758645180464-c5eix944w","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","prompt":"Create a strategy","symbolCount":4,"aiEnabled":true,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:00.668Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Generating AI strategy using advanced NLP engine","correlationId":"ai-strategy-1758645180464-c5eix944w","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:00.669Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"AI strategy generation successful","correlationId":"ai-strategy-1758645180464-c5eix944w","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","strategyType":"momentum","confidence":0.85,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:00.670Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"AI strategy generation successful","correlationId":"ai-strategy-1758645180464-c5eix944w","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","strategyName":"AI Momentum Strategy","strategyType":"ai_generated","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:03.056Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Starting streaming strategy generation","correlationId":"ai-strategy-1758645183055-00pg9d186","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758645183056-34hcnb5iw","prompt":"Create a strategy","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:03.256Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Streaming failed, attempting template fallback","correlationId":"814e7681","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758645183056-34hcnb5iw","error":"Test error","severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:03.257Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Generating AI-powered strategy from natural language","correlationId":"ai-strategy-1758645183055-00pg9d186","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","prompt":"Create a strategy","symbolCount":4,"aiEnabled":true,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:03.257Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Generating AI strategy using advanced NLP engine","correlationId":"ai-strategy-1758645183055-00pg9d186","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:03.257Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"AI strategy generation successful","correlationId":"ai-strategy-1758645183055-00pg9d186","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","strategyType":"momentum","confidence":0.85,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:03.257Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"AI strategy generation successful","correlationId":"ai-strategy-1758645183055-00pg9d186","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","strategyName":"AI Momentum Strategy","strategyType":"ai_generated","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:03.260Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Starting streaming strategy generation","correlationId":"ai-strategy-1758645183260-a7qavi3b6","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758645183260-nd3apuxa7","prompt":"Create a strategy","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:04.068Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Streaming strategy generation completed","correlationId":"ai-strategy-1758645183260-a7qavi3b6","serviceName":"financial-platform","component":"ai-strategy-generator-streaming","streamId":"stream-1758645183260-nd3apuxa7","strategyName":"AI Momentum Strategy","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

PASS tests/performance/concurrent-transaction.performance.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/backtest/strategies HTTP/1.1" 200 3239 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/portfolio/complex-analysis HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/market/detailed-analysis HTTP/1.1" 404 134 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/calendar/events HTTP/1.1" 200 223 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/backtest/results HTTP/1.1" 200 4988 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 1086 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "POST /api/backtest/run HTTP/1.1" 400 48 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:05 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
PASS tests/integration/errors/timeout-handling.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Portfolio positions requested for user: dev-user-bypass

      at log (routes/portfolio.js:258:13)

    console.log
      Calendar events endpoint called with params: {}

      at log (routes/calendar.js:371:13)

    console.log
      üìä Backtest results requested - ID: all, limit: 50

      at log (routes/backtest.js:855:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 7ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 11ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 11ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 14ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 16ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 19ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 18ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 18ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 20ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 16ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 14ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 5ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 5ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 7ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 5ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 8ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 7ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 5ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Portfolio positions requested for user: dev-user-bypass

      at log (routes/portfolio.js:258:13)

    console.log
      Calendar events endpoint called with params: {}

      at log (routes/calendar.js:371:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

::ffff:127.0.0.1 - - [23/Sep/2025:16:33:07 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:07 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:07 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:07 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:07 +0000] "GET /api/health HTTP/1.1" 200 504 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:07 +0000] "GET /api/health HTTP/1.1" 200 504 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:07 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:07 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:07 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:07 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 347 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:07 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:07 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:07 +0000] "GET /api/calendar/events HTTP/1.1" 200 223 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:08 +0000] "GET /api/liveData/market?symbols=AAPL%2CGOOGL HTTP/1.1" 200 332 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:08 +0000] "GET /api/liveData/stream?symbols=AAPL%2CMSFT&type=quotes HTTP/1.1" 200 330 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:08 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:08 +0000] "GET /api/liveData/latest/GOOGL HTTP/1.1" 404 212 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:08 +0000] "GET /api/liveData/latest/MSFT HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:08 +0000] "GET /api/portfolio/stream/value HTTP/1.1" 404 132 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:08 +0000] "GET /api/portfolio/stream/positions HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:08 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:08 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:08 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:08 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:09 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:09 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:09 +0000] "GET /api/liveData/latest/GOOGL HTTP/1.1" 404 212 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:09 +0000] "GET /api/liveData/latest/MSFT HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:09 +0000] "GET /api/liveData/latest/INVALID HTTP/1.1" 404 216 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:09 +0000] "GET /api/liveData/latest/NOTFOUND HTTP/1.1" 404 218 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:09 +0000] "GET /api/liveData/latest/ HTTP/1.1" 404 126 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:09 +0000] "GET /api/liveData/market?symbols
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:09 +0000] "GET /api/liveData/latest/AAPL?detailed=true&history=1000 HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:09 +0000] "GET /api/liveData/market?symbols=AAPL%2CGOOGL%2CMSFT HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:09 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:09 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:09 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:09 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:09 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:09 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:09 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:09 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:09 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:09 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:09 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:09 +0000] "GET /api/liveData/latest/AAPL HTTP/1.1" 404 210 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:09 +0000] "GET /api/liveData/market?symbols=AAPL HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:09 +0000] "GET /api/liveData/stream?symbol=AAPL&type=quote HTTP/1.1" 200 365 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:09 +0000] "GET /api/liveData/stream?symbol=AAPL&type=trade HTTP/1.1" 200 365 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:09 +0000] "GET /api/liveData/stream?symbol=AAPL&type=bar HTTP/1.1" 501 110 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:09 +0000] "GET /api/liveData/stream?symbol=AAPL&type=news HTTP/1.1" 501 111 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:09 +0000] "GET /api/portfolio/stream/value HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:09 +0000] "GET /api/portfolio/stream/value HTTP/1.1" 404 132 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:09 +0000] "GET /api/portfolio/stream/positions HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:09 +0000] "GET /api/portfolio/stream/positions HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:09 +0000] "GET /api/alerts/stream HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:09 +0000] "GET /api/alerts/stream HTTP/1.1" 200 279 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:09 +0000] "GET /api/portfolio/stream/value HTTP/1.1" 404 132 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:09 +0000] "GET /api/portfolio/stream/positions HTTP/1.1" 404 136 "-" "-"
PASS tests/integration/streaming/streaming-data.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      {"timestamp":"2025-09-23T16:33:08.299Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Processing live market data request","correlationId":"livedata-market-1758645188299","userId":"dev-user-bypass","query":{"symbols":"AAPL,GOOGL"},"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:08.300Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Live market data request completed","correlationId":"livedata-market-1758645188299","duration":1,"hasIndices":true,"hasWatchlist":true,"errors":0,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      {"timestamp":"2025-09-23T16:33:08.307Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Processing live data stream request","correlationId":"livedata-stream-1758645188307","userId":"dev-user-bypass","symbols":"AAPL,MSFT","type":"quotes","format":"json","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:08.309Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Live data stream request completed (test mode)","correlationId":"livedata-stream-1758645188307","duration":1,"symbols":["AAPL","MSFT"],"type":"quotes","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üìä Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1210:15)

    console.log
      üìä Latest data requested for symbols: GOOGL

      at log (routes/liveData.js:1210:15)

    console.log
      üìä Latest data requested for symbols: MSFT

      at log (routes/liveData.js:1210:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1210:15)

    console.log
      üìä Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1210:15)

    console.log
      üìä Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1210:15)

    console.log
      üìä Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1210:15)

    console.log
      üìä Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1210:15)

    console.log
      üìä Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1210:15)

    console.log
      üìä Latest data requested for symbols: GOOGL

      at log (routes/liveData.js:1210:15)

    console.log
      üìä Latest data requested for symbols: MSFT

      at log (routes/liveData.js:1210:15)

    console.log
      üìä Latest data requested for symbols: INVALID

      at log (routes/liveData.js:1210:15)

    console.log
      üìä Latest data requested for symbols: NOTFOUND

      at log (routes/liveData.js:1210:15)

    console.log
      üìä Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1210:15)

    console.log
      üìä Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1210:15)

    console.log
      üìä Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1210:15)

    console.log
      üìä Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1210:15)

    console.log
      üìä Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1210:15)

    console.log
      üìä Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1210:15)

    console.log
      üìä Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1210:15)

    console.log
      üìä Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1210:15)

    console.log
      üìä Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1210:15)

    console.log
      üìä Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1210:15)

    console.log
      üìä Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1210:15)

    console.log
      üìä Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1210:15)

    console.log
      üìä Latest data requested for symbols: AAPL

      at log (routes/liveData.js:1210:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      {"timestamp":"2025-09-23T16:33:09.616Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Processing live data stream request","correlationId":"livedata-stream-1758645189616","userId":"dev-user-bypass","symbols":"default_watchlist","type":"quote","format":"json","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:09.617Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Live data stream request completed (test mode)","correlationId":"livedata-stream-1758645189616","duration":1,"symbols":["AAPL","MSFT","GOOGL","AMZN","TSLA","NVDA","META"],"type":"quote","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      {"timestamp":"2025-09-23T16:33:09.619Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Processing live data stream request","correlationId":"livedata-stream-1758645189619","userId":"dev-user-bypass","symbols":"default_watchlist","type":"trade","format":"json","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:09.620Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Live data stream request completed (test mode)","correlationId":"livedata-stream-1758645189619","duration":1,"symbols":["AAPL","MSFT","GOOGL","AMZN","TSLA","NVDA","META"],"type":"trade","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      {"timestamp":"2025-09-23T16:33:09.622Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Processing live data stream request","correlationId":"livedata-stream-1758645189622","userId":"dev-user-bypass","symbols":"default_watchlist","type":"bar","format":"json","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      {"timestamp":"2025-09-23T16:33:09.624Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Processing live data stream request","correlationId":"livedata-stream-1758645189624","userId":"dev-user-bypass","symbols":"default_watchlist","type":"news","format":"json","severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîî [ALERTS] Fetching streaming alerts for user dev-user-bypass

      at log (routes/alerts.js:2652:15)

    console.log
      ‚úÖ [ALERTS] Successfully streamed 0 alerts for user dev-user-bypass

      at log (routes/alerts.js:2744:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

::ffff:127.0.0.1 - - [23/Sep/2025:16:33:10 +0000] "GET /api/portfolio/stream/value HTTP/1.1" 404 132 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:10 +0000] "GET /api/health?quick=true HTTP/1.1" 200 435 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:10 +0000] "GET /api/health HTTP/1.1" 200 504 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:10 +0000] "GET /api/health HTTP/1.1" 200 504 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:10 +0000] "GET /api/health/database HTTP/1.1" 200 13445 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:10 +0000] "GET /api/health/database HTTP/1.1" 200 13445 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:10 +0000] "GET /api/health/test-connection HTTP/1.1" 200 237 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:10 +0000] "GET /api/health/debug-secret HTTP/1.1" 200 392 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:11 +0000] "GET /api/health/database/diagnostics HTTP/1.1" 200 16574 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:11 +0000] "GET /api/health/database/diagnostics HTTP/1.1" 200 16574 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:11 +0000] "GET /api/health/database/diagnostics HTTP/1.1" 200 16574 "-" "-"
PASS tests/integration/routes/health.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Received request for /health/database

      at log (routes/health.js:534:11)

    console.log
      Received request for /health/database

      at log (routes/health.js:534:11)

    console.log
      Received request for /health/database/diagnostics

      at log (routes/health.js:783:11)

    console.log
      Received request for /health/database/diagnostics

      at log (routes/health.js:783:11)

    console.log
      Received request for /health/database/diagnostics

      at log (routes/health.js:783:11)

    console.log
      Received request for /health/database/diagnostics

      at log (routes/health.js:783:11)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

::ffff:127.0.0.1 - - [23/Sep/2025:16:33:11 +0000] "GET /api/health/database/diagnostics HTTP/1.1" 200 16574 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/calendar/events HTTP/1.1" 200 223 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/backtest/results HTTP/1.1" 200 4988 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 379 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "POST /api/portfolio/analyze HTTP/1.1" 413 124 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/portfolio/summary HTTP/1.1" 200 656 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/calendar/earnings-metrics HTTP/1.1" 500 176 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/analysis HTTP/1.1" 404 125 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/health HTTP/1.1" 200 504 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/portfolio/analysis HTTP/1.1" 404 424 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/detailed-analysis HTTP/1.1" 404 134 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/health HTTP/1.1" 200 504 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:12 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
PASS tests/integration/errors/5xx-server-errors.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Portfolio positions requested for user: dev-user-bypass

      at log (routes/portfolio.js:258:13)

    console.log
      Calendar events endpoint called with params: {}

      at log (routes/calendar.js:371:13)

    console.log
      üìä Backtest results requested - ID: all, limit: 50

      at log (routes/backtest.js:855:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Portfolio summary requested for user: dev-user-bypass

      at log (routes/portfolio.js:174:13)

    console.error
      Database query error: {
        error: 'column "date" does not exist',
        query: '\n' +
          '      SELECT \n' +
          '        symbol,\n' +
          '        symbol as company_name,\n' +
          '        date as report_date,\n' +
          '        ...',
        params: '2 parameters',
        code: '42703'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
          at async Promise.all (index 0)
      at routes/calendar.js:795:57

    console.error
      Error fetching earnings metrics: error: column "date" does not exist
          at /home/stocks/algo/webapp/lambda/node_modules/pg-pool/index.js:45:11
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at query (/home/stocks/algo/webapp/lambda/utils/database.js:1347:20)
          at async Promise.all (index 0)
          at /home/stocks/algo/webapp/lambda/routes/calendar.js:795:57 {
        length: 104,
        severity: 'ERROR',
        code: '42703',
        detail: undefined,
        hint: undefined,
        position: '72',
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'parse_relation.c',
        line: '3722',
        routine: 'errorMissingColumn'
      }

      839 |     });
      840 |   } catch (error) {
    > 841 |     console.error("Error fetching earnings metrics:", error);
          |             ^
      842 |     res.status(500).json({
      843 |       success: false,
      844 |       error: "Failed to fetch earnings metrics",

      at error (routes/calendar.js:841:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 4ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Portfolio analysis requested for user: dev-user-bypass, period: 1y

      at log (routes/portfolio.js:566:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 69ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 68ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 65ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 67ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 69ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 67ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 71ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 59ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 60ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 70ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 60ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 69ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 58ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 60ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 71ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 61ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 60ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 59ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 60ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 64ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 57ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 59ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 55ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 63ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 54ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 62ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 55ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 58ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 52ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 55ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 53ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 57ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 56ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 54ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 58ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 54ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 50ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 67ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 56ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 54ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 55ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 59ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 57ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 58ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 68ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 59ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 61ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 58ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 74ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 59ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Portfolio summary requested for user: dev-user-bypass

      at log (routes/portfolio.js:174:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Portfolio positions requested for user: dev-user-bypass

      at log (routes/portfolio.js:258:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Portfolio performance endpoint called for user: dev-user-bypass, timeframe: 1y

      at log (routes/portfolio.js:1108:13)

    console.log
      üìä Retrieved 0 performance data points

      at log (routes/portfolio.js:1136:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Portfolio positions requested for user: dev-user-bypass

      at log (routes/portfolio.js:258:13)

    console.log
      Calendar events endpoint called with params: {}

      at log (routes/calendar.js:371:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 4ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Portfolio positions requested for user: dev-user-bypass

      at log (routes/portfolio.js:258:13)

    console.log
      Calendar events endpoint called with params: {}

      at log (routes/calendar.js:371:13)

    console.log
      üìä Backtest results requested - ID: all, limit: 50

      at log (routes/backtest.js:855:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

::ffff:127.0.0.1 - - [23/Sep/2025:16:33:13 +0000] "GET /api/health HTTP/1.1" 200 504 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:13 +0000] "POST /api/portfolio/analyze HTTP/1.1" 200 356 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:13 +0000] "GET /api/portfolio/summary HTTP/1.1" 200 656 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:13 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:13 +0000] "GET /api/portfolio/performance HTTP/1.1" 200 451 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:13 +0000] "GET /api/health HTTP/1.1" 200 503 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:13 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:13 +0000] "GET /api/calendar/events HTTP/1.1" 200 223 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:13 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:13 +0000] "GET /api/portfolio/complex-analysis HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:13 +0000] "GET /api/calendar/complex-metrics HTTP/1.1" 404 134 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:13 +0000] "GET /api/market/heavy-computation HTTP/1.1" 404 134 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:13 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:13 +0000] "GET /api/calendar/events HTTP/1.1" 200 223 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:13 +0000] "GET /api/backtest/results HTTP/1.1" 200 4988 "-" "-"
PASS tests/integration/utils/database-connection.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.error
      Database query error: {
        error: 'syntax error at or near "INVALID"',
        query: 'INVALID SQL SYNTAX HERE',
        params: 'no parameters',
        code: '42601'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at Object.<anonymous> (tests/integration/utils/database-connection.integration.test.js:208:7)

    console.warn
      ‚è±Ô∏è Slow query (1112ms): {
        query: '\n        SELECT pg_sleep(0.1), generate_series(1, 10) as num\n      ',
        rows: 10,
        duration: '1112ms'
      }

      1360 |       });
      1361 |     } else if (duration > 1000) {
    > 1362 |       console.warn(`‚è±Ô∏è Slow query (${duration}ms):`, {
           |               ^
      1363 |         query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1364 |         rows: result.rowCount,
      1365 |         duration: `${duration}ms`,

      at warn (utils/database.js:1362:15)
      at Object.<anonymous> (tests/integration/utils/database-connection.integration.test.js:217:22)

    console.error
      Database query error: {
        error: 'invalid input syntax for type integer: "not_a_number"',
        query: 'SELECT $1::int as value',
        params: '1 parameters',
        code: '22P02'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at Object.<anonymous> (tests/integration/utils/database-connection.integration.test.js:222:7)

    console.error
      Database query error: {
        error: 'duplicate key value violates unique constraint "company_profile_pkey"',
        query: '\n' +
          '          INSERT INTO company_profile (ticker, short_name, sector)\n' +
          "          VALUES ('DUPTEST', 'Di...",
        params: 'no parameters',
        code: '23505'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at Object.<anonymous> (tests/integration/utils/database-connection.integration.test.js:236:9)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading HTTP/1.1" 200 193 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading HTTP/1.1" 200 193 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading HTTP/1.1" 200 193 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading HTTP/1.1" 200 193 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading HTTP/1.1" 200 193 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading HTTP/1.1" 200 193 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/health HTTP/1.1" 200 137 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/health HTTP/1.1" 200 137 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/health HTTP/1.1" 200 137 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/health HTTP/1.1" 200 137 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/debug HTTP/1.1" 200 392 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/signals HTTP/1.1" 200 46988 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/signals?limit=50 HTTP/1.1" 200 24137 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/signals?symbol=AAPL&limit=25 HTTP/1.1" 200 12427 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/signals?signal_type=buy&limit=25 HTTP/1.1" 200 12282 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/signals?limit=invalid HTTP/1.1" 400 59 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/signals?limit=1000 HTTP/1.1" 400 51 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/signals/daily HTTP/1.1" 200 1307 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/signals/weekly HTTP/1.1" 200 1889 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/signals/monthly HTTP/1.1" 200 1889 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/signals/invalid HTTP/1.1" 400 137 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/signals/daily?page=1&limit=10 HTTP/1.1" 200 1306 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/signals/daily?latest_only=true&limit=5 HTTP/1.1" 200 767 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/signals/daily?symbol=AAPL&signal_type=buy&limit=5 HTTP/1.1" 200 470 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/summary/daily HTTP/1.1" 200 351 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/summary/weekly HTTP/1.1" 200 353 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/summary/invalid HTTP/1.1" 400 45 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/swing-signals HTTP/1.1" 200 1305 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/swing-signals?page=1&limit=10 HTTP/1.1" 200 1305 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/AAPL/technicals HTTP/1.1" 200 64 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/MSFT/technicals?timeframe=weekly HTTP/1.1" 200 65 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/TSLA/technicals?timeframe=monthly HTTP/1.1" 200 66 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/performance HTTP/1.1" 200 89 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/performance?days=60 HTTP/1.1" 200 89 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/performance?days=invalid HTTP/1.1" 200 89 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/positions HTTP/1.1" 200 75 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/positions?summary=true HTTP/1.1" 200 156 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/orders HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/orders HTTP/1.1" 200 464 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/orders HTTP/1.1" 200 464 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "POST /api/trading/orders HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "POST /api/trading/orders HTTP/1.1" 201 617 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "POST /api/trading/orders HTTP/1.1" 201 615 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "POST /api/trading/orders HTTP/1.1" 400 134 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "POST /api/trading/orders HTTP/1.1" 400 91 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "POST /api/trading/orders HTTP/1.1" 400 62 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "POST /api/trading/orders HTTP/1.1" 400 134 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "POST /api/trading/orders HTTP/1.1" 400 65 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "POST /api/trading/orders HTTP/1.1" 201 619 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/simulator HTTP/1.1" 200 401 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/simulator?portfolio=50000&strategy=mean_reversion&symbols=AAPL,MSFT,GOOGL HTTP/1.1" 200 394 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/simulator?portfolio=invalid HTTP/1.1" 400 69 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/simulator?portfolio=-1000 HTTP/1.1" 400 69 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/simulator?strategy=invalid_strategy HTTP/1.1" 400 103 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/strategies HTTP/1.1" 200 544 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/strategies?category=momentum HTTP/1.1" 200 549 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/strategies?risk_level=low HTTP/1.1" 200 544 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/strategies?active_only=true HTTP/1.1" 200 543 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/strategies?limit=3 HTTP/1.1" 200 543 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/strategies?category=trend_following&risk_level=medium&active_only=true&limit=5 HTTP/1.1" 200 557 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/strategies/momentum_breakout_v1 HTTP/1.1" 200 2227 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/strategies/momentum_breakout_v1?include_signals=true HTTP/1.1" 200 2621 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/strategies/momentum_breakout_v1?include_backtest=true HTTP/1.1" 200 2564 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/strategies/momentum_breakout_v1?include_signals=true&include_backtest=true HTTP/1.1" 200 2958 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/strategies/momentum_breakout_v1 HTTP/1.1" 200 2227 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/strategies/momentum_breakout_v1?include_signals=true HTTP/1.1" 200 2621 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/strategies/momentum_breakout_v1?include_backtest=true HTTP/1.1" 200 2564 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/strategies/momentum_breakout_v1?include_signals=true&include_backtest=true HTTP/1.1" 200 2958 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/strategies/nonexistent_strategy HTTP/1.1" 200 2227 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/signals/daily?symbol=AAPL&signal_type=buy&page=2&limit=15&latest_only=false HTTP/1.1" 200 246 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/signals/daily?page=-1&limit=10 HTTP/1.1" 200 1306 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/signals/daily?page=999999 HTTP/1.1" 200 250 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/performance?days=0 HTTP/1.1" 200 89 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/performance?days=99999 HTTP/1.1" 200 435 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/simulator?portfolio=1 HTTP/1.1" 200 391 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/simulator?portfolio=1000000000 HTTP/1.1" 200 409 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/simulator?symbols=SYM0,SYM1,SYM2,SYM3,SYM4,SYM5,SYM6,SYM7,SYM8,SYM9,SYM10,SYM11,SYM12,SYM13,SYM14,SYM15,SYM16,SYM17,SYM18,SYM19 HTTP/1.1" 200 438 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/signals?symbol=%27%3B%20DROP%20TABLE%20buy_sell_daily%3B%20-- HTTP/1.1" 200 49699 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/signals?symbol=SYMBOL%E4%B8%AD%E6%96%87 HTTP/1.1" 200 47824 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/signals?symbol=&signal_type= HTTP/1.1" 200 47116 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/signals?symbol=%20%20%20&signal_type=%09 HTTP/1.1" 200 44047 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/signals HTTP/1.1" 200 46945 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/positions HTTP/1.1" 200 75 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/strategies HTTP/1.1" 200 544 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/performance HTTP/1.1" 200 89 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/simulator HTTP/1.1" 200 401 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/signals?limit=10 HTTP/1.1" 200 5535 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/signals?limit=10 HTTP/1.1" 200 5517 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/signals?limit=10 HTTP/1.1" 200 5572 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/signals?limit=10 HTTP/1.1" 200 5600 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/signals?limit=10 HTTP/1.1" 200 5710 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/health HTTP/1.1" 200 137 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/health HTTP/1.1" 200 137 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/health HTTP/1.1" 200 137 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/signals?limit=500 HTTP/1.1" 200 232141 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/signals/daily?limit=5 HTTP/1.1" 200 1305 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/performance?days=30 HTTP/1.1" 200 89 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/swing-signals?limit=3 HTTP/1.1" 200 829 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/strategies?limit=2 HTTP/1.1" 200 543 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/signals HTTP/1.1" 200 47101 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/debug HTTP/1.1" 200 392 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/health HTTP/1.1" 200 137 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/signals HTTP/1.1" 200 47087 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/strategies HTTP/1.1" 200 544 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/performance HTTP/1.1" 200 89 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "POST /api/trading/orders HTTP/1.1" 400 135 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/signals?symbol=AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA HTTP/1.1" 200 51608 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/signals?symbol=@ HTTP/1.1" 200 46808 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "POST /api/trading/orders HTTP/1.1" 201 616 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "POST /api/trading/orders HTTP/1.1" 201 616 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "POST /api/trading/orders HTTP/1.1" 201 616 "-" "-"
PASS tests/integration/routes/trading.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      [TRADING] Debug endpoint called

      at log (routes/trading.js:146:11)

    console.log
      üéØ Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:203:13)

    console.log
      üéØ Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:203:13)

    console.log
      üéØ Trading signals requested - user: undefined, symbol: AAPL, type: undefined, timeframe: daily

      at log (routes/trading.js:203:13)

    console.log
      üéØ Trading signals requested - user: undefined, symbol: undefined, type: buy, timeframe: daily

      at log (routes/trading.js:203:13)

    console.log
      üéØ Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:203:13)

    console.log
      üéØ Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:203:13)

    console.log
      [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:446:11)

    console.log
      [TRADING] Request URL: /signals/daily

      at log (routes/trading.js:447:11)

    console.log
      [TRADING] Received request for /signals/:timeframe {
        params: { timeframe: 'daily' },
        query: {},
        path: '/signals/daily',
        method: 'GET',
        time: '2025-09-23T16:33:15.487Z'
      }

      at log (routes/trading.js:448:11)

    console.log
      [TRADING] Table existence check results:

      at log (routes/trading.js:733:13)

    console.log
        Main table exists: true

      at log (routes/trading.js:734:13)

    console.log
        Company profile exists: true

      at log (routes/trading.js:735:13)

    console.log
        Price daily exists: true

      at log (routes/trading.js:736:13)

    console.log
      [TRADING] Executing SQL: 
              SELECT 
                bs.symbol,
                bs.date,
                bs.signal_type as signal,
                bs.price,
                bs.stoplevel as stoplevel,
                bs.inposition as inposition,
                pd.close as current_price,
                cp.short_name as company_name,
                cp.sector as sector,
                NULL as market_cap,
                NULL as trailing_pe,
                pd.dividends as dividend_yield,
                CASE 
                  WHEN bs.signal_type = 'BUY' AND pd.close > bs.price
                  THEN ((pd.close - bs.price) / bs.price * 100)
                  WHEN bs.signal_type = 'SELL' AND pd.close < bs.price
                  THEN ((bs.price - pd.close) / bs.price * 100)
                  ELSE 0
                END as performance_percent
              FROM buy_sell_daily bs
              LEFT JOIN company_profile cp ON bs.symbol = cp.ticker
              LEFT JOIN fundamental_metrics fm ON bs.symbol = fm.symbol
              LEFT JOIN (SELECT DISTINCT ON (pd_inner.symbol) pd_inner.symbol, pd_inner.close, pd_inner.dividends FROM price_daily pd_inner ORDER BY pd_inner.symbol, pd_inner.date DESC) pd ON bs.symbol = pd.symbol
              
              ORDER BY bs.date DESC, bs.symbol ASC
              LIMIT $1 OFFSET $2
             Params: [ 100, 0 ]

      at log (routes/trading.js:737:13)

    console.log
      [TRADING] Executing count SQL: 
              SELECT COUNT(*) as total
              FROM buy_sell_daily bs
              
             Params: []

      at log (routes/trading.js:738:13)

    console.log
      [TRADING] About to execute main query...

      at log (routes/trading.js:745:13)

    console.log
      [TRADING] Main query successful, now executing count query...

      at log (routes/trading.js:747:13)

    console.log
      [TRADING] Both queries successful

      at log (routes/trading.js:754:13)

    console.log
      [TRADING] Query returned 4 rows out of 4 total

      at log (routes/trading.js:784:13)

    console.log
      [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:446:11)

    console.log
      [TRADING] Request URL: /signals/weekly

      at log (routes/trading.js:447:11)

    console.log
      [TRADING] Received request for /signals/:timeframe {
        params: { timeframe: 'weekly' },
        query: {},
        path: '/signals/weekly',
        method: 'GET',
        time: '2025-09-23T16:33:15.515Z'
      }

      at log (routes/trading.js:448:11)

    console.log
      [TRADING] Table existence check results:

      at log (routes/trading.js:733:13)

    console.log
        Main table exists: true

      at log (routes/trading.js:734:13)

    console.log
        Company profile exists: true

      at log (routes/trading.js:735:13)

    console.log
        Price daily exists: true

      at log (routes/trading.js:736:13)

    console.log
      [TRADING] Executing SQL: 
              SELECT 
                bs.symbol,
                bs.date,
                bs.signal_type as signal,
                bs.price,
                NULL as stoplevel,
                false as inposition,
                pd.close as current_price,
                cp.short_name as company_name,
                cp.sector as sector,
                NULL as market_cap,
                NULL as trailing_pe,
                pd.dividends as dividend_yield,
                CASE 
                  WHEN bs.signal_type = 'BUY' AND pd.close > bs.price
                  THEN ((pd.close - bs.price) / bs.price * 100)
                  WHEN bs.signal_type = 'SELL' AND pd.close < bs.price
                  THEN ((bs.price - pd.close) / bs.price * 100)
                  ELSE 0
                END as performance_percent
              FROM buy_sell_weekly bs
              LEFT JOIN company_profile cp ON bs.symbol = cp.ticker
              LEFT JOIN fundamental_metrics fm ON bs.symbol = fm.symbol
              LEFT JOIN (SELECT DISTINCT ON (pd_inner.symbol) pd_inner.symbol, pd_inner.close, pd_inner.dividends FROM price_daily pd_inner ORDER BY pd_inner.symbol, pd_inner.date DESC) pd ON bs.symbol = pd.symbol
              
              ORDER BY bs.date DESC, bs.symbol ASC
              LIMIT $1 OFFSET $2
             Params: [ 100, 0 ]

      at log (routes/trading.js:737:13)

    console.log
      [TRADING] Executing count SQL: 
              SELECT COUNT(*) as total
              FROM buy_sell_weekly bs
              
             Params: []

      at log (routes/trading.js:738:13)

    console.log
      [TRADING] About to execute main query...

      at log (routes/trading.js:745:13)

    console.log
      [TRADING] Main query successful, now executing count query...

      at log (routes/trading.js:747:13)

    console.log
      [TRADING] Both queries successful

      at log (routes/trading.js:754:13)

    console.log
      [TRADING] Query returned 6 rows out of 6 total

      at log (routes/trading.js:784:13)

    console.log
      [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:446:11)

    console.log
      [TRADING] Request URL: /signals/monthly

      at log (routes/trading.js:447:11)

    console.log
      [TRADING] Received request for /signals/:timeframe {
        params: { timeframe: 'monthly' },
        query: {},
        path: '/signals/monthly',
        method: 'GET',
        time: '2025-09-23T16:33:15.540Z'
      }

      at log (routes/trading.js:448:11)

    console.log
      [TRADING] Table existence check results:

      at log (routes/trading.js:733:13)

    console.log
        Main table exists: true

      at log (routes/trading.js:734:13)

    console.log
        Company profile exists: true

      at log (routes/trading.js:735:13)

    console.log
        Price daily exists: true

      at log (routes/trading.js:736:13)

    console.log
      [TRADING] Executing SQL: 
              SELECT 
                bs.symbol,
                bs.date,
                bs.signal_type as signal,
                bs.price,
                NULL as stoplevel,
                false as inposition,
                pd.close as current_price,
                cp.short_name as company_name,
                cp.sector as sector,
                NULL as market_cap,
                NULL as trailing_pe,
                pd.dividends as dividend_yield,
                CASE 
                  WHEN bs.signal_type = 'BUY' AND pd.close > bs.price
                  THEN ((pd.close - bs.price) / bs.price * 100)
                  WHEN bs.signal_type = 'SELL' AND pd.close < bs.price
                  THEN ((bs.price - pd.close) / bs.price * 100)
                  ELSE 0
                END as performance_percent
              FROM buy_sell_monthly bs
              LEFT JOIN company_profile cp ON bs.symbol = cp.ticker
              LEFT JOIN fundamental_metrics fm ON bs.symbol = fm.symbol
              LEFT JOIN (SELECT DISTINCT ON (pd_inner.symbol) pd_inner.symbol, pd_inner.close, pd_inner.dividends FROM price_daily pd_inner ORDER BY pd_inner.symbol, pd_inner.date DESC) pd ON bs.symbol = pd.symbol
              
              ORDER BY bs.date DESC, bs.symbol ASC
              LIMIT $1 OFFSET $2
             Params: [ 100, 0 ]

      at log (routes/trading.js:737:13)

    console.log
      [TRADING] Executing count SQL: 
              SELECT COUNT(*) as total
              FROM buy_sell_monthly bs
              
             Params: []

      at log (routes/trading.js:738:13)

    console.log
      [TRADING] About to execute main query...

      at log (routes/trading.js:745:13)

    console.log
      [TRADING] Main query successful, now executing count query...

      at log (routes/trading.js:747:13)

    console.log
      [TRADING] Both queries successful

      at log (routes/trading.js:754:13)

    console.log
      [TRADING] Query returned 6 rows out of 6 total

      at log (routes/trading.js:784:13)

    console.log
      [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:446:11)

    console.log
      [TRADING] Request URL: /signals/invalid

      at log (routes/trading.js:447:11)

    console.log
      [TRADING] Received request for /signals/:timeframe {
        params: { timeframe: 'invalid' },
        query: {},
        path: '/signals/invalid',
        method: 'GET',
        time: '2025-09-23T16:33:15.561Z'
      }

      at log (routes/trading.js:448:11)

    console.warn
      [TRADING] Invalid timeframe: invalid

      481 |     const validTimeframes = ["daily", "weekly", "monthly"];
      482 |     if (!validTimeframes.includes(normalizedTimeframe)) {
    > 483 |       console.warn("[TRADING] Invalid timeframe:", timeframe);
          |               ^
      484 |       return res.status(400).json({
      485 |         success: false,
      486 |         error: `Invalid timeframe: ${timeframe}. Must be one of: ${validTimeframes.join(", ")} or their aliases (swing, day, week, month)`,

      at warn (routes/trading.js:483:15)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at next (middleware/responseFormatter.js:66:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at urlencodedParser (node_modules/body-parser/lib/types/urlencoded.js:94:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at logger (node_modules/morgan/index.js:144:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at cors (node_modules/cors/lib/index.js:188:7)
      at node_modules/cors/lib/index.js:224:17
      at originCallback (node_modules/cors/lib/index.js:214:15)
      at node_modules/cors/lib/index.js:219:13
      at optionsCallback (node_modules/cors/lib/index.js:199:9)
      at corsMiddleware (node_modules/cors/lib/index.js:204:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at internalNext (node_modules/helmet/index.cjs:537:6)
      at xXssProtectionMiddleware (node_modules/helmet/index.cjs:315:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPoweredByMiddleware (node_modules/helmet/index.cjs:308:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPermittedCrossDomainPoliciesMiddleware (node_modules/helmet/index.cjs:301:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xFrameOptionsMiddleware (node_modules/helmet/index.cjs:285:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDownloadOptionsMiddleware (node_modules/helmet/index.cjs:265:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDnsPrefetchControlMiddleware (node_modules/helmet/index.cjs:258:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xContentTypeOptionsMiddleware (node_modules/helmet/index.cjs:250:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at strictTransportSecurityMiddleware (node_modules/helmet/index.cjs:243:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at referrerPolicyMiddleware (node_modules/helmet/index.cjs:211:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at originAgentClusterMiddleware (node_modules/helmet/index.cjs:186:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginResourcePolicyMiddleware (node_modules/helmet/index.cjs:179:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginOpenerPolicyMiddleware (node_modules/helmet/index.cjs:163:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at contentSecurityPolicyMiddleware (node_modules/helmet/index.cjs:128:4)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at helmetMiddleware (node_modules/helmet/index.cjs:539:6)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)

    console.log
      [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:446:11)

    console.log
      [TRADING] Request URL: /signals/daily?page=1&limit=10

      at log (routes/trading.js:447:11)

    console.log
      [TRADING] Received request for /signals/:timeframe {
        params: { timeframe: 'daily' },
        query: { page: '1', limit: '10' },
        path: '/signals/daily',
        method: 'GET',
        time: '2025-09-23T16:33:15.564Z'
      }

      at log (routes/trading.js:448:11)

    console.log
      [TRADING] Table existence check results:

      at log (routes/trading.js:733:13)

    console.log
        Main table exists: true

      at log (routes/trading.js:734:13)

    console.log
        Company profile exists: true

      at log (routes/trading.js:735:13)

    console.log
        Price daily exists: true

      at log (routes/trading.js:736:13)

    console.log
      [TRADING] Executing SQL: 
              SELECT 
                bs.symbol,
                bs.date,
                bs.signal_type as signal,
                bs.price,
                bs.stoplevel as stoplevel,
                bs.inposition as inposition,
                pd.close as current_price,
                cp.short_name as company_name,
                cp.sector as sector,
                NULL as market_cap,
                NULL as trailing_pe,
                pd.dividends as dividend_yield,
                CASE 
                  WHEN bs.signal_type = 'BUY' AND pd.close > bs.price
                  THEN ((pd.close - bs.price) / bs.price * 100)
                  WHEN bs.signal_type = 'SELL' AND pd.close < bs.price
                  THEN ((bs.price - pd.close) / bs.price * 100)
                  ELSE 0
                END as performance_percent
              FROM buy_sell_daily bs
              LEFT JOIN company_profile cp ON bs.symbol = cp.ticker
              LEFT JOIN fundamental_metrics fm ON bs.symbol = fm.symbol
              LEFT JOIN (SELECT DISTINCT ON (pd_inner.symbol) pd_inner.symbol, pd_inner.close, pd_inner.dividends FROM price_daily pd_inner ORDER BY pd_inner.symbol, pd_inner.date DESC) pd ON bs.symbol = pd.symbol
              
              ORDER BY bs.date DESC, bs.symbol ASC
              LIMIT $1 OFFSET $2
             Params: [ 10, 0 ]

      at log (routes/trading.js:737:13)

    console.log
      [TRADING] Executing count SQL: 
              SELECT COUNT(*) as total
              FROM buy_sell_daily bs
              
             Params: []

      at log (routes/trading.js:738:13)

    console.log
      [TRADING] About to execute main query...

      at log (routes/trading.js:745:13)

    console.log
      [TRADING] Main query successful, now executing count query...

      at log (routes/trading.js:747:13)

    console.log
      [TRADING] Both queries successful

      at log (routes/trading.js:754:13)

    console.log
      [TRADING] Query returned 4 rows out of 4 total

      at log (routes/trading.js:784:13)

    console.log
      [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:446:11)

    console.log
      [TRADING] Request URL: /signals/daily?latest_only=true&limit=5

      at log (routes/trading.js:447:11)

    console.log
      [TRADING] Received request for /signals/:timeframe {
        params: { timeframe: 'daily' },
        query: { latest_only: 'true', limit: '5' },
        path: '/signals/daily',
        method: 'GET',
        time: '2025-09-23T16:33:15.585Z'
      }

      at log (routes/trading.js:448:11)

    console.log
      [TRADING] Table existence check results:

      at log (routes/trading.js:733:13)

    console.log
        Main table exists: true

      at log (routes/trading.js:734:13)

    console.log
        Company profile exists: true

      at log (routes/trading.js:735:13)

    console.log
        Price daily exists: true

      at log (routes/trading.js:736:13)

    console.log
      [TRADING] Executing SQL: 
              WITH ranked_signals AS (
                SELECT 
                  bs.symbol,
                  bs.date,
                  bs.signal_type as signal,
                  bs.price,
                  bs.stoplevel as stoplevel,
                  bs.inposition as inposition,
                  pd.close as current_price,
                  cp.short_name as company_name,
                  cp.sector as sector,
                  NULL as market_cap,
                  NULL as trailing_pe,
                  pd.dividends as dividend_yield,
                  CASE 
                    WHEN bs.signal_type = 'BUY' AND pd.close > bs.price
                    THEN ((pd.close - bs.price) / bs.price * 100)
                    WHEN bs.signal_type = 'SELL' AND pd.close < bs.price
                    THEN ((bs.price - pd.close) / bs.price * 100)
                    ELSE 0
                  END as performance_percent,
                  ROW_NUMBER() OVER (PARTITION BY bs.symbol ORDER BY bs.date DESC) as rn
                FROM buy_sell_daily bs
                LEFT JOIN company_profile cp ON bs.symbol = cp.ticker
                LEFT JOIN fundamental_metrics fm ON bs.symbol = fm.symbol
                LEFT JOIN (SELECT DISTINCT ON (pd_inner.symbol) pd_inner.symbol, pd_inner.close, pd_inner.dividends FROM price_daily pd_inner ORDER BY pd_inner.symbol, pd_inner.date DESC) pd ON bs.symbol = pd.symbol
                
              )
              SELECT * FROM ranked_signals 
              WHERE rn = 1
              ORDER BY ranked_signals.date DESC, ranked_signals.symbol ASC
              LIMIT $1 OFFSET $2
             Params: [ 5, 0 ]

      at log (routes/trading.js:737:13)

    console.log
      [TRADING] Executing count SQL: 
              WITH ranked_signals AS (
                SELECT bs.symbol,
                  ROW_NUMBER() OVER (PARTITION BY bs.symbol ORDER BY bs.date DESC) as rn
                FROM buy_sell_daily bs
                
              )
              SELECT COUNT(*) as total
              FROM ranked_signals 
              WHERE rn = 1
             Params: []

      at log (routes/trading.js:738:13)

    console.log
      [TRADING] About to execute main query...

      at log (routes/trading.js:745:13)

    console.log
      [TRADING] Main query successful, now executing count query...

      at log (routes/trading.js:747:13)

    console.log
      [TRADING] Both queries successful

      at log (routes/trading.js:754:13)

    console.log
      [TRADING] Query returned 2 rows out of 2 total

      at log (routes/trading.js:784:13)

    console.log
      [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:446:11)

    console.log
      [TRADING] Request URL: /signals/daily?symbol=AAPL&signal_type=buy&limit=5

      at log (routes/trading.js:447:11)

    console.log
      [TRADING] Received request for /signals/:timeframe {
        params: { timeframe: 'daily' },
        query: { symbol: 'AAPL', signal_type: 'buy', limit: '5' },
        path: '/signals/daily',
        method: 'GET',
        time: '2025-09-23T16:33:15.605Z'
      }

      at log (routes/trading.js:448:11)

    console.log
      [TRADING] Table existence check results:

      at log (routes/trading.js:733:13)

    console.log
        Main table exists: true

      at log (routes/trading.js:734:13)

    console.log
        Company profile exists: true

      at log (routes/trading.js:735:13)

    console.log
        Price daily exists: true

      at log (routes/trading.js:736:13)

    console.log
      [TRADING] Executing SQL: 
              SELECT 
                bs.symbol,
                bs.date,
                bs.signal_type as signal,
                bs.price,
                bs.stoplevel as stoplevel,
                bs.inposition as inposition,
                pd.close as current_price,
                cp.short_name as company_name,
                cp.sector as sector,
                NULL as market_cap,
                NULL as trailing_pe,
                pd.dividends as dividend_yield,
                CASE 
                  WHEN bs.signal_type = 'BUY' AND pd.close > bs.price
                  THEN ((pd.close - bs.price) / bs.price * 100)
                  WHEN bs.signal_type = 'SELL' AND pd.close < bs.price
                  THEN ((bs.price - pd.close) / bs.price * 100)
                  ELSE 0
                END as performance_percent
              FROM buy_sell_daily bs
              LEFT JOIN company_profile cp ON bs.symbol = cp.ticker
              LEFT JOIN fundamental_metrics fm ON bs.symbol = fm.symbol
              LEFT JOIN (SELECT DISTINCT ON (pd_inner.symbol) pd_inner.symbol, pd_inner.close, pd_inner.dividends FROM price_daily pd_inner ORDER BY pd_inner.symbol, pd_inner.date DESC) pd ON bs.symbol = pd.symbol
              WHERE bs.symbol = $1 AND bs.signal_type = 'BUY'
              ORDER BY bs.date DESC, bs.symbol ASC
              LIMIT $2 OFFSET $3
             Params: [ 'AAPL', 5, 0 ]

      at log (routes/trading.js:737:13)

    console.log
      [TRADING] Executing count SQL: 
              SELECT COUNT(*) as total
              FROM buy_sell_daily bs
              WHERE bs.symbol = $1 AND bs.signal_type = 'BUY'
             Params: [ 'AAPL' ]

      at log (routes/trading.js:738:13)

    console.log
      [TRADING] About to execute main query...

      at log (routes/trading.js:745:13)

    console.log
      [TRADING] Main query successful, now executing count query...

      at log (routes/trading.js:747:13)

    console.log
      [TRADING] Both queries successful

      at log (routes/trading.js:754:13)

    console.log
      [TRADING] Query returned 1 rows out of 1 total

      at log (routes/trading.js:784:13)

    console.log
      üîÑ Trading positions requested for user: anonymous

      at log (routes/trading.js:1212:13)

    console.log
      üîÑ Trading positions requested for user: anonymous

      at log (routes/trading.js:1212:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Trading orders requested for user: dev-user-bypass

      at log (routes/trading.js:1346:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Trading orders requested for user: dev-user-bypass

      at log (routes/trading.js:1346:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìù Order placement requested for user: dev-user-bypass, buy 10 AAPL

      at log (routes/trading.js:1458:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìù Order placement requested for user: dev-user-bypass, sell 5 TSLA

      at log (routes/trading.js:1458:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìù Order placement requested for user: dev-user-bypass, undefined 1 AAPL

      at log (routes/trading.js:1458:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìù Order placement requested for user: dev-user-bypass, buy 1 AAPL

      at log (routes/trading.js:1458:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìù Order placement requested for user: dev-user-bypass, invalid_side 1 AAPL

      at log (routes/trading.js:1458:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìù Order placement requested for user: dev-user-bypass, buy 0 AAPL

      at log (routes/trading.js:1458:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìù Order placement requested for user: dev-user-bypass, buy 1 AAPL

      at log (routes/trading.js:1458:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìù Order placement requested for user: dev-user-bypass, sell 2 NVDA

      at log (routes/trading.js:1458:13)

    console.log
      üéÆ Trading simulator requested - Portfolio: $100000, Strategy: momentum, Symbols: SPY,QQQ,AAPL,TSLA,NVDA

      at log (routes/trading.js:1601:13)

    console.log
      üéÆ Trading simulator requested - Portfolio: $50000, Strategy: mean_reversion, Symbols: AAPL,MSFT,GOOGL

      at log (routes/trading.js:1601:13)

    console.log
      üìà Trading strategies requested - category: all, risk: all, active: false

      at log (routes/trading.js:1790:13)

    console.log
      üìà Trading strategies requested - category: momentum, risk: all, active: false

      at log (routes/trading.js:1790:13)

    console.log
      üìà Trading strategies requested - category: all, risk: low, active: false

      at log (routes/trading.js:1790:13)

    console.log
      üìà Trading strategies requested - category: all, risk: all, active: true

      at log (routes/trading.js:1790:13)

    console.log
      üìà Trading strategies requested - category: all, risk: all, active: false

      at log (routes/trading.js:1790:13)

    console.log
      üìà Trading strategies requested - category: trend_following, risk: medium, active: true

      at log (routes/trading.js:1790:13)

    console.log
      üìä Strategy details requested - ID: momentum_breakout_v1, signals: false, backtest: false

      at log (routes/trading.js:2018:13)

    console.log
      üìä Strategy details requested - ID: momentum_breakout_v1, signals: true, backtest: false

      at log (routes/trading.js:2018:13)

    console.log
      üìä Strategy details requested - ID: momentum_breakout_v1, signals: false, backtest: true

      at log (routes/trading.js:2018:13)

    console.log
      üìä Strategy details requested - ID: momentum_breakout_v1, signals: true, backtest: true

      at log (routes/trading.js:2018:13)

    console.log
      üìä Strategy details requested - ID: momentum_breakout_v1, signals: false, backtest: false

      at log (routes/trading.js:2018:13)

    console.log
      üìä Strategy details requested - ID: momentum_breakout_v1, signals: true, backtest: false

      at log (routes/trading.js:2018:13)

    console.log
      üìä Strategy details requested - ID: momentum_breakout_v1, signals: false, backtest: true

      at log (routes/trading.js:2018:13)

    console.log
      üìä Strategy details requested - ID: momentum_breakout_v1, signals: true, backtest: true

      at log (routes/trading.js:2018:13)

    console.log
      üìä Strategy details requested - ID: nonexistent_strategy, signals: false, backtest: false

      at log (routes/trading.js:2018:13)

    console.log
      [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:446:11)

    console.log
      [TRADING] Request URL: /signals/daily?symbol=AAPL&signal_type=buy&page=2&limit=15&latest_only=false

      at log (routes/trading.js:447:11)

    console.log
      [TRADING] Received request for /signals/:timeframe {
        params: { timeframe: 'daily' },
        query: {
          symbol: 'AAPL',
          signal_type: 'buy',
          page: '2',
          limit: '15',
          latest_only: 'false'
        },
        path: '/signals/daily',
        method: 'GET',
        time: '2025-09-23T16:33:15.761Z'
      }

      at log (routes/trading.js:448:11)

    console.log
      [TRADING] Table existence check results:

      at log (routes/trading.js:733:13)

    console.log
        Main table exists: true

      at log (routes/trading.js:734:13)

    console.log
        Company profile exists: true

      at log (routes/trading.js:735:13)

    console.log
        Price daily exists: true

      at log (routes/trading.js:736:13)

    console.log
      [TRADING] Executing SQL: 
              SELECT 
                bs.symbol,
                bs.date,
                bs.signal_type as signal,
                bs.price,
                bs.stoplevel as stoplevel,
                bs.inposition as inposition,
                pd.close as current_price,
                cp.short_name as company_name,
                cp.sector as sector,
                NULL as market_cap,
                NULL as trailing_pe,
                pd.dividends as dividend_yield,
                CASE 
                  WHEN bs.signal_type = 'BUY' AND pd.close > bs.price
                  THEN ((pd.close - bs.price) / bs.price * 100)
                  WHEN bs.signal_type = 'SELL' AND pd.close < bs.price
                  THEN ((bs.price - pd.close) / bs.price * 100)
                  ELSE 0
                END as performance_percent
              FROM buy_sell_daily bs
              LEFT JOIN company_profile cp ON bs.symbol = cp.ticker
              LEFT JOIN fundamental_metrics fm ON bs.symbol = fm.symbol
              LEFT JOIN (SELECT DISTINCT ON (pd_inner.symbol) pd_inner.symbol, pd_inner.close, pd_inner.dividends FROM price_daily pd_inner ORDER BY pd_inner.symbol, pd_inner.date DESC) pd ON bs.symbol = pd.symbol
              WHERE bs.symbol = $1 AND bs.signal_type = 'BUY'
              ORDER BY bs.date DESC, bs.symbol ASC
              LIMIT $2 OFFSET $3
             Params: [ 'AAPL', 15, 15 ]

      at log (routes/trading.js:737:13)

    console.log
      [TRADING] Executing count SQL: 
              SELECT COUNT(*) as total
              FROM buy_sell_daily bs
              WHERE bs.symbol = $1 AND bs.signal_type = 'BUY'
             Params: [ 'AAPL' ]

      at log (routes/trading.js:738:13)

    console.log
      [TRADING] About to execute main query...

      at log (routes/trading.js:745:13)

    console.log
      [TRADING] Main query successful, now executing count query...

      at log (routes/trading.js:747:13)

    console.log
      [TRADING] Both queries successful

      at log (routes/trading.js:754:13)

    console.warn
      [TRADING] No data found for query: {
        timeframe: 'daily',
        params: {
          symbol: 'AAPL',
          signal_type: 'buy',
          page: '2',
          limit: '15',
          latest_only: 'false'
        }
      }

      758 |
      759 |     if (!result || !Array.isArray(result.rows) || result.rows.length === 0) {
    > 760 |       console.warn("[TRADING] No data found for query:", {
          |               ^
      761 |         timeframe: processedTimeframe,
      762 |         params: req.query,
      763 |       });

      at warn (routes/trading.js:760:15)

    console.log
      [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:446:11)

    console.log
      [TRADING] Request URL: /signals/daily?page=-1&limit=10

      at log (routes/trading.js:447:11)

    console.log
      [TRADING] Received request for /signals/:timeframe {
        params: { timeframe: 'daily' },
        query: { page: '-1', limit: '10' },
        path: '/signals/daily',
        method: 'GET',
        time: '2025-09-23T16:33:15.771Z'
      }

      at log (routes/trading.js:448:11)

    console.log
      [TRADING] Table existence check results:

      at log (routes/trading.js:733:13)

    console.log
        Main table exists: true

      at log (routes/trading.js:734:13)

    console.log
        Company profile exists: true

      at log (routes/trading.js:735:13)

    console.log
        Price daily exists: true

      at log (routes/trading.js:736:13)

    console.log
      [TRADING] Executing SQL: 
              SELECT 
                bs.symbol,
                bs.date,
                bs.signal_type as signal,
                bs.price,
                bs.stoplevel as stoplevel,
                bs.inposition as inposition,
                pd.close as current_price,
                cp.short_name as company_name,
                cp.sector as sector,
                NULL as market_cap,
                NULL as trailing_pe,
                pd.dividends as dividend_yield,
                CASE 
                  WHEN bs.signal_type = 'BUY' AND pd.close > bs.price
                  THEN ((pd.close - bs.price) / bs.price * 100)
                  WHEN bs.signal_type = 'SELL' AND pd.close < bs.price
                  THEN ((bs.price - pd.close) / bs.price * 100)
                  ELSE 0
                END as performance_percent
              FROM buy_sell_daily bs
              LEFT JOIN company_profile cp ON bs.symbol = cp.ticker
              LEFT JOIN fundamental_metrics fm ON bs.symbol = fm.symbol
              LEFT JOIN (SELECT DISTINCT ON (pd_inner.symbol) pd_inner.symbol, pd_inner.close, pd_inner.dividends FROM price_daily pd_inner ORDER BY pd_inner.symbol, pd_inner.date DESC) pd ON bs.symbol = pd.symbol
              
              ORDER BY bs.date DESC, bs.symbol ASC
              LIMIT $1 OFFSET $2
             Params: [ 10, 0 ]

      at log (routes/trading.js:737:13)

    console.log
      [TRADING] Executing count SQL: 
              SELECT COUNT(*) as total
              FROM buy_sell_daily bs
              
             Params: []

      at log (routes/trading.js:738:13)

    console.log
      [TRADING] About to execute main query...

      at log (routes/trading.js:745:13)

    console.log
      [TRADING] Main query successful, now executing count query...

      at log (routes/trading.js:747:13)

    console.log
      [TRADING] Both queries successful

      at log (routes/trading.js:754:13)

    console.log
      [TRADING] Query returned 4 rows out of 4 total

      at log (routes/trading.js:784:13)

    console.log
      [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:446:11)

    console.log
      [TRADING] Request URL: /signals/daily?page=999999

      at log (routes/trading.js:447:11)

    console.log
      [TRADING] Received request for /signals/:timeframe {
        params: { timeframe: 'daily' },
        query: { page: '999999' },
        path: '/signals/daily',
        method: 'GET',
        time: '2025-09-23T16:33:15.788Z'
      }

      at log (routes/trading.js:448:11)

    console.log
      [TRADING] Table existence check results:

      at log (routes/trading.js:733:13)

    console.log
        Main table exists: true

      at log (routes/trading.js:734:13)

    console.log
        Company profile exists: true

      at log (routes/trading.js:735:13)

    console.log
        Price daily exists: true

      at log (routes/trading.js:736:13)

    console.log
      [TRADING] Executing SQL: 
              SELECT 
                bs.symbol,
                bs.date,
                bs.signal_type as signal,
                bs.price,
                bs.stoplevel as stoplevel,
                bs.inposition as inposition,
                pd.close as current_price,
                cp.short_name as company_name,
                cp.sector as sector,
                NULL as market_cap,
                NULL as trailing_pe,
                pd.dividends as dividend_yield,
                CASE 
                  WHEN bs.signal_type = 'BUY' AND pd.close > bs.price
                  THEN ((pd.close - bs.price) / bs.price * 100)
                  WHEN bs.signal_type = 'SELL' AND pd.close < bs.price
                  THEN ((bs.price - pd.close) / bs.price * 100)
                  ELSE 0
                END as performance_percent
              FROM buy_sell_daily bs
              LEFT JOIN company_profile cp ON bs.symbol = cp.ticker
              LEFT JOIN fundamental_metrics fm ON bs.symbol = fm.symbol
              LEFT JOIN (SELECT DISTINCT ON (pd_inner.symbol) pd_inner.symbol, pd_inner.close, pd_inner.dividends FROM price_daily pd_inner ORDER BY pd_inner.symbol, pd_inner.date DESC) pd ON bs.symbol = pd.symbol
              
              ORDER BY bs.date DESC, bs.symbol ASC
              LIMIT $1 OFFSET $2
             Params: [ 100, 99999800 ]

      at log (routes/trading.js:737:13)

    console.log
      [TRADING] Executing count SQL: 
              SELECT COUNT(*) as total
              FROM buy_sell_daily bs
              
             Params: []

      at log (routes/trading.js:738:13)

    console.log
      [TRADING] About to execute main query...

      at log (routes/trading.js:745:13)

    console.log
      [TRADING] Main query successful, now executing count query...

      at log (routes/trading.js:747:13)

    console.log
      [TRADING] Both queries successful

      at log (routes/trading.js:754:13)

    console.warn
      [TRADING] No data found for query: { timeframe: 'daily', params: { page: '999999' } }

      758 |
      759 |     if (!result || !Array.isArray(result.rows) || result.rows.length === 0) {
    > 760 |       console.warn("[TRADING] No data found for query:", {
          |               ^
      761 |         timeframe: processedTimeframe,
      762 |         params: req.query,
      763 |       });

      at warn (routes/trading.js:760:15)

    console.log
      üéÆ Trading simulator requested - Portfolio: $1, Strategy: momentum, Symbols: SPY,QQQ,AAPL,TSLA,NVDA

      at log (routes/trading.js:1601:13)

    console.log
      üéÆ Trading simulator requested - Portfolio: $1000000000, Strategy: momentum, Symbols: SPY,QQQ,AAPL,TSLA,NVDA

      at log (routes/trading.js:1601:13)

    console.log
      üéÆ Trading simulator requested - Portfolio: $100000, Strategy: momentum, Symbols: SYM0,SYM1,SYM2,SYM3,SYM4,SYM5,SYM6,SYM7,SYM8,SYM9

      at log (routes/trading.js:1601:13)

    console.log
      üéØ Trading signals requested - user: undefined, symbol: '; DROP TABLE buy_sell_daily; --, type: undefined, timeframe: daily

      at log (routes/trading.js:203:13)

    console.log
      üéØ Trading signals requested - user: undefined, symbol: SYMBOL‰∏≠Êñá, type: undefined, timeframe: daily

      at log (routes/trading.js:203:13)

    console.log
      üéØ Trading signals requested - user: undefined, symbol: , type: , timeframe: daily

      at log (routes/trading.js:203:13)

    console.log
      üéØ Trading signals requested - user: undefined, symbol:    , type: 	, timeframe: daily

      at log (routes/trading.js:203:13)

    console.log
      üéØ Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:203:13)

    console.log
      üîÑ Trading positions requested for user: anonymous

      at log (routes/trading.js:1212:13)

    console.log
      üìà Trading strategies requested - category: all, risk: all, active: false

      at log (routes/trading.js:1790:13)

    console.log
      üéÆ Trading simulator requested - Portfolio: $100000, Strategy: momentum, Symbols: SPY,QQQ,AAPL,TSLA,NVDA

      at log (routes/trading.js:1601:13)

    console.log
      üéØ Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:203:13)

    console.log
      üéØ Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:203:13)

    console.log
      üéØ Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:203:13)

    console.log
      üéØ Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:203:13)

    console.log
      üéØ Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:203:13)

    console.log
      üéØ Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:203:13)

    console.log
      [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:446:11)

    console.log
      [TRADING] Request URL: /signals/daily?limit=5

      at log (routes/trading.js:447:11)

    console.log
      [TRADING] Received request for /signals/:timeframe {
        params: { timeframe: 'daily' },
        query: { limit: '5' },
        path: '/signals/daily',
        method: 'GET',
        time: '2025-09-23T16:33:15.885Z'
      }

      at log (routes/trading.js:448:11)

    console.log
      [TRADING] Table existence check results:

      at log (routes/trading.js:733:13)

    console.log
        Main table exists: true

      at log (routes/trading.js:734:13)

    console.log
        Company profile exists: true

      at log (routes/trading.js:735:13)

    console.log
        Price daily exists: true

      at log (routes/trading.js:736:13)

    console.log
      [TRADING] Executing SQL: 
              SELECT 
                bs.symbol,
                bs.date,
                bs.signal_type as signal,
                bs.price,
                bs.stoplevel as stoplevel,
                bs.inposition as inposition,
                pd.close as current_price,
                cp.short_name as company_name,
                cp.sector as sector,
                NULL as market_cap,
                NULL as trailing_pe,
                pd.dividends as dividend_yield,
                CASE 
                  WHEN bs.signal_type = 'BUY' AND pd.close > bs.price
                  THEN ((pd.close - bs.price) / bs.price * 100)
                  WHEN bs.signal_type = 'SELL' AND pd.close < bs.price
                  THEN ((bs.price - pd.close) / bs.price * 100)
                  ELSE 0
                END as performance_percent
              FROM buy_sell_daily bs
              LEFT JOIN company_profile cp ON bs.symbol = cp.ticker
              LEFT JOIN fundamental_metrics fm ON bs.symbol = fm.symbol
              LEFT JOIN (SELECT DISTINCT ON (pd_inner.symbol) pd_inner.symbol, pd_inner.close, pd_inner.dividends FROM price_daily pd_inner ORDER BY pd_inner.symbol, pd_inner.date DESC) pd ON bs.symbol = pd.symbol
              
              ORDER BY bs.date DESC, bs.symbol ASC
              LIMIT $1 OFFSET $2
             Params: [ 5, 0 ]

      at log (routes/trading.js:737:13)

    console.log
      [TRADING] Executing count SQL: 
              SELECT COUNT(*) as total
              FROM buy_sell_daily bs
              
             Params: []

      at log (routes/trading.js:738:13)

    console.log
      [TRADING] About to execute main query...

      at log (routes/trading.js:745:13)

    console.log
      [TRADING] Main query successful, now executing count query...

      at log (routes/trading.js:747:13)

    console.log
      [TRADING] Both queries successful

      at log (routes/trading.js:754:13)

    console.log
      [TRADING] Query returned 4 rows out of 4 total

      at log (routes/trading.js:784:13)

    console.log
      üìà Trading strategies requested - category: all, risk: all, active: false

      at log (routes/trading.js:1790:13)

    console.log
      üéØ Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:203:13)

    console.log
      [TRADING] Debug endpoint called

      at log (routes/trading.js:146:11)

    console.log
      üéØ Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:203:13)

    console.log
      üìà Trading strategies requested - category: all, risk: all, active: false

      at log (routes/trading.js:1790:13)

    console.error
      Error: SyntaxError: Unexpected end of JSON input
          at JSON.parse (<anonymous>)
          at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
          at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
          at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
          at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
          at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
          at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
          at IncomingMessage.emit (node:events:524:28)
          at endReadableNT (node:internal/streams/readable:1698:12)
          at processTicksAndRejections (node:internal/process/task_queues:82:21) {
        expose: true,
        statusCode: 400,
        status: 400,
        body: '{"invalid": ',
        type: 'entity.parse.failed'
      }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

    console.log
      üéØ Trading signals requested - user: undefined, symbol: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA, type: undefined, timeframe: daily

      at log (routes/trading.js:203:13)

    console.log
      üéØ Trading signals requested - user: undefined, symbol: @, type: undefined, timeframe: daily

      at log (routes/trading.js:203:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìù Order placement requested for user: dev-user-bypass, buy 1 AAPL

      at log (routes/trading.js:1458:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìù Order placement requested for user: dev-user-bypass, buy 1 AAPL

      at log (routes/trading.js:1458:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìù Order placement requested for user: dev-user-bypass, buy 1 AAPL

      at log (routes/trading.js:1458:13)

    console.log
      [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:446:11)

    console.log
      [TRADING] Request URL: /signals/daily?limit=10

      at log (routes/trading.js:447:11)

    console.log
      [TRADING] Received request for /signals/:timeframe {
        params: { timeframe: 'daily' },
        query: { limit: '10' },
        path: '/signals/daily',
        method: 'GET',
        time: '2025-09-23T16:33:15.960Z'
      }

      at log (routes/trading.js:448:11)

    console.log
      [TRADING] Table existence check results:

      at log (routes/trading.js:733:13)

    console.log
        Main table exists: true

      at log (routes/trading.js:734:13)

    console.log
        Company profile exists: true

      at log (routes/trading.js:735:13)

    console.log
        Price daily exists: true

      at log (routes/trading.js:736:13)

    console.log
      [TRADING] Executing SQL: 
              SELECT 
                bs.symbol,
                bs.date,
                bs.signal_type as signal,
                bs.price,
                bs.stoplevel as stoplevel,
                bs.inposition as inposition,
                pd.close as current_price,
                cp.short_name as company_name,
                cp.sector as sector,
                NULL as market_cap,
                NULL as trailing_pe,
                pd.dividends as dividend_yield,
                CASE 
                  WHEN bs.signal_type = 'BUY' AND pd.close > bs.price
                  THEN ((pd.close - bs.price) / bs.price * 100)
                  WHEN bs.signal_type = 'SELL' AND pd.close < bs.price
                  THEN ((bs.price - pd.close) / bs.price * 100)
                  ELSE 0
                END as performance_percent
              FROM buy_sell_daily bs
              LEFT JOIN company_profile cp ON bs.symbol = cp.ticker
              LEFT JOIN fundamental_metrics fm ON bs.symbol = fm.symbol
              LEFT JOIN (SELECT DISTINCT ON (pd_inner.symbol) pd_inner.symbol, pd_inner.close, pd_inner.dividends FROM price_daily pd_inner ORDER BY pd_inner.symbol, pd_inner.date DESC) pd ON bs.symbol = pd.symbol
              
              ORDER BY bs.date DESC, bs.symbol ASC
              LIMIT $1 OFFSET $2
             Params: [ 10, 0 ]

      at log (routes/trading.js:737:13)

    console.log
      [TRADING] Executing count SQL: 
              SELECT COUNT(*) as total
              FROM buy_sell_daily bs
              
             Params: []

      at log (routes/trading.js:738:13)

    console.log
      [TRADING] About to execute main query...

      at log (routes/trading.js:745:13)

    console.log
      [TRADING] Main query successful, now executing count query...

      at log (routes/trading.js:747:13)

    console.log
      [TRADING] Both queries successful

      at log (routes/trading.js:754:13)

    console.log
      [TRADING] Query returned 4 rows out of 4 total

      at log (routes/trading.js:784:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìù Order placement requested for user: dev-user-bypass, buy 1 AAPL

      at log (routes/trading.js:1458:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìù Order placement requested for user: dev-user-bypass, buy 0.5 AAPL

      at log (routes/trading.js:1458:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìù Order placement requested for user: dev-user-bypass, BUY 1 aapl

      at log (routes/trading.js:1458:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìù Order placement requested for user: dev-user-bypass, buy 1 AAPL

      at log (routes/trading.js:1458:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìù Order placement requested for user: dev-user-bypass, buy 1000000 AAPL

      at log (routes/trading.js:1458:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìù Order placement requested for user: dev-user-bypass, sell 10 TSLA

      at log (routes/trading.js:1458:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/signals/daily?limit=10 HTTP/1.1" 200 1306 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/orders HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "GET /api/trading/orders HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "POST /api/trading/orders HTTP/1.1" 201 616 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "POST /api/trading/orders HTTP/1.1" 201 616 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "POST /api/trading/orders HTTP/1.1" 400 91 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "POST /api/trading/orders HTTP/1.1" 201 616 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:15 +0000] "POST /api/trading/orders HTTP/1.1" 201 622 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "POST /api/trading/orders HTTP/1.1" 201 625 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "POST /api/backtest/run HTTP/1.1" 400 135 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/calendar/earnings?limit=not-a-number HTTP/1.1" 400 105 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/calendar/earnings?days_ahead=invalid HTTP/1.1" 400 114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/calendar/earnings?start_date=not-a-date HTTP/1.1" 400 120 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "POST /api/backtest/run HTTP/1.1" 400 48 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/portfolio/analytics HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/alerts/distance/AAPL HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/portfolio HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/portfolio HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/portfolio HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/portfolio HTTP/1.1" 401 528 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/portfolio HTTP/1.1" 401 528 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/portfolio HTTP/1.1" 401 528 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/portfolio HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/portfolio HTTP/1.1" 401 528 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/portfolio/admin HTTP/1.1" 404 125 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/portfolio/summary?user_id=999 HTTP/1.1" 200 656 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/alerts/active?user_id=999 HTTP/1.1" 200 1505 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/nonexistent HTTP/1.1" 404 121 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/portfolio/nonexistent-action HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/calendar/nonexistent-calendar HTTP/1.1" 404 139 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "POST /api/invalid/endpoint HTTP/1.1" 404 126 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/backtest/results/nonexistent-id HTTP/1.1" 404 258 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/portfolio/positions/999999 HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/calendar/invalid-calendar-type HTTP/1.1" 404 140 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/portfolio/invalid-portfolio-action HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/invalid-market-data HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "POST /api/health HTTP/1.1" 404 116 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "PUT /api/market/overview HTTP/1.1" 404 125 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "DELETE /api/calendar/earnings HTTP/1.1" 404 127 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "POST /api/health HTTP/1.1" 404 116 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "POST /api/market/overview HTTP/1.1" 404 125 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "POST /api/calendar/earnings HTTP/1.1" 404 127 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "POST /api/portfolio/positions HTTP/1.1" 404 129 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 140 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/calendar/earnings?start_date=2024-12-31&end_date=2024-01-01 HTTP/1.1" 200 259 "-" "-"
PASS tests/integration/errors/4xx-error-scenarios.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.error
      Error: SyntaxError: Unexpected end of JSON input
          at JSON.parse (<anonymous>)
          at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
          at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
          at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
          at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
          at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
          at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
          at IncomingMessage.emit (node:events:524:28)
          at endReadableNT (node:internal/streams/readable:1698:12)
          at processTicksAndRejections (node:internal/process/task_queues:82:21) {
        expose: true,
        statusCode: 400,
        status: 400,
        body: '{"invalid": ',
        type: 'entity.parse.failed'
      }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

    console.error
      Error: SyntaxError: Expected property name or '}' in JSON at position 1
          at JSON.parse (<anonymous>)
          at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
          at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
          at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
          at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
          at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
          at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
          at IncomingMessage.emit (node:events:524:28)
          at endReadableNT (node:internal/streams/readable:1698:12)
          at processTicksAndRejections (node:internal/process/task_queues:82:21) {
        expose: true,
        statusCode: 400,
        status: 400,
        body: '{incomplete json',
        type: 'entity.parse.failed'
      }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Portfolio summary requested for user: dev-user-bypass

      at log (routes/portfolio.js:174:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîî Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:38:13)

    console.log
      üìä Retrieving backtest results for ID: nonexistent-id

      at log (routes/backtest.js:20:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 137ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 148ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 147ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 141ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 140ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 137ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 139ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 138ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 138ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 141ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 143ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 140ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 130ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 144ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 140ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 129ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 132ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 142ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 131ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 135ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 134ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 157ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 133ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 131ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 154ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 133ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 155ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 134ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 133ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 136ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 133ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 133ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 132ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 128ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 124ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 129ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 125ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 129ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 132ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 128ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 130ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 138ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 129ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 126ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 122ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 128ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 132ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 124ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 129ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 130ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 123ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 123ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 138ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 122ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 123ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 131ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 129ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 124ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 127ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 123ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 129ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 119ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 124ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 117ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 127ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 125ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 118ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 120ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 120ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 128ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 126ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 119ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 118ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 119ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 124ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 119ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 121ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 118ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 118ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 124ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 119ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 121ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 115ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 119ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 115ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 111ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 116ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 116ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 115ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 115ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 114ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 116ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 112ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 114ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 115ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 112ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 107ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 121ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 124ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 128ms using real loader tables

      at log (routes/market.js:733:13)

    console.error
      Error: SyntaxError: Unexpected end of JSON input
          at JSON.parse (<anonymous>)
          at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
          at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
          at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
          at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
          at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
          at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
          at IncomingMessage.emit (node:events:524:28)
          at endReadableNT (node:internal/streams/readable:1698:12)
          at processTicksAndRejections (node:internal/process/task_queues:82:21) {
        expose: true,
        statusCode: 400,
        status: 400,
        body: '{"invalid": ',
        type: 'entity.parse.failed'
      }

      242 | app.use((err, req, res, _next) => {
      243 |   try {
    > 244 |     console.error("Error:", err);
          |             ^
      245 |   } catch (e) {
      246 |     // Ignore console logging errors
      247 |   }

      at error (server.js:244:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/nonexistent HTTP/1.1" 404 121 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/portfolio HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/portfolio/positions HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:16 +0000] "GET /api/calendar/admin-only HTTP/1.1" 404 129 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "GET /api/backtest HTTP/1.1" 200 3282 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "GET /api/backtest HTTP/1.1" 200 3282 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "POST /api/backtest HTTP/1.1" 200 283 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "POST /api/backtest HTTP/1.1" 200 276 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "POST /api/backtest HTTP/1.1" 200 275 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "GET /api/backtest/test-backtest-1758645197436 HTTP/1.1" 404 182 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "GET /api/backtest/nonexistent-id HTTP/1.1" 404 169 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "POST /api/backtest HTTP/1.1" 200 278 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "DELETE /api/backtest/test-backtest-1758645197445 HTTP/1.1" 404 182 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "DELETE /api/backtest/nonexistent-id HTTP/1.1" 404 169 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "GET /api/backtest/results HTTP/1.1" 200 6714 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "GET /api/backtest/results?limit=5 HTTP/1.1" 200 2299 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "GET /api/backtest/results?backtestId=test-id HTTP/1.1" 200 148 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "GET /api/backtest/results?status=completed HTTP/1.1" 200 4203 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "GET /api/backtest/symbols HTTP/1.1" 200 281 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "GET /api/backtest/symbols?search=AAPL HTTP/1.1" 200 51 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "GET /api/backtest/symbols?limit=10 HTTP/1.1" 200 281 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "GET /api/backtest/templates HTTP/1.1" 200 3101 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "GET /api/backtest/templates HTTP/1.1" 200 3101 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "POST /api/backtest/validate HTTP/1.1" 200 64 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "POST /api/backtest/validate HTTP/1.1" 200 64 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "POST /api/backtest/validate HTTP/1.1" 400 53 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "GET /api/backtest/optimize HTTP/1.1" 404 163 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "GET /api/backtest/strategies HTTP/1.1" 200 3359 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "POST /api/backtest/strategies HTTP/1.1" 200 144 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "POST /api/backtest/strategies HTTP/1.1" 400 50 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "POST /api/backtest/run HTTP/1.1" 400 53 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "POST /api/backtest/run HTTP/1.1" 400 48 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "POST /api/backtest/run HTTP/1.1" 400 59 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "POST /api/backtest/run-python HTTP/1.1" 400 60 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "POST /api/backtest/run-python HTTP/1.1" 400 51 "-" "-"
PASS tests/integration/routes/backtest.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üìä [BACKTEST] Getting user backtest results

      at log (routes/backtest.js:923:13)

    console.log
      üìä [BACKTEST] Getting user backtest results

      at log (routes/backtest.js:923:13)

    console.log
      üìä [BACKTEST] Creating new backtest

      at log (routes/backtest.js:947:13)

    console.log
      üìä [BACKTEST] Creating new backtest

      at log (routes/backtest.js:947:13)

    console.log
      üìä [BACKTEST] Creating new backtest

      at log (routes/backtest.js:947:13)

    console.log
      üìä [BACKTEST] Getting backtest test-backtest-1758645197436

      at log (routes/backtest.js:986:13)

    console.log
      üìä [BACKTEST] Getting backtest nonexistent-id

      at log (routes/backtest.js:986:13)

    console.log
      üìä [BACKTEST] Creating new backtest

      at log (routes/backtest.js:947:13)

    console.log
      üìä [BACKTEST] Deleting backtest test-backtest-1758645197445

      at log (routes/backtest.js:1015:13)

    console.log
      üìä [BACKTEST] Deleting backtest nonexistent-id

      at log (routes/backtest.js:1015:13)

    console.log
      üìä Backtest results requested - ID: all, limit: 50

      at log (routes/backtest.js:855:13)

    console.log
      üìä Backtest results requested - ID: all, limit: 5

      at log (routes/backtest.js:855:13)

    console.log
      üìä Backtest results requested - ID: test-id, limit: 50

      at log (routes/backtest.js:855:13)

    console.log
      üìä Backtest results requested - ID: all, limit: 50

      at log (routes/backtest.js:855:13)

    console.log
      üìä [BACKTEST] Getting backtest optimize

      at log (routes/backtest.js:986:13)

    console.log
      üìä [BACKTEST] Getting user backtest results

      at log (routes/backtest.js:923:13)

    console.log
      üìä Backtest results requested - ID: all, limit: 50

      at log (routes/backtest.js:855:13)

    console.log
      üìä Backtest results requested - ID: all, limit: invalid

      at log (routes/backtest.js:855:13)

    console.log
      üìä [BACKTEST] Getting user backtest results

      at log (routes/backtest.js:923:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "GET /api/backtest HTTP/1.1" 200 3313 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "GET /api/backtest/results HTTP/1.1" 200 7027 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "GET /api/backtest/strategies HTTP/1.1" 200 3476 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "GET /api/backtest/templates HTTP/1.1" 200 3101 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "GET /api/backtest/symbols?search=INVALID_QUERY_TEST HTTP/1.1" 404 620 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "GET /api/backtest/results?limit=invalid HTTP/1.1" 200 146 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "GET /api/backtest/run HTTP/1.1" 200 887 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "GET /api/backtest/run HTTP/1.1" 200 887 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:17 +0000] "GET /api/backtest HTTP/1.1" 200 3313 "-" "-"
PASS tests/unit/utils/responseFormatter.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

::ffff:127.0.0.1 - - [23/Sep/2025:16:33:18 +0000] "GET /scores/ping HTTP/1.1" 200 74 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:18 +0000] "GET /scores HTTP/1.1" 200 13324 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:18 +0000] "GET /scores?page=1&limit=10 HTTP/1.1" 200 2816 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:18 +0000] "GET /scores?search=AAPL HTTP/1.1" 200 13324 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:18 +0000] "GET /scores?sector=Technology HTTP/1.1" 200 13324 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:18 +0000] "GET /scores?minScore=50&maxScore=100 HTTP/1.1" 200 13324 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:18 +0000] "GET /scores?sortBy=composite_score&sortOrder=desc HTTP/1.1" 200 13324 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:18 +0000] "GET /scores?limit=300 HTTP/1.1" 200 14110 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:18 +0000] "GET /scores?page=invalid&limit=not_a_number&minScore=invalid&maxScore=invalid HTTP/1.1" 200 13324 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:18 +0000] "GET /scores/nonexistent HTTP/1.1" 404 106 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:18 +0000] "GET /scores/ping HTTP/1.1" 200 74 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:18 +0000] "GET /scores HTTP/1.1" 200 13324 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:18 +0000] "GET /scores?search=%27%3B%20DROP%20TABLE%20stock_symbols%3B%20--&sector=Technology%27%3B%20DELETE%20FROM%20company_profile%3B%20-- HTTP/1.1" 200 13324 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:18 +0000] "GET /scores?search=%3Cscript%3Ealert%28%27xss%27%29%3C%2Fscript%3E&sector=%3Cimg%20src%3Dx%20onerror%3Dalert%28%27xss%27%29%3E HTTP/1.1" 200 13324 "-" "-"
PASS tests/integration/routes/scores.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      Processing request: GET /scores/ping

      at log (index.js:403:11)

    console.log
      Initializing database connection...

      at log (index.js:362:13)

    console.log
      Database connection established successfully

      at log (index.js:388:17)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /scores

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìä Scores endpoint called

      at log (routes/scores.js:23:13)

    console.log
      Executing scores query with timeout protection

      at log (routes/scores.js:58:15)

    console.log
      Scores query result: 50 rows

      at log (routes/scores.js:67:15)

    console.log
      Processing request: GET /scores

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìä Scores endpoint called

      at log (routes/scores.js:23:13)

    console.log
      Executing scores query with timeout protection

      at log (routes/scores.js:58:15)

    console.log
      Scores query result: 10 rows

      at log (routes/scores.js:67:15)

    console.log
      Processing request: GET /scores

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìä Scores endpoint called

      at log (routes/scores.js:23:13)

    console.log
      Executing scores query with timeout protection

      at log (routes/scores.js:58:15)

    console.log
      Scores query result: 50 rows

      at log (routes/scores.js:67:15)

    console.log
      Processing request: GET /scores

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìä Scores endpoint called

      at log (routes/scores.js:23:13)

    console.log
      Executing scores query with timeout protection

      at log (routes/scores.js:58:15)

    console.log
      Scores query result: 50 rows

      at log (routes/scores.js:67:15)

    console.log
      Processing request: GET /scores

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìä Scores endpoint called

      at log (routes/scores.js:23:13)

    console.log
      Executing scores query with timeout protection

      at log (routes/scores.js:58:15)

    console.log
      Scores query result: 50 rows

      at log (routes/scores.js:67:15)

    console.log
      Processing request: GET /scores

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìä Scores endpoint called

      at log (routes/scores.js:23:13)

    console.log
      Executing scores query with timeout protection

      at log (routes/scores.js:58:15)

    console.log
      Scores query result: 50 rows

      at log (routes/scores.js:67:15)

    console.log
      Processing request: GET /scores

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìä Scores endpoint called

      at log (routes/scores.js:23:13)

    console.log
      Executing scores query with timeout protection

      at log (routes/scores.js:58:15)

    console.log
      Scores query result: 53 rows

      at log (routes/scores.js:67:15)

    console.log
      Processing request: GET /scores

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìä Scores endpoint called

      at log (routes/scores.js:23:13)

    console.log
      Executing scores query with timeout protection

      at log (routes/scores.js:58:15)

    console.log
      Scores query result: 50 rows

      at log (routes/scores.js:67:15)

    console.log
      Processing request: GET /scores/nonexistent

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìä Scores requested for symbol: NONEXISTENT

      at log (routes/scores.js:168:13)

    console.log
      Processing request: GET /scores/ping

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /scores

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìä Scores endpoint called

      at log (routes/scores.js:23:13)

    console.log
      Executing scores query with timeout protection

      at log (routes/scores.js:58:15)

    console.log
      Scores query result: 50 rows

      at log (routes/scores.js:67:15)

    console.log
      Processing request: GET /scores

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìä Scores endpoint called

      at log (routes/scores.js:23:13)

    console.log
      Executing scores query with timeout protection

      at log (routes/scores.js:58:15)

    console.log
      Scores query result: 50 rows

      at log (routes/scores.js:67:15)

    console.log
      Processing request: GET /scores

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìä Scores endpoint called

      at log (routes/scores.js:23:13)

    console.log
      Executing scores query with timeout protection

      at log (routes/scores.js:58:15)

    console.log
      Scores query result: 50 rows

      at log (routes/scores.js:67:15)

    console.log
      Processing request: GET /scores

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìä Scores endpoint called

      at log (routes/scores.js:23:13)

    console.log
      Executing scores query with timeout protection

      at log (routes/scores.js:58:15)

    console.log
      Scores query result: 50 rows

      at log (routes/scores.js:67:15)

    console.log
      Processing request: GET /scores/ping

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /scores/ping

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /scores/ping

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /scores/ping

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

::ffff:127.0.0.1 - - [23/Sep/2025:16:33:18 +0000] "GET /scores?search= HTTP/1.1" 200 13324 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:18 +0000] "GET /scores/ping HTTP/1.1" 200 74 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:18 +0000] "GET /scores/ping HTTP/1.1" 200 74 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:18 +0000] "GET /scores/ping HTTP/1.1" 200 74 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:18 +0000] "GET /scores/ping HTTP/1.1" 200 74 "-" "-"
PASS tests/integration/routes/financials.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üí∞ [FINANCIALS] Fetching basic financial data for AAPL

      at log (routes/financials.js:1189:11)

    console.log
      üí∞ [FINANCIALS] Fetching basic financial data for INVALID

      at log (routes/financials.js:1189:11)

    console.log
      üí∞ [FINANCIALS] Fetching income data for AAPL (test endpoint)

      at log (routes/financials.js:1249:11)

    console.log
      üí∞ [FINANCIALS] Fetching income data for AAPL (test endpoint)

      at log (routes/financials.js:1249:11)

    console.log
      üí∞ [FINANCIALS] Fetching balance data for AAPL (test endpoint)

      at log (routes/financials.js:1301:11)

    console.log
      üí∞ [FINANCIALS] Fetching cash flow for AAPL via /cash endpoint (test compatibility)

      at log (routes/financials.js:1405:11)

    console.log
      üí∞ [FINANCIALS] Fetching ratios for AAPL (test endpoint)

      at log (routes/financials.js:1573:11)

    console.log
      üìä Financial metrics requested for AAPL

      at log (routes/financials.js:1634:13)

    console.log
      üìä Financial growth metrics requested for AAPL

      at log (routes/financials.js:1668:13)

    console.log
      üìä Financial estimates requested for AAPL

      at log (routes/financials.js:1699:13)

    console.log
      üí∞ [FINANCIALS] Fetching basic financial data for compare

      at log (routes/financials.js:285:13)

    console.log
      üí∞ [FINANCIALS] Fetching basic financial data for screener

      at log (routes/financials.js:204:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

::ffff:127.0.0.1 - - [23/Sep/2025:16:33:18 +0000] "GET /api/financials HTTP/1.1" 200 831 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:18 +0000] "GET /api/financials/AAPL HTTP/1.1" 200 621 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:18 +0000] "GET /api/financials/INVALID HTTP/1.1" 404 70 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:18 +0000] "GET /api/financials/AAPL/income HTTP/1.1" 200 2134 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:18 +0000] "GET /api/financials/AAPL/income?period=annual HTTP/1.1" 200 2134 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:18 +0000] "GET /api/financials/AAPL/balance HTTP/1.1" 200 304 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:18 +0000] "GET /api/financials/AAPL/cash HTTP/1.1" 200 1273 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:18 +0000] "GET /api/financials/AAPL/ratios HTTP/1.1" 200 309 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:18 +0000] "GET /api/financials/AAPL/metrics HTTP/1.1" 200 240 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:18 +0000] "GET /api/financials/AAPL/growth HTTP/1.1" 200 264 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:18 +0000] "GET /api/financials/AAPL/estimates HTTP/1.1" 200 368 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:18 +0000] "GET /api/financials/compare?symbols=AAPL,MSFT,GOOGL HTTP/1.1" 200 449 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:18 +0000] "GET /api/financials/compare HTTP/1.1" 400 128 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:18 +0000] "GET /api/financials/screener?pe_max=25&debt_to_equity_max=0.5 HTTP/1.1" 200 1150 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:19 +0000] "GET /api/market HTTP/1.1" 200 314 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:19 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:19 +0000] "GET /api/market/overview?period=1d&includePremarket=true HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:19 +0000] "GET /api/market/data HTTP/1.1" 200 931 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:19 +0000] "GET /api/market/data?symbol=AAPL HTTP/1.1" 200 931 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:19 +0000] "GET /api/market/sentiment HTTP/1.1" 200 278 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:19 +0000] "GET /api/market/sentiment/history HTTP/1.1" 200 2392 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:19 +0000] "GET /api/market/sentiment/history?days=30 HTTP/1.1" 200 2394 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:19 +0000] "GET /api/market/movers HTTP/1.1" 200 1594 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:19 +0000] "GET /api/market/movers?type=gainers HTTP/1.1" 200 1594 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:19 +0000] "GET /api/market/indices HTTP/1.1" 200 6537 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:19 +0000] "GET /api/market/status HTTP/1.1" 200 151 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:19 +0000] "GET /api/market/sectors HTTP/1.1" 200 198 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:19 +0000] "GET /api/market/invalid-endpoint HTTP/1.1" 404 133 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:19 +0000] "GET /api/market/data?force_error=true HTTP/1.1" 200 931 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:19 +0000] "GET /api/market/sentiment/history?days=invalid HTTP/1.1" 503 370 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:19 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
PASS tests/integration/routes/market.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 6ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 4ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      üìä Market data endpoint called

      at log (routes/market.js:71:13)

    console.log
      üìä Market data endpoint called

      at log (routes/market.js:71:13)

    console.log
      üòä Market sentiment endpoint called

      at log (routes/market.js:1929:11)

    console.log
      Sentiment history endpoint called for 30 days

      at log (routes/market.js:812:11)

    console.log
      Fetching AAII historical data...

      at log (routes/market.js:888:15)

    console.log
      AAII query returned 9 rows

      at log (routes/market.js:897:15)

    console.log
      Sentiment history endpoint called for 30 days

      at log (routes/market.js:812:11)

    console.log
      Fetching AAII historical data...

      at log (routes/market.js:888:15)

    console.log
      AAII query returned 9 rows

      at log (routes/market.js:897:15)

    console.log
      üìä Market movers requested - type: gainers, limit: 10

      at log (routes/market.js:3434:13)

    console.log
      üìä Market movers requested - type: gainers, limit: 10

      at log (routes/market.js:3434:13)

    console.log
      üìä Market indices requested, symbol filter: all

      at log (routes/market.js:5471:13)

    console.log
      Market sectors endpoint called

      at log (routes/market.js:762:13)

    console.log
      üìä Market data endpoint called

      at log (routes/market.js:71:13)

    console.log
      Sentiment history endpoint called for invalid days

      at log (routes/market.js:812:11)

    console.error
      Database query error: {
        error: 'invalid input syntax for type interval: "invalid days"',
        query: '\n' +
          '      SELECT\n' +
          '        date,\n' +
          '        index_value as value,\n' +
          '        CASE \n' +
          '          WHEN index_value >...',
        params: 'no parameters',
        code: '22007'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
      at routes/market.js:835:31

    console.error
      Fear & greed table not available: invalid input syntax for type interval: "invalid days"

      836 |       fearGreedData = fearGreedResult.rows;
      837 |     } catch (e) {
    > 838 |       console.error("Fear & greed table not available:", e.message);
          |               ^
      839 |       return res.status(503).json({
      840 |         success: false,
      841 |         error: "Failed to fetch fear and greed sentiment data",

      at error (routes/market.js:838:15)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 8ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview endpoint called - REAL LOADER TABLES

      at log (routes/market.js:515:11)

    console.log
      Market overview completed in 5ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 10ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      Market overview completed in 10ms using real loader tables

      at log (routes/market.js:733:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

::ffff:127.0.0.1 - - [23/Sep/2025:16:33:19 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:19 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:19 +0000] "GET /api/market/overview HTTP/1.1" 200 1114 "-" "-"
PASS tests/integration/routes/positioning.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üìä Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:29:13)

    console.log
      üìä Stock positioning data requested - symbol: AAPL, timeframe: daily

      at log (routes/positioning.js:29:13)

    console.log
      üìä Stock positioning data requested - symbol: all, timeframe: weekly

      at log (routes/positioning.js:29:13)

    console.log
      üìä Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:29:13)

    console.log
      üìä Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:29:13)

    console.log
      üìä Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:29:13)

    console.log
      üìä Stock positioning data requested - symbol: aapl, timeframe: daily

      at log (routes/positioning.js:29:13)

    console.log
      üìä Stock positioning data requested - symbol: BRK.A, timeframe: daily

      at log (routes/positioning.js:29:13)

    console.log
      üìä Stock positioning data requested - symbol: NONEXISTENT, timeframe: daily

      at log (routes/positioning.js:29:13)

    console.log
      üìä Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:29:13)

    console.log
      üìä Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:29:13)

    console.log
      üìä Stock positioning data requested - symbol: INVALID_TEST_SYMBOL, timeframe: daily

      at log (routes/positioning.js:29:13)

    console.log
      üìä Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:29:13)

    console.error
      Database query error: {
        error: 'invalid input syntax for type bigint: "NaN"',
        query: '\n' +
          '      SELECT \n' +
          '        symbol,\n' +
          '        institution_type,\n' +
          '        institution_name,\n' +
          '        position_...',
        params: '2 parameters',
        code: '22P02'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
          at async Promise.all (index 0)
      at routes/positioning.js:77:52

    console.warn
      Institutional positioning query failed: invalid input syntax for type bigint: "NaN"

      77 |     const [institutionalResult, sentimentResult] = await Promise.all([
      78 |       query(institutionalQuery, params).catch((err) => {
    > 79 |         console.warn("Institutional positioning query failed:", err.message);
         |                 ^
      80 |         return { rows: [] };
      81 |       }),
      82 |       query(sentimentQuery, sentimentParams).catch((err) => {

      at warn (routes/positioning.js:79:17)
          at async Promise.all (index 0)
      at routes/positioning.js:77:52

    console.log
      üìä Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:29:13)

    console.log
      üìä Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:29:13)

    console.error
      Database query error: {
        error: 'LIMIT must not be negative',
        query: '\n' +
          '      SELECT \n' +
          '        symbol,\n' +
          '        institution_type,\n' +
          '        institution_name,\n' +
          '        position_...',
        params: '2 parameters',
        code: '2201W'
      }

      1374 |     return result;
      1375 |   } catch (error) {
    > 1376 |     console.error("Database query error:", {
           |             ^
      1377 |       error: error.message,
      1378 |       query: text.slice(0, 100) + (text.length > 100 ? "..." : ""),
      1379 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:1376:13)
          at async Promise.all (index 0)
      at routes/positioning.js:77:52

    console.warn
      Institutional positioning query failed: LIMIT must not be negative

      77 |     const [institutionalResult, sentimentResult] = await Promise.all([
      78 |       query(institutionalQuery, params).catch((err) => {
    > 79 |         console.warn("Institutional positioning query failed:", err.message);
         |                 ^
      80 |         return { rows: [] };
      81 |       }),
      82 |       query(sentimentQuery, sentimentParams).catch((err) => {

      at warn (routes/positioning.js:79:17)
          at async Promise.all (index 0)
      at routes/positioning.js:77:52

    console.log
      üìä Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:29:13)

    console.log
      üìä Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:29:13)

    console.log
      üìä Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:29:13)

    console.log
      üìä Stock positioning data requested - symbol: AAPL, timeframe: daily

      at log (routes/positioning.js:29:13)

    console.log
      üìä Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:29:13)

    console.log
      üìä Stock positioning data requested - symbol: all, timeframe:

      at log (routes/positioning.js:29:13)

    console.log
      üìä Stock positioning data requested - symbol: BRK.A, timeframe: daily

      at log (routes/positioning.js:29:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

::ffff:127.0.0.1 - - [23/Sep/2025:16:33:19 +0000] "GET /api/positioning/stocks HTTP/1.1" 200 4476 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:19 +0000] "GET /api/positioning/stocks?symbol=AAPL HTTP/1.1" 200 1336 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:19 +0000] "GET /api/positioning/stocks?timeframe=weekly HTTP/1.1" 200 4477 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:19 +0000] "GET /api/positioning/stocks?limit=10&page=1 HTTP/1.1" 200 4476 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:19 +0000] "GET /api/positioning/stocks?limit=5&page=2 HTTP/1.1" 200 3290 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:19 +0000] "GET /api/positioning/stocks HTTP/1.1" 200 4476 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:19 +0000] "GET /api/positioning/stocks?symbol=aapl HTTP/1.1" 404 611 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:19 +0000] "GET /api/positioning/stocks?symbol=BRK.A HTTP/1.1" 404 611 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:19 +0000] "GET /api/positioning/stocks?symbol=NONEXISTENT HTTP/1.1" 404 611 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:19 +0000] "GET /api/positioning/summary HTTP/1.1" 200 324 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:19 +0000] "GET /api/positioning/summary HTTP/1.1" 200 324 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:19 +0000] "GET /api/positioning/summary HTTP/1.1" 200 324 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:19 +0000] "GET /api/positioning/stocks HTTP/1.1" 200 4476 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:19 +0000] "GET /api/positioning/summary HTTP/1.1" 200 324 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:20 +0000] "GET /api/positioning/stocks HTTP/1.1" 200 4476 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:20 +0000] "GET /api/positioning/stocks?symbol=INVALID_TEST_SYMBOL HTTP/1.1" 404 611 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:20 +0000] "GET /api/positioning/stocks?limit=invalid&page=invalid HTTP/1.1" 200 2081 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:20 +0000] "GET /api/positioning/stocks?limit=99999 HTTP/1.1" 200 4476 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:20 +0000] "GET /api/positioning/stocks?limit=-1&page=-1 HTTP/1.1" 200 2081 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:20 +0000] "GET /api/positioning/stocks HTTP/1.1" 200 4476 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:20 +0000] "GET /api/positioning/summary HTTP/1.1" 200 324 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:20 +0000] "GET /api/positioning/stocks HTTP/1.1" 200 4476 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:20 +0000] "GET /api/positioning/stocks HTTP/1.1" 200 4476 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:20 +0000] "GET /api/positioning/stocks?symbol=AAPL HTTP/1.1" 200 1336 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:20 +0000] "GET /api/positioning/summary HTTP/1.1" 200 324 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:20 +0000] "GET /api/positioning/stocks HTTP/1.1" 200 4476 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:20 +0000] "GET /api/positioning/stocks?symbol=&timeframe= HTTP/1.1" 200 4471 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:20 +0000] "GET /api/positioning/stocks?symbol=BRK%2EA HTTP/1.1" 404 611 "-" "-"
PASS tests/integration/routes/metrics.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      Processing request: GET /metrics/ping

      at log (index.js:403:11)

    console.log
      Initializing database connection...

      at log (index.js:362:13)

    console.log
      Database connection established successfully

      at log (index.js:388:17)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /metrics

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìä Metrics endpoint called

      at log (routes/metrics.js:152:13)

    console.log
      Processing request: GET /metrics

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìä Metrics endpoint called

      at log (routes/metrics.js:152:13)

    console.log
      Processing request: GET /metrics

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìä Metrics endpoint called

      at log (routes/metrics.js:152:13)

    console.log
      Processing request: GET /metrics

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìä Metrics endpoint called

      at log (routes/metrics.js:152:13)

    console.log
      Processing request: GET /metrics

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìä Metrics endpoint called

      at log (routes/metrics.js:152:13)

    console.log
      Processing request: GET /metrics

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìä Metrics endpoint called

      at log (routes/metrics.js:152:13)

    console.log
      Processing request: GET /metrics

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìä Metrics endpoint called

      at log (routes/metrics.js:152:13)

    console.log
      Processing request: GET /metrics

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìä Metrics endpoint called

      at log (routes/metrics.js:152:13)

    console.log
      Processing request: GET /metrics/nonexistent

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìä Metrics requested for symbol: NONEXISTENT

      at log (routes/metrics.js:287:13)

    console.log
      Processing request: GET /metrics/ping

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /metrics

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìä Metrics endpoint called

      at log (routes/metrics.js:152:13)

    console.log
      Processing request: GET /metrics/ping

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /metrics/ping

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /metrics/ping

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /metrics/ping

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      Processing request: GET /metrics

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìä Metrics endpoint called

      at log (routes/metrics.js:152:13)

    console.log
      Processing request: GET /metrics

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìä Metrics endpoint called

      at log (routes/metrics.js:152:13)

    console.log
      Processing request: GET /metrics

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìä Metrics endpoint called

      at log (routes/metrics.js:152:13)

    console.log
      Processing request: GET /metrics

      at log (index.js:403:11)

    console.log
      Database connection verified for database-dependent endpoint

      at log (index.js:417:13)

    console.log
      üìä Metrics endpoint called

      at log (routes/metrics.js:152:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

::ffff:127.0.0.1 - - [23/Sep/2025:16:33:20 +0000] "GET /metrics/ping HTTP/1.1" 200 75 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:20 +0000] "GET /metrics HTTP/1.1" 200 458 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:20 +0000] "GET /metrics?page=1&limit=10 HTTP/1.1" 200 458 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:20 +0000] "GET /metrics?search=AAPL HTTP/1.1" 200 458 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:20 +0000] "GET /metrics?sector=Technology HTTP/1.1" 200 458 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:20 +0000] "GET /metrics?minMetric=0.5&maxMetric=1 HTTP/1.1" 200 458 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:20 +0000] "GET /metrics?sortBy=composite_metric&sortOrder=desc HTTP/1.1" 200 458 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:20 +0000] "GET /metrics?limit=300 HTTP/1.1" 200 459 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:20 +0000] "GET /metrics?page=invalid&limit=not_a_number&minMetric=invalid&maxMetric=invalid HTTP/1.1" 200 458 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:20 +0000] "GET /metrics/nonexistent HTTP/1.1" 404 106 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:20 +0000] "GET /metrics/ping HTTP/1.1" 200 75 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:20 +0000] "GET /metrics HTTP/1.1" 200 458 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:20 +0000] "GET /metrics/ping HTTP/1.1" 200 75 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:20 +0000] "GET /metrics/ping HTTP/1.1" 200 75 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:20 +0000] "GET /metrics/ping HTTP/1.1" 200 75 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:20 +0000] "GET /metrics/ping HTTP/1.1" 200 75 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:20 +0000] "GET /metrics HTTP/1.1" 200 458 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:20 +0000] "GET /metrics?search=%27%3B%20DROP%20TABLE%20stock_symbols%3B%20--&sector=Technology%27%3B%20DELETE%20FROM%20company_profile%3B%20-- HTTP/1.1" 200 458 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:20 +0000] "GET /metrics?search=%3Cscript%3Ealert%28%27xss%27%29%3C%2Fscript%3E&sector=%3Cimg%20src%3Dx%20onerror%3Dalert%28%27xss%27%29%3E HTTP/1.1" 200 458 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:20 +0000] "GET /metrics?search= HTTP/1.1" 200 458 "-" "-"
PASS tests/integration/infrastructure/middleware-chains.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Portfolio positions requested for user: dev-user-bypass

      at log (routes/portfolio.js:258:13)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìä Portfolio summary requested for user: dev-user-bypass

      at log (routes/portfolio.js:174:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "GET /api/portfolio HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "GET /api/portfolio HTTP/1.1" 401 528 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "GET /api/portfolio HTTP/1.1" 401 528 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "GET /api/portfolio HTTP/1.1" 401 528 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "GET /api/portfolio HTTP/1.1" 401 521 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "GET /api/portfolio HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "GET /api/alerts/active HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "GET /api/portfolio/summary HTTP/1.1" 401 529 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "GET /api/health HTTP/1.1" 200 505 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "POST /api/portfolio/nonexistent-endpoint HTTP/1.1" 404 140 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "GET /api/portfolio/summary HTTP/1.1" 200 656 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "GET /api/health HTTP/1.1" 200 505 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "GET /api/health HTTP/1.1" 200 505 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "GET /api/health HTTP/1.1" 200 505 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "GET /api/health HTTP/1.1" 200 505 "-" "-"
PASS tests/integration/routes/data.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      üìä Data API info requested

      at log (routes/data.js:19:15)

    console.log
      üìä Data API info requested

      at log (routes/data.js:19:15)

    console.log
      üìä [DATA] Fetching comprehensive data for AAPL

      at log (routes/data.js:237:15)

    console.log
      ‚úÖ [DATA] Successfully fetched data for AAPL

      at log (routes/data.js:295:15)

    console.log
      üìä [DATA] Fetching comprehensive data for AAPL

      at log (routes/data.js:237:15)

    console.log
      ‚úÖ [DATA] Successfully fetched data for AAPL

      at log (routes/data.js:295:15)

    console.log
      üìä [DATA] Fetching comprehensive data for TSLA

      at log (routes/data.js:237:15)

    console.log
      ‚úÖ [DATA] Successfully fetched data for TSLA

      at log (routes/data.js:295:15)

    console.log
      üìä [DATA] Fetching comprehensive data for NONEXISTENT

      at log (routes/data.js:237:15)

    console.log
      ‚ùå [DATA] No data found for symbol NONEXISTENT

      at log (routes/data.js:273:17)

    console.log
      üìä Data API info requested

      at log (routes/data.js:19:15)

    console.log
      üìä [DATA] Fetching comprehensive data for AAPL

      at log (routes/data.js:237:15)

    console.log
      ‚úÖ [DATA] Successfully fetched data for AAPL

      at log (routes/data.js:295:15)

    console.log
      üìä [DATA] Fetching comprehensive data for TEST123

      at log (routes/data.js:237:15)

    console.log
      ‚ùå [DATA] No data found for symbol TEST123

      at log (routes/data.js:273:17)

    console.log
      üìä [DATA] Fetching comprehensive data for BRK.A

      at log (routes/data.js:237:15)

    console.log
      ‚ùå [DATA] No data found for symbol BRK.A

      at log (routes/data.js:273:17)

    console.log
      üìä [DATA] Fetching comprehensive data for 123

      at log (routes/data.js:237:15)

    console.log
      ‚ùå [DATA] No data found for symbol 123

      at log (routes/data.js:273:17)

    console.log
      üìä [DATA] Fetching comprehensive data for  INVALID

      at log (routes/data.js:237:15)

    console.log
      ‚ùå [DATA] No data found for symbol  INVALID

      at log (routes/data.js:273:17)

    console.log
      üìä [DATA] Fetching comprehensive data for DEFINITELY_NONEXISTENT_SYMBOL

      at log (routes/data.js:237:15)

    console.log
      ‚ùå [DATA] No data found for symbol DEFINITELY_NONEXISTENT_SYMBOL

      at log (routes/data.js:273:17)

    console.log
      üìä [DATA] Fetching comprehensive data for AAPL

      at log (routes/data.js:237:15)

    console.log
      ‚úÖ [DATA] Successfully fetched data for AAPL

      at log (routes/data.js:295:15)

    console.log
      üìä [DATA] Fetching comprehensive data for AAPL

      at log (routes/data.js:237:15)

    console.log
      üìä [DATA] Fetching comprehensive data for GOOGL

      at log (routes/data.js:237:15)

    console.log
      üìä [DATA] Fetching comprehensive data for MSFT

      at log (routes/data.js:237:15)

    console.log
      üìä [DATA] Fetching comprehensive data for TSLA

      at log (routes/data.js:237:15)

    console.log
      ‚úÖ [DATA] Successfully fetched data for AAPL

      at log (routes/data.js:295:15)

    console.log
      ‚úÖ [DATA] Successfully fetched data for TSLA

      at log (routes/data.js:295:15)

    console.log
      ‚úÖ [DATA] Successfully fetched data for GOOGL

      at log (routes/data.js:295:15)

    console.log
      ‚úÖ [DATA] Successfully fetched data for MSFT

      at log (routes/data.js:295:15)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "GET /api/data HTTP/1.1" 200 306 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "GET /api/data HTTP/1.1" 200 306 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "GET /api/data/AAPL HTTP/1.1" 200 350 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "GET /api/data/aapl HTTP/1.1" 200 350 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "GET /api/data/TsLa HTTP/1.1" 200 356 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "GET /api/data/NONEXISTENT HTTP/1.1" 404 656 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "GET /api/data/ HTTP/1.1" 200 306 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "GET /api/data/AAPL HTTP/1.1" 200 350 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "GET /api/data/TEST123 HTTP/1.1" 404 644 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "GET /api/data/BRK.A HTTP/1.1" 404 638 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "GET /api/data/123 HTTP/1.1" 404 632 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "GET /api/data/%20invalid%20 HTTP/1.1" 404 650 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "GET /api/data/DEFINITELY_NONEXISTENT_SYMBOL HTTP/1.1" 404 710 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "GET /api/data/AAPL HTTP/1.1" 200 350 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "GET /api/data/AAPL HTTP/1.1" 200 350 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "GET /api/data/TSLA HTTP/1.1" 200 356 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "GET /api/data/GOOGL HTTP/1.1" 200 356 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:21 +0000] "GET /api/data/MSFT HTTP/1.1" 200 353 "-" "-"
PASS tests/unit/routes/dashboard.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully (test mode)

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:100:17)

    console.log
      üìä Dashboard overview requested

      at log (routes/dashboard.js:839:13)

    console.log
      üîç Executing overview queries...

      at log (routes/dashboard.js:922:13)

    console.log
      üìä Overview data prepared: 0 key metrics, 6 movers, 0 sectors

      at log (routes/dashboard.js:934:13)

    console.log
      üß© Dashboard widgets requested

      at log (routes/dashboard.js:1412:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

PASS tests/integration/streaming/sse-streaming.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:81:17)

    console.log
      üö® Alert system integration initialized

      at LiveDataManager.log [as initializeAlertSystem] (utils/liveDataManager.js:1307:15)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

::ffff:127.0.0.1 - - [23/Sep/2025:16:33:22 +0000] "GET /live-data/stream HTTP/1.1" 404 122 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:22 +0000] "GET /live-data/stream?symbols=AAPL%2CMSFT%2CGOOGL HTTP/1.1" 404 150 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:22 +0000] "GET /live-data/stream?interval=1000 HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:22 +0000] "GET /live-data/quotes HTTP/1.1" 404 122 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:22 +0000] "GET /live-data/quotes?symbols=AAPL%2CMSFT HTTP/1.1" 404 142 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:22 +0000] "GET /live-data/quotes?limit=5&offset=10 HTTP/1.1" 404 140 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:22 +0000] "GET /live-data/optimization HTTP/1.1" 404 128 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:22 +0000] "POST /live-data/admin/toggle-stream HTTP/1.1" 404 135 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:22 +0000] "POST /live-data/admin/clear-cache HTTP/1.1" 404 133 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:22 +0000] "GET /live-data/health HTTP/1.1" 404 122 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:22 +0000] "GET /live-data/health HTTP/1.1" 404 122 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:22 +0000] "GET /live-data/quotes?symbols=AAPL&limit=1 HTTP/1.1" 404 143 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:22 +0000] "GET /live-data/stream?symbols=AAPL HTTP/1.1" 404 135 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:22 +0000] "GET /live-data/stream?symbols=MSFT HTTP/1.1" 404 135 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:22 +0000] "GET /live-data/stream?symbols=GOOGL HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:22 +0000] "GET /live-data/stream?symbols=&interval=-1000 HTTP/1.1" 404 146 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:22 +0000] "GET /live-data/stream?symbols=AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA HTTP/1.1" 404 1131 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:22 +0000] "GET /live-data/stream?interval=invalid HTTP/1.1" 404 139 "-" "-"
::ffff:127.0.0.1 - - [23/Sep/2025:16:33:22 +0000] "GET /live-data/stream HTTP/1.1" 404 122 "-" "-"
PASS tests/integration/utils/errorTracker.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.618Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Test error for tracking","correlationId":"test-123","stack":"Error: Test error for tracking\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:30:25)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","userId":"test_user","route":"/api/test","method":"GET","category":"general","severity":"ERROR","context":{"userId":"test_user","route":"/api/test","method":"GET","correlationId":"test-123"}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.627Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Error with stack trace","stack":"Error: Error with stack trace\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:46:21)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","route":"/test-service","method":"POST","category":"general","severity":"ERROR","context":{"route":"/test-service","method":"POST"}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.628Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Database connection failed","stack":"Error: Database connection failed\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:59:29)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"database","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.628Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Unauthorized access","stack":"Error: Unauthorized access\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:60:25)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"auth","severity":"ERROR","context":{"statusCode":401}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.629Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Validation failed","stack":"Error: Validation failed\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:61:31)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"validation","severity":"ERROR","context":{"statusCode":400}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.629Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Database connection timeout","stack":"Error: Database connection timeout\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:83:29)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"database","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.630Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Unauthorized","stack":"Error: Unauthorized\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:84:25)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"auth","severity":"ERROR","context":{"statusCode":401}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.630Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Invalid input","stack":"Error: Invalid input\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:85:27)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"validation","severity":"ERROR","context":{"statusCode":400}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.630Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Minor issue","stack":"Error: Minor issue\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:86:24)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.631Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Database error","stack":"Error: Database error\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:112:31)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"database","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.639Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Auth error","stack":"Error: Auth error\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:113:31)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"auth","severity":"ERROR","context":{"statusCode":401}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.640Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Validation error","stack":"Error: Validation error\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:114:31)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"validation","severity":"ERROR","context":{"statusCode":400}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.640Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"API error","stack":"Error: API error\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:117:31)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"api","severity":"ERROR","context":{"statusCode":500}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.641Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Test error 0","stack":"Error: Test error 0\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:138:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.642Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Test error 1","stack":"Error: Test error 1\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:138:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.642Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Test error 2","stack":"Error: Test error 2\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:138:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.642Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Test error 3","stack":"Error: Test error 3\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:138:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.643Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Test error 4","stack":"Error: Test error 4\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:138:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.643Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Test error 5","stack":"Error: Test error 5\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:138:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.643Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Test error 6","stack":"Error: Test error 6\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:138:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.643Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Test error 7","stack":"Error: Test error 7\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:138:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.644Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Test error 8","stack":"Error: Test error 8\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:138:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.644Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Test error 9","stack":"Error: Test error 9\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:138:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.645Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Connection failed","stack":"Error: Connection failed\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:161:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"database","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.645Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Connection failed","stack":"Error: Connection failed\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:161:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"database","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.645Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Connection failed","stack":"Error: Connection failed\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:161:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"database","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.645Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Unauthorized","stack":"Error: Unauthorized\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:166:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"auth","severity":"ERROR","context":{"statusCode":401}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.646Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Unauthorized","stack":"Error: Unauthorized\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:166:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"auth","severity":"ERROR","context":{"statusCode":401}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.646Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Concurrent error 0","stack":"Error: Concurrent error 0\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:183:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.646Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Concurrent error 1","stack":"Error: Concurrent error 1\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:183:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.647Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Concurrent error 2","stack":"Error: Concurrent error 2\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:183:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.647Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Concurrent error 3","stack":"Error: Concurrent error 3\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:183:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.647Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Concurrent error 4","stack":"Error: Concurrent error 4\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:183:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.647Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Concurrent error 5","stack":"Error: Concurrent error 5\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:183:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.648Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Concurrent error 6","stack":"Error: Concurrent error 6\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:183:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.648Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Concurrent error 7","stack":"Error: Concurrent error 7\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:183:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.648Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Concurrent error 8","stack":"Error: Concurrent error 8\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:183:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.648Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Concurrent error 9","stack":"Error: Concurrent error 9\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:183:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.649Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Concurrent error 10","stack":"Error: Concurrent error 10\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:183:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.649Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Concurrent error 11","stack":"Error: Concurrent error 11\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:183:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.649Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Concurrent error 12","stack":"Error: Concurrent error 12\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:183:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.649Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Concurrent error 13","stack":"Error: Concurrent error 13\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:183:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.650Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Concurrent error 14","stack":"Error: Concurrent error 14\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:183:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.650Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 15 general errors in the last minute (threshold: 15)","correlationId":"f8681817","category":"general","currentCount":15,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 15 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.655Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Concurrent error 15","stack":"Error: Concurrent error 15\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:183:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.655Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 16 general errors in the last minute (threshold: 15)","correlationId":"3f9e4eb7","category":"general","currentCount":16,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 16 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.656Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Concurrent error 16","stack":"Error: Concurrent error 16\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:183:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.656Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 17 general errors in the last minute (threshold: 15)","correlationId":"a5bbfa9e","category":"general","currentCount":17,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 17 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.656Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Concurrent error 17","stack":"Error: Concurrent error 17\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:183:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.656Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 18 general errors in the last minute (threshold: 15)","correlationId":"5c0d88aa","category":"general","currentCount":18,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 18 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.656Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Concurrent error 18","stack":"Error: Concurrent error 18\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:183:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.657Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 19 general errors in the last minute (threshold: 15)","correlationId":"a5e689df","category":"general","currentCount":19,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 19 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.657Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Concurrent error 19","stack":"Error: Concurrent error 19\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:183:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.657Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 20 general errors in the last minute (threshold: 15)","correlationId":"9325e664","category":"general","currentCount":20,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 20 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.658Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Database connection issue","stack":"Error: Database connection issue\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:201:31)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"database","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.658Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Database timeout","stack":"Error: Database timeout\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:202:31)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"database","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.659Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Database connection failed 1758645202659","stack":"Error: Database connection failed 1758645202659\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:217:9)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"database","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.659Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Unauthorized access 1758645202659","stack":"Error: Unauthorized access 1758645202659\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:219:31)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"auth","severity":"ERROR","context":{"statusCode":401}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.659Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"API request failed 1758645202659","stack":"Error: API request failed 1758645202659\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:222:31)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"api","severity":"ERROR","context":{"statusCode":500}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.659Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Validation failed 1758645202659","stack":"Error: Validation failed 1758645202659\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:225:31)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"validation","severity":"ERROR","context":{"statusCode":400}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.660Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Context test error","correlationId":"req-456","stack":"Error: Context test error\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:254:31)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","userId":"user123","route":"/api/portfolio","method":"POST","userAgent":"test-agent","ip":"127.0.0.1","category":"general","severity":"ERROR","context":{"userId":"user123","correlationId":"req-456","route":"/api/portfolio","method":"POST","userAgent":"test-agent","ip":"127.0.0.1"}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.661Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Test 1","stack":"Error: Test 1\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:269:46)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.661Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Test 2","stack":"Error: Test 2\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:270:46)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.662Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 0","stack":"Error: History test 0\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.662Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 1","stack":"Error: History test 1\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.662Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 2","stack":"Error: History test 2\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.662Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 3","stack":"Error: History test 3\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.663Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 4","stack":"Error: History test 4\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.663Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 5","stack":"Error: History test 5\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.663Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 6","stack":"Error: History test 6\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.663Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 7","stack":"Error: History test 7\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.664Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 8","stack":"Error: History test 8\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.664Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 9","stack":"Error: History test 9\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.664Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 10","stack":"Error: History test 10\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.664Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 11","stack":"Error: History test 11\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.665Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 12","stack":"Error: History test 12\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.665Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 13","stack":"Error: History test 13\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.665Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 14","stack":"Error: History test 14\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.665Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 15 general errors in the last minute (threshold: 15)","correlationId":"055a68da","category":"general","currentCount":15,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 15 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.665Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 15","stack":"Error: History test 15\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.666Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 16 general errors in the last minute (threshold: 15)","correlationId":"73b2f290","category":"general","currentCount":16,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 16 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.666Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 16","stack":"Error: History test 16\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.672Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 17 general errors in the last minute (threshold: 15)","correlationId":"399cdb5a","category":"general","currentCount":17,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 17 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.672Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 17","stack":"Error: History test 17\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.673Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 18 general errors in the last minute (threshold: 15)","correlationId":"126aea6b","category":"general","currentCount":18,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 18 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.673Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 18","stack":"Error: History test 18\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.673Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 19 general errors in the last minute (threshold: 15)","correlationId":"81938f7f","category":"general","currentCount":19,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 19 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.673Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 19","stack":"Error: History test 19\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.674Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 20 general errors in the last minute (threshold: 15)","correlationId":"2b28dbf3","category":"general","currentCount":20,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 20 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.674Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 20","stack":"Error: History test 20\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.674Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 21 general errors in the last minute (threshold: 15)","correlationId":"4a9c5f54","category":"general","currentCount":21,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 21 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.674Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 21","stack":"Error: History test 21\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.674Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 22 general errors in the last minute (threshold: 15)","correlationId":"bd2d725d","category":"general","currentCount":22,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 22 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.675Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 22","stack":"Error: History test 22\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.675Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 23 general errors in the last minute (threshold: 15)","correlationId":"4ab7ca3c","category":"general","currentCount":23,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 23 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.675Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 23","stack":"Error: History test 23\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.675Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 24 general errors in the last minute (threshold: 15)","correlationId":"c49bc9ba","category":"general","currentCount":24,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 24 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.675Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 24","stack":"Error: History test 24\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.676Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 25 general errors in the last minute (threshold: 15)","correlationId":"a3da0d4c","category":"general","currentCount":25,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 25 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.676Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 25","stack":"Error: History test 25\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.676Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 26 general errors in the last minute (threshold: 15)","correlationId":"94073c79","category":"general","currentCount":26,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 26 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.676Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 26","stack":"Error: History test 26\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.676Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 27 general errors in the last minute (threshold: 15)","correlationId":"52ce9069","category":"general","currentCount":27,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 27 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.677Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 27","stack":"Error: History test 27\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.677Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 28 general errors in the last minute (threshold: 15)","correlationId":"0073f294","category":"general","currentCount":28,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 28 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.677Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 28","stack":"Error: History test 28\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.677Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 29 general errors in the last minute (threshold: 15)","correlationId":"1fefc016","category":"general","currentCount":29,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 29 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.677Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 29","stack":"Error: History test 29\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.678Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 30 general errors in the last minute (threshold: 15)","correlationId":"8bf5247b","category":"general","currentCount":30,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 30 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.678Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 30","stack":"Error: History test 30\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.678Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 31 general errors in the last minute (threshold: 15)","correlationId":"3d029821","category":"general","currentCount":31,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 31 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.678Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 31","stack":"Error: History test 31\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.678Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 32 general errors in the last minute (threshold: 15)","correlationId":"b43a67c3","category":"general","currentCount":32,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 32 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.679Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 32","stack":"Error: History test 32\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.679Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 33 general errors in the last minute (threshold: 15)","correlationId":"ac57c4c5","category":"general","currentCount":33,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 33 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.679Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 33","stack":"Error: History test 33\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.679Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 34 general errors in the last minute (threshold: 15)","correlationId":"adebf065","category":"general","currentCount":34,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 34 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.679Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 34","stack":"Error: History test 34\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.680Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 35 general errors in the last minute (threshold: 15)","correlationId":"739c7e97","category":"general","currentCount":35,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 35 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.680Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 35","stack":"Error: History test 35\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.680Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 36 general errors in the last minute (threshold: 15)","correlationId":"14302819","category":"general","currentCount":36,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 36 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.680Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 36","stack":"Error: History test 36\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.684Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 37 general errors in the last minute (threshold: 15)","correlationId":"50c33943","category":"general","currentCount":37,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 37 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.684Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 37","stack":"Error: History test 37\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.684Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 38 general errors in the last minute (threshold: 15)","correlationId":"bb613148","category":"general","currentCount":38,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 38 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.684Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 38","stack":"Error: History test 38\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.685Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 39 general errors in the last minute (threshold: 15)","correlationId":"79895b57","category":"general","currentCount":39,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 39 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.685Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 39","stack":"Error: History test 39\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.685Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 40 general errors in the last minute (threshold: 15)","correlationId":"bfb91938","category":"general","currentCount":40,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 40 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.685Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 40","stack":"Error: History test 40\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.686Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 41 general errors in the last minute (threshold: 15)","correlationId":"72e11b96","category":"general","currentCount":41,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 41 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.686Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 41","stack":"Error: History test 41\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.686Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 42 general errors in the last minute (threshold: 15)","correlationId":"44c29600","category":"general","currentCount":42,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 42 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.686Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 42","stack":"Error: History test 42\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.686Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 43 general errors in the last minute (threshold: 15)","correlationId":"85680314","category":"general","currentCount":43,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 43 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.686Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 43","stack":"Error: History test 43\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.687Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 44 general errors in the last minute (threshold: 15)","correlationId":"fc616d25","category":"general","currentCount":44,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 44 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.687Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 44","stack":"Error: History test 44\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.687Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 45 general errors in the last minute (threshold: 15)","correlationId":"2f5987a0","category":"general","currentCount":45,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 45 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.687Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 45","stack":"Error: History test 45\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.687Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 46 general errors in the last minute (threshold: 15)","correlationId":"bdc0ce11","category":"general","currentCount":46,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 46 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.688Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 46","stack":"Error: History test 46\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.688Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 47 general errors in the last minute (threshold: 15)","correlationId":"f7b9ca4c","category":"general","currentCount":47,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 47 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.688Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 47","stack":"Error: History test 47\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.688Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 48 general errors in the last minute (threshold: 15)","correlationId":"121d94e1","category":"general","currentCount":48,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 48 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.688Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 48","stack":"Error: History test 48\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.689Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 49 general errors in the last minute (threshold: 15)","correlationId":"5bb2463a","category":"general","currentCount":49,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 49 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.689Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"History test 49","stack":"Error: History test 49\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:286:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.689Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 50 general errors in the last minute (threshold: 15)","correlationId":"005a3c98","category":"general","currentCount":50,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 50 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.689Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Additional error 0","stack":"Error: Additional error 0\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:294:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.690Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 51 general errors in the last minute (threshold: 15)","correlationId":"dc488c5f","category":"general","currentCount":51,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 51 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.690Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Additional error 1","stack":"Error: Additional error 1\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:294:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.690Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 52 general errors in the last minute (threshold: 15)","correlationId":"0cd3354c","category":"general","currentCount":52,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 52 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.690Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Additional error 2","stack":"Error: Additional error 2\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:294:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.691Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 53 general errors in the last minute (threshold: 15)","correlationId":"b1013c07","category":"general","currentCount":53,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 53 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.691Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Additional error 3","stack":"Error: Additional error 3\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:294:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.691Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 54 general errors in the last minute (threshold: 15)","correlationId":"9342e972","category":"general","currentCount":54,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 54 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.691Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Additional error 4","stack":"Error: Additional error 4\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:294:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.691Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 55 general errors in the last minute (threshold: 15)","correlationId":"adecdd6d","category":"general","currentCount":55,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 55 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.692Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Additional error 5","stack":"Error: Additional error 5\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:294:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.692Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 56 general errors in the last minute (threshold: 15)","correlationId":"75f036fe","category":"general","currentCount":56,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 56 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.692Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Additional error 6","stack":"Error: Additional error 6\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:294:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.692Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 57 general errors in the last minute (threshold: 15)","correlationId":"87d9aa1d","category":"general","currentCount":57,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 57 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.692Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Additional error 7","stack":"Error: Additional error 7\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:294:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.699Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 58 general errors in the last minute (threshold: 15)","correlationId":"b217a4d2","category":"general","currentCount":58,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 58 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.700Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Additional error 8","stack":"Error: Additional error 8\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:294:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.700Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 59 general errors in the last minute (threshold: 15)","correlationId":"b78ba84b","category":"general","currentCount":59,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 59 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.700Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Additional error 9","stack":"Error: Additional error 9\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:294:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.701Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 60 general errors in the last minute (threshold: 15)","correlationId":"bd49aa0d","category":"general","currentCount":60,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 60 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.701Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Clear test 0","stack":"Error: Clear test 0\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:307:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.702Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Clear test 1","stack":"Error: Clear test 1\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:307:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.702Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Clear test 2","stack":"Error: Clear test 2\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:307:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.702Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Clear test 3","stack":"Error: Clear test 3\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:307:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.703Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Clear test 4","stack":"Error: Clear test 4\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:307:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.703Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 0","stack":"Error: Volume test 0\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.704Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 1","stack":"Error: Volume test 1\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.704Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 2","stack":"Error: Volume test 2\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.704Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 3","stack":"Error: Volume test 3\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.704Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 4","stack":"Error: Volume test 4\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.704Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 5","stack":"Error: Volume test 5\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.705Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 6","stack":"Error: Volume test 6\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.705Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 7","stack":"Error: Volume test 7\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.705Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 8","stack":"Error: Volume test 8\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.705Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 9","stack":"Error: Volume test 9\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.705Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 10","stack":"Error: Volume test 10\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.706Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 11","stack":"Error: Volume test 11\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.706Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 12","stack":"Error: Volume test 12\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.706Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 13","stack":"Error: Volume test 13\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.706Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 14","stack":"Error: Volume test 14\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.706Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 15 general errors in the last minute (threshold: 15)","correlationId":"fa6b9837","category":"general","currentCount":15,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 15 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.707Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 15","stack":"Error: Volume test 15\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.707Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 16 general errors in the last minute (threshold: 15)","correlationId":"fc62fc88","category":"general","currentCount":16,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 16 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.707Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 16","stack":"Error: Volume test 16\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.707Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 17 general errors in the last minute (threshold: 15)","correlationId":"cb3282c1","category":"general","currentCount":17,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 17 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.708Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 17","stack":"Error: Volume test 17\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.708Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 18 general errors in the last minute (threshold: 15)","correlationId":"3a3f3224","category":"general","currentCount":18,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 18 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.708Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 18","stack":"Error: Volume test 18\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.708Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 19 general errors in the last minute (threshold: 15)","correlationId":"922b24f3","category":"general","currentCount":19,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 19 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.709Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 19","stack":"Error: Volume test 19\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.709Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 20 general errors in the last minute (threshold: 15)","correlationId":"96af7cd9","category":"general","currentCount":20,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 20 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.709Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 20","stack":"Error: Volume test 20\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.709Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 21 general errors in the last minute (threshold: 15)","correlationId":"a4c59b72","category":"general","currentCount":21,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 21 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.709Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 21","stack":"Error: Volume test 21\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.710Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 22 general errors in the last minute (threshold: 15)","correlationId":"b0cc8b12","category":"general","currentCount":22,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 22 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.710Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 22","stack":"Error: Volume test 22\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.710Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 23 general errors in the last minute (threshold: 15)","correlationId":"0f6ceaac","category":"general","currentCount":23,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 23 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.711Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 23","stack":"Error: Volume test 23\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.715Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 24 general errors in the last minute (threshold: 15)","correlationId":"1aef3605","category":"general","currentCount":24,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 24 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.716Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 24","stack":"Error: Volume test 24\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.716Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 25 general errors in the last minute (threshold: 15)","correlationId":"d8dcbb86","category":"general","currentCount":25,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 25 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.716Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 25","stack":"Error: Volume test 25\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.716Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 26 general errors in the last minute (threshold: 15)","correlationId":"1173eb3e","category":"general","currentCount":26,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 26 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.717Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 26","stack":"Error: Volume test 26\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.717Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 27 general errors in the last minute (threshold: 15)","correlationId":"22bcc5f8","category":"general","currentCount":27,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 27 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.717Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 27","stack":"Error: Volume test 27\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.717Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 28 general errors in the last minute (threshold: 15)","correlationId":"c5902f30","category":"general","currentCount":28,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 28 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.718Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 28","stack":"Error: Volume test 28\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.718Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 29 general errors in the last minute (threshold: 15)","correlationId":"9bf703d5","category":"general","currentCount":29,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 29 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.718Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 29","stack":"Error: Volume test 29\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.718Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 30 general errors in the last minute (threshold: 15)","correlationId":"03238537","category":"general","currentCount":30,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 30 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.719Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 30","stack":"Error: Volume test 30\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.719Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 31 general errors in the last minute (threshold: 15)","correlationId":"594acba2","category":"general","currentCount":31,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 31 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.719Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 31","stack":"Error: Volume test 31\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.720Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 32 general errors in the last minute (threshold: 15)","correlationId":"de1c86cc","category":"general","currentCount":32,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 32 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.720Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 32","stack":"Error: Volume test 32\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.720Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 33 general errors in the last minute (threshold: 15)","correlationId":"1377aa7a","category":"general","currentCount":33,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 33 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.720Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 33","stack":"Error: Volume test 33\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.720Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 34 general errors in the last minute (threshold: 15)","correlationId":"bc26c8f6","category":"general","currentCount":34,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 34 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.721Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 34","stack":"Error: Volume test 34\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.721Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 35 general errors in the last minute (threshold: 15)","correlationId":"8159f92c","category":"general","currentCount":35,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 35 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.721Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 35","stack":"Error: Volume test 35\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.721Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 36 general errors in the last minute (threshold: 15)","correlationId":"b7f3d844","category":"general","currentCount":36,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 36 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.721Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 36","stack":"Error: Volume test 36\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.722Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 37 general errors in the last minute (threshold: 15)","correlationId":"a9aa5ce3","category":"general","currentCount":37,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 37 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.722Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 37","stack":"Error: Volume test 37\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.722Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 38 general errors in the last minute (threshold: 15)","correlationId":"9fff01ff","category":"general","currentCount":38,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 38 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.722Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 38","stack":"Error: Volume test 38\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.723Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 39 general errors in the last minute (threshold: 15)","correlationId":"f84825e3","category":"general","currentCount":39,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 39 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.723Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 39","stack":"Error: Volume test 39\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.723Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 40 general errors in the last minute (threshold: 15)","correlationId":"a8933510","category":"general","currentCount":40,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 40 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.723Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 40","stack":"Error: Volume test 40\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.723Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 41 general errors in the last minute (threshold: 15)","correlationId":"b4eb76f2","category":"general","currentCount":41,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 41 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.724Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 41","stack":"Error: Volume test 41\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.724Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 42 general errors in the last minute (threshold: 15)","correlationId":"441e2696","category":"general","currentCount":42,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 42 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.724Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 42","stack":"Error: Volume test 42\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.724Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 43 general errors in the last minute (threshold: 15)","correlationId":"6ece8df1","category":"general","currentCount":43,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 43 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.724Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 43","stack":"Error: Volume test 43\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.725Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 44 general errors in the last minute (threshold: 15)","correlationId":"73e8a8d8","category":"general","currentCount":44,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 44 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.729Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 44","stack":"Error: Volume test 44\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.729Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 45 general errors in the last minute (threshold: 15)","correlationId":"b8d368fa","category":"general","currentCount":45,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 45 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.730Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 45","stack":"Error: Volume test 45\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.730Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 46 general errors in the last minute (threshold: 15)","correlationId":"299198ff","category":"general","currentCount":46,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 46 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.730Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 46","stack":"Error: Volume test 46\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.730Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 47 general errors in the last minute (threshold: 15)","correlationId":"baa24faf","category":"general","currentCount":47,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 47 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.730Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 47","stack":"Error: Volume test 47\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.731Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 48 general errors in the last minute (threshold: 15)","correlationId":"d9f18211","category":"general","currentCount":48,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 48 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.731Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 48","stack":"Error: Volume test 48\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.731Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 49 general errors in the last minute (threshold: 15)","correlationId":"b35984bc","category":"general","currentCount":49,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 49 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.731Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 49","stack":"Error: Volume test 49\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.732Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 50 general errors in the last minute (threshold: 15)","correlationId":"27252e2a","category":"general","currentCount":50,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 50 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.732Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 50","stack":"Error: Volume test 50\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.732Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 51 general errors in the last minute (threshold: 15)","correlationId":"ac35dbff","category":"general","currentCount":51,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 51 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.732Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 51","stack":"Error: Volume test 51\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.732Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 52 general errors in the last minute (threshold: 15)","correlationId":"84186eb1","category":"general","currentCount":52,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 52 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.733Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 52","stack":"Error: Volume test 52\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.733Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 53 general errors in the last minute (threshold: 15)","correlationId":"3f88fd16","category":"general","currentCount":53,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 53 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.733Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 53","stack":"Error: Volume test 53\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.733Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 54 general errors in the last minute (threshold: 15)","correlationId":"60cf29e9","category":"general","currentCount":54,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 54 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.733Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 54","stack":"Error: Volume test 54\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.734Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 55 general errors in the last minute (threshold: 15)","correlationId":"912eb56e","category":"general","currentCount":55,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 55 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.734Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 55","stack":"Error: Volume test 55\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.734Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 56 general errors in the last minute (threshold: 15)","correlationId":"7cd556d0","category":"general","currentCount":56,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 56 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.734Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 56","stack":"Error: Volume test 56\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.734Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 57 general errors in the last minute (threshold: 15)","correlationId":"acbb4325","category":"general","currentCount":57,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 57 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.735Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 57","stack":"Error: Volume test 57\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.735Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 58 general errors in the last minute (threshold: 15)","correlationId":"008e2350","category":"general","currentCount":58,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 58 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.735Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 58","stack":"Error: Volume test 58\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.735Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 59 general errors in the last minute (threshold: 15)","correlationId":"e9ee1134","category":"general","currentCount":59,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 59 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.735Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 59","stack":"Error: Volume test 59\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.736Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 60 general errors in the last minute (threshold: 15)","correlationId":"5cdb4b57","category":"general","currentCount":60,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 60 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.736Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 60","stack":"Error: Volume test 60\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.736Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 61 general errors in the last minute (threshold: 15)","correlationId":"ace9fba1","category":"general","currentCount":61,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 61 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.736Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 61","stack":"Error: Volume test 61\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.736Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 62 general errors in the last minute (threshold: 15)","correlationId":"27de4e84","category":"general","currentCount":62,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 62 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.737Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 62","stack":"Error: Volume test 62\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.737Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 63 general errors in the last minute (threshold: 15)","correlationId":"5d0aa1a7","category":"general","currentCount":63,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 63 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.737Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 63","stack":"Error: Volume test 63\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.737Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 64 general errors in the last minute (threshold: 15)","correlationId":"8382fe5a","category":"general","currentCount":64,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 64 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.737Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 64","stack":"Error: Volume test 64\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.738Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 65 general errors in the last minute (threshold: 15)","correlationId":"87c95ac3","category":"general","currentCount":65,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 65 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.738Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 65","stack":"Error: Volume test 65\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.738Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 66 general errors in the last minute (threshold: 15)","correlationId":"640bff41","category":"general","currentCount":66,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 66 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.738Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 66","stack":"Error: Volume test 66\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.742Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 67 general errors in the last minute (threshold: 15)","correlationId":"41a6cbd6","category":"general","currentCount":67,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 67 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.743Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 67","stack":"Error: Volume test 67\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.743Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 68 general errors in the last minute (threshold: 15)","correlationId":"8c807ac7","category":"general","currentCount":68,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 68 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.743Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 68","stack":"Error: Volume test 68\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.743Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 69 general errors in the last minute (threshold: 15)","correlationId":"0fcfddc4","category":"general","currentCount":69,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 69 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.744Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 69","stack":"Error: Volume test 69\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.744Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 70 general errors in the last minute (threshold: 15)","correlationId":"8b0ca869","category":"general","currentCount":70,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 70 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.744Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 70","stack":"Error: Volume test 70\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.744Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 71 general errors in the last minute (threshold: 15)","correlationId":"3a3ecf9a","category":"general","currentCount":71,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 71 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.745Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 71","stack":"Error: Volume test 71\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.745Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 72 general errors in the last minute (threshold: 15)","correlationId":"2eb5f62e","category":"general","currentCount":72,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 72 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.745Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 72","stack":"Error: Volume test 72\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.745Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 73 general errors in the last minute (threshold: 15)","correlationId":"70046b00","category":"general","currentCount":73,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 73 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.745Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 73","stack":"Error: Volume test 73\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.745Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 74 general errors in the last minute (threshold: 15)","correlationId":"0162e864","category":"general","currentCount":74,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 74 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.746Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 74","stack":"Error: Volume test 74\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.746Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 75 general errors in the last minute (threshold: 15)","correlationId":"42639ece","category":"general","currentCount":75,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 75 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.746Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 75","stack":"Error: Volume test 75\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.746Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 76 general errors in the last minute (threshold: 15)","correlationId":"7f36b72a","category":"general","currentCount":76,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 76 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.747Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 76","stack":"Error: Volume test 76\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.747Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 77 general errors in the last minute (threshold: 15)","correlationId":"d757dae0","category":"general","currentCount":77,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 77 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.747Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 77","stack":"Error: Volume test 77\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.747Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 78 general errors in the last minute (threshold: 15)","correlationId":"b5e1ff06","category":"general","currentCount":78,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 78 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.747Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 78","stack":"Error: Volume test 78\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.748Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 79 general errors in the last minute (threshold: 15)","correlationId":"076c16bc","category":"general","currentCount":79,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 79 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.748Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 79","stack":"Error: Volume test 79\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.748Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 80 general errors in the last minute (threshold: 15)","correlationId":"89ddd7de","category":"general","currentCount":80,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 80 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.749Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 80","stack":"Error: Volume test 80\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.749Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 81 general errors in the last minute (threshold: 15)","correlationId":"7f17afdc","category":"general","currentCount":81,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 81 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.749Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 81","stack":"Error: Volume test 81\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.749Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 82 general errors in the last minute (threshold: 15)","correlationId":"5ba585d3","category":"general","currentCount":82,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 82 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.750Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 82","stack":"Error: Volume test 82\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.750Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 83 general errors in the last minute (threshold: 15)","correlationId":"20b0fa58","category":"general","currentCount":83,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 83 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.750Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 83","stack":"Error: Volume test 83\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.750Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 84 general errors in the last minute (threshold: 15)","correlationId":"c1f41289","category":"general","currentCount":84,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 84 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.750Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 84","stack":"Error: Volume test 84\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.750Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 85 general errors in the last minute (threshold: 15)","correlationId":"637df5a2","category":"general","currentCount":85,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 85 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.751Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 85","stack":"Error: Volume test 85\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.751Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 86 general errors in the last minute (threshold: 15)","correlationId":"c9b734d8","category":"general","currentCount":86,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 86 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.751Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 86","stack":"Error: Volume test 86\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.751Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 87 general errors in the last minute (threshold: 15)","correlationId":"bbab889e","category":"general","currentCount":87,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 87 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.751Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 87","stack":"Error: Volume test 87\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.752Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 88 general errors in the last minute (threshold: 15)","correlationId":"e0ce0628","category":"general","currentCount":88,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 88 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.752Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 88","stack":"Error: Volume test 88\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.752Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 89 general errors in the last minute (threshold: 15)","correlationId":"87f105ff","category":"general","currentCount":89,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 89 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.755Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 89","stack":"Error: Volume test 89\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.756Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 90 general errors in the last minute (threshold: 15)","correlationId":"6d13d827","category":"general","currentCount":90,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 90 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.756Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 90","stack":"Error: Volume test 90\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.756Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 91 general errors in the last minute (threshold: 15)","correlationId":"64de42a7","category":"general","currentCount":91,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 91 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.756Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 91","stack":"Error: Volume test 91\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.757Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 92 general errors in the last minute (threshold: 15)","correlationId":"5fa62ebd","category":"general","currentCount":92,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 92 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.757Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 92","stack":"Error: Volume test 92\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.757Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 93 general errors in the last minute (threshold: 15)","correlationId":"0ffde9ab","category":"general","currentCount":93,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 93 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.757Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 93","stack":"Error: Volume test 93\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.757Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 94 general errors in the last minute (threshold: 15)","correlationId":"6f043009","category":"general","currentCount":94,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 94 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.758Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 94","stack":"Error: Volume test 94\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.758Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 95 general errors in the last minute (threshold: 15)","correlationId":"56f6ba1f","category":"general","currentCount":95,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 95 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.758Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 95","stack":"Error: Volume test 95\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.758Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 96 general errors in the last minute (threshold: 15)","correlationId":"0ccd29aa","category":"general","currentCount":96,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 96 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.758Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 96","stack":"Error: Volume test 96\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.759Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 97 general errors in the last minute (threshold: 15)","correlationId":"7d7e6450","category":"general","currentCount":97,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 97 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.759Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 97","stack":"Error: Volume test 97\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.759Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 98 general errors in the last minute (threshold: 15)","correlationId":"48246c64","category":"general","currentCount":98,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 98 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.759Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 98","stack":"Error: Volume test 98\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.759Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 99 general errors in the last minute (threshold: 15)","correlationId":"70aeb379","category":"general","currentCount":99,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 99 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.760Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Volume test 99","stack":"Error: Volume test 99\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:331:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.760Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 100 general errors in the last minute (threshold: 15)","correlationId":"d6b6cc92","category":"general","currentCount":100,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 100 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.761Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 0","stack":"Error: Perf test 0\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.761Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 1","stack":"Error: Perf test 1\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.761Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 2","stack":"Error: Perf test 2\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.761Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 3","stack":"Error: Perf test 3\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.762Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 4","stack":"Error: Perf test 4\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.762Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 5","stack":"Error: Perf test 5\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.762Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 6","stack":"Error: Perf test 6\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.762Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 7","stack":"Error: Perf test 7\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.762Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 8","stack":"Error: Perf test 8\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.762Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 9","stack":"Error: Perf test 9\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.763Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 10","stack":"Error: Perf test 10\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.763Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 11","stack":"Error: Perf test 11\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.763Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 12","stack":"Error: Perf test 12\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.763Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 13","stack":"Error: Perf test 13\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.763Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 14","stack":"Error: Perf test 14\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.764Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 15 general errors in the last minute (threshold: 15)","correlationId":"90a7f39f","category":"general","currentCount":15,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 15 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.764Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 15","stack":"Error: Perf test 15\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.764Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 16 general errors in the last minute (threshold: 15)","correlationId":"2dffe7de","category":"general","currentCount":16,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 16 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.764Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 16","stack":"Error: Perf test 16\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.764Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 17 general errors in the last minute (threshold: 15)","correlationId":"9ad8f355","category":"general","currentCount":17,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 17 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.765Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 17","stack":"Error: Perf test 17\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.765Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 18 general errors in the last minute (threshold: 15)","correlationId":"dbbd47e0","category":"general","currentCount":18,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 18 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.765Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 18","stack":"Error: Perf test 18\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.765Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 19 general errors in the last minute (threshold: 15)","correlationId":"bddc48af","category":"general","currentCount":19,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 19 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.768Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 19","stack":"Error: Perf test 19\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.768Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 20 general errors in the last minute (threshold: 15)","correlationId":"434cc7e2","category":"general","currentCount":20,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 20 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.769Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 20","stack":"Error: Perf test 20\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.769Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 21 general errors in the last minute (threshold: 15)","correlationId":"bf641fb4","category":"general","currentCount":21,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 21 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.769Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 21","stack":"Error: Perf test 21\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.769Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 22 general errors in the last minute (threshold: 15)","correlationId":"52efe5ca","category":"general","currentCount":22,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 22 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.769Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 22","stack":"Error: Perf test 22\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.770Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 23 general errors in the last minute (threshold: 15)","correlationId":"eaafd1b0","category":"general","currentCount":23,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 23 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.770Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 23","stack":"Error: Perf test 23\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.770Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 24 general errors in the last minute (threshold: 15)","correlationId":"71f47b7b","category":"general","currentCount":24,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 24 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.770Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 24","stack":"Error: Perf test 24\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.771Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 25 general errors in the last minute (threshold: 15)","correlationId":"6958dd2d","category":"general","currentCount":25,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 25 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.771Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 25","stack":"Error: Perf test 25\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.771Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 26 general errors in the last minute (threshold: 15)","correlationId":"4219e3d7","category":"general","currentCount":26,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 26 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.772Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 26","stack":"Error: Perf test 26\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.772Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 27 general errors in the last minute (threshold: 15)","correlationId":"e9a9a046","category":"general","currentCount":27,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 27 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.772Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 27","stack":"Error: Perf test 27\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.773Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 28 general errors in the last minute (threshold: 15)","correlationId":"b27b3946","category":"general","currentCount":28,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 28 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.773Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 28","stack":"Error: Perf test 28\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.773Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 29 general errors in the last minute (threshold: 15)","correlationId":"914e6b17","category":"general","currentCount":29,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 29 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.773Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 29","stack":"Error: Perf test 29\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.774Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 30 general errors in the last minute (threshold: 15)","correlationId":"4a8ffa0f","category":"general","currentCount":30,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 30 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.774Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 30","stack":"Error: Perf test 30\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.774Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 31 general errors in the last minute (threshold: 15)","correlationId":"e8b5a234","category":"general","currentCount":31,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 31 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.774Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 31","stack":"Error: Perf test 31\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.774Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 32 general errors in the last minute (threshold: 15)","correlationId":"e375658d","category":"general","currentCount":32,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 32 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.775Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 32","stack":"Error: Perf test 32\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.775Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 33 general errors in the last minute (threshold: 15)","correlationId":"d061fb03","category":"general","currentCount":33,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 33 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.775Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 33","stack":"Error: Perf test 33\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.775Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 34 general errors in the last minute (threshold: 15)","correlationId":"d7056d9f","category":"general","currentCount":34,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 34 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.775Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 34","stack":"Error: Perf test 34\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.776Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 35 general errors in the last minute (threshold: 15)","correlationId":"f36fe6fb","category":"general","currentCount":35,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 35 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.776Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 35","stack":"Error: Perf test 35\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.776Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 36 general errors in the last minute (threshold: 15)","correlationId":"dd2b35c1","category":"general","currentCount":36,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 36 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.776Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 36","stack":"Error: Perf test 36\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.776Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 37 general errors in the last minute (threshold: 15)","correlationId":"43b3cdd6","category":"general","currentCount":37,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 37 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.777Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 37","stack":"Error: Perf test 37\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.777Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 38 general errors in the last minute (threshold: 15)","correlationId":"80d79960","category":"general","currentCount":38,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 38 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.777Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 38","stack":"Error: Perf test 38\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.777Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 39 general errors in the last minute (threshold: 15)","correlationId":"03c8eebc","category":"general","currentCount":39,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 39 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.778Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 39","stack":"Error: Perf test 39\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.778Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 40 general errors in the last minute (threshold: 15)","correlationId":"3093d565","category":"general","currentCount":40,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 40 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.778Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 40","stack":"Error: Perf test 40\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.778Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 41 general errors in the last minute (threshold: 15)","correlationId":"01e463e3","category":"general","currentCount":41,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 41 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.778Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 41","stack":"Error: Perf test 41\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.779Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 42 general errors in the last minute (threshold: 15)","correlationId":"e7372e50","category":"general","currentCount":42,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 42 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.783Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 42","stack":"Error: Perf test 42\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.783Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 43 general errors in the last minute (threshold: 15)","correlationId":"4dc9714b","category":"general","currentCount":43,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 43 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.783Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 43","stack":"Error: Perf test 43\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.784Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 44 general errors in the last minute (threshold: 15)","correlationId":"6308fd97","category":"general","currentCount":44,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 44 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.784Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 44","stack":"Error: Perf test 44\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.784Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 45 general errors in the last minute (threshold: 15)","correlationId":"051fb275","category":"general","currentCount":45,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 45 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.784Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 45","stack":"Error: Perf test 45\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.785Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 46 general errors in the last minute (threshold: 15)","correlationId":"7f3d86e5","category":"general","currentCount":46,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 46 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.785Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 46","stack":"Error: Perf test 46\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.785Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 47 general errors in the last minute (threshold: 15)","correlationId":"efb7115c","category":"general","currentCount":47,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 47 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.785Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 47","stack":"Error: Perf test 47\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.786Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 48 general errors in the last minute (threshold: 15)","correlationId":"4395efaf","category":"general","currentCount":48,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 48 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.786Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 48","stack":"Error: Perf test 48\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.786Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 49 general errors in the last minute (threshold: 15)","correlationId":"b882e056","category":"general","currentCount":49,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 49 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.786Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Perf test 49","stack":"Error: Perf test 49\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:349:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","category":"general","severity":"ERROR","context":{}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:22.787Z","level":"WARN","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"High error rate detected: 50 general errors in the last minute (threshold: 15)","correlationId":"ff761567","category":"general","currentCount":50,"threshold":15,"severity":"WARN"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      üö® ALERT: High error rate detected: 50 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

    console.log
      {"timestamp":"2025-09-23T16:33:22.788Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Middleware test error","correlationId":"test-123","stack":"Error: Middleware test error\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:391:25)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)","name":"Error","route":"/test","method":"GET","userAgent":"test-user-agent","ip":"127.0.0.1","category":"general","severity":"ERROR","context":{"correlationId":"test-123","route":"/test","method":"GET","userAgent":"test-user-agent","ip":"127.0.0.1","body":{},"query":{},"params":{}}}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

PASS tests/unit/routes/scoring.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.error
      Scoring calculation error: Error: Database connection failed
          at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/scoring.test.js:116:31)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      474 |     res.json({ scores: scores, cached: false });
      475 |   } catch (error) {
    > 476 |     console.error("Scoring calculation error:", error);
          |             ^
      477 |     res.status(500).json({
      478 |       success: false,
      479 |       error: "Failed to calculate comprehensive scores",

      at error (routes/scoring.js:476:13)

    console.error
      Scoring stats error: Error: Database connection failed
          at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/scoring.test.js:394:31)
          at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
          at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
          at processTicksAndRejections (node:internal/process/task_queues:95:5)
          at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
          at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
          at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
          at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
          at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
          at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      677 |     });
      678 |   } catch (error) {
    > 679 |     console.error("Scoring stats error:", error);
          |             ^
      680 |     res.status(500).json({
      681 |       success: false,
      682 |       error: "Failed to get scoring statistics",

      at error (routes/scoring.js:679:13)

    console.error
      Scoring calculation error: Error: Database error
          at /home/stocks/algo/webapp/lambda/tests/unit/routes/scoring.test.js:408:15
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
          at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13
          at mockConstructor (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
          at query (/home/stocks/algo/webapp/lambda/routes/scoring.js:445:35)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
          at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
          at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:365:14)
          at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:376:14)
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:421:3)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
          at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
          at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
          at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
          at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
          at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
          at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
          at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
          at Server.emit (node:events:524:28)
          at parserOnIncoming (node:_http_server:1141:12)
          at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      474 |     res.json({ scores: scores, cached: false });
      475 |   } catch (error) {
    > 476 |     console.error("Scoring calculation error:", error);
          |             ^
      477 |     res.status(500).json({
      478 |       success: false,
      479 |       error: "Failed to calculate comprehensive scores",

      at error (routes/scoring.js:476:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

PASS tests/unit/routes/positioning.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

PASS tests/integration/database/rollback-scenarios.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

PASS tests/unit/utils/performanceMonitor.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

PASS tests/unit/utils/newsAnalyzer.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

PASS tests/unit/routes/auth.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      üîß DEV: Using development auth for login

      at log (routes/auth.js:39:15)

    console.log
      üîß DEV: Using development auth for login

      at log (routes/auth.js:39:15)

    console.log
      üîß DEV: Using development auth for login

      at log (routes/auth.js:39:15)

    console.log
      üîß DEV: Using development auth for login

      at log (routes/auth.js:39:15)

    console.log
      üîß DEV: Using development auth for registration

      at log (routes/auth.js:258:15)

    console.log
      üîß DEV: Using development auth for registration

      at log (routes/auth.js:258:15)

    console.log
      üîß DEV: Using development auth for confirmation

      at log (routes/auth.js:360:15)

    console.log
      üîß DEV: Using development auth for confirmation

      at log (routes/auth.js:360:15)

    console.log
      üîß DEV: Using development auth for forgot password

      at log (routes/auth.js:410:15)

    console.log
      üîß DEV: Using development auth for login

      at log (routes/auth.js:39:15)

    console.log
      üîß DEV: Using development auth for challenge

      at log (routes/auth.js:161:15)

    console.log
      üîß DEV: Using development auth for respond to challenge

      at log (routes/auth.js:555:13)

    console.log
      üîß DEV: Using development auth for login

      at log (routes/auth.js:39:15)

    console.log
      üîß DEV: Using development auth for login

      at log (routes/auth.js:39:15)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

PASS tests/unit/utils/backtestStore.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

PASS tests/unit/utils/alertSystem.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      üö® Alert created: [HIGH] Test Alert

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

    console.log
      üö® Alert created: [CRITICAL] Critical System Alert

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

    console.log
      üö® Alert created: [MEDIUM] Test Alert

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

    console.log
      ‚úÖ Alert resolved: Test Alert

      at AlertSystem.log [as resolveAlert] (utils/alertSystem.js:424:13)

    console.log
      ‚öôÔ∏è Alert configuration updated

      at AlertSystem.log [as updateConfig] (utils/alertSystem.js:897:13)

    console.log
      üö® Alert created: [CRITICAL] Test 1

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

    console.log
      üö® Alert created: [WARNING] Test 2

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

    console.log
      üö® Alert created: [LOW] Test

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

    console.log
      ‚úÖ Alert resolved: Test

      at AlertSystem.log [as resolveAlert] (utils/alertSystem.js:424:13)

    console.log
      üõë Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

    console.log
      üö® Alert created: [WARNING] High Latency Warning

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

    console.log
      üö® Alert created: [WARNING] Title

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

    console.log
      üö® Alert created: [CRITICAL] Provider Disconnected

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

    console.log
      üö® Alert created: [CRITICAL] High Error Rate Critical

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

    console.log
      üö® Alert created: [CRITICAL] Daily Cost Critical

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

    console.log
      üö® Alert created: [CRITICAL] Connection Limit Near Max

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

    console.log
      üö® Alert created: [WARNING] Connection Usage High

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

    console.log
      üö® Alert created: [CRITICAL] Cost Budget Near Max

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

    console.log
      üö® Alert created: [WARNING] Cost Usage High

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

    console.log
      üö® Alert created: [CRITICAL] High Latency Critical

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

    console.log
      üö® Alert created: [CRITICAL] High Error Rate Critical

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

    console.log
      üö® Alert created: [CRITICAL] Provider Disconnected

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

    console.log
      üö® Alert created: [CRITICAL] High Latency Critical

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

    console.log
      üö® Alert created: [WARNING] Daily Cost Warning

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

    console.log
      üö® Alert created: [CRITICAL] Connection Limit Critical

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

    console.log
      üö® Alert created: [CRITICAL] Daily Cost Critical

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

    console.log
      üö® Alert created: [CRITICAL] Connection Limit Critical

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

    console.log
      ‚úÖ Alert resolved: Daily Cost Critical

      at AlertSystem.log [as resolveAlert] (utils/alertSystem.js:424:13)

    console.log
      ‚úÖ Alert resolved: Connection Limit Critical

      at AlertSystem.log [as resolveAlert] (utils/alertSystem.js:424:13)

    console.log
      üö® Alert created: [WARNING] Cooldown Test Alert

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

    console.log
      üö® Alert created: [WARNING] Test Alert 1

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

    console.log
      üö® Alert created: [CRITICAL] Test Alert 2

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

    console.log
      ‚úÖ Alert resolved: Test Alert 1

      at AlertSystem.log [as resolveAlert] (utils/alertSystem.js:424:13)

    console.log
      üö® Alert created: [CRITICAL] Critical Test

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

    console.log
      üö® Alert created: [WARNING] Warning Test

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

    console.log
      üö® Alert created: [INFO] Info Test

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

    console.log
      üö® Alert created: [INFO] Cleanup Test

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

    console.log
      ‚úÖ Alert resolved: Cleanup Test

      at AlertSystem.log [as resolveAlert] (utils/alertSystem.js:424:13)

    console.log
      üö® Alert created: [WARNING] High Latency Warning

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

    console.log
      üö® Alert created: [WARNING] High Error Rate Warning

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

    console.log
      üö® Alert created: [WARNING] Connection Limit Warning

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

PASS tests/integration/database/cross-service-transaction.integration.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

PASS tests/integration/utils/factorScoring.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      {"timestamp":"2025-09-23T16:33:23.953Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Starting universe scoring","correlationId":"1e89d059","stockCount":4,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:23.963Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Universe scoring completed","correlationId":"7e983261","scoredStocks":4,"topScore":0.54,"averageScore":0.4525,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:23.966Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Starting universe scoring","correlationId":"8d12a030","stockCount":4,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:23.968Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Universe scoring completed","correlationId":"e3eaaa63","scoredStocks":4,"topScore":0.57,"averageScore":0.48,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:23.971Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Starting universe scoring","correlationId":"bb2dcbe8","stockCount":4,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:23.972Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Universe scoring completed","correlationId":"6b2f0119","scoredStocks":4,"topScore":0.57,"averageScore":0.48,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:23.973Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Starting universe scoring","correlationId":"1892d350","stockCount":4,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:23.973Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Universe scoring completed","correlationId":"8574559d","scoredStocks":4,"topScore":0.57,"averageScore":0.48,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:23.984Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Starting universe scoring","correlationId":"7769d377","stockCount":4,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:23.985Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Universe scoring completed","correlationId":"f6e7d76a","scoredStocks":4,"topScore":0.57,"averageScore":0.48,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:23.986Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Starting universe scoring","correlationId":"14529034","stockCount":100,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:23.998Z","level":"INFO","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Universe scoring completed","correlationId":"f09f8492","scoredStocks":100,"topScore":0.72,"averageScore":0.516,"severity":"INFO"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      {"timestamp":"2025-09-23T16:33:24.000Z","level":"ERROR","service":"financial-platform-api","environment":"test","version":"1.0.0","message":"Composite score calculation error","correlationId":"a5d9a09d","error":{"name":"TypeError","message":"Cannot read properties of null (reading 'pe_ratio')","stack":"TypeError: Cannot read properties of null (reading 'pe_ratio')\n    at FactorScoringEngine.calculateCategoryScore (/home/stocks/algo/webapp/lambda/utils/factorScoring.js:148:33)\n    at FactorScoringEngine.calculateCategoryScore [as calculateCompositeScore] (/home/stocks/algo/webapp/lambda/utils/factorScoring.js:108:36)\n    at Object.calculateCompositeScore (/home/stocks/algo/webapp/lambda/utils/factorScoring.js:775:25)\n    at calculateCompositeScore (/home/stocks/algo/webapp/lambda/tests/integration/utils/factorScoring.test.js:498:34)\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/expect/build/toThrowMatchers.js:74:11)\n    at Object.throwingMatcher [as toThrow] (/home/stocks/algo/webapp/lambda/node_modules/expect/build/index.js:320:21)\n    at Object.toThrow (/home/stocks/algo/webapp/lambda/tests/integration/utils/factorScoring.test.js:498:69)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)"},"symbol":"unknown","severity":"ERROR"}

      at Logger.log [as output] (utils/logger.js:91:15)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

PASS tests/integration/utils/backtestStore.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

PASS tests/unit/middleware/responseFormatter.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

PASS tests/unit/routes/calendar.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      üìÖ Earnings calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:80:13)

    console.log
      üí∞ Dividends calendar requested - symbol: all, days_ahead: 30

      at log (routes/calendar.js:870:13)

    console.log
      üìä Economic calendar requested - country: US, importance: all

      at log (routes/calendar.js:1150:13)

    console.log
      üìä Economic calendar requested - country: EU, importance: high

      at log (routes/calendar.js:1150:13)

    console.log
      üìä Economic calendar requested - country: US, importance: all

      at log (routes/calendar.js:1150:13)

    console.log
      üìä Economic calendar requested - country: US, importance: all

      at log (routes/calendar.js:1150:13)

    console.log
      üìä Economic calendar requested - country: US, importance: high

      at log (routes/calendar.js:1150:13)

    console.log
      üìä Economic calendar requested - country: US, importance: all

      at log (routes/calendar.js:1150:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

PASS tests/unit/utils/factorScoring.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

PASS tests/unit/middleware/auth.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      GET /test - User: anonymous - IP: 127.0.0.1

      at log (middleware/auth.js:469:11)

    console.log
      GET /test - 200 - 2ms

      at Object.log (middleware/auth.js:477:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

PASS tests/unit/routes/orders.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      JWT verifier initialized successfully (test mode)

      at ApiKeyService.log [as initializeJwtVerifier] (utils/apiKeyService.js:100:17)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìã Orders endpoint called for user: dev-user-bypass

      at log (routes/orders.js:71:11)

    console.log
      Executing orders query with timeout protection

      at log (routes/orders.js:144:15)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      üìù New order submission for user: dev-user-bypass, symbol: AAPL, side: buy

      at log (routes/orders.js:399:11)

    console.log
      üîß Test mode: Using dev-bypass-token for authentication

      at log (middleware/auth.js:44:15)

    console.log
      Order details request for user: dev-user-bypass, order: test-order-123

      at log (routes/orders.js:1964:11)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

PASS tests/unit/utils/alpacaService.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

PASS tests/unit/routes/health.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Database not initialized, initializing now...

      at log (routes/health.js:41:15)

    console.error
      Failed to initialize database: Database connection failed

      43 |         await initializeDatabase();
      44 |       } catch (dbInitError) {
    > 45 |         console.error("Failed to initialize database:", dbInitError.message);
         |                 ^
      46 |         // In test mode, return 200 with error details for graceful handling
      47 |         const statusCode = process.env.NODE_ENV === "test" ? 200 : 503;
      48 |         return res.status(statusCode).json({

      at error (routes/health.js:45:17)

    console.log
      Starting health check with database...

      at log (routes/health.js:36:13)

    console.log
      Database not initialized, initializing now...

      at log (routes/health.js:41:15)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

PASS tests/unit/utils/errorTracker.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

PASS tests/unit/utils/sentimentEngine.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

PASS tests/integration/utils/responseFormatter.test.js
  ‚óè Console

    console.log
      üîß Test setup - Environment variables: {
        NODE_ENV: 'test',
        DB_HOST: 'localhost',
        DB_USER: 'postgres',
        DB_NAME: 'stocks',
        DB_PORT: '5432'
      }

      at Object.log (tests/setup.js:21:9)

    console.log
      ‚úÖ Using real database for testing with seeded data

      at Object.log (tests/setup.js:56:11)

    console.log
      üîÑ Initializing test database connection...

      at Object.log (tests/setup.js:60:13)

    console.log
      Using database config from environment variables

      at log (utils/database.js:177:15)

    console.log
      Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:215:15)

    console.log
      ‚úÖ Database connection pool initialized successfully

      at log (utils/database.js:266:15)

    console.log
      ‚úÖ Real PostgreSQL test database connected

      at Object.log (tests/setup.js:95:13)

    console.log
      ‚úÖ Test database connection closed

      at Object.log (tests/setup.js:115:13)

Failed to collect coverage from /home/stocks/algo/webapp/lambda/routes/performance_broken.js
ERROR: /home/stocks/algo/webapp/lambda/routes/performance_broken.js: Unexpected token (1771:0)

  1769 |
  1770 | module.exports = router;
> 1771 |
       | ^
STACK: SyntaxError: /home/stocks/algo/webapp/lambda/routes/performance_broken.js: Unexpected token (1771:0)

  1769 |
  1770 | module.exports = router;
> 1771 |
       | ^
    at constructor (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parse-error.ts:95:45)
    at Parser.toParseError [as raise] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/tokenizer/index.ts:1503:19)
    at Parser.raise [as unexpected] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/tokenizer/index.ts:1543:16)
    at Parser.unexpected [as parseExprAtom] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:1350:16)
    at Parser.parseExprAtom [as parseExprSubscripts] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:734:23)
    at Parser.parseExprSubscripts [as parseUpdate] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:713:21)
    at Parser.parseUpdate [as parseMaybeUnary] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:675:23)
    at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:409:14)
    at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:421:23)
    at Parser.parseExprOps [as parseMaybeConditional] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:376:23)
    at Parser.parseMaybeConditional [as parseMaybeAssign] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:301:21)
    at Parser.parseMaybeAssign [as parseExpressionBase] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:226:23)
    at parseExpressionBase (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:217:39)
    at Parser.callback [as allowInAnd] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:3187:16)
    at Parser.allowInAnd [as parseExpression] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:217:17)
    at Parser.parseExpression [as parseStatementContent] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/statement.ts:683:23)
    at Parser.parseStatementContent [as parseStatementLike] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/statement.ts:477:17)
    at Parser.parseStatementLike [as parseStatementListItem] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/statement.ts:426:17)
    at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/statement.ts:1439:16)
    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/statement.ts:1412:10)
    at Parser.parseBlockBody [as parseBlock] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/statement.ts:1380:10)
    at Parser.parseBlock [as parseFunctionBody] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:2616:24)
    at Parser.parseFunctionBody [as parseArrowExpression] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:2553:10)
    at Parser.parseArrowExpression [as parseAsyncArrowFromCallExpression] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:1059:10)
    at Parser.parseAsyncArrowFromCallExpression [as parseCoverCallAndAsyncArrowHead] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:934:27)
    at Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:796:19)
    at Parser.parseSubscript [as parseSubscripts] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:755:19)
    at Parser.parseSubscripts [as parseExprSubscripts] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:740:17)
    at Parser.parseExprSubscripts [as parseUpdate] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:713:21)
    at Parser.parseUpdate [as parseMaybeUnary] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:675:23)
    at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:409:14)
    at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:421:23)
    at Parser.parseExprOps [as parseMaybeConditional] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:376:23)
    at Parser.parseMaybeConditional [as parseMaybeAssign] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:301:21)
    at parseMaybeAssign (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:257:12)
    at Parser.callback [as allowInAnd] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:3192:12)
    at Parser.allowInAnd [as parseMaybeAssignAllowIn] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:256:17)
    at Parser.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:3306:17)
    at Parser.parseMaybeAssignAllowInOrVoidPattern [as parseExprListItem] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:2788:18)
    at Parser.parseExprListItem [as parseCallExpressionArguments] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:1034:14)
    at Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:914:29)
    at Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:796:19)
    at Parser.parseSubscript [as parseSubscripts] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:755:19)
    at Parser.parseSubscripts [as parseExprSubscripts] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:740:17)
    at Parser.parseExprSubscripts [as parseUpdate] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:713:21)
    at Parser.parseUpdate [as parseMaybeUnary] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:675:23)
    at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:409:14)
    at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:421:23)
    at Parser.parseExprOps [as parseMaybeConditional] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:376:23)
    at Parser.parseMaybeConditional [as parseMaybeAssign] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:301:21)
    at Parser.parseMaybeAssign [as parseExpressionBase] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:226:23)
    at parseExpressionBase (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:217:39)
    at Parser.callback [as allowInAnd] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:3187:16)
    at Parser.allowInAnd [as parseExpression] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:217:17)
    at Parser.parseExpression [as parseStatementContent] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/statement.ts:683:23)
    at Parser.parseStatementContent [as parseStatementLike] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/statement.ts:477:17)
    at Parser.parseStatementLike [as parseStatementListItem] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/statement.ts:426:17)
    at Parser.parseStatementListItem [as parseBlockOrModuleBlockBody] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/statement.ts:1439:16)
    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/statement.ts:1412:10)
    at Parser.parseBlockBody [as parseBlock] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/statement.ts:1380:10)
    at Parser.parseBlock [as parseFunctionBody] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:2616:24)
    at Parser.parseFunctionBody [as parseArrowExpression] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:2553:10)
    at Parser.parseArrowExpression [as parseAsyncArrowFromCallExpression] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:1059:10)
    at Parser.parseAsyncArrowFromCallExpression [as parseCoverCallAndAsyncArrowHead] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:934:27)
    at Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:796:19)
    at Parser.parseSubscript [as parseSubscripts] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:755:19)
    at Parser.parseSubscripts [as parseExprSubscripts] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:740:17)
    at Parser.parseExprSubscripts [as parseUpdate] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:713:21)
    at Parser.parseUpdate [as parseMaybeUnary] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:675:23)
    at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:409:14)
    at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:421:23)
    at Parser.parseExprOps [as parseMaybeConditional] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:376:23)
    at Parser.parseMaybeConditional [as parseMaybeAssign] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:301:21)
    at parseMaybeAssign (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:257:12)
    at Parser.callback [as allowInAnd] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:3192:12)
    at Parser.allowInAnd [as parseMaybeAssignAllowIn] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:256:17)
    at Parser.parseMaybeAssignAllowIn [as parseMaybeAssignAllowInOrVoidPattern] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:3306:17)
    at Parser.parseMaybeAssignAllowInOrVoidPattern [as parseExprListItem] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:2788:18)
    at Parser.parseExprListItem [as parseCallExpressionArguments] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:1034:14)
    at Parser.parseCallExpressionArguments [as parseCoverCallAndAsyncArrowHead] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:914:29)
    at Parser.parseCoverCallAndAsyncArrowHead [as parseSubscript] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:796:19)
    at Parser.parseSubscript [as parseSubscripts] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:755:19)
    at Parser.parseSubscripts [as parseExprSubscripts] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:740:17)
    at Parser.parseExprSubscripts [as parseUpdate] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:713:21)
    at Parser.parseUpdate [as parseMaybeUnary] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:675:23)
    at Parser.parseMaybeUnary [as parseMaybeUnaryOrPrivate] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:409:14)
    at Parser.parseMaybeUnaryOrPrivate [as parseExprOps] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:421:23)
    at Parser.parseExprOps [as parseMaybeConditional] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:376:23)
    at Parser.parseMaybeConditional [as parseMaybeAssign] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:301:21)
    at Parser.parseMaybeAssign [as parseExpressionBase] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:226:23)
    at parseExpressionBase (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:217:39)
    at Parser.callback [as allowInAnd] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:3187:16)
    at Parser.allowInAnd [as parseExpression] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/expression.ts:217:17)
    at Parser.parseExpression [as parseStatementContent] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/statement.ts:683:23)
    at Parser.parseStatementContent [as parseStatementLike] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/statement.ts:477:17)
    at Parser.parseStatementLike [as parseModuleItem] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/statement.ts:414:17)
    at Parser.parseModuleItem [as parseBlockOrModuleBlockBody] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/statement.ts:1438:16)
    at Parser.parseBlockOrModuleBlockBody [as parseBlockBody] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/statement.ts:1412:10)
    at Parser.parseBlockBody [as parseProgram] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/statement.ts:229:10)
    at Parser.parseProgram [as parseTopLevel] (/home/stocks/algo/webapp/lambda/node_modules/@babel/parser/src/parser/statement.ts:203:25)
----------------------------------|---------|----------|---------|---------|
File                              | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s
----------------------------------|---------|----------|---------|---------|
All files                         |   46.65 |    37.01 |   47.43 |   47.29 |
 middleware                       |   69.03 |    60.18 |   88.46 |    68.7 |
  auth.js                         |   79.33 |    69.09 |   92.85 |   79.05 |
  errorHandler.js                 |   58.66 |       80 |     100 |    58.1 | 30-33,35-38,40-43,45-48,50-53,55-58,60-63,120,126,132                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
  responseFormatter.js            |     100 |      100 |     100 |     100 |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
  validation.js                   |     7.4 |        0 |       0 |     7.4 |
 routes                           |    40.7 |    30.19 |   37.18 |   41.39 |
  alerts.js                       |   49.65 |    42.76 |   54.73 |   49.29 | 139-141,145-147,151-153,172,285-286,304-370,380-402,412-439,485-486,554-555,767-768,792-797,1031-1032,1073-1074,1090,1113-1114,1170-1171,1198,1226-1227,1256-1258,1262-1264,1268-1270,1274-1276,1353,1401,1411-1731,1741-1798,1808-1847,1908,1914-1928,1934-1959,2003-2015,2029,2055-2131,2142-2225,2230-2272,2282-2326,2357-2367,2377-2495,2501-2635,2716,2719,2722,2725,2756-2761,2776,2813-2814,2870-2871,2893-2918,2964-2971,2986,2996,3018-3019,3046-3052,3074-3099,3147-3154,3170,3178,3207,3231-3240,3267,3296-3297,3314-3315,3363-3364                                                                                                                                                                                                                                                                                                         
  analysts.js                     |   62.39 |     53.8 |      56 |   65.77 | 49-50,69-70,275-276,281-282,293-322,336-382,390-401,412,423,771,849-850,1054,1173-1174,1215-1216,1226-1277,1287-1360,1402-1412,1440-1449                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
  analytics.js                    |   24.65 |    10.77 |      11 |   26.49 | 10-40,45,106-136,195-196,236-242,252,258-273,278,287,295-307,331-349,368,417-450,468,509-510,522,576-702,749-819,882,886,913-914,969-977,1027-1061,1107-1154,1180-1324,1334-1426,1436-1597,1607-1622,1633-1826                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
  auth.js                         |    58.2 |    48.96 |   56.25 |   58.51 | 85-150,204-241,265,274,291,323,332,341,381,388,426,443-460,485,499-548,602-650,663,681,716,728                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
  backtest.js                     |   33.83 |    35.35 |   37.25 |   34.78 | 36-359,444-521,550,574-576,580-609,636-637,757-758,783-791,797-843,911-912,935-936,973-974,997-1003,1029-1032,1042-1248                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
  calendar.js                     |   82.79 |    81.94 |   87.93 |   83.38 | 73,135-136,217,259-260,312-320,351,362-363,411-412,437-448,456-482,594,613-614,704,723-724,801-827,877,1008,1131-1132,1171,1401,1542-1543,1691-1692,1696-1697,1778-1779                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
  commodities.js                  |    40.8 |    12.84 |   38.09 |   40.98 | 123-124,220,237-238,287-288,367-368,378-527,537-706,759                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
  dashboard.js                    |   58.18 |    23.77 |   55.81 |   59.92 | 10,250-251,270-273,351,363-364,383,466-486,504,554-597,615,675-676,711-712,824-825,939,969,988-989,1016,1039,1054,1084-1085,1095-1329,1337-1397,1452-1453,1490-1493,1510-1511,1558-1572                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
  data.js                         |   73.94 |    62.85 |      50 |   73.75 | 36-44,131-167,179-192,203-217,280,313,489-550                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
  debug.js                        |       8 |        0 |       0 |    8.24 |
  diagnostics.js                  |   29.16 |        0 |       0 |   29.16 |
  dividend.js                     |   38.16 |    28.65 |   21.73 |   38.53 | 8,137-151,176-213,251-252,312-313,328,424-425,487-526,575-837,850-861,872-959                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
  earnings.js                     |   29.16 |      8.6 |      25 |   29.16 | 40-41,61-62,73-158,171-347,382-417,439-440                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
  economic.js                     |   79.32 |    63.07 |      80 |    80.7 | 138-156,270-271,400-401,418,460-497,515,570-574,606-607,622,632,694-695                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
  etf.js                          |   56.41 |       50 |    62.5 |   57.63 | 9,23,147,170,223-256,272,297,373-551,561-573,664-665,716-717,747-748,780-781                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
  financials.js                   |   35.12 |    25.29 |   38.88 |   35.22 | 192-193,263-264,301-302,312-425,435-525,563-581,607-608,614-676,688-771,783-881,893-1004,1016-1119,1125-1178,1209,1269,1286-1290,1321,1338-1342,1352-1394,1425,1442-1446,1456-1562,1599,1618-1622,1655-1656,1686-1687,1726-1727,1737-1854,1866-1948,1988-1991,2011-2015,2025-2077,2087-2136,2145-2194                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
  health.js                       |   47.89 |    31.67 |      30 |   47.45 | 73,125-512,540-547,629-641,664-665,685-686,719-777,789-810,874-891,907,916,971-972,982-983,993-995,1001,1017-1020                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
  insider.js                      |   46.57 |    39.13 |      10 |   47.88 | 8,73-102,159-161,165-167,182-246,275-284,295-304                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
  liveData.js                     |    47.3 |    47.61 |   53.19 |   47.54 | 129-137,164-169,239-244,273-278,335-340,410-415,436,475-483,492-541,646-728,751-846,856,865,909-914,998-1152,1158-1197,1232-1233,1251-1277,1317,1364,1386,1399,1416,1425-1435,1446-1455                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
  market.js                       |   27.96 |    20.13 |   25.36 |   28.57 | 22-23,28-33,78,134-135,210-211,261-262,280,286-291,322-325,337-338,348-429,435-447,453-498,551,576,597,631-653,685,710,729,750-751,791-800,871-872,907,921-922,955-956,1012-1013,1031-1046,1344-1345,1371-1372,1426-1427,1458-1459,1477,1503-1504,1519-1520,1553-1556,1585-1603,1639,1647-1648,1665-1709,1727-1784,1793-1825,1833-1919,1978,1990-1991,2001-2578,2584-2848,2860-2995,3006-3147,3158-3282,3293-3351,3362-3420,3439,3485-3668,3689,3730-3731,3741-3956,3966-4296,4307-4668,4679-4718,4728-4791,4803-4855,4875,4880-4881,4889-4964,4974-5052,5062-5143,5153-5225,5235-5295,5305-5364,5374-5428,5458-5459,5477,5488,5503-5504,5515-5564,5574-5595,5604-5625,5634-5643,5658,5686-5687,5702,5745-5746,5756-5819                                                                                                                               
  metrics.js                      |   61.36 |    35.82 |   57.14 |   62.06 | 13,33-95,106-140,185-190,201-202,211,272-273,320-343                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   
  news.js                         |   44.29 |    28.75 |   38.02 |   44.86 | 14-21,69,103-105,141-143,154-207,377,486,507,518-521,537,550-553,601-602,637-638,710-711,756-757,854-855,914,957-971,1049,1092-1106,1204,1209,1214,1234-1272,1297-1417,1428-1565,1647-1851,1861-2113,2123-2414                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
  orders.js                       |   25.66 |    20.31 |   21.81 |   25.85 | 10,48-49,83,167-169,201-203,215-360,426,445-550,575-656,667-792,816-817,854-855,865-919,930-954,977,995-1032,1059-1061,1065-1067,1116,1167-1187,1205-1458,1464-1510,1520-1725,1755-1860,1888-1950,1974-1980,1993-2015                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
  performance.js                  |     100 |      100 |     100 |     100 |
  portfolio.js                    |   28.78 |     17.9 |   19.06 |   29.41 | 13-123,131-138,205,209,243-244,305-306,350-368,376,387-392,414,462,466,470,477-482,486,497,507-515,542-545,588,616-743,775,804-807,864-977,987-1031,1044-1091,1169-1219,1231-1425,1468,1501-1649,1688-1705,1735,1778-1779,1837-1964,1998,2023-2064,2139-2140,2195-2342,2354-2449,2460-2556,2567-2654,2712-2714,2747-2779,2838,2842,2861-2869,2884-2900,2928-2929,2959,2988,2992,3000-3040,3074,3098,3154,3178,3191-3192,3220,3224,3258-3262,3266,3291-3292,3314,3350-3351,3395,3411,3439-3440,3452,3508,3514-3516,3521-3523,3533-3535,3539,3544,3549,3568,3585-3594,3617,3667-3671,3679-3681,3685,3692,3698-3701,3708,3722,3730,3738,3750-3791,3796-3865,3874-3911,3919-3946,3954-4122,4132-4558,4564-4617,4634-4696,4713-4759,4776-5435,5441-5670,5681-5727,5765-5771,5822-5910,5920-6002,6088-6089,6098-6099,6176-6177,6187-6201,6211-6397,6462-6463 
  positioning.js                  |    93.1 |      100 |   66.66 |    93.1 |
  price.js                        |   19.87 |     8.97 |   21.21 |   20.17 | 73-76,135-139,160-161,276,308-440,452-505,517-566,576-817,853-1012,1022-1204,1265,1294-1295,1304-1469,1480-1535,1545-1727,1737-1759,1769-1784,1795-1856                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
  recommendations.js              |   83.45 |    77.08 |   91.66 |   83.58 | 62,64,165-177,262,273,290-303,405-406,448,602-619                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
  research.js                     |   20.33 |        0 |       0 |   20.33 | 13-29,39-50,60-71,81-92,102-113,123-259                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
  risk.js                         |   29.36 |    27.85 |   34.09 |   30.23 | 129,135-140,174,239-516,529-562,572-612,622-660,670-743,753-785,795-824,834-863,873-920,930-980,990-1069,1079-1111,1121-1321,1331-1339,1349-1357,1367-1408,1418-1459,1469-1507,1517-1549,1559-1594,1613,1624,1659,1674-1698,1748-1749                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
  scores.js                       |   75.43 |    48.07 |   77.77 |   77.77 |
  scoring.js                      |   49.25 |     35.5 |      36 |   50.25 | 245,251-264,333-334,362-372,399-425,526,545-551,566-567,629-630,690-816,856-857,867-1086                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
  screener.js                     |   23.07 |    19.38 |   13.33 |    23.5 | 77-78,146-148,151-153,157-159,162-164,169-171,174-176,180-182,185-187,191-193,196-198,203-205,208-210,214-216,219-221,243-245,250-252,255-257,268-270,273-275,280-282,294-313,445-446,478-492,522-523,533-692,702-776,784-858,866,892-1166,1177-1231,1241-1267,1277-1328,1338-1421,1431-1523,1546-1606,1631-1772,2049-2138,2150-2179,2190-2456                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
  sectors.js                      |   72.36 |    51.72 |   67.34 |   73.46 | 79-96,433-470,668-803,875-876,915-916,926-956                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          
  sentiment.js                    |   30.05 |     23.5 |   18.07 |   30.93 | 108,110,154-166,232-233,263-264,274-489,499-603,620-745,776-777,787-1028,1050-1051,1061-1337,1347-1388,1398-1432,1442-1475,1485-1515,1525-1552,1562-1587,1597-1630,1640-1663,1673-1704,1713-1738,1770-1771,1876-1877,1887-1997                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         
  settings.js                     |    48.2 |    23.34 |   57.69 |   48.54 | 55,245-246,270,295-296,317,346,355,379-380,432-451,481,513,568-569,598-599,609-625,635-665,683-684,694-750,760,799-800,827-828,858-859,895-896,906-971,981-1030,1040-1203,1214-1364,1375-1457,1468                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     
  signals.js                      |   81.25 |       80 |     100 |   81.25 | 30,38,86-87,154-155,222-223,247-248,279,300,319,366-368,394,405-413,465-466,483,497-498,519,588-589                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
  stocks.js                       |   34.66 |    30.75 |   34.69 |   34.77 | 27-28,66-146,169-210,221-272,283-341,353,440-442,447-449,454-456,557,566,575,586,969-979,989-1172,1207,1289,1334-1335,1345-1417,1427-1589,1594-1673,1703,1721-1722,1767,1808-1810,1847-1848,1871-1872,1885-1907,1941-1942,1959,1976-1977,1990-2012,2033,2051,2067,2083,2099,2117,2135,2153,2174,2198-2199,2228-2229,2280,2311-2312,2349-2350,2401-2402,2434,2472-2473,2489,2549-2550,2565-2568,2576-2577,2631-2632,2646,2650-2653,2660-3031,3051-3142,3155-3187,3195-3366,3543,3585-3586,3592-3634,3640-3706,3714-3758,3766-3794,3802-3815,3820-3885,3896,3905-3925,3935-3955,3965-4038,4048-4076,4086-4128,4138-4199,4209-4228,4237-4256,4265-4284,4293-4307,4316-4331,4340-4354,4363-4380,4389-4420                                                                                                                                                  
  strategyBuilder.js              |   76.42 |    71.68 |   78.57 |   76.81 | 21,28-149,210-215,316,357-362,463-468,496-501,623-640,677-682,691-700                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
  technical.js                    |   25.56 |    18.76 |   33.04 |   26.48 | 44-45,111-112,164,245-249,276-280,299-303,313-463,528,565-566,660,663,665,667,698-767,883-884,947,970-985,995-1054,1064-1187,1204,1258-1259,1337,1349-1357,1391-1439,1483-1484,1531,1544-1548,1609-1669,1694-1930,1954-1988,2027-2032,2079-2286,2349-2353,2377-2384,2391-2411,2421-2441,2451-2471,2505-2507,2543-2557,2634-2652,2661-2738,2752-2808,2839-2865,2876-3119,3139-4093                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
  trades.js                       |   36.79 |    16.36 |   29.16 |   37.59 | 16,64,91-93,97-99,120-138,161-230,363-455,529,556-628,658-666,734-735,791,846-847,862-934,959-1005,1022,1029-1030,1101-1102,1130-1131,1136-1143,1209-1229,1318,1352-1369,1385,1402-1403,1408-1417,1435-1474,1538-1631,1656-1675,1689-1723,1741-1742,1778-1803,1839,1855-1856,1914-1915,1959,1974-2072,2142-2166,2278-2282,2333-2334,2343-2580,2590-2804,2816-2902,2912-2967,2977-3006                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
  trading.js                      |   71.48 |    65.99 |   64.19 |    71.8 | 35-60,85-86,90-91,99-137,174,187-188,435-436,478,554-558,594-601,606,633,811-872,908,928,946-947,968,1034,1053-1059,1113-1121,1143,1198-1199,1248,1282-1286,1298-1319,1332-1333,1357,1378,1430-1431,1495,1526,1561-1562,1618,1652-1656,1702-1713,1757-1772,1839,1884-1885,1899,1905,1921-1922,1927-1928,1933-1944,1951-1956,1970-2003,2168-2169,2179-2239,2361,2366,2376,2381,2419-2420,2446,2499-2500,2503-2504,2507-2508,2511-2512,2515-2516,2519-2520,2563-2584,2608-2609,2627,2634,2742,2772-2777,2821-2822,2857-2858,2866-2889,2897-2935,2943-2976,3007-3018,3064-3083,3121-3122,3131-3143,3148-3159,3212-3213                                                                                                                                                                                                                                    
  user.js                         |    7.43 |        0 |       0 |    7.48 | 6,16,30-72,83-105,116-280,291-395,406-511,522-778                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
  watchlist.js                    |   42.22 |    26.63 |   35.29 |   42.51 | 9,69,83-84,105-219,229-395,407,427-428,463,484-485,504-505,528-545,566-567,599-602,633-636,648-684,699-700,722,745,763-772,780-781,806-867,926,934-935,951,976,992,1012-1013,1023-1110,1135,1159-1160                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
  websocket.js                    |   52.96 |    37.81 |   59.37 |   53.02 | 17,63,93-94,121-122,138-158,375-583,628-648,701,708-709,758,765-766,799-800,827-828,900-910,918-923,941-942,955-981,986-1004                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
 services                         |   88.27 |     75.1 |   95.53 |   89.73 |
  aiStrategyGenerator.js          |   84.66 |    70.94 |   94.38 |   86.71 | 200-204,360,366,369,372,380,385,436-446,453,467,781-783,805-809,1038,1128-1129,1148,1236-1240,1412-1413,1426-1427,1464,1512,1514,1520,1522,1524,1526,1528,1646,1665-1668,1764,1788,1797,1806,4295                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
  aiStrategyGeneratorStreaming.js |   96.31 |    84.61 |     100 |   96.59 |
 utils                            |    61.6 |     54.3 |   69.43 |   62.36 |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
  aiMarketScanner.js              |     3.5 |        0 |    8.33 |    4.87 |
  alertSystem.js                  |    61.5 |     46.7 |   70.58 |   61.16 | 76,89-113,121-122,134-153,436,443,447,451,511-522,544-770,813,816,828,870                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
  alpacaService.js                |   80.45 |    69.48 |   86.95 |   79.42 | 169-170,198-199,223-224,300-362,768-769,785-786,804-808,851-852,874-875,899-900,914,931-979                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
  apiKeyService.js                |   68.55 |    65.91 |    90.9 |    68.4 | 23-26,92,104-121,154,179-242,251,260-272,342-347,355-363,379-381,393-394,416-457,489-497,512-514,560-588,598,625,637,656,747,790,807,848-875,910,942,983-1006,1032-1033,1063,1069,1097,1129,1176,1277,1286,1321-1322,1339-1351,1372,1383,1390,1417-1418                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                
  backtestStore.js                |     100 |      100 |     100 |     100 |
  database-optimization.js        |       0 |        0 |       0 |       0 |
  database.js                     |   44.79 |    47.36 |      60 |   44.95 | 41-168,185,222-230,245,250-258,269-270,288,310-1290,1315,1328-1330,1339,1356,1368,1410-1446                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
  errorTracker.js                 |     100 |      100 |     100 |     100 |
  factorScoring.js                |     100 |    96.02 |     100 |     100 |
  liveDataManager.js              |   42.96 |    34.27 |   43.87 |   43.84 | 88,92,123,192-262,279-284,324,357,392,402-443,458,465-533,554,620,661-665,680,716-717,753-863,887-891,909-954,1012,1020,1030-1031,1055-1059,1075,1083,1094,1105-1106,1158-1160,1188,1233-1238,1255-1271,1284-1285,1293-1294,1298-1299,1303-1304,1309,1334-1336,1343-1351,1413-1414,1501-1532,1591,1605-1645,1658,1683-2111                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
  logger.js                       |   93.18 |       75 |     100 |   92.85 |
  newsAnalyzer.js                 |   86.71 |    84.78 |     100 |    87.8 | 108-109,156,161,173-174,240-241,275,280,298-299,379,386-387                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            
  newsStreamProcessor.js          |       0 |        0 |       0 |       0 |
  performanceMonitor.js           |   79.44 |    71.71 |   77.77 |   82.11 | 70-76,171,183-215,279,333-368,380,400-401,424-428,603,650,692-716,742,796,811,838-857,873,944,955                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
  responseFormatter.js            |     100 |      100 |     100 |     100 |
  riskEngine.js                   |   55.79 |    44.96 |   55.55 |   57.95 | 22-177,247-275,298-300,309,428,435-436,503-628,668-928,996-1004,1036-1037,1053,1071-1072,1074-1075,1093-1094,1110,1135-1136,1148-1149,1157-1158,1169-1170,1202-1227,1247-1258,1290-1303,1315,1335-1356,1386-1395,1420-1421,1455-1456,1480-1481,1521-1522,1558-1559,1604-1605,1655-1656,1669,1678,1699-1700,1747-1748,1799,1810-1811,1849-1850,1882-1883,1925-1926                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
  schemaValidator.js              |   88.92 |    84.17 |     100 |   88.66 | 784,792,805,808,826,838,843,851-854,858,864,888,970,987,995,1013,1022,1032,1040,1047,1104-1121,1152,1159,1257-1261,1472,1547-1548                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      
  scoringHelpers.js               |    2.38 |        0 |       0 |    2.45 |
  sentimentEngine.js              |     100 |      100 |     100 |     100 |
  tradingModeHelper.js            |   85.34 |    73.03 |     100 |   84.95 | 133,236-261,303,336,346,380,403,430,453,465,554                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
----------------------------------|---------|----------|---------|---------|

Summary of all failing tests
FAIL tests/integration/routes/dashboard.integration.test.js
  ‚óè Dashboard Routes Integration Tests ‚Ä∫ GET /api/dashboard/holdings (Portfolio Holdings) ‚Ä∫ should return holdings data with valid authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      138 |         .set("Authorization", `Bearer ${authToken}`);
      139 |
    > 140 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      141 |
      142 |       if (response.status === 200) {
      143 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:140:52)

  ‚óè Dashboard Routes Integration Tests ‚Ä∫ GET /api/dashboard/performance (Portfolio Performance) ‚Ä∫ should return performance data with valid authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      185 |         .set("Authorization", `Bearer ${authToken}`);
      186 |
    > 187 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      188 |
      189 |       if (response.status === 200) {
      190 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:187:52)

  ‚óè Dashboard Routes Integration Tests ‚Ä∫ Performance and Edge Cases ‚Ä∫ should handle authentication edge cases

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      637 |           .get(endpoint)
      638 |           .set("Authorization", `Bearer ${authToken}`);
    > 639 |         expect([200, 401].includes(validTokenResponse.status)).toBe(true);
          |                                                                ^
      640 |       }
      641 |     });
      642 |   });

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:639:64)

FAIL tests/integration/routes/auth.integration.test.js
  ‚óè Authentication Routes Integration ‚Ä∫ GET /auth/me ‚Ä∫ should require valid token

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      170 |       // Due to development bypass in auth middleware (lines 30-47 in auth.js),
      171 |       // requests without tokens may still succeed in NODE_ENV=test
    > 172 |       expect(response.status).toBe(200);
          |                               ^
      173 |       if (response.status === 401) {
      174 |         expect(response.body.success).toBe(false);
      175 |       } else {

      at Object.toBe (tests/integration/routes/auth.integration.test.js:172:31)

  ‚óè Authentication Routes Integration ‚Ä∫ POST /auth/forgot-password ‚Ä∫ should initiate password reset

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 400

      219 |
      220 |       // Accept various Cognito responses
    > 221 |       expect(response.status).toBe(200);
          |                               ^
      222 |       if (response.status === 200) {
      223 |         expect(response.body.message).toContain("Password reset code sent");
      224 |       }

      at Object.toBe (tests/integration/routes/auth.integration.test.js:221:31)

  ‚óè Authentication Routes Integration ‚Ä∫ POST /auth/reset-password ‚Ä∫ should reset password with valid code

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 400

      244 |
      245 |       // Accept various Cognito responses
    > 246 |       expect(response.status).toBe(200);
          |                               ^
      247 |       if (response.status === 200) {
      248 |         expect(response.body.message).toBe("Password reset successfully");
      249 |       }

      at Object.toBe (tests/integration/routes/auth.integration.test.js:246:31)

FAIL tests/integration/utils/performanceMonitor.test.js
  ‚óè Performance Monitor Integration Tests ‚Ä∫ Performance Timing ‚Ä∫ should handle multiple concurrent timers

    expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      118 |       const duration3 = endTimer(timer3);
      119 |
    > 120 |       expect(duration1).toBeGreaterThan(0);
          |                         ^
      121 |       expect(duration2).toBeGreaterThan(0);
      122 |       expect(duration3).toBeGreaterThan(0);
      123 |     });

      at Object.toBeGreaterThan (tests/integration/utils/performanceMonitor.test.js:120:25)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ Metrics Recording ‚Ä∫ should record custom metrics

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      137 |       const metrics = await getMetrics("test_metric", "1h");
      138 |
    > 139 |       expect(Array.isArray(metrics)).toBe(true);
          |                                      ^
      140 |       expect(metrics.length).toBeGreaterThan(0);
      141 |
      142 |       const values = metrics.map((m) => m.value);

      at Object.toBe (tests/integration/utils/performanceMonitor.test.js:139:38)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ Metrics Recording ‚Ä∫ should record metrics with different categories

    expect(received).toBeGreaterThan(expected)

    Matcher error: received value must be a number or bigint

    Received has value: undefined

      164 |       const cacheMetrics = await getMetrics("response_time", "1h", "cache");
      165 |
    > 166 |       expect(apiMetrics.length).toBeGreaterThan(0);
          |                                 ^
      167 |       expect(dbMetrics.length).toBeGreaterThan(0);
      168 |       expect(cacheMetrics.length).toBeGreaterThan(0);
      169 |

      at Object.toBeGreaterThan (tests/integration/utils/performanceMonitor.test.js:166:33)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ Metrics Recording ‚Ä∫ should handle metrics with metadata

    TypeError: metrics.find is not a function

      184 |
      185 |       const metrics = await getMetrics("request_duration", "1h", "api");
    > 186 |       const metric = metrics.find(
          |                              ^
      187 |         (m) => m.metadata?.user_id === "test_user_123"
      188 |       );
      189 |

      at Object.find (tests/integration/utils/performanceMonitor.test.js:186:30)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ Performance Analytics ‚Ä∫ should calculate average response times

    expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      208 |       );
      209 |
    > 210 |       expect(avgResponseTime).toBeGreaterThan(0);
          |                               ^
      211 |       expect(avgResponseTime).toBe(143.75); // (100 + 150 + 200 + 125) / 4
      212 |     });
      213 |

      at Object.toBeGreaterThan (tests/integration/utils/performanceMonitor.test.js:210:31)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ Performance Analytics ‚Ä∫ should calculate metrics for different time ranges

    expect(received).toBeLessThanOrEqual(expected)

    Matcher error: received value must be a number or bigint

    Received has value: undefined

      240 |       const metrics2h = await getMetrics("time_test", "2h", "test");
      241 |
    > 242 |       expect(metrics1h.length).toBeLessThanOrEqual(metrics2h.length);
          |                                ^
      243 |     });
      244 |   });
      245 |

      at Object.toBeLessThanOrEqual (tests/integration/utils/performanceMonitor.test.js:242:32)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ System Health Monitoring ‚Ä∫ should collect system health metrics

    expect(received).toHaveProperty(path)

    Expected path: "timestamp"
    Received path: []

    Received value: {"averageDuration": 109, "score": 98, "slowOperations": 0, "status": "healthy", "successRate": "100.00", "totalOperations": 17}

      249 |
      250 |       expect(health).toHaveProperty("status");
    > 251 |       expect(health).toHaveProperty("timestamp");
          |                      ^
      252 |       expect(health).toHaveProperty("metrics");
      253 |
      254 |       expect(health.metrics).toHaveProperty("memory");

      at Object.toHaveProperty (tests/integration/utils/performanceMonitor.test.js:251:22)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ System Health Monitoring ‚Ä∫ should include database health in system metrics

    expect(received).toHaveProperty(path)

    Matcher error: received value must not be null nor undefined

    Received has value: undefined

      272 |       const health = await getSystemHealth();
      273 |
    > 274 |       expect(health.metrics).toHaveProperty("database");
          |                              ^
      275 |       expect(health.metrics.database).toHaveProperty("connected");
      276 |       expect(health.metrics.database).toHaveProperty("pool_size");
      277 |       expect(health.metrics.database).toHaveProperty("active_connections");

      at Object.toHaveProperty (tests/integration/utils/performanceMonitor.test.js:274:30)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ System Health Monitoring ‚Ä∫ should detect system health status accurately

    TypeError: Cannot read properties of undefined (reading 'memory')

      288 |
      289 |       if (health.status === "healthy") {
    > 290 |         expect(health.metrics.memory.usage_percent).toBeLessThan(90);
          |                               ^
      291 |         expect(health.metrics.cpu.usage).toBeLessThan(90);
      292 |       }
      293 |     });

      at Object.memory (tests/integration/utils/performanceMonitor.test.js:290:31)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ Anomaly Detection ‚Ä∫ should detect trend-based anomalies

    expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      343 |       const anomalies = await detectAnomalies("trend_test", "1h", "trend");
      344 |
    > 345 |       expect(anomalies.length).toBeGreaterThan(0);
          |                                ^
      346 |
      347 |       const dropAnomaly = anomalies.find((a) => a.value === 50);
      348 |       expect(dropAnomaly).toBeDefined();

      at Object.toBeGreaterThan (tests/integration/utils/performanceMonitor.test.js:345:32)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ Performance Reporting ‚Ä∫ should generate comprehensive performance report

    expect(received).toHaveProperty(path)

    Expected path: "summary"
    Received path: []

    Received value: {"activeRequests": 1, "alerts": [], "errorRate": 0, "status": "healthy", "timestamp": "2025-09-23T16:31:42.279Z", "totalRequests": 53, "uptime": 7.744342046}

      367 |       const report = await generatePerformanceReport("1h");
      368 |
    > 369 |       expect(report).toHaveProperty("summary");
          |                      ^
      370 |       expect(report).toHaveProperty("metrics");
      371 |       expect(report).toHaveProperty("anomalies");
      372 |       expect(report).toHaveProperty("recommendations");

      at Object.toHaveProperty (tests/integration/utils/performanceMonitor.test.js:369:22)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ Performance Reporting ‚Ä∫ should include performance recommendations

    TypeError: Cannot read properties of undefined (reading 'length')

      391 |       const report = await generatePerformanceReport("1h");
      392 |
    > 393 |       expect(report.recommendations.length).toBeGreaterThan(0);
          |                                     ^
      394 |
      395 |       const recommendations = report.recommendations;
      396 |       const hasPerformanceRecommendation = recommendations.some(

      at Object.length (tests/integration/utils/performanceMonitor.test.js:393:37)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ Performance Reporting ‚Ä∫ should filter report by categories

    TypeError: Cannot read properties of undefined (reading 'every')

      417 |       const dbReport = await generatePerformanceReport("1h", "database");
      418 |
    > 419 |       expect(apiReport.metrics.every((m) => m.category === "api")).toBe(true);
          |                                ^
      420 |       expect(dbReport.metrics.every((m) => m.category === "database")).toBe(
      421 |         true
      422 |       );

      at Object.every (tests/integration/utils/performanceMonitor.test.js:419:32)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ Performance Benchmarking ‚Ä∫ should benchmark database operations

    expect(received).toBeGreaterThan(expected)

    Matcher error: received value must be a number or bigint

    Received has value: undefined

      445 |       // Verify metric was recorded
      446 |       const metrics = await getMetrics("db_benchmark", "1h", "database");
    > 447 |       expect(metrics.length).toBeGreaterThan(0);
          |                              ^
      448 |       expect(metrics[0].value).toBe(duration);
      449 |     });
      450 |

      at Object.toBeGreaterThan (tests/integration/utils/performanceMonitor.test.js:447:30)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ Performance Benchmarking ‚Ä∫ should benchmark API response times

    expect(received).toBe(expected) // Object.is equality

    Expected: 3
    Received: undefined

      477 |       // Verify all metrics were recorded
      478 |       const metrics = await getMetrics("api_benchmark", "1h", "api");
    > 479 |       expect(metrics.length).toBe(operations.length);
          |                              ^
      480 |     });
      481 |
      482 |     test("should compare performance across time periods", async () => {

      at Object.toBe (tests/integration/utils/performanceMonitor.test.js:479:30)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ Performance Benchmarking ‚Ä∫ should compare performance across time periods

    TypeError: currentMetrics.reduce is not a function

      510 |       const currentMetrics = await getMetrics("comparison_test", "30m", "test");
      511 |       const currentAvg =
    > 512 |         currentMetrics.reduce((sum, m) => sum + m.value, 0) /
          |                        ^
      513 |         currentMetrics.length;
      514 |
      515 |       expect(previousAvg).toBeGreaterThan(currentAvg); // Performance improved

      at Object.reduce (tests/integration/utils/performanceMonitor.test.js:512:24)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle invalid time ranges

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      536 |     test("should handle invalid time ranges", async () => {
      537 |       const metrics = await getMetrics("test_metric", "invalid_range", "test");
    > 538 |       expect(Array.isArray(metrics)).toBe(true);
          |                                      ^
      539 |       // Should default to a reasonable time range
      540 |     });
      541 |

      at Object.toBe (tests/integration/utils/performanceMonitor.test.js:538:38)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle very large metric values

    expect(received).toBeGreaterThan(expected)

    Matcher error: received value must be a number or bigint

    Received has value: undefined

      548 |
      549 |       const metrics = await getMetrics("large_value_test", "1h", "test");
    > 550 |       expect(metrics.length).toBeGreaterThan(0);
          |                              ^
      551 |       expect(metrics[0].value).toBe(largeValue);
      552 |     });
      553 |

      at Object.toBeGreaterThan (tests/integration/utils/performanceMonitor.test.js:550:30)

  ‚óè Performance Monitor Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle concurrent metric recording

    expect(received).toBe(expected) // Object.is equality

    Expected: 10
    Received: undefined

      563 |
      564 |       const metrics = await getMetrics("concurrent_test", "1h", "test");
    > 565 |       expect(metrics.length).toBe(10);
          |                              ^
      566 |
      567 |       // Verify all values were recorded correctly
      568 |       const values = metrics.map((m) => m.value).sort((a, b) => a - b);

      at Object.toBe (tests/integration/utils/performanceMonitor.test.js:565:30)

FAIL tests/integration/routes/stocks.integration.test.js
  ‚óè Stocks Routes Integration Tests ‚Ä∫ GET /api/stocks/trending ‚Ä∫ should return trending stocks

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      128 |         .set("Authorization", "Bearer dev-bypass-token");
      129 |
    > 130 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      131 |     });
      132 |
      133 |     test("should handle timeframe parameters", async () => {

      at Object.toBe (tests/integration/routes/stocks.integration.test.js:130:52)

  ‚óè Stocks Routes Integration Tests ‚Ä∫ GET /api/stocks/trending ‚Ä∫ should handle timeframe parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      136 |         .set("Authorization", "Bearer dev-bypass-token");
      137 |
    > 138 |       expect([200, 400, 401].includes(response.status)).toBe(true);
          |                                                         ^
      139 |     });
      140 |
      141 |     test("should require authentication for trending", async () => {

      at Object.toBe (tests/integration/routes/stocks.integration.test.js:138:57)

  ‚óè Stocks Routes Integration Tests ‚Ä∫ Watchlist Operations ‚Ä∫ should handle watchlist requests

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      178 |         .set("Authorization", "Bearer dev-bypass-token");
      179 |
    > 180 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      181 |     });
      182 |
      183 |     test("should handle adding to watchlist", async () => {

      at Object.toBe (tests/integration/routes/stocks.integration.test.js:180:52)

  ‚óè Stocks Routes Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle concurrent requests

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      333 |
      334 |       responses.forEach((response) => {
    > 335 |         expect([200, 400, 401].includes(response.status)).toBe(true);
          |                                                           ^
      336 |       });
      337 |     });
      338 |

      at toBe (tests/integration/routes/stocks.integration.test.js:335:59)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/routes/stocks.integration.test.js:334:17)

  ‚óè Stocks Routes Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle invalid parameters gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      352 |       for (const req of invalidRequests) {
      353 |         const response = await req;
    > 354 |         expect([200, 400, 401].includes(response.status)).toBe(true);
          |                                                           ^
      355 |       }
      356 |     });
      357 |

      at Object.toBe (tests/integration/routes/stocks.integration.test.js:354:59)

FAIL tests/integration/routes/analysts.integration.test.js
  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/upgrades ‚Ä∫ should return analyst upgrades with pagination

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      60 |       const response = await request(app).get("/api/analysts/upgrades");
      61 |
    > 62 |       expect(response.status).toBe(200);
         |                               ^
      63 |
      64 |       if (response.status === 200) {
      65 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:62:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/upgrades ‚Ä∫ should handle pagination parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       96 |       );
       97 |
    >  98 |       expect(response.status).toBe(200);
          |                               ^
       99 |
      100 |       if (response.status === 200) {
      101 |         expect(response.body.pagination.page).toBe(2);

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:98:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/upgrades ‚Ä∫ should handle invalid pagination parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      109 |       );
      110 |
    > 111 |       expect(response.status).toBe(200);
          |                               ^
      112 |
      113 |       if (response.status === 200) {
      114 |         // Should use defaults

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:111:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/upgrades ‚Ä∫ should handle zero and negative pagination values

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      123 |       );
      124 |
    > 125 |       expect(response.status).toBe(200);
          |                               ^
      126 |
      127 |       if (response.status === 200) {
      128 |         // Should use defaults for invalid values

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:125:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/upgrades ‚Ä∫ should handle database connection issues

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      150 |       const response = await request(app).get("/api/analysts/upgrades");
      151 |
    > 152 |       expect(response.status).toBe(200);
          |                               ^
      153 |
      154 |       if (response.status === 503) {
      155 |         expect(response.body.error).toContain(

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:152:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/:ticker/earnings-estimates ‚Ä∫ should return earnings estimates for valid ticker

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      167 |       );
      168 |
    > 169 |       expect(response.status).toBe(200);
          |                               ^
      170 |
      171 |       if (response.status === 200) {
      172 |         expect(response.body).toHaveProperty("ticker", "AAPL");

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:169:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/:ticker/earnings-estimates ‚Ä∫ should handle lowercase ticker

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      184 |       );
      185 |
    > 186 |       expect(response.status).toBe(200);
          |                               ^
      187 |
      188 |       if (response.status === 200) {
      189 |         expect(response.body.ticker).toBe("AAPL");

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:186:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/:ticker/earnings-estimates ‚Ä∫ should handle special characters in ticker

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      212 |       );
      213 |
    > 214 |       expect(response.status).toBe(200);
          |                               ^
      215 |
      216 |       if (response.status === 200) {
      217 |         expect(response.body.ticker).toBe("BRK.A");

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:214:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/:ticker/earnings-estimates ‚Ä∫ should handle invalid ticker symbols

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      224 |       );
      225 |
    > 226 |       expect(response.status).toBe(200);
          |                               ^
      227 |
      228 |       if (response.status === 200) {
      229 |         expect(response.body.ticker).toBe("INVALID123");

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:226:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/:ticker/revenue-estimates ‚Ä∫ should return revenue estimates for valid ticker

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      239 |       );
      240 |
    > 241 |       expect(response.status).toBe(200);
          |                               ^
      242 |
      243 |       if (response.status === 200) {
      244 |         expect(response.body).toHaveProperty("ticker", "AAPL");

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:241:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/:ticker/revenue-estimates ‚Ä∫ should handle different ticker formats

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      256 |         );
      257 |
    > 258 |         expect(response.status).toBe(200);
          |                                 ^
      259 |
      260 |         if (response.status === 200) {
      261 |           expect(response.body.ticker).toBe(ticker.toUpperCase());

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:258:33)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/:ticker/earnings-history ‚Ä∫ should return earnings history for valid ticker

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      284 |       );
      285 |
    > 286 |       expect(response.status).toBe(200);
          |                               ^
      287 |
      288 |       if (response.status === 200) {
      289 |         expect(response.body).toHaveProperty("ticker", "AAPL");

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:286:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/:ticker/earnings-history ‚Ä∫ should handle case insensitive ticker

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      314 |       );
      315 |
    > 316 |       expect(response.status).toBe(200);
          |                               ^
      317 |
      318 |       if (response.status === 200) {
      319 |         expect(response.body.ticker).toBe("TESLA");

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:316:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/:ticker/eps-revisions ‚Ä∫ should return EPS revisions for valid ticker

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      328 |       );
      329 |
    > 330 |       expect(response.status).toBe(200);
          |                               ^
      331 |
      332 |       if (response.status === 200) {
      333 |         expect(response.body).toHaveProperty("ticker", "AAPL");

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:330:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/:ticker/eps-revisions ‚Ä∫ should handle ticker case conversion

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      365 |       );
      366 |
    > 367 |       expect(response.status).toBe(200);
          |                               ^
      368 |
      369 |       if (response.status === 200) {
      370 |         expect(response.body.ticker).toBe("GOOGL");

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:367:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/:ticker/eps-trend ‚Ä∫ should return EPS trend for valid ticker

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      377 |       const response = await request(app).get("/api/analysts/AAPL/eps-trend");
      378 |
    > 379 |       expect(response.status).toBe(200);
          |                               ^
      380 |
      381 |       if (response.status === 200) {
      382 |         expect(response.body).toHaveProperty("ticker", "AAPL");

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:379:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/:ticker/growth-estimates ‚Ä∫ should return growth estimates for valid ticker

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      410 |       );
      411 |
    > 412 |       expect(response.status).toBe(200);
          |                               ^
      413 |
      414 |       if (response.status === 200) {
      415 |         expect(response.body).toHaveProperty("ticker", "AAPL");

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:412:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/:ticker/overview ‚Ä∫ should return comprehensive analyst overview

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      442 |       const response = await request(app).get("/api/analysts/AAPL/overview");
      443 |
    > 444 |       expect(response.status).toBe(200);
          |                               ^
      445 |
      446 |       if (response.status === 200) {
      447 |         expect(response.body).toHaveProperty("ticker", "AAPL");

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:444:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/:ticker/overview ‚Ä∫ should handle different ticker symbols

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      477 |         );
      478 |
    > 479 |         expect(response.status).toBe(200);
          |                                 ^
      480 |
      481 |         if (response.status === 200) {
      482 |           expect(response.body.ticker).toBe(ticker);

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:479:33)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/recent-actions ‚Ä∫ should return recent analyst actions

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      501 |       const response = await request(app).get("/api/analysts/recent-actions");
      502 |
    > 503 |       expect(response.status).toBe(200);
          |                               ^
      504 |
      505 |       if (response.status === 200) {
      506 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:503:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/recent-actions ‚Ä∫ should handle limit parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      533 |       );
      534 |
    > 535 |       expect(response.status).toBe(200);
          |                               ^
      536 |
      537 |       if (response.status === 200) {
      538 |         expect(response.body.data.length).toBeLessThanOrEqual(5);

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:535:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/recent-actions ‚Ä∫ should handle invalid limit parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      545 |       );
      546 |
    > 547 |       expect(response.status).toBe(200);
          |                               ^
      548 |       // Should handle gracefully with default limit
      549 |     });
      550 |

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:547:31)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/downgrades ‚Ä∫ should return 501 not implemented

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      747 |       const response = await request(app).get("/api/analysts/downgrades");
      748 |
    > 749 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      750 |       expect(response.body).toHaveProperty("success", false);
      751 |       expect(response.body).toHaveProperty(
      752 |         "error",

      at Object.toContain (tests/integration/routes/analysts.integration.test.js:749:41)

  ‚óè Analysts Routes ‚Ä∫ GET /api/analysts/downgrades ‚Ä∫ should handle limit parameter

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      767 |       );
      768 |
    > 769 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      770 |     });
      771 |   });
      772 |

      at Object.toContain (tests/integration/routes/analysts.integration.test.js:769:41)

  ‚óè Analysts Routes ‚Ä∫ Error Handling ‚Ä∫ should handle database connection errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      846 |       const response = await request(app).get("/api/analysts/upgrades");
      847 |
    > 848 |       expect(response.status).toBe(200);
          |                               ^
      849 |
      850 |       if ([500, 503].includes(response.status)) {
      851 |         expect(response.body).toHaveProperty("success", false);

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:848:31)

  ‚óè Analysts Routes ‚Ä∫ Error Handling ‚Ä∫ should handle malformed URLs

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      859 |       );
      860 |
    > 861 |       expect(response.status).toBe(200);
          |                               ^
      862 |     });
      863 |
      864 |     test("should handle extremely long ticker symbols", async () => {

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:861:31)

  ‚óè Analysts Routes ‚Ä∫ Error Handling ‚Ä∫ should handle special characters in ticker

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      876 |       );
      877 |
    > 878 |       expect(response.status).toBe(200);
          |                               ^
      879 |     });
      880 |   });
      881 |

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:878:31)

  ‚óè Analysts Routes ‚Ä∫ Performance ‚Ä∫ should handle concurrent requests

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      933 |
      934 |       responses.forEach((response) => {
    > 935 |         expect(response.status).toBe(200);
          |                                 ^
      936 |       });
      937 |     });
      938 |   });

      at toBe (tests/integration/routes/analysts.integration.test.js:935:33)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/routes/analysts.integration.test.js:934:17)

  ‚óè Analysts Routes ‚Ä∫ Edge Cases ‚Ä∫ should handle numeric tickers

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      952 |       );
      953 |
    > 954 |       expect(response.status).toBe(200);
          |                               ^
      955 |
      956 |       if (response.status === 200) {
      957 |         expect(response.body.ticker).toBe("123");

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:954:31)

  ‚óè Analysts Routes ‚Ä∫ Edge Cases ‚Ä∫ should handle very large pagination values

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      964 |       );
      965 |
    > 966 |       expect(response.status).toBe(200);
          |                               ^
      967 |
      968 |       if (response.status === 200) {
      969 |         expect(response.body.pagination.page).toBe(999999);

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:966:31)

  ‚óè Analysts Routes ‚Ä∫ Edge Cases ‚Ä∫ should handle URL encoded parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      977 |       );
      978 |
    > 979 |       expect(response.status).toBe(200);
          |                               ^
      980 |
      981 |       if (response.status === 200) {
      982 |         expect(response.body.ticker).toBe("BRK.A");

      at Object.toBe (tests/integration/routes/analysts.integration.test.js:979:31)

FAIL tests/security/authentication-security.test.js
  ‚óè Authentication Security Tests ‚Ä∫ JWT Token Validation ‚Ä∫ should reject requests without authorization header

    expect(received).toMatch(expected)

    Expected pattern: /authentication.*required/i
    Received string:  "Access token required"

      25 |         .expect(401);
      26 |
    > 27 |       expect(response.body.error).toMatch(/authentication.*required/i);
         |                                   ^
      28 |       expect(response.body.code).toBe("MISSING_TOKEN");
      29 |     });
      30 |

      at Object.toMatch (tests/security/authentication-security.test.js:27:35)

  ‚óè Authentication Security Tests ‚Ä∫ JWT Token Validation ‚Ä∫ should reject expired JWT tokens

    expect(received).toMatch(expected)

    Matcher error: received value must be a string

    Received has value: undefined

      61 |
      62 |       expect(response.body.error).toMatch(/invalid.*token|token.*expired/i);
    > 63 |       expect(response.body.code).toMatch(/TOKEN_EXPIRED|INVALID_TOKEN/);
         |                                  ^
      64 |     });
      65 |
      66 |     test("should reject tokens with invalid signatures", async () => {

      at Object.toMatch (tests/security/authentication-security.test.js:63:34)

  ‚óè Authentication Security Tests ‚Ä∫ JWT Token Validation ‚Ä∫ should reject tokens with invalid signatures

    expect(received).toBe(expected) // Object.is equality

    Expected: "INVALID_TOKEN"
    Received: undefined

      73 |
      74 |       expect(response.body.error).toMatch(/invalid.*token/i);
    > 75 |       expect(response.body.code).toBe("INVALID_TOKEN");
         |                                  ^
      76 |     });
      77 |
      78 |     test("should reject tokens with missing required claims", async () => {

      at Object.toBe (tests/security/authentication-security.test.js:75:34)

  ‚óè Authentication Security Tests ‚Ä∫ JWT Token Validation ‚Ä∫ should reject tokens with missing required claims

    expected 401 "Unauthorized", got 200 "OK"

      85 |         .get("/api/portfolio/holdings")
      86 |         .set("Authorization", `Bearer ${tokenWithoutSub}`)
    > 87 |         .expect(401);
         |          ^
      88 |
      89 |       expect(response.body.error).toBeDefined();
      90 |       expect(response.body.code).toBeDefined();

      at Object.expect (tests/security/authentication-security.test.js:87:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Authentication Security Tests ‚Ä∫ JWT Token Validation ‚Ä∫ should reject tokens with future issued at time

    expected 401 "Unauthorized", got 200 "OK"

      100 |         .get("/api/portfolio/holdings")
      101 |         .set("Authorization", `Bearer ${futureToken}`)
    > 102 |         .expect(401);
          |          ^
      103 |
      104 |       expect(response.body.error).toBeDefined();
      105 |     });

      at Object.expect (tests/security/authentication-security.test.js:102:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Authentication Security Tests ‚Ä∫ API Key Security ‚Ä∫ should encrypt API keys before storage

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      234 |
      235 |       // Verify that the API key service was called
    > 236 |       expect(storeSpy).toHaveBeenCalled();
          |                        ^
      237 |
      238 |       storeSpy.mockRestore();
      239 |     });

      at Object.toHaveBeenCalled (tests/security/authentication-security.test.js:236:24)

  ‚óè Authentication Security Tests ‚Ä∫ API Key Security ‚Ä∫ should use different salts for different users

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 2
    Received number of calls: 0

      314 |         });
      315 |
    > 316 |       expect(storeSpy).toHaveBeenCalledTimes(2);
          |                        ^
      317 |
      318 |       // Verify different users were passed to the service
      319 |       const call1User = storeSpy.mock.calls[0][0];

      at Object.toHaveBeenCalledTimes (tests/security/authentication-security.test.js:316:24)

  ‚óè Authentication Security Tests ‚Ä∫ Error Information Disclosure ‚Ä∫ should use generic error messages for security-sensitive operations

    expect(received).toMatch(expected)

    Expected pattern: /authentication|authorization/i
    Received string:  "Access token required"

      482 |
      483 |       // Should not reveal whether the provider exists or what went wrong specifically
    > 484 |       expect(response.body.error).toMatch(/authentication|authorization/i);
          |                                   ^
      485 |       expect(response.body.error).not.toMatch(
      486 |         /provider.*not.*found|invalid.*provider/i
      487 |       );

      at Object.toMatch (tests/security/authentication-security.test.js:484:35)

FAIL tests/integration/routes/dividend.integration.test.js
  ‚óè Dividend Routes Integration Tests ‚Ä∫ GET /api/dividend/:symbol (Stock Dividend Data) ‚Ä∫ should handle non-dividend paying stocks

    expect(received).toEqual(expected) // deep equality

    - Expected  -  1
    + Received  + 11

    - Array []
    + Array [
    +   Object {
    +     "amount": 0,
    +     "currency": "USD",
    +     "dividend_type": "regular",
    +     "ex_date": "2025-10-05T05:00:00.000Z",
    +     "frequency": "None",
    +     "payment_date": "2025-10-20T05:00:00.000Z",
    +     "record_date": "2025-10-07T05:00:00.000Z",
    +   },
    + ]

      92 |
      93 |         if (response.status === 200) {
    > 94 |           expect(response.body.data.dividends).toEqual([]);
         |                                                ^
      95 |           expect(response.body.data.dividend_yield).toBeNull();
      96 |         }
      97 |       }

      at Object.toEqual (tests/integration/routes/dividend.integration.test.js:94:48)

  ‚óè Dividend Routes Integration Tests ‚Ä∫ GET /api/dividend/calendar (Dividend Calendar) ‚Ä∫ should return upcoming dividend events

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      129 |         expect(response.body).toHaveProperty("success", true);
      130 |         expect(response.body).toHaveProperty("data");
    > 131 |         expect(Array.isArray(response.body.data)).toBe(true);
          |                                                   ^
      132 |         expect(response.body).toHaveProperty("period");
      133 |
      134 |         if (response.body.data.length > 0) {

      at Object.toBe (tests/integration/routes/dividend.integration.test.js:131:51)

  ‚óè Dividend Routes Integration Tests ‚Ä∫ GET /api/dividend/calendar (Dividend Calendar) ‚Ä∫ should handle sector filter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      186 |         );
      187 |
    > 188 |         expect([200, 400, 500, 503].includes(response.status)).toBe(true);
          |                                                                ^
      189 |       }
      190 |     });
      191 |   });

      at Object.toBe (tests/integration/routes/dividend.integration.test.js:188:64)

  ‚óè Dividend Routes Integration Tests ‚Ä∫ GET /api/dividend/aristocrats (Dividend Aristocrats) ‚Ä∫ should return dividend aristocrat stocks

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      195 |       const response = await request(app).get("/api/dividend/aristocrats");
      196 |
    > 197 |       expect(response.status).toBe(200);
          |                               ^
      198 |
      199 |       if (response.status === 200) {
      200 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/dividend.integration.test.js:197:31)

  ‚óè Dividend Routes Integration Tests ‚Ä∫ GET /api/dividend/growth (Dividend Growth Analysis) ‚Ä∫ should return dividend growth analysis

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      251 |       );
      252 |
    > 253 |       expect(response.status).toBe(200);
          |                               ^
      254 |
      255 |       if (response.status === 200) {
      256 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/dividend.integration.test.js:253:31)

  ‚óè Dividend Routes Integration Tests ‚Ä∫ GET /api/dividend/growth (Dividend Growth Analysis) ‚Ä∫ should handle growth period parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      277 |         );
      278 |
    > 279 |         expect([200, 400].includes(response.status)).toBe(true);
          |                                                      ^
      280 |       }
      281 |     });
      282 |

      at Object.toBe (tests/integration/routes/dividend.integration.test.js:279:54)

  ‚óè Dividend Routes Integration Tests ‚Ä∫ GET /api/dividend/screener (Dividend Stock Screener) ‚Ä∫ should return dividend stock screening results

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      305 |       const response = await request(app).get("/api/dividend/screener");
      306 |
    > 307 |       expect(response.status).toBe(200);
          |                               ^
      308 |
      309 |       if (response.status === 200) {
      310 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/dividend.integration.test.js:307:31)

  ‚óè Dividend Routes Integration Tests ‚Ä∫ GET /api/dividend/forecast (Dividend Forecasting) ‚Ä∫ should return dividend payment forecasts

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      388 |       );
      389 |
    > 390 |       expect(response.status).toBe(200);
          |                               ^
      391 |
      392 |       if (response.status === 200) {
      393 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/dividend.integration.test.js:390:31)

  ‚óè Dividend Routes Integration Tests ‚Ä∫ GET /api/dividend/forecast (Dividend Forecasting) ‚Ä∫ should handle forecast horizon parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      414 |         );
      415 |
    > 416 |         expect([200, 400].includes(response.status)).toBe(true);
          |                                                      ^
      417 |       }
      418 |     });
      419 |   });

      at Object.toBe (tests/integration/routes/dividend.integration.test.js:416:54)

  ‚óè Dividend Routes Integration Tests ‚Ä∫ Performance and Edge Cases ‚Ä∫ should handle special symbol characters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 400

      495 |         const response = await request(app).get(`/api/dividend/${symbol}`);
      496 |
    > 497 |         expect(response.status).toBe(200);
          |                                 ^
      498 |       }
      499 |     });
      500 |

      at Object.toBe (tests/integration/routes/dividend.integration.test.js:497:33)

  ‚óè Dividend Routes Integration Tests ‚Ä∫ Performance and Edge Cases ‚Ä∫ should validate yield calculation accuracy

    expect(received).toBeLessThan(expected)

    Expected: < 50
    Received:   95.20000000000002

      527 |         const dividendYield = response.body.data.dividend_yield;
      528 |         expect(dividendYield).toBeGreaterThanOrEqual(0);
    > 529 |         expect(dividendYield).toBeLessThan(50); // Reasonable upper bound for dividend yields
          |                               ^
      530 |         expect(Number.isFinite(dividendYield)).toBe(true);
      531 |       }
      532 |     });

      at Object.toBeLessThan (tests/integration/routes/dividend.integration.test.js:529:31)

  ‚óè Dividend Routes Integration Tests ‚Ä∫ Performance and Edge Cases ‚Ä∫ should handle stress testing with multiple concurrent requests

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      543 |       responses.forEach((response) => {
      544 |         if (response.status) {
    > 545 |           expect(response.status).toBe(200);
          |                                   ^
      546 |         }
      547 |       });
      548 |     });

      at toBe (tests/integration/routes/dividend.integration.test.js:545:35)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/routes/dividend.integration.test.js:543:17)

FAIL tests/integration/routes/trades.integration.test.js
  ‚óè Trades Routes ‚Ä∫ GET /api/trades/recent ‚Ä∫ should return 501 not implemented

    expect(received).toHaveProperty(path)

    Expected path: "troubleshooting"
    Received path: []

    Received value: {"details": "column th.side does not exist", "error": "Recent trades not implemented", "filters": {"days": 7, "limit": 20, "symbol": null, "type": "all"}, "message": "Recent trades feature is temporarily disabled", "success": false}

      65 |       );
      66 |       expect(response.body).toHaveProperty("details");
    > 67 |       expect(response.body).toHaveProperty("troubleshooting");
         |                             ^
      68 |       expect(response.body).toHaveProperty("filters");
      69 |       expect(response.body).toHaveProperty("timestamp");
      70 |     });

      at Object.toHaveProperty (tests/integration/routes/trades.integration.test.js:67:29)

  ‚óè Trades Routes ‚Ä∫ GET /api/trades/recent ‚Ä∫ should handle query parameters

    expect(received).toHaveProperty(path, value)

    Expected path: "status"
    Received path: []

    Expected value: "executed"
    Received value: {"days": 30, "limit": 10, "symbol": "AAPL", "type": "buy"}

      82 |       expect(response.body.filters).toHaveProperty("symbol", "AAPL");
      83 |       expect(response.body.filters).toHaveProperty("type", "buy");
    > 84 |       expect(response.body.filters).toHaveProperty("status", "executed");
         |                                     ^
      85 |     });
      86 |
      87 |     test("should use default values for missing parameters", async () => {

      at Object.toHaveProperty (tests/integration/routes/trades.integration.test.js:84:37)

  ‚óè Trades Routes ‚Ä∫ GET /api/trades/recent ‚Ä∫ should use default values for missing parameters

    expect(received).toHaveProperty(path, value)

    Expected path: "status"
    Received path: []

    Expected value: "all"
    Received value: {"days": 7, "limit": 20, "symbol": null, "type": "all"}

       95 |       expect(response.body.filters).toHaveProperty("symbol", null);
       96 |       expect(response.body.filters).toHaveProperty("type", "all");
    >  97 |       expect(response.body.filters).toHaveProperty("status", "all");
          |                                     ^
       98 |     });
       99 |
      100 |     test("should require authentication", async () => {

      at Object.toHaveProperty (tests/integration/routes/trades.integration.test.js:97:37)

  ‚óè Trades Routes ‚Ä∫ GET /api/trades/analytics ‚Ä∫ should return comprehensive trade analytics

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      229 |         .set("Authorization", "Bearer dev-bypass-token");
      230 |
    > 231 |       expect(response.status).toBe(200);
          |                               ^
      232 |
      233 |       if (response.status === 200) {
      234 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/trades.integration.test.js:231:31)

  ‚óè Trades Routes ‚Ä∫ GET /api/trades/analytics ‚Ä∫ should handle timeframe parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      259 |           .set("Authorization", "Bearer dev-bypass-token");
      260 |
    > 261 |         expect(response.status).toBe(200);
          |                                 ^
      262 |
      263 |         if (response.status === 200) {
      264 |           expect(response.body.metadata.timeframe).toBe(timeframe);

      at Object.toBe (tests/integration/routes/trades.integration.test.js:261:33)

  ‚óè Trades Routes ‚Ä∫ GET /api/trades/export ‚Ä∫ should export trade data as JSON by default

    expect(received).toHaveProperty(path)

    Expected path: "data"
    Received path: []

    Received value: {}

      420 |
      421 |       if (response.status === 200) {
    > 422 |         expect(response.body).toHaveProperty("data");
          |                               ^
      423 |         expect(Array.isArray(response.body.data)).toBe(true);
      424 |       }
      425 |     });

      at Object.toHaveProperty (tests/integration/routes/trades.integration.test.js:422:31)

FAIL tests/integration/auth/auth-flow.integration.test.js
  ‚óè Authentication Flow Integration ‚Ä∫ Token-Based Authentication Flow ‚Ä∫ should handle missing authorization header

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 403, 500]

      87 |         const response = await request(app).get(endpoint);
      88 |
    > 89 |         expect([401, 403, 500]).toContain(response.status);
         |                                 ^
      90 |
      91 |         // Should return authentication error
      92 |         if (response.status === 401 || response.status === 403) {

      at Object.toContain (tests/integration/auth/auth-flow.integration.test.js:89:33)

FAIL tests/unit/routes/scores.test.js
  ‚óè Scores Routes Unit Tests ‚Ä∫ GET /scores/composite ‚Ä∫ should return composite scoring with proper structure

    expect(received).toContain(expected) // indexOf

    Expected value: 404
    Received array: [401]

      254 |         expect(response.body.data.methodology).toHaveProperty("factors");
      255 |       } else {
    > 256 |         expect([401]).toContain(response.status);
          |                       ^
      257 |       }
      258 |     });
      259 |

      at Object.toContain (tests/unit/routes/scores.test.js:256:23)

  ‚óè Scores Routes Unit Tests ‚Ä∫ GET /scores/esg ‚Ä∫ should return ESG scoring with proper structure

    expect(received).toContain(expected) // indexOf

    Expected value: 404
    Received array: [401]

      363 |         expect(response.body.data.methodology).toHaveProperty("data_sources");
      364 |       } else {
    > 365 |         expect([401]).toContain(response.status);
          |                       ^
      366 |       }
      367 |     });
      368 |

      at Object.toContain (tests/unit/routes/scores.test.js:365:23)

  ‚óè Scores Routes Unit Tests ‚Ä∫ Response format ‚Ä∫ should include pagination metadata when available

    expect(received).toHaveProperty(path)

    Expected path: "currentPage"
    Received path: []

    Received value: {"hasMore": true, "limit": 25, "page": 2, "total": 57, "totalPages": 3}

      533 |       expect(response.body).toHaveProperty("data");
      534 |       if (response.body.pagination) {
    > 535 |         expect(response.body.pagination).toHaveProperty("currentPage");
          |                                          ^
      536 |         expect(response.body.pagination).toHaveProperty("itemsPerPage");
      537 |       }
      538 |     });

      at Object.toHaveProperty (tests/unit/routes/scores.test.js:535:42)

FAIL tests/integration/routes/strategyBuilder.integration.test.js
  ‚óè Strategy Builder Routes ‚Ä∫ POST /api/strategies/run-ai-strategy ‚Ä∫ should return 501 not implemented

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      252 |         });
      253 |
    > 254 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      255 |       expect(response.body).toHaveProperty("success", false);
      256 |       expect(response.body).toHaveProperty("error");
      257 |       expect(response.body.error).toContain("not implemented");

      at Object.toContain (tests/integration/routes/strategyBuilder.integration.test.js:254:41)

  ‚óè Strategy Builder Routes ‚Ä∫ POST /api/strategies/run-ai-strategy ‚Ä∫ should handle config parameters

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      306 |         });
      307 |
    > 308 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      309 |       expect(response.body.error).toContain("not implemented");
      310 |     });
      311 |

      at Object.toContain (tests/integration/routes/strategyBuilder.integration.test.js:308:41)

  ‚óè Strategy Builder Routes ‚Ä∫ POST /api/strategies/run-ai-strategy ‚Ä∫ should handle missing symbols

    expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [400, 422]

      322 |         });
      323 |
    > 324 |       expect([400, 422]).toContain(response.status);
          |                          ^
      325 |       expect(response.body).toHaveProperty("success", false);
      326 |       expect(response.body).toHaveProperty("error");
      327 |       expect(response.body.error).toContain("symbol");

      at Object.toContain (tests/integration/routes/strategyBuilder.integration.test.js:324:26)

  ‚óè Strategy Builder Routes ‚Ä∫ POST /api/strategies/deploy-hft ‚Ä∫ should return 501 not implemented

    expect(received).toContain(expected) // indexOf

    Expected substring: "not implemented"
    Received string:    "HFT deployment failed"

      366 |       expect(response.body).toHaveProperty("success", false);
      367 |       expect(response.body).toHaveProperty("error");
    > 368 |       expect(response.body.error).toContain("not implemented");
          |                                   ^
      369 |     });
      370 |
      371 |     test("should require strategy and backtest results", async () => {

      at Object.toContain (tests/integration/routes/strategyBuilder.integration.test.js:368:35)

  ‚óè Strategy Builder Routes ‚Ä∫ POST /api/strategies/deploy-hft ‚Ä∫ should handle qualifying strategy

    expect(received).toContain(expected) // indexOf

    Expected substring: "not implemented"
    Received string:    "HFT deployment failed"

      430 |
      431 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
    > 432 |       expect(response.body.error).toContain("not implemented");
          |                                   ^
      433 |     });
      434 |
      435 |     test("should handle edge case qualification values", async () => {

      at Object.toContain (tests/integration/routes/strategyBuilder.integration.test.js:432:35)

  ‚óè Strategy Builder Routes ‚Ä∫ POST /api/strategies/deploy-hft ‚Ä∫ should handle edge case qualification values

    expect(received).toContain(expected) // indexOf

    Expected substring: "not implemented"
    Received string:    "HFT deployment failed"

      452 |
      453 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
    > 454 |       expect(response.body.error).toContain("not implemented");
          |                                   ^
      455 |     });
      456 |   });
      457 |

      at Object.toContain (tests/integration/routes/strategyBuilder.integration.test.js:454:35)

  ‚óè Strategy Builder Routes ‚Ä∫ GET /api/strategies/list ‚Ä∫ should return 501 not implemented

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      506 |         .set("Authorization", "Bearer dev-bypass-token");
      507 |
    > 508 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      509 |       expect(response.body).toHaveProperty("success", false);
      510 |       expect(response.body).toHaveProperty("error");
      511 |       expect(response.body.error).toContain("not implemented");

      at Object.toContain (tests/integration/routes/strategyBuilder.integration.test.js:508:41)

  ‚óè Strategy Builder Routes ‚Ä∫ GET /api/strategies/list ‚Ä∫ should handle query parameters

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      519 |         .set("Authorization", "Bearer dev-bypass-token");
      520 |
    > 521 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      522 |       expect(response.body.error).toContain("not implemented");
      523 |     });
      524 |

      at Object.toContain (tests/integration/routes/strategyBuilder.integration.test.js:521:41)

  ‚óè Strategy Builder Routes ‚Ä∫ GET /api/strategies/list ‚Ä∫ should handle boolean query parameters

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      530 |         .set("Authorization", "Bearer dev-bypass-token");
      531 |
    > 532 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      533 |       expect(response.body.error).toContain("not implemented");
      534 |     });
      535 |   });

      at Object.toContain (tests/integration/routes/strategyBuilder.integration.test.js:532:41)

FAIL tests/integration/routes/economic.integration.test.js
  ‚óè Economic Routes Integration Tests ‚Ä∫ GET /api/economic (Economic Data) ‚Ä∫ should handle invalid pagination parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

       99 |         const response = await request(app).get(`/api/economic?${params}`);
      100 |
    > 101 |         expect([200, 400, 500, 503].includes(response.status)).toBe(true);
          |                                                                ^
      102 |       }
      103 |     });
      104 |   });

      at Object.toBe (tests/integration/routes/economic.integration.test.js:101:64)

  ‚óè Economic Routes Integration Tests ‚Ä∫ GET /api/economic/indicators ‚Ä∫ should handle category filter for indicators

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      148 |         );
      149 |
    > 150 |         expect([200, 400].includes(response.status)).toBe(true);
          |                                                      ^
      151 |       }
      152 |     });
      153 |   });

      at Object.toBe (tests/integration/routes/economic.integration.test.js:150:54)

  ‚óè Economic Routes Integration Tests ‚Ä∫ GET /api/economic/forecast ‚Ä∫ should return economic forecasts

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      312 |       );
      313 |
    > 314 |       expect(response.status).toBe(200);
          |                               ^
      315 |
      316 |       if (response.status === 200) {
      317 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/economic.integration.test.js:314:31)

  ‚óè Economic Routes Integration Tests ‚Ä∫ GET /api/economic/forecast ‚Ä∫ should handle forecast horizon parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      331 |         );
      332 |
    > 333 |         expect([200, 400].includes(response.status)).toBe(true);
          |                                                      ^
      334 |       }
      335 |     });
      336 |

      at Object.toBe (tests/integration/üßπ Global test teardown complete
routes/economic.integration.test.js:333:54)

  ‚óè Economic Routes Integration Tests ‚Ä∫ GET /api/economic/forecast ‚Ä∫ should handle confidence level parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      340 |       );
      341 |
    > 342 |       expect([200, 400].includes(response.status)).toBe(true);
          |                                                    ^
      343 |     });
      344 |   });
      345 |

      at Object.toBe (tests/integration/routes/economic.integration.test.js:342:52)

  ‚óè Economic Routes Integration Tests ‚Ä∫ Performance and Edge Cases ‚Ä∫ should handle concurrent requests to economic endpoints

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      387 |
      388 |       responses.forEach((response) => {
    > 389 |         expect(response.status).toBe(200);
          |                                 ^
      390 |       });
      391 |     });
      392 |

      at toBe (tests/integration/routes/economic.integration.test.js:389:33)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/routes/economic.integration.test.js:388:17)

  ‚óè Economic Routes Integration Tests ‚Ä∫ Performance and Edge Cases ‚Ä∫ should handle SQL injection attempts

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      453 |       );
      454 |
    > 455 |       expect([200, 400].includes(response.status)).toBe(true);
          |                                                    ^
      456 |     });
      457 |
      458 |     test("should handle memory pressure with large datasets", async () => {

      at Object.toBe (tests/integration/routes/economic.integration.test.js:455:52)

FAIL tests/integration/routes/websocket.integration.test.js
  ‚óè WebSocket Routes ‚Ä∫ DELETE /api/websocket/subscribe ‚Ä∫ should handle full unsubscription

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      574 |         .send({});
      575 |
    > 576 |       expect(response.status).toBe(200);
          |                               ^
      577 |
      578 |       if (response.status === 200) {
      579 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/websocket.integration.test.js:576:31)

FAIL tests/integration/routes/etf.integration.test.js
  ‚óè ETF Routes Integration Tests ‚Ä∫ Performance and Edge Cases ‚Ä∫ should handle authentication edge cases for protected endpoints

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      496 |         .set("Authorization", "Bearer invalid-token");
      497 |
    > 498 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      499 |     });
      500 |
      501 |     test("should handle stress testing with multiple concurrent requests", async () => {

      at Object.toBe (tests/integration/routes/etf.integration.test.js:498:52)

FAIL tests/integration/services/cross-service-integration.test.js
  ‚óè Cross-Service Integration ‚Ä∫ Portfolio ‚Üí Market Data ‚Üí Risk Analysis Integration ‚Ä∫ should integrate market data with technical analysis

    expect(received).toContain(expected) // indexOf

    Expected value: 404
    Received array: [200, 400, 401, 500, 501]

      73 |           });
      74 |
    > 75 |         expect([200, 400, 401, 500, 501]).toContain(technicalResponse.status);
         |                                           ^
      76 |
      77 |         if (technicalResponse.status === 200) {
      78 |           expect(technicalResponse.body).toHaveProperty("success", true);

      at Object.toContain (tests/integration/services/cross-service-integration.test.js:75:43)

  ‚óè Cross-Service Integration ‚Ä∫ Authentication ‚Üí Database ‚Üí Service Integration ‚Ä∫ should handle database transactions across multiple services

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 400

      112 |         .send(orderData);
      113 |
    > 114 |       expect(response.status).toBe(200);
          |                               ^
      115 |
      116 |       // If order is processed, it should involve:
      117 |       // 1. Order validation service

      at Object.toBe (tests/integration/services/cross-service-integration.test.js:114:31)

  ‚óè Cross-Service Integration ‚Ä∫ Error Recovery Integration ‚Ä∫ should handle service failure cascades gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 400

      244 |         });
      245 |
    > 246 |       expect(response.status).toBe(200);
          |                               ^
      247 |
      248 |       // Should handle complex operation failures without crashing
      249 |       expect(response.body).toHaveProperty("success");

      at Object.toBe (tests/integration/services/cross-service-integration.test.js:246:31)

FAIL tests/unit/routes/signals.test.js
  ‚óè Signals Route - Unit Tests ‚Ä∫ GET /api/signals/buy ‚Ä∫ should handle different timeframes

    expect(received).toHaveProperty(path, value)

    Expected path: "signal_type"

    Expected value: "buy"
    Received value: "BUY"

      73 |         expect(response.body).toHaveProperty("error");
      74 |       } else {
    > 75 |         expect(response.body).toHaveProperty("signal_type", "buy");
         |                               ^
      76 |       }
      77 |     });
      78 |

      at Object.toHaveProperty (tests/unit/routes/signals.test.js:75:31)

  ‚óè Signals Route - Unit Tests ‚Ä∫ GET /api/signals/buy ‚Ä∫ should validate timeframe parameter

    expected 400 "Bad Request", got 200 "OK"

      80 |       const response = await request(app)
      81 |         .get("/api/signals/buy?timeframe=invalid")
    > 82 |         .expect(400);
         |          ^
      83 |
      84 |       expect(response.body.success).toBe(false);
      85 |       expect(response.body.error).toContain("Invalid timeframe");

      at Object.expect (tests/unit/routes/signals.test.js:82:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Signals Route - Unit Tests ‚Ä∫ GET /api/signals/sell ‚Ä∫ should get sell signals

    expect(received).toHaveProperty(path, value)

    Expected path: "signal_type"

    Expected value: "sell"
    Received value: "SELL"

      130 |         expect(response.body).toHaveProperty("error");
      131 |       } else {
    > 132 |         expect(response.body).toHaveProperty("signal_type", "sell");
          |                               ^
      133 |       }
      134 |     });
      135 |

      at Object.toHaveProperty (tests/unit/routes/signals.test.js:132:31)

  ‚óè Signals Route - Unit Tests ‚Ä∫ GET /api/signals/technical ‚Ä∫ should return technical analysis signals

    expect(received).toHaveProperty(path, value)

    Expected path: "signal_type"
    Received path: []

    Expected value: "technical"
    Received value: {"data": [], "success": true, "summary": {"avg_confidence": null, "avg_risk": null, "buy_signals": 0, "sell_signals": 0, "total_signals": 0}, "symbol": "TECHNICAL", "timeframe": "daily", "timestamp": "2025-09-23T16:31:50.580Z"}

      164 |         expect(response.body).toHaveProperty("pagination");
      165 |       } else {
    > 166 |         expect(response.body).toHaveProperty("signal_type", "technical");
          |                               ^
      167 |         expect(response.body).toHaveProperty("indicators");
      168 |
      169 |         if (response.body.data.length > 0) {

      at Object.toHaveProperty (tests/unit/routes/signals.test.js:166:31)

  ‚óè Signals Route - Unit Tests ‚Ä∫ GET /api/signals/technical ‚Ä∫ should filter by specific indicators

    expect(received).toHaveProperty(path)

    Expected path: "indicators"
    Received path: []

    Received value: {"data": [], "success": true, "summary": {"avg_confidence": null, "avg_risk": null, "buy_signals": 0, "sell_signals": 0, "total_signals": 0}, "symbol": "TECHNICAL", "timeframe": "daily", "timestamp": "2025-09-23T16:31:50.583Z"}

      183 |
      184 |       expect(response.body).toHaveProperty("data");
    > 185 |       expect(response.body).toHaveProperty("indicators");
          |                             ^
      186 |
      187 |       if (response.body.indicators) {
      188 |         expect(response.body.indicators).toContain("RSI");

      at Object.toHaveProperty (tests/unit/routes/signals.test.js:185:29)

  ‚óè Signals Route - Unit Tests ‚Ä∫ GET /api/signals/momentum ‚Ä∫ should return momentum signals

    expect(received).toHaveProperty(path, value)

    Expected path: "signal_type"
    Received path: []

    Expected value: "momentum"
    Received value: {"data": [], "success": true, "summary": {"avg_confidence": null, "avg_risk": null, "buy_signals": 0, "sell_signals": 0, "total_signals": 0}, "symbol": "MOMENTUM", "timeframe": "daily", "timestamp": "2025-09-23T16:31:50.595Z"}

      24 |     } else if (expectedSignalType) {
      25 |       // Normal operation mode
    > 26 |       expect(response.body).toHaveProperty("signal_type", expectedSignalType);
         |                             ^
      27 |     }
      28 |   };
      29 |

      at toHaveProperty (tests/unit/routes/signals.test.js:26:29)
      at Object.expectValidResponse (tests/unit/routes/signals.test.js:230:7)

  ‚óè Signals Route - Unit Tests ‚Ä∫ GET /api/signals/options ‚Ä∫ should return options signals

    expect(received).toHaveProperty(path, value)

    Expected path: "signal_type"
    Received path: []

    Expected value: "options"
    Received value: {"data": [], "success": true, "summary": {"avg_confidence": null, "avg_risk": null, "buy_signals": 0, "sell_signals": 0, "total_signals": 0}, "symbol": "OPTIONS", "timeframe": "daily", "timestamp": "2025-09-23T16:31:50.603Z"}

      277 |       expect(response.body).toHaveProperty("data");
      278 |       expect(Array.isArray(response.body.data)).toBe(true);
    > 279 |       expect(response.body).toHaveProperty("signal_type", "options");
          |                             ^
      280 |
      281 |       if (response.body.data.length > 0) {
      282 |         const signal = response.body.data[0];

      at Object.toHaveProperty (tests/unit/routes/signals.test.js:279:29)

  ‚óè Signals Route - Unit Tests ‚Ä∫ GET /api/signals/sentiment ‚Ä∫ should return sentiment-based signals

    expect(received).toHaveProperty(path, value)

    Expected path: "signal_type"
    Received path: []

    Expected value: "sentiment"
    Received value: {"data": [], "success": true, "summary": {"avg_confidence": null, "avg_risk": null, "buy_signals": 0, "sell_signals": 0, "total_signals": 0}, "symbol": "SENTIMENT", "timeframe": "daily", "timestamp": "2025-09-23T16:31:50.615Z"}

      338 |       expect(response.body).toHaveProperty("data");
      339 |       expect(Array.isArray(response.body.data)).toBe(true);
    > 340 |       expect(response.body).toHaveProperty("signal_type", "sentiment");
          |                             ^
      341 |
      342 |       if (response.body.data.length > 0) {
      343 |         const signal = response.body.data[0];

      at Object.toHaveProperty (tests/unit/routes/signals.test.js:340:29)

  ‚óè Signals Route - Unit Tests ‚Ä∫ GET /api/signals/earnings ‚Ä∫ should return earnings-based signals

    expect(received).toHaveProperty(path, value)

    Expected path: "signal_type"
    Received path: []

    Expected value: "earnings"
    Received value: {"data": [], "success": true, "summary": {"avg_confidence": null, "avg_risk": null, "buy_signals": 0, "sell_signals": 0, "total_signals": 0}, "symbol": "EARNINGS", "timeframe": "daily", "timestamp": "2025-09-23T16:31:50.626Z"}

      402 |       expect(response.body).toHaveProperty("data");
      403 |       expect(Array.isArray(response.body.data)).toBe(true);
    > 404 |       expect(response.body).toHaveProperty("signal_type", "earnings");
          |                             ^
      405 |
      406 |       if (response.body.data.length > 0) {
      407 |         const signal = response.body.data[0];

      at Object.toHaveProperty (tests/unit/routes/signals.test.js:404:29)

  ‚óè Signals Route - Unit Tests ‚Ä∫ GET /api/signals/crypto ‚Ä∫ should return cryptocurrency signals

    expect(received).toHaveProperty(path, value)

    Expected path: "signal_type"
    Received path: []

    Expected value: "crypto"
    Received value: {"data": [], "success": true, "summary": {"avg_confidence": null, "avg_risk": null, "buy_signals": 0, "sell_signals": 0, "total_signals": 0}, "symbol": "CRYPTO", "timeframe": "daily", "timestamp": "2025-09-23T16:31:50.638Z"}

      448 |       expect(response.body).toHaveProperty("data");
      449 |       expect(Array.isArray(response.body.data)).toBe(true);
    > 450 |       expect(response.body).toHaveProperty("signal_type", "crypto");
          |                             ^
      451 |
      452 |       if (response.body.data.length > 0) {
      453 |         const signal = response.body.data[0];

      at Object.toHaveProperty (tests/unit/routes/signals.test.js:450:29)

  ‚óè Signals Route - Unit Tests ‚Ä∫ GET /api/signals/sector-rotation ‚Ä∫ should return sector rotation signals

    expect(received).toHaveProperty(path, value)

    Expected path: "signal_type"
    Received path: []

    Expected value: "sector_rotation"
    Received value: {"data": [], "success": true, "summary": {"avg_confidence": null, "avg_risk": null, "buy_signals": 0, "sell_signals": 0, "total_signals": 0}, "symbol": "SECTOR-ROTATION", "timeframe": "daily", "timestamp": "2025-09-23T16:31:50.645Z"}

      503 |       expect(response.body).toHaveProperty("data");
      504 |       expect(Array.isArray(response.body.data)).toBe(true);
    > 505 |       expect(response.body).toHaveProperty("signal_type", "sector_rotation");
          |                             ^
      506 |
      507 |       if (response.body.data.length > 0) {
      508 |         const signal = response.body.data[0];

      at Object.toHaveProperty (tests/unit/routes/signals.test.js:505:29)

  ‚óè Signals Route - Unit Tests ‚Ä∫ POST /api/signals/custom ‚Ä∫ should create custom signal with valid criteria

    expected 201 "Created", got 404 "Not Found"

      562 |         .post("/api/signals/custom")
      563 |         .send(customSignal)
    > 564 |         .expect(201);
          |          ^
      565 |
      566 |       expect(response.body).toHaveProperty("success", true);
      567 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/signals.test.js:564:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Signals Route - Unit Tests ‚Ä∫ POST /api/signals/custom ‚Ä∫ should validate required fields

    expected 400 "Bad Request", got 404 "Not Found"

      579 |         .post("/api/signals/custom")
      580 |         .send(incompleteSignal)
    > 581 |         .expect(400);
          |          ^
      582 |
      583 |       expect(response.body).toHaveProperty("success", false);
      584 |       expect(response.body).toHaveProperty("error");

      at Object.expect (tests/unit/routes/signals.test.js:581:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Signals Route - Unit Tests ‚Ä∫ POST /api/signals/custom ‚Ä∫ should validate criteria format

    expected 400 "Bad Request", got 404 "Not Found"

      595 |         .post("/api/signals/custom")
      596 |         .send(invalidSignal)
    > 597 |         .expect(400);
          |          ^
      598 |
      599 |       expect(response.body).toHaveProperty("success", false);
      600 |       expect(response.body.error).toContain("criteria");

      at Object.expect (tests/unit/routes/signals.test.js:597:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Signals Route - Unit Tests ‚Ä∫ GET /api/signals/history ‚Ä∫ should return signal history

    expect(received).toHaveProperty(path)

    Expected path: "pagination"
    Received path: []

    Received value: {"data": [], "success": true, "summary": {"avg_confidence": null, "avg_risk": null, "buy_signals": 0, "sell_signals": 0, "total_signals": 0}, "symbol": "HISTORY", "timeframe": "daily", "timestamp": "2025-09-23T16:31:50.658Z"}

      614 |       expect(response.body).toHaveProperty("data");
      615 |       expect(Array.isArray(response.body.data)).toBe(true);
    > 616 |       expect(response.body).toHaveProperty("pagination");
          |                             ^
      617 |
      618 |       if (response.body.data.length > 0) {
      619 |         const signal = response.body.data[0];

      at Object.toHaveProperty (tests/unit/routes/signals.test.js:616:29)

  ‚óè Signals Route - Unit Tests ‚Ä∫ POST /api/signals/alerts ‚Ä∫ should create new signal alert

    expected 201 "Created", got 500 "Internal Server Error"

      722 |         .post("/api/signals/alerts")
      723 |         .send(alertData)
    > 724 |         .expect(201);
          |          ^
      725 |
      726 |       expect(response.body).toHaveProperty("success", true);
      727 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/signals.test.js:724:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Signals Route - Unit Tests ‚Ä∫ GET /api/signals/performance ‚Ä∫ should return signal performance analytics

    expect(received).toHaveProperty(path)

    Expected path: "overall_performance"
    Received path: []

    Received value: []

      742 |
      743 |       expect(response.body).toHaveProperty("data");
    > 744 |       expect(response.body.data).toHaveProperty("overall_performance");
          |                                  ^
      745 |
      746 |       const performance = response.body.data.overall_performance;
      747 |       expect(performance).toHaveProperty("success_rate");

      at Object.toHaveProperty (tests/unit/routes/signals.test.js:744:34)

  ‚óè Signals Route - Unit Tests ‚Ä∫ Error Handling ‚Ä∫ should validate signal type parameters

    expected 404 "Not Found", got 200 "OK"

      810 |       const response = await request(app)
      811 |         .get("/api/signals/invalid_signal_type")
    > 812 |         .expect(404);
          |          ^
      813 |
      814 |       // Should return 404 for unsupported signal types
      815 |     });

      at Object.expect (tests/unit/routes/signals.test.js:812:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Signals Route - Unit Tests ‚Ä∫ Error Handling ‚Ä∫ should handle large limit values

    expect(received).toBeLessThanOrEqual(expected)

    Expected: <= 1000
    Received:    6407

      822 |         expect(response.body.error).toContain("limit");
      823 |       } else {
    > 824 |         expect(response.body.data.length).toBeLessThanOrEqual(1000); // Should be capped
          |                                           ^
      825 |       }
      826 |     });
      827 |

      at Object.toBeLessThanOrEqual (tests/unit/routes/signals.test.js:824:43)

  ‚óè Signals Route - Unit Tests ‚Ä∫ Error Handling ‚Ä∫ should handle malformed request bodies

    expected 400 "Bad Request", got 404 "Not Found"

      830 |         .post("/api/signals/custom")
      831 |         .send("invalid json string")
    > 832 |         .expect(400);
          |          ^
      833 |
      834 |       expect(response.body).toHaveProperty("error");
      835 |     });

      at Object.expect (tests/unit/routes/signals.test.js:832:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Signals Route - Unit Tests ‚Ä∫ Error Handling ‚Ä∫ should handle authentication edge cases

    expected 401 "Unauthorized", got 200 "OK"

      852 |       const response = await request(tempApp)
      853 |         .get("/api/signals/buy")
    > 854 |         .expect(401);
          |          ^
      855 |
      856 |       expect(response.body).toHaveProperty("success", false);
      857 |       expect(response.body).toHaveProperty("error");

      at Object.expect (tests/unit/routes/signals.test.js:854:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Signals Route - Unit Tests ‚Ä∫ Error Handling ‚Ä∫ should handle valid requests

    expect(received).toHaveProperty(path, value)

    Expected path: "signal_type"

    Expected value: "buy"
    Received value: "BUY"

      862 |
      863 |       expect(response.body).toHaveProperty("data");
    > 864 |       expect(response.body).toHaveProperty("signal_type", "buy");
          |                             ^
      865 |     });
      866 |   });
      867 |

      at Object.toHaveProperty (tests/unit/routes/signals.test.js:864:29)

FAIL tests/integration/routes/orders.integration.test.js
  ‚óè Orders Routes Integration Tests ‚Ä∫ GET /api/orders/:orderId (Get Specific Order) ‚Ä∫ should handle order lookup

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      81 |         .set("Authorization", "Bearer dev-bypass-token");
      82 |
    > 83 |       expect([200, 401].includes(response.status)).toBe(true);
         |                                                    ^
      84 |
      85 |       if (response.status === 200) {
      86 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/orders.integration.test.js:83:52)

  ‚óè Orders Routes Integration Tests ‚Ä∫ DELETE /api/orders/:orderId (Cancel Order) ‚Ä∫ should cancel order

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      234 |         .set("Authorization", "Bearer dev-bypass-token");
      235 |
    > 236 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      237 |
      238 |       if (response.status === 200) {
      239 |         // Order deletion successful - no additional validation needed for this test

      at Object.toBe (tests/integration/routes/orders.integration.test.js:236:52)

  ‚óè Orders Routes Integration Tests ‚Ä∫ DELETE /api/orders/:orderId (Cancel Order) ‚Ä∫ should return 404 for non-existent order

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      246 |         .set("Authorization", "Bearer dev-bypass-token");
      247 |
    > 248 |       expect([404, 401, 403, 500].includes(response.status)).toBe(true);
          |                                                              ^
      249 |     });
      250 |
      251 |     test("should require authentication", async () => {

      at Object.toBe (tests/integration/routes/orders.integration.test.js:248:62)

  ‚óè Orders Routes Integration Tests ‚Ä∫ Performance and Edge Cases ‚Ä∫ should handle SQL injection attempts safely

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      375 |           .set("Authorization", "Bearer dev-bypass-token");
      376 |
    > 377 |         expect([200, 400, 401].includes(response.status)).toBe(true);
          |                                                           ^
      378 |       }
      379 |     });
      380 |

      at Object.toBe (tests/integration/routes/orders.integration.test.js:377:59)

FAIL tests/unit/routes/portfolio.test.js
  ‚óè Portfolio Routes Unit Tests ‚Ä∫ GET /portfolio/performance ‚Ä∫ should return performance data

    expect(received).toHaveProperty(path)

    Expected path: "metrics"
    Received path: []

    Received value: {"data": {"metadata": {"message": "No portfolio performance data found", "period": "365 days", "suggestion": "Add trades or holdings to generate performance data", "timeframe": "1y"}, "metrics": {"alpha": 0, "annualizedReturn": 0, "beta": 1, "maxDrawdown": 0, "sharpeRatio": 0, "totalReturn": 0, "totalReturnPercent": 0, "volatility": 0, "winRate": 0}, "performance": []}, "message": "Performance data retrieved (empty dataset)", "success": true, "timestamp": "2025-09-23T16:31:51.499Z"}

      73 |       expect(response.body).toHaveProperty("success");
      74 |       expect(response.body.success).toBe(true);
    > 75 |       expect(response.body).toHaveProperty("metrics");
         |                             ^
      76 |       expect(response.body).toHaveProperty("performance");
      77 |     });
      78 |   });

      at Object.toHaveProperty (tests/unit/routes/portfolio.test.js:75:29)

  ‚óè Portfolio Routes Unit Tests ‚Ä∫ GET /portfolio/analysis ‚Ä∫ should return comprehensive portfolio analysis

    expected 200 "OK", got 404 "Not Found"

      359 |         .get("/portfolio/analysis")
      360 |         .set("Authorization", "Bearer dev-bypass-token")
    > 361 |         .expect(200);
          |          ^
      362 |
      363 |       expect(response.body).toHaveProperty("success", true);
      364 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/portfolio.test.js:361:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Portfolio Routes Unit Tests ‚Ä∫ GET /portfolio/analysis ‚Ä∫ should include sector breakdown

    expected 200 "OK", got 404 "Not Found"

      376 |         .get("/portfolio/analysis?include_sectors=true")
      377 |         .set("Authorization", "Bearer dev-bypass-token")
    > 378 |         .expect(200);
          |          ^
      379 |
      380 |       expect(response.body.success).toBe(true);
      381 |       if (response.body.data.analysis.sectors) {

      at Object.expect (tests/unit/routes/portfolio.test.js:378:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Portfolio Routes Unit Tests ‚Ä∫ GET /portfolio/analysis ‚Ä∫ should handle time period analysis

    expected 200 "OK", got 404 "Not Found"

      393 |         .get("/portfolio/analysis?period=1y")
      394 |         .set("Authorization", "Bearer dev-bypass-token")
    > 395 |         .expect(200);
          |          ^
      396 |
      397 |       expect(response.body.success).toBe(true);
      398 |       if (response.body.data.analysis.period_analysis) {

      at Object.expect (tests/unit/routes/portfolio.test.js:395:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Portfolio Routes Unit Tests ‚Ä∫ POST /portfolio/holdings/add ‚Ä∫ should handle duplicate holdings

    expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [201, 200, 409]

      637 |
      638 |       // Should either create or update existing holding
    > 639 |       expect([201, 200, 409]).toContain(response.status);
          |                               ^
      640 |       expect(response.body).toHaveProperty("success");
      641 |     });
      642 |   });

      at Object.toContain (tests/unit/routes/portfolio.test.js:639:31)

FAIL tests/integration/routes/alerts.integration.test.js
  ‚óè Alerts Routes ‚Ä∫ GET /api/alerts/active ‚Ä∫ should handle query parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: "dev-user-bypass"
    Received: undefined

      50 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
      51 |       expect(response.body.success).toBe(false);
    > 52 |       expect(response.body.user_id).toBe("dev-user-bypass");
         |                                     ^
      53 |     });
      54 |
      55 |     test("should handle include_resolved parameter", async () => {

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:52:37)

  ‚óè Alerts Routes ‚Ä∫ GET /api/alerts ‚Ä∫ should redirect to active alerts

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      67 |       const response = await request(app).get("/api/alerts");
      68 |
    > 69 |       expect([200, 404, 500, 501].includes(response.status)).toBe(true);
         |                                                              ^
      70 |     });
      71 |
      72 |     test("should handle status parameter", async () => {

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:69:62)

  ‚óè Alerts Routes ‚Ä∫ GET /api/alerts ‚Ä∫ should handle status parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      75 |       );
      76 |
    > 77 |       expect([200, 404, 500, 501].includes(response.status)).toBe(true);
         |                                                              ^
      78 |     });
      79 |   });
      80 |

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:77:62)

  ‚óè Alerts Routes ‚Ä∫ PUT /api/alerts/:alertId/acknowledge ‚Ä∫ should acknowledge alert successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      87 |         .send({ action: "acknowledge" });
      88 |
    > 89 |       expect(response.status).toBe(200);
         |                               ^
      90 |       expect(response.body.success).toBe(true);
      91 |       expect(response.body.data.alert_id).toBe(alertId);
      92 |       expect(response.body.data.action).toBe("acknowledge");

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:89:31)

  ‚óè Alerts Routes ‚Ä∫ PUT /api/alerts/:alertId/acknowledge ‚Ä∫ should handle dismiss action

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      104 |         .send({ action: "dismiss" });
      105 |
    > 106 |       expect(response.status).toBe(200);
          |                               ^
      107 |       expect(response.body.success).toBe(true);
      108 |       expect(response.body.data.action).toBe("dismiss");
      109 |       expect(response.body.data.alert_id).toBe(alertId);

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:106:31)

  ‚óè Alerts Routes ‚Ä∫ PUT /api/alerts/:alertId/acknowledge ‚Ä∫ should handle default acknowledge action

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      117 |         .send({});
      118 |
    > 119 |       expect(response.status).toBe(200);
          |                               ^
      120 |       expect(response.body.data.action).toBe("acknowledge");
      121 |     });
      122 |   });

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:119:31)

  ‚óè Alerts Routes ‚Ä∫ PUT /api/alerts/:alertId/snooze ‚Ä∫ should snooze alert with default duration

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      130 |         .send({});
      131 |
    > 132 |       expect(response.status).toBe(200);
          |                               ^
      133 |       expect(response.body.success).toBe(true);
      134 |       expect(response.body.data.alert_id).toBe(alertId);
      135 |       expect(response.body.data.duration_minutes).toBe(60);

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:132:31)

  ‚óè Alerts Routes ‚Ä∫ PUT /api/alerts/:alertId/snooze ‚Ä∫ should snooze alert with custom duration

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      146 |         .send({ duration_minutes: 120 });
      147 |
    > 148 |       expect(response.status).toBe(200);
          |                               ^
      149 |       expect(response.body.data.duration_minutes).toBe(120);
      150 |     });
      151 |

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:148:31)

  ‚óè Alerts Routes ‚Ä∫ PUT /api/alerts/:alertId/snooze ‚Ä∫ should validate snooze_until timestamp

    TypeError: Cannot read properties of undefined (reading 'snooze_until')

      158 |         .send({ duration_minutes: 30 });
      159 |
    > 160 |       const snoozeUntil = new Date(response.body.data.snooze_until);
          |                                                       ^
      161 |       const expectedTime = new Date(beforeRequest + 30 * 60 * 1000);
      162 |
      163 |       expect(response.status).toBe(200);

      at Object.snooze_until (tests/integration/routes/alerts.integration.test.js:160:55)

  ‚óè Alerts Routes ‚Ä∫ POST /api/alerts ‚Ä∫ should create new alert

    expect(received).toContain(expected) // indexOf

    Expected value: 401
    Received array: [200, 201]

      182 |       const response = await request(app).post("/api/alerts").send(alertData);
      183 |
    > 184 |       expect([200, 201]).toContain(response.status);
          |                          ^
      185 |       expect(response.body.success).toBe(true);
      186 |       expect(response.body.data.user_id).toBe("test_user_123");
      187 |       expect(response.body.data.symbol).toBe("AAPL");

      at Object.toContain (tests/integration/routes/alerts.integration.test.js:184:26)

  ‚óè Alerts Routes ‚Ä∫ POST /api/alerts ‚Ä∫ should create alert with defaults

    expect(received).toContain(expected) // indexOf

    Expected value: 401
    Received array: [200, 201]

      209 |       const response = await request(app).post("/api/alerts").send(alertData);
      210 |
    > 211 |       expect([200, 201]).toContain(response.status);
          |                          ^
      212 |       expect(response.body.data.priority).toBe("Medium");
      213 |       expect(response.body.data.notification_methods).toEqual(["email"]);
      214 |     });

      at Object.toContain (tests/integration/routes/alerts.integration.test.js:211:26)

  ‚óè Alerts Routes ‚Ä∫ GET /api/alerts/settings ‚Ä∫ should return comprehensive alert settings

    expect(received).toHaveProperty(path)

    Expected path: "metadata"
    Received path: []

    Received value: {"quick_actions": [{"action": "enable_all_notifications", "description": "Enable all notification channels", "endpoint": "PUT /api/alerts/settings/notifications"}, {"action": "pause_all_alerts", "description": "Temporarily pause all alert delivery", "endpoint": "PUT /api/alerts/settings/pause"}, {"action": "reset_to_defaults", "description": "Reset all settings to recommended defaults", "endpoint": "PUT /api/alerts/settings/reset"}, {"action": "export_settings", "description": "Export current settings as JSON", "endpoint": "GET /api/alerts/settings/export"}], "settings": {"advanced_settings": {"alert_priority_scoring": true, "auto_pause_settings": {"auto_resume": true, "vacation_end": null, "vacation_mode": false, "vacation_start": null}, "batch_alerts": false, "risk_management": {"cool_down_periods": {"high_frequency_symbols": 5, "low_frequency_symbols": 1}, "max_daily_alerts": 50}, "smart_timing": true}, "alert_categories": {"earnings_alerts": {"enabled": true, "post_earnings_enabled": true, "pre_earnings_days": 3, "surprise_threshold": 10}, "market_alerts": {"circuit_breakers": true, "economic_events": true, "enabled": true, "market_open_close": false, "sector_rotation": true, "vix_threshold": 30}, "news_alerts": {"enabled": true, "keywords_blacklist": ["crypto", "bitcoin"], "keywords_whitelist": [], "sentiment_threshold": 0.7, "sources": ["reuters", "bloomberg", "cnbc", "marketwatch"]}, "portfolio_alerts": {"corporate_actions": true, "daily_pnl_threshold": 1000, "dividend_announcements": true, "enabled": true, "margin_alerts": true, "position_change_threshold": 10}, "price_alerts": {"enabled": true, "frequency": "immediate", "include_after_hours": false, "threshold_percentage": 5}, "social_sentiment_alerts": {"enabled": false, "influencer_mentions": true, "mention_threshold": 1000, "platforms": ["twitter", "reddit", "stocktwits"], "sentiment_threshold": 0.8}, "technical_alerts": {"enabled": true, "indicators": {"bollinger_bands": {"enabled": true}, "macd_crossover": {"enabled": true}, "moving_average_cross": {"enabled": true, "periods": [20, 50]}, "rsi_overbought": {"enabled": true, "threshold": 80}, "rsi_oversold": {"enabled": true, "threshold": 20}}, "pattern_alerts": {"breakouts": true, "reversals": true, "support_resistance": true}}, "volume_alerts": {"enabled": true, "frequency": "immediate", "minimum_volume": 1000000, "threshold_multiplier": 2}}, "alert_history": {"duplicate_suppression": true, "max_alerts_per_day": 100, "retention_days": 30, "suppression_window_minutes": 15}, "created_at": "2025-01-15T10:30:00Z", "delivery_settings": {"discord_webhook": null, "email_address": "user@example.com", "phone_number": null, "push_device_tokens": ["device_token_12345"], "quiet_hours": {"days": ["monday", "tuesday", "wednesday", "thursday", "friday"], "enabled": true, "end_time": "07:00", "start_time": "22:00"}, "slack_webhook": null, "time_zone": "America/New_York"}, "integrations": {"third_party_services": {"custom_webhooks": [], "ifttt": {"enabled": false, "webhook_url": null}, "zapier": {"enabled": false, "webhook_url": null}}, "trading_platforms": {"alpaca": {"api_key_set": false, "enabled": false}, "interactive_brokers": {"api_key_set": false, "enabled": false}, "td_ameritrade": {"api_key_set": false, "enabled": false}}}, "last_settings_change": "2025-09-23T16:31:52.000Z", "notification_preferences": {"browser_enabled": false, "discord_enabled": false, "email_enabled": false, "push_enabled": false, "slack_enabled": false, "sms_enabled": false}, "subscription_info": {"alerts_limit_daily": 100, "alerts_used_today": 23, "plan": "premium", "plan_expires": "2025-12-31T23:59:59Z", "premium_features": ["unlimited_alerts", "advanced_indicators", "social_sentiment", "custom_webhooks", "alert_backtesting"]}, "updated_at": "2025-09-23T16:31:52.000Z", "user_id": "dev-user-bypass", "version": "2.1.0", "watchlist_settings": {"default_watchlist_alerts": true, "per_symbol_settings": {"AAPL": {"earnings_priority": "high", "price_threshold": 2.5, "volume_multiplier": 1.5}, "TSLA": {"price_threshold": 7.5, "social_sentiment": true, "volume_multiplier": 3}}}}, "summary": {"alerts_remaining_today": 77, "alerts_used_today": 23, "settings_last_modified": "2025-09-23T16:31:52.000Z", "subscription_plan": "premium", "total_categories_enabled": 7, "total_notification_channels": 0, "watchlist_symbols_with_custom_settings": 2}}

      306 |       expect(response.body.data).toHaveProperty("summary");
      307 |       expect(response.body.data).toHaveProperty("quick_actions");
    > 308 |       expect(response.body.data).toHaveProperty("metadata");
          |                                  ^
      309 |
      310 |       const settings = response.body.data.settings;
      311 |       expect(settings.user_id).toBe("test_user_123");

      at Object.toHaveProperty (tests/integration/routes/alerts.integration.test.js:308:34)

  ‚óè Alerts Routes ‚Ä∫ GET /api/alerts/history ‚Ä∫ should return 501 not implemented

    expect(received).toBe(expected) // Object.is equality

    Expected: "Alert history not implemented"
    Received: "Access token required"

      360 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
      361 |       expect(response.body.success).toBe(false);
    > 362 |       expect(response.body.error).toBe("Alert history not implemented");
          |                                   ^
      363 |       expect(response.body).toHaveProperty("troubleshooting");
      364 |       expect(response.body.user_id).toBe("dev-user-bypass");
      365 |     });

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:362:35)

  ‚óè Alerts Routes ‚Ä∫ GET /api/alerts/webhooks ‚Ä∫ should return 501 not implemented

    expect(received).toBe(expected) // Object.is equality

    Expected: "Alert webhooks not implemented"
    Received: "Access token required"

      412 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
      413 |       expect(response.body.success).toBe(false);
    > 414 |       expect(response.body.error).toBe("Alert webhooks not implemented");
          |                                   ^
      415 |       expect(response.body).toHaveProperty("troubleshooting");
      416 |       expect(response.body.user_id).toBe("dev-user-bypass");
      417 |     });

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:414:35)

  ‚óè Alerts Routes ‚Ä∫ POST /api/alerts/create ‚Ä∫ should create alert with required fields

    expect(received).toContain(expected) // indexOf

    Expected value: 401
    Received array: [200, 201]

      438 |         .send(alertData);
      439 |
    > 440 |       expect([200, 201]).toContain(response.status);
          |                          ^
      441 |       expect(response.body.success).toBe(true);
      442 |       expect(response.body.data.alert.symbol).toBe("NVDA");
      443 |       expect(response.body.data.alert.threshold).toBe(500.0);

      at Object.toContain (tests/integration/routes/alerts.integration.test.js:440:26)

  ‚óè Alerts Routes ‚Ä∫ POST /api/alerts/create ‚Ä∫ should use default values

    expect(received).toContain(expected) // indexOf

    Expected value: 401
    Received array: [200, 201]

      457 |         .send(alertData);
      458 |
    > 459 |       expect([200, 201]).toContain(response.status);
          |                          ^
      460 |       expect(response.body.data.alert.symbol).toBe("MSFT");
      461 |       expect(response.body.data.alert.alert_type).toBe("price");
      462 |       expect(response.body.data.alert.condition).toBe("above");

      at Object.toContain (tests/integration/routes/alerts.integration.test.js:459:26)

  ‚óè Alerts Routes ‚Ä∫ POST /api/alerts/create ‚Ä∫ should reject missing required fields

    expect(received).toContain(expected) // indexOf

    Expected value: 401
    Received array: [400, 422]

      470 |         .send({ symbol: "AAPL" }); // Missing threshold
      471 |
    > 472 |       expect([400, 422]).toContain(response.status);
          |                          ^
      473 |       expect(response.body.success).toBe(false);
      474 |       expect(response.body.error).toBe("Missing required fields");
      475 |       expect(response.body.required).toEqual(["symbol", "threshold"]);

      at Object.toContain (tests/integration/routes/alerts.integration.test.js:472:26)

  ‚óè Alerts Routes ‚Ä∫ POST /api/alerts/create ‚Ä∫ should reject empty request

    expect(received).toContain(expected) // indexOf

    Expected value: 401
    Received array: [400, 422]

      479 |       const response = await request(app).post("/api/alerts/create").send({});
      480 |
    > 481 |       expect([400, 422]).toContain(response.status);
          |                          ^
      482 |       expect(response.body.success).toBe(false);
      483 |     });
      484 |   });

      at Object.toContain (tests/integration/routes/alerts.integration.test.js:481:26)

  ‚óè Alerts Routes ‚Ä∫ DELETE /api/alerts/delete/:alertId ‚Ä∫ should delete alert successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      492 |         .send({ reason: "no_longer_needed" });
      493 |
    > 494 |       expect(response.status).toBe(200);
          |                               ^
      495 |       expect(response.body.success).toBe(true);
      496 |       expect(response.body.data.deleted_alert.alert_id).toBe(alertId);
      497 |       expect(response.body.data.deleted_alert.user_id).toBe("test_user_123");

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:494:31)

  ‚óè Alerts Routes ‚Ä∫ DELETE /api/alerts/delete/:alertId ‚Ä∫ should use default deletion reason

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      510 |         .send({});
      511 |
    > 512 |       expect(response.status).toBe(200);
          |                               ^
      513 |       expect(response.body.data.deleted_alert.deletion_reason).toBe(
      514 |         "user_requested"
      515 |       );

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:512:31)

  ‚óè Alerts Routes ‚Ä∫ DELETE /api/alerts/delete/:alertId ‚Ä∫ should reject empty alert ID

    expect(received).toContain(expected) // indexOf

    Expected value: 401
    Received array: [404, 500]

      521 |         .send({});
      522 |
    > 523 |       expect([404, 500]).toContain(response.status);
          |                          ^
      524 |     });
      525 |   });
      526 |

      at Object.toContain (tests/integration/routes/alerts.integration.test.js:523:26)

  ‚óè Alerts Routes ‚Ä∫ GET /api/alerts/price ‚Ä∫ should return 501 not implemented when no data

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      529 |       const response = await request(app).get("/api/alerts/price");
      530 |
    > 531 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      532 |       expect(response.body.success).toBe(false);
      533 |       expect(response.body.error).toBe("Price alerts not implemented");
      534 |       expect(response.body).toHaveProperty("troubleshooting");

      at Object.toContain (tests/integration/routes/alerts.integration.test.js:531:41)

  ‚óè Alerts Routes ‚Ä∫ GET /api/alerts/price ‚Ä∫ should handle symbol filter

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      539 |       const response = await request(app).get("/api/alerts/price?symbol=AAPL");
      540 |
    > 541 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      542 |       expect(response.body.success).toBe(false);
      543 |     });
      544 |

      at Object.toContain (tests/integration/routes/alerts.integration.test.js:541:41)

  ‚óè Alerts Routes ‚Ä∫ GET /api/alerts/price ‚Ä∫ should handle threshold filters

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      548 |       );
      549 |
    > 550 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      551 |       expect(response.body.success).toBe(false);
      552 |     });
      553 |

      at Object.toContain (tests/integration/routes/alerts.integration.test.js:550:41)

  ‚óè Alerts Routes ‚Ä∫ GET /api/alerts/price ‚Ä∫ should handle alert type filter

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      557 |       );
      558 |
    > 559 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      560 |       expect(response.body.success).toBe(false);
      561 |     });
      562 |   });

      at Object.toContain (tests/integration/routes/alerts.integration.test.js:559:41)

  ‚óè Alerts Routes ‚Ä∫ PUT /api/alerts/update/:alertId ‚Ä∫ should update alert successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      576 |         .send(updateData);
      577 |
    > 578 |       expect(response.status).toBe(200);
          |                               ^
      579 |       expect(response.body.success).toBe(true);
      580 |       expect(response.body.data.updated_alert.alert_id).toBe(alertId);
      581 |       expect(response.body.data.updated_alert.threshold).toBe(180.0);

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:578:31)

  ‚óè Alerts Routes ‚Ä∫ PUT /api/alerts/update/:alertId ‚Ä∫ should use defaults when no data provided

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      598 |         .send({});
      599 |
    > 600 |       expect(response.status).toBe(200);
          |                               ^
      601 |       expect(response.body.data.updated_alert.symbol).toBe("AAPL");
      602 |       expect(response.body.data.updated_alert.enabled).toBe(true);
      603 |       expect(response.body.data.updated_alert.update_reason).toBe(

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:600:31)

  ‚óè Alerts Routes ‚Ä∫ PUT /api/alerts/update/:alertId ‚Ä∫ should reject empty alert ID

    expect(received).toContain(expected) // indexOf

    Expected value: 401
    Received array: [404, 500]

      611 |         .send({ threshold: 200 });
      612 |
    > 613 |       expect([404, 500]).toContain(response.status);
          |                          ^
      614 |     });
      615 |   });
      616 |

      at Object.toContain (tests/integration/routes/alerts.integration.test.js:613:26)

FAIL tests/integration/errors/malformed-request.integration.test.js
  ‚óè Malformed Request Integration ‚Ä∫ JSON Parsing Error Scenarios ‚Ä∫ should handle malformed JSON gracefully

    expect(received).not.toContain(expected) // indexOf

    Expected substring: not ""
    Received string:        "Invalid symbols array"

      71 |         // Error should not expose the malformed content
      72 |         if (response.body?.error) {
    > 73 |           expect(response.body.error).not.toContain(test.body);
         |                                           ^
      74 |         }
      75 |       }
      76 |     });

      at Object.toContain (tests/integration/errors/malformed-request.integration.test.js:73:43)

  ‚óè Malformed Request Integration ‚Ä∫ JSON Parsing Error Scenarios ‚Ä∫ should handle JSON with dangerous characters

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [200, 404]

      114 |
      115 |         // Should handle safely
    > 116 |         expect([200, 404]).toContain(response.status);
          |                            ^
      117 |
      118 |         if (response.status >= 400) {
      119 |           expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/errors/malformed-request.integration.test.js:116:28)

  ‚óè Malformed Request Integration ‚Ä∫ JSON Parsing Error Scenarios ‚Ä∫ should handle deeply nested JSON structures

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [200, 404]

      146 |
      147 |       // Should handle deep nesting gracefully
    > 148 |       expect([200, 404]).toContain(response.status);
          |                          ^
      149 |
      150 |       if (response.status >= 400) {
      151 |         expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/errors/malformed-request.integration.test.js:148:26)

  ‚óè Malformed Request Integration ‚Ä∫ HTTP Header Malformation ‚Ä∫ should handle malformed authorization headers

    TypeError: Invalid character in header content ["Authorization"]

      at Test.setHeader [as request] (node_modules/superagent/src/node/index.js:851:39)
      at Test.request [as end] (node_modules/superagent/src/node/index.js:986:8)
      at Test.end (node_modules/supertest/lib/test.js:118:11)
      at end (node_modules/superagent/src/request-base.js:285:12)
      at Test.Object.<anonymous>.RequestBase.then (node_modules/superagent/src/request-base.js:267:31)

  ‚óè Malformed Request Integration ‚Ä∫ HTTP Header Malformation ‚Ä∫ should handle malformed content-type headers

    TypeError: Invalid character in header content ["Content-Type"]

      at Test.setHeader [as request] (node_modules/superagent/src/node/index.js:851:39)
      at Test.request [as end] (node_modules/superagent/src/node/index.js:986:8)
      at Test.end (node_modules/supertest/lib/test.js:118:11)
      at end (node_modules/superagent/src/request-base.js:285:12)
      at Test.Object.<anonymous>.RequestBase.then (node_modules/superagent/src/request-base.js:267:31)

  ‚óè Malformed Request Integration ‚Ä∫ HTTP Header Malformation ‚Ä∫ should handle custom header injection attempts

    expect(received).toMatch(expected)

    Expected pattern: /invalid|malformed|header/i
    Received string:  "expect(received).not.toMatch(expected)¬∑
    Matcher error: received value must be a string¬∑
    Received has value: undefined"

      283 |         } catch (error) {
      284 |           // Some malformed headers might be rejected at HTTP level
    > 285 |           expect(error.message).toMatch(/invalid|malformed|header/i);
          |                                 ^
      286 |         }
      287 |       }
      288 |     });

      at Object.toMatch (tests/integration/errors/malformed-request.integration.test.js:285:33)

  ‚óè Malformed Request Integration ‚Ä∫ URL and Path Malformation ‚Ä∫ should handle malformed URLs and paths

    expect(received).toMatch(expected)

    Expected pattern: /invalid|malformed|url/i
    Received string:  "expect(received).toContain(expected) // indexOf¬∑
    Expected value: 200
    Received array: [400, 404, 500]"

      336 |         } catch (error) {
      337 |           // Some malformed URLs might be rejected at HTTP level
    > 338 |           expect(error.message).toMatch(/invalid|malformed|url/i);
          |                                 ^
      339 |         }
      340 |       }
      341 |     });

      at Object.toMatch (tests/integration/errors/malformed-request.integration.test.js:338:33)

  ‚óè Malformed Request Integration ‚Ä∫ URL and Path Malformation ‚Ä∫ should handle malformed query parameters

    TypeError: Request path contains unescaped characters

      at Test.request (node_modules/superagent/src/node/index.js:808:22)
      at Test.request [as end] (node_modules/superagent/src/node/index.js:986:8)
      at Test.end (node_modules/supertest/lib/test.js:118:11)
      at end (node_modules/superagent/src/request-base.js:285:12)
      at Test.Object.<anonymous>.RequestBase.then (node_modules/superagent/src/request-base.js:267:31)

  ‚óè Malformed Request Integration ‚Ä∫ Request Body Malformation ‚Ä∫ should handle mismatched content-type and body

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [200, 404]

      472 |           .send(test.body);
      473 |
    > 474 |         expect([200, 404]).toContain(response.status);
          |                            ^
      475 |
      476 |         if (response.status >= 400) {
      477 |           expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/errors/malformed-request.integration.test.js:474:28)

  ‚óè Malformed Request Integration ‚Ä∫ Character Encoding Issues ‚Ä∫ should handle different character encodings

    expect(received).toContain(expected) // indexOf

    Expected value: 415
    Received array: [200, 404]

      538 |           .send(testBody);
      539 |
    > 540 |         expect([200, 404]).toContain(response.status);
          |                            ^
      541 |
      542 |         if (response.status >= 400) {
      543 |           expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/errors/malformed-request.integration.test.js:540:28)

  ‚óè Malformed Request Integration ‚Ä∫ Error Response Consistency ‚Ä∫ should maintain consistent error format for all malformed requests

    TypeError: Invalid character in header content ["Authorization"]

      at Test.setHeader [as request] (node_modules/superagent/src/node/index.js:851:39)
      at Test.request [as end] (node_modules/superagent/src/node/index.js:986:8)
      at Test.end (node_modules/supertest/lib/test.js:118:11)
      at end (node_modules/superagent/src/request-base.js:285:12)
      at Test.Object.<anonymous>.RequestBase.then (node_modules/superagent/src/request-base.js:267:31)

FAIL tests/integration/routes/recommendations.integration.test.js
  ‚óè Recommendations Routes ‚Ä∫ GET /api/recommendations/analysts/:symbol ‚Ä∫ should handle extremely large limit

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      278 |         .set("Authorization", "Bearer dev-bypass-token");
      279 |
    > 280 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      281 |       expect(response.body.limit).toBe(99999);
      282 |     });
      283 |   });

      at Object.toContain (tests/integration/routes/recommendations.integration.test.js:280:41)

  ‚óè Recommendations Routes ‚Ä∫ Error Handling ‚Ä∫ should handle malformed URLs gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      315 |         .set("Authorization", "Bearer dev-bypass-token");
      316 |
    > 317 |       expect([501, 500].includes(response.status)).toBe(true);
          |                                                    ^
      318 |     });
      319 |
      320 |     test("should handle empty parameters", async () => {

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:317:52)

  ‚óè Recommendations Routes ‚Ä∫ Error Handling ‚Ä∫ should handle empty parameters

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      323 |         .set("Authorization", "Bearer dev-bypass-token");
      324 |
    > 325 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      326 |     });
      327 |
      328 |     test("should handle URL encoded parameters", async () => {

      at Object.toContain (tests/integration/routes/recommendations.integration.test.js:325:41)

  ‚óè Recommendations Routes ‚Ä∫ Error Handling ‚Ä∫ should handle URL encoded parameters

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      331 |         .set("Authorization", "Bearer dev-bypass-token");
      332 |
    > 333 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      334 |       expect(response.body.symbol).toBe("BRK.A");
      335 |     });
      336 |   });

      at Object.toContain (tests/integration/routes/recommendations.integration.test.js:333:41)

  ‚óè Recommendations Routes ‚Ä∫ Response Structure Validation ‚Ä∫ should have consistent error response structure

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      342 |         .set("Authorization", "Bearer dev-bypass-token");
      343 |
    > 344 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      345 |       expect(response.body).toHaveProperty("success", false);
      346 |       expect(response.body).toHaveProperty("error");
      347 |       expect(response.body).toHaveProperty("details");

      at Object.toContain (tests/integration/routes/recommendations.integration.test.js:344:41)

  ‚óè Recommendations Routes ‚Ä∫ Response Structure Validation ‚Ä∫ should have consistent analyst coverage response structure

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      367 |         .set("Authorization", "Bearer dev-bypass-token");
      368 |
    > 369 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      370 |       expect(response.body).toHaveProperty("success", false);
      371 |       expect(response.body).toHaveProperty("error");
      372 |       expect(response.body).toHaveProperty("details");

      at Object.toContain (tests/integration/routes/recommendations.integration.test.js:369:41)

  ‚óè Recommendations Routes ‚Ä∫ Performance ‚Ä∫ should respond within reasonable time

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      389 |
      390 |       expect(responseTime).toBeLessThan(3000);
    > 391 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      392 |     });
      393 |
      394 |     test("should handle concurrent requests", async () => {

      at Object.toContain (tests/integration/routes/recommendations.integration.test.js:391:41)

  ‚óè Recommendations Routes ‚Ä∫ Performance ‚Ä∫ should handle concurrent requests

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      408 |
      409 |       responses.forEach((response) => {
    > 410 |         expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                           ^
      411 |       });
      412 |     });
      413 |   });

      at toContain (tests/integration/routes/recommendations.integration.test.js:410:43)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/routes/recommendations.integration.test.js:409:17)

  ‚óè Recommendations Routes ‚Ä∫ Required Setup Documentation ‚Ä∫ should document required setup for recommendations

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      419 |         .set("Authorization", "Bearer dev-bypass-token");
      420 |
    > 421 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      422 |       const setup = response.body.troubleshooting.required_setup;
      423 |
      424 |       // Should include key requirements

      at Object.toContain (tests/integration/routes/recommendations.integration.test.js:421:41)

  ‚óè Recommendations Routes ‚Ä∫ Required Setup Documentation ‚Ä∫ should document required setup for analyst coverage

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      439 |         .set("Authorization", "Bearer dev-bypass-token");
      440 |
    > 441 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      442 |       const setup = response.body.troubleshooting.required_setup;
      443 |
      444 |       // Should include key requirements

      at Object.toContain (tests/integration/routes/recommendations.integration.test.js:441:41)

FAIL tests/integration/routes/settings.integration.test.js
  ‚óè Settings Routes Integration Tests ‚Ä∫ GET /api/settings/api-keys (API Keys) ‚Ä∫ should return user API keys

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      145 |       if (response.status === 200) {
      146 |         expect(response.body).toHaveProperty("providers");
    > 147 |         expect(Array.isArray(response.body.providers)).toBe(true);
          |                                                        ^
      148 |       }
      149 |     });
      150 |

      at Object.toBe (tests/integration/routes/settings.integration.test.js:147:56)

  ‚óè Settings Routes Integration Tests ‚Ä∫ GET /api/settings/api-keys/:provider (Get Specific API Key) ‚Ä∫ should return specific provider API key status

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      232 |         .set("Authorization", "Bearer dev-bypass-token");
      233 |
    > 234 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      235 |
      236 |       if (response.status === 200) {
      237 |         expect(response.body).toHaveProperty("provider", "alpaca");

      at Object.toBe (tests/integration/routes/settings.integration.test.js:234:52)

  ‚óè Settings Routes Integration Tests ‚Ä∫ DELETE /api/settings/api-keys/:provider (Delete API Key) ‚Ä∫ should delete API key

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      281 |         .set("Authorization", "Bearer dev-bypass-token");
      282 |
    > 283 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      284 |
      285 |       if (response.status === 200) {
      286 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/settings.integration.test.js:283:52)

FAIL tests/integration/middleware/security-headers.integration.test.js
  ‚óè Security Headers Integration ‚Ä∫ Request Validation Security ‚Ä∫ should sanitize request parameters

    expect(received).toContain(expected) // indexOf

    Expected value: 404
    Received array: [400, 422]

      201 |         .set("Authorization", "Bearer dev-bypass-token");
      202 |
    > 203 |       expect([400, 422]).toContain(response.status);
          |                          ^
      204 |
      205 |       // Should handle malicious input safely
      206 |       if (response.body && typeof response.body === "string") {

      at Object.toContain (tests/integration/middleware/security-headers.integration.test.js:203:26)

  ‚óè Security Headers Integration ‚Ä∫ Request Validation Security ‚Ä∫ should prevent SQL injection attempts

    expect(received).toContain(expected) // indexOf

    Expected value: 404
    Received array: [400, 422]

      214 |         .set("Authorization", "Bearer dev-bypass-token");
      215 |
    > 216 |       expect([400, 422]).toContain(response.status);
          |                          ^
      217 |       expect(response.headers["content-type"]).toMatch(/application\/json/);
      218 |     });
      219 |

      at Object.toContain (tests/integration/middleware/security-headers.integration.test.js:216:26)

  ‚óè Security Headers Integration ‚Ä∫ Request Validation Security ‚Ä∫ should handle path traversal attempts

    expect(received).toContain(expected) // indexOf

    Expected value: 404
    Received array: [400, 422]

      223 |         .set("Authorization", "Bearer dev-bypass-token");
      224 |
    > 225 |       expect([400, 422]).toContain(response.status);
          |                          ^
      226 |       expect(response.headers["content-type"]).toMatch(/application\/json/);
      227 |     });
      228 |   });

      at Object.toContain (tests/integration/middleware/security-headers.integration.test.js:225:26)

  ‚óè Security Headers Integration ‚Ä∫ Authentication Security ‚Ä∫ should reject requests with malformed authentication

    expect(received).toContain(expected) // indexOf

    Expected value: 401
    Received array: [400, 422]

      352 |           .set("Authorization", token);
      353 |
    > 354 |         expect([400, 422]).toContain(response.status);
          |                            ^
      355 |         expect(response.headers["content-type"]).toMatch(/application\/json/);
      356 |
      357 |         // Should not reflect malicious content in response

      at Object.toContain (tests/integration/middleware/security-headers.integration.test.js:354:28)

FAIL tests/integration/routes/sentiment.integration.test.js
  ‚óè Sentiment Routes ‚Ä∫ GET /api/sentiment/social ‚Ä∫ should return 501 not implemented

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      244 |         .set("Authorization", "Bearer dev-bypass-token");
      245 |
    > 246 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      247 |       expect(response.body).toHaveProperty("success", false);
      248 |       expect(response.body).toHaveProperty(
      249 |         "error",

      at Object.toContain (tests/integration/routes/sentiment.integration.test.js:246:41)

  ‚óè Sentiment Routes ‚Ä∫ GET /api/sentiment/social/:symbol ‚Ä∫ should return 501 not implemented

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      262 |         .set("Authorization", "Bearer dev-bypass-token");
      263 |
    > 264 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      265 |       expect(response.body).toHaveProperty("success", false);
      266 |       expect(response.body).toHaveProperty(
      267 |         "error",

      at Object.toContain (tests/integration/routes/sentiment.integration.test.js:264:41)

  ‚óè Sentiment Routes ‚Ä∫ GET /api/sentiment/social/:symbol ‚Ä∫ should handle different symbols

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      281 |           .set("Authorization", "Bearer dev-bypass-token");
      282 |
    > 283 |         expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                           ^
      284 |         expect(response.body.message).toContain(symbol);
      285 |       }
      286 |     });

      at Object.toContain (tests/integration/routes/sentiment.integration.test.js:283:43)

  ‚óè Sentiment Routes ‚Ä∫ GET /api/sentiment/social/:symbol ‚Ä∫ should handle special characters in symbol

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      291 |         .set("Authorization", "Bearer dev-bypass-token");
      292 |
    > 293 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      294 |       expect(response.body.message).toContain("BRK.A");
      295 |     });
      296 |   });

      at Object.toContain (tests/integration/routes/sentiment.integration.test.js:293:41)

  ‚óè Sentiment Routes ‚Ä∫ GET /api/sentiment/trending ‚Ä∫ should return 501 not implemented

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      302 |         .set("Authorization", "Bearer dev-bypass-token");
      303 |
    > 304 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      305 |       expect(response.body).toHaveProperty("success", false);
      306 |       expect(response.body).toHaveProperty(
      307 |         "error",

      at Object.toContain (tests/integration/routes/sentiment.integration.test.js:304:41)

  ‚óè Sentiment Routes ‚Ä∫ Error Handling ‚Ä∫ should handle empty symbol parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      360 |         .set("Authorization", "Bearer dev-bypass-token");
      361 |
    > 362 |       expect([400, 500].includes(response.status)).toBe(true);
          |                                                    ^
      363 |     });
      364 |
      365 |     test("should handle malformed URLs", async () => {

      at Object.toBe (tests/integration/routes/sentiment.integration.test.js:362:52)

FAIL tests/integration/routes/calendar.integration.test.js
  ‚óè Calendar Routes ‚Ä∫ GET /api/calendar/earnings ‚Ä∫ should handle invalid dates gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 400

      126 |       );
      127 |
    > 128 |       expect(response.status).toBe(200);
          |                               ^
      129 |       expect(response.body.success).toBe(true);
      130 |       expect(response.body).toHaveProperty("data");
      131 |     });

      at Object.toBe (tests/integration/routes/calendar.integration.test.js:128:31)

  ‚óè Calendar Routes ‚Ä∫ GET /api/calendar/economic ‚Ä∫ should return economic calendar data

    expect(received).toHaveProperty(path)

    Expected path: "troubleshooting"
    Received path: []

    Received value: {"data": {"available_filters": {"categories": ["monetary_policy", "inflation", "employment", "gdp", "consumption", "manufacturing", "sentiment", "housing"], "countries": ["US", "EU", "GB", "JP", "CA", "AU"], "importance_levels": ["all", "high", "medium", "low"]}, "economic_events": [{"actual": null, "category": "sentiment", "country": "US", "currency": "USD", "date": "2025-09-23", "description": "Consumer sentiment and economic outlook confidence", "event_id": "US_sentiment_2025-09-23", "forecast": "110.0", "frequency": "monthly", "impact": "low", "importance": "low", "is_tentative": false, "local_time": "10:00", "previous": "102.6", "source": "Bureau of Labor Statistics", "time": "2025-09-23T15:00:00.000Z", "title": "Consumer Confidence Index", "unit": "index", "volatility_expected": "low"}, {"actual": null, "category": "employment", "country": "US", "currency": "USD", "date": "2025-09-24", "description": "Weekly unemployment insurance claims", "event_id": "US_employment_2025-09-24", "forecast": "165K", "frequency": "weekly", "impact": "low", "importance": "low", "is_tentative": false, "local_time": "08:30", "previous": "207K", "source": "Bureau of Labor Statistics", "time": "2025-09-24T13:30:00.000Z", "title": "Initial Jobless Claims", "unit": "jobs", "volatility_expected": "low"}, {"actual": null, "category": "consumption", "country": "US", "currency": "USD", "date": "2025-09-26", "description": "Monthly consumer spending and retail sector activity", "event_id": "US_consumption_2025-09-26", "forecast": "-0.1%", "frequency": "monthly", "impact": "medium", "importance": "medium", "is_tentative": true, "local_time": "08:30", "previous": "1.3%", "source": "Bureau of Labor Statistics", "time": "2025-09-26T13:30:00.000Z", "title": "Retail Sales", "unit": "index", "volatility_expected": "medium"}, {"actual": null, "category": "employment", "country": "US", "currency": "USD", "date": "2025-09-26", "description": "Weekly unemployment insurance claims", "event_id": "US_employment_2025-09-26", "forecast": "171K", "frequency": "weekly", "impact": "low", "importance": "low", "is_tentative": false, "local_time": "08:30", "previous": "328K", "source": "Bureau of Labor Statistics", "time": "2025-09-26T13:30:00.000Z", "title": "Initial Jobless Claims", "unit": "jobs", "volatility_expected": "low"}, {"actual": null, "category": "employment", "country": "US", "currency": "USD", "date": "2025-09-29", "description": "Monthly employment report and unemployment rate", "event_id": "US_employment_2025-09-29", "forecast": "320K", "frequency": "monthly", "impact": "high", "importance": "high", "is_tentative": false, "local_time": "08:30", "previous": "290K", "source": "Bureau of Labor Statistics", "time": "2025-09-29T13:30:00.000Z", "title": "Non-Farm Payrolls", "unit": "jobs", "volatility_expected": "high"}, {"actual": "118.6", "category": "sentiment", "country": "US", "currency": "USD", "date": "2025-09-29", "description": "Consumer sentiment and economic outlook confidence", "event_id": "US_sentiment_2025-09-29", "forecast": "125.7", "frequency": "monthly", "impact": "low", "importance": "low", "is_tentative": false, "local_time": "10:00", "previous": "106.1", "source": "Bureau of Labor Statistics", "time": "2025-09-29T15:00:00.000Z", "title": "Consumer Confidence Index", "unit": "index", "volatility_expected": "low"}, {"actual": null, "category": "housing", "country": "US", "currency": "USD", "date": "2025-09-29", "description": "New residential construction starts", "event_id": "US_housing_2025-09-29", "forecast": "1426K", "frequency": "monthly", "impact": "low", "importance": "low", "is_tentative": false, "local_time": "08:30", "previous": "1362K", "source": "Bureau of Labor Statistics", "time": "2025-09-29T13:30:00.000Z", "title": "Housing Starts", "unit": "index", "volatility_expected": "low"}, {"actual": null, "category": "employment", "country": "US", "currency": "USD", "date": "2025-09-30", "description": "Weekly unemployment insurance claims", "event_id": "US_employment_2025-09-30", "forecast": "174K", "frequency": "weekly", "impact": "low", "importance": "low", "is_tentative": false, "local_time": "08:30", "previous": "176K", "source": "Bureau of Labor Statistics", "time": "2025-09-30T13:30:00.000Z", "title": "Initial Jobless Claims", "unit": "jobs", "volatility_expected": "low"}, {"actual": "0.9%", "category": "gdp", "country": "US", "currency": "USD", "date": "2025-10-01", "description": "Gross Domestic Product growth rate - quarterly preliminary", "event_id": "US_gdp_2025-10-01", "forecast": "1.7%", "frequency": "quarterly", "impact": "medium", "importance": "high", "is_tentative": false, "local_time": "08:30", "previous": "0.9%", "source": "Bureau of Labor Statistics", "time": "2025-10-01T13:30:00.000Z", "title": "GDP Quarterly Growth", "unit": "index", "volatility_expected": "high"}, {"actual": "0.6%", "category": "consumption", "country": "US", "currency": "USD", "date": "2025-10-01", "description": "Monthly consumer spending and retail sector activity", "event_id": "US_consumption_2025-10-01", "forecast": "-0.7%", "frequency": "monthly", "impact": "medium", "importance": "medium", "is_tentative": false, "local_time": "08:30", "previous": "0.7%", "source": "Bureau of Labor Statistics", "time": "2025-10-01T13:30:00.000Z", "title": "Retail Sales", "unit": "index", "volatility_expected": "medium"}, ‚Ä¶], "filters": {"country": "US", "days_ahead": 14, "importance": "all", "limit": 30}, "summary": {"by_category": {"consumption": 3, "employment": 6, "gdp": 1, "housing": 3, "sentiment": 3}, "by_importance": {"high": 2, "low": 11, "medium": 3}, "country": "US", "date_range": {"days_covered": 14, "from": "2025-09-23", "to": "2025-10-07"}, "next_24h": 1, "this_week": 7, "total_events": 16, "upcoming_high_impact": 1}}, "metadata": {"currency_focus": "USD", "data_source": "simulated_economic_data", "generated_at": "2025-09-23T16:31:57.633Z", "timezone": "UTC", "total_returned": 16}, "success": true, "timestamp": "2025-09-23T16:31:57.633Z"}

      168 |       expect(response.body.data).toHaveProperty("summary");
      169 |       expect(Array.isArray(response.body.data.economic_events)).toBe(true);
    > 170 |       expect(response.body).toHaveProperty("troubleshooting");
          |                             ^
      171 |     });
      172 |
      173 |     test("should handle country parameter in 501 response", async () => {

      at Object.toHaveProperty (tests/integration/routes/calendar.integration.test.js:170:29)

  ‚óè Calendar Routes ‚Ä∫ GET /api/calendar/economic ‚Ä∫ should handle country parameter in 501 response

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      176 |       );
      177 |
    > 178 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      179 |       expect(response.body.success).toBe(false);
      180 |       expect(response.body.country).toBe("US");
      181 |     });

      at Object.toContain (tests/integration/routes/calendar.integration.test.js:178:41)

  ‚óè Calendar Routes ‚Ä∫ GET /api/calendar/upcoming ‚Ä∫ should return 501 not implemented

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      186 |       const response = await request(app).get("/api/calendar/upcoming");
      187 |
    > 188 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      189 |       expect(response.body.success).toBe(false);
      190 |       expect(response.body.error).toBe(
      191 |         "Calendar upcoming events not implemented"

      at Object.toContain (tests/integration/routes/calendar.integration.test.js:188:41)

  ‚óè Calendar Routes ‚Ä∫ GET /api/calendar/upcoming ‚Ä∫ should handle days parameter in 501 response

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      197 |       const response = await request(app).get("/api/calendar/upcoming?days=7");
      198 |
    > 199 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      200 |       expect(response.body.success).toBe(false);
      201 |     });
      202 |

      at Object.toContain (tests/integration/routes/calendar.integration.test.js:199:41)

  ‚óè Calendar Routes ‚Ä∫ GET /api/calendar/upcoming ‚Ä∫ should handle multiple parameters in 501 response

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      206 |       );
      207 |
    > 208 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
          |                                         ^
      209 |       expect(response.body.success).toBe(false);
      210 |       expect(response.body.symbol).toBe("AAPL");
      211 |     });

      at Object.toContain (tests/integration/routes/calendar.integration.test.js:208:41)

  ‚óè Calendar Routes ‚Ä∫ GET /api/calendar/earnings-metrics ‚Ä∫ should handle database dependencies gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      348 |
      349 |       // Earnings metrics requires earnings_history table
    > 350 |       expect(response.status).toBe(200);
          |                               ^
      351 |
      352 |       if (response.status === 200) {
      353 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/calendar.integration.test.js:350:31)

FAIL tests/integration/websocket/websocket.integration.test.js
  ‚óè WebSocket Integration ‚Ä∫ WebSocket Connection Establishment ‚Ä∫ should handle WebSocket upgrade requests

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [404, 500]

      35 |
      36 |       // WebSocket upgrade might return specific status codes
    > 37 |       expect([404, 500]).toContain(response.status);
         |                          ^
      38 |
      39 |       if (response.status === 101) {
      40 |         // Successful WebSocket upgrade

      at Object.toContain (tests/integration/websocket/websocket.integration.test.js:37:26)

  ‚óè WebSocket Integration ‚Ä∫ WebSocket Connection Establishment ‚Ä∫ should validate WebSocket authentication requirements

    expect(received).toBe(expected) // Object.is equality

    Expected: 401
    Received: 404

      79 |           .set("Connection", "Upgrade");
      80 |
    > 81 |         expect(unauthResponse.status).toBe(401);
         |                                       ^
      82 |
      83 |         // Test with auth header
      84 |         const authResponse = await request(app)

      at Object.toBe (tests/integration/websocket/websocket.integration.test.js:81:39)

  ‚óè WebSocket Integration ‚Ä∫ WebSocket Message Handling ‚Ä∫ should handle invalid WebSocket message formats

    expect(received).toContain(expected) // indexOf

    Expected value: 404
    Received array: [400, 422]

      136 |           .send(message);
      137 |
    > 138 |         expect([400, 422]).toContain(response.status);
          |                            ^
      139 |
      140 |         if (response.status === 400 || response.status === 422) {
      141 |           expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/websocket/websocket.integration.test.js:138:28)

  ‚óè WebSocket Integration ‚Ä∫ WebSocket Error Scenarios ‚Ä∫ should handle connection errors gracefully

    expect(received).toContain(expected) // indexOf

    Expected value: 404
    Received array: [400, 422]

      258 |         const response = await requestBuilder;
      259 |
    > 260 |         expect([400, 422]).toContain(response.status);
          |                            ^
      261 |
      262 |         if ([400, 404].includes(response.status)) {
      263 |           // Error responses should be properly formatted

      at Object.toContain (tests/integration/websocket/websocket.integration.test.js:260:28)

  ‚óè WebSocket Integration ‚Ä∫ WebSocket Error Scenarios ‚Ä∫ should handle malformed WebSocket messages

    expect(received).toContain(expected) // indexOf

    Expected value: 404
    Received array: [400, 422]

      286 |           .send(message);
      287 |
    > 288 |         expect([400, 422]).toContain(response.status);
          |                            ^
      289 |
      290 |         if (response.status >= 400 && response.body) {
      291 |           expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/websocket/websocket.integration.test.js:288:28)

  ‚óè WebSocket Integration ‚Ä∫ WebSocket Performance and Scalability ‚Ä∫ should handle concurrent WebSocket requests

    expect(received).toBeGreaterThan(expected)

    Expected: > 7
    Received:   0

      370 |       // Most connections should succeed
      371 |       const successfulConnections = results.filter((r) => r.success);
    > 372 |       expect(successfulConnections.length).toBeGreaterThan(
          |                                            ^
      373 |         concurrentConnections * 0.7
      374 |       );
      375 |

      at Object.toBeGreaterThan (tests/integration/websocket/websocket.integration.test.js:372:44)

  ‚óè WebSocket Integration ‚Ä∫ WebSocket Integration with Authentication ‚Ä∫ should handle WebSocket authentication flow

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      512 |       results.forEach((result) => {
      513 |         if (result.status) {
    > 514 |           expect(result.status).toBe(200);
          |                                 ^
      515 |           expect(result.authenticated).toBe(true);
      516 |         }
      517 |       });

      at toBe (tests/integration/websocket/websocket.integration.test.js:514:33)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/websocket/websocket.integration.test.js:512:15)

FAIL tests/integration/routes/signals.integration.test.js
  ‚óè Signals Routes ‚Ä∫ GET /api/signals ‚Ä∫ should return signals with proper AWS-compatible structure

    expect(received).toHaveProperty(path)

    Expected path: "summary"
    Received path: []

    Received value: {"data": [{"confidence": "0.75", "date": "2025-09-23T05:00:00.000Z", "price": 88.38, "signal_type": "BUY", "symbol": "STOCK0", "timeframe": "daily", "volume": "2921732"}, {"confidence": "0.75", "date": "2025-09-23T05:00:00.000Z", "price": 214.75, "signal_type": "BUY", "symbol": "STOCK1", "timeframe": "daily", "volume": "4728920"}, {"confidence": "0.75", "date": "2025-09-23T05:00:00.000Z", "price": 160.86, "signal_type": "BUY", "symbol": "STOCK10", "timeframe": "daily", "volume": "6717632"}, {"confidence": "0.75", "date": "2025-09-23T05:00:00.000Z", "price": 147.69, "signal_type": "BUY", "symbol": "STOCK11", "timeframe": "daily", "volume": "1424946"}, {"confidence": "0.75", "date": "2025-09-23T05:00:00.000Z", "price": 55.77, "signal_type": "BUY", "symbol": "STOCK12", "timeframe": "daily", "volume": "6740601"}, {"confidence": "0.75", "date": "2025-09-23T05:00:00.000Z", "price": 126.44, "signal_type": "BUY", "symbol": "STOCK13", "timeframe": "daily", "volume": "7872623"}, {"confidence": "0.75", "date": "2025-09-23T05:00:00.000Z", "price": 286.08, "signal_type": "BUY", "symbol": "STOCK14", "timeframe": "daily", "volume": "8326620"}, {"confidence": "0.75", "date": "2025-09-23T05:00:00.000Z", "price": 313.85, "signal_type": "BUY", "symbol": "STOCK15", "timeframe": "daily", "volume": "10393402"}, {"confidence": "0.75", "date": "2025-09-23T05:00:00.000Z", "price": 114.11, "signal_type": "BUY", "symbol": "STOCK16", "timeframe": "daily", "volume": "7295934"}, {"confidence": "0.75", "date": "2025-09-23T05:00:00.000Z", "price": 238.12, "signal_type": "BUY", "symbol": "STOCK17", "timeframe": "daily", "volume": "2898422"}, ‚Ä¶], "pagination": {"hasNext": true, "hasPrev": false, "limit": 25, "page": 1, "total": 18364, "totalPages": 735}, "success": true, "timeframe": "daily", "timestamp": "2025-09-23T16:31:58.693Z"}

      25 |       expect(response.body).toHaveProperty("data");
      26 |       expect(Array.isArray(response.body.data)).toBe(true);
    > 27 |       expect(response.body).toHaveProperty("summary");
         |                             ^
      28 |       expect(response.body.summary).toHaveProperty("buy_signals");
      29 |       expect(response.body.summary).toHaveProperty("sell_signals");
      30 |

      at Object.toHaveProperty (tests/integration/routes/signals.integration.test.js:27:29)

  ‚óè Signals Routes ‚Ä∫ GET /api/signals/buy ‚Ä∫ should return buy signals with AWS-compatible structure

    expect(received).toHaveProperty(path)

    Expected path: "current_price"
    Received path: []

    Received value: {"confidence": "0.80", "date": "2025-09-22T05:00:00.000Z", "price": 89.53, "signal_type": "BUY", "symbol": "STOCK0", "timeframe": "daily", "volume": "10899765"}

      78 |         expect(signal).toHaveProperty("signal_type");
      79 |         expect(signal).toHaveProperty("date");
    > 80 |         expect(signal).toHaveProperty("current_price");
         |                        ^
      81 |       }
      82 |     });
      83 |

      at Object.toHaveProperty (tests/integration/routes/signals.integration.test.js:80:24)

  ‚óè Signals Routes ‚Ä∫ GET /api/signals/sell ‚Ä∫ should return sell signals with AWS-compatible structure

    expect(received).toHaveProperty(path)

    Expected path: "signal"
    Received path: []

    Received value: {"confidence": "0.70", "date": "2025-09-23T05:00:00.000Z", "price": 88.38, "signal_type": "SELL", "symbol": "STOCK0", "timeframe": "daily", "volume": "2921732"}

      105 |         const signal = response.body.data[0];
      106 |         expect(signal).toHaveProperty("symbol");
    > 107 |         expect(signal).toHaveProperty("signal");
          |                        ^
      108 |         expect(signal).toHaveProperty("signal_date");
      109 |         expect(signal).toHaveProperty("confidence");
      110 |         expect(signal).toHaveProperty("entry_price"); // from price_daily JOIN

      at Object.toHaveProperty (tests/integration/routes/signals.integration.test.js:107:24)

  ‚óè Signals Routes ‚Ä∫ POST /api/signals/alerts ‚Ä∫ should create signal alert successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: 201
    Received: 500

      138 |         .send(alertData);
      139 |
    > 140 |       expect(response.status).toBe(201);
          |                               ^
      141 |       expect(response.body.success).toBe(true);
      142 |       expect(response.body).toHaveProperty("data");
      143 |       expect(response.body.data).toHaveProperty("alert_id");

      at Object.toBe (tests/integration/routes/signals.integration.test.js:140:31)

  ‚óè Signals Routes ‚Ä∫ DELETE /api/signals/alerts/:alertId ‚Ä∫ should delete alert successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      197 |       const response = await request(app).delete("/api/signals/alerts/123");
      198 |
    > 199 |       expect(response.status).toBe(200);
          |                               ^
      200 |       expect(response.body.success).toBe(true);
      201 |       expect(response.body).toHaveProperty("message");
      202 |     });

      at Object.toBe (tests/integration/routes/signals.integration.test.js:199:31)

FAIL tests/integration/routes/risk.integration.test.js
  ‚óè Risk Routes Integration ‚Ä∫ GET /risk/analysis ‚Ä∫ should handle risk analysis requests

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      60 |         });
      61 |
    > 62 |       expect(response.status).toBe(200);
         |                               ^
      63 |       expect(response.body).toBeDefined();
      64 |       expect(response.body).toHaveProperty("success", true);
      65 |     });

      at Object.toBe (tests/integration/routes/risk.integration.test.js:62:31)

  ‚óè Risk Routes Integration ‚Ä∫ GET /risk/analysis ‚Ä∫ should handle different time periods

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      71 |         .query({ period: "1m" });
      72 |
    > 73 |       expect(response.status).toBe(200);
         |                               ^
      74 |       expect(response.body).toBeDefined();
      75 |       expect(response.body).toHaveProperty("success", true);
      76 |     });

      at Object.toBe (tests/integration/routes/risk.integration.test.js:73:31)

  ‚óè Risk Routes Integration ‚Ä∫ GET /risk/analysis ‚Ä∫ should handle missing query parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      81 |         .set("Authorization", "Bearer dev-bypass-token");
      82 |
    > 83 |       expect(response.status).toBe(200);
         |                               ^
      84 |       expect(response.body).toBeDefined();
      85 |       expect(response.body).toHaveProperty("success", true);
      86 |     });

      at Object.toBe (tests/integration/routes/risk.integration.test.js:83:31)

  ‚óè Risk Routes Integration ‚Ä∫ Security tests ‚Ä∫ should handle XSS attempts in query parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      144 |         });
      145 |
    > 146 |       expect(response.status).toBe(200);
          |                               ^
      147 |       expect(response.body).toBeDefined();
      148 |     });
      149 |

      at Object.toBe (tests/integration/routes/risk.integration.test.js:146:31)

  ‚óè Risk Routes Integration ‚Ä∫ Security tests ‚Ä∫ should handle malicious query parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      157 |         });
      158 |
    > 159 |       expect(response.status).toBe(200);
          |                               ^
      160 |       expect(response.body).toBeDefined();
      161 |     });
      162 |   });

      at Object.toBe (tests/integration/routes/risk.integration.test.js:159:31)

FAIL tests/integration/routes/earnings.integration.test.js
  ‚óè Earnings Data Integration ‚Ä∫ Earnings Calendar (Delegated) ‚Ä∫ should delegate to calendar earnings endpoint

    expect(received).toHaveProperty(path)

    Expected path: "earnings"
    Received path: []

    Received value: {"data": [{"eps_actual": "2.18", "eps_difference": null, "eps_estimate": "2.10", "last_updated": "2025-09-23T16:31:34.900Z", "quarter": "2024-01-01T06:00:00.000Z", "report_date": "2024-01-01T06:00:00.000Z", "surprise_percent": "3.8", "symbol": "AAPL"}, {"eps_actual": "1.64", "eps_difference": null, "eps_estimate": "1.59", "last_updated": "2025-09-23T16:31:34.900Z", "quarter": "2024-01-01T06:00:00.000Z", "report_date": "2024-01-01T06:00:00.000Z", "surprise_percent": "3.1", "symbol": "GOOGL"}, {"eps_actual": "2.93", "eps_difference": null, "eps_estimate": "2.85", "last_updated": "2025-09-23T16:31:34.900Z", "quarter": "2024-01-01T06:00:00.000Z", "report_date": "2024-01-01T06:00:00.000Z", "surprise_percent": "2.8", "symbol": "MSFT"}, {"eps_actual": "0.71", "eps_difference": null, "eps_estimate": "0.73", "last_updated": "2025-09-23T16:31:34.900Z", "quarter": "2024-01-01T06:00:00.000Z", "report_date": "2024-01-01T06:00:00.000Z", "surprise_percent": "-2.7", "symbol": "TSLA"}, {"eps_actual": "1.89", "eps_difference": null, "eps_estimate": "1.85", "last_updated": "2025-09-23T16:31:34.900Z", "quarter": "2023-10-01T05:00:00.000Z", "report_date": "2023-10-01T05:00:00.000Z", "surprise_percent": "2.2", "symbol": "AAPL"}, {"eps_actual": "2.69", "eps_difference": null, "eps_estimate": "2.65", "last_updated": "2025-09-23T16:31:34.900Z", "quarter": "2023-10-01T05:00:00.000Z", "report_date": "2023-10-01T05:00:00.000Z", "surprise_percent": "1.5", "symbol": "MSFT"}], "pagination": {"hasMore": false, "limit": 50, "page": 1, "total": 6}, "success": true, "timestamp": "2025-09-23T16:31:59.755Z"}

      17 |
      18 |       if (response.status === 200) {
    > 19 |         expect(response.body).toHaveProperty("earnings");
         |                               ^
      20 |         expect(Array.isArray(response.body.earnings)).toBe(true);
      21 |       }
      22 |     });

      at Object.toHaveProperty (tests/integration/routes/earnings.integration.test.js:19:31)

  ‚óè Earnings Data Integration ‚Ä∫ Earnings Calendar (Delegated) ‚Ä∫ should delegate symbol-specific requests to calendar

    expect(received).toHaveProperty(path)

    Expected path: "earnings"
    Received path: []

    Received value: {"count": 2, "data": [{"eps_actual": "2.18", "eps_difference": null, "eps_estimate": "2.10", "last_updated": "2025-09-23T16:31:34.900Z", "quarter": "2024-01-01T06:00:00.000Z", "report_date": "2024-01-01T06:00:00.000Z", "surprise_percent": "3.8", "symbol": "AAPL"}, {"eps_actual": "1.89", "eps_difference": null, "eps_estimate": "1.85", "last_updated": "2025-09-23T16:31:34.900Z", "quarter": "2023-10-01T05:00:00.000Z", "report_date": "2023-10-01T05:00:00.000Z", "surprise_percent": "2.2", "symbol": "AAPL"}], "success": true, "symbol": "AAPL", "timestamp": "2025-09-23T16:31:59.760Z"}

      28 |
      29 |       if (response.status === 200) {
    > 30 |         expect(response.body).toHaveProperty("earnings");
         |                               ^
      31 |         expect(Array.isArray(response.body.earnings)).toBe(true);
      32 |       }
      33 |     });

      at Object.toHaveProperty (tests/integration/routes/earnings.integration.test.js:30:31)

  ‚óè Earnings Data Integration ‚Ä∫ Earnings Calendar (Delegated) ‚Ä∫ should handle query parameters for delegation

    expect(received).toHaveProperty(path)

    Expected path: "earnings"
    Received path: []

    Received value: {"data": [{"eps_actual": "2.18", "eps_difference": null, "eps_estimate": "2.10", "last_updated": "2025-09-23T16:31:34.900Z", "quarter": "2024-01-01T06:00:00.000Z", "report_date": "2024-01-01T06:00:00.000Z", "surprise_percent": "3.8", "symbol": "AAPL"}, {"eps_actual": "1.64", "eps_difference": null, "eps_estimate": "1.59", "last_updated": "2025-09-23T16:31:34.900Z", "quarter": "2024-01-01T06:00:00.000Z", "report_date": "2024-01-01T06:00:00.000Z", "surprise_percent": "3.1", "symbol": "GOOGL"}, {"eps_actual": "2.93", "eps_difference": null, "eps_estimate": "2.85", "last_updated": "2025-09-23T16:31:34.900Z", "quarter": "2024-01-01T06:00:00.000Z", "report_date": "2024-01-01T06:00:00.000Z", "surprise_percent": "2.8", "symbol": "MSFT"}, {"eps_actual": "0.71", "eps_difference": null, "eps_estimate": "0.73", "last_updated": "2025-09-23T16:31:34.900Z", "quarter": "2024-01-01T06:00:00.000Z", "report_date": "2024-01-01T06:00:00.000Z", "surprise_percent": "-2.7", "symbol": "TSLA"}, {"eps_actual": "1.89", "eps_difference": null, "eps_estimate": "1.85", "last_updated": "2025-09-23T16:31:34.900Z", "quarter": "2023-10-01T05:00:00.000Z", "report_date": "2023-10-01T05:00:00.000Z", "surprise_percent": "2.2", "symbol": "AAPL"}], "pagination": {"hasMore": true, "limit": 5, "page": 1, "total": 5}, "success": true, "timestamp": "2025-09-23T16:31:59.763Z"}

      41 |
      42 |       if (response.status === 200) {
    > 43 |         expect(response.body).toHaveProperty("earnings");
         |                               ^
      44 |         expect(Array.isArray(response.body.earnings)).toBe(true);
      45 |         // Should respect limit parameter when delegating
      46 |         expect(response.body.earnings.length).toBeLessThanOrEqual(5);

      at Object.toHaveProperty (tests/integration/routes/earnings.integration.test.js:43:31)

  ‚óè Earnings Data Integration ‚Ä∫ Direct Calendar Earnings Access ‚Ä∫ should access earnings via calendar route directly

    expect(received).toHaveProperty(path)

    Expected path: "earnings"
    Received path: []

    Received value: {"data": {"earnings": [], "grouped_by_date": {}, "summary": {"completed_reports": 0, "message": "No earnings data found for the specified criteria", "sectors_represented": 0, "total_earnings": 0, "upcoming_reports": 0}}, "success": true, "timestamp": "2025-09-23T16:31:59.769Z"}

      56 |
      57 |       if (response.status === 200) {
    > 58 |         expect(response.body).toHaveProperty("earnings");
         |                               ^
      59 |         expect(Array.isArray(response.body.earnings)).toBe(true);
      60 |       }
      61 |     });

      at Object.toHaveProperty (tests/integration/routes/earnings.integration.test.js:58:31)

FAIL tests/integration/middleware/responseFormatter-middleware.integration.test.js
  ‚óè Response Formatter Middleware Integration ‚Ä∫ Error Response Formatting ‚Ä∫ should format error responses with consistent structure

    expect(received).toBe(expected) // Object.is equality

    Expected: 404
    Received: 401

      109 |         const response = await request(app).get(scenario.endpoint);
      110 |
    > 111 |         expect(response.status).toBe(scenario.expectedStatus);
          |                                 ^
      112 |         expect(response.headers["content-type"]).toMatch(/application\/json/);
      113 |
      114 |         // Error response should have error information

      at Object.toBe (tests/integration/middleware/responseFormatter-middleware.integration.test.js:111:33)

FAIL tests/unit/routes/alerts.test.js
  ‚óè Alerts Routes Unit Tests ‚Ä∫ GET /alerts/ ‚Ä∫ should return alerts info

    expected 200 "OK", got 401 "Unauthorized"

      30 |   describe("GET /alerts/", () => {
      31 |     test("should return alerts info", async () => {
    > 32 |       const response = await request(app).get("/alerts/").expect(200);
         |                                                           ^
      33 |
      34 |       expect(response.body).toHaveProperty("success");
      35 |       expect(response.body).toHaveProperty("status");

      at Object.expect (tests/unit/routes/alerts.test.js:32:59)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ GET /alerts/active ‚Ä∫ should return active alerts with proper structure

    expect(received).toHaveProperty(path)

    Expected path: "by_status"
    Received path: []

    Received value: {"active_alerts": 2, "alert_categories": {"price_alerts": 0, "risk_alerts": 2}, "severity_breakdown": {"high": 0, "low": 1, "medium": 1}, "total_alerts": 2, "triggered_alerts": 0, "urgent_alerts": 0}

      52 |         // Check summary structure
      53 |         expect(response.body.data.summary).toHaveProperty("total_alerts");
    > 54 |         expect(response.body.data.summary).toHaveProperty("by_status");
         |                                            ^
      55 |         expect(response.body.data.summary).toHaveProperty("by_type");
      56 |         expect(response.body.data.summary).toHaveProperty("by_priority");
      57 |       } else {

      at Object.toHaveProperty (tests/unit/routes/alerts.test.js:54:44)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ GET /alerts/active ‚Ä∫ should handle priority filter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      93 |               alert.priority === "high" || alert.priority === "critical"
      94 |           )
    > 95 |         ).toBe(true);
         |           ^
      96 |       }
      97 |     });
      98 |

      at Object.toBe (tests/unit/routes/alerts.test.js:95:11)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ GET /alerts/distance/:symbol ‚Ä∫ should return distance-based alert analysis

    expect(received).toHaveProperty(path)

    Expected path: "alerts"
    Received path: []

    Received value: {"active_alerts_count": 3, "current_price": 155.23, "distance_to_alerts": {"nearest_resistance": 158.75, "nearest_support": 145.5, "price_alerts": [{"distance": 5.23, "level": 150, "type": "price_above"}, {"distance": -10.23, "level": 140, "type": "price_below"}]}, "symbol": "AAPL"}

      123 |         expect(response.body.data).toHaveProperty("symbol", "AAPL");
      124 |         expect(response.body.data).toHaveProperty("current_price");
    > 125 |         expect(response.body.data).toHaveProperty("alerts");
          |                                    ^
      126 |         expect(response.body.data).toHaveProperty("summary");
      127 |
      128 |         // Check alert distance calculations

      at Object.toHaveProperty (tests/unit/routes/alerts.test.js:125:36)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ POST /alerts/volume ‚Ä∫ should create volume alert

    expect(received).toHaveProperty(path, value)

    Expected path: "symbol"
    Received path: []

    Expected value: "TSLA"
    Received value: {"alert": {"condition": "greater_than", "created_at": "2025-09-23T16:32:00.740Z", "id": 1660, "status": "active", "symbol": "TSLA", "threshold_multiplier": "2.50"}, "message": "Volume alert created successfully"}

      331 |       if (response.status === 201) {
      332 |         expect(response.body.success).toBe(true);
    > 333 |         expect(response.body.data).toHaveProperty("symbol", "TSLA");
          |                                    ^
      334 |         expect(response.body.data).toHaveProperty("threshold_multiplier", 2.5);
      335 |       } else {
      336 |         expect([400, 401]).toContain(response.status);

      at Object.toHaveProperty (tests/unit/routes/alerts.test.js:333:36)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ POST /alerts/volume ‚Ä∫ should validate threshold multiplier range

    expect(received).toContain(expected) // indexOf

    Expected substring: "threshold"
    Received string:    "Threshold multiplier must be between 1.1 and 10.0"

      352 |
      353 |       expect(response.body.success).toBe(false);
    > 354 |       expect(response.body.error).toContain("threshold");
          |                                   ^
      355 |     });
      356 |   });
      357 |

      at Object.toContain (tests/unit/routes/alerts.test.js:354:35)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ GET /alerts/volume/analysis/:symbol ‚Ä∫ should return volume analysis for symbol

    expect(received).toHaveProperty(path)

    Expected path: "current_volume"
    Received path: []

    Received value: {"current_analysis": null, "historical_data": [], "summary": {"has_unusual_volume": false, "volume_trend": "unknown"}, "symbol": "TSLA"}

      366 |       expect(response.body).toHaveProperty("data");
      367 |       expect(response.body.data).toHaveProperty("symbol", "TSLA");
    > 368 |       expect(response.body.data).toHaveProperty("current_volume");
          |                                  ^
      369 |       expect(response.body.data).toHaveProperty("average_volume");
      370 |       expect(response.body.data).toHaveProperty("volume_ratio");
      371 |       expect(response.body.data).toHaveProperty("alerts_triggered");

      at Object.toHaveProperty (tests/unit/routes/alerts.test.js:368:34)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ GET /alerts/technical/status/:symbol ‚Ä∫ should return technical alert status

    expect(received).toHaveProperty(path)

    Expected path: "current_indicators"
    Received path: []

    Received value: {"summary": {"active_alerts": 0, "total_alerts": 0, "triggered_alerts": 0}, "symbol": "AAPL", "technical_alerts": []}

      467 |       expect(response.body.data).toHaveProperty("symbol", "AAPL");
      468 |       expect(response.body.data).toHaveProperty("technical_alerts");
    > 469 |       expect(response.body.data).toHaveProperty("current_indicators");
          |                                  ^
      470 |     });
      471 |
      472 |     test("should filter by indicator type", async () => {

      at Object.toHaveProperty (tests/unit/routes/alerts.test.js:469:34)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ POST /alerts/news ‚Ä∫ should create news sentiment alert

    expect(received).toHaveProperty(path, value)

    Expected path: "symbol"
    Received path: []

    Expected value: "NFLX"
    Received value: {"alert": {"created_at": "2025-09-23T16:32:00.763Z", "id": 291, "sentiment_threshold": "-0.5000", "sentiment_type": "negative", "sources": [], "status": "active", "symbol": "NFLX"}, "message": "News sentiment alert created successfully"}

      507 |       if (response.status === 201) {
      508 |         expect(response.body.success).toBe(true);
    > 509 |         expect(response.body.data).toHaveProperty("symbol", "NFLX");
          |                                    ^
      510 |         expect(response.body.data).toHaveProperty("sentiment_threshold", -0.5);
      511 |       } else {
      512 |         expect([400, 401]).toContain(response.status);

      at Object.toHaveProperty (tests/unit/routes/alerts.test.js:509:36)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ POST /alerts/news ‚Ä∫ should validate news sources

    expected 400 "Bad Request", got 201 "Created"

      526 |         .set("Authorization", "Bearer dev-bypass-token")
      527 |         .send(invalidSourceData)
    > 528 |         .expect(400);
          |          ^
      529 |
      530 |       expect(response.body.success).toBe(false);
      531 |       expect(response.body.error).toContain("source");

      at Object.expect (tests/unit/routes/alerts.test.js:528:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ GET /alerts/news/recent/:symbol ‚Ä∫ should return recent news alerts

    expect(received).toHaveProperty(path)

    Expected path: "news_alerts"
    Received path: []

    Received value: {"recent_alerts": [], "summary": {"total_alerts": 0, "unique_sources": []}, "symbol": "AAPL", "time_period": "24 hours"}

      543 |       expect(response.body).toHaveProperty("data");
      544 |       expect(response.body.data).toHaveProperty("symbol", "AAPL");
    > 545 |       expect(response.body.data).toHaveProperty("news_alerts");
          |                                  ^
      546 |       expect(response.body.data).toHaveProperty("sentiment_summary");
      547 |     });
      548 |

      at Object.toHaveProperty (tests/unit/routes/alerts.test.js:545:34)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ GET /alerts/portfolio/status ‚Ä∫ should return portfolio alert status

    expect(received).toHaveProperty(path)

    Expected path: "portfolio_metrics"
    Received path: []

    Received value: {"portfolio_alerts": [], "summary": {"active_alerts": 0, "total_alerts": 0, "triggered_alerts": 0}, "triggered_summary": []}

      620 |       expect(response.body).toHaveProperty("data");
      621 |       expect(response.body.data).toHaveProperty("portfolio_alerts");
    > 622 |       expect(response.body.data).toHaveProperty("portfolio_metrics");
          |                                  ^
      623 |       expect(response.body.data).toHaveProperty("risk_analysis");
      624 |     });
      625 |

      at Object.toHaveProperty (tests/unit/routes/alerts.test.js:622:34)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ GET /alerts/portfolio/status ‚Ä∫ should include triggered alerts summary

    expect(received).toHaveProperty(path)

    Expected path: "total_triggered"
    Received path: []

    Received value: []

      632 |       expect(response.body.success).toBe(true);
      633 |       if (response.body.data.triggered_summary) {
    > 634 |         expect(response.body.data.triggered_summary).toHaveProperty(
          |                                                      ^
      635 |           "total_triggered"
      636 |         );
      637 |         expect(response.body.data.triggered_summary).toHaveProperty("by_type");

      at Object.toHaveProperty (tests/unit/routes/alerts.test.js:634:54)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ POST /alerts/bulk/dismiss ‚Ä∫ should dismiss multiple alerts

    expect(received).toHaveProperty(path)

    Expected path: "failed_count"
    Received path: []

    Received value: {"dismissed_alerts": [{"id": 2, "status": "dismissed", "symbol": "TSLA"}], "dismissed_count": 1, "message": "1 alerts dismissed successfully"}

      722 |         expect(response.body.success).toBe(true);
      723 |         expect(response.body.data).toHaveProperty("dismissed_count");
    > 724 |         expect(response.body.data).toHaveProperty("failed_count");
          |                                    ^
      725 |       } else {
      726 |         expect([400, 401]).toContain(response.status);
      727 |       }

      at Object.toHaveProperty (tests/unit/routes/alerts.test.js:724:36)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ GET /alerts/history ‚Ä∫ should return alert history with pagination

    expect(received).toHaveProperty(path)

    Expected path: "pagination"
    Received path: []

    Received value: {"alerts": [{"condition": "below", "created_at": "2025-09-12T09:41:58.860Z", "current_value": 322.45, "id": 2, "last_triggered": null, "message": "Alert when TSLA drops below $300", "priority": "low", "status": "dismissed", "symbol": "TSLA", "threshold": 300, "trigger_count": 0, "type": "price_alert"}], "by_status": {"dismissed": [{"condition": "below", "created_at": "2025-09-12T09:41:58.860Z", "current_value": 322.45, "id": 2, "last_triggered": null, "message": "Alert when TSLA drops below $300", "priority": "low", "status": "dismissed", "symbol": "TSLA", "threshold": 300, "trigger_count": 0, "type": "price_alert"}]}, "filters": {"category": "all", "limit": 100, "status": "all"}, "summary": {"active": 0, "inactive": 0, "total_alerts": 1, "triggered": 0}, "total": 1}

      758 |       expect(response.body).toHaveProperty("data");
      759 |       expect(response.body.data).toHaveProperty("alerts");
    > 760 |       expect(response.body.data).toHaveProperty("pagination");
          |                                  ^
      761 |       expect(response.body.data).toHaveProperty("summary");
      762 |     });
      763 |

      at Object.toHaveProperty (tests/unit/routes/alerts.test.js:760:34)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ GET /alerts/history ‚Ä∫ should filter by alert type

    expect(received).toBe(expected) // Object.is equality

    Expected: "price_above"
    Received: undefined

      790 |       if (response.body.data.alerts.length > 0) {
      791 |         response.body.data.alerts.forEach((alert) => {
    > 792 |           expect(alert.alert_type).toBe("price_above");
          |                                    ^
      793 |         });
      794 |       }
      795 |     });

      at toBe (tests/unit/routes/alerts.test.js:792:36)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/unit/routes/alerts.test.js:791:35)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ GET /alerts/history/performance ‚Ä∫ should return alert performance analytics

    expect(received).toHaveProperty(path)

    Expected path: "alert_accuracy"
    Received path: []

    Received value: {"breakdown_by_type": [{"alert_type": "price_alert", "avg_days_to_trigger": null, "count": "1", "status": "dismissed"}], "performance_metrics": [{"active_count": "0", "alert_type": "price_alert", "avg_trigger_time_hours": null, "total_alerts": "1", "triggered_count": "0"}], "summary": {"filter_applied": "none", "total_performance_records": 1}}

      806 |       expect(response.body).toHaveProperty("data");
      807 |       expect(response.body.data).toHaveProperty("performance_metrics");
    > 808 |       expect(response.body.data).toHaveProperty("alert_accuracy");
          |                                  ^
      809 |       expect(response.body.data).toHaveProperty("response_times");
      810 |     });
      811 |

      at Object.toHaveProperty (tests/unit/routes/alerts.test.js:808:34)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ GET /alerts/settings ‚Ä∫ should return user alert settings

    expect(received).toHaveProperty(path)

    Expected path: "notification_preferences"
    Received path: []

    Received value: {"quick_actions": [{"action": "enable_all_notifications", "description": "Enable all notification channels", "endpoint": "PUT /api/alerts/settings/notifications"}, {"action": "pause_all_alerts", "description": "Temporarily pause all alert delivery", "endpoint": "PUT /api/alerts/settings/pause"}, {"action": "reset_to_defaults", "description": "Reset all settings to recommended defaults", "endpoint": "PUT /api/alerts/settings/reset"}, {"action": "export_settings", "description": "Export current settings as JSON", "endpoint": "GET /api/alerts/settings/export"}], "settings": {"advanced_settings": {"alert_priority_scoring": true, "auto_pause_settings": {"auto_resume": true, "vacation_end": null, "vacation_mode": false, "vacation_start": null}, "batch_alerts": false, "risk_management": {"cool_down_periods": {"high_frequency_symbols": 5, "low_frequency_symbols": 1}, "max_daily_alerts": 50}, "smart_timing": true}, "alert_categories": {"earnings_alerts": {"enabled": true, "post_earnings_enabled": true, "pre_earnings_days": 3, "surprise_threshold": 10}, "market_alerts": {"circuit_breakers": true, "economic_events": true, "enabled": true, "market_open_close": false, "sector_rotation": true, "vix_threshold": 30}, "news_alerts": {"enabled": true, "keywords_blacklist": ["crypto", "bitcoin"], "keywords_whitelist": [], "sentiment_threshold": 0.7, "sources": ["reuters", "bloomberg", "cnbc", "marketwatch"]}, "portfolio_alerts": {"corporate_actions": true, "daily_pnl_threshold": 1000, "dividend_announcements": true, "enabled": true, "margin_alerts": true, "position_change_threshold": 10}, "price_alerts": {"enabled": true, "frequency": "immediate", "include_after_hours": false, "threshold_percentage": 5}, "social_sentiment_alerts": {"enabled": false, "influencer_mentions": true, "mention_threshold": 1000, "platforms": ["twitter", "reddit", "stocktwits"], "sentiment_threshold": 0.8}, "technical_alerts": {"enabled": true, "indicators": {"bollinger_bands": {"enabled": true}, "macd_crossover": {"enabled": true}, "moving_average_cross": {"enabled": true, "periods": [20, 50]}, "rsi_overbought": {"enabled": true, "threshold": 80}, "rsi_oversold": {"enabled": true, "threshold": 20}}, "pattern_alerts": {"breakouts": true, "reversals": true, "support_resistance": true}}, "volume_alerts": {"enabled": true, "frequency": "immediate", "minimum_volume": 1000000, "threshold_multiplier": 2}}, "alert_history": {"duplicate_suppression": true, "max_alerts_per_day": 100, "retention_days": 30, "suppression_window_minutes": 15}, "created_at": "2025-01-15T10:30:00Z", "delivery_settings": {"discord_webhook": null, "email_address": "user@example.com", "phone_number": null, "push_device_tokens": ["device_token_12345"], "quiet_hours": {"days": ["monday", "tuesday", "wednesday", "thursday", "friday"], "enabled": true, "end_time": "07:00", "start_time": "22:00"}, "slack_webhook": null, "time_zone": "America/New_York"}, "integrations": {"third_party_services": {"custom_webhooks": [], "ifttt": {"enabled": false, "webhook_url": null}, "zapier": {"enabled": false, "webhook_url": null}}, "trading_platforms": {"alpaca": {"api_key_set": false, "enabled": false}, "interactive_brokers": {"api_key_set": false, "enabled": false}, "td_ameritrade": {"api_key_set": false, "enabled": false}}}, "last_settings_change": "2025-09-23T16:32:00.821Z", "notification_preferences": {"browser_enabled": false, "discord_enabled": false, "email_enabled": false, "push_enabled": false, "slack_enabled": false, "sms_enabled": false}, "subscription_info": {"alerts_limit_daily": 100, "alerts_used_today": 23, "plan": "premium", "plan_expires": "2025-12-31T23:59:59Z", "premium_features": ["unlimited_alerts", "advanced_indicators", "social_sentiment", "custom_webhooks", "alert_backtesting"]}, "updated_at": "2025-09-23T16:32:00.821Z", "user_id": "test-user-123", "version": "2.1.0", "watchlist_settings": {"default_watchlist_alerts": true, "per_symbol_settings": {"AAPL": {"earnings_priority": "high", "price_threshold": 2.5, "volume_multiplier": 1.5}, "TSLA": {"price_threshold": 7.5, "social_sentiment": true, "volume_multiplier": 3}}}}, "summary": {"alerts_remaining_today": 77, "alerts_used_today": 23, "settings_last_modified": "2025-09-23T16:32:00.821Z", "subscription_plan": "premium", "total_categories_enabled": 7, "total_notification_channels": 0, "watchlist_symbols_with_custom_settings": 2}}

      836 |       expect(response.body).toHaveProperty("success", true);
      837 |       expect(response.body).toHaveProperty("data");
    > 838 |       expect(response.body.data).toHaveProperty("notification_preferences");
          |                                  ^
      839 |       expect(response.body.data).toHaveProperty("alert_limits");
      840 |       expect(response.body.data).toHaveProperty("default_settings");
      841 |     });

      at Object.toHaveProperty (tests/unit/routes/alerts.test.js:838:34)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ PUT /alerts/settings ‚Ä∫ should validate settings data

    expect(received).toContain(expected) // indexOf

    Expected substring: "validation"
    Received string:    "Invalid settings: max_daily_alerts must be non-negative"

      882 |
      883 |       expect(response.body.success).toBe(false);
    > 884 |       expect(response.body.error).toContain("validation");
          |                                   ^
      885 |     });
      886 |   });
      887 |

      at Object.toContain (tests/unit/routes/alerts.test.js:884:35)

  ‚óè Alerts Routes Unit Tests ‚Ä∫ Error Handling ‚Ä∫ should handle rate limiting for alert creation

    expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      953 |       // At least some should succeed
      954 |       const successCount = responses.filter((r) => r.status === 201).length;
    > 955 |       expect(successCount).toBeGreaterThan(0);
          |                            ^
      956 |     });
      957 |   });
      958 | });

      at Object.toBeGreaterThan (tests/unit/routes/alerts.test.js:955:28)

FAIL tests/unit/routes/stocks.test.js
  ‚óè Stocks Routes Unit Tests ‚Ä∫ POST /stocks/init-price-data ‚Ä∫ should initialize price data successfully

    expected 200 "OK", got 501 "Not Implemented"

      145 |         .set("Authorization", "Bearer dev-bypass-token")
      146 |         .send(testData)
    > 147 |         .expect(200);
          |          ^
      148 |
      149 |       expect(response.body.success).toBe(true);
      150 |       expect(response.body.message).toBe("Price data initialization completed");

      at Object.expect (tests/unit/routes/stocks.test.js:147:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Stocks Routes Unit Tests ‚Ä∫ POST /stocks/init-price-data ‚Ä∫ should handle missing symbols array

    expected 400 "Bad Request", got 501 "Not Implemented"

      163 |         .set("Authorization", "Bearer dev-bypass-token")
      164 |         .send({})
    > 165 |         .expect(400);
          |          ^
      166 |
      167 |       expect(response.body.success).toBe(false);
      168 |       expect(response.body.error).toBe("Invalid symbols array");

      at Object.expect (tests/unit/routes/stocks.test.js:165:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Stocks Routes Unit Tests ‚Ä∫ POST /stocks/init-price-data ‚Ä∫ should handle empty symbols array

    expected 400 "Bad Request", got 501 "Not Implemented"

      175 |         .set("Authorization", "Bearer dev-bypass-token")
      176 |         .send({ symbols: [] })
    > 177 |         .expect(400);
          |          ^
      178 |
      179 |       expect(response.body.success).toBe(false);
      180 |       expect(response.body.error).toBe("Invalid symbols array");

      at Object.expect (tests/unit/routes/stocks.test.js:177:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Stocks Routes Unit Tests ‚Ä∫ POST /stocks/init-price-data ‚Ä∫ should handle force_error parameter

    expected 500 "Internal Server Error", got 501 "Not Implemented"

      189 |           force_error: true,
      190 |         })
    > 191 |         .expect(500);
          |          ^
      192 |
      193 |       expect(response.body.success).toBe(false);
      194 |       expect(response.body.error).toBe("Failed to initialize price data");

      at Object.expect (tests/unit/routes/stocks.test.js:191:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Stocks Routes Unit Tests ‚Ä∫ POST /stocks/init-price-data ‚Ä∫ should use default date range when not provided

    expected 200 "OK", got 501 "Not Implemented"

      201 |         .set("Authorization", "Bearer dev-bypass-token")
      202 |         .send({ symbols: ["AAPL"] })
    > 203 |         .expect(200);
          |          ^
      204 |
      205 |       expect(response.body.success).toBe(true);
      206 |       expect(response.body.data.initialization_results[0]).toHaveProperty(

      at Object.expect (tests/unit/routes/stocks.test.js:203:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Stocks Routes Unit Tests ‚Ä∫ POST /stocks/init-price-data ‚Ä∫ should limit symbols to 50 for performance

    expected 200 "OK", got 501 "Not Implemented"

      220 |         .set("Authorization", "Bearer dev-bypass-token")
      221 |         .send({ symbols: manySymbols })
    > 222 |         .expect(200);
          |          ^
      223 |
      224 |       expect(response.body.success).toBe(true);
      225 |       expect(response.body.data.initialization_results).toHaveLength(50); // Should be limited to 50

      at Object.expect (tests/unit/routes/stocks.test.js:222:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Stocks Routes Unit Tests ‚Ä∫ POST /stocks/init-price-data ‚Ä∫ should handle different frequencies

    expected 200 "OK", got 501 "Not Implemented"

      237 |           end_date: "2023-03-31",
      238 |         })
    > 239 |         .expect(200);
          |          ^
      240 |
      241 |       expect(response.body.success).toBe(true);
      242 |       expect(response.body.data.summary.frequency).toBe("weekly");

      at Object.expect (tests/unit/routes/stocks.test.js:239:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Stocks Routes Unit Tests ‚Ä∫ POST /stocks/init-price-data ‚Ä∫ should include realistic price data

    expected 200 "OK", got 501 "Not Implemented"

      255 |           end_date: "2023-01-07",
      256 |         })
    > 257 |         .expect(200);
          |          ^
      258 |
      259 |       expect(response.body.success).toBe(true);
      260 |       const result = response.body.data.initialization_results[0];

      at Object.expect (tests/unit/routes/stocks.test.js:257:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Stocks Routes Unit Tests ‚Ä∫ GET /stocks/trending ‚Ä∫ should return trending stocks

    expected 200 "OK", got 500 "Internal Server Error"

      314 |         .get("/stocks/trending")
      315 |         .set("Authorization", "Bearer dev-bypass-token")
    > 316 |         .expect(200);
          |          ^
      317 |
      318 |       expect(response.body).toHaveProperty("success", true);
      319 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/stocks.test.js:316:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Stocks Routes Unit Tests ‚Ä∫ GET /stocks/trending ‚Ä∫ should handle trending with timeframe

    expected 200 "OK", got 500 "Internal Server Error"

      324 |         .get("/stocks/trending?timeframe=1d")
      325 |         .set("Authorization", "Bearer dev-bypass-token")
    > 326 |         .expect(200);
          |          ^
      327 |
      328 |       expect(response.body).toHaveProperty("success", true);
      329 |     });

      at Object.expect (tests/unit/routes/stocks.test.js:326:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Stocks Routes Unit Tests ‚Ä∫ GET /stocks/trending ‚Ä∫ should handle trending with different categories

    expected 200 "OK", got 500 "Internal Server Error"

      333 |         .get("/stocks/trending?category=gainers")
      334 |         .set("Authorization", "Bearer dev-bypass-token")
    > 335 |         .expect(200);
          |          ^
      336 |
      337 |       expect(response.body).toHaveProperty("success", true);
      338 |     });

      at Object.expect (tests/unit/routes/stocks.test.js:335:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

FAIL tests/unit/routes/trading.test.js
  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/risk/portfolio ‚Ä∫ should return comprehensive portfolio risk analysis

    expect(received).toBe(expected) // Object.is equality

    Expected: "number"
    Received: "object"

      266 |       expect(data.concentrationRisk).toBeGreaterThanOrEqual(0);
      267 |
    > 268 |       expect(typeof data.volatility).toBe("number");
          |                                      ^
      269 |       expect(data.volatility).toBeGreaterThanOrEqual(0);
      270 |
      271 |       expect(typeof data.beta).toBe("number");

      at Object.toBe (tests/unit/routes/trading.test.js:268:38)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/strategies ‚Ä∫ should return available trading strategies

    expect(received).toHaveProperty(path, value)

    Expected path: "success"
    Received path: []

    Expected value: true
    Received value: {"data": [], "filters_applied": {"active_only": false, "category": "all", "limit": 50, "risk_level": "all"}, "metadata": {"available_categories": [], "available_risk_levels": [], "available_time_horizons": [], "data_quality": "synthetic_high_fidelity", "last_updated": "2025-09-23T16:32:01.422Z"}, "summary": {"active_strategies": 0, "category_breakdown": {}, "filtered_count": 0, "inactive_strategies": 0, "performance_overview": {"avg_win_rate": null, "avg_ytd_return": null, "top_performer": "N/A", "total_signals": 0}, "total_strategies": 0}, "timestamp": "2025-09-23T16:32:01.422Z"}

      606 |         .expect(200);
      607 |
    > 608 |       expect(response.body).toHaveProperty("success", true);
          |                             ^
      609 |       expect(response.body).toHaveProperty("data");
      610 |       expect(response.body.data).toHaveProperty("strategies");
      611 |       expect(Array.isArray(response.body.data.strategies)).toBe(true);

      at Object.toHaveProperty (tests/unit/routes/trading.test.js:608:29)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/strategies ‚Ä∫ should filter strategies by type

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: undefined

      617 |         .expect(200);
      618 |
    > 619 |       expect(response.body.success).toBe(true);
          |                                     ^
      620 |       if (response.body.data.strategies.length > 0) {
      621 |         response.body.data.strategies.forEach((strategy) => {
      622 |           expect(strategy.type).toBe("momentum");

      at Object.toBe (tests/unit/routes/trading.test.js:619:37)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/strategies ‚Ä∫ should include performance metrics

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: undefined

      630 |         .expect(200);
      631 |
    > 632 |       expect(response.body.success).toBe(true);
          |                                     ^
      633 |       if (response.body.data.strategies.length > 0) {
      634 |         const strategy = response.body.data.strategies[0];
      635 |         expect(strategy).toHaveProperty("performance");

      at Object.toBe (tests/unit/routes/trading.test.js:632:37)

  ‚óè Trading Routes Unit Tests ‚Ä∫ POST /trading/strategies ‚Ä∫ should create a new trading strategy

    expected 201 "Created", got 404 "Not Found"

      660 |         .post("/trading/strategies")
      661 |         .send(strategyData)
    > 662 |         .expect(201);
          |          ^
      663 |
      664 |       expect(response.body.success).toBe(true);
      665 |       expect(response.body.data).toHaveProperty("strategyId");

      at Object.expect (tests/unit/routes/trading.test.js:662:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trading Routes Unit Tests ‚Ä∫ POST /trading/strategies ‚Ä∫ should validate required fields

    expected 400 "Bad Request", got 404 "Not Found"

      674 |         .post("/trading/strategies")
      675 |         .send(invalidData)
    > 676 |         .expect(400);
          |          ^
      677 |
      678 |       expect(response.body.success).toBe(false);
      679 |       expect(response.body).toHaveProperty("error");

      at Object.expect (tests/unit/routes/trading.test.js:676:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/analytics/performance ‚Ä∫ should return trading performance analytics

    expected 200 "OK", got 404 "Not Found"

      689 |       const response = await request(app)
      690 |         .get("/trading/analytics/performance")
    > 691 |         .expect(200);
          |          ^
      692 |
      693 |       expect(response.body).toHaveProperty("success", true);
      694 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/trading.test.js:691:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/analytics/performance ‚Ä∫ should handle time period filters

    expected 200 "OK", got 404 "Not Found"

      708 |       const response = await request(app)
      709 |         .get("/trading/analytics/performance?period=30d")
    > 710 |         .expect(200);
          |          ^
      711 |
      712 |       expect(response.body.success).toBe(true);
      713 |       expect(response.body.data).toHaveProperty("period", "30d");

      at Object.expect (tests/unit/routes/trading.test.js:710:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/analytics/performance ‚Ä∫ should include benchmark comparison

    expected 200 "OK", got 404 "Not Found"

      717 |       const response = await request(app)
      718 |         .get("/trading/analytics/performance?benchmark=SPY")
    > 719 |         .expect(200);
          |          ^
      720 |
      721 |       expect(response.body.success).toBe(true);
      722 |       if (response.body.data.benchmark) {

      at Object.expect (tests/unit/routes/trading.test.js:719:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/analytics/trades ‚Ä∫ should return detailed trade analysis

    expected 200 "OK", got 404 "Not Found"

      731 |       const response = await request(app)
      732 |         .get("/trading/analytics/trades")
    > 733 |         .expect(200);
          |          ^
      734 |
      735 |       expect(response.body).toHaveProperty("success", true);
      736 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/trading.test.js:733:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/analytics/trades ‚Ä∫ should filter trades by symbol

    expected 200 "OK", got 404 "Not Found"

      748 |       const response = await request(app)
      749 |         .get("/trading/analytics/trades?symbol=AAPL")
    > 750 |         .expect(200);
          |          ^
      751 |
      752 |       expect(response.body.success).toBe(true);
      753 |       if (response.body.data.trades.length > 0) {

      at Object.expect (tests/unit/routes/trading.test.js:750:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/analytics/trades ‚Ä∫ should support pagination

    expected 200 "OK", got 404 "Not Found"

      761 |       const response = await request(app)
      762 |         .get("/trading/analytics/trades?page=1&limit=10")
    > 763 |         .expect(200);
          |          ^
      764 |
      765 |       expect(response.body.success).toBe(true);
      766 |       expect(response.body.data).toHaveProperty("pagination");

      at Object.expect (tests/unit/routes/trading.test.js:763:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/market/hours ‚Ä∫ should return trading hours for current week

    expect(received).toHaveProperty(path)

    Expected path: "regularHours"
    Received path: []

    Received value: {"after_hours": {"close": "20:00:00", "open": "16:00:00"}, "date": "2025-09-23", "early_hours": {"close": "09:30:00", "open": "04:00:00"}, "is_open": true, "session_close": "16:00:00", "session_open": "09:30:00", "timezone": "America/New_York"}

      811 |       expect(response.body).toHaveProperty("success", true);
      812 |       expect(response.body).toHaveProperty("data");
    > 813 |       expect(response.body.data).toHaveProperty("regularHours");
          |                                  ^
      814 |       expect(response.body.data).toHaveProperty("extendedHours");
      815 |       expect(response.body.data).toHaveProperty("holidays");
      816 |     });

      at Object.toHaveProperty (tests/unit/routes/trading.test.js:813:34)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/quotes/:symbol ‚Ä∫ should return real-time quote for valid symbol

    expected 200 "OK", got 404 "Not Found"

      834 |       const response = await request(app)
      835 |         .get("/trading/quotes/AAPL")
    > 836 |         .expect(200);
          |          ^
      837 |
      838 |       expect(response.body).toHaveProperty("success", true);
      839 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/trading.test.js:836:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/quotes/:symbol ‚Ä∫ should include bid/ask spread information

    expected 200 "OK", got 404 "Not Found"

      850 |       const response = await request(app)
      851 |         .get("/trading/quotes/AAPL?include_spread=true")
    > 852 |         .expect(200);
          |          ^
      853 |
      854 |       expect(response.body.success).toBe(true);
      855 |       if (response.body.data.spread) {

      at Object.expect (tests/unit/routes/trading.test.js:852:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/quotes/:symbol ‚Ä∫ should handle invalid symbols gracefully

    expected 404 "Not Found", got 400 "Bad Request"

      864 |       const response = await request(app)
      865 |         .get("/trading/quotes/INVALID123")
    > 866 |         .expect(404);
          |          ^
      867 |
      868 |       expect(response.body.success).toBe(false);
      869 |       expect(response.body).toHaveProperty("error");

      at Object.expect (tests/unit/routes/trading.test.js:866:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trading Routes Unit Tests ‚Ä∫ POST /trading/quotes/batch ‚Ä∫ should return quotes for multiple symbols

    expected 200 "OK", got 404 "Not Found"

      878 |         .post("/trading/quotes/batch")
      879 |         .send(symbols)
    > 880 |         .expect(200);
          |          ^
      881 |
      882 |       expect(response.body).toHaveProperty("success", true);
      883 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/trading.test.js:880:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trading Routes Unit Tests ‚Ä∫ POST /trading/quotes/batch ‚Ä∫ should limit batch size

    expected 400 "Bad Request", got 404 "Not Found"

      902 |         .post("/trading/quotes/batch")
      903 |         .send(tooManySymbols)
    > 904 |         .expect(400);
          |          ^
      905 |
      906 |       expect(response.body.success).toBe(false);
      907 |       expect(response.body).toHaveProperty("error");

      at Object.expect (tests/unit/routes/trading.test.js:904:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/paper/status ‚Ä∫ should return paper trading account status

    expect(received).toHaveProperty(path)

    Expected path: "account"
    Received path: []

    Received value: {"account_value": 100000, "buying_power": 50000, "cash": 25000, "currency": "USD", "day_trade_buying_power": 200000, "equity": 100000, "pattern_day_trader": false, "pending_transfers": 0}

      922 |       expect(response.body).toHaveProperty("success", true);
      923 |       expect(response.body).toHaveProperty("data");
    > 924 |       expect(response.body.data).toHaveProperty("account");
          |                                  ^
      925 |       expect(response.body.data).toHaveProperty("paperTrading");
      926 |
      927 |       const account = response.body.data.account;

      at Object.toHaveProperty (tests/unit/routes/trading.test.js:924:34)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/paper/status ‚Ä∫ should include performance metrics

    expect(received).toHaveProperty(path)

    Expected path: "totalReturn"
    Received path: []

    Received value: {"day_return": 125, "day_return_percent": 0.125, "realized_pl": 1300, "total_return": 2500, "total_return_percent": 2.5, "unrealized_pl": 1200}

      940 |       expect(response.body.success).toBe(true);
      941 |       if (response.body.data.performance) {
    > 942 |         expect(response.body.data.performance).toHaveProperty("totalReturn");
          |                                                ^
      943 |         expect(response.body.data.performance).toHaveProperty("dailyReturn");
      944 |       }
      945 |     });

      at Object.toHaveProperty (tests/unit/routes/trading.test.js:942:48)

  ‚óè Trading Routes Unit Tests ‚Ä∫ POST /trading/paper/reset ‚Ä∫ should reset paper trading account

    expect(received).toHaveProperty(path, value)

    Expected path: "newBalance"
    Received path: []

    Expected value: 100000
    Received value: {"account_value": 100000, "buying_power": 50000, "cash": 25000, "initial_balance": 100000, "reset_at": "2025-09-23T16:32:01.455Z"}

      960 |       expect(response.body).toHaveProperty("success", true);
      961 |       expect(response.body).toHaveProperty("message");
    > 962 |       expect(response.body.data).toHaveProperty("newBalance", 100000);
          |                                  ^
      963 |       expect(response.body.data).toHaveProperty("resetAt");
      964 |     });
      965 |

      at Object.toHaveProperty (tests/unit/routes/trading.test.js:962:34)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/orders ‚Ä∫ should return user orders with pagination

    expect(received).toHaveProperty(path)

    Expected path: "orders"
    Received path: []

    Received value: []

      986 |       expect(response.body).toHaveProperty("success", true);
      987 |       expect(response.body).toHaveProperty("data");
    > 988 |       expect(response.body.data).toHaveProperty("orders");
          |                                  ^
      989 |       expect(response.body.data).toHaveProperty("pagination");
      990 |       expect(Array.isArray(response.body.data.orders)).toBe(true);
      991 |     });

      at Object.toHaveProperty (tests/unit/routes/trading.test.js:988:34)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/orders ‚Ä∫ should filter orders by status

    TypeError: Cannot read properties of undefined (reading 'length')

       997 |
       998 |       expect(response.body.success).toBe(true);
    >  999 |       if (response.body.data.orders.length > 0) {
           |                                     ^
      1000 |         response.body.data.orders.forEach((order) => {
      1001 |           expect(["pending", "open", "partially_filled"]).toContain(
      1002 |             order.status

      at Object.length (tests/unit/routes/trading.test.js:999:37)

  ‚óè Trading Routes Unit Tests ‚Ä∫ GET /trading/orders ‚Ä∫ should filter orders by symbol

    TypeError: Cannot read properties of undefined (reading 'length')

      1012 |
      1013 |       expect(response.body.success).toBe(true);
    > 1014 |       if (response.body.data.orders.length > 0) {
           |                                     ^
      1015 |         response.body.data.orders.forEach((order) => {
      1016 |           expect(order.symbol).toBe("AAPL");
      1017 |         });

      at Object.length (tests/unit/routes/trading.test.js:1014:37)

FAIL tests/integration/routes/commodities.integration.test.js
  ‚óè Commodities Routes Integration Tests ‚Ä∫ GET /api/commodities/prices (Current Prices) ‚Ä∫ should handle limit parameter

    expect(received).toBeLessThanOrEqual(expected)

    Expected: <= 5
    Received:    6

      163 |
      164 |       if (response.status === 200 && response.body.data.length > 0) {
    > 165 |         expect(response.body.data.length).toBeLessThanOrEqual(5);
          |                                           ^
      166 |       }
      167 |     });
      168 |

      at Object.toBeLessThanOrEqual (tests/integration/routes/commodities.integration.test.js:165:43)

  ‚óè Commodities Routes Integration Tests ‚Ä∫ GET /api/commodities/correlations (Price Correlations) ‚Ä∫ should validate correlation strength classifications

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      295 |         response.body.data.correlations.forEach((corr) => {
      296 |           if (corr.strength) {
    > 297 |             expect(validStrengths.includes(corr.strength.toLowerCase())).toBe(
          |                                                                          ^
      298 |               true
      299 |             );
      300 |           }

      at toBe (tests/integration/routes/commodities.integration.test.js:297:74)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/routes/commodities.integration.test.js:295:41)

  ‚óè Commodities Routes Integration Tests ‚Ä∫ GET /api/commodities/news (Commodity News) ‚Ä∫ should return commodity-related news

    expect(received).toHaveProperty(path)

    Expected path: "articles"
    Received path: []

    Received value: [{"category": "commodities", "id": 7, "publishedAt": "2025-09-22T04:00:05.183Z", "source": "WSJ", "symbol": "GLD", "title": "Gold Prices Surge on Economic Uncertainty", "url": "https://example.com/4"}, {"category": "energy", "id": 8, "publishedAt": "2025-09-22T03:00:05.183Z", "source": "MarketWatch", "symbol": "OIL", "title": "Oil Futures Rise Due to Supply Concerns", "url": "https://example.com/5"}]

      312 |       if (response.status === 200) {
      313 |         expect(response.body).toHaveProperty("data");
    > 314 |         expect(response.body.data).toHaveProperty("articles");
          |                                    ^
      315 |         expect(Array.isArray(response.body.data.articles)).toBe(true);
      316 |
      317 |         if (response.body.data.articles.length > 0) {

      at Object.toHaveProperty (tests/integration/routes/commodities.integration.test.js:314:36)

  ‚óè Commodities Routes Integration Tests ‚Ä∫ GET /api/commodities/news (Commodity News) ‚Ä∫ should handle category filter for news

    TypeError: Cannot read properties of undefined (reading 'length')

      339 |         expect([200, 400].includes(response.status)).toBe(true);
      340 |
    > 341 |         if (response.status === 200 && response.body.data.articles.length > 0) {
          |                                                                    ^
      342 |           response.body.data.articles.forEach((article) => {
      343 |             expect(article.category.toLowerCase()).toBe(category.toLowerCase());
      344 |           });

      at Object.length (tests/integration/routes/commodities.integration.test.js:341:68)

  ‚óè Commodities Routes Integration Tests ‚Ä∫ GET /api/commodities/news (Commodity News) ‚Ä∫ should handle limit parameter for news

    TypeError: Cannot read properties of undefined (reading 'length')

      353 |
      354 |       if (response.status === 200) {
    > 355 |         expect(response.body.data.articles.length).toBeLessThanOrEqual(5);
          |                                            ^
      356 |       }
      357 |     });
      358 |

      at Object.length (tests/integration/routes/commodities.integration.test.js:355:44)

  ‚óè Commodities Routes Integration Tests ‚Ä∫ GET /api/commodities/news (Commodity News) ‚Ä∫ should validate news article timestamps

    TypeError: Cannot read properties of undefined (reading 'length')

      360 |       const response = await request(app).get("/api/commodities/news");
      361 |
    > 362 |       if (response.status === 200 && response.body.data.articles.length > 0) {
          |                                                                  ^
      363 |         response.body.data.articles.forEach((article) => {
      364 |           if (article.published_at) {
      365 |             expect(new Date(article.published_at)).toBeInstanceOf(Date);

      at Object.length (tests/integration/routes/commodities.integration.test.js:362:66)

FAIL tests/integration/routes/performance.integration.test.js
  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance (Root Endpoint) ‚Ä∫ should return performance API information

    expect(received).toHaveProperty(path)

    Expected path: "message"
    Received path: []

    Received value: {"data": {"max_drawdown": 0.08, "sharpe_ratio": 1.2, "total_return": 0.15, "volatility": 0.12, "win_rate": 0.65}, "success": true, "timestamp": "2025-09-23T16:32:02.185Z"}

      25 |
      26 |       if (response.status === 200) {
    > 27 |         expect(response.body).toHaveProperty("message");
         |                               ^
      28 |         expect(response.body).toHaveProperty("timestamp");
      29 |         expect(response.body).toHaveProperty("status", "operational");
      30 |         expect(response.body.message).toContain("Performance Analytics API");

      at Object.toHaveProperty (tests/integration/routes/performance.integration.test.js:27:31)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/health (Health Check) ‚Ä∫ should return performance service health status

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      40 |       const response = await request(app).get("/api/performance/health");
      41 |
    > 42 |       expect(response.status).toBe(200);
         |                               ^
      43 |
      44 |       if (response.status === 200) {
      45 |         expect(response.body).toHaveProperty("status", "operational");

      at Object.toBe (tests/integration/routes/performance.integration.test.js:42:31)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/benchmark (Benchmark Comparison) ‚Ä∫ should require authentication for benchmark comparison

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      64 |       const response = await request(app).get("/api/performance/benchmark");
      65 |
    > 66 |       expect([401].includes(response.status)).toBe(true);
         |                                               ^
      67 |     });
      68 |
      69 |     test("should return benchmark comparison with authentication", async () => {

      at Object.toBe (tests/integration/routes/performance.integration.test.js:66:47)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/benchmark (Benchmark Comparison) ‚Ä∫ should return benchmark comparison with authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      72 |         .set("Authorization", `Bearer ${authToken}`);
      73 |
    > 74 |       expect([200, 401].includes(response.status)).toBe(true);
         |                                                    ^
      75 |
      76 |       if (response.status === 200) {
      77 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/performance.integration.test.js:74:52)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/benchmark (Benchmark Comparison) ‚Ä∫ should handle different benchmark symbols

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      100 |           .set("Authorization", `Bearer ${authToken}`);
      101 |
    > 102 |         expect([200, 400, 401].includes(response.status)).toBe(true);
          |                                                           ^
      103 |
      104 |         if (response.status === 200 && response.body.data.benchmark) {
      105 |           expect(response.body.data.benchmark).toHaveProperty(

      at Object.toBe (tests/integration/routes/performance.integration.test.js:102:59)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/benchmark (Benchmark Comparison) ‚Ä∫ should handle different time periods

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      119 |           .set("Authorization", `Bearer ${authToken}`);
      120 |
    > 121 |         expect([200, 400, 401].includes(response.status)).toBe(true);
          |                                                           ^
      122 |
      123 |         if (response.status === 200 && response.body.data.comparison) {
      124 |           expect(response.body.data.comparison).toHaveProperty(

      at Object.toBe (tests/integration/routes/performance.integration.test.js:121:59)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/portfolio (Portfolio Performance) ‚Ä∫ should require authentication for portfolio performance

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      168 |       const response = await request(app).get("/api/performance/portfolio");
      169 |
    > 170 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      171 |     });
      172 |
      173 |     test("should return portfolio performance data with authentication", async () => {

      at Object.toBe (tests/integration/routes/performance.integration.test.js:170:47)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/portfolio (Portfolio Performance) ‚Ä∫ should return portfolio performance data with authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      176 |         .set("Authorization", `Bearer ${authToken}`);
      177 |
    > 178 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      179 |
      180 |       if (response.status === 200) {
      181 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/performance.integration.test.js:178:52)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/portfolio (Portfolio Performance) ‚Ä∫ should handle period parameter for portfolio performance

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      205 |           .set("Authorization", `Bearer ${authToken}`);
      206 |
    > 207 |         expect([200, 400, 401].includes(response.status)).toBe(true);
          |                                                           ^
      208 |       }
      209 |     });
      210 |

      at Object.toBe (tests/integration/routes/performance.integration.test.js:207:59)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/returns (Return Calculations) ‚Ä∫ should require authentication for return calculations

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      257 |       const response = await request(app).get("/api/performance/returns");
      258 |
    > 259 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      260 |     });
      261 |
      262 |     test("should return return calculations with authentication", async () => {

      at Object.toBe (tests/integration/routes/performance.integration.test.js:259:47)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/returns (Return Calculations) ‚Ä∫ should return return calculations with authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      265 |         .set("Authorization", `Bearer ${authToken}`);
      266 |
    > 267 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      268 |
      269 |       if (response.status === 200) {
      270 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/performance.integration.test.js:267:52)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/returns (Return Calculations) ‚Ä∫ should handle calculation type parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      301 |           .set("Authorization", `Bearer ${authToken}`);
      302 |
    > 303 |         expect([200, 400, 401].includes(response.status)).toBe(true);
          |                                                           ^
      304 |       }
      305 |     });
      306 |   });

      at Object.toBe (tests/integration/routes/performance.integration.test.js:303:59)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/attribution (Performance Attribution) ‚Ä∫ should require authentication for performance attribution

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      310 |       const response = await request(app).get("/api/performance/attribution");
      311 |
    > 312 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      313 |     });
      314 |
      315 |     test("should return performance attribution analysis", async () => {

      at Object.toBe (tests/integration/routes/performance.integration.test.js:312:47)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/attribution (Performance Attribution) ‚Ä∫ should return performance attribution analysis

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      318 |         .set("Authorization", `Bearer ${authToken}`);
      319 |
    > 320 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      321 |
      322 |       if (response.status === 200) {
      323 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/performance.integration.test.js:320:52)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/attribution (Performance Attribution) ‚Ä∫ should handle attribution type parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      354 |           .set("Authorization", `Bearer ${authToken}`);
      355 |
    > 356 |         expect([200, 400, 401].includes(response.status)).toBe(true);
          |                                                           ^
      357 |       }
      358 |     });
      359 |   });

      at Object.toBe (tests/integration/routes/performance.integration.test.js:356:59)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/metrics (Performance Metrics) ‚Ä∫ should require authentication for performance metrics

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      363 |       const response = await request(app).get("/api/performance/metrics");
      364 |
    > 365 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      366 |     });
      367 |
      368 |     test("should return comprehensive performance metrics", async () => {

      at Object.toBe (tests/integration/routes/performance.integration.test.js:365:47)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/metrics (Performance Metrics) ‚Ä∫ should return comprehensive performance metrics

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      371 |         .set("Authorization", `Bearer ${authToken}`);
      372 |
    > 373 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      374 |
      375 |       if (response.status === 200) {
      376 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/performance.integration.test.js:373:52)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/metrics (Performance Metrics) ‚Ä∫ should handle period parameter for metrics

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      435 |           .set("Authorization", `Bearer ${authToken}`);
      436 |
    > 437 |         expect([200, 400, 401].includes(response.status)).toBe(true);
          |                                                           ^
      438 |       }
      439 |     });
      440 |   });

      at Object.toBe (tests/integration/routes/performance.integration.test.js:437:59)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/risk (Risk Metrics) ‚Ä∫ should require authentication for risk metrics

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      444 |       const response = await request(app).get("/api/performance/risk");
      445 |
    > 446 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      447 |     });
      448 |
      449 |     test("should return risk analysis metrics", async () => {

      at Object.toBe (tests/integration/routes/performance.integration.test.js:446:47)

  ‚óè Performance Routes Integration Tests ‚Ä∫ GET /api/performance/risk (Risk Metrics) ‚Ä∫ should return risk analysis metrics

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      452 |         .set("Authorization", `Bearer ${authToken}`);
      453 |
    > 454 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      455 |
      456 |       if (response.status === 200) {
      457 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/performance.integration.test.js:454:52)

  ‚óè Performance Routes Integration Tests ‚Ä∫ Performance and Edge Cases ‚Ä∫ should handle concurrent requests to performance endpoints

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      507 |
      508 |       responses.forEach((response) => {
    > 509 |         expect([200, 401].includes(response.status)).toBe(true);
          |                                                      ^
      510 |       });
      511 |     });
      512 |

      at toBe (tests/integration/routes/performance.integration.test.js:509:54)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/routes/performance.integration.test.js:508:17)

  ‚óè Performance Routes Integration Tests ‚Ä∫ Performance and Edge Cases ‚Ä∫ should maintain response time consistency

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      518 |       const responseTime = Date.now() - startTime;
      519 |
    > 520 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      521 |       expect(responseTime).toBeLessThan(15000);
      522 |     });
      523 |

      at Object.toBe (tests/integration/routes/performance.integration.test.js:520:52)

  ‚óè Performance Routes Integration Tests ‚Ä∫ Performance and Edge Cases ‚Ä∫ should handle invalid parameters gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      536 |           .set("Authorization", `Bearer ${authToken}`);
      537 |
    > 538 |         expect([200, 400, 401].includes(response.status)).toBe(true);
          |                                                           ^
      539 |       }
      540 |     });
      541 |

      at Object.toBe (tests/integration/routes/performance.integration.test.js:538:59)

  ‚óè Performance Routes Integration Tests ‚Ä∫ Performance and Edge Cases ‚Ä∫ should handle malformed authentication tokens

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      553 |           .set("Authorization", token);
      554 |
    > 555 |         expect([401].includes(response.status)).toBe(true);
          |                                                 ^
      556 |       }
      557 |     });
      558 |

      at Object.toBe (tests/integration/routes/performance.integration.test.js:555:49)

  ‚óè Performance Routes Integration Tests ‚Ä∫ Performance and Edge Cases ‚Ä∫ should handle database connection issues gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      597 |         .set("Authorization", `Bearer ${authToken}`);
      598 |
    > 599 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      600 |
      601 |       if (response.status >= 500) {
      602 |         expect(response.body).toHaveProperty("error");

      at Object.toBe (tests/integration/routes/performance.integration.test.js:599:52)

  ‚óè Performance Routes Integration Tests ‚Ä∫ Performance and Edge Cases ‚Ä∫ should handle memory pressure with large data requests

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      635 |       expect(
      636 |         [200, 400, 401, 403, 413, 500, 503].includes(response.status)
    > 637 |       ).toBe(true);
          |         ^
      638 |     });
      639 |   });
      640 | });

      at Object.toBe (tests/integration/routes/performance.integration.test.js:637:9)

FAIL tests/integration/middleware/errorHandler-middleware.integration.test.js
  ‚óè Error Handler Middleware Integration ‚Ä∫ Error Security and Information Disclosure ‚Ä∫ should not expose sensitive information in error responses

    expect(received).not.toMatch(expected)

    Expected pattern: not /password|secret|key|token|database|connection|stack|trace|internal/
    Received string:      "invalid token"

      142 |           // Should not expose sensitive internal information
      143 |           const errorMessage = response.body.error.toLowerCase();
    > 144 |           expect(errorMessage).not.toMatch(
          |                                    ^
      145 |             /password|secret|key|token|database|connection|stack|trace|internal/
      146 |           );
      147 |           expect(errorMessage).not.toMatch(

      at Object.toMatch (tests/integration/middleware/errorHandler-middleware.integration.test.js:144:36)

  ‚óè Error Handler Middleware Integration ‚Ä∫ Error Response Headers ‚Ä∫ should handle CORS headers in error responses

    expect(received).toContain(expected) // indexOf

    Expected value: 204
    Received array: [200, 404, 500, 501]

      214 |
      215 |       // CORS preflight for non-existent endpoint
    > 216 |       expect([200, 404, 500, 501]).toContain(response.status);
          |                                    ^
      217 |
      218 |       // Should still handle CORS appropriately even for errors
      219 |       if (response.headers["access-control-allow-origin"]) {

      at Object.toContain (tests/integration/middleware/errorHandler-middleware.integration.test.js:216:36)

  ‚óè Error Handler Middleware Integration ‚Ä∫ Error Handling Consistency Across Routes ‚Ä∫ should maintain consistent error format across all routes

    expect(received).toBe(expected) // Object.is equality

    Expected: 404
    Received: 401

      295 |         const response = await request(app).get(scenario.endpoint);
      296 |
    > 297 |         expect(response.status).toBe(scenario.expectedStatus);
          |                                 ^
      298 |         expect(response.body).toHaveProperty("success", false);
      299 |         expect(response.body).toHaveProperty("error");
      300 |         expect(response.headers["content-type"]).toMatch(/application\/json/);

      at Object.toBe (tests/integration/middleware/errorHandler-middleware.integration.test.js:297:33)

FAIL tests/integration/analytics/sectors.test.js
  ‚óè Sectors Analysis API ‚Ä∫ Sector Rotation ‚Ä∫ should analyze sector rotation patterns

    expect(received).toBeTruthy()

    Received: false

      52 |           );
      53 |
    > 54 |           expect(hasRotationData || Array.isArray(data)).toBeTruthy();
         |                                                          ^
      55 |         }
      56 |       }
      57 |     });

      at Object.toBeTruthy (tests/integration/analytics/sectors.test.js:54:58)

FAIL tests/integration/routes/price.integration.test.js
  ‚óè Price Routes ‚Ä∫ GET /api/price/alerts ‚Ä∫ should return price alerts

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

       96 |       const response = await request(app).get("/api/price/alerts");
       97 |
    >  98 |       expect(response.status).toBe(200);
          |                               ^
       99 |
      100 |       if (response.status === 200) {
      101 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/price.integration.test.js:98:31)

FAIL tests/unit/routes/market.test.js
  ‚óè Market Routes Unit Tests ‚Ä∫ GET /market/economic ‚Ä∫ should return economic data

    expected 200 "OK", got 404 "Not Found"

      71 |   describe("GET /market/economic", () => {
      72 |     test("should return economic data", async () => {
    > 73 |       const response = await request(app).get("/market/economic").expect(200);
         |                                                                   ^
      74 |
      75 |       expect(response.body).toHaveProperty("success");
      76 |     });

      at Object.expect (tests/unit/routes/market.test.js:73:67)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Market Routes Unit Tests ‚Ä∫ GET /market/sectors/performance ‚Ä∫ should return sector performance data

    expected 200 "OK", got 404 "Not Found"

      175 |       const response = await request(app)
      176 |         .get("/market/sectors/performance")
    > 177 |         .expect(200);
          |          ^
      178 |
      179 |       expect(response.body).toBeDefined();
      180 |       expect(typeof response.body).toBe("object");

      at Object.expect (tests/unit/routes/market.test.js:177:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Market Routes Unit Tests ‚Ä∫ GET /market/sectors/performance ‚Ä∫ should handle sector performance with timeframe

    expected 200 "OK", got 404 "Not Found"

      185 |       const response = await request(app)
      186 |         .get("/market/sectors/performance?timeframe=1d")
    > 187 |         .expect(200);
          |          ^
      188 |
      189 |       expect(response.body).toBeDefined();
      190 |       expect(typeof response.body).toBe("object");

      at Object.expect (tests/unit/routes/market.test.js:187:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Market Routes Unit Tests ‚Ä∫ GET /market/breadth ‚Ä∫ should return market breadth data

    expect(received).toHaveProperty(path)

    Expected path: "data"
    Received path: []

    Received value: {"advance_decline_ratio": "0.92", "advancing": 24, "avg_change": "-0.22", "avg_volume": 5878021, "declining": 26, "strong_advancing": 0, "strong_declining": 0, "total_stocks": 50, "unchanged": 0}

      241 |       expect(response.body).toBeDefined();
      242 |       expect(typeof response.body).toBe("object");
    > 243 |       expect(response.body).toHaveProperty("data");
          |                             ^
      244 |     });
      245 |
      246 |     test("should handle breadth with parameters", async () => {

      at Object.toHaveProperty (tests/unit/routes/market.test.js:243:29)

FAIL tests/integration/analytics/dashboard.test.js
  ‚óè Dashboard API ‚Ä∫ Dashboard Overview ‚Ä∫ should retrieve comprehensive dashboard data

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      33 |         );
      34 |
    > 35 |         expect(hasDashboardData).toBe(true);
         |                                  ^
      36 |       }
      37 |     });
      38 |

      at Object.toBe (tests/integration/analytics/dashboard.test.js:35:34)

  ‚óè Dashboard API ‚Ä∫ Dashboard Overview ‚Ä∫ should handle unauthorized dashboard access

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 500]

      40 |       const response = await request(app).get("/api/dashboard");
      41 |
    > 42 |       expect([401, 500]).toContain(response.status);
         |                          ^
      43 |     });
      44 |   });
      45 |

      at Object.toContain (tests/integration/analytics/dashboard.test.js:42:26)

  ‚óè Dashboard API ‚Ä∫ Market Summary ‚Ä∫ should provide market summary for dashboard

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      48 |       const response = await request(app).get("/api/dashboard/market-summary");
      49 |
    > 50 |       expect(response.status).toBe(200);
         |                               ^
      51 |
      52 |       if (response.status === 200) {
      53 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/dashboard.test.js:50:31)

  ‚óè Dashboard API ‚Ä∫ Market Summary ‚Ä∫ should include major market indices

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      66 |       const response = await request(app).get("/api/dashboard/indices");
      67 |
    > 68 |       expect(response.status).toBe(200);
         |                               ^
      69 |
      70 |       if (response.status === 200) {
      71 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/dashboard.test.js:68:31)

  ‚óè Dashboard API ‚Ä∫ Portfolio Widget ‚Ä∫ should retrieve portfolio summary for dashboard

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

       95 |         .set("Authorization", "Bearer test-token");
       96 |
    >  97 |       expect(response.status).toBe(200);
          |                               ^
       98 |
       99 |       if (response.status === 200) {
      100 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/dashboard.test.js:97:31)

  ‚óè Dashboard API ‚Ä∫ Portfolio Widget ‚Ä∫ should show top portfolio positions

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      122 |         .set("Authorization", "Bearer test-token");
      123 |
    > 124 |       expect(response.status).toBe(200);
          |                               ^
      125 |
      126 |       if (response.status === 200) {
      127 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/dashboard.test.js:124:31)

  ‚óè Dashboard API ‚Ä∫ Watchlist Widget ‚Ä∫ should show watchlist performance

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      156 |         .set("Authorization", "Bearer test-token");
      157 |
    > 158 |       expect(response.status).toBe(200);
          |                               ^
      159 |
      160 |       if (response.status === 200) {
      161 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/dashboard.test.js:158:31)

  ‚óè Dashboard API ‚Ä∫ News Widget ‚Ä∫ should provide market news for dashboard

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      168 |       const response = await request(app).get("/api/dashboard/news?limit=10");
      169 |
    > 170 |       expect(response.status).toBe(200);
          |                               ^
      171 |
      172 |       if (response.status === 200) {
      173 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/dashboard.test.js:170:31)

  ‚óè Dashboard API ‚Ä∫ News Widget ‚Ä∫ should provide personalized news based on portfolio

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      188 |         .set("Authorization", "Bearer test-token");
      189 |
    > 190 |       expect(response.status).toBe(200);
          |                               ^
      191 |
      192 |       if (response.status === 200) {
      193 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/dashboard.test.js:190:31)

  ‚óè Dashboard API ‚Ä∫ Alerts Widget ‚Ä∫ should show recent alerts

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      203 |         .set("Authorization", "Bearer test-token");
      204 |
    > 205 |       expect(response.status).toBe(200);
          |                               ^
      206 |
      207 |       if (response.status === 200) {
      208 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/dashboard.test.js:205:31)

  ‚óè Dashboard API ‚Ä∫ Alerts Widget ‚Ä∫ should show alert summary

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      216 |         .set("Authorization", "Bearer test-token");
      217 |
    > 218 |       expect(response.status).toBe(200);
          |                               ^
      219 |
      220 |       if (response.status === 200) {
      221 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/dashboard.test.js:218:31)

  ‚óè Dashboard API ‚Ä∫ Dashboard Customization ‚Ä∫ should save dashboard layout preferences

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      251 |         .send(layoutConfig);
      252 |
    > 253 |       expect(response.status).toBe(200);
          |                               ^
      254 |
      255 |       if (response.status === 200 || response.status === 201) {
      256 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/dashboard.test.js:253:31)

  ‚óè Dashboard API ‚Ä∫ Dashboard Customization ‚Ä∫ should retrieve user dashboard preferences

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      264 |         .set("Authorization", "Bearer test-token");
      265 |
    > 266 |       expect(response.status).toBe(200);
          |                               ^
      267 |
      268 |       if (response.status === 200) {
      269 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/dashboard.test.js:266:31)

FAIL tests/integration/services/aiStrategyGenerator.test.js
  ‚óè AI Strategy Generator Service Integration Tests ‚Ä∫ Strategy Generation Workflow ‚Ä∫ should generate strategy from natural language description

    TypeError: generator.generateStrategy is not a function

      62 |       };
      63 |
    > 64 |       const result = await generator.generateStrategy(description, preferences);
         |                                      ^
      65 |
      66 |       expect(result).toHaveProperty("success", true);
      67 |       expect(result).toHaveProperty("strategy");

      at Object.generateStrategy (tests/integration/services/aiStrategyGenerator.test.js:64:38)

  ‚óè AI Strategy Generator Service Integration Tests ‚Ä∫ Strategy Generation Workflow ‚Ä∫ should handle different asset types

    TypeError: generator.generateStrategy is not a function

      76 |       const description = "Simple moving average crossover strategy";
      77 |
    > 78 |       const stockResult = await generator.generateStrategy(description, {
         |                                           ^
      79 |         risk_level: "low",
      80 |         timeframe: "1hour",
      81 |         asset_type: "stock",

      at Object.generateStrategy (tests/integration/services/aiStrategyGenerator.test.js:78:43)

  ‚óè AI Strategy Generator Service Integration Tests ‚Ä∫ Strategy Generation Workflow ‚Ä∫ should validate generated strategies

    TypeError: generator.generateStrategy is not a function

      102 |       };
      103 |
    > 104 |       const result = await generator.generateStrategy(description, preferences);
          |                                      ^
      105 |
      106 |       expect(result.success).toBe(true);
      107 |       expect(result.strategy).toHaveProperty("validation");

      at Object.generateStrategy (tests/integration/services/aiStrategyGenerator.test.js:104:38)

  ‚óè AI Strategy Generator Service Integration Tests ‚Ä∫ Strategy Generation Workflow ‚Ä∫ should handle complex multi-indicator strategies

    TypeError: generator.generateStrategy is not a function

      120 |       };
      121 |
    > 122 |       const result = await generator.generateStrategy(description, preferences);
          |                                      ^
      123 |
      124 |       expect(result.success).toBe(true);
      125 |       expect(result.strategy.code).toContain("rsi");

      at Object.generateStrategy (tests/integration/services/aiStrategyGenerator.test.js:122:38)

  ‚óè AI Strategy Generator Service Integration Tests ‚Ä∫ Strategy Optimization ‚Ä∫ should optimize strategy parameters

    TypeError: generator.optimizeStrategy is not a function

      147 |       };
      148 |
    > 149 |       const result = await generator.optimizeStrategy(strategy, {
          |                                      ^
      150 |         optimization_method: "grid_search",
      151 |         metric: "sharpe_ratio",
      152 |       });

      at Object.optimizeStrategy (tests/integration/services/aiStrategyGenerator.test.js:149:38)

  ‚óè AI Strategy Generator Service Integration Tests ‚Ä∫ Strategy Optimization ‚Ä∫ should provide optimization explanations

    TypeError: generator.optimizeStrategy is not a function

      167 |       };
      168 |
    > 169 |       const result = await generator.optimizeStrategy(strategy, {
          |                                      ^
      170 |         optimization_method: "bayesian",
      171 |         metric: "total_return",
      172 |       });

      at Object.optimizeStrategy (tests/integration/services/aiStrategyGenerator.test.js:169:38)

  ‚óè AI Strategy Generator Service Integration Tests ‚Ä∫ Strategy Explanation and Documentation ‚Ä∫ should explain strategy logic clearly

    TypeError: generator.generateStrategy is not a function

      194 |       };
      195 |
    > 196 |       const result = await generator.generateStrategy(description, preferences);
          |                                      ^
      197 |
      198 |       expect(result.success).toBe(true);
      199 |       expect(result.strategy.explanation).toContain("RSI");

      at Object.generateStrategy (tests/integration/services/aiStrategyGenerator.test.js:196:38)

  ‚óè AI Strategy Generator Service Integration Tests ‚Ä∫ Strategy Explanation and Documentation ‚Ä∫ should provide educational content

    TypeError: generator.explainStrategy is not a function

      208 |       };
      209 |
    > 210 |       const result = await generator.explainStrategy(strategy);
          |                                      ^
      211 |
      212 |       expect(result).toHaveProperty("success", true);
      213 |       expect(result).toHaveProperty("explanation");

      at Object.explainStrategy (tests/integration/services/aiStrategyGenerator.test.js:210:38)

  ‚óè AI Strategy Generator Service Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle invalid strategy descriptions gracefully

    TypeError: generator.generateStrategy is not a function

      234 |       };
      235 |
    > 236 |       const result = await generator.generateStrategy(
          |                                      ^
      237 |         invalidDescription,
      238 |         preferences
      239 |       );

      at Object.generateStrategy (tests/integration/services/aiStrategyGenerator.test.js:236:38)

  ‚óè AI Strategy Generator Service Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle malformed preferences

    TypeError: generator.generateStrategy is not a function

      252 |       };
      253 |
    > 254 |       const result = await generator.generateStrategy(
          |                                      ^
      255 |         description,
      256 |         invalidPreferences
      257 |       );

      at Object.generateStrategy (tests/integration/services/aiStrategyGenerator.test.js:254:38)

  ‚óè AI Strategy Generator Service Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should fallback to templates when AI is unavailable

    TypeError: generator.generateStrategy is not a function

      274 |       };
      275 |
    > 276 |       const result = await generator.generateStrategy(description, preferences);
          |                                      ^
      277 |
      278 |       expect(result.success).toBe(true);
      279 |       expect(result.strategy.code).toContain("def run_strategy");

      at Object.generateStrategy (tests/integration/services/aiStrategyGenerator.test.js:276:38)

  ‚óè AI Strategy Generator Service Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle timeout scenarios

    TypeError: generator.generateStrategy is not a function

      293 |       generator.aiConfig.timeout = 100; // 100ms
      294 |
    > 295 |       const result = await generator.generateStrategy(description, preferences);
          |                                      ^
      296 |
      297 |       // Should either succeed quickly or fail gracefully with timeout
      298 |       expect(typeof result.success).toBe("boolean");

      at Object.generateStrategy (tests/integration/services/aiStrategyGenerator.test.js:295:38)

  ‚óè AI Strategy Generator Service Integration Tests ‚Ä∫ Performance and Metrics ‚Ä∫ should track generation performance metrics

    TypeError: generator.generateStrategy is not a function

      322 |
      323 |       const startTime = Date.now();
    > 324 |       const result = await generator.generateStrategy(description, preferences);
          |                                      ^
      325 |       const endTime = Date.now();
      326 |
      327 |       expect(result.success).toBe(true);

      at Object.generateStrategy (tests/integration/services/aiStrategyGenerator.test.js:324:38)

  ‚óè AI Strategy Generator Service Integration Tests ‚Ä∫ Performance and Metrics ‚Ä∫ should handle concurrent strategy generation requests

    TypeError: generator.generateStrategy is not a function

      338 |       for (let i = 0; i < 3; i++) {
      339 |         requests.push(
    > 340 |           generator.generateStrategy(`RSI strategy ${i}`, {
          |                     ^
      341 |             risk_level: "medium",
      342 |             timeframe: "1day",
      343 |             asset_type: "stock",

      at Object.generateStrategy (tests/integration/services/aiStrategyGenerator.test.js:340:21)

  ‚óè AI Strategy Generator Service Integration Tests ‚Ä∫ Integration with Backend Services ‚Ä∫ should integrate with database for strategy storage

    TypeError: generator.generateStrategy is not a function

      371 |       };
      372 |
    > 373 |       const result = await generator.generateStrategy(description, preferences);
          |                                      ^
      374 |
      375 |       expect(result.success).toBe(true);
      376 |

      at Object.generateStrategy (tests/integration/services/aiStrategyGenerator.test.js:373:38)

  ‚óè AI Strategy Generator Service Integration Tests ‚Ä∫ Integration with Backend Services ‚Ä∫ should provide strategy export formats

    TypeError: generator.exportStrategy is not a function

      390 |       };
      391 |
    > 392 |       const exportResult = await generator.exportStrategy(strategy, "json");
          |                                            ^
      393 |
      394 |       expect(exportResult).toHaveProperty("success", true);
      395 |       expect(exportResult).toHaveProperty("exported_strategy");

      at Object.exportStrategy (tests/integration/services/aiStrategyGenerator.test.js:392:44)

FAIL tests/unit/routes/technical.test.js
  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/ - Root technical endpoint ‚Ä∫ should return 503 when technical_data_daily table doesn't exist

    expected 503 "Service Unavailable", got 404 "Not Found"

      117 |       query.mockResolvedValueOnce(mockTableExists);
      118 |
    > 119 |       const response = await request(app).get("/technical/").expect(503);
          |                                                              ^
      120 |
      121 |       expect(response.body).toMatchObject({
      122 |         success: false,

      at Object.expect (tests/unit/routes/technical.test.js:119:62)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/:timeframe - Timeframe-based data ‚Ä∫ should return daily technical data with pagination

    expected 200 "OK", got 400 "Bad Request"

      162 |         .get("/technical/daily")
      163 |         .query({ page: 1, limit: 50 })
    > 164 |         .expect(200);
          |          ^
      165 |
      166 |       expect(response.body).toMatchObject({
      167 |         success: true,

      at Object.expect (tests/unit/routes/technical.test.js:164:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/:timeframe - Timeframe-based data ‚Ä∫ should validate timeframe parameter

    expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 3

      Object {
    -   "error": "Invalid timeframe. Use daily, weekly, or monthly.",
    +   "error": "Invalid symbol format. Use 1-5 letter stock symbols like AAPL",
    +   "success": false,
    +   "timestamp": "2025-09-23T16:32:05.113Z",
      }

      205 |         .expect(400);
      206 |
    > 207 |       expect(response.body).toEqual({
          |                             ^
      208 |         error: "Invalid timeframe. Use daily, weekly, or monthly.",
      209 |       });
      210 |     });

      at Object.toEqual (tests/unit/routes/technical.test.js:207:29)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/:timeframe - Timeframe-based data ‚Ä∫ should handle symbol filtering

    expected 200 "OK", got 400 "Bad Request"

      232 |         .get("/technical/daily")
      233 |         .query({ symbol: "AAPL" })
    > 234 |         .expect(200);
          |          ^
      235 |
      236 |       // Verify symbol filter was applied
      237 |       expect(query.mock.calls[2][1]).toContain("AAPL");

      at Object.expect (tests/unit/routes/technical.test.js:234:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/:timeframe - Timeframe-based data ‚Ä∫ should handle RSI filtering

    expected 200 "OK", got 400 "Bad Request"

      251 |         .get("/technical/daily")
      252 |         .query({ rsi_min: 70, rsi_max: 80 })
    > 253 |         .expect(200);
          |          ^
      254 |
      255 |       // Verify RSI filters were applied
      256 |       const countQuery = query.mock.calls[1][0];

      at Object.expect (tests/unit/routes/technical.test.js:253:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/:timeframe/summary - Technical summary ‚Ä∫ should return technical summary statistics

    expect(received).toMatchObject(expected)

    - Expected  - 17
    + Received  + 14

      Object {
    -   "summary": ObjectContaining {
    -     "averages": ObjectContaining {
    -       "macd": "0.1500",
    -       "rsi": "52.50",
    -       "sma20": "165.80",
    -       "volume": 35000000,
    +   "summary": Object {
    +     "averages": Object {
    +       "macd": null,
    +       "rsi": null,
    +       "sma20": null,
    +       "volume": null,
          },
    -     "dateRange": ObjectContaining {
    -       "earliest": "2024-01-01",
    -       "latest": "2025-07-16",
    -     },
    -     "totalRecords": 1250,
    -     "uniqueSymbols": 50,
    +     "dateRange": Object {},
    +     "totalRecords": null,
    +     "uniqueSymbols": null,
        },
        "timeframe": "daily",
    -   "topSymbols": ArrayContaining [
    -     ObjectContaining {
    -       "recordCount": 252,
    +   "topSymbols": Array [
    +     Object {
    +       "recordCount": null,
            "symbol": "AAPL",
          },
    -     ObjectContaining {
    -       "recordCount": 252,
    +     Object {
    +       "recordCount": null,
            "symbol": "MSFT",
          },
        ],
      }

      296 |         .expect(200);
      297 |
    > 298 |       expect(response.body).toMatchObject({
          |                             ^
      299 |         timeframe: "daily",
      300 |         summary: expect.objectContaining({
      301 |           totalRecords: 1250,

      at Object.toMatchObject (tests/unit/routes/technical.test.js:298:29)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/:timeframe/summary - Technical summary ‚Ä∫ should return fallback summary when table doesn't exist

    expect(received).toMatchObject(expected)

    - Expected  - 15
    + Received  +  8

      Object {
    -   "fallback": true,
    -   "summary": ObjectContaining {
    -     "averages": ObjectContaining {
    -       "macd": "0.1250",
    -       "rsi": "45.2",
    -     },
    -     "totalRecords": 1000,
    -     "uniqueSymbols": 50,
    +   "data": Object {
    +     "count": 1,
    +     "indicators": Array [
    +       Object {
    +         "exists": true,
            },
    +     ],
    +     "symbol": "SUMMARY",
          "timeframe": "weekly",
    -   "topSymbols": ArrayContaining [
    -     ObjectContaining {
    -       "symbol": "AAPL",
        },
    -     ObjectContaining {
    -       "symbol": "MSFT",
    -     },
    -   ],
    +   "success": true,
      }

      334 |         .expect(200);
      335 |
    > 336 |       expect(response.body).toMatchObject({
          |                             ^
      337 |         timeframe: "weekly",
      338 |         summary: expect.objectContaining({
      339 |           totalRecords: 1000,

      at Object.toMatchObject (tests/unit/routes/technical.test.js:336:29)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/data/:symbol - Individual symbol data ‚Ä∫ should return latest technical data for specific symbol

    expected 200 "OK", got 404 "Not Found"

      385 |       const response = await request(app)
      386 |         .get("/technical/data/AAPL")
    > 387 |         .expect(200);
          |          ^
      388 |
      389 |       expect(response.body).toMatchObject({
      390 |         success: true,

      at Object.expect (tests/unit/routes/technical.test.js:387:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/data/:symbol - Individual symbol data ‚Ä∫ should return 404 for non-existent symbol

    expect(received).toMatchObject(expected)

    - Expected  - 1
    + Received  + 1

      Object {
    -   "error": "No technical data found for symbol NONEXISTENT",
    +   "error": "Technical data not available",
        "success": false,
      }

      417 |         .expect(404);
      418 |
    > 419 |       expect(response.body).toMatchObject({
          |                             ^
      420 |         success: false,
      421 |         error: "No technical data found for symbol NONEXISTENT",
      422 |       });

      at Object.toMatchObject (tests/unit/routes/technical.test.js:419:29)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/data/:symbol - Individual symbol data ‚Ä∫ should return fallback data when table missing

    expect(received).toMatchObject(expected)

    - Expected  - 6
    + Received  + 2

      Object {
    -   "data": ObjectContaining {
    -     "macd": Any<Number>,
    -     "rsi": Any<Number>,
    -     "sma_20": Any<Number>,
    -     "symbol": "AAPL",
    +   "data": Object {
    +     "total": "10",
        },
    -   "fallback": true,
        "success": true,
        "symbol": "AAPL",
      }

      432 |         .expect(200);
      433 |
    > 434 |       expect(response.body).toMatchObject({
          |                             ^
      435 |         success: true,
      436 |         data: expect.objectContaining({
      437 |           symbol: "AAPL",

      at Object.toMatchObject (tests/unit/routes/technical.test.js:434:29)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/indicators/:symbol - Technical indicators ‚Ä∫ should return 30-day technical indicators for symbol

    expected 200 "OK", got 500 "Internal Server Error"

      470 |       const response = await request(app)
      471 |         .get("/technical/indicators/AAPL")
    > 472 |         .expect(200);
          |          ^
      473 |
      474 |       expect(response.body).toMatchObject({
      475 |         success: true,

      at Object.expect (tests/unit/routes/technical.test.js:472:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/history/:symbol - Technical history ‚Ä∫ should return technical history with custom days parameter

    expect(received).toMatchObject(expected)

    - Expected  -  3
    + Received  + 16

      Object {
    -   "count": 60,
    -   "data": Any<Array>,
    +   "data": Object {
    +     "count": 1,
    +     "data": Array [
    +       Object {
    +         "avg_macd": "0.15",
    +         "avg_rsi": "52.5",
    +         "avg_sma_20": "165.80",
    +         "avg_volume": "35000000",
    +         "earliest_date": "2024-01-01",
    +         "latest_date": "2025-07-16",
    +         "total_records": "1250",
    +         "unique_symbols": "50",
    +       },
    +     ],
          "period_days": "60",
    -   "success": true,
          "symbol": "AAPL",
    +   },
    +   "success": true,
      }

      517 |         .expect(200);
      518 |
    > 519 |       expect(response.body).toMatchObject({
          |                             ^
      520 |         success: true,
      521 |         data: expect.any(Array),
      522 |         count: 60,

      at Object.toMatchObject (tests/unit/routes/technical.test.js:519:29)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/support-resistance/:symbol - Support/Resistance levels ‚Ä∫ should return support and resistance levels

    expected 200 "OK", got 404 "Not Found"

      557 |         .get("/technical/support-resistance/AAPL")
      558 |         .query({ timeframe: "daily" })
    > 559 |         .expect(200);
          |          ^
      560 |
      561 |       expect(response.body).toMatchObject({
      562 |         symbol: "AAPL",

      at Object.expect (tests/unit/routes/technical.test.js:559:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/daily - Filtered technical data ‚Ä∫ should handle filtered technical data requests

    expected 200 "OK", got 400 "Bad Request"

      626 |           limit: 25,
      627 |         })
    > 628 |         .expect(200);
          |          ^
      629 |
      630 |       expect(response.body).toMatchObject({
      631 |         success: true,

      at Object.expect (tests/unit/routes/technical.test.js:628:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/daily - Filtered technical data ‚Ä∫ should handle technical data queries safely

    expected 200 "OK", got 400 "Bad Request"

      654 |         .get("/technical/daily")
      655 |         .query({ symbol: "AAPL" })
    > 656 |         .expect(200);
          |          ^
      657 |
      658 |       // Should safely query technical data
      659 |       expect(query).toHaveBeenCalled();

      at Object.expect (tests/unit/routes/technical.test.js:656:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/patterns/:symbol - Pattern recognition ‚Ä∫ should return technical pattern analysis

    expect(received).toMatchObject(expected)

    - Expected  - 12
    + Received  +  0

      Object {
    -   "confidence_score": Any<Number>,
    -   "last_updated": Any<String>,
    -   "patterns": Any<Array>,
        "success": true,
    -   "summary": ObjectContaining {
    -     "average_confidence": Any<Number>,
    -     "bearish_patterns": Any<Number>,
    -     "bullish_patterns": Any<Number>,
    -     "market_sentiment": StringMatching /^(bullish|bearish)$/,
    -     "total_patterns": Any<Number>,
    -   },
    -   "symbol": "AAPL",
    -   "timeframe": "1D",
      }

      687 |         .expect(200);
      688 |
    > 689 |       expect(response.body).toMatchObject({
          |                             ^
      690 |         success: true,
      691 |         symbol: "AAPL",
      692 |         timeframe: "1D",

      at Object.toMatchObject (tests/unit/routes/technical.test.js:689:29)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/patterns/:symbol - Pattern recognition ‚Ä∫ should return fallback patterns on database errors

    expect(received).toMatchObject(expected)

    - Expected  - 5
    + Received  + 0

      Object {
    -   "patterns": Any<Array>,
        "success": true,
    -   "summary": ObjectContaining {
    -     "market_sentiment": StringMatching /^(bullish|bearish)$/,
    -   },
    -   "symbol": "AAPL",
      }

      730 |         .expect(200);
      731 |
    > 732 |       expect(response.body).toMatchObject({
          |                             ^
      733 |         success: true,
      734 |         symbol: "AAPL",
      735 |         patterns: expect.any(Array),

      at Object.toMatchObject (tests/unit/routes/technical.test.js:732:29)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ Error handling - Your site's error patterns ‚Ä∫ should handle database errors gracefully with fallback data

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      767 |           response.body.metadata.error ||
      768 |           response.body.data.length > 0
    > 769 |       ).toBe(true);
          |         ^
      770 |     });
      771 |
      772 |     test("should return structured error responses for invalid timeframes", async () => {

      at Object.toBe (tests/unit/routes/technical.test.js:769:9)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ Error handling - Your site's error patterns ‚Ä∫ should return structured error responses for invalid timeframes

    expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 3

      Object {
    -   "error": "Invalid timeframe. Use daily, weekly, or monthly.",
    +   "error": "Invalid symbol format. Use 1-5 letter stock symbols like AAPL",
    +   "success": false,
    +   "timestamp": "2025-09-23T16:32:05.169Z",
      }

      773 |       const response = await request(app).get("/technical/hourly").expect(400);
      774 |
    > 775 |       expect(response.body).toEqual({
          |                             ^
      776 |         error: "Invalid timeframe. Use daily, weekly, or monthly.",
      777 |       });
      778 |     });

      at Object.toEqual (tests/unit/routes/technical.test.js:775:29)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ Error handling - Your site's error patterns ‚Ä∫ should handle large limit values safely

    expected 200 "OK", got 400 "Bad Request"

      791 |         .get("/technical/daily")
      792 |         .query({ limit: 500 }) // Large but reasonable limit
    > 793 |         .expect(200);
          |          ^
      794 |
      795 |       // Your site handles large limits by returning them in pagination
      796 |       expect(response.body.pagination.limit).toBe(500);

      at Object.expect (tests/unit/routes/technical.test.js:793:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/chart/:symbol - Chart data for symbol ‚Ä∫ should return chart data with default parameters

    expected 200 "OK", got 404 "Not Found"

      813 |       const response = await request(app)
      814 |         .get("/technical/chart/AAPL")
    > 815 |         .expect(200);
          |          ^
      816 |
      817 |       expect(response.body.success).toBe(true);
      818 |       expect(response.body.data).toHaveProperty("chart_data");

      at Object.expect (tests/unit/routes/technical.test.js:815:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/chart/:symbol - Chart data for symbol ‚Ä∫ should return chart data with custom parameters

    TypeError: Cannot read properties of undefined (reading 'symbol')

      834 |       expect(response.body.success).toBe(true);
      835 |       expect(response.body.data.chart_data.length).toBeLessThanOrEqual(50);
    > 836 |       expect(response.body.data.metadata.symbol).toBe("MSFT");
          |                                          ^
      837 |       expect(response.body.data.metadata.period).toBe("1Y");
      838 |       expect(response.body.data.metadata.interval).toBe("1d");
      839 |       expect(response.body.data.metadata.include_volume).toBe(true);

      at Object.symbol (tests/unit/routes/technical.test.js:836:42)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/chart/:symbol - Chart data for symbol ‚Ä∫ should include proper OHLCV structure

    expect(received).toHaveProperty(path)

    Expected path: "datetime"
    Received path: []

    Received value: {"adj_close": 0, "close": 179.11800330318235, "date": "2025-09-23", "high": 0, "low": 0, "open": 0, "timestamp": "2025-09-23", "volume": 50231968}

      852 |       if (response.body.data.chart_data.length > 0) {
      853 |         const candle = response.body.data.chart_data[0];
    > 854 |         expect(candle).toHaveProperty("datetime");
          |                        ^
      855 |         expect(candle).toHaveProperty("timestamp");
      856 |         expect(candle).toHaveProperty("open");
      857 |         expect(candle).toHaveProperty("high");

      at Object.toHaveProperty (tests/unit/routes/technical.test.js:854:24)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/chart/:symbol - Chart data for symbol ‚Ä∫ should include technical indicators

    expect(received).toHaveProperty(path)

    Matcher error: received value must not be null nor undefined

    Received has value: undefined

      875 |         const indicators =
      876 |           response.body.data.chart_data[0].technical_indicators;
    > 877 |         expect(indicators).toHaveProperty("sma_20");
          |                            ^
      878 |         expect(indicators).toHaveProperty("sma_50");
      879 |         expect(indicators).toHaveProperty("ema_12");
      880 |         expect(indicators).toHaveProperty("ema_26");

      at Object.toHaveProperty (tests/unit/routes/technical.test.js:877:28)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/chart/:symbol - Chart data for symbol ‚Ä∫ should include summary with price range and technical analysis

    expect(received).toHaveProperty(path, value)

    Matcher error: received value must not be null nor undefined

    Received has value: undefined

      894 |         .expect(200);
      895 |
    > 896 |       expect(response.body.data.summary).toHaveProperty("symbol", "AAPL");
          |                                          ^
      897 |       expect(response.body.data.summary).toHaveProperty("price_range");
      898 |       expect(response.body.data.summary).toHaveProperty("technical_summary");
      899 |       expect(response.body.data.summary.price_range).toHaveProperty("current");

      at Object.toHaveProperty (tests/unit/routes/technical.test.js:896:42)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/chart/:symbol - Chart data for symbol ‚Ä∫ should handle volume inclusion correctly

    expected 200 "OK", got 404 "Not Found"

      912 |       const responseWithVolume = await request(app)
      913 |         .get("/technical/chart/AAPL?include_volume=true&limit=5")
    > 914 |         .expect(200);
          |          ^
      915 |
      916 |       const responseWithoutVolume = await request(app)
      917 |         .get("/technical/chart/AAPL?include_volume=false&limit=5")

      at Object.expect (tests/unit/routes/technical.test.js:914:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Technical Analysis Routes - Testing Your Actual Site ‚Ä∫ GET /technical/chart/:symbol - Chart data for symbol ‚Ä∫ should handle table not exists gracefully

    expected 404 "Not Found", got 200 "OK"

      944 |       const response = await request(app)
      945 |         .get("/technical/chart/AAPL")
    > 946 |         .expect(404);
          |          ^
      947 |
      948 |       expect(response.body.success).toBe(false);
      949 |       expect(response.body.error).toBe("Chart data not available");

      at Object.expect (tests/unit/routes/technical.test.js:946:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

FAIL tests/integration/routes/screener.integration.test.js
  ‚óè Screener Routes ‚Ä∫ GET /api/screener ‚Ä∫ should return screener endpoints

    expect(received).toHaveProperty(path)

    Expected path: "message"
    Received path: []

    Received value: {"data": {"available_endpoints": ["GET /screener/screen - Main stock screening with filters", "GET /screener/ai-scan - AI-powered market scanner", "GET /screener/ai-strategies - Available AI scanning strategies", "GET /screener/templates - Pre-built screening templates", "GET /screener/factors - Available screening factors"], "status": "operational", "system": "Stock Screener API", "timestamp": "2025-09-23T16:32:05.446Z", "version": "1.0.0"}, "success": true}

      22 |
      23 |       expect(response.status).toBe(200);
    > 24 |       expect(response.body).toHaveProperty("message");
         |                             ^
      25 |       expect(response.body).toHaveProperty("endpoints");
      26 |     });
      27 |   });

      at Object.toHaveProperty (tests/integration/routes/screener.integration.test.js:24:29)

  ‚óè Screener Routes ‚Ä∫ GET /api/screener/screen ‚Ä∫ should screen stocks with basic criteria

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      33 |       );
      34 |
    > 35 |       expect(response.status).toBe(200);
         |                               ^
      36 |       expect(response.body.success).toBe(true);
      37 |       expect(Array.isArray(response.body.data)).toBe(true);
      38 |       expect(response.body.data.length).toBeLessThanOrEqual(100);

      at Object.toBe (tests/integration/routes/screener.integration.test.js:35:31)

  ‚óè Screener Routes ‚Ä∫ GET /api/screener/screen ‚Ä∫ should handle multiple criteria

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      44 |       );
      45 |
    > 46 |       expect(response.status).toBe(200);
         |                               ^
      47 |       expect(response.body.success).toBe(true);
      48 |       expect(Array.isArray(response.body.data)).toBe(true);
      49 |     });

      at Object.toBe (tests/integration/routes/screener.integration.test.js:46:31)

  ‚óè Screener Routes ‚Ä∫ GET /api/screener/screen ‚Ä∫ should handle sector filter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      54 |       );
      55 |
    > 56 |       expect(response.status).toBe(200);
         |                               ^
      57 |       expect(response.body.success).toBe(true);
      58 |     });
      59 |   });

      at Object.toBe (tests/integration/routes/screener.integration.test.js:56:31)

  ‚óè Screener Routes ‚Ä∫ GET /api/screener/presets ‚Ä∫ should return screening presets

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      63 |       const response = await request(app).get("/api/screener/presets");
      64 |
    > 65 |       expect(response.status).toBe(200);
         |                               ^
      66 |       expect(response.body.success).toBe(true);
      67 |       expect(Array.isArray(response.body.data)).toBe(true);
      68 |

      at Object.toBe (tests/integration/routes/screener.integration.test.js:65:31)

  ‚óè Screener Routes ‚Ä∫ GET /api/screener/presets/:presetName ‚Ä∫ should return specific preset

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      79 |       const response = await request(app).get("/api/screener/presets/growth");
      80 |
    > 81 |       expect(response.status).toBe(200);
         |                               ^
      82 |
      83 |       if (response.status === 200) {
      84 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/screener.integration.test.js:81:31)

  ‚óè Screener Routes ‚Ä∫ GET /api/screener/growth ‚Ä∫ should return growth stocks

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      93 |       const response = await request(app).get("/api/screener/growth");
      94 |
    > 95 |       expect(response.status).toBe(200);
         |                               ^
      96 |       expect(response.body.success).toBe(true);
      97 |       expect(Array.isArray(response.body.data)).toBe(true);
      98 |     });

      at Object.toBe (tests/integration/routes/screener.integration.test.js:95:31)

  ‚óè Screener Routes ‚Ä∫ GET /api/screener/growth ‚Ä∫ should handle timeframe parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      103 |       );
      104 |
    > 105 |       expect(response.status).toBe(200);
          |                               ^
      106 |       expect(response.body.success).toBe(true);
      107 |     });
      108 |   });

      at Object.toBe (tests/integration/routes/screener.integration.test.js:105:31)

  ‚óè Screener Routes ‚Ä∫ GET /api/screener/value ‚Ä∫ should return value stocks

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      112 |       const response = await request(app).get("/api/screener/value");
      113 |
    > 114 |       expect(response.status).toBe(200);
          |                               ^
      115 |       expect(response.body.success).toBe(true);
      116 |       expect(Array.isArray(response.body.data)).toBe(true);
      117 |     });

      at Object.toBe (tests/integration/routes/screener.integration.test.js:114:31)

  ‚óè Screener Routes ‚Ä∫ GET /api/screener/growth ‚Ä∫ should return growth stocks

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      122 |       const response = await request(app).get("/api/screener/growth");
      123 |
    > 124 |       expect(response.status).toBe(200);
          |                               ^
      125 |       expect(response.body.success).toBe(true);
      126 |       expect(Array.isArray(response.body.data)).toBe(true);
      127 |     });

      at Object.toBe (tests/integration/routes/screener.integration.test.js:124:31)

  ‚óè Screener Routes ‚Ä∫ GET /api/screener/technical ‚Ä∫ should return technical screening results

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      153 |       );
      154 |
    > 155 |       expect(response.status).toBe(200);
          |                               ^
      156 |       expect(response.body.success).toBe(true);
      157 |       expect(Array.isArray(response.body.data)).toBe(true);
      158 |     });

      at Object.toBe (tests/integration/routes/screener.integration.test.js:155:31)

  ‚óè Screener Routes ‚Ä∫ GET /api/screener/backtest ‚Ä∫ should return backtesting results

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      196 |       );
      197 |
    > 198 |       expect(response.status).toBe(200);
          |                               ^
      199 |
      200 |       if (response.status === 200) {
      201 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/screener.integration.test.js:198:31)

  ‚óè Screener Routes ‚Ä∫ GET /api/screener/backtest ‚Ä∫ should require strategy parameter

    expect(received).toContain(expected) // indexOf

    Expected value: 401
    Received array: [400, 422]

      208 |       const response = await request(app).get("/api/screener/backtest");
      209 |
    > 210 |       expect([400, 422]).toContain(response.status);
          |                          ^
      211 |     });
      212 |   });
      213 |

      at Object.toContain (tests/integration/routes/screener.integration.test.js:210:26)

  ‚óè Screener Routes ‚Ä∫ GET /api/screener/export ‚Ä∫ should export screening results

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      218 |       );
      219 |
    > 220 |       expect(response.status).toBe(200);
          |                               ^
      221 |
      222 |       if (response.status === 200) {
      223 |         expect(response.headers["content-type"]).toContain("text/csv");

      at Object.toBe (tests/integration/routes/screener.integration.test.js:220:31)

FAIL tests/integration/routes/watchlist.integration.test.js
  ‚óè Watchlist Routes ‚Ä∫ GET /api/watchlist/performance ‚Ä∫ should return watchlist performance

    expect(received).toHaveProperty(path)

    Matcher error: received value must not be null nor undefined

    Received has value: undefined

      109 |       if (response.status === 200) {
      110 |         expect(response.body.success).toBe(true);
    > 111 |         expect(response.body.data).toHaveProperty("performance");
          |                                    ^
      112 |       }
      113 |     });
      114 |   });

      at Object.toHaveProperty (tests/integration/routes/watchlist.integration.test.js:111:36)

  ‚óè Watchlist Routes ‚Ä∫ GET /api/watchlist/alerts ‚Ä∫ should return price alerts

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      124 |       if (response.status === 200) {
      125 |         expect(response.body.success).toBe(true);
    > 126 |         expect(Array.isArray(response.body.data)).toBe(true);
          |                                                   ^
      127 |       }
      128 |     });
      129 |   });

      at Object.toBe (tests/integration/routes/watchlist.integration.test.js:126:51)

  ‚óè Watchlist Routes ‚Ä∫ POST /api/watchlist/import ‚Ä∫ should import watchlist from CSV

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [200, 401, 422]

      138 |         .attach("file", Buffer.from(csvData), "watchlist.csv");
      139 |
    > 140 |       expect([200, 401, 422]).toContain(response.status);
          |                               ^
      141 |
      142 |       if (response.status === 200) {
      143 |         expect(response.body.success).toBe(true);

      at Object.toContain (tests/integration/routes/watchlist.integration.test.js:140:31)

  ‚óè Watchlist Routes ‚Ä∫ GET /api/watchlist/export ‚Ä∫ should export watchlist to CSV

    expect(received).toContain(expected) // indexOf

    Expected substring: "text/csv"
    Received string:    "application/json; charset=utf-8"

      155 |
      156 |       if (response.status === 200) {
    > 157 |         expect(response.headers["content-type"]).toContain("text/csv");
          |                                                  ^
      158 |       }
      159 |     });
      160 |   });

      at Object.toContain (tests/integration/routes/watchlist.integration.test.js:157:50)

FAIL tests/integration/middleware/auth-middleware.integration.test.js
  ‚óè Auth Middleware with Service Integration ‚Ä∫ Auth Middleware with Different Route Types ‚Ä∫ should protect all authenticated routes consistently

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 403, 500]

      127 |         const response = await request(app).get(route);
      128 |
    > 129 |         expect([401, 403, 500]).toContain(response.status);
          |                                 ^
      130 |
      131 |         if (response.status === 401 || response.status === 403) {
      132 |           expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/middleware/auth-middleware.integration.test.js:129:33)

  ‚óè Auth Middleware with Service Integration ‚Ä∫ Auth Middleware with Different Route Types ‚Ä∫ should allow public routes without authentication

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 500]

      142 |         const response = await request(app).get(route);
      143 |
    > 144 |         expect([401, 500]).toContain(response.status);
          |                            ^
      145 |       }
      146 |     });
      147 |   });

      at Object.toContain (tests/integration/middleware/auth-middleware.integration.test.js:144:28)

FAIL tests/integration/infrastructure/settings.test.js
  ‚óè Settings Management API ‚Ä∫ API Key Management ‚Ä∫ should retrieve API keys list

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      62 |       if (response.status === 200) {
      63 |         expect(response.body).toHaveProperty("success", true);
    > 64 |         expect(Array.isArray(response.body.data)).toBe(true);
         |                                                   ^
      65 |       }
      66 |     });
      67 |

      at Object.toBe (tests/integration/infrastructure/settings.test.js:64:51)

  ‚óè Settings Management API ‚Ä∫ API Key Management ‚Ä∫ should handle API key creation request

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [200, 404, 500, 501]

      79 |         .send(keyData);
      80 |
    > 81 |       expect([200, 404, 500, 501]).toContain(response.status);
         |                                    ^
      82 |
      83 |       if (response.status === 200 || response.status === 201) {
      84 |         expect(response.body).toHaveProperty("success", true);

      at Object.toContain (tests/integration/infrastructure/settings.test.js:81:36)

  ‚óè Settings Management API ‚Ä∫ Settings Health Status ‚Ä∫ should retrieve settings health status

    expect(received).toHaveProperty(path, value)

    Expected path: "success"
    Received path: []

    Expected value: true
    Received value: {"health": {"cacheStats": {"keyCache": 0, "sessionCache": 0, "timeout": 300000}, "circuitBreaker": {"failures": 1, "lastFailureTime": 1758645126899, "state": "CLOSED"}, "jwtCircuitBreaker": {"failures": 0, "lastFailureTime": 0, "state": "CLOSED"}, "services": {"encryptionAvailable": false, "jwtVerifierAvailable": true}}, "timestamp": "2025-09-23T16:32:06.924Z"}

       97 |
       98 |       if (response.status === 200) {
    >  99 |         expect(response.body).toHaveProperty("success", true);
          |                               ^
      100 |         expect(response.body).toHaveProperty("status");
      101 |       }
      102 |     });

      at Object.toHaveProperty (tests/integration/infrastructure/settings.test.js:99:31)

FAIL tests/integration/analytics/analysts.test.js
  ‚óè Analysts API ‚Ä∫ Analyst Recommendations ‚Ä∫ should retrieve analyst recommendations for stock

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      15 |       );
      16 |
    > 17 |       expect(response.status).toBe(200);
         |                               ^
      18 |
      19 |       if (response.status === 200) {
      20 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/analysts.test.js:17:31)

  ‚óè Analysts API ‚Ä∫ Analyst Coverage ‚Ä∫ should retrieve analyst coverage for stock

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      51 |       const response = await request(app).get("/api/analysts/coverage/AAPL");
      52 |
    > 53 |       expect(response.status).toBe(200);
         |                               ^
      54 |
      55 |       if (response.status === 200) {
      56 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/analysts.test.js:53:31)

  ‚óè Analysts API ‚Ä∫ Price Targets ‚Ä∫ should retrieve price targets for stock

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      80 |       );
      81 |
    > 82 |       expect(response.status).toBe(200);
         |                               ^
      83 |
      84 |       if (response.status === 200) {
      85 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/analysts.test.js:82:31)

  ‚óè Analysts API ‚Ä∫ Price Targets ‚Ä∫ should provide consensus price targets

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      116 |         );
      117 |
    > 118 |         expect(hasConsensusData).toBe(true);
          |                                  ^
      119 |       }
      120 |     });
      121 |   });

      at Object.toBe (tests/integration/analytics/analysts.test.js:118:34)

  ‚óè Analysts API ‚Ä∫ Analyst Research ‚Ä∫ should retrieve research reports

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      127 |       );
      128 |
    > 129 |       expect(response.status).toBe(200);
          |                               ^
      130 |
      131 |       if (response.status === 200) {
      132 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/analysts.test.js:129:31)

  ‚óè Analysts API ‚Ä∫ Analyst Research ‚Ä∫ should filter research by analyst firm

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      147 |       );
      148 |
    > 149 |       expect(response.status).toBe(200);
          |                               ^
      150 |
      151 |       if (response.status === 200) {
      152 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/analysts.test.js:149:31)

FAIL tests/integration/routes/analytics.integration.test.js
  ‚óè Analytics Routes ‚Ä∫ GET /api/analytics/performance ‚Ä∫ should return performance analytics

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      34 |       const response = await request(app).get("/api/analytics/performance");
      35 |
    > 36 |       expect(response.status).toBe(200);
         |                               ^
      37 |
      38 |       if (response.status === 200) {
      39 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/analytics.integration.test.js:36:31)

  ‚óè Analytics Routes ‚Ä∫ GET /api/analytics/risk ‚Ä∫ should return risk analytics

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      47 |       const response = await request(app).get("/api/analytics/risk");
      48 |
    > 49 |       expect(response.status).toBe(200);
         |                               ^
      50 |
      51 |       if (response.status === 200) {
      52 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/analytics.integration.test.js:49:31)

  ‚óè Analytics Routes ‚Ä∫ GET /api/analytics/allocation ‚Ä∫ should return allocation analytics

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      60 |       const response = await request(app).get("/api/analytics/allocation");
      61 |
    > 62 |       expect(response.status).toBe(200);
         |                               ^
      63 |
      64 |       if (response.status === 200) {
      65 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/analytics.integration.test.js:62:31)

  ‚óè Analytics Routes ‚Ä∫ GET /api/analytics/returns ‚Ä∫ should return returns analysis

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      73 |       const response = await request(app).get("/api/analytics/returns");
      74 |
    > 75 |       expect(response.status).toBe(200);
         |                               ^
      76 |
      77 |       if (response.status === 200) {
      78 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/analytics.integration.test.js:75:31)

  ‚óè Analytics Routes ‚Ä∫ GET /api/analytics/correlation ‚Ä∫ should return correlation analysis

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 400

      101 |         .set("Authorization", "Bearer dev-bypass-token");
      102 |
    > 103 |       expect(response.status).toBe(200);
          |                               ^
      104 |
      105 |       if (response.status === 200) {
      106 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/analytics.integration.test.js:103:31)

  ‚óè Analytics Routes ‚Ä∫ GET /api/analytics/volatility ‚Ä∫ should return volatility analysis

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      114 |       const response = await request(app).get("/api/analytics/volatility");
      115 |
    > 116 |       expect(response.status).toBe(200);
          |                               ^
      117 |
      118 |       if (response.status === 200) {
      119 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/analytics.integration.test.js:116:31)

  ‚óè Analytics Routes ‚Ä∫ GET /api/analytics/trends ‚Ä∫ should return trend analysis

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      127 |       const response = await request(app).get("/api/analytics/trends");
      128 |
    > 129 |       expect(response.status).toBe(200);
          |                               ^
      130 |
      131 |       if (response.status === 200) {
      132 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/analytics.integration.test.js:129:31)

  ‚óè Analytics Routes ‚Ä∫ POST /api/analytics/custom ‚Ä∫ should handle custom analytics request

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      148 |         .send(analyticsRequest);
      149 |
    > 150 |       expect(response.status).toBe(200);
          |                               ^
      151 |
      152 |       if (response.status === 200 || response.status === 201) {
      153 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/analytics.integration.test.js:150:31)

FAIL tests/integration/routes/news.integration.test.js
  ‚óè News Routes ‚Ä∫ GET /api/news ‚Ä∫ should return news API status

    expect(received).toBe(expected) // Object.is equality

    Expected: "News API - Ready"
    Received: undefined

      34 |
      35 |       expect(response.status).toBe(200);
    > 36 |       expect(response.body.message).toBe("News API - Ready");
         |                                     ^
      37 |       expect(response.body.status).toBe("operational");
      38 |       expect(response.body.timestamp).toBeDefined();
      39 |     });

      at Object.toBe (tests/integration/routes/news.integration.test.js:36:37)

  ‚óè News Routes ‚Ä∫ GET /api/news/recent ‚Ä∫ should return recent news

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      46 |       expect(response.status).toBe(200);
      47 |       expect(response.body.success).toBe(true);
    > 48 |       expect(Array.isArray(response.body.data)).toBe(true);
         |                                                 ^
      49 |
      50 |       if (response.body.data.length > 0) {
      51 |         const article = response.body.data[0];

      at Object.toBe (tests/integration/routes/news.integration.test.js:48:49)

  ‚óè News Routes ‚Ä∫ GET /api/news/recent ‚Ä∫ should handle limit parameter

    expect(received).toBeLessThanOrEqual(expected)

    Matcher error: received value must be a number or bigint

    Received has value: undefined

      61 |       expect(response.status).toBe(200);
      62 |       expect(response.body.success).toBe(true);
    > 63 |       expect(response.body.data.length).toBeLessThanOrEqual(5);
         |                                         ^
      64 |     });
      65 |
      66 |     test("should handle category filtering", async () => {

      at Object.toBeLessThanOrEqual (tests/integration/routes/news.integration.test.js:63:41)

  ‚óè News Routes ‚Ä∫ GET /api/news/search ‚Ä∫ should search news articles

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: undefined

      81 |
      82 |       if (response.status === 200) {
    > 83 |         expect(response.body.success).toBe(true);
         |                                       ^
      84 |         expect(Array.isArray(response.body.data)).toBe(true);
      85 |       }
      86 |     });

      at Object.toBe (tests/integration/routes/news.integration.test.js:83:39)

  ‚óè News Routes ‚Ä∫ GET /api/news/sentiment ‚Ä∫ should return news sentiment analysis

    expect(received).toHaveProperty(path)

    Expected path: "sentiment"
    Received path: []

    Received value: {"overall_sentiment": {"distribution": {"negative": 0, "neutral": 0, "positive": 0}, "label": "neutral", "score": 0, "total_articles": 0}, "timeframe": "24h", "timestamp": "2025-09-23T16:32:08.332Z"}

       95 |       if (response.status === 200) {
       96 |         expect(response.body.success).toBe(true);
    >  97 |         expect(response.body.data).toHaveProperty("sentiment");
          |                                    ^
       98 |       }
       99 |     });
      100 |   });

      at Object.toHaveProperty (tests/integration/routes/news.integration.test.js:97:36)

  ‚óè News Routes ‚Ä∫ GET /api/news/symbols/:symbol ‚Ä∫ should return news for specific symbol

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      104 |       const response = await request(app).get("/api/news/symbols/AAPL");
      105 |
    > 106 |       expect(response.status).toBe(200);
          |                               ^
      107 |       expect(response.body.success).toBe(true);
      108 |       expect(Array.isArray(response.body.data)).toBe(true);
      109 |     });

      at Object.toBe (tests/integration/routes/news.integration.test.js:106:31)

FAIL tests/integration/analytics/recommendations.test.js
  ‚óè Recommendations API ‚Ä∫ Stock Recommendations ‚Ä∫ should retrieve personalized stock recommendations

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      19 |       if (response.status === 200) {
      20 |         expect(response.body).toHaveProperty("success", true);
    > 21 |         expect(Array.isArray(response.body.data)).toBe(true);
         |                                                   ^
      22 |
      23 |         if (response.body.data.length > 0) {
      24 |           const recommendation = response.body.data[0];

      at Object.toBe (tests/integration/analytics/recommendations.test.js:21:51)

  ‚óè Recommendations API ‚Ä∫ Stock Recommendations ‚Ä∫ should filter recommendations by type

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      52 |       if (response.status === 200) {
      53 |         expect(response.body).toHaveProperty("success", true);
    > 54 |         expect(Array.isArray(response.body.data)).toBe(true);
         |                                                   ^
      55 |
      56 |         if (response.body.data.length > 0) {
      57 |           const recommendation = response.body.data[0];

      at Object.toBe (tests/integration/analytics/recommendations.test.js:54:51)

  ‚óè Recommendations API ‚Ä∫ Sector Recommendations ‚Ä∫ should provide sector-based recommendations

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      66 |       const response = await request(app).get("/api/recommendations/sectors");
      67 |
    > 68 |       expect(response.status).toBe(200);
         |                               ^
      69 |
      70 |       if (response.status === 200) {
      71 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/recommendations.test.js:68:31)

  ‚óè Recommendations API ‚Ä∫ Sector Recommendations ‚Ä∫ should get recommendations for specific sector

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      94 |       );
      95 |
    > 96 |       expect(response.status).toBe(200);
         |                               ^
      97 |
      98 |       if (response.status === 200) {
      99 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/recommendations.test.js:96:31)

  ‚óè Recommendations API ‚Ä∫ AI-Generated Recommendations ‚Ä∫ should provide AI-generated stock picks

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      115 |       if (response.status === 200) {
      116 |         expect(response.body).toHaveProperty("success", true);
    > 117 |         expect(Array.isArray(response.body.data)).toBe(true);
          |                                                   ^
      118 |
      119 |         if (response.body.data.length > 0) {
      120 |           const aiRec = response.body.data[0];

      at Object.toBe (tests/integration/analytics/recommendations.test.js:117:51)

  ‚óè Recommendations API ‚Ä∫ AI-Generated Recommendations ‚Ä∫ should generate portfolio allocation recommendations

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      131 |         .set("Authorization", "Bearer test-token");
      132 |
    > 133 |       expect(response.status).toBe(200);
          |                               ^
      134 |
      135 |       if (response.status === 200) {
      136 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/recommendations.test.js:133:31)

  ‚óè Recommendations API ‚Ä∫ Similar Stocks ‚Ä∫ should find similar stocks based on characteristics

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      155 |       );
      156 |
    > 157 |       expect(response.status).toBe(200);
          |                               ^
      158 |
      159 |       if (response.status === 200) {
      160 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/recommendations.test.js:157:31)

  ‚óè Recommendations API ‚Ä∫ Similar Stocks ‚Ä∫ should recommend alternatives to current holdings

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      175 |         .set("Authorization", "Bearer test-token");
      176 |
    > 177 |       expect(response.status).toBe(200);
          |                               ^
      178 |
      179 |       if (response.status === 200) {
      180 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/recommendations.test.js:177:31)

  ‚óè Recommendations API ‚Ä∫ Performance Tracking ‚Ä∫ should track recommendation performance

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      196 |         .set("Authorization", "Bearer test-token");
      197 |
    > 198 |       expect(response.status).toBe(200);
          |                               ^
      199 |
      200 |       if (response.status === 200) {
      201 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/recommendations.test.js:198:31)

FAIL tests/integration/routes/scoring.integration.test.js
  ‚óè Scoring Analysis API ‚Ä∫ Scoring Factors ‚Ä∫ should filter scoring factors by category

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      52 |       if (response.status === 200) {
      53 |         expect(response.body).toHaveProperty("success", true);
    > 54 |         expect(Array.isArray(response.body.data)).toBe(true);
         |                                                   ^
      55 |       }
      56 |     });
      57 |   });

      at Object.toBe (tests/integration/routes/scoring.integration.test.js:54:51)

  ‚óè Scoring Analysis API ‚Ä∫ Symbol Scoring ‚Ä∫ should calculate scoring metrics for symbol

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      61 |       const response = await request(app).get("/api/scoring/AAPL");
      62 |
    > 63 |       expect(response.status).toBe(200);
         |                               ^
      64 |
      65 |       if (response.status === 200) {
      66 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/scoring.integration.test.js:63:31)

  ‚óè Scoring Analysis API ‚Ä∫ Symbol Scoring ‚Ä∫ should provide factor-based scoring breakdown

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      87 |       const response = await request(app).get("/api/scoring/AAPL/factors");
      88 |
    > 89 |       expect(response.status).toBe(200);
         |                               ^
      90 |
      91 |       if (response.status === 200) {
      92 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/scoring.integration.test.js:89:31)

  ‚óè Scoring Analysis API ‚Ä∫ Score Comparison ‚Ä∫ should compare scores between multiple symbols

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      113 |       );
      114 |
    > 115 |       expect(response.status).toBe(200);
          |                               ^
      116 |
      117 |       if (response.status === 200) {
      118 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/scoring.integration.test.js:115:31)

  ‚óè Scoring Analysis API ‚Ä∫ Sector Scoring ‚Ä∫ should provide sector-based scoring analysis

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      136 |       if (response.status === 200) {
      137 |         expect(response.body).toHaveProperty("success", true);
    > 138 |         expect(Array.isArray(response.body.data)).toBe(true);
          |                                                   ^
      139 |
      140 |         if (response.body.data.length > 0) {
      141 |           const sectorScoring = response.body.data[0];

      at Object.toBe (tests/integration/routes/scoring.integration.test.js:138:51)

FAIL tests/integration/routes/sectors.integration.test.js
  ‚óè Sectors Routes ‚Ä∫ GET /api/sectors/performance ‚Ä∫ should handle period parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 400

      47 |       );
      48 |
    > 49 |       expect(response.status).toBe(200);
         |                               ^
      50 |       expect(response.body.success).toBe(true);
      51 |     });
      52 |   });

      at Object.toBe (tests/integration/routes/sectors.integration.test.js:49:31)

  ‚óè Sectors Routes ‚Ä∫ GET /api/sectors/leaders ‚Ä∫ should return sector leaders

    expect(received).toHaveProperty(path)

    Expected path: "gainers"
    Received path: []

    Received value: {"last_updated": "2025-09-23T16:32:09.906Z", "period": "1d", "sector_breadth": {"advancing_sectors": 7, "breadth_ratio": 1.75, "declining_sectors": 4, "neutral_sectors": 0}, "top_performing_sectors": [{"return": 0, "sector": "Technology", "volume_flow": 2400000000}, {"return": 0, "sector": "Healthcare", "volume_flow": 1800000000}, {"return": 0, "sector": "Consumer Discretionary", "volume_flow": 1500000000}]}

      58 |       expect(response.status).toBe(200);
      59 |       expect(response.body.success).toBe(true);
    > 60 |       expect(response.body.data).toHaveProperty("gainers");
         |                                  ^
      61 |       expect(response.body.data).toHaveProperty("losers");
      62 |     });
      63 |   });

      at Object.toHaveProperty (tests/integration/routes/sectors.integration.test.js:60:34)

  ‚óè Sectors Routes ‚Ä∫ GET /api/sectors/rotation ‚Ä∫ should return sector rotation analysis

    expect(received).toHaveProperty(path)

    Expected path: "rotation"
    Received path: []

    Received value: {"analysis_date": "2025-09-23T16:32:09.908Z", "last_updated": "2025-09-23T16:32:09.908Z", "market_cycle": {"confidence": 0, "current_phase": "EARLY_CYCLE", "duration_estimate": 60}, "sector_rankings": [{"flow_direction": "INFLOW", "momentum": 8.2, "relative_strength": 92.5, "sector": "Technology"}, {"flow_direction": "INFLOW", "momentum": 6.1, "relative_strength": 87.3, "sector": "Healthcare"}, {"flow_direction": "OUTFLOW", "momentum": -2.4, "relative_strength": 45.8, "sector": "Financials"}, {"flow_direction": "OUTFLOW", "momentum": -4.7, "relative_strength": 38.2, "sector": "Energy"}, {"flow_direction": "NEUTRAL", "momentum": 3.8, "relative_strength": 74.1, "sector": "Consumer Discretionary"}], "timeframe": "3m"}

      69 |       expect(response.status).toBe(200);
      70 |       expect(response.body.success).toBe(true);
    > 71 |       expect(response.body.data).toHaveProperty("rotation");
         |                                  ^
      72 |       expect(response.body.data).toHaveProperty("momentum");
      73 |     });
      74 |   });

      at Object.toHaveProperty (tests/integration/routes/sectors.integration.test.js:71:34)

  ‚óè Sectors Routes ‚Ä∫ GET /api/sectors/:sector ‚Ä∫ should return specific sector data

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      78 |       const response = await request(app).get("/api/sectors/Technology");
      79 |
    > 80 |       expect(response.status).toBe(200);
         |                               ^
      81 |       expect(response.body.success).toBe(true);
      82 |       expect(response.body.data).toHaveProperty("sector");
      83 |       expect(response.body.data).toHaveProperty("stocks");

      at Object.toBe (tests/integration/routes/sectors.integration.test.js:80:31)

  ‚óè Sectors Routes ‚Ä∫ GET /api/sectors/heatmap ‚Ä∫ should return sector heatmap data

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      109 |       const response = await request(app).get("/api/sectors/heatmap");
      110 |
    > 111 |       expect(response.status).toBe(200);
          |                               ^
      112 |       expect(response.body.success).toBe(true);
      113 |       expect(Array.isArray(response.body.data)).toBe(true);
      114 |     });

      at Object.toBe (tests/integration/routes/sectors.integration.test.js:111:31)

FAIL tests/integration/routes/insider.integration.test.js
  ‚óè Insider Trading API ‚Ä∫ Insider Trades ‚Ä∫ should return not implemented status for insider trades

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      13 |       const response = await request(app).get("/api/insider/trades/AAPL");
      14 |
    > 15 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
         |                                         ^
      16 |       expect(response.body).toHaveProperty("success", false);
      17 |       expect(response.body).toHaveProperty(
      18 |         "error",

      at Object.toContain (tests/integration/routes/insider.integration.test.js:15:41)

  ‚óè Insider Trading API ‚Ä∫ Insider Trades ‚Ä∫ should handle different symbols correctly

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      25 |       const response = await request(app).get("/api/insider/trades/GOOGL");
      26 |
    > 27 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
         |                                         ^
      28 |       expect(response.body).toHaveProperty("success", false);
      29 |       expect(response.body).toHaveProperty(
      30 |         "error",

      at Object.toContain (tests/integration/routes/insider.integration.test.js:27:41)

  ‚óè Insider Trading API ‚Ä∫ Error handling ‚Ä∫ should handle invalid symbols

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422, 500]

      39 |       const response = await request(app).get("/api/insider/trades/INVALID123");
      40 |
    > 41 |       expect([400, 401, 404, 422, 500]).toContain(response.status);
         |                                         ^
      42 |       expect(response.body).toHaveProperty("success", false);
      43 |       expect(response.body).toHaveProperty(
      44 |         "error",

      at Object.toContain (tests/integration/routes/insider.integration.test.js:41:41)

  ‚óè Insider Trading API ‚Ä∫ Error handling ‚Ä∫ should handle server errors gracefully

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [501]

      52 |
      53 |       // Should return 501 for not implemented, not crash with 500
    > 54 |       expect([501]).toContain(response.status);
         |                     ^
      55 |       if (response.status === 501) {
      56 |         expect(response.body).toHaveProperty("success", false);
      57 |         expect(response.body).toHaveProperty("error");

      at Object.toContain (tests/integration/routes/insider.integration.test.js:54:21)

FAIL tests/unit/routes/analytics.test.js
  ‚óè Analytics Routes Unit Tests ‚Ä∫ GET /analytics/correlation ‚Ä∫ should handle correlation analysis

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      65 |       const response = await request(app).get("/analytics/correlation");
      66 |
    > 67 |       expect(response.status).toBe(200);
         |                               ^
      68 |       expect(response.body).toHaveProperty("success");
      69 |     });
      70 |   });

      at Object.toBe (tests/unit/routes/analytics.test.js:67:31)

  ‚óè Analytics Routes Unit Tests ‚Ä∫ POST /analytics/custom ‚Ä∫ should handle custom analytics request

    expect(received).toContain(expected) // indexOf

    Expected value: 422
    Received array: [200, 401, 500]

      138 |         .send(customRequest);
      139 |
    > 140 |       expect([200, 401, 500]).toContain(response.status);
          |                               ^
      141 |       expect(response.body).toHaveProperty("success");
      142 |     });
      143 |   });

      at Object.toContain (tests/unit/routes/analytics.test.js:140:31)

FAIL tests/integration/routes/technical.integration.test.js
  ‚óè Technical Router ‚Ä∫ GET /ping ‚Ä∫ should return ping response

    expect(received).toBe(expected) // Object.is equality

    Expected: "ok"
    Received: undefined

      40 |
      41 |       expect(response.body.success).toBe(true);
    > 42 |       expect(response.body.status).toBe("ok");
         |                                    ^
      43 |       expect(response.body.endpoint).toBe("technical");
      44 |       expect(response.body.timestamp).toBeDefined();
      45 |     });

      at Object.toBe (tests/integration/routes/technical.integration.test.js:42:36)

  ‚óè Technical Router ‚Ä∫ GET /compare ‚Ä∫ should compare technical indicators across multiple symbols

    expect(received).toBe(expected) // Object.is equality

    Expected: "MSFT"
    Received: "AAPL"

      260 |       expect(response.body.data.comparison).toHaveLength(2);
      261 |       expect(response.body.data.comparison[0].symbol).toBe("AAPL");
    > 262 |       expect(response.body.data.comparison[1].symbol).toBe("MSFT");
          |                                                       ^
      263 |     });
      264 |
      265 |     test("should require symbols query parameter", async () => {

      at Object.toBe (tests/integration/routes/technical.integration.test.js:262:55)

FAIL tests/unit/routes/sentiment.test.js
  ‚óè Sentiment Routes Unit Tests ‚Ä∫ GET /sentiment ‚Ä∫ should return sentiment API information without authentication

    expect(received).toHaveProperty(path, value)

    Expected path: "status"
    Received path: []

    Expected value: "operational"
    Received value: {"data": {"endpoints": ["analysis", "trends", "social", "news"], "service": "sentiment", "status": "operational"}, "message": "Sentiment API - Ready", "success": true, "timestamp": "2025-09-23T16:32:11.109Z"}

      85 |       expect(response.status).toBe(200);
      86 |       expect(response.body).toHaveProperty("message", "Sentiment API - Ready");
    > 87 |       expect(response.body).toHaveProperty("status", "operational");
         |                             ^
      88 |       expect(response.body).toHaveProperty("timestamp");
      89 |
      90 |       // Verify timestamp is a valid ISO string

      at Object.toHaveProperty (tests/unit/routes/sentiment.test.js:87:29)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ GET /sentiment/analysis ‚Ä∫ should require symbol parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 422

       98 |       const response = await request(app).get("/sentiment/analysis");
       99 |
    > 100 |       expect(response.status).toBe(400);
          |                               ^
      101 |       expect(response.body).toHaveProperty("success", false);
      102 |       expect(response.body).toHaveProperty(
      103 |         "error",

      at Object.toBe (tests/unit/routes/sentiment.test.js:100:31)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ GET /sentiment/analysis ‚Ä∫ should return sentiment analysis with valid symbol

    expect(received).toHaveProperty(path, value)

    Expected path: "sentiment_score"

    Expected value: 0.75
    Received value: 0

      138 |       expect(response.body).toHaveProperty("data");
      139 |       expect(response.body.data).toHaveProperty("symbol", "AAPL");
    > 140 |       expect(response.body.data).toHaveProperty("sentiment_score", 0.75);
          |                                  ^
      141 |       expect(response.body.data).toHaveProperty("total_mentions", 80);
      142 |       expect(mockQuery).toHaveBeenCalledWith(
      143 |         expect.stringContaining("sentiment_analysis"),

      at Object.toHaveProperty (tests/unit/routes/sentiment.test.js:140:34)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ GET /sentiment/analysis ‚Ä∫ should handle empty sentiment data

    expect(received).toBe(expected) // Object.is equality

    Expected: 404
    Received: 200

      214 |         .query({ symbol: "INVALID" });
      215 |
    > 216 |       expect(response.status).toBe(404);
          |                               ^
      217 |       expect(response.body).toHaveProperty("success", false);
      218 |       expect(response.body.error).toContain("No sentiment data found");
      219 |     });

      at Object.toBe (tests/unit/routes/sentiment.test.js:216:31)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ GET /sentiment/analysis ‚Ä∫ should handle database query errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      227 |         .query({ symbol: "AAPL" });
      228 |
    > 229 |       expect(response.status).toBe(500);
          |                               ^
      230 |       expect(response.body).toHaveProperty("success", false);
      231 |       expect(response.body.error).toBeDefined();
      232 |     });

      at Object.toBe (tests/unit/routes/sentiment.test.js:229:31)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ GET /sentiment/history ‚Ä∫ should return sentiment history for symbol

    expect(received).toHaveProperty(path)

    Expected path: "data"
    Received path: []

    Received value: {"metadata": {"data_quality": "simulated", "last_updated": "2025-09-23T16:32:11.138Z", "period": "7d", "period_days": 7, "symbol": "HISTORY"}, "sentiment": {"confidence": 96, "last_updated": "2025-09-23T16:32:11.138Z", "metrics": {"mention_velocity": 137, "negative_mentions": 504, "neutral_mentions": 192, "positive_mentions": 458, "sentiment_volatility": 0.12, "total_mentions": 963}, "overall_sentiment": 0.48, "period": "7d", "sentiment_label": "Neutral", "sources": {"discord": 96, "reddit": 288, "stocktwits": 144, "twitter": 433}, "symbol": "HISTORY", "trending_keywords": ["history", "bearish", "earnings", "price", "target"]}, "success": true}

      262 |       expect(response.status).toBe(200);
      263 |       expect(response.body).toHaveProperty("success", true);
    > 264 |       expect(response.body).toHaveProperty("data");
          |                             ^
      265 |       expect(response.body.data).toHaveProperty("symbol", "GOOGL");
      266 |       expect(response.body.data).toHaveProperty("history");
      267 |       expect(Array.isArray(response.body.data.history)).toBe(true);

      at Object.toHaveProperty (tests/unit/routes/sentiment.test.js:264:29)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ GET /sentiment/history ‚Ä∫ should handle history limit parameter

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "LIMIT", ArrayContaining ["AAPL", 50]

    Number of calls: 0

      281 |
      282 |       expect(response.status).toBe(200);
    > 283 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      284 |         expect.stringContaining("LIMIT"),
      285 |         expect.arrayContaining(["AAPL", 50])
      286 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/sentiment.test.js:283:25)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ GET /sentiment/social ‚Ä∫ should return social sentiment analysis with proper structure

    expect(received).toHaveProperty(path, value)

    Expected path: "success"

    Expected value: true
    Received value: false

      295 |
      296 |       if (response.status === 200) {
    > 297 |         expect(response.body).toHaveProperty("success", true);
          |                               ^
      298 |         expect(response.body).toHaveProperty("data");
      299 |         expect(response.body.data).toHaveProperty("symbol", "AAPL");
      300 |         expect(response.body.data).toHaveProperty("social_sentiment");

      at Object.toHaveProperty (tests/unit/routes/sentiment.test.js:297:31)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ GET /sentiment/social ‚Ä∫ should handle timeframe parameter for social sentiment

    TypeError: Cannot read properties of undefined (reading 'summary')

      348 |
      349 |       if (response.status === 200) {
    > 350 |         expect(response.body.data.summary.analysis_period).toBe("24h");
          |                                   ^
      351 |       }
      352 |     });
      353 |

      at Object.summary (tests/unit/routes/sentiment.test.js:350:35)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ GET /sentiment/trending ‚Ä∫ should return trending sentiment analysis with proper structure

    expect(received).toHaveProperty(path, value)

    Expected path: "success"

    Expected value: true
    Received value: false

      369 |
      370 |       if (response.status === 200) {
    > 371 |         expect(response.body).toHaveProperty("success", true);
          |                               ^
      372 |         expect(response.body).toHaveProperty("data");
      373 |         expect(response.body.data).toHaveProperty("trending_symbols");
      374 |         expect(response.body.data).toHaveProperty("momentum_analysis");

      at Object.toHaveProperty (tests/unit/routes/sentiment.test.js:371:31)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ GET /sentiment/trending ‚Ä∫ should handle limit parameter for trending sentiment

    TypeError: Cannot read properties of undefined (reading 'trending_symbols')

      422 |
      423 |       if (response.status === 200) {
    > 424 |         expect(response.body.data.trending_symbols.length).toBeLessThanOrEqual(
          |                                   ^
      425 |           10
      426 |         );
      427 |       }

      at Object.trending_symbols (tests/unit/routes/sentiment.test.js:424:35)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ GET /sentiment/trending ‚Ä∫ should handle timeframe parameter for trending sentiment

    TypeError: Cannot read properties of undefined (reading 'summary')

      434 |
      435 |       if (response.status === 200) {
    > 436 |         expect(response.body.data.summary.analysis_window).toBe("1h");
          |                                   ^
      437 |       }
      438 |     });
      439 |

      at Object.summary (tests/unit/routes/sentiment.test.js:436:35)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ GET /sentiment/trending ‚Ä∫ should handle sorting for trending sentiment

    TypeError: Cannot read properties of undefined (reading 'trending_symbols')

      445 |       if (response.status === 200) {
      446 |         // Should be sorted by momentum/trending score
    > 447 |         const symbols = response.body.data.trending_symbols;
          |                                            ^
      448 |         if (symbols.length > 1) {
      449 |           for (let i = 1; i < symbols.length; i++) {
      450 |             expect(symbols[i - 1].trending_score).toBeGreaterThanOrEqual(

      at Object.trending_symbols (tests/unit/routes/sentiment.test.js:447:44)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ GET /sentiment/trending ‚Ä∫ should handle sector filter for trending sentiment

    TypeError: Cannot read properties of undefined (reading 'summary')

      463 |       if (response.status === 200) {
      464 |         // Should filter by sector
    > 465 |         expect(response.body.data.summary).toHaveProperty(
          |                                   ^
      466 |           "sector_filter",
      467 |           "Technology"
      468 |         );

      at Object.summary (tests/unit/routes/sentiment.test.js:465:35)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ GET /sentiment/trending ‚Ä∫ should handle minimum trending score filter

    TypeError: Cannot read properties of undefined (reading 'trending_symbols')

      476 |
      477 |       if (response.status === 200) {
    > 478 |         const symbols = response.body.data.trending_symbols;
          |                                            ^
      479 |         symbols.forEach((symbol) => {
      480 |           expect(symbol.trending_score).toBeGreaterThanOrEqual(70);
      481 |         });

      at Object.trending_symbols (tests/unit/routes/sentiment.test.js:478:44)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ GET /sentiment/market ‚Ä∫ should return overall market sentiment

    expect(received).toHaveProperty(path, value)

    Expected path: "overall_sentiment"

    Expected value: 0.62
    Received value: 0.55

      507 |       expect(response.body).toHaveProperty("success", true);
      508 |       expect(response.body).toHaveProperty("data");
    > 509 |       expect(response.body.data).toHaveProperty("overall_sentiment", 0.62);
          |                                  ^
      510 |       expect(response.body.data).toHaveProperty(
      511 |         "market_mood",
      512 |         "cautiously_optimistic"

      at Object.toHaveProperty (tests/unit/routes/sentiment.test.js:509:34)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ GET /sentiment/market ‚Ä∫ should handle empty market sentiment data

    expect(received).toHaveProperty(path, value)

    Expected path: "message"
    Received path: []

    Expected value: "No market sentiment data available"
    Received value: {"fear_greed_index": 82, "market_cap_sentiment": {"large_cap": 0.425, "mid_cap": 0.677, "small_cap": 0.68}, "overall_sentiment": 0.635, "period": "7d", "vix_level": 31.64}

      526 |       expect(response.status).toBe(200);
      527 |       expect(response.body).toHaveProperty("success", true);
    > 528 |       expect(response.body.data).toHaveProperty(
          |                                  ^
      529 |         "message",
      530 |         "No market sentiment data available"
      531 |       );

      at Object.toHaveProperty (tests/unit/routes/sentiment.test.js:528:34)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ Parameter validation ‚Ä∫ should sanitize symbol parameter

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ArrayContaining ["AAPL'; DROP TABLE sentiment; --"]
    Received: "
          SELECT
            sentiment,
            published_at,
            title,
            source,
            symbols
          FROM news_articles
          WHERE sentiment IS NOT NULL
            AND (symbols @> ARRAY[$1] OR $1 = ANY(symbols))
            AND published_at >= NOW() - INTERVAL '1 day' * $2
          ORDER BY published_at DESC
          LIMIT 100
          ", ["AAPL'; DROP TABLE SENTIMENT; --", 7]

    Number of calls: 1

      543 |       expect(response.status).toBe(200);
      544 |       // Symbol should be sanitized and used safely in prepared statement
    > 545 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      546 |         expect.any(String),
      547 |         expect.arrayContaining(["AAPL'; DROP TABLE sentiment; --"])
      548 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/sentiment.test.js:545:25)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ Parameter validation ‚Ä∫ should handle invalid symbol format

    expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 200

      554 |         .query({ symbol: "invalid-symbol-format!@#$%" });
      555 |
    > 556 |       expect(response.status).toBe(400);
          |                               ^
      557 |       expect(response.body).toHaveProperty("success", false);
      558 |       expect(response.body.error).toContain("Invalid symbol format");
      559 |     });

      at Object.toBe (tests/unit/routes/sentiment.test.js:556:31)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ Parameter validation ‚Ä∫ should handle extremely long symbol parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 200

      566 |         .query({ symbol: longSymbol });
      567 |
    > 568 |       expect(response.status).toBe(400);
          |                               ^
      569 |       expect(response.body).toHaveProperty("success", false);
      570 |       expect(response.body.error).toContain("Symbol too long");
      571 |     });

      at Object.toBe (tests/unit/routes/sentiment.test.js:568:31)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ Error handling ‚Ä∫ should handle database connection timeout

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      609 |         .query({ symbol: "AAPL" });
      610 |
    > 611 |       expect(response.status).toBe(500);
          |                               ^
      612 |       expect(response.body).toHaveProperty("success", false);
      613 |       expect(response.body.error).toContain("timeout");
      614 |     });

      at Object.toBe (tests/unit/routes/sentiment.test.js:611:31)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ Error handling ‚Ä∫ should handle malformed database results

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      621 |         .query({ symbol: "AAPL" });
      622 |
    > 623 |       expect(response.status).toBe(500);
          |                               ^
      624 |       expect(response.body).toHaveProperty("success", false);
      625 |     });
      626 |

      at Object.toBe (tests/unit/routes/sentiment.test.js:623:31)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ Error handling ‚Ä∫ should handle sentiment calculation errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      644 |         .query({ symbol: "AAPL" });
      645 |
    > 646 |       expect(response.status).toBe(500);
          |                               ^
      647 |       expect(response.body).toHaveProperty("success", false);
      648 |       expect(response.body.error).toContain("Sentiment calculation failed");
      649 |     });

      at Object.toBe (tests/unit/routes/sentiment.test.js:646:31)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ Response format ‚Ä∫ should include metadata in sentiment responses

    expect(received).toHaveProperty(path)

    Expected path: "data"
    Received path: []

    Received value: {"details": "Cannot read properties of null (reading 'rows')", "error": "Failed to perform sentiment analysis", "success": false}

      667 |       if (response.status === 200) {
      668 |         expect(response.body).toHaveProperty("success");
    > 669 |         expect(response.body).toHaveProperty("data");
          |                               ^
      670 |       }
      671 |     });
      672 |

      at Object.toHaveProperty (tests/unit/routes/sentiment.test.js:669:31)

  ‚óè Sentiment Routes Unit Tests ‚Ä∫ Response format ‚Ä∫ should include analysis metadata

    expect(received).toHaveProperty(path, value)

    Expected path: "analysis_period"
    Received path: []

    Expected value: "7d"
    Received value: {"articles_analyzed": 1, "daily_sentiment": {"2025-09-23": {"negative": 0, "neutral": 1, "positive": 0, "total": 1}}, "period": "7d", "recent_articles": [{}], "sentiment_breakdown": {"negative": 0, "negative_pct": "0.0", "neutral": 1, "neutral_pct": "100.0", "positive": 0, "positive_pct": "0.0"}, "sentiment_grade": "Neutral", "sentiment_score": 0, "symbol": "AAPL", "trend": "stable"}

      692 |       expect(response.status).toBe(200);
      693 |       expect(response.body.data).toHaveProperty("symbol");
    > 694 |       expect(response.body.data).toHaveProperty("analysis_period", "7d");
          |                                  ^
      695 |       expect(response.body.data).toHaveProperty("last_updated");
      696 |     });
      697 |   });

      at Object.toHaveProperty (tests/unit/routes/sentiment.test.js:694:34)

FAIL tests/performance/api-load-testing.test.js
  ‚óè API Load Testing and Performance ‚Ä∫ Concurrent Request Handling ‚Ä∫ should handle multiple concurrent health check requests

    TypeError: Cannot read properties of undefined (reading 'query')

      17 |
      18 |     // Setup test data for load testing
    > 19 |     await testDatabase.query(`
         |                        ^
      20 |       INSERT INTO stock_prices (symbol, price, change_amount, change_percent, volume)
      21 |       VALUES 
      22 |         ('AAPL', 189.45, 2.15, 1.15, 45000000),

      at Object.query (tests/performance/api-load-testing.test.js:19:24)

  ‚óè API Load Testing and Performance ‚Ä∫ Concurrent Request Handling ‚Ä∫ should handle concurrent authenticated requests

    TypeError: Cannot read properties of undefined (reading 'query')

      17 |
      18 |     // Setup test data for load testing
    > 19 |     await testDatabase.query(`
         |                        ^
      20 |       INSERT INTO stock_prices (symbol, price, change_amount, change_percent, volume)
      21 |       VALUES 
      22 |         ('AAPL', 189.45, 2.15, 1.15, 45000000),

      at Object.query (tests/performance/api-load-testing.test.js:19:24)

  ‚óè API Load Testing and Performance ‚Ä∫ Concurrent Request Handling ‚Ä∫ should maintain performance under database load

    TypeError: Cannot read properties of undefined (reading 'query')

      17 |
      18 |     // Setup test data for load testing
    > 19 |     await testDatabase.query(`
         |                        ^
      20 |       INSERT INTO stock_prices (symbol, price, change_amount, change_percent, volume)
      21 |       VALUES 
      22 |         ('AAPL', 189.45, 2.15, 1.15, 45000000),

      at Object.query (tests/performance/api-load-testing.test.js:19:24)

  ‚óè API Load Testing and Performance ‚Ä∫ Response Time Benchmarks ‚Ä∫ health endpoint should respond quickly

    TypeError: Cannot read properties of undefined (reading 'query')

      17 |
      18 |     // Setup test data for load testing
    > 19 |     await testDatabase.query(`
         |                        ^
      20 |       INSERT INTO stock_prices (symbol, price, change_amount, change_percent, volume)
      21 |       VALUES 
      22 |         ('AAPL', 189.45, 2.15, 1.15, 45000000),

      at Object.query (tests/performance/api-load-testing.test.js:19:24)

  ‚óè API Load Testing and Performance ‚Ä∫ Response Time Benchmarks ‚Ä∫ stock data endpoints should meet performance targets

    TypeError: Cannot read properties of undefined (reading 'query')

      17 |
      18 |     // Setup test data for load testing
    > 19 |     await testDatabase.query(`
         |                        ^
      20 |       INSERT INTO stock_prices (symbol, price, change_amount, change_percent, volume)
      21 |       VALUES 
      22 |         ('AAPL', 189.45, 2.15, 1.15, 45000000),

      at Object.query (tests/performance/api-load-testing.test.js:19:24)

  ‚óè API Load Testing and Performance ‚Ä∫ Response Time Benchmarks ‚Ä∫ should maintain performance with large response payloads

    TypeError: Cannot read properties of undefined (reading 'query')

      17 |
      18 |     // Setup test data for load testing
    > 19 |     await testDatabase.query(`
         |                        ^
      20 |       INSERT INTO stock_prices (symbol, price, change_amount, change_percent, volume)
      21 |       VALUES 
      22 |         ('AAPL', 189.45, 2.15, 1.15, 45000000),

      at Object.query (tests/performance/api-load-testing.test.js:19:24)

  ‚óè API Load Testing and Performance ‚Ä∫ Rate Limiting and Throttling ‚Ä∫ should handle rapid successive requests appropriately

    TypeError: Cannot read properties of undefined (reading 'query')

      17 |
      18 |     // Setup test data for load testing
    > 19 |     await testDatabase.query(`
         |                        ^
      20 |       INSERT INTO stock_prices (symbol, price, change_amount, change_percent, volume)
      21 |       VALUES 
      22 |         ('AAPL', 189.45, 2.15, 1.15, 45000000),

      at Object.query (tests/performance/api-load-testing.test.js:19:24)

  ‚óè API Load Testing and Performance ‚Ä∫ Rate Limiting and Throttling ‚Ä∫ should recover from rate limiting gracefully

    TypeError: Cannot read properties of undefined (reading 'query')

      17 |
      18 |     // Setup test data for load testing
    > 19 |     await testDatabase.query(`
         |                        ^
      20 |       INSERT INTO stock_prices (symbol, price, change_amount, change_percent, volume)
      21 |       VALUES 
      22 |         ('AAPL', 189.45, 2.15, 1.15, 45000000),

      at Object.query (tests/performance/api-load-testing.test.js:19:24)

  ‚óè API Load Testing and Performance ‚Ä∫ Memory and Resource Usage ‚Ä∫ should maintain stable memory usage under load

    TypeError: Cannot read properties of undefined (reading 'query')

      17 |
      18 |     // Setup test data for load testing
    > 19 |     await testDatabase.query(`
         |                        ^
      20 |       INSERT INTO stock_prices (symbol, price, change_amount, change_percent, volume)
      21 |       VALUES 
      22 |         ('AAPL', 189.45, 2.15, 1.15, 45000000),

      at Object.query (tests/performance/api-load-testing.test.js:19:24)

  ‚óè API Load Testing and Performance ‚Ä∫ Memory and Resource Usage ‚Ä∫ should handle connection cleanup properly

    TypeError: Cannot read properties of undefined (reading 'query')

      17 |
      18 |     // Setup test data for load testing
    > 19 |     await testDatabase.query(`
         |                        ^
      20 |       INSERT INTO stock_prices (symbol, price, change_amount, change_percent, volume)
      21 |       VALUES 
      22 |         ('AAPL', 189.45, 2.15, 1.15, 45000000),

      at Object.query (tests/performance/api-load-testing.test.js:19:24)

  ‚óè API Load Testing and Performance ‚Ä∫ Database Performance Under Load ‚Ä∫ should handle concurrent database queries efficiently

    TypeError: Cannot read properties of undefined (reading 'query')

      17 |
      18 |     // Setup test data for load testing
    > 19 |     await testDatabase.query(`
         |                        ^
      20 |       INSERT INTO stock_prices (symbol, price, change_amount, change_percent, volume)
      21 |       VALUES 
      22 |         ('AAPL', 189.45, 2.15, 1.15, 45000000),

      at Object.query (tests/performance/api-load-testing.test.js:19:24)

  ‚óè API Load Testing and Performance ‚Ä∫ Database Performance Under Load ‚Ä∫ should maintain query performance with data growth

    TypeError: Cannot read properties of undefined (reading 'query')

      17 |
      18 |     // Setup test data for load testing
    > 19 |     await testDatabase.query(`
         |                        ^
      20 |       INSERT INTO stock_prices (symbol, price, change_amount, change_percent, volume)
      21 |       VALUES 
      22 |         ('AAPL', 189.45, 2.15, 1.15, 45000000),

      at Object.query (tests/performance/api-load-testing.test.js:19:24)

  ‚óè API Load Testing and Performance ‚Ä∫ Error Handling Performance ‚Ä∫ should handle errors efficiently without performance degradation

    TypeError: Cannot read properties of undefined (reading 'query')

      17 |
      18 |     // Setup test data for load testing
    > 19 |     await testDatabase.query(`
         |                        ^
      20 |       INSERT INTO stock_prices (symbol, price, change_amount, change_percent, volume)
      21 |       VALUES 
      22 |         ('AAPL', 189.45, 2.15, 1.15, 45000000),

      at Object.query (tests/performance/api-load-testing.test.js:19:24)

  ‚óè API Load Testing and Performance ‚Ä∫ Error Handling Performance ‚Ä∫ should handle authentication errors efficiently

    TypeError: Cannot read properties of undefined (reading 'query')

      17 |
      18 |     // Setup test data for load testing
    > 19 |     await testDatabase.query(`
         |                        ^
      20 |       INSERT INTO stock_prices (symbol, price, change_amount, change_percent, volume)
      21 |       VALUES 
      22 |         ('AAPL', 189.45, 2.15, 1.15, 45000000),

      at Object.query (tests/performance/api-load-testing.test.js:19:24)

  ‚óè API Load Testing and Performance ‚Ä∫ Performance Monitoring and Metrics ‚Ä∫ should track response time metrics

    TypeError: Cannot read properties of undefined (reading 'query')

      17 |
      18 |     // Setup test data for load testing
    > 19 |     await testDatabase.query(`
         |                        ^
      20 |       INSERT INTO stock_prices (symbol, price, change_amount, change_percent, volume)
      21 |       VALUES 
      22 |         ('AAPL', 189.45, 2.15, 1.15, 45000000),

      at Object.query (tests/performance/api-load-testing.test.js:19:24)

  ‚óè API Load Testing and Performance ‚Ä∫ Performance Monitoring and Metrics ‚Ä∫ should maintain consistent performance across test run

    TypeError: Cannot read properties of undefined (reading 'query')

      17 |
      18 |     // Setup test data for load testing
    > 19 |     await testDatabase.query(`
         |                        ^
      20 |       INSERT INTO stock_prices (symbol, price, change_amount, change_percent, volume)
      21 |       VALUES 
      22 |         ('AAPL', 189.45, 2.15, 1.15, 45000000),

      at Object.query (tests/performance/api-load-testing.test.js:19:24)

FAIL tests/unit/routes/trades.test.js
  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ Authentication ‚Ä∫ should handle route errors gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 401

      146 |
      147 |       // Should return 500 for database errors
    > 148 |       expect(response.status).toBe(500);
          |                               ^
      149 |       expect(response.body).toHaveProperty("success", false);
      150 |     });
      151 |   });

      at Object.toBe (tests/unit/routes/trades.test.js:148:31)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/history - Trade history ‚Ä∫ should return user trade history with pagination

    expected 200 "OK", got 401 "Unauthorized"

      180 |       query.mockResolvedValue({ rows: mockTrades });
      181 |
    > 182 |       const response = await request(app).get("/trades/history").expect(200);
          |                                                                  ^
      183 |
      184 |       expect(response.body).toHaveProperty("success", true);
      185 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/trades.test.js:182:66)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/history - Trade history ‚Ä∫ should handle date range filtering

    expected 200 "OK", got 401 "Unauthorized"

      202 |       const response = await request(app)
      203 |         .get("/trades/history?start_date=2024-01-01&end_date=2024-01-31")
    > 204 |         .expect(200);
          |          ^
      205 |
      206 |       expect(response.body.success).toBe(true);
      207 |       expect(query).toHaveBeenCalled();

      at Object.expect (tests/unit/routes/trades.test.js:204:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/history - Trade history ‚Ä∫ should filter by symbol

    expected 200 "OK", got 401 "Unauthorized"

      213 |       const response = await request(app)
      214 |         .get("/trades/history?symbol=AAPL")
    > 215 |         .expect(200);
          |          ^
      216 |
      217 |       expect(response.body.success).toBe(true);
      218 |       expect(query).toHaveBeenCalled();

      at Object.expect (tests/unit/routes/trades.test.js:215:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/history - Trade history ‚Ä∫ should support pagination parameters

    expected 200 "OK", got 401 "Unauthorized"

      224 |       const response = await request(app)
      225 |         .get("/trades/history?page=2&limit=25")
    > 226 |         .expect(200);
          |          ^
      227 |
      228 |       expect(response.body.success).toBe(true);
      229 |       expect(response.body.data.pagination).toHaveProperty("page", 2);

      at Object.expect (tests/unit/routes/trades.test.js:226:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/analytics - Trade analytics ‚Ä∫ should return trade performance analytics

    expected 200 "OK", got 401 "Unauthorized"

      249 |       query.mockResolvedValue({ rows: [mockAnalytics] });
      250 |
    > 251 |       const response = await request(app).get("/trades/analytics").expect(200);
          |                                                                    ^
      252 |
      253 |       expect(response.body).toHaveProperty("success", true);
      254 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/trades.test.js:251:68)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/analytics - Trade analytics ‚Ä∫ should handle time period filters

    expected 200 "OK", got 401 "Unauthorized"

      267 |       const response = await request(app)
      268 |         .get("/trades/analytics?period=30d")
    > 269 |         .expect(200);
          |          ^
      270 |
      271 |       expect(response.body.success).toBe(true);
      272 |       expect(query).toHaveBeenCalled();

      at Object.expect (tests/unit/routes/trades.test.js:269:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/analytics - Trade analytics ‚Ä∫ should include benchmark comparison

    expected 200 "OK", got 401 "Unauthorized"

      278 |       const response = await request(app)
      279 |         .get("/trades/analytics?benchmark=SPY")
    > 280 |         .expect(200);
          |          ^
      281 |
      282 |       expect(response.body.success).toBe(true);
      283 |       expect(query).toHaveBeenCalled();

      at Object.expect (tests/unit/routes/trades.test.js:280:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ POST /trades/import - Import trades ‚Ä∫ should import trades from CSV data

    expected 200 "OK", got 401 "Unauthorized"

      304 |         .field("format", "csv")
      305 |         .field("data", csvData)
    > 306 |         .expect(200);
          |          ^
      307 |
      308 |       expect(response.body).toHaveProperty("success", true);
      309 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/trades.test.js:306:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ POST /trades/import - Import trades ‚Ä∫ should validate required fields

    expected 400 "Bad Request", got 401 "Unauthorized"

      316 |         .post("/trades/import")
      317 |         .send({})
    > 318 |         .expect(400);
          |          ^
      319 |
      320 |       expect(response.body.success).toBe(false);
      321 |       expect(response.body).toHaveProperty("error");

      at Object.expect (tests/unit/routes/trades.test.js:318:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ POST /trades/import - Import trades ‚Ä∫ should handle duplicate trades

    expected 200 "OK", got 401 "Unauthorized"

      345 |         .post("/trades/import")
      346 |         .send(tradeData)
    > 347 |         .expect(200);
          |          ^
      348 |
      349 |       expect(response.body.success).toBe(true);
      350 |       expect(response.body.data).toHaveProperty("duplicates_skipped");

      at Object.expect (tests/unit/routes/trades.test.js:347:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ POST /trades/import - Import trades ‚Ä∫ should handle invalid data formats

    expected 400 "Bad Request", got 401 "Unauthorized"

      355 |         .post("/trades/import")
      356 |         .send({ format: "invalid", data: "bad data" })
    > 357 |         .expect(400);
          |          ^
      358 |
      359 |       expect(response.body.success).toBe(false);
      360 |       expect(response.body.error).toContain("format");

      at Object.expect (tests/unit/routes/trades.test.js:357:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/export - Export trades ‚Ä∫ should export trades in CSV format

    expected 200 "OK", got 401 "Unauthorized"

      378 |       const response = await request(app)
      379 |         .get("/trades/export?format=csv")
    > 380 |         .expect(200);
          |          ^
      381 |
      382 |       expect(response.body).toHaveProperty("success", true);
      383 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/trades.test.js:380:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/export - Export trades ‚Ä∫ should export trades in JSON format

    expected 200 "OK", got 401 "Unauthorized"

      401 |       const response = await request(app)
      402 |         .get("/trades/export?format=json")
    > 403 |         .expect(200);
          |          ^
      404 |
      405 |       expect(response.body.success).toBe(true);
      406 |       expect(response.body.data.format).toBe("json");

      at Object.expect (tests/unit/routes/trades.test.js:403:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/export - Export trades ‚Ä∫ should handle date range for export

    expected 200 "OK", got 401 "Unauthorized"

      415 |           "/trades/export?format=csv&start_date=2024-01-01&end_date=2024-01-31"
      416 |         )
    > 417 |         .expect(200);
          |          ^
      418 |
      419 |       expect(response.body.success).toBe(true);
      420 |       expect(query).toHaveBeenCalled();

      at Object.expect (tests/unit/routes/trades.test.js:417:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/brokers - Broker integration status ‚Ä∫ should return connected brokers status

    expected 200 "OK", got 401 "Unauthorized"

      445 |       query.mockResolvedValue({ rows: mockBrokers });
      446 |
    > 447 |       const response = await request(app).get("/trades/brokers").expect(200);
          |                                                                  ^
      448 |
      449 |       expect(response.body).toHaveProperty("success", true);
      450 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/trades.test.js:447:66)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ POST /trades/sync/:broker - Sync trades from broker ‚Ä∫ should sync trades from Alpaca

    expected 200 "OK", got 404 "Not Found"

      479 |         .post("/trades/sync/alpaca")
      480 |         .send({ start_date: "2024-01-01", end_date: "2024-01-15" })
    > 481 |         .expect(200);
          |          ^
      482 |
      483 |       expect(response.body).toHaveProperty("success", true);
      484 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/trades.test.js:481:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ POST /trades/sync/:broker - Sync trades from broker ‚Ä∫ should handle unsupported broker

    expected 400 "Bad Request", got 404 "Not Found"

      492 |         .post("/trades/sync/unsupported_broker")
      493 |         .send({ start_date: "2024-01-01" })
    > 494 |         .expect(400);
          |          ^
      495 |
      496 |       expect(response.body.success).toBe(false);
      497 |       expect(response.body.error).toContain("broker");

      at Object.expect (tests/unit/routes/trades.test.js:494:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ POST /trades/sync/:broker - Sync trades from broker ‚Ä∫ should validate date parameters

    expected 400 "Bad Request", got 404 "Not Found"

      502 |         .post("/trades/sync/alpaca")
      503 |         .send({ start_date: "invalid-date" })
    > 504 |         .expect(400);
          |          ^
      505 |
      506 |       expect(response.body.success).toBe(false);
      507 |       expect(response.body.error).toContain("date");

      at Object.expect (tests/unit/routes/trades.test.js:504:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/performance - Performance analysis ‚Ä∫ should return detailed performance metrics

    expected 200 "OK", got 401 "Unauthorized"

      531 |       const response = await request(app)
      532 |         .get("/trades/performance")
    > 533 |         .expect(200);
          |          ^
      534 |
      535 |       expect(response.body).toHaveProperty("success", true);
      536 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/trades.test.js:533:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/performance - Performance analysis ‚Ä∫ should include benchmark comparison

    expected 200 "OK", got 401 "Unauthorized"

      549 |       const response = await request(app)
      550 |         .get("/trades/performance?benchmark=SPY")
    > 551 |         .expect(200);
          |          ^
      552 |
      553 |       expect(response.body.success).toBe(true);
      554 |       if (response.body.data.benchmark) {

      at Object.expect (tests/unit/routes/trades.test.js:551:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/performance - Performance analysis ‚Ä∫ should support different time periods

    expected 200 "OK", got 401 "Unauthorized"

      563 |       const response = await request(app)
      564 |         .get("/trades/performance?period=1y")
    > 565 |         .expect(200);
          |          ^
      566 |
      567 |       expect(response.body.success).toBe(true);
      568 |       if (response.body.data.period_info) {

      at Object.expect (tests/unit/routes/trades.test.js:565:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/performance/attribution - Performance attribution ‚Ä∫ should return performance attribution analysis

    expected 200 "OK", got 404 "Not Found"

      594 |       const response = await request(app)
      595 |         .get("/trades/performance/attribution")
    > 596 |         .expect(200);
          |          ^
      597 |
      598 |       expect(response.body).toHaveProperty("success", true);
      599 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/trades.test.js:596:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/stats - Trade statistics ‚Ä∫ should return comprehensive trade statistics

    expected 200 "OK", got 401 "Unauthorized"

      628 |       query.mockResolvedValue({ rows: [mockStats] });
      629 |
    > 630 |       const response = await request(app).get("/trades/stats").expect(200);
          |                                                                ^
      631 |
      632 |       expect(response.body).toHaveProperty("success", true);
      633 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/trades.test.js:630:64)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/stats - Trade statistics ‚Ä∫ should filter stats by date range

    expected 200 "OK", got 401 "Unauthorized"

      646 |       const response = await request(app)
      647 |         .get("/trades/stats?start_date=2024-01-01&end_date=2024-01-31")
    > 648 |         .expect(200);
          |          ^
      649 |
      650 |       expect(response.body.success).toBe(true);
      651 |       expect(query).toHaveBeenCalled();

      at Object.expect (tests/unit/routes/trades.test.js:648:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ GET /trades/stats - Trade statistics ‚Ä∫ should group stats by time period

    expected 200 "OK", got 401 "Unauthorized"

      657 |       const response = await request(app)
      658 |         .get("/trades/stats?group_by=month")
    > 659 |         .expect(200);
          |          ^
      660 |
      661 |       expect(response.body.success).toBe(true);
      662 |       expect(query).toHaveBeenCalled();

      at Object.expect (tests/unit/routes/trades.test.js:659:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ POST /trades/validate - Trade validation ‚Ä∫ should validate trade data before import

    expected 200 "OK", got 404 "Not Found"

      681 |         .post("/trades/validate")
      682 |         .send({ trades: [tradeData] })
    > 683 |         .expect(200);
          |          ^
      684 |
      685 |       expect(response.body).toHaveProperty("success", true);
      686 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/trades.test.js:683:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ POST /trades/validate - Trade validation ‚Ä∫ should identify invalid trade data

    expected 200 "OK", got 404 "Not Found"

      702 |         .post("/trades/validate")
      703 |         .send({ trades: [invalidTrade] })
    > 704 |         .expect(200);
          |          ^
      705 |
      706 |       expect(response.body.success).toBe(true);
      707 |       expect(response.body.data.invalid_trades.length).toBeGreaterThan(0);

      at Object.expect (tests/unit/routes/trades.test.js:704:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ POST /trades/search - Advanced trade search ‚Ä∫ should search trades by multiple criteria

    expected 200 "OK", got 404 "Not Found"

      734 |         .post("/trades/search")
      735 |         .send(searchCriteria)
    > 736 |         .expect(200);
          |          ^
      737 |
      738 |       expect(response.body).toHaveProperty("success", true);
      739 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/trades.test.js:736:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ POST /trades/search - Advanced trade search ‚Ä∫ should handle empty search criteria

    expected 400 "Bad Request", got 404 "Not Found"

      747 |         .post("/trades/search")
      748 |         .send({})
    > 749 |         .expect(400);
          |          ^
      750 |
      751 |       expect(response.body.success).toBe(false);
      752 |       expect(response.body.error).toContain("criteria");

      at Object.expect (tests/unit/routes/trades.test.js:749:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ Error handling ‚Ä∫ should handle database connection errors

    expected 500 "Internal Server Error", got 401 "Unauthorized"

      762 |       query.mockRejectedValue(new Error("Connection timeout"));
      763 |
    > 764 |       const response = await request(app).get("/trades/history").expect(500);
          |                                                                  ^
      765 |
      766 |       expect(response.body).toHaveProperty("success", false);
      767 |       expect(response.body).toHaveProperty("error");

      at Object.expect (tests/unit/routes/trades.test.js:764:66)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ Error handling ‚Ä∫ should handle transaction rollback on import errors

    expected 500 "Internal Server Error", got 401 "Unauthorized"

      774 |         .post("/trades/import")
      775 |         .send({ format: "json", trades: [] })
    > 776 |         .expect(500);
          |          ^
      777 |
      778 |       expect(response.body.success).toBe(false);
      779 |       expect(response.body.error).toContain("import");

      at Object.expect (tests/unit/routes/trades.test.js:776:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ Error handling ‚Ä∫ should handle malformed request data

    expected 400 "Bad Request", got 401 "Unauthorized"

      784 |         .post("/trades/import")
      785 |         .send("invalid json data")
    > 786 |         .expect(400);
          |          ^
      787 |
      788 |       expect(response.body).toHaveProperty("error");
      789 |     });

      at Object.expect (tests/unit/routes/trades.test.js:786:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ Error handling ‚Ä∫ should handle various error scenarios

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 401

      809 |
      810 |       // Should return 500 for database errors
    > 811 |       expect(response.status).toBe(500);
          |                               ^
      812 |       expect(response.body).toHaveProperty("success", false);
      813 |     });
      814 |

      at Object.toBe (tests/unit/routes/trades.test.js:811:31)

  ‚óè Trades Routes - Testing Your Actual Site ‚Ä∫ Error handling ‚Ä∫ should validate request parameters

    expected one of "200, 400", got 401 "Unauthorized"

      816 |       const response = await request(app)
      817 |         .get("/trades/history?page=invalid&limit=abc")
    > 818 |         .expect([200, 400]); // May succeed with defaults or return validation error
          |          ^
      819 |
      820 |       expect(response.body).toHaveProperty("success");
      821 |     });

      at Object.expect (tests/unit/routes/trades.test.js:818:10)
      ----
      at Test._assertStatusArray (node_modules/supertest/lib/test.js:268:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

FAIL tests/unit/routes/dividend.test.js
  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ GET /api/dividend/history/:symbol ‚Ä∫ should handle errors in dividend history gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: "Console error"
    Received: undefined

      86 |       expect(response.body.success).toBe(false);
      87 |       expect(response.body.error).toBe("Failed to fetch dividend history");
    > 88 |       expect(response.body.message).toBe("Console error");
         |                                     ^
      89 |
      90 |       // Restore console.log
      91 |       console.log = originalConsoleLog;

      at Object.toBe (tests/unit/routes/dividend.test.js:88:37)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ GET /api/dividend/calendar ‚Ä∫ should get dividend calendar with valid database data

    expected 200 "OK", got 500 "Internal Server Error"

      126 |       const response = await request(app)
      127 |         .get("/api/dividend/calendar")
    > 128 |         .expect(200);
          |          ^
      129 |
      130 |       expect(response.body.success).toBe(true);
      131 |       expect(response.body.data.dividend_calendar).toHaveLength(2);

      at Object.expect (tests/unit/routes/dividend.test.js:128:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ GET /api/dividend/calendar ‚Ä∫ should handle empty database results and generate sample data

    expected 200 "OK", got 500 "Internal Server Error"

      148 |       const response = await request(app)
      149 |         .get("/api/dividend/calendar")
    > 150 |         .expect(200);
          |          ^
      151 |
      152 |       expect(response.body.success).toBe(true);
      153 |       expect(response.body.data.dividend_calendar).toBeDefined();

      at Object.expect (tests/unit/routes/dividend.test.js:150:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ GET /api/dividend/calendar ‚Ä∫ should handle database connection failures gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: "Database connection failed"
    Received: "Console error"

      166 |       expect(response.body.success).toBe(false);
      167 |       expect(response.body.error).toBe("Failed to fetch dividend calendar");
    > 168 |       expect(response.body.message).toBe("Database connection failed");
          |                                     ^
      169 |     });
      170 |
      171 |     test("should handle query parameters correctly", async () => {

      at Object.toBe (tests/unit/routes/dividend.test.js:168:37)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ GET /api/dividend/calendar ‚Ä∫ should handle query parameters correctly

    expected 200 "OK", got 500 "Internal Server Error"

      176 |           "/api/dividend/calendar?days=7&symbol=AAPL&min_yield=2.0&max_yield=5.0&limit=25&sort_by=yield"
      177 |         )
    > 178 |         .expect(200);
          |          ^
      179 |
      180 |       expect(response.body.data.filters).toMatchObject({
      181 |         days: 7,

      at Object.expect (tests/unit/routes/dividend.test.js:178:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ GET /api/dividend/calendar ‚Ä∫ should handle sorting options correctly

    expected 200 "OK", got 500 "Internal Server Error"

      192 |       const response = await request(app)
      193 |         .get("/api/dividend/calendar?sort_by=amount")
    > 194 |         .expect(200);
          |          ^
      195 |
      196 |       expect(response.body.success).toBe(true);
      197 |       expect(response.body.data.filters.sort_by).toBe("amount");

      at Object.expect (tests/unit/routes/dividend.test.js:194:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ GET /api/dividend/calendar ‚Ä∫ should handle invalid sorting options with fallback

    expected 200 "OK", got 500 "Internal Server Error"

      204 |       const response = await request(app)
      205 |         .get("/api/dividend/calendar?sort_by=invalid")
    > 206 |         .expect(200);
          |          ^
      207 |
      208 |       expect(response.body.success).toBe(true);
      209 |       expect(response.body.data.filters.sort_by).toBe("invalid");

      at Object.expect (tests/unit/routes/dividend.test.js:206:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ GET /api/dividend/calendar ‚Ä∫ should calculate dividend statistics correctly

    expected 200 "OK", got 500 "Internal Server Error"

      243 |       const response = await request(app)
      244 |         .get("/api/dividend/calendar")
    > 245 |         .expect(200);
          |          ^
      246 |
      247 |       expect(response.body.data.summary.dividend_stats).toMatchObject({
      248 |         avg_yield: 3.0,

      at Object.expect (tests/unit/routes/dividend.test.js:245:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ GET /api/dividend/calendar ‚Ä∫ should handle null database results gracefully

    expected 501 "Not Implemented", got 500 "Internal Server Error"

      259 |       const response = await request(app)
      260 |         .get("/api/dividend/calendar")
    > 261 |         .expect(501);
          |          ^
      262 |
      263 |       expect(response.body.success).toBe(false);
      264 |       expect(response.body.error).toBe("Dividend calendar not implemented");

      at Object.expect (tests/unit/routes/dividend.test.js:261:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ GET /api/dividend/calendar ‚Ä∫ should handle malformed database results

    expected 501 "Not Implemented", got 500 "Internal Server Error"

      270 |       const response = await request(app)
      271 |         .get("/api/dividend/calendar")
    > 272 |         .expect(501);
          |          ^
      273 |
      274 |       expect(response.body.success).toBe(false);
      275 |       expect(response.body.error).toBe("Dividend calendar not implemented");

      at Object.expect (tests/unit/routes/dividend.test.js:272:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ GET /api/dividend/calendar ‚Ä∫ should handle string dividend amounts and yields correctly

    expected 200 "OK", got 500 "Internal Server Error"

      296 |       const response = await request(app)
      297 |         .get("/api/dividend/calendar")
    > 298 |         .expect(200);
          |          ^
      299 |
      300 |       expect(response.body.data.dividend_calendar[0].dividend_amount).toBe(
      301 |         0.24

      at Object.expect (tests/unit/routes/dividend.test.js:298:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ GET /api/dividend/calendar ‚Ä∫ should handle error in dividend calendar

    expected 400 "Bad Request", got 500 "Internal Server Error"

      308 |       const response = await request(app)
      309 |         .get("/api/dividend/calendar?days_ahead=invalid_number")
    > 310 |         .expect(400);
          |          ^
      311 |
      312 |       expect(response.body.success).toBe(false);
      313 |       expect(response.body.error).toBe("Invalid days_ahead parameter");

      at Object.expect (tests/unit/routes/dividend.test.js:310:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ Edge Cases and Error Handling ‚Ä∫ should handle very long symbol names

    expected 501 "Not Implemented", got 500 "Internal Server Error"

      322 |       const response = await request(app)
      323 |         .get("/api/dividend/history/VERYLONGSYMBOLNAME123456")
    > 324 |         .expect(501);
          |          ^
      325 |
      326 |       expect(response.body.symbol).toBe("VERYLONGSYMBOLNAME123456");
      327 |       expect(response.body.success).toBe(false);

      at Object.expect (tests/unit/routes/dividend.test.js:324:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ Edge Cases and Error Handling ‚Ä∫ should handle symbols with special characters

    expected 501 "Not Implemented", got 500 "Internal Server Error"

      331 |       const response = await request(app)
      332 |         .get("/api/dividend/history/TEST@123")
    > 333 |         .expect(501);
          |          ^
      334 |
      335 |       expect(response.body.symbol).toBe("TEST@123");
      336 |       expect(response.body.error).toBe("Dividend history not implemented");

      at Object.expect (tests/unit/routes/dividend.test.js:333:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ Edge Cases and Error Handling ‚Ä∫ should handle extreme query parameters gracefully

    expected 501 "Not Implemented", got 500 "Internal Server Error"

      344 |           "/api/dividend/calendar?days=99999&limit=99999&min_yield=-100&max_yield=100"
      345 |         )
    > 346 |         .expect(501);
          |          ^
      347 |
      348 |       expect(response.body.filters.days).toBe(99999);
      349 |       expect(mockQuery).toHaveBeenCalledWith(

      at Object.expect (tests/unit/routes/dividend.test.js:346:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ Edge Cases and Error Handling ‚Ä∫ should handle non-numeric parameters correctly

    expected 501 "Not Implemented", got 500 "Internal Server Error"

      358 |       const response = await request(app)
      359 |         .get("/api/dividend/calendar?days=invalid&limit=abc&min_yield=xyz")
    > 360 |         .expect(501);
          |          ^
      361 |
      362 |       // The route returns 501 and the filters object should contain parsed days (NaN for 'invalid')
      363 |       expect(response.body.filters.days).toBeNaN();

      at Object.expect (tests/unit/routes/dividend.test.js:360:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ Edge Cases and Error Handling ‚Ä∫ should handle empty query parameters

    expected 501 "Not Implemented", got 500 "Internal Server Error"

      373 |       await request(app)
      374 |         .get("/api/dividend/calendar?symbol=&days=&limit=")
    > 375 |         .expect(501);
          |          ^
      376 |
      377 |       // Empty symbol should be processed but the query should not include symbol filter
      378 |       expect(mockQuery).toHaveBeenCalledWith(

      at Object.expect (tests/unit/routes/dividend.test.js:375:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ Edge Cases and Error Handling ‚Ä∫ should handle database timeout errors

    expected 501 "Not Implemented", got 500 "Internal Server Error"

      387 |       const response = await request(app)
      388 |         .get("/api/dividend/calendar")
    > 389 |         .expect(501);
          |          ^
      390 |
      391 |       expect(response.body.success).toBe(false);
      392 |       expect(response.body.error).toBe("Dividend calendar not implemented");

      at Object.expect (tests/unit/routes/dividend.test.js:389:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ Edge Cases and Error Handling ‚Ä∫ should handle SQL injection attempts safely

    expected 501 "Not Implemented", got 500 "Internal Server Error"

      400 |           "/api/dividend/calendar?symbol=AAPL'; DROP TABLE dividend_calendar; --"
      401 |         )
    > 402 |         .expect(501);
          |          ^
      403 |
      404 |       // Should be safely parameterized
      405 |       expect(mockQuery).toHaveBeenCalledWith(

      at Object.expect (tests/unit/routes/dividend.test.js:402:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ Performance Testing ‚Ä∫ should handle concurrent requests efficiently

    expect(received).toBe(expected) // Object.is equality

    Expected: 501
    Received: 500

      420 |
      421 |       responses.forEach((response, index) => {
    > 422 |         expect(response.status).toBe(501);
          |                                 ^
      423 |         expect(response.body.symbol).toBe(`STOCK${index}`);
      424 |         expect(response.body.error).toBe("Dividend history not implemented");
      425 |       });

      at toBe (tests/unit/routes/dividend.test.js:422:33)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/unit/routes/dividend.test.js:421:17)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ Performance Testing ‚Ä∫ should handle large dividend datasets efficiently

    expected 200 "OK", got 500 "Internal Server Error"

      445 |       const response = await request(app)
      446 |         .get("/api/dividend/calendar")
    > 447 |         .expect(200);
          |          ^
      448 |       const endTime = Date.now();
      449 |
      450 |       expect(response.body.data.dividend_calendar).toHaveLength(1000);

      at Object.expect (tests/unit/routes/dividend.test.js:447:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ Response Format Validation ‚Ä∫ should return consistent JSON response format

    expected 501 "Not Implemented", got 500 "Internal Server Error"

      459 |       const response = await request(app)
      460 |         .get("/api/dividend/history/AAPL")
    > 461 |         .expect(501);
          |          ^
      462 |
      463 |       expect(response.headers["content-type"]).toMatch(/json/);
      464 |       expect(typeof response.body).toBe("object");

      at Object.expect (tests/unit/routes/dividend.test.js:461:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ Response Format Validation ‚Ä∫ should include timestamp in ISO format

    expected 501 "Not Implemented", got 500 "Internal Server Error"

      470 |       const response = await request(app)
      471 |         .get("/api/dividend/history/AAPL")
    > 472 |         .expect(501);
          |          ^
      473 |
      474 |       expect(response.body.timestamp).toBeDefined();
      475 |       expect(new Date(response.body.timestamp)).toBeInstanceOf(Date);

      at Object.expect (tests/unit/routes/dividend.test.js:472:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ Response Format Validation ‚Ä∫ should maintain consistent error response format

    expect(received).toBeDefined()

    Received: undefined

      493 |       expect(response.body.error).toBeDefined();
      494 |       expect(typeof response.body.error).toBe("string");
    > 495 |       expect(response.body.message).toBeDefined();
          |                                     ^
      496 |
      497 |       // Restore console.log
      498 |       console.log = originalConsoleLog;

      at Object.toBeDefined (tests/unit/routes/dividend.test.js:495:37)

  ‚óè Dividend Route - Comprehensive Unit Tests ‚Ä∫ Response Format Validation ‚Ä∫ should include proper metadata in calendar responses

    expected 200 "OK", got 500 "Internal Server Error"

      519 |       const response = await request(app)
      520 |         .get("/api/dividend/calendar")
    > 521 |         .expect(200);
          |          ^
      522 |
      523 |       expect(response.body.data).toBeDefined();
      524 |       expect(response.body.data.filters).toBeDefined();

      at Object.expect (tests/unit/routes/dividend.test.js:521:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

FAIL tests/unit/routes/analysts.test.js
  ‚óè Analysts Route - Comprehensive Unit Tests ‚Ä∫ GET /api/analysts/upgrades ‚Ä∫ should get paginated analyst upgrades with valid data

    expected 200 "OK", got 500 "Internal Server Error"

      81 |       const response = await request(app)
      82 |         .get("/api/analysts/upgrades")
    > 83 |         .expect(200);
         |          ^
      84 |
      85 |       expect(response.body.data).toHaveLength(1);
      86 |       expect(response.body.data[0].symbol).toBe("AAPL");

      at Object.expect (tests/unit/routes/analysts.test.js:83:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Analysts Route - Comprehensive Unit Tests ‚Ä∫ GET /api/analysts/upgrades ‚Ä∫ should handle pagination parameters correctly

    expected 200 "OK", got 500 "Internal Server Error"

      107 |       const response = await request(app)
      108 |         .get("/api/analysts/upgrades?page=3&limit=10")
    > 109 |         .expect(200);
          |          ^
      110 |
      111 |       expect(mockQuery).toHaveBeenCalledWith(
      112 |         expect.stringContaining("LIMIT $1 OFFSET $2"),

      at Object.expect (tests/unit/routes/analysts.test.js:109:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Analysts Route - Comprehensive Unit Tests ‚Ä∫ GET /api/analysts/upgrades ‚Ä∫ should handle database unavailability gracefully

    expected 503 "Service Unavailable", got 500 "Internal Server Error"

      130 |       const response = await request(app)
      131 |         .get("/api/analysts/upgrades")
    > 132 |         .expect(503);
          |          ^
      133 |
      134 |       expect(response.body.message).toContain("database connection issue");
      135 |       expect(response.body.data).toEqual([]);

      at Object.expect (tests/unit/routes/analysts.test.js:132:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Analysts Route - Comprehensive Unit Tests ‚Ä∫ GET /api/analysts/:ticker/earnings-estimates ‚Ä∫ should get earnings estimates for valid ticker

    expected 200 "OK", got 500 "Internal Server Error"

      165 |       const response = await request(app)
      166 |         .get("/api/analysts/AAPL/earnings-estimates")
    > 167 |         .expect(200);
          |          ^
      168 |
      169 |       expect(response.body.ticker).toBe("AAPL");
      170 |       expect(response.body.estimates).toHaveLength(1);

      at Object.expect (tests/unit/routes/analysts.test.js:167:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Analysts Route - Comprehensive Unit Tests ‚Ä∫ GET /api/analysts/:ticker/earnings-estimates ‚Ä∫ should handle case insensitive ticker symbols

    expected 200 "OK", got 500 "Internal Server Error"

      183 |       await request(app)
      184 |         .get("/api/analysts/aapl/earnings-estimates")
    > 185 |         .expect(200);
          |          ^
      186 |
      187 |       expect(mockQuery).toHaveBeenCalledWith(
      188 |         expect.stringContaining("UPPER($1)"),

      at Object.expect (tests/unit/routes/analysts.test.js:185:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Analysts Route - Comprehensive Unit Tests ‚Ä∫ GET /api/analysts/:ticker/revenue-estimates ‚Ä∫ should get revenue estimates for valid ticker

    expect(received).toBe(expected) // Object.is equality

    Expected: 119300000000
    Received: undefined

      223 |       expect(response.body.ticker).toBe("AAPL");
      224 |       expect(response.body.estimates).toHaveLength(1);
    > 225 |       expect(response.body.estimates[0].actual).toBe(119300000000);
          |                                                 ^
      226 |       expect(mockQuery).toHaveBeenCalledWith(
      227 |         expect.stringContaining("er.revenue as actual"),
      228 |         ["AAPL"]

      at Object.toBe (tests/unit/routes/analysts.test.js:225:49)

  ‚óè Analysts Route - Comprehensive Unit Tests ‚Ä∫ GET /api/analysts/:ticker/earnings-history ‚Ä∫ should get earnings history for valid ticker

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 1
    Received array:  [{"total": "25"}]

      259 |
      260 |       expect(response.body.ticker).toBe("AAPL");
    > 261 |       expect(response.body.history).toHaveLength(2);
          |                                     ^
      262 |       expect(response.body.history[0].quarter).toBe("Q4 2023");
      263 |       expect(mockQuery).toHaveBeenCalledWith(
      264 |         expect.stringContaining("LIMIT 12"),

      at Object.toHaveLength (tests/unit/routes/analysts.test.js:261:37)

  ‚óè Analysts Route - Comprehensive Unit Tests ‚Ä∫ GET /api/analysts/:ticker/eps-revisions ‚Ä∫ should get EPS revisions for valid ticker

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 0
    Received array:  []

      289 |
      290 |       expect(response.body.ticker).toBe("AAPL");
    > 291 |       expect(response.body.data).toHaveLength(1);
          |                                  ^
      292 |       expect(response.body.data[0].up_last30days).toBe(3);
      293 |       expect(response.body.metadata.count).toBe(1);
      294 |       expect(response.body.metadata.timestamp).toBeDefined();

      at Object.toHaveLength (tests/unit/routes/analysts.test.js:291:34)

  ‚óè Analysts Route - Comprehensive Unit Tests ‚Ä∫ GET /api/analysts/:ticker/eps-revisions ‚Ä∫ should handle database errors for EPS revisions

    expected 500 "Internal Server Error", got 200 "OK"

      300 |       const response = await request(app)
      301 |         .get("/api/analysts/AAPL/eps-revisions")
    > 302 |         .expect(500);
          |          ^
      303 |
      304 |       expect(response.body.success).toBe(false);
      305 |       expect(response.body.error).toContain("Failed to fetch EPS revisions");

      at Object.expect (tests/unit/routes/analysts.test.js:302:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Analysts Route - Comprehensive Unit Tests ‚Ä∫ GET /api/analysts/:ticker/eps-trend ‚Ä∫ should get EPS trend for valid ticker

    expected 200 "OK", got 500 "Internal Server Error"

      327 |       const response = await request(app)
      328 |         .get("/api/analysts/AAPL/eps-trend")
    > 329 |         .expect(200);
          |          ^
      330 |
      331 |       expect(response.body.ticker).toBe("AAPL");
      332 |       expect(response.body.data).toHaveLength(1);

      at Object.expect (tests/unit/routes/analysts.test.js:329:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Analysts Route - Comprehensive Unit Tests ‚Ä∫ Edge Cases and Error Handling ‚Ä∫ should handle invalid ticker symbols gracefully

    expected 200 "OK", got 500 "Internal Server Error"

      777 |       const response = await request(app)
      778 |         .get("/api/analysts/INVALID123/earnings-estimates")
    > 779 |         .expect(200);
          |          ^
      780 |
      781 |       expect(response.body.ticker).toBe("INVALID123");
      782 |       expect(response.body.estimates).toHaveLength(0);

      at Object.expect (tests/unit/routes/analysts.test.js:779:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Analysts Route - Comprehensive Unit Tests ‚Ä∫ Edge Cases and Error Handling ‚Ä∫ should handle special characters in ticker symbols

    expected 200 "OK", got 500 "Internal Server Error"

      788 |       await request(app)
      789 |         .get("/api/analysts/BRK.B/earnings-estimates")
    > 790 |         .expect(200);
          |          ^
      791 |
      792 |       expect(mockQuery).toHaveBeenCalledWith(
      793 |         expect.stringContaining("UPPER($1)"),

      at Object.expect (tests/unit/routes/analysts.test.js:790:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Analysts Route - Comprehensive Unit Tests ‚Ä∫ Edge Cases and Error Handling ‚Ä∫ should handle very large page numbers

    expected 200 "OK", got 500 "Internal Server Error"

      806 |       const response = await request(app)
      807 |         .get("/api/analysts/upgrades?page=999999&limit=25")
    > 808 |         .expect(200);
          |          ^
      809 |
      810 |       expect(response.body.pagination.page).toBe(999999);
      811 |       expect(response.body.pagination.hasNext).toBe(false);

      at Object.expect (tests/unit/routes/analysts.test.js:808:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Analysts Route - Comprehensive Unit Tests ‚Ä∫ Edge Cases and Error Handling ‚Ä∫ should handle zero or negative page numbers

    expected 200 "OK", got 500 "Internal Server Error"

      823 |       const response = await request(app)
      824 |         .get("/api/analysts/upgrades?page=0&limit=25")
    > 825 |         .expect(200);
          |          ^
      826 |
      827 |       expect(response.body.pagination.page).toBe(1);
      828 |     });

      at Object.expect (tests/unit/routes/analysts.test.js:825:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Analysts Route - Comprehensive Unit Tests ‚Ä∫ Edge Cases and Error Handling ‚Ä∫ should handle null database results gracefully

    expected 200 "OK", got 500 "Internal Server Error"

      833 |       const response = await request(app)
      834 |         .get("/api/analysts/AAPL/earnings-estimates")
    > 835 |         .expect(200);
          |          ^
      836 |
      837 |       expect(response.body.ticker).toBe("AAPL");
      838 |       expect(Array.isArray(response.body.estimates)).toBe(true);

      at Object.expect (tests/unit/routes/analysts.test.js:835:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Analysts Route - Comprehensive Unit Tests ‚Ä∫ Performance Testing ‚Ä∫ should handle multiple concurrent requests

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      852 |
      853 |       responses.forEach((response, index) => {
    > 854 |         expect(response.status).toBe(200);
          |                                 ^
      855 |         expect(response.body.ticker).toBe(`AAPL${index}`);
      856 |       });
      857 |     });

      at toBe (tests/unit/routes/analysts.test.js:854:33)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/unit/routes/analysts.test.js:853:17)

  ‚óè Analysts Route - Comprehensive Unit Tests ‚Ä∫ Performance Testing ‚Ä∫ should handle large dataset responses efficiently

    expected 200 "OK", got 500 "Internal Server Error"

      872 |       const response = await request(app)
      873 |         .get("/api/analysts/AAPL/earnings-estimates")
    > 874 |         .expect(200);
          |          ^
      875 |       const endTime = Date.now();
      876 |
      877 |       expect(response.body.estimates).toHaveLength(1000);

      at Object.expect (tests/unit/routes/analysts.test.js:874:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

FAIL tests/unit/routes/commodities.test.js
  ‚óè Commodities Routes ‚Ä∫ GET /api/commodities/ ‚Ä∫ should return commodities API overview

    expect(received).toEqual(expected) // deep equality

    - Expected  - 0
    + Received  + 1

    @@ -10,6 +10,7 @@
          "status": "operational",
          "system": "Commodities API",
          "timestamp": Any<String>,
          "version": "1.0.0",
        },
    +   "success": true,
      }

      50 |       const response = await request(app).get("/api/commodities/").expect(200);
      51 |
    > 52 |       expect(response.body).toEqual({
         |                             ^
      53 |         data: {
      54 |           system: "Commodities API",
      55 |           version: "1.0.0",

      at Object.toEqual (tests/unit/routes/commodities.test.js:52:29)

  ‚óè Commodities Routes ‚Ä∫ GET /api/commodities/news ‚Ä∫ should include required news fields

    expect(received).toHaveProperty(path)

    Expected path: "summary"
    Received path: []

    Received value: {"category": "commodities", "id": 7, "publishedAt": "2025-09-22T04:00:05.183Z", "source": "WSJ", "symbol": "GLD", "title": "Gold Prices Surge on Economic Uncertainty", "url": "https://example.com/4"}

      438 |         const newsItem = response.body.data[0];
      439 |         expect(newsItem).toHaveProperty("title");
    > 440 |         expect(newsItem).toHaveProperty("summary");
          |                          ^
      441 |       }
      442 |     });
      443 |

      at Object.toHaveProperty (tests/unit/routes/commodities.test.js:440:26)

  ‚óè Commodities Routes ‚Ä∫ Edge Cases and Error Handling ‚Ä∫ should handle negative limit values

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      570 |
      571 |       // Handle different possible status codes
    > 572 |       expect(response.status).toBe(200);
          |                               ^
      573 |
      574 |       if (response.status === 200) {
      575 |         // Should use default limit

      at Object.toBe (tests/unit/routes/commodities.test.js:572:31)

FAIL tests/integration/utils/database.integration.test.js
  ‚óè Database Real Site Functionality Tests ‚Ä∫ Real Database Query Operations ‚Ä∫ should handle parameterized queries correctly

    error: column "name" of relation "stock_symbols" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:62:7)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Real Database Query Operations ‚Ä∫ should prevent SQL injection attacks with parameterized queries

    expect(received).toBeGreaterThan(expected)

    Matcher error: received value must be a number or bigint

    Received has type:  string
    Received has value: "4153"

      93 |         "SELECT COUNT(*) as count FROM stock_symbols"
      94 |       );
    > 95 |       expect(tableCheck.rows[0].count).toBeGreaterThan(0);
         |                                        ^
      96 |     });
      97 |
      98 |     test("should handle database errors gracefully", async () => {

      at Object.toBeGreaterThan (tests/integration/utils/database.integration.test.js:95:40)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Real Database Query Operations ‚Ä∫ should handle database errors gracefully

    error: relation "non_existent_table_12345" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:100:22)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Real Database Query Operations ‚Ä∫ should handle syntax errors gracefully

    error: syntax error at or near "INVALID"

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:106:22)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Real Database Query Operations ‚Ä∫ should work with complex JOIN queries on real tables

    error: column "symbol" of relation "market_data" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:114:7)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Real Database Query Operations ‚Ä∫ should handle aggregate functions and calculations

    error: column "symbol" of relation "market_data" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:145:9)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Database Initialization and Schema ‚Ä∫ should verify database connection and schema integrity

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: {"connections": 1, "idle": 1, "status": "healthy", "timestamp": 2025-09-23T16:32:12.600Z, "version": "PostgreSQL 16.10 (Ubuntu 16.10-0ubuntu0.24.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0, 64-bit", "waiting": 0}

      210 |       const healthResult = await healthCheck();
      211 |
    > 212 |       expect(healthResult).toBe(true);
          |                            ^
      213 |
      214 |       // Test actual schema by checking table structure
      215 |       const columnsResult = await query(`

      at Object.toBe (tests/integration/utils/database.integration.test.js:212:28)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Database Initialization and Schema ‚Ä∫ should handle database configuration from environment variables

    TypeError: getDbConfig is not a function

      229 |
      230 |     test("should handle database configuration from environment variables", async () => {
    > 231 |       const config = await getDbConfig();
          |                            ^
      232 |
      233 |       expect(config).toBeDefined();
      234 |       expect(config.host).toBe("localhost");

      at Object.getDbConfig (tests/integration/utils/database.integration.test.js:231:28)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Real Database Schema Operations ‚Ä∫ should initialize and verify schema tables

    TypeError: initializeSchema is not a function

      241 |   describe("Real Database Schema Operations", () => {
      242 |     test("should initialize and verify schema tables", async () => {
    > 243 |       const result = await initializeSchema();
          |                            ^
      244 |
      245 |       expect(result).toBe(true);
      246 |

      at Object.initializeSchema (tests/integration/utils/database.integration.test.js:243:28)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Real Database Schema Operations ‚Ä∫ should handle table creation and constraints

    error: value too long for type character varying(10)

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:274:28)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Real Database Schema Operations ‚Ä∫ should handle unique constraints properly

    error: column "name" of relation "stock_symbols" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:287:27)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Connection Pool Management ‚Ä∫ should perform accurate health checks

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: {"connections": 1, "idle": 1, "status": "healthy", "timestamp": 2025-09-23T16:32:12.626Z, "version": "PostgreSQL 16.10 (Ubuntu 16.10-0ubuntu0.24.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0, 64-bit", "waiting": 0}

      336 |       const isHealthy = await healthCheck();
      337 |
    > 338 |       expect(isHealthy).toBe(true);
          |                         ^
      339 |
      340 |       // Verify health check actually tests database responsiveness
      341 |       const startTime = Date.now();

      at Object.toBe (tests/integration/utils/database.integration.test.js:338:25)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Transaction Support ‚Ä∫ should execute transactions with commit

    error: column "name" of relation "stock_symbols" does not exist

      382 |       const result = await transaction(async (client) => {
      383 |         // Insert test data within transaction
    > 384 |         await client.query(
          |         ^
      385 |           "INSERT INTO stock_symbols (symbol, name, sector) VALUES ($1, $2, $3) ON CONFLICT (symbol) DO UPDATE SET name = $2",
      386 |           [`TXN${testId}`, "Transaction Test Co", "Technology"]
      387 |         );

      at node_modules/pg/lib/client.js:545:17
      at tests/integration/utils/database.integration.test.js:384:9
      at transaction (utils/database.js:1457:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:382:22)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Transaction Support ‚Ä∫ should rollback transactions on error

    error: column "symbol" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:438:29)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Transaction Support ‚Ä∫ should handle nested transaction operations

    error: column "name" of relation "stock_symbols" does not exist

      449 |       const result = await transaction(async (client) => {
      450 |         // Multiple operations that should all succeed or fail together
    > 451 |         const symbolInsert = await client.query(
          |                              ^
      452 |           "INSERT INTO stock_symbols (symbol, name, sector, market_cap) VALUES ($1, $2, $3, $4) ON CONFLICT (symbol) DO UPDATE SET name = $2 RETURNING symbol",
      453 |           [`NEST${testId}`, "Nested Transaction Co", "Finance", 5000000000]
      454 |         );

      at node_modules/pg/lib/client.js:545:17
      at tests/integration/utils/database.integration.test.js:451:30
      at transaction (utils/database.js:1457:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:449:22)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Real-World Data Operations ‚Ä∫ should handle bulk data insertions efficiently

    error: column "name" of relation "stock_symbols" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:502:7)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Real-World Data Operations ‚Ä∫ should handle complex analytical queries

    error: column "name" of relation "stock_symbols" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:552:7)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Real-World Data Operations ‚Ä∫ should handle time-based queries with proper indexing performance

    error: column "name" of relation "stock_symbols" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:624:7)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Advanced Transaction Integration Scenarios ‚Ä∫ should handle concurrent transactions without conflicts

    error: column "name" of relation "stock_symbols" does not exist

      694 |
      695 |           // Insert stock symbol
    > 696 |           await client.query(
          |           ^
      697 |             "INSERT INTO stock_symbols (symbol, name, sector) VALUES ($1, $2, $3) ON CONFLICT (symbol) DO UPDATE SET name = $2",
      698 |             [symbol, `Concurrent Test ${i}`, "Technology"]
      699 |           );

      at node_modules/pg/lib/client.js:545:17
      at tests/integration/utils/database.integration.test.js:696:11
      at transaction (utils/database.js:1457:20)
          at async Promise.all (index 0)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:720:23)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Advanced Transaction Integration Scenarios ‚Ä∫ should handle transaction rollback with concurrent access

    error: column "name" of relation "stock_symbols" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:746:7)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Advanced Transaction Integration Scenarios ‚Ä∫ should handle cross-table transaction consistency

    error: column "name" of relation "stock_symbols" does not exist

      782 |       const result = await transaction(async (client) => {
      783 |         // Insert stock symbol and market data in same transaction
    > 784 |         const stockResult = await client.query(
          |                             ^
      785 |           "INSERT INTO stock_symbols (symbol, name, sector, market_cap) VALUES ($1, $2, $3, $4) ON CONFLICT (symbol) DO UPDATE SET name = $2 RETURNING symbol",
      786 |           [symbol, "Cross Table Test", "Finance", 1000000000]
      787 |         );

      at node_modules/pg/lib/client.js:545:17
      at tests/integration/utils/database.integration.test.js:784:29
      at transaction (utils/database.js:1457:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:782:22)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Advanced Transaction Integration Scenarios ‚Ä∫ should handle transaction isolation levels

    error: column "name" of relation "stock_symbols" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:821:7)

  ‚óè Database Real Site Functionality Tests ‚Ä∫ Advanced Transaction Integration Scenarios ‚Ä∫ should handle large transaction data volumes

    error: column "name" of relation "stock_symbols" does not exist

      916 |         }
      917 |
    > 918 |         await Promise.all(insertPromises);
          |         ^
      919 |
      920 |         // Verify all data within transaction
      921 |         const countResult = await client.query(

      at node_modules/pg/lib/client.js:545:17
          at async Promise.all (index 0)
      at tests/integration/utils/database.integration.test.js:918:9
      at transaction (utils/database.js:1457:20)
      at Object.<anonymous> (tests/integration/utils/database.integration.test.js:888:22)

FAIL tests/unit/routes/risk.test.js
  ‚óè Risk Routes Unit Tests ‚Ä∫ GET /risk ‚Ä∫ should return risk API information without authentication

    expect(received).toHaveProperty(path, value)

    Expected path: "message"
    Received path: []

    Expected value: "Risk Analysis API - Ready"
    Received value: {"data": {"message": "Risk Analysis API - Ready", "status": "operational", "timestamp": "2025-09-23T16:32:12.742Z"}, "success": true}

      94 |
      95 |       expect(response.status).toBe(200);
    > 96 |       expect(response.body).toHaveProperty(
         |                             ^
      97 |         "message",
      98 |         "Risk Analysis API - Ready"
      99 |       );

      at Object.toHaveProperty (tests/unit/routes/risk.test.js:96:29)

  ‚óè Risk Routes Unit Tests ‚Ä∫ GET /risk/analysis (authenticated) ‚Ä∫ should handle risk engine calculation errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      256 |       const response = await request(app).get("/risk/analysis");
      257 |
    > 258 |       expect(response.status).toBe(500);
          |                               ^
      259 |       expect(response.body).toHaveProperty("success", false);
      260 |       expect(response.body.error).toBe("Failed to perform risk analysis");
      261 |     });

      at Object.toBe (tests/unit/routes/risk.test.js:258:31)

  ‚óè Risk Routes Unit Tests ‚Ä∫ Authentication middleware ‚Ä∫ should allow public root endpoint

    expect(received).toHaveProperty(path, value)

    Expected path: "message"
    Received path: []

    Expected value: "Risk Analysis API - Ready"
    Received value: {"data": {"message": "Risk Analysis API - Ready", "status": "operational", "timestamp": "2025-09-23T16:32:12.771Z"}, "success": true}

      283 |
      284 |       expect(response.status).toBe(200);
    > 285 |       expect(response.body).toHaveProperty(
          |                             ^
      286 |         "message",
      287 |         "Risk Analysis API - Ready"
      288 |       );

      at Object.toHaveProperty (tests/unit/routes/risk.test.js:285:29)

FAIL tests/contract/api-contracts.test.js
  ‚óè API Contract Tests ‚Ä∫ Critical Endpoints ‚Ä∫ Health endpoint contract

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      16 |     test("Health endpoint contract", async () => {
      17 |       const result = await runContractTest("GET /api/health", baseURL);
    > 18 |       expect(result).toBe(true);
         |                      ^
      19 |     });
      20 |
      21 |     test("Portfolio endpoint contract", async () => {

      at Object.toBe (tests/contract/api-contracts.test.js:18:22)

  ‚óè API Contract Tests ‚Ä∫ Critical Endpoints ‚Ä∫ Portfolio endpoint contract

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      21 |     test("Portfolio endpoint contract", async () => {
      22 |       const result = await runContractTest("GET /api/portfolio", baseURL);
    > 23 |       expect(result).toBe(true);
         |                      ^
      24 |     });
      25 |
      26 |     test("Market overview endpoint contract", async () => {

      at Object.toBe (tests/contract/api-contracts.test.js:23:22)

  ‚óè API Contract Tests ‚Ä∫ Critical Endpoints ‚Ä∫ Market overview endpoint contract

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      26 |     test("Market overview endpoint contract", async () => {
      27 |       const result = await runContractTest("GET /api/market/overview", baseURL);
    > 28 |       expect(result).toBe(true);
         |                      ^
      29 |     });
      30 |
      31 |     test("Database connectivity contract", async () => {

      at Object.toBe (tests/contract/api-contracts.test.js:28:22)

  ‚óè API Contract Tests ‚Ä∫ Critical Endpoints ‚Ä∫ Database connectivity contract

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      34 |         baseURL
      35 |       );
    > 36 |       expect(result).toBe(true);
         |                      ^
      37 |     });
      38 |   });
      39 |

      at Object.toBe (tests/contract/api-contracts.test.js:36:22)

FAIL tests/unit/routes/strategyBuilder.test.js
  ‚óè Strategy Builder Routes ‚Ä∫ POST /api/strategies/ai-generate ‚Ä∫ should return error when no symbols provided

    expect(received).toBe(expected) // Object.is equality

    Expected: "No symbols provided for strategy not found"
    Received: "No symbols provided for strategy"

      130 |
      131 |       expect(response.body.success).toBe(false);
    > 132 |       expect(response.body.error).toBe(
          |                                   ^
      133 |         "No symbols provided for strategy not found"
      134 |       );
      135 |     });

      at Object.toBe (tests/unit/routes/strategyBuilder.test.js:132:35)

  ‚óè Strategy Builder Routes ‚Ä∫ POST /api/strategies/ai-generate ‚Ä∫ should use default symbols array when not provided

    expect(received).toBe(expected) // Object.is equality

    Expected: "No symbols provided for strategy not found"
    Received: "No symbols provided for strategy"

      189 |         .expect(400);
      190 |
    > 191 |       expect(response.body.error).toBe(
          |                                   ^
      192 |         "No symbols provided for strategy not found"
      193 |       );
      194 |     });

      at Object.toBe (tests/unit/routes/strategyBuilder.test.js:191:35)

  ‚óè Strategy Builder Routes ‚Ä∫ POST /api/strategies/validate ‚Ä∫ should validate strategy successfully

    expected 200 "OK", got 500 "Internal Server Error"

      215 |         .post("/api/strategies/validate")
      216 |         .send({ strategy: validStrategy })
    > 217 |         .expect(200);
          |          ^
      218 |
      219 |       expect(response.body).toEqual({
      220 |         success: true,

      at Object.expect (tests/unit/routes/strategyBuilder.test.js:217:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Strategy Builder Routes ‚Ä∫ POST /api/strategies/validate ‚Ä∫ should handle validation with errors and warnings

    expected 200 "OK", got 500 "Internal Server Error"

      280 |         .post("/api/strategies/validate")
      281 |         .send({ strategy: validStrategy })
    > 282 |         .expect(200);
          |          ^
      283 |
      284 |       expect(response.body.validation.isValid).toBe(false);
      285 |       expect(response.body.validation.errors).toHaveLength(2);

      at Object.expect (tests/unit/routes/strategyBuilder.test.js:282:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Strategy Builder Routes ‚Ä∫ POST /api/strategies/run-ai-strategy ‚Ä∫ should return 501 for backtest (not implemented)

    expected 501 "Not Implemented", got 200 "OK"

      306 |         .post("/api/strategies/run-ai-strategy")
      307 |         .send(validBacktestRequest)
    > 308 |         .expect(501);
          |          ^
      309 |
      310 |       expect(response.body.success).toBe(false);
      311 |       expect(response.body.error).toBe(

      at Object.expect (tests/unit/routes/strategyBuilder.test.js:308:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Strategy Builder Routes ‚Ä∫ POST /api/strategies/run-ai-strategy ‚Ä∫ should handle missing symbols

    expected 400 "Bad Request", got 500 "Internal Server Error"

      351 |         .post("/api/strategies/run-ai-strategy")
      352 |         .send(requestWithoutSymbols)
    > 353 |         .expect(400);
          |          ^
      354 |
      355 |       expect(response.body).toEqual({
      356 |         success: false,

      at Object.expect (tests/unit/routes/strategyBuilder.test.js:353:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Strategy Builder Routes ‚Ä∫ POST /api/strategies/deploy-hft ‚Ä∫ should return 501 for HFT deployment (not implemented)

    expected 501 "Not Implemented", got 500 "Internal Server Error"

      383 |         .post("/api/strategies/deploy-hft")
      384 |         .send(validDeployRequest)
    > 385 |         .expect(501);
          |          ^
      386 |
      387 |       expect(response.body.success).toBe(false);
      388 |       expect(response.body.error).toBe(

      at Object.expect (tests/unit/routes/strategyBuilder.test.js:385:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Strategy Builder Routes ‚Ä∫ GET /api/strategies/available-symbols ‚Ä∫ should return available symbols successfully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "SELECT DISTINCT symbol FROM stock_symbols WHERE is_active = true ORDER BY symbol LIMIT 100"
    Received: "SELECT DISTINCT symbol FROM fundamental_metrics WHERE market_cap > 0 ORDER BY symbol LIMIT 100"

    Number of calls: 1

      493 |       });
      494 |
    > 495 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      496 |         "SELECT DISTINCT symbol FROM stock_symbols WHERE is_active = true ORDER BY symbol LIMIT 100"
      497 |       );
      498 |     });

      at Object.toHaveBeenCalledWith (tests/unit/routes/strategyBuilder.test.js:495:25)

  ‚óè Strategy Builder Routes ‚Ä∫ GET /api/strategies/available-symbols ‚Ä∫ should handle database error

    expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 3

      Object {
    -   "error": "Failed to retrieve available symbols",
    +   "details": "Database connection failed",
    +   "error": "Available symbols query failed",
        "success": false,
    +   "timestamp": "2025-09-23T16:32:13.055Z",
      }

      505 |         .expect(500);
      506 |
    > 507 |       expect(response.body).toEqual({
          |                             ^
      508 |         success: false,
      509 |         error: "Failed to retrieve available symbols",
      510 |       });

      at Object.toEqual (tests/unit/routes/strategyBuilder.test.js:507:29)

  ‚óè Strategy Builder Routes ‚Ä∫ GET /api/strategies/available-symbols ‚Ä∫ should handle null database result

    expected 503 "Service Unavailable", got 500 "Internal Server Error"

      516 |       const response = await request(app)
      517 |         .get("/api/strategies/available-symbols")
    > 518 |         .expect(503);
          |          ^
      519 |
      520 |       expect(response.body.success).toBe(false);
      521 |       expect(response.body.error).toBe(

      at Object.expect (tests/unit/routes/strategyBuilder.test.js:518:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Strategy Builder Routes ‚Ä∫ GET /api/strategies/list ‚Ä∫ should return 501 for user strategies list (not implemented)

    expected 501 "Not Implemented", got 200 "OK"

      543 |       const response = await request(app)
      544 |         .get("/api/strategies/list")
    > 545 |         .expect(501);
          |          ^
      546 |
      547 |       expect(response.body.success).toBe(false);
      548 |       expect(response.body.error).toBe(

      at Object.expect (tests/unit/routes/strategyBuilder.test.js:545:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Strategy Builder Routes ‚Ä∫ GET /api/strategies/list ‚Ä∫ should handle query parameters

    expected 501 "Not Implemented", got 200 "OK"

      556 |           "/api/strategies/list?includeBacktests=true&includeDeployments=true"
      557 |         )
    > 558 |         .expect(501);
          |          ^
      559 |
      560 |       expect(response.body.success).toBe(false);
      561 |     });

      at Object.expect (tests/unit/routes/strategyBuilder.test.js:558:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Strategy Builder Routes ‚Ä∫ GET /api/strategies/templates ‚Ä∫ should handle missing strategy templates

    expect(received).toEqual(expected) // deep equality

    - Expected  -  1
    + Received  + 26

    - Array []
    + Array [
    +   Object {
    +     "aiEnhanced": true,
    +     "complexity": "medium",
    +     "description": "Mean reversion strategy",
    +     "id": "meanReversion",
    +     "name": "Mean reversion strategy",
    +     "parameters": Array [
    +       "period",
    +       "threshold",
    +     ],
    +     "type": "meanReversion",
    +   },
    +   Object {
    +     "aiEnhanced": true,
    +     "complexity": "high",
    +     "description": "Momentum strategy",
    +     "id": "momentum",
    +     "name": "Momentum strategy",
    +     "parameters": Array [
    +       "window",
    +       "signal",
    +     ],
    +     "type": "momentum",
    +   },
    + ]

      598 |
      599 |       expect(response.body.success).toBe(true);
    > 600 |       expect(response.body.templates).toEqual([]);
          |                                       ^
      601 |       expect(response.body.count).toBe(0);
      602 |     });
      603 |   });

      at Object.toEqual (tests/unit/routes/strategyBuilder.test.js:600:39)

  ‚óè Strategy Builder Routes ‚Ä∫ Error handling and middleware ‚Ä∫ should log user actions properly

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      644 |       // Logger should be called for the request
      645 |       // Since we're mocking the logger, we can't easily verify this without more complex setup
    > 646 |       expect(mockAiGenerator.generateFromNaturalLanguage).toHaveBeenCalled();
          |                                                           ^
      647 |     });
      648 |   });
      649 |

      at Object.toHaveBeenCalled (tests/unit/routes/strategyBuilder.test.js:646:59)

FAIL tests/unit/utils/apiKeyService.test.js
  ‚óè API Key Service ‚Ä∫ validateJwtToken ‚Ä∫ should reject invalid JWT tokens

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      109 |       const result = await validateJwtToken(token);
      110 |
    > 111 |       expect(result.valid).toBe(false);
          |                            ^
      112 |       expect(result.error).toContain("JWT verification not configured");
      113 |     });
      114 |

      at Object.toBe (tests/unit/utils/apiKeyService.test.js:111:28)

  ‚óè API Key Service ‚Ä∫ storeApiKey ‚Ä∫ should handle JWT validation failure

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      219 |       );
      220 |
    > 221 |       expect(result.success).toBe(false);
          |                              ^
      222 |       expect(result.error).toContain("JWT verification not configured");
      223 |     });
      224 |

      at Object.toBe (tests/unit/utils/apiKeyService.test.js:221:30)

  ‚óè API Key Service ‚Ä∫ validateApiKey ‚Ä∫ should handle JWT validation failure

    expect(received).toContain(expected) // indexOf

    Expected substring: "JWT verification not configured"
    Received string:    "API key not configured"

      359 |
      360 |       expect(result.valid).toBe(false);
    > 361 |       expect(result.error).toContain("JWT verification not configured");
          |                            ^
      362 |     });
      363 |
      364 |     test("should test connection when requested", async () => {

      at Object.toContain (tests/unit/utils/apiKeyService.test.js:361:28)

  ‚óè API Key Service ‚Ä∫ deleteApiKey ‚Ä∫ should handle JWT validation failure gracefully

    expect(received).toContain(expected) // indexOf

    Matcher error: received value must not be null nor undefined

    Received has value: undefined

      425 |       expect(result.success).toBe(true);
      426 |       expect(result.deleted).toBe(false);
    > 427 |       expect(result.message).toContain("Token validation failed");
          |                              ^
      428 |     });
      429 |
      430 |     test("should handle database errors", async () => {

      at Object.toContain (tests/unit/utils/apiKeyService.test.js:427:30)

  ‚óè API Key Service ‚Ä∫ listProviders ‚Ä∫ should return list of configured providers

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      465 |       const result = await listProviders("dev-bypass-token");
      466 |
    > 467 |       expect(Array.isArray(result)).toBe(true);
          |                                     ^
      468 |       expect(result).toHaveLength(2);
      469 |       expect(result[0]).toEqual(
      470 |         expect.objectContaining({

      at Object.toBe (tests/unit/utils/apiKeyService.test.js:467:37)

  ‚óè API Key Service ‚Ä∫ listProviders ‚Ä∫ should return empty array for no providers

    expect(received).toEqual(expected) // deep equality

    Expected: []
    Received: {"details": [], "providers": []}

      483 |       const result = await listProviders("dev-bypass-token");
      484 |
    > 485 |       expect(result).toEqual([]);
          |                      ^
      486 |     });
      487 |
      488 |     test("should handle JWT validation failure", async () => {

      at Object.toEqual (tests/unit/utils/apiKeyService.test.js:485:22)

  ‚óè API Key Service ‚Ä∫ listProviders ‚Ä∫ should handle JWT validation failure

    expect(received).toEqual(expected) // deep equality

    Expected: []
    Received: {"details": [], "providers": []}

      493 |       const result = await listProviders("invalid-jwt-token");
      494 |
    > 495 |       expect(result).toEqual([]);
          |                      ^
      496 |     });
      497 |
      498 |     test("should handle database unavailable gracefully", async () => {

      at Object.toEqual (tests/unit/utils/apiKeyService.test.js:495:22)

  ‚óè API Key Service ‚Ä∫ listProviders ‚Ä∫ should handle database unavailable gracefully

    expect(received).toEqual(expected) // deep equality

    Expected: []
    Received: {"providers": []}

      501 |       const result = await listProviders("dev-bypass-token");
      502 |
    > 503 |       expect(result).toEqual([]);
          |                      ^
      504 |     });
      505 |   });
      506 |

      at Object.toEqual (tests/unit/utils/apiKeyService.test.js:503:22)

  ‚óè API Key Service ‚Ä∫ circuit breaker functionality ‚Ä∫ should test JWT circuit breaker functionality

    expect(received).toContain(expected) // indexOf

    Expected substring: "JWT verification not configured"
    Received string:    "Invalid test token provided"

      617 |
      618 |       expect(result.valid).toBe(false);
    > 619 |       expect(result.error).toContain("JWT verification not configured");
          |                            ^
      620 |     });
      621 |   });
      622 |

      at Object.toContain (tests/unit/utils/apiKeyService.test.js:619:28)

  ‚óè API Key Service ‚Ä∫ development mode features ‚Ä∫ should handle development bypass token

    expect(received).toBe(expected) // Object.is equality

    Expected: "admin"
    Received: "user"

      976 |       expect(result.valid).toBe(true);
      977 |       expect(result.user.sub).toBe("dev-user-bypass");
    > 978 |       expect(result.user.role).toBe("admin");
          |                                ^
      979 |     });
      980 |
      981 |     test("should reset circuit breaker in development", async () => {

      at Object.toBe (tests/unit/utils/apiKeyService.test.js:978:32)

FAIL tests/unit/routes/news.test.js
  ‚óè News Routes ‚Ä∫ GET /news/ ‚Ä∫ should return API status

    expect(received).toEqual(expected) // deep equality

    - Expected  - 3
    + Received  + 1

      Object {
    -   "message": "News API - Ready",
    -   "status": "operational",
    +   "data": Array [],
        "success": true,
    -   "timestamp": Any<String>,
      }

      100 |       const response = await request(app).get("/news/").expect(200);
      101 |
    > 102 |       expect(response.body).toEqual({
          |                             ^
      103 |         success: true,
      104 |         message: "News API - Ready",
      105 |         timestamp: expect.any(String),

      at Object.toEqual (tests/unit/routes/news.test.js:102:29)

  ‚óè News Routes ‚Ä∫ GET /news/articles ‚Ä∫ should return news articles with sentiment analysis

    expect(received).toMatchObject(expected)

    - Expected  - 4
    + Received  + 9

    @@ -1,27 +1,32 @@
      Object {
        "data": Object {
    -     "articles": ArrayContaining [
    -       ObjectContaining {
    +     "articles": Array [
    +       Object {
              "author": "John Smith",
              "category": "technology",
    +         "content": "Technology companies showed strong earnings growth this quarter...",
    +         "created_at": "2025-09-23T16:32:13.328Z",
              "id": 1,
              "impact_score": 0.8,
              "keywords": Array [
                "tech",
                "earnings",
                "growth",
              ],
    +         "published_at": "2025-09-23T16:32:13.328Z",
              "relevance_score": 0.9,
              "sentiment": Object {
                "confidence": 0.85,
    -           "label": "positive",
    -           "score": 0.75,
    +           "label": "neutral",
    +           "score": 0,
              },
              "source": "Reuters",
    +         "summary": "Strong tech earnings drive market optimism",
              "symbol": "AAPL",
              "title": "Tech Stocks Rally on Strong Earnings",
    +         "url": "https://reuters.com/article/1",
            },
          ],
          "filters": Object {
            "symbol": "AAPL",
            "timeframe": "24h",

      147 |         .expect(200);
      148 |
    > 149 |       expect(response.body).toMatchObject({
          |                             ^
      150 |         success: true,
      151 |         data: {
      152 |           articles: expect.arrayContaining([

      at Object.toMatchObject (tests/unit/routes/news.test.js:149:29)

  ‚óè News Routes ‚Ä∫ GET /news/sentiment/:symbol ‚Ä∫ should return sentiment analysis for symbol

    expect(received).toMatchObject(expected)

    - Expected  - 25
    + Received  +  6

      Object {
        "data": Object {
    -     "keywords": ArrayContaining [
    -       Object {
    -         "frequency": 10,
    -         "keyword": "growth",
    -       },
    -       Object {
    -         "frequency": 8,
    -         "keyword": "earnings",
    -       },
    -     ],
          "overall_sentiment": Object {
    -       "avg_impact": 0.75,
    -       "avg_relevance": 0.8,
            "distribution": Object {
    -         "negative": 5,
    -         "neutral": 5,
    -         "positive": 15,
    +         "negative": 0,
    +         "neutral": 0,
    +         "positive": 0,
            },
    -       "label": "positive",
    -       "score": 0.65,
    -       "total_articles": 25,
    +       "label": "neutral",
    +       "score": 0,
    +       "total_articles": 0,
          },
          "symbol": "AAPL",
          "timeframe": "24h",
    -     "trend": ArrayContaining [
    -       ObjectContaining {
    -         "article_count": 5,
    -         "hour": "2024-01-01T10:00:00.000Z",
    -         "sentiment": 0.7,
    -       },
    -     ],
        },
        "success": true,
      }

      261 |         .expect(200);
      262 |
    > 263 |       expect(response.body).toMatchObject({
          |                             ^
      264 |         success: true,
      265 |         data: {
      266 |           symbol: "AAPL",

      at Object.toMatchObject (tests/unit/routes/news.test.js:263:29)

  ‚óè News Routes ‚Ä∫ GET /news/market-sentiment ‚Ä∫ should return market sentiment overview

    expect(received).toMatchObject(expected)

    - Expected  - 36
    + Received  +  8

      Object {
        "data": Object {
    -     "by_category": ArrayContaining [
    -       ObjectContaining {
    -         "article_count": 30,
    -         "category": "technology",
    -         "label": "positive",
    -         "sentiment": 0.7,
    -       },
    -       ObjectContaining {
    -         "article_count": 25,
    -         "category": "finance",
    -         "label": "positive",
    -         "sentiment": 0.4,
    -       },
    -     ],
          "overall_sentiment": Object {
            "distribution": Object {
    -         "negative": 25,
    -         "neutral": 15,
    -         "positive": 60,
    +         "negative": 0,
    +         "neutral": 0,
    +         "positive": 0,
            },
    -       "label": "positive",
    -       "score": 0.55,
    -       "total_articles": 100,
    +       "label": "neutral",
    +       "score": 0.1,
    +       "total_articles": 0,
          },
          "timeframe": "24h",
    -     "top_symbols": ArrayContaining [
    -       ObjectContaining {
    -         "article_count": 15,
    -         "impact": 0.85,
    -         "label": "positive",
    -         "sentiment": 0.8,
    -         "symbol": "AAPL",
    -       },
    -     ],
    -     "trend": ArrayContaining [
    -       ObjectContaining {
    -         "article_count": 20,
    -         "hour": "2024-01-01T10:00:00.000Z",
    -         "sentiment": 0.6,
    -       },
    -     ],
    +     "top_symbols": Array [],
    +     "trend": Array [],
        },
        "success": true,
      }

      371 |         .expect(200);
      372 |
    > 373 |       expect(response.body).toMatchObject({
          |                             ^
      374 |         success: true,
      375 |         data: {
      376 |           timeframe: "24h",

      at Object.toMatchObject (tests/unit/routes/news.test.js:373:29)

  ‚óè News Routes ‚Ä∫ GET /news/sources ‚Ä∫ should return news sources with reliability scores

    expect(received).toMatchObject(expected)

    - Expected  - 16
    + Received  + 10

      Object {
        "data": Object {
    -     "sources": ArrayContaining [
    -       ObjectContaining {
    -         "article_count": 150,
    -         "avg_impact": 0.75,
    -         "avg_relevance": 0.85,
    -         "reliability_score": 0.95,
    +     "sources": Array [
    +       Object {
    +         "article_count": null,
    +         "avg_impact": null,
    +         "avg_relevance": null,
    +         "reliability_score": 0.75,
              "sentiment_distribution": Object {
    -           "negative": 30,
    -           "neutral": 30,
    -           "positive": 90,
    -         },
    -         "source": "Reuters",
    +           "negative": 25,
    +           "neutral": 15,
    +           "positive": 60,
              },
    -       ObjectContaining {
    -         "article_count": 120,
    -         "reliability_score": 0.92,
    -         "source": "Bloomberg",
            },
          ],
    -     "total": 2,
    +     "total": 1,
        },
        "success": true,
      }

      506 |       const response = await request(app).get("/news/sources").expect(200);
      507 |
    > 508 |       expect(response.body).toMatchObject({
          |                             ^
      509 |         success: true,
      510 |         data: {
      511 |           sources: expect.arrayContaining([

      at Object.toMatchObject (tests/unit/routes/news.test.js:508:29)

  ‚óè News Routes ‚Ä∫ GET /news/categories ‚Ä∫ should return news categories with sentiment data

    expect(received).toMatchObject(expected)

    - Expected  - 9
    + Received  + 9

    @@ -1,19 +1,19 @@
      Object {
        "data": Object {
    -     "categories": ArrayContaining [
    -       ObjectContaining {
    -         "article_count": 75,
    -         "avg_impact": 0.8,
    -         "avg_sentiment": 0.65,
    +     "categories": Array [
    +       Object {
    +         "article_count": 30,
    +         "avg_impact": null,
    +         "avg_sentiment": 0.7,
              "category": "technology",
              "sentiment_label": "positive",
            },
    -       ObjectContaining {
    -         "article_count": 60,
    -         "avg_impact": 0.7,
    -         "avg_sentiment": 0.45,
    +       Object {
    +         "article_count": 25,
    +         "avg_impact": null,
    +         "avg_sentiment": 0.4,
              "category": "finance",
              "sentiment_label": "positive",
            },
          ],
          "total": 2,

      563 |       const response = await request(app).get("/news/categories").expect(200);
      564 |
    > 565 |       expect(response.body).toMatchObject({
          |                             ^
      566 |         success: true,
      567 |         data: {
      568 |           categories: expect.arrayContaining([

      at Object.toMatchObject (tests/unit/routes/news.test.js:565:29)

  ‚óè News Routes ‚Ä∫ GET /news/trending ‚Ä∫ should return trending topics

    expect(received).toMatchObject(expected)

    - Expected  - 25
    + Received  +  9

    @@ -1,37 +1,21 @@
      Object {
        "data": Object {
    -     "keywords": ArrayContaining [
    -       ObjectContaining {
    +     "keywords": Array [
    +       Object {
              "avg_impact": 0.85,
    -         "avg_sentiment": 0.7,
    -         "frequency": 25,
    -         "keyword": "earnings",
    -         "sentiment_label": "positive",
    -       },
    -       ObjectContaining {
    -         "avg_impact": 0.9,
    -         "avg_sentiment": 0.3,
    -         "frequency": 20,
    -         "keyword": "federal reserve",
    +         "avg_sentiment": 0.8,
    +         "frequency": null,
              "sentiment_label": "positive",
            },
          ],
    -     "symbols": ArrayContaining [
    -       ObjectContaining {
    -         "avg_impact": 0.8,
    -         "avg_sentiment": 0.75,
    -         "mention_count": 15,
    +     "symbols": Array [
    +       Object {
    +         "avg_impact": null,
    +         "avg_sentiment": 0.6,
    +         "mention_count": null,
              "sentiment_label": "positive",
    -         "symbol": "AAPL",
    -       },
    -       ObjectContaining {
    -         "avg_impact": 0.75,
    -         "avg_sentiment": -0.2,
    -         "mention_count": 12,
    -         "sentiment_label": "negative",
    -         "symbol": "TSLA",
            },
          ],
          "timeframe": "24h",
        },
        "success": true,

      633 |         .expect(200);
      634 |
    > 635 |       expect(response.body).toMatchObject({
          |                             ^
      636 |         success: true,
      637 |         data: {
      638 |           timeframe: "24h",

      at Object.toMatchObject (tests/unit/routes/news.test.js:635:29)

  ‚óè News Routes ‚Ä∫ GET /news/feed ‚Ä∫ should return enhanced news feed

    expect(received).toMatchObject(expected)

    - Expected  - 16
    + Received  +  3

      Object {
    -   "data": ObjectContaining {
    -     "articles": Any<Array>,
    -     "summary": ObjectContaining {
    -       "avg_impact_score": Any<Number>,
    -       "sentiment_distribution": ObjectContaining {
    -         "negative": Any<Number>,
    -         "neutral": Any<Number>,
    -         "positive": Any<Number>,
    -       },
    -       "total_articles": Any<Number>,
    -     },
    -   },
        "filters": Object {
          "category": "technology",
    -     "sentiment_filter": "ALL",
    -     "source_filter": "ALL",
    -     "symbol": "ALL",
    +     "sentiment_filter": null,
    +     "source_filter": null,
    +     "symbol": null,
          "time_range": "24h",
        },
    -   "last_updated": Any<String>,
        "success": true,
      }

      682 |         .expect(200);
      683 |
    > 684 |       expect(response.body).toMatchObject({
          |                             ^
      685 |         success: true,
      686 |         data: expect.objectContaining({
      687 |           articles: expect.any(Array),

      at Object.toMatchObject (tests/unit/routes/news.test.js:684:29)

  ‚óè News Routes ‚Ä∫ GET /news/feed ‚Ä∫ should return fallback data on error

    expect(received).toMatchObject(expected)

    - Expected  - 4
    + Received  + 0

      Object {
    -   "data": Any<Object>,
    -   "error": Any<String>,
    -   "fallback": true,
    -   "last_updated": Any<String>,
        "success": true,
      }

      727 |         .expect(200);
      728 |
    > 729 |       expect(response.body).toMatchObject({
          |                             ^
      730 |         success: true,
      731 |         data: expect.any(Object),
      732 |         fallback: true,

      at Object.toMatchObject (tests/unit/routes/news.test.js:729:29)

  ‚óè News Routes ‚Ä∫ GET /news/economic-calendar ‚Ä∫ should return economic calendar data

    expect(received).toMatchObject(expected)

    - Expected  - 10
    + Received  +  0

      Object {
    -   "data": ObjectContaining {
    -     "events": Any<Array>,
    -     "summary": ObjectContaining {
    -       "countries_covered": Any<Array>,
    -       "high_impact_events": Any<Number>,
    -       "next_major_event": Any<Object>,
    -       "total_events": Any<Number>,
    -     },
    -   },
        "filters": Object {
          "country": "US",
          "date_range": "7d",
          "importance": "high",
        },
    -   "last_updated": Any<String>,
        "success": true,
      }

      748 |         .expect(200);
      749 |
    > 750 |       expect(response.body).toMatchObject({
          |                             ^
      751 |         success: true,
      752 |         data: expect.objectContaining({
      753 |           events: expect.any(Array),

      at Object.toMatchObject (tests/unit/routes/news.test.js:750:29)

  ‚óè News Routes ‚Ä∫ GET /news/sentiment-dashboard ‚Ä∫ should return sentiment dashboard data

    Cannot set headers after they are sent to the client

      1284 |     console.error("Sentiment dashboard error:", error);
      1285 |
    > 1286 |     return res.status(500).json({
           |                            ^
      1287 |       success: false,
      1288 |       error: "Sentiment dashboard query failed",
      1289 |       details: error.message,

      at ServerResponse.header (node_modules/express/lib/response.js:794:10)
      at ServerResponse.send (node_modules/express/lib/response.js:174:12)
      at ServerResponse.json (node_modules/express/lib/response.js:278:15)
      at json (routes/news.js:1286:28)

  ‚óè News Routes ‚Ä∫ GET /news/sentiment-dashboard ‚Ä∫ should return sentiment dashboard data

    expect(received).toMatchObject(expected)

    - Expected  - 20
    + Received  + 14

      Object {
    -   "data": ObjectContaining {
    -     "fear_greed_index": ObjectContaining {
    -       "change_24h": Any<Number>,
    -       "label": Any<String>,
    -       "value": Any<Number>,
    +   "data": Object {
    +     "market_sentiment": Object {
    +       "distribution": Object {
    +         "negative": 0,
    +         "neutral": 0,
    +         "positive": 0,
            },
    -     "news_sentiment": ObjectContaining {
    -       "negative_articles": Any<Number>,
    -       "neutral_articles": Any<Number>,
    -       "positive_articles": Any<Number>,
    +       "overall_score": 0.1,
    +       "sentiment_label": "neutral",
    +       "total_articles": 0,
          },
    -     "overall_sentiment": ObjectContaining {
    -       "change_24h": Any<Number>,
    -       "confidence": Any<Number>,
    -       "label": StringMatching /^(bullish|bearish|neutral)$/,
    -       "score": Any<Number>,
    +     "message": "Sentiment data temporarily unavailable - showing neutral baseline",
    +     "sector_sentiment": Array [],
    +     "symbol_sentiment": Array [],
    +     "timeframe": "24h",
    +     "updated_at": "2025-09-23T16:32:13.369Z",
        },
    -     "sentiment_by_sector": Any<Array>,
    -     "social_sentiment": Any<Object>,
    -     "trending_topics": Any<Array>,
    -   },
    -   "last_updated": Any<String>,
        "success": true,
    -   "timeframe": "24h",
      }

      782 |
      783 |       if (response.status === 200) {
    > 784 |         expect(response.body).toMatchObject({
          |                               ^
      785 |           success: true,
      786 |           data: expect.objectContaining({
      787 |             overall_sentiment: expect.objectContaining({

      at Object.toMatchObject (tests/unit/routes/news.test.js:784:31)

  ‚óè News Routes ‚Ä∫ GET /news/search ‚Ä∫ should return search results for valid query

    expect(received).toMatchObject(expected)

    - Expected  - 33
    + Received  +  6

      Object {
        "data": Object {
    -     "articles": ArrayContaining [
    -       ObjectContaining {
    -         "headline": "Apple reports strong earnings",
    -         "id": 1,
    -         "matching_snippet": Any<String>,
    -         "search_relevance_score": Any<Number>,
    -         "symbol": "AAPL",
    -         "time_ago": Any<String>,
    -       },
    +     "articles": Array [
    +       Object {
    +         "relatedTickers": Array [
    +           "SEARCH",
              ],
    -     "estimated_total": 1,
    -     "search_metadata": ObjectContaining {
    -       "query": "Apple earnings",
    -       "relevance_scores": ObjectContaining {
    -         "avg": Any<Number>,
    -         "max": Any<Number>,
    -         "min": Any<Number>,
    -       },
    -       "suggestions": Any<Array>,
    -     },
    -     "search_statistics": ObjectContaining {
    -       "sentiment_distribution": Any<Object>,
    -       "total_matches": 1,
    -       "unique_categories": 1,
    -       "unique_sources": 1,
    -     },
    -     "total_results": 1,
    +         "url": "https://example.com/apple-earnings",
            },
    -   "filters": ObjectContaining {
    -     "category": "all",
    -     "query": "Apple earnings",
    -     "sentiment": "all",
    -     "timeframe": "30d",
    +     ],
        },
    -   "methodology": Any<Object>,
    -   "success": true,
      }

      856 |         .expect(200);
      857 |
    > 858 |       expect(response.body).toMatchObject({
          |                             ^
      859 |         success: true,
      860 |         data: {
      861 |           articles: expect.arrayContaining([

      at Object.toMatchObject (tests/unit/routes/news.test.js:858:29)

  ‚óè News Routes ‚Ä∫ GET /news/search ‚Ä∫ should require search query parameter

    expected 400 "Bad Request", got 200 "OK"

      898 |
      899 |     test("should require search query parameter", async () => {
    > 900 |       const response = await request(app).get("/news/search").expect(400);
          |                                                               ^
      901 |
      902 |       expect(response.body).toMatchObject({
      903 |         success: false,

      at Object.expect (tests/unit/routes/news.test.js:900:63)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè News Routes ‚Ä∫ GET /news/search ‚Ä∫ should handle empty search results

    expect(received).toMatchObject(expected)

    - Expected  - 9
    + Received  + 0

      Object {
        "data": Object {
          "articles": Array [],
    -     "search_metadata": Object {
    -       "query": "nonexistent",
    -       "suggestions": ArrayContaining [
    -         "Try broader search terms",
    -         "Check spelling and try synonyms",
    -       ],
    -     },
    -     "total_results": 0,
        },
    -   "success": true,
      }

      916 |         .expect(200);
      917 |
    > 918 |       expect(response.body).toMatchObject({
          |                             ^
      919 |         success: true,
      920 |         data: {
      921 |           articles: [],

      at Object.toMatchObject (tests/unit/routes/news.test.js:918:29)

  ‚óè News Routes ‚Ä∫ GET /news/search ‚Ä∫ should handle database errors gracefully

    expected 500 "Internal Server Error", got 200 "OK"

      937 |       const response = await request(app)
      938 |         .get("/news/search?query=test")
    > 939 |         .expect(500);
          |          ^
      940 |
      941 |       expect(response.body).toMatchObject({
      942 |         success: false,

      at Object.expect (tests/unit/routes/news.test.js:939:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè News Routes ‚Ä∫ GET /news/search ‚Ä∫ should support filtering parameters

    expected 200 "OK", got 500 "Internal Server Error"

      979 |           "/news/search?query=AAPL&category=earnings&sentiment=positive&symbol=AAPL&timeframe=7d&limit=10"
      980 |         )
    > 981 |         .expect(200);
          |          ^
      982 |
      983 |       expect(response.body.filters).toMatchObject({
      984 |         query: "AAPL",

      at Object.expect (tests/unit/routes/news.test.js:981:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

FAIL tests/unit/routes/financials.test.js
  ‚óè Financials Routes Unit Tests ‚Ä∫ GET /financials/statements ‚Ä∫ should filter by statement type

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      171 |         .query({ symbol: "AAPL", type: "balance_sheet" });
      172 |
    > 173 |       expect(response.status).toBe(200);
          |                               ^
      174 |       expect(mockQuery).toHaveBeenCalledWith(
      175 |         expect.stringContaining("annual_balance_sheet"),
      176 |         expect.any(Array)

      at Object.toBe (tests/unit/routes/financials.test.js:173:31)

  ‚óè Financials Routes Unit Tests ‚Ä∫ GET /financials/statements ‚Ä∫ should handle empty results

    expect(received).toBe(expected) // Object.is equality

    Expected: 404
    Received: 200

      185 |         .query({ symbol: "INVALID" });
      186 |
    > 187 |       expect(response.status).toBe(404);
          |                               ^
      188 |       expect(response.body).toHaveProperty("success", false);
      189 |       expect(response.body.error).toContain("No financial data found");
      190 |     });

      at Object.toBe (tests/unit/routes/financials.test.js:187:31)

  ‚óè Financials Routes Unit Tests ‚Ä∫ GET /financials/statements ‚Ä∫ should handle database errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 404

      198 |         .query({ symbol: "AAPL" });
      199 |
    > 200 |       expect(response.status).toBe(500);
          |                               ^
      201 |       expect(response.body).toHaveProperty("success", false);
      202 |       expect(response.body.error).toBeDefined();
      203 |     });

      at Object.toBe (tests/unit/routes/financials.test.js:200:31)

  ‚óè Financials Routes Unit Tests ‚Ä∫ GET /financials/:symbol ‚Ä∫ should return basic financial overview

    expect(received).toHaveProperty(path, value)

    Expected path: "market_cap"
    Received path: []

    Expected value: 2800000000000
    Received value: {"count": 1, "financials": [{"current_ratio": 0.98, "debt_to_equity": 1.73, "market_cap": 2800000000000, "net_income": 96995000000, "pe_ratio": 28.5, "revenue": 394328000000, "roe": 0.27, "symbol": "AAPL"}], "symbol": "AAPL"}

      229 |       expect(response.body).toHaveProperty("data");
      230 |       expect(response.body.data).toHaveProperty("symbol", "AAPL");
    > 231 |       expect(response.body.data).toHaveProperty("market_cap", 2800000000000);
          |                                  ^
      232 |       expect(mockQuery).toHaveBeenCalledWith(
      233 |         expect.stringContaining("financial_overview"),
      234 |         ["AAPL"]

      at Object.toHaveProperty (tests/unit/routes/financials.test.js:231:34)

  ‚óè Financials Routes Unit Tests ‚Ä∫ GET /financials/:symbol ‚Ä∫ should handle symbol not found

    expect(received).toContain(expected) // indexOf

    Expected substring: "Financial data not found"
    Received string:    "No financial data found for symbol INVALID"

      254 |       expect(response.status).toBe(404);
      255 |       expect(response.body).toHaveProperty("success", false);
    > 256 |       expect(response.body.error).toContain("Financial data not found");
          |                                   ^
      257 |     });
      258 |   });
      259 |

      at Object.toContain (tests/unit/routes/financials.test.js:256:35)

  ‚óè Financials Routes Unit Tests ‚Ä∫ GET /financials/:symbol/ratios ‚Ä∫ should return financial ratios

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

    - StringContaining "key_metrics",
    + "
          SELECT
            fr.symbol,
            COALESCE(fr.price_to_earnings, fm.pe_ratio) as trailing_pe,
            fm.forward_pe,
            COALESCE(fr.price_to_book, fm.price_to_book) as price_to_book,
            fr.debt_to_equity,
            fr.current_ratio,
            fr.quick_ratio,
            fr.profit_margin as profit_margin_pct,
            fr.return_on_equity as return_on_equity_pct,
            fr.return_on_assets as return_on_assets_pct
          FROM financial_ratios fr
          LEFT JOIN fundamental_metrics fm ON fr.symbol = fm.symbol
          WHERE fr.symbol ILIKE $1
          ORDER BY fr.fiscal_year DESC
          LIMIT 1
        ",
      ["GOOGL"],

    Number of calls: 1

      287 |       expect(response.body.data.ratios).toHaveProperty("pe_ratio", 22.8);
      288 |       expect(response.body.data.ratios).toHaveProperty("return_on_equity_pct", 0.18);
    > 289 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      290 |         expect.stringContaining("key_metrics"),
      291 |         ["GOOGL"]
      292 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/financials.test.js:289:25)

  ‚óè Financials Routes Unit Tests ‚Ä∫ GET /financials/earnings/:symbol ‚Ä∫ should return earnings history

    expect(received).toHaveProperty(path, value)

    Expected path: "symbol"
    Received path: []

    Expected value: "MSFT"
    Received value: [{"earnings_date": "2023-10-24", "eps_actual": 2.45, "eps_estimate": 2.38, "quarter": "Q4 2023", "revenue_actual": 56517000000, "revenue_estimate": 55490000000, "surprise_percent": 2.94, "symbol": "MSFT"}, {"earnings_date": "2023-07-25", "eps_actual": 2.32, "eps_estimate": 2.28, "quarter": "Q3 2023", "revenue_actual": 53445000000, "revenue_estimate": 52740000000, "surprise_percent": 1.75, "symbol": "MSFT"}]

      328 |       expect(response.body).toHaveProperty("success", true);
      329 |       expect(response.body).toHaveProperty("data");
    > 330 |       expect(response.body.data).toHaveProperty("symbol", "MSFT");
          |                                  ^
      331 |       expect(response.body.data).toHaveProperty("earnings_history");
      332 |       expect(Array.isArray(response.body.data.earnings_history)).toBe(true);
      333 |       expect(response.body.data.earnings_history).toHaveLength(2);

      at Object.toHaveProperty (tests/unit/routes/financials.test.js:330:34)

  ‚óè Financials Routes Unit Tests ‚Ä∫ GET /financials/earnings/:symbol ‚Ä∫ should handle earnings limit parameter

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "LIMIT", ArrayContaining ["AAPL", 8]
    Received: "
            SELECT 
              symbol,
              report_date,
              actual_eps,
              estimated_eps,
              surprise_percent,
              revenue_actual,
              revenue_estimated,
              revenue_surprise_percent
            FROM earnings_history
            WHERE symbol = $1
            ORDER BY report_date DESC
            LIMIT 20
          ", ["AAPL"]

    Number of calls: 1

      350 |
      351 |       expect(response.status).toBe(200);
    > 352 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      353 |         expect.stringContaining("LIMIT"),
      354 |         expect.arrayContaining(["AAPL", 8])
      355 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/financials.test.js:352:25)

  ‚óè Financials Routes Unit Tests ‚Ä∫ GET /financials/debug/tables ‚Ä∫ should return table structure information

    expect(received).toHaveProperty(path, value)

    Expected path: "success"
    Received path: []

    Expected value: true
    Received value: {"status": "ok", "tables": {"balance_sheet": {"exists": false, "message": "balance_sheet table does not exist"}, "quarterly_balance_sheet": {"error": "Database connection failed", "exists": false}, "quarterly_cashflow": {"error": "Database connection failed", "exists": false}, "quarterly_income_stmt": {"error": "Database connection failed", "exists": false}, "ttm_cashflow": {"error": "Database connection failed", "exists": false}, "ttm_income_stmt": {"error": "Database connection failed", "exists": false}}, "timestamp": "2025-09-23T16:32:13.529Z"}

      376 |
      377 |       expect(response.status).toBe(200);
    > 378 |       expect(response.body).toHaveProperty("success", true);
          |                             ^
      379 |       expect(response.body).toHaveProperty("tables");
      380 |       expect(Array.isArray(response.body.tables)).toBe(true);
      381 |       expect(response.body.tables).toHaveLength(3);

      at Object.toHaveProperty (tests/unit/routes/financials.test.js:378:29)

  ‚óè Financials Routes Unit Tests ‚Ä∫ GET /financials/debug/tables ‚Ä∫ should handle debug query errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      393 |       const response = await request(app).get("/financials/debug/tables");
      394 |
    > 395 |       expect(response.status).toBe(500);
          |                               ^
      396 |       expect(response.body).toHaveProperty("success", false);
      397 |       expect(response.body.error).toContain("Debug query failed");
      398 |     });

      at Object.toBe (tests/unit/routes/financials.test.js:395:31)

  ‚óè Financials Routes Unit Tests ‚Ä∫ Parameter validation ‚Ä∫ should sanitize symbol parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      407 |         .query({ symbol: "AAPL'; DROP TABLE financial_statements; --" });
      408 |
    > 409 |       expect(response.status).toBe(200);
          |                               ^
      410 |       // Symbol should be sanitized and used safely in prepared statement
      411 |       expect(mockQuery).toHaveBeenCalledWith(
      412 |         expect.any(String),

      at Object.toBe (tests/unit/routes/financials.test.js:409:31)

  ‚óè Financials Routes Unit Tests ‚Ä∫ Parameter validation ‚Ä∫ should handle invalid symbol format

    expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 500

      420 |       );
      421 |
    > 422 |       expect(response.status).toBe(400);
          |                               ^
      423 |       expect(response.body).toHaveProperty("success", false);
      424 |       expect(response.body.error).toContain("Invalid symbol format");
      425 |     });

      at Object.toBe (tests/unit/routes/financials.test.js:422:31)

  ‚óè Financials Routes Unit Tests ‚Ä∫ Error handling ‚Ä∫ should handle database connection timeout

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 404

      458 |       const response = await request(app).get("/financials/AAPL");
      459 |
    > 460 |       expect(response.status).toBe(500);
          |                               ^
      461 |       expect(response.body).toHaveProperty("success", false);
      462 |       expect(response.body.error).toContain("timeout");
      463 |     });

      at Object.toBe (tests/unit/routes/financials.test.js:460:31)

  ‚óè Financials Routes Unit Tests ‚Ä∫ Error handling ‚Ä∫ should handle malformed database results

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 404

      468 |       const response = await request(app).get("/financials/AAPL");
      469 |
    > 470 |       expect(response.status).toBe(500);
          |                               ^
      471 |       expect(response.body).toHaveProperty("success", false);
      472 |     });
      473 |   });

      at Object.toBe (tests/unit/routes/financials.test.js:470:31)

FAIL tests/unit/routes/data.test.js
  ‚óè Data Routes Unit Tests ‚Ä∫ GET /data ‚Ä∫ should handle errors gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      77 |       const response = await request(app).get("/data");
      78 |
    > 79 |       expect(response.status).toBe(500);
         |                               ^
      80 |       expect(response.body).toHaveProperty("success", false);
      81 |       expect(response.body).toHaveProperty(
      82 |         "error",

      at Object.toBe (tests/unit/routes/data.test.js:79:31)

  ‚óè Data Routes Unit Tests ‚Ä∫ GET /data/realtime/:symbol ‚Ä∫ should return real-time data for a symbol

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

    - StringContaining "ORDER BY date DESC LIMIT 1",
    + "
          SELECT symbol, date, open, high, low, close, adj_close, volume
          FROM price_daily 
          WHERE symbol = $1 
          ORDER BY date DESC 
          LIMIT 1
        ",
      ["AAPL"],

    Number of calls: 1

      361 |       );
      362 |
    > 363 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      364 |         expect.stringContaining("ORDER BY date DESC LIMIT 1"),
      365 |         ["AAPL"]
      366 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/data.test.js:363:25)

  ‚óè Data Routes Unit Tests ‚Ä∫ GET /data/bulk ‚Ä∫ should return 400 when symbols parameter is missing

    expect(received).toHaveProperty(path, value)

    Expected path: "error"

    Expected value: "symbols parameter is required"
    Received value: "Validation error"

      463 |
      464 |       expect(response.status).toBe(400);
    > 465 |       expect(response.body).toHaveProperty(
          |                             ^
      466 |         "error",
      467 |         "symbols parameter is required"
      468 |       );

      at Object.toHaveProperty (tests/unit/routes/data.test.js:465:29)

FAIL tests/unit/routes/sectors.test.js
  ‚óè Sectors Routes ‚Ä∫ GET /sectors/analysis ‚Ä∫ should return comprehensive sector analysis with default timeframe

    expect(received).toMatchObject(expected)

    - Expected  - 25
    + Received  + 36

    @@ -1,39 +1,50 @@
      Object {
    -   "data": ObjectContaining {
    -     "sectors": ArrayContaining [
    -       ObjectContaining {
    -         "industry": Any<String>,
    -         "metrics": ObjectContaining {
    -           "avg_price": Any<String>,
    -           "performance": ObjectContaining {
    -             "daily_change": Any<String>,
    -             "monthly_change": Any<String>,
    -             "performance_rank": Any<Number>,
    -             "weekly_change": Any<String>,
    +   "data": Object {
    +     "sectors": Array [
    +       Object {
    +         "metrics": Object {
    +           "avg_price": "125.50",
    +           "performance": Object {
    +             "monthly_change": "0.00",
                },
    -           "priced_stocks": Any<Number>,
    -           "stock_count": Any<Number>,
    +           "stock_count": 145,
    +           "technicals": Object {
    +             "avg_momentum": "0.15",
    +             "avg_rsi": "65.20",
                },
    +           "volume": Object {
    +             "total_volume": 0,
    +           },
    +         },
              "sector": "Technology",
            },
    -       ObjectContaining {
    -         "industry": Any<String>,
    -         "metrics": ObjectContaining {
    -           "priced_stocks": Any<Number>,
    -           "stock_count": Any<Number>,
    +       Object {
    +         "metrics": Object {
    +           "avg_price": "98.75",
    +           "performance": Object {
    +             "monthly_change": "0.00",
    +           },
    +           "stock_count": 98,
    +           "technicals": Object {
    +             "avg_momentum": "0.08",
    +             "avg_rsi": "58.10",
    +           },
    +           "volume": Object {
    +             "total_volume": 0,
    +           },
              },
              "sector": "Healthcare",
            },
          ],
    -     "summary": ObjectContaining {
    -       "avg_market_return": Any<String>,
    -       "bearish_sectors": Any<Number>,
    -       "bullish_sectors": Any<Number>,
    -       "neutral_sectors": Any<Number>,
    -       "total_sectors": Any<Number>,
    -       "total_stocks_analyzed": Any<Number>,
    +     "summary": Object {
    +       "avg_market_return": "0.00",
    +       "bearish_sectors": 0,
    +       "bullish_sectors": 0,
    +       "neutral_sectors": 2,
    +       "total_sectors": 2,
    +       "total_stocks_analyzed": 243,
          },
          "timeframe": "daily",
        },
        "success": true,
        "timestamp": Any<String>,

      159 |       const response = await request(app).get("/sectors/analysis").expect(200);
      160 |
    > 161 |       expect(response.body).toMatchObject({
          |                             ^
      162 |         success: true,
      163 |         data: expect.objectContaining({
      164 |           timeframe: "daily",

      at Object.toMatchObject (tests/unit/routes/sectors.test.js:161:29)

  ‚óè Sectors Routes ‚Ä∫ GET /sectors/:sector/details ‚Ä∫ should return detailed sector information

    expect(received).toMatchObject(expected)

    - Expected  - 24
    + Received  + 40

    @@ -1,41 +1,57 @@
      Object {
        "data": Object {
          "industries": Any<Array>,
          "sector": "Technology",
    -     "stocks": ArrayContaining [
    -       ObjectContaining {
    -         "current_price": Any<String>,
    +     "stocks": Array [
    +       Object {
    +         "current_price": "175.25",
              "industry": "Consumer Electronics",
    -         "momentum": ObjectContaining {
    -           "jt_momentum_12_1": Any<String>,
    -           "momentum_3m": Any<String>,
    -           "momentum_6m": Any<String>,
    -           "risk_adjusted": Any<String>,
    -           "strength": Any<String>,
    +         "momentum": Object {
    +           "jt_momentum_12_1": "0.1200",
    +           "momentum_3m": "0.0800",
    +           "momentum_6m": "0.0600",
    +           "risk_adjusted": "0.1000",
    +           "strength": "85.50",
              },
              "name": "Apple Inc.",
    -         "performance": ObjectContaining {
    -           "daily_change": Any<String>,
    -           "monthly_change": Any<String>,
    -           "weekly_change": Any<String>,
    +         "performance": Object {
    +           "monthly_change": "12.50",
              },
    -         "symbol": "AAPL",
    -         "technicals": ObjectContaining {
    -           "macd": Any<String>,
    -           "macd_signal": Any<String>,
    -           "momentum": Any<String>,
    -           "rsi": Any<String>,
    -           "rsi_signal": Any<String>,
    -           "trend": Any<String>,
    +         "technicals": Object {
    +           "macd": "0.0250",
    +           "macd_signal": "bullish",
    +           "momentum": "0.15",
    +           "rsi": "65.20",
    +           "rsi_signal": "neutral",
    +           "trend": "bullish",
              },
    -         "volume": Any<Number>,
    +         "volume": 45000000,
            },
    -       ObjectContaining {
    +       Object {
    +         "current_price": "378.50",
              "industry": "Software Infrastructure",
    +         "momentum": Object {
    +           "jt_momentum_12_1": "0.0600",
    +           "momentum_3m": "0.0400",
    +           "momentum_6m": "0.0300",
    +           "risk_adjusted": "0.0500",
    +           "strength": "72.30",
    +         },
              "name": "Microsoft Corporation",
    -         "symbol": "MSFT",
    +         "performance": Object {
    +           "monthly_change": "9.75",
    +         },
    +         "technicals": Object {
    +           "macd": "0.0150",
    +           "macd_signal": "bullish",
    +           "momentum": "0.08",
    +           "rsi": "58.10",
    +           "rsi_signal": "neutral",
    +           "trend": "bullish",
    +         },
    +         "volume": 28000000,
            },
          ],
          "summary": ObjectContaining {
            "avg_jt_momentum": Any<String>,
            "avg_monthly_return": Any<String>,

      416 |         .expect(200);
      417 |
    > 418 |       expect(response.body).toMatchObject({
          |                             ^
      419 |         success: true,
      420 |         data: {
      421 |           sector: "Technology",

      at Object.toMatchObject (tests/unit/routes/sectors.test.js:418:29)

FAIL tests/unit/routes/recommendations.test.js
  ‚óè Recommendations Routes Unit Tests ‚Ä∫ GET /recommendations ‚Ä∫ should return recommendations with mocked data

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      62 |       const response = await request(app).get("/recommendations");
      63 |
    > 64 |       expect(response.status).toBe(200);
         |                               ^
      65 |       expect(response.body).toHaveProperty("success", true);
      66 |       expect(response.body).toHaveProperty("recommendations");
      67 |       expect(response.body).toHaveProperty("summary");

      at Object.toBe (tests/unit/routes/recommendations.test.js:64:31)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ GET /recommendations ‚Ä∫ should handle query parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      106 |       });
      107 |
    > 108 |       expect(response.status).toBe(200);
          |                               ^
      109 |       expect(response.body).toHaveProperty("success", true);
      110 |       expect(response.body.filters).toHaveProperty("symbol", "AAPL");
      111 |       expect(response.body.filters).toHaveProperty("category", "buy");

      at Object.toBe (tests/unit/routes/recommendations.test.js:108:31)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ GET /recommendations ‚Ä∫ should include comprehensive troubleshooting information

    expect(received).toHaveProperty(path)

    Matcher error: received value must not be null nor undefined

    Received has value: undefined

      119 |       const response = await request(app).get("/recommendations");
      120 |
    > 121 |       expect(response.body.troubleshooting).toHaveProperty("suggestion");
          |                                             ^
      122 |       expect(response.body.troubleshooting).toHaveProperty("required_setup");
      123 |       expect(response.body.troubleshooting).toHaveProperty("status");
      124 |       expect(Array.isArray(response.body.troubleshooting.required_setup)).toBe(

      at Object.toHaveProperty (tests/unit/routes/recommendations.test.js:121:45)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ GET /recommendations ‚Ä∫ should handle different category parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 501
    Received: 500

      141 |           .query({ category });
      142 |
    > 143 |         expect(response.status).toBe(501);
          |                                 ^
      144 |         expect(response.body.filters).toHaveProperty("category", category);
      145 |         expect(response.body).toHaveProperty("success", false);
      146 |       }

      at Object.toBe (tests/unit/routes/recommendations.test.js:143:33)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ GET /recommendations ‚Ä∫ should default to all category

    expect(received).toBe(expected) // Object.is equality

    Expected: 501
    Received: 500

      152 |         .query({ symbol: "AAPL" });
      153 |
    > 154 |       expect(response.status).toBe(501);
          |                               ^
      155 |       expect(response.body.filters).toHaveProperty("category", "all"); // default value
      156 |     });
      157 |

      at Object.toBe (tests/unit/routes/recommendations.test.js:154:31)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ GET /recommendations ‚Ä∫ should handle different timeframe parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 501
    Received: 500

      164 |           .query({ timeframe });
      165 |
    > 166 |         expect(response.status).toBe(501);
          |                                 ^
      167 |         expect(response.body.filters).toHaveProperty("timeframe", timeframe);
      168 |         expect(response.body).toHaveProperty("success", false);
      169 |       }

      at Object.toBe (tests/unit/routes/recommendations.test.js:166:33)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ GET /recommendations ‚Ä∫ should handle analyst filter parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 501
    Received: 500

      175 |         .query({ analyst: "morgan_stanley" });
      176 |
    > 177 |       expect(response.status).toBe(501);
          |                               ^
      178 |       expect(response.body.filters).toHaveProperty("analyst", "morgan_stanley");
      179 |       expect(response.body).toHaveProperty("success", false);
      180 |     });

      at Object.toBe (tests/unit/routes/recommendations.test.js:177:31)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ GET /recommendations ‚Ä∫ should handle limit parameter and parse as integer

    expect(received).toBe(expected) // Object.is equality

    Expected: 501
    Received: 500

      185 |         .query({ limit: "100" });
      186 |
    > 187 |       expect(response.status).toBe(501);
          |                               ^
      188 |       expect(response.body.filters).toHaveProperty("limit", 100); // Should be parsed as number
      189 |       expect(response.body).toHaveProperty("success", false);
      190 |     });

      at Object.toBe (tests/unit/routes/recommendations.test.js:187:31)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ GET /recommendations ‚Ä∫ should handle default limit parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 501
    Received: 500

      193 |       const response = await request(app).get("/recommendations");
      194 |
    > 195 |       expect(response.status).toBe(501);
          |                               ^
      196 |       expect(response.body.filters).toHaveProperty("limit", 20); // default value
      197 |     });
      198 |

      at Object.toBe (tests/unit/routes/recommendations.test.js:195:31)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ GET /recommendations ‚Ä∫ should handle symbol parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 501
    Received: 500

      202 |         .query({ symbol: "GOOGL" });
      203 |
    > 204 |       expect(response.status).toBe(501);
          |                               ^
      205 |       expect(response.body).toHaveProperty("symbol", "GOOGL");
      206 |       expect(response.body).toHaveProperty("success", false);
      207 |     });

      at Object.toBe (tests/unit/routes/recommendations.test.js:204:31)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ GET /recommendations ‚Ä∫ should handle no symbol parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 501
    Received: 500

      210 |       const response = await request(app).get("/recommendations");
      211 |
    > 212 |       expect(response.status).toBe(501);
          |                               ^
      213 |       expect(response.body).toHaveProperty("symbol", null);
      214 |       expect(response.body).toHaveProperty("success", false);
      215 |     });

      at Object.toBe (tests/unit/routes/recommendations.test.js:212:31)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ Error handling ‚Ä∫ should handle implementation errors gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: 501
    Received: 500

      257 |
      258 |       // Should still return the not implemented response
    > 259 |       expect(response.status).toBe(501);
          |                               ^
      260 |       expect(response.body).toHaveProperty("success", false);
      261 |
      262 |       // Restore console.error

      at Object.toBe (tests/unit/routes/recommendations.test.js:259:31)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ Error handling ‚Ä∫ should handle malformed query parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 501
    Received: 500

      271 |       });
      272 |
    > 273 |       expect(response.status).toBe(501);
          |                               ^
      274 |       expect(response.body).toHaveProperty("success", false);
      275 |       expect(response.body.filters).toHaveProperty("limit", NaN); // parseInt of invalid string
      276 |       expect(response.body.filters).toHaveProperty(

      at Object.toBe (tests/unit/routes/recommendations.test.js:273:31)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ Error handling ‚Ä∫ should handle special characters in parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 501
    Received: 500

      287 |       });
      288 |
    > 289 |       expect(response.status).toBe(501);
          |                               ^
      290 |       expect(response.body).toHaveProperty("success", false);
      291 |       expect(response.body).toHaveProperty(
      292 |         "symbol",

      at Object.toBe (tests/unit/routes/recommendations.test.js:289:31)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ Error handling ‚Ä∫ should handle empty string parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 501
    Received: 500

      307 |       });
      308 |
    > 309 |       expect(response.status).toBe(501);
          |                               ^
      310 |       expect(response.body).toHaveProperty("symbol", "");
      311 |       expect(response.body.filters).toHaveProperty("category", "");
      312 |       expect(response.body.filters).toHaveProperty("analyst", "");

      at Object.toBe (tests/unit/routes/recommendations.test.js:309:31)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ Response format ‚Ä∫ should return consistent JSON response format

    expect(received).toMatch(expected)

    Expected pattern: /json/
    Received string:  "text/html; charset=utf-8"

      319 |       const response = await request(app).get("/recommendations");
      320 |
    > 321 |       expect(response.headers["content-type"]).toMatch(/json/);
          |                                                ^
      322 |       expect(typeof response.body).toBe("object");
      323 |       expect(response.body).toHaveProperty("success");
      324 |       expect(response.body).toHaveProperty("timestamp");

      at Object.toMatch (tests/unit/routes/recommendations.test.js:321:48)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ Response format ‚Ä∫ should include detailed implementation requirements

    expect(received).toHaveProperty(path)

    Expected path: "details"
    Received path: []

    Received value: {}

      328 |       const response = await request(app).get("/recommendations");
      329 |
    > 330 |       expect(response.body).toHaveProperty("details");
          |                             ^
      331 |       expect(response.body.details).toContain("analyst recommendations data");
      332 |       expect(response.body).toHaveProperty("troubleshooting");
      333 |       expect(response.body.troubleshooting).toHaveProperty("required_setup");

      at Object.toHaveProperty (tests/unit/routes/recommendations.test.js:330:29)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ Response format ‚Ä∫ should preserve query parameters in response

    expect(received).toHaveProperty(path, value)

    Expected path: "symbol"
    Received path: []

    Expected value: "TSLA"
    Received value: {}

      344 |       });
      345 |
    > 346 |       expect(response.body).toHaveProperty("symbol", "TSLA");
          |                             ^
      347 |       expect(response.body.filters).toHaveProperty("category", "buy");
      348 |       expect(response.body.filters).toHaveProperty("limit", 25);
      349 |     });

      at Object.toHaveProperty (tests/unit/routes/recommendations.test.js:346:29)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ Response format ‚Ä∫ should include all filter parameters in response

    expect(received).toHaveProperty(path)

    Expected path: "filters"
    Received path: []

    Received value: {}

      358 |       });
      359 |
    > 360 |       expect(response.body).toHaveProperty("filters");
          |                             ^
      361 |       expect(response.body.filters).toHaveProperty("category", "hold");
      362 |       expect(response.body.filters).toHaveProperty("analyst", "jp_morgan");
      363 |       expect(response.body.filters).toHaveProperty("timeframe", "monthly");

      at Object.toHaveProperty (tests/unit/routes/recommendations.test.js:360:29)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ Future implementation readiness ‚Ä∫ should be ready for future implementation with proper parameter handling

    expect(received).toHaveProperty(path)

    Expected path: "symbol"
    Received path: []

    Received value: {}

      377 |
      378 |       // Response structure should support future implementation
    > 379 |       expect(response.body).toHaveProperty("symbol");
          |                             ^
      380 |       expect(response.body).toHaveProperty("filters");
      381 |       expect(response.body).toHaveProperty("timestamp");
      382 |

      at Object.toHaveProperty (tests/unit/routes/recommendations.test.js:379:29)

  ‚óè Recommendations Routes Unit Tests ‚Ä∫ Future implementation readiness ‚Ä∫ should handle all expected recommendation categories

    expect(received).toHaveProperty(path, value)

    Matcher error: received value must not be null nor undefined

    Received has value: undefined

      398 |           .query({ category });
      399 |
    > 400 |         expect(response.body.filters).toHaveProperty("category", category);
          |                                       ^
      401 |         // Future implementation should support these categories
      402 |       }
      403 |     });

      at Object.toHaveProperty (tests/unit/routes/recommendations.test.js:400:39)

FAIL tests/unit/routes/liveData.test.js
  ‚óè Live Data Routes Unit Tests ‚Ä∫ GET /live-data/ ‚Ä∫ should return live data info

    expect(received).toHaveProperty(path)

    Expected path: "status"
    Received path: []

    Received value: {"data": {"authentication": "Required for most endpoints", "endpoints": ["/status - Get live data service status", "/stream/:symbols - Stream real-time data for symbols (requires auth)", "/latest/:symbols - Get latest data for symbols (requires auth)", "/health - Health check endpoint", "/metrics - Performance metrics"], "message": "Live Data API - Ready", "status": "operational", "timestamp": "2025-09-23T16:32:14.249Z"}, "success": true, "timestamp": "2025-09-23T16:32:14.249Z"}

      33 |
      34 |       expect(response.body).toHaveProperty("success");
    > 35 |       expect(response.body).toHaveProperty("status");
         |                             ^
      36 |     });
      37 |   });
      38 |

      at Object.toHaveProperty (tests/unit/routes/liveData.test.js:35:29)

  ‚óè Live Data Routes Unit Tests ‚Ä∫ GET /live-data/quotes ‚Ä∫ should return live quotes with proper structure

    expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [401]

      67 |         expect(response.body.data.summary).toHaveProperty("losers");
      68 |       } else {
    > 69 |         expect([401]).toContain(response.status);
         |                       ^
      70 |         expect(response.body).toHaveProperty("success", false);
      71 |       }
      72 |     });

      at Object.toContain (tests/unit/routes/liveData.test.js:69:23)

  ‚óè Live Data Routes Unit Tests ‚Ä∫ GET /live-data/stream ‚Ä∫ should setup SSE stream with proper headers

    expect(received).toBe(expected) // Object.is equality

    Expected: "text/event-stream"
    Received: "application/json; charset=utf-8"

      107 |       if (response.status === 200) {
      108 |         // Check SSE headers are set
    > 109 |         expect(response.headers["content-type"]).toBe("text/event-stream");
          |                                                  ^
      110 |         expect(response.headers["cache-control"]).toBe("no-cache");
      111 |         expect(response.headers["connection"]).toBe("keep-alive");
      112 |       } else {

      at Object.toBe (tests/unit/routes/liveData.test.js:109:50)

  ‚óè Live Data Routes Unit Tests ‚Ä∫ GET /live-data/optimization ‚Ä∫ should return optimization status

    expect(received).toContain(expected) // indexOf

    Expected value: 404
    Received array: [401]

      139 |         expect(Array.isArray(response.body.data.recommendations)).toBe(true);
      140 |       } else {
    > 141 |         expect([401]).toContain(response.status);
          |                       ^
      142 |       }
      143 |     });
      144 |   });

      at Object.toContain (tests/unit/routes/liveData.test.js:141:23)

  ‚óè Live Data Routes Unit Tests ‚Ä∫ POST /live-data/admin/toggle-stream ‚Ä∫ should handle stream toggle for admin

    expect(received).toContain(expected) // indexOf

    Expected value: 404
    Received array: [401, 403]

      157 |         expect(response.body.data).toHaveProperty("active_connections");
      158 |       } else {
    > 159 |         expect([401, 403]).toContain(response.status);
          |                            ^
      160 |       }
      161 |     });
      162 |

      at Object.toContain (tests/unit/routes/liveData.test.js:159:28)

  ‚óè Live Data Routes Unit Tests ‚Ä∫ POST /live-data/admin/toggle-stream ‚Ä∫ should validate toggle request body

    expect(received).toContain(expected) // indexOf

    Expected value: 404
    Received array: [400, 422]

      168 |
      169 |       if (response.status !== 401) {
    > 170 |         expect([400, 422]).toContain(response.status);
          |                            ^
      171 |         expect(response.body).toHaveProperty("success", false);
      172 |       }
      173 |     });

      at Object.toContain (tests/unit/routes/liveData.test.js:170:28)

  ‚óè Live Data Routes Unit Tests ‚Ä∫ POST /live-data/admin/clear-cache ‚Ä∫ should handle cache clearing for admin

    expect(received).toContain(expected) // indexOf

    Expected value: 404
    Received array: [401, 403]

      186 |         expect(response.body.data).toHaveProperty("cleared_entries");
      187 |       } else {
    > 188 |         expect([401, 403]).toContain(response.status);
          |                            ^
      189 |       }
      190 |     });
      191 |   });

      at Object.toContain (tests/unit/routes/liveData.test.js:188:28)

FAIL tests/unit/routes/screener.test.js
  ‚óè Screener Routes Unit Tests ‚Ä∫ GET /screener/screen (authenticated) ‚Ä∫ should handle volume filter parameters

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "COALESCE(md.volume, pd.volume) >=", ArrayContaining [1000000]
    Received
           1: "
          SELECT
            s.symbol,
            COALESCE(cp.short_name, cp.long_name) as company_name,
            cp.sector,
            s.exchange,
            pd.close as price,
            pd.volume,
            pd.date as price_date,
            s.market_cap,
            km.trailing_pe as pe_ratio,
            km.dividend_yield,
            sc.overall_score as factor_score,
            CASE
              WHEN sc.overall_score >= 80 THEN 'A'
              WHEN sc.overall_score >= 70 THEN 'B'
              WHEN sc.overall_score >= 60 THEN 'C'
              WHEN sc.overall_score >= 50 THEN 'D'
              ELSE 'F'
            END as factor_grade,
            NULL as sma_20,
            NULL as sma_50,
            NULL as sma_200,
            CASE
              WHEN pd.close > LAG(pd.close, 63) OVER (PARTITION BY s.symbol ORDER BY pd.date)
              THEN ((pd.close / LAG(pd.close, 63) OVER (PARTITION BY s.symbol ORDER BY pd.date)) - 1) * 100
              ELSE NULL
            END as price_momentum_3m,
            CASE
              WHEN pd.close > LAG(pd.close, 252) OVER (PARTITION BY s.symbol ORDER BY pd.date)
              THEN ((pd.close / LAG(pd.close, 252) OVER (PARTITION BY s.symbol ORDER BY pd.date)) - 1) * 100
              ELSE NULL
            END as price_momentum_12m,
            CASE
              WHEN pd.close IS NOT NULL AND pd.close > 0 AND LAG(pd.close) OVER (PARTITION BY s.symbol ORDER BY pd.date) > 0
              THEN ((pd.close - LAG(pd.close) OVER (PARTITION BY s.symbol ORDER BY pd.date)) / LAG(pd.close) OVER (PARTITION BY s.symbol ORDER BY pd.date)) * 100
              ELSE 0
            END as price_change_percent,
            NULL as rsi,
            NULL as macd,
            NULL as macd_signal
          FROM fundamental_metrics s
          LEFT JOIN fundamental_metrics cp ON s.symbol = cp.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, date, close, volume, open, high, low
            FROM price_daily
            WHERE date = (SELECT MAX(date) FROM price_daily WHERE symbol = price_daily.symbol)
              AND close IS NOT NULL AND close > 0
            ORDER BY symbol, date DESC
          ) pd ON s.symbol = pd.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, price_to_earnings as trailing_pe, NULL as dividend_yield, NULL as peg_ratio, price_to_book
            FROM financial_ratios
            ORDER BY symbol, fiscal_year DESC
          ) km ON s.symbol = km.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, overall_score
            FROM stock_scores
            ORDER BY symbol, date DESC
          ) sc ON s.symbol = sc.symbol
          WHERE pd.close IS NOT NULL AND pd.close > 0
          AND pd.volume >= $1
          ORDER BY s.market_cap DESC NULLS LAST
          LIMIT $2 OFFSET $3
        ", [1000000, 50, 0]
           2: "
          SELECT COUNT(*) as total
          FROM fundamental_metrics s
          LEFT JOIN fundamental_metrics cp ON s.symbol = cp.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, date, close, volume, open, high, low
            FROM price_daily
            WHERE date = (SELECT MAX(date) FROM price_daily WHERE symbol = price_daily.symbol)
              AND close IS NOT NULL AND close > 0
            ORDER BY symbol, date DESC
          ) pd ON s.symbol = pd.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, price_to_earnings as trailing_pe, NULL as dividend_yield, NULL as peg_ratio, price_to_book
            FROM financial_ratios
            ORDER BY symbol, fiscal_year DESC
          ) km ON s.symbol = km.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, overall_score
            FROM stock_scores
            ORDER BY symbol, date DESC
          ) sc ON s.symbol = sc.symbol
          WHERE pd.close IS NOT NULL AND pd.close > 0
          AND pd.volume >= $1
        ", [1000000]

    Number of calls: 2

      200 |
      201 |       expect(response.status).toBe(200);
    > 202 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      203 |         expect.stringContaining("COALESCE(md.volume, pd.volume) >="),
      204 |         expect.arrayContaining([1000000])
      205 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/screener.test.js:202:25)

  ‚óè Screener Routes Unit Tests ‚Ä∫ GET /screener/screen (authenticated) ‚Ä∫ should handle dividend yield filters

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "km.dividend_yield >=", ArrayContaining [2, 8]
    Received
           1: "
          SELECT
            s.symbol,
            COALESCE(cp.short_name, cp.long_name) as company_name,
            cp.sector,
            s.exchange,
            pd.close as price,
            pd.volume,
            pd.date as price_date,
            s.market_cap,
            km.trailing_pe as pe_ratio,
            km.dividend_yield,
            sc.overall_score as factor_score,
            CASE
              WHEN sc.overall_score >= 80 THEN 'A'
              WHEN sc.overall_score >= 70 THEN 'B'
              WHEN sc.overall_score >= 60 THEN 'C'
              WHEN sc.overall_score >= 50 THEN 'D'
              ELSE 'F'
            END as factor_grade,
            NULL as sma_20,
            NULL as sma_50,
            NULL as sma_200,
            CASE
              WHEN pd.close > LAG(pd.close, 63) OVER (PARTITION BY s.symbol ORDER BY pd.date)
              THEN ((pd.close / LAG(pd.close, 63) OVER (PARTITION BY s.symbol ORDER BY pd.date)) - 1) * 100
              ELSE NULL
            END as price_momentum_3m,
            CASE
              WHEN pd.close > LAG(pd.close, 252) OVER (PARTITION BY s.symbol ORDER BY pd.date)
              THEN ((pd.close / LAG(pd.close, 252) OVER (PARTITION BY s.symbol ORDER BY pd.date)) - 1) * 100
              ELSE NULL
            END as price_momentum_12m,
            CASE
              WHEN pd.close IS NOT NULL AND pd.close > 0 AND LAG(pd.close) OVER (PARTITION BY s.symbol ORDER BY pd.date) > 0
              THEN ((pd.close - LAG(pd.close) OVER (PARTITION BY s.symbol ORDER BY pd.date)) / LAG(pd.close) OVER (PARTITION BY s.symbol ORDER BY pd.date)) * 100
              ELSE 0
            END as price_change_percent,
            NULL as rsi,
            NULL as macd,
            NULL as macd_signal
          FROM fundamental_metrics s
          LEFT JOIN fundamental_metrics cp ON s.symbol = cp.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, date, close, volume, open, high, low
            FROM price_daily
            WHERE date = (SELECT MAX(date) FROM price_daily WHERE symbol = price_daily.symbol)
              AND close IS NOT NULL AND close > 0
            ORDER BY symbol, date DESC
          ) pd ON s.symbol = pd.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, price_to_earnings as trailing_pe, NULL as dividend_yield, NULL as peg_ratio, price_to_book
            FROM financial_ratios
            ORDER BY symbol, fiscal_year DESC
          ) km ON s.symbol = km.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, overall_score
            FROM stock_scores
            ORDER BY symbol, date DESC
          ) sc ON s.symbol = sc.symbol
          WHERE pd.close IS NOT NULL AND pd.close > 0¬∑¬∑¬∑¬∑¬∑¬∑¬∑
          ORDER BY s.market_cap DESC NULLS LAST
          LIMIT $1 OFFSET $2
        ", [50, 0]
           2: "
          SELECT COUNT(*) as total
          FROM fundamental_metrics s
          LEFT JOIN fundamental_metrics cp ON s.symbol = cp.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, date, close, volume, open, high, low
            FROM price_daily
            WHERE date = (SELECT MAX(date) FROM price_daily WHERE symbol = price_daily.symbol)
              AND close IS NOT NULL AND close > 0
            ORDER BY symbol, date DESC
          ) pd ON s.symbol = pd.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, price_to_earnings as trailing_pe, NULL as dividend_yield, NULL as peg_ratio, price_to_book
            FROM financial_ratios
            ORDER BY symbol, fiscal_year DESC
          ) km ON s.symbol = km.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, overall_score
            FROM stock_scores
            ORDER BY symbol, date DESC
          ) sc ON s.symbol = sc.symbol
          WHERE pd.close IS NOT NULL AND pd.close > 0¬∑¬∑¬∑¬∑¬∑¬∑¬∑
        ", []

    Number of calls: 2

      246 |
      247 |       expect(response.status).toBe(200);
    > 248 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      249 |         expect.stringContaining("km.dividend_yield >="),
      250 |         expect.arrayContaining([2, 8])
      251 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/screener.test.js:248:25)

  ‚óè Screener Routes Unit Tests ‚Ä∫ GET /screener/screen (authenticated) ‚Ä∫ should handle multiple filters combined

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringMatching /pd\.close >= .* AND pd\.close <= .* AND cp\.market_cap >= .* AND cp\.sector = .* AND km\.trailing_pe >= .* AND km\.trailing_pe <=/, ArrayContaining [50, 200, 5000000000, "Technology", 15, 25]
    Received
           1: "
          SELECT
            s.symbol,
            COALESCE(cp.short_name, cp.long_name) as company_name,
            cp.sector,
            s.exchange,
            pd.close as price,
            pd.volume,
            pd.date as price_date,
            s.market_cap,
            km.trailing_pe as pe_ratio,
            km.dividend_yield,
            sc.overall_score as factor_score,
            CASE
              WHEN sc.overall_score >= 80 THEN 'A'
              WHEN sc.overall_score >= 70 THEN 'B'
              WHEN sc.overall_score >= 60 THEN 'C'
              WHEN sc.overall_score >= 50 THEN 'D'
              ELSE 'F'
            END as factor_grade,
            NULL as sma_20,
            NULL as sma_50,
            NULL as sma_200,
            CASE
              WHEN pd.close > LAG(pd.close, 63) OVER (PARTITION BY s.symbol ORDER BY pd.date)
              THEN ((pd.close / LAG(pd.close, 63) OVER (PARTITION BY s.symbol ORDER BY pd.date)) - 1) * 100
              ELSE NULL
            END as price_momentum_3m,
            CASE
              WHEN pd.close > LAG(pd.close, 252) OVER (PARTITION BY s.symbol ORDER BY pd.date)
              THEN ((pd.close / LAG(pd.close, 252) OVER (PARTITION BY s.symbol ORDER BY pd.date)) - 1) * 100
              ELSE NULL
            END as price_momentum_12m,
            CASE
              WHEN pd.close IS NOT NULL AND pd.close > 0 AND LAG(pd.close) OVER (PARTITION BY s.symbol ORDER BY pd.date) > 0
              THEN ((pd.close - LAG(pd.close) OVER (PARTITION BY s.symbol ORDER BY pd.date)) / LAG(pd.close) OVER (PARTITION BY s.symbol ORDER BY pd.date)) * 100
              ELSE 0
            END as price_change_percent,
            NULL as rsi,
            NULL as macd,
            NULL as macd_signal
          FROM fundamental_metrics s
          LEFT JOIN fundamental_metrics cp ON s.symbol = cp.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, date, close, volume, open, high, low
            FROM price_daily
            WHERE date = (SELECT MAX(date) FROM price_daily WHERE symbol = price_daily.symbol)
              AND close IS NOT NULL AND close > 0
            ORDER BY symbol, date DESC
          ) pd ON s.symbol = pd.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, price_to_earnings as trailing_pe, NULL as dividend_yield, NULL as peg_ratio, price_to_book
            FROM financial_ratios
            ORDER BY symbol, fiscal_year DESC
          ) km ON s.symbol = km.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, overall_score
            FROM stock_scores
            ORDER BY symbol, date DESC
          ) sc ON s.symbol = sc.symbol
          WHERE pd.close IS NOT NULL AND pd.close > 0
          AND pd.close >= $1 AND pd.close <= $2 AND s.market_cap >= $3 AND km.trailing_pe >= $4 AND km.trailing_pe <= $5 AND cp.sector = $6
          ORDER BY s.market_cap DESC NULLS LAST
          LIMIT $7 OFFSET $8
        ", [50, 200, 5000000000, 15, 25, "Technology", 50, 0]
           2: "
          SELECT COUNT(*) as total
          FROM fundamental_metrics s
          LEFT JOIN fundamental_metrics cp ON s.symbol = cp.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, date, close, volume, open, high, low
            FROM price_daily
            WHERE date = (SELECT MAX(date) FROM price_daily WHERE symbol = price_daily.symbol)
              AND close IS NOT NULL AND close > 0
            ORDER BY symbol, date DESC
          ) pd ON s.symbol = pd.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, price_to_earnings as trailing_pe, NULL as dividend_yield, NULL as peg_ratio, price_to_book
            FROM financial_ratios
            ORDER BY symbol, fiscal_year DESC
          ) km ON s.symbol = km.symbol
          LEFT JOIN (
            SELECT DISTINCT ON (symbol)
              symbol, overall_score
            FROM stock_scores
            ORDER BY symbol, date DESC
          ) sc ON s.symbol = sc.symbol
          WHERE pd.close IS NOT NULL AND pd.close > 0
          AND pd.close >= $1 AND pd.close <= $2 AND s.market_cap >= $3 AND km.trailing_pe >= $4 AND km.trailing_pe <= $5 AND cp.sector = $6
        ", [50, 200, 5000000000, 15, 25, "Technology"]

    Number of calls: 2

      294 |
      295 |       expect(response.status).toBe(200);
    > 296 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      297 |         expect.stringMatching(
      298 |           /pd\.close >= .* AND pd\.close <= .* AND cp\.market_cap >= .* AND cp\.sector = .* AND km\.trailing_pe >= .* AND km\.trailing_pe <=/
      299 |         ),

      at Object.toHaveBeenCalledWith (tests/unit/routes/screener.test.js:296:25)

FAIL tests/integration/risk-management-workflow.integration.test.js
  ‚óè Risk Management Workflow Integration Tests ‚Ä∫ Complete Risk Management Workflow ‚Ä∫ should execute full risk management lifecycle

    expected 200 "OK", got 401 "Unauthorized"

      76 |         .post("/api/trading/risk/limits")
      77 |         .send(riskLimits)
    > 78 |         .expect(200);
         |          ^
      79 |
      80 |       expect(limitsResponse.body.success).toBe(true);
      81 |       expect(limitsResponse.body.data.maxDrawdown).toBe(15.0);

      at Object.expect (tests/integration/risk-management-workflow.integration.test.js:78:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Risk Management Workflow Integration Tests ‚Ä∫ Complete Risk Management Workflow ‚Ä∫ should handle empty portfolio risk analysis

    TypeError: Cannot read properties of undefined (reading 'totalPositions')

      385 |
      386 |       expect(response.body.success).toBe(true);
    > 387 |       expect(response.body.data.portfolioSummary.totalPositions).toBe(0);
          |                                                  ^
      388 |       expect(response.body.data.portfolioSummary.totalValue).toBe(0);
      389 |       expect(response.body.data.riskMetrics.riskLevel).toBe("low");
      390 |       expect(response.body.data.recommendations).toContain(

      at Object.totalPositions (tests/integration/risk-management-workflow.integration.test.js:387:50)

  ‚óè Risk Management Workflow Integration Tests ‚Ä∫ Complete Risk Management Workflow ‚Ä∫ should handle multiple rapid position closes

    error: column "total_value" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at Object.<anonymous> (tests/integration/risk-management-workflow.integration.test.js:400:9)

  ‚óè Risk Management Workflow Integration Tests ‚Ä∫ Complete Risk Management Workflow ‚Ä∫ should maintain data consistency across concurrent operations

    error: column "total_value" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at Object.<anonymous> (tests/integration/risk-management-workflow.integration.test.js:448:7)

  ‚óè Risk Management Workflow Integration Tests ‚Ä∫ Risk Limit Compliance Checking ‚Ä∫ should detect and report risk limit violations

    error: column "total_value" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at Object.<anonymous> (tests/integration/risk-management-workflow.integration.test.js:510:7)

FAIL tests/unit/routes/etf.test.js
  ‚óè ETF Route - Comprehensive Unit Tests ‚Ä∫ GET /api/etf/:symbol/holdings ‚Ä∫ should handle missing symbol parameter

    expected 404 "Not Found", got 200 "OK"

      164 |       const response = await request(app)
      165 |         .get("/api/etf/ /holdings")
    > 166 |         .expect(404); // Empty symbol becomes " " which gets processed as ETF not found
          |          ^
      167 |
      168 |       expect(response.body.success).toBe(false);
      169 |       expect(response.body.error).toBe("ETF not found");

      at Object.expect (tests/unit/routes/etf.test.js:166:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè ETF Route - Comprehensive Unit Tests ‚Ä∫ GET /api/etf/:symbol/holdings ‚Ä∫ should handle ETF not found

    expect(received).toContain(expected) // indexOf

    Expected substring: "No holdings data found for ETF symbol: INVALID"
    Received string:    "ETF symbol INVALID not found in database. Please verify the symbol is correct."

      179 |       expect(response.body.success).toBe(false);
      180 |       expect(response.body.error).toBe("ETF not found");
    > 181 |       expect(response.body.message).toContain(
          |                                     ^
      182 |         "No holdings data found for ETF symbol: INVALID"
      183 |       );
      184 |     });

      at Object.toContain (tests/unit/routes/etf.test.js:181:37)

  ‚óè ETF Route - Comprehensive Unit Tests ‚Ä∫ GET /api/etf/:symbol/holdings ‚Ä∫ should handle null database results gracefully

    expected 404 "Not Found", got 200 "OK"

      189 |       const response = await request(app)
      190 |         .get("/api/etf/SPY/holdings")
    > 191 |         .expect(404);
          |          ^
      192 |
      193 |       expect(response.body.success).toBe(false);
      194 |       expect(response.body.error).toBe("ETF not found");

      at Object.expect (tests/unit/routes/etf.test.js:191:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè ETF Route - Comprehensive Unit Tests ‚Ä∫ GET /api/etf/:symbol/holdings ‚Ä∫ should handle database table not found error

    expected 500 "Internal Server Error", got 200 "OK"

      203 |       const response = await request(app)
      204 |         .get("/api/etf/SPY/holdings")
    > 205 |         .expect(500);
          |          ^
      206 |
      207 |       expect(response.body.success).toBe(false);
      208 |       expect(response.body.error).toBe("Database table not found");

      at Object.expect (tests/unit/routes/etf.test.js:205:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè ETF Route - Comprehensive Unit Tests ‚Ä∫ Edge Cases and Error Handling ‚Ä∫ should handle very large limit parameter

    expected 404 "Not Found", got 200 "OK"

      416 |       const response = await request(app)
      417 |         .get("/api/etf/SPY/holdings?limit=99999")
    > 418 |         .expect(404);
          |          ^
      419 |
      420 |       expect(mockQuery).toHaveBeenCalledWith(
      421 |         expect.stringContaining("LIMIT $2"),

      at Object.expect (tests/unit/routes/etf.test.js:418:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè ETF Route - Comprehensive Unit Tests ‚Ä∫ Edge Cases and Error Handling ‚Ä∫ should handle non-numeric limit parameter

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "LIMIT $2", ["SPY", NaN]
    Received
           1
              "
          SELECT
            h.holding_symbol, h.company_name, h.weight_percent,
            h.shares_held, h.market_value, h.sector,
            e.fund_name, e.total_assets, e.expense_ratio, e.dividend_yield
          FROM etf_holdings h
          JOIN etfs e ON h.etf_symbol = e.symbol
          WHERE h.etf_symbol = $1
          ORDER BY h.weight_percent DESC
          LIMIT $2
        ",
              Array [
                "SPY",
            -   NaN,
            +   25,
              ],
           2
              "
          SELECT sector, SUM(weight_percent) as total_weight
          FROM etf_holdings¬∑
          WHERE etf_symbol = $1¬∑
          GROUP BY sector
          ORDER BY total_weight DESC
        ",
              Array [
                "SPY",
            -   NaN,
              ],

    Number of calls: 2

      447 |
      448 |       // Should fallback to default limit of 25 but parseInt converts 'invalid' to NaN
    > 449 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      450 |         expect.stringContaining("LIMIT $2"),
      451 |         ["SPY", NaN]
      452 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/etf.test.js:449:25)

  ‚óè ETF Route - Comprehensive Unit Tests ‚Ä∫ Edge Cases and Error Handling ‚Ä∫ should handle negative limit parameter

    expected 404 "Not Found", got 200 "OK"

      460 |       const response = await request(app)
      461 |         .get("/api/etf/SPY/holdings?limit=-10")
    > 462 |         .expect(404);
          |          ^
      463 |
      464 |       expect(mockQuery).toHaveBeenCalledWith(
      465 |         expect.stringContaining("LIMIT $2"),

      at Object.expect (tests/unit/routes/etf.test.js:462:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

FAIL tests/unit/utils/database.test.js
  ‚óè Database Utilities - Unit Tests ‚Ä∫ Connection Pool Management ‚Ä∫ should initialize database and return pool object

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      112 |       const result = await initializeDatabase();
      113 |
    > 114 |       expect(mockPoolConstructor).toHaveBeenCalled();
          |                                   ^
      115 |       expect(result).toBeDefined();
      116 |       expect(typeof result).toBe("object");
      117 |     });

      at Object.toHaveBeenCalled (tests/unit/utils/database.test.js:114:35)

  ‚óè Database Utilities - Unit Tests ‚Ä∫ Connection Pool Management ‚Ä∫ should handle initialization with environment variables

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      126 |
      127 |       expect(result).toBeDefined();
    > 128 |       expect(mockPool.on).toHaveBeenCalled();
          |                           ^
      129 |     });
      130 |   });
      131 |

      at Object.toHaveBeenCalled (tests/unit/utils/database.test.js:128:27)

  ‚óè Database Utilities - Unit Tests ‚Ä∫ Query Execution ‚Ä∫ should execute queries through connection pool

    Database connection failed: Database connection failed - no fallback available

      1318 |       if (!result || !pool) {
      1319 |         // Database is not available - throw error instead of fallback
    > 1320 |         const error = new Error("Database connection failed - no fallback available");
           |                       ^
      1321 |         error.code = "DB_CONNECTION_FAILED";
      1322 |         throw error;
      1323 |       }

      at query (utils/database.js:1320:23)
      at Object.<anonymous> (tests/unit/utils/database.test.js:142:22)

  ‚óè Database Utilities - Unit Tests ‚Ä∫ Query Execution ‚Ä∫ should return null when database is not initialized

    Database connection failed: Database connection failed - no fallback available

      1318 |       if (!result || !pool) {
      1319 |         // Database is not available - throw error instead of fallback
    > 1320 |         const error = new Error("Database connection failed - no fallback available");
           |                       ^
      1321 |         error.code = "DB_CONNECTION_FAILED";
      1322 |         throw error;
      1323 |       }

      at query (utils/database.js:1320:23)
      at Object.<anonymous> (tests/unit/utils/database.test.js:155:22)

  ‚óè Database Utilities - Unit Tests ‚Ä∫ Query Execution ‚Ä∫ should handle connection errors gracefully

    Database connection failed: Database connection failed - no fallback available

      1318 |       if (!result || !pool) {
      1319 |         // Database is not available - throw error instead of fallback
    > 1320 |         const error = new Error("Database connection failed - no fallback available");
           |                       ^
      1321 |         error.code = "DB_CONNECTION_FAILED";
      1322 |         throw error;
      1323 |       }

      at query (utils/database.js:1320:23)
      at Object.<anonymous> (tests/unit/utils/database.test.js:168:22)

  ‚óè Database Utilities - Unit Tests ‚Ä∫ Query Execution ‚Ä∫ should handle non-connection errors by throwing

    expect(received).rejects.toThrow(expected)

    Expected substring: "syntax error"
    Received message:   "Database connection failed: Database connection failed - no fallback available"

          1318 |       if (!result || !pool) {
          1319 |         // Database is not available - throw error instead of fallback
        > 1320 |         const error = new Error("Database connection failed - no fallback available");
               |                       ^
          1321 |         error.code = "DB_CONNECTION_FAILED";
          1322 |         throw error;
          1323 |       }

      at query (utils/database.js:1320:23)
      at Object.<anonymous> (tests/unit/utils/database.test.js:181:7)
      at Object.toThrow (node_modules/expect/build/index.js:218:22)
      at Object.toThrow (tests/unit/utils/database.test.js:181:50)

  ‚óè Database Utilities - Unit Tests ‚Ä∫ Query Execution ‚Ä∫ should handle pool exhaustion errors

    expect(received).rejects.toThrow(expected)

    Expected substring: "Pool exhausted"
    Received message:   "Database connection failed: Database connection failed - no fallback available"

          1318 |       if (!result || !pool) {
          1319 |         // Database is not available - throw error instead of fallback
        > 1320 |         const error = new Error("Database connection failed - no fallback available");
               |                       ^
          1321 |         error.code = "DB_CONNECTION_FAILED";
          1322 |         throw error;
          1323 |       }

      at query (utils/database.js:1320:23)
      at Object.<anonymous> (tests/unit/utils/database.test.js:192:7)
      at Object.toThrow (node_modules/expect/build/index.js:218:22)
      at Object.toThrow (tests/unit/utils/database.test.js:192:47)

  ‚óè Database Utilities - Unit Tests ‚Ä∫ Transaction Management ‚Ä∫ should execute transaction with proper BEGIN/COMMIT

    Database not initialized. Call initializeDatabase() first.

      1298 | function getPool() {
      1299 |   if (!pool || !dbInitialized) {
    > 1300 |     throw new Error(
           |           ^
      1301 |       "Database not initialized. Call initializeDatabase() first."
      1302 |     );
      1303 |   }

      at getPool (utils/database.js:1300:11)
      at getPool (utils/database.js:1453:24)
      at Object.transaction (tests/unit/utils/database.test.js:213:28)

  ‚óè Database Utilities - Unit Tests ‚Ä∫ Transaction Management ‚Ä∫ should rollback transaction on error

    expect(received).rejects.toThrow(expected)

    Expected substring: "Transaction failed"
    Received message:   "Database not initialized. Call initializeDatabase() first."

          1298 | function getPool() {
          1299 |   if (!pool || !dbInitialized) {
        > 1300 |     throw new Error(
               |           ^
          1301 |       "Database not initialized. Call initializeDatabase() first."
          1302 |     );
          1303 |   }

      at getPool (utils/database.js:1300:11)
      at getPool (utils/database.js:1453:24)
      at Object.transaction (tests/unit/utils/database.test.js:236:20)
      at Object.toThrow (node_modules/expect/build/index.js:218:22)
      at Object.toThrow (tests/unit/utils/database.test.js:236:62)

  ‚óè Database Utilities - Unit Tests ‚Ä∫ Health Check ‚Ä∫ should handle database errors gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: "Connection failed"
    Received: "Database connection failed: Database connection failed - no fallback available"

      277 |       expect(result).toBeDefined();
      278 |       expect(result.status).toBe("unhealthy");
    > 279 |       expect(result.error).toBe("Connection failed");
          |                            ^
      280 |     });
      281 |   });
      282 |

      at Object.toBe (tests/unit/utils/database.test.js:279:28)

  ‚óè Database Utilities - Unit Tests ‚Ä∫ Connection Cleanup ‚Ä∫ should close database connections

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      291 |       await closeDatabase();
      292 |
    > 293 |       expect(mockPool.end).toHaveBeenCalled();
          |                            ^
      294 |     });
      295 |
      296 |     test("should handle cleanup when no pool exists", async () => {

      at Object.toHaveBeenCalled (tests/unit/utils/database.test.js:293:28)

  ‚óè Database Utilities - Unit Tests ‚Ä∫ Pool Access ‚Ä∫ should return connection pool when initialized

    Database not initialized. Call initializeDatabase() first.

      1298 | function getPool() {
      1299 |   if (!pool || !dbInitialized) {
    > 1300 |     throw new Error(
           |           ^
      1301 |       "Database not initialized. Call initializeDatabase() first."
      1302 |     );
      1303 |   }

      at getPool (utils/database.js:1300:11)
      at Object.getPool (tests/unit/utils/database.test.js:316:20)

  ‚óè Database Utilities - Unit Tests ‚Ä∫ Error Handling Edge Cases ‚Ä∫ should handle database connection timeout errors

    Database connection failed: Database connection failed - no fallback available

      1318 |       if (!result || !pool) {
      1319 |         // Database is not available - throw error instead of fallback
    > 1320 |         const error = new Error("Database connection failed - no fallback available");
           |                       ^
      1321 |         error.code = "DB_CONNECTION_FAILED";
      1322 |         throw error;
      1323 |       }

      at query (utils/database.js:1320:23)
      at Object.<anonymous> (tests/unit/utils/database.test.js:332:22)

  ‚óè Database Utilities - Unit Tests ‚Ä∫ Error Handling Edge Cases ‚Ä∫ should handle unexpected error formats

    Database connection failed: Database connection failed - no fallback available

      1318 |       if (!result || !pool) {
      1319 |         // Database is not available - throw error instead of fallback
    > 1320 |         const error = new Error("Database connection failed - no fallback available");
           |                       ^
      1321 |         error.code = "DB_CONNECTION_FAILED";
      1322 |         throw error;
      1323 |       }

      at query (utils/database.js:1320:23)
      at Object.<anonymous> (tests/unit/utils/database.test.js:345:22)

  ‚óè Database Utilities - Unit Tests ‚Ä∫ Error Handling Edge Cases ‚Ä∫ should handle query logging for slow queries

    Database connection failed: Database connection failed - no fallback available

      1318 |       if (!result || !pool) {
      1319 |         // Database is not available - throw error instead of fallback
    > 1320 |         const error = new Error("Database connection failed - no fallback available");
           |                       ^
      1321 |         error.code = "DB_CONNECTION_FAILED";
      1322 |         throw error;
      1323 |       }

      at query (utils/database.js:1320:23)
      at Object.<anonymous> (tests/unit/utils/database.test.js:361:22)

FAIL tests/unit/routes/price.test.js
  ‚óè Price Route - Unit Tests ‚Ä∫ GET /api/price/:symbol ‚Ä∫ should handle symbol not found

    expect(received).toContain(expected) // indexOf

    Expected substring: "not found"
    Received string:    "Invalid symbol format: INVALID. Use 1-5 letter symbols like AAPL"

      86 |
      87 |       expect(response.body.success).toBe(false);
    > 88 |       expect(response.body.error).toContain("not found");
         |                                   ^
      89 |     });
      90 |
      91 |     test("should handle database errors", async () => {

      at Object.toContain (tests/unit/routes/price.test.js:88:35)

  ‚óè Price Route - Unit Tests ‚Ä∫ GET /api/price/:symbol/intraday ‚Ä∫ should return intraday data with default 5min interval

    expected 200 "OK", got 500 "Internal Server Error"

      118 |       const response = await request(app)
      119 |         .get("/api/price/AAPL/intraday")
    > 120 |         .expect(200);
          |          ^
      121 |
      122 |       expect(response.body.symbol).toBe("AAPL");
      123 |       expect(response.body.data.interval).toBe("5min");

      at Object.expect (tests/unit/routes/price.test.js:120:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Price Route - Unit Tests ‚Ä∫ GET /api/price/:symbol/intraday ‚Ä∫ should handle different intervals

    expected 200 "OK", got 404 "Not Found"

      134 |       const response = await request(app)
      135 |         .get("/api/price/AAPL/intraday?interval=1min")
    > 136 |         .expect(200);
          |          ^
      137 |
      138 |       expect(response.body.data.interval).toBe("1min");
      139 |       expect(mockQuery).toHaveBeenCalledWith(

      at Object.expect (tests/unit/routes/price.test.js:136:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Price Route - Unit Tests ‚Ä∫ GET /api/price/:symbol/intraday ‚Ä∫ should validate interval parameter

    expected 400 "Bad Request", got 404 "Not Found"

      146 |       const response = await request(app)
      147 |         .get("/api/price/AAPL/intraday?interval=invalid")
    > 148 |         .expect(400);
          |          ^
      149 |
      150 |       expect(response.body.success).toBe(false);
      151 |       expect(response.body.error).toContain("Invalid interval");

      at Object.expect (tests/unit/routes/price.test.js:148:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Price Route - Unit Tests ‚Ä∫ GET /api/price/futures/:symbol ‚Ä∫ should return futures pricing data

    expect(received).toBe(expected) // Object.is equality

    Expected: "CLZ24"
    Received: undefined

      175 |         .expect(200);
      176 |
    > 177 |       expect(response.body.symbol).toBe("CLZ24");
          |                                    ^
      178 |       expect(response.body.data).toHaveProperty("contract_details");
      179 |       expect(response.body.data).toHaveProperty("pricing_analysis");
      180 |       expect(response.body.data.contract_details).toHaveProperty(

      at Object.toBe (tests/unit/routes/price.test.js:177:36)

  ‚óè Price Route - Unit Tests ‚Ä∫ GET /api/price/futures/:symbol ‚Ä∫ should handle non-existent futures contract

    expected 404 "Not Found", got 200 "OK"

      192 |       const response = await request(app)
      193 |         .get("/api/price/futures/INVALID")
    > 194 |         .expect(404);
          |          ^
      195 |
      196 |       expect(response.body.success).toBe(false);
      197 |       expect(response.body.error).toContain("Futures contract not found");

      at Object.expect (tests/unit/routes/price.test.js:194:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Price Route - Unit Tests ‚Ä∫ GET /api/price/:symbol/prediction ‚Ä∫ should return price prediction analysis

    expected 200 "OK", got 404 "Not Found"

      217 |       const response = await request(app)
      218 |         .get("/api/price/AAPL/prediction")
    > 219 |         .expect(200);
          |          ^
      220 |
      221 |       expect(response.body.symbol).toBe("AAPL");
      222 |       expect(response.body.data).toHaveProperty("current_analysis");

      at Object.expect (tests/unit/routes/price.test.js:219:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Price Route - Unit Tests ‚Ä∫ GET /api/price/:symbol/prediction ‚Ä∫ should handle different timeframes

    expected 200 "OK", got 404 "Not Found"

      236 |       const response = await request(app)
      237 |         .get("/api/price/AAPL/prediction?timeframe=1w")
    > 238 |         .expect(200);
          |          ^
      239 |
      240 |       expect(response.body.data.timeframe).toBe("1w");
      241 |     });

      at Object.expect (tests/unit/routes/price.test.js:238:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Price Route - Unit Tests ‚Ä∫ GET /api/price/:symbol/prediction ‚Ä∫ should validate timeframe parameter

    expected 400 "Bad Request", got 404 "Not Found"

      244 |       const response = await request(app)
      245 |         .get("/api/price/AAPL/prediction?timeframe=invalid")
    > 246 |         .expect(400);
          |          ^
      247 |
      248 |       expect(response.body.success).toBe(false);
      249 |       expect(response.body.error).toContain("Invalid timeframe");

      at Object.expect (tests/unit/routes/price.test.js:246:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Price Route - Unit Tests ‚Ä∫ GET /api/price/:symbol/alerts ‚Ä∫ should return price alert recommendations

    expected 200 "OK", got 404 "Not Found"

      267 |       const response = await request(app)
      268 |         .get("/api/price/AAPL/alerts")
    > 269 |         .expect(200);
          |          ^
      270 |
      271 |       expect(response.body.symbol).toBe("AAPL");
      272 |       expect(response.body.data).toHaveProperty("current_price");

      at Object.expect (tests/unit/routes/price.test.js:269:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Price Route - Unit Tests ‚Ä∫ POST /api/price/batch ‚Ä∫ should handle batch price requests

    expected 200 "OK", got 500 "Internal Server Error"

      290 |         .post("/api/price/batch")
      291 |         .send({ symbols: ["AAPL", "MSFT", "GOOGL"] })
    > 292 |         .expect(200);
          |          ^
      293 |
      294 |       expect(response.body.success).toBe(true);
      295 |       expect(response.body.data).toHaveProperty("prices");

      at Object.expect (tests/unit/routes/price.test.js:292:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Price Route - Unit Tests ‚Ä∫ POST /api/price/batch ‚Ä∫ should limit batch size

    expected 400 "Bad Request", got 500 "Internal Server Error"

      317 |         .post("/api/price/batch")
      318 |         .send({ symbols: tooManySymbols })
    > 319 |         .expect(400);
          |          ^
      320 |
      321 |       expect(response.body.success).toBe(false);
      322 |       expect(response.body.error).toContain("Maximum 100 symbols allowed");

      at Object.expect (tests/unit/routes/price.test.js:319:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

FAIL tests/unit/routes/websocket.test.js
  ‚óè WebSocket API Routes - API Key Dependencies ‚Ä∫ Stream Endpoint - Critical API Key Dependency ‚Ä∫ should stream market data with valid API credentials

    expected 200 "OK", got 500 "Internal Server Error"

      135 |       const response = await request(app)
      136 |         .get("/api/websocket/stream/AAPL")
    > 137 |         .expect(200);
          |          ^
      138 |
      139 |       expect(response.body.success).toBe(true);
      140 |       expect(response.body.data.symbols).toEqual(["AAPL"]);

      at Object.expect (tests/unit/routes/websocket.test.js:137:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

FAIL tests/unit/routes/economic.test.js
  ‚óè Economic Routes Unit Tests ‚Ä∫ GET /economic ‚Ä∫ should handle database errors

    expect(received).toHaveProperty(path, value)

    Expected path: "error"

    Expected value: "Database error"
    Received value: "Failed to fetch economic data"

      189 |       expect(response.status).toBe(500);
      190 |       expect(response.body).toHaveProperty("success", false);
    > 191 |       expect(response.body).toHaveProperty("error", "Database error");
          |                             ^
      192 |       expect(response.body).toHaveProperty(
      193 |         "message",
      194 |         "Database connection failed"

      at Object.toHaveProperty (tests/unit/routes/economic.test.js:191:29)

  ‚óè Economic Routes Unit Tests ‚Ä∫ GET /economic/data ‚Ä∫ should handle database errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      328 |       const response = await request(app).get("/economic/data");
      329 |
    > 330 |       expect(response.status).toBe(500);
          |                               ^
      331 |       expect(response.body).toHaveProperty("success", false);
      332 |       expect(response.body).toHaveProperty("error", "Database error");
      333 |       expect(response.body).toHaveProperty("message", "Query timeout");

      at Object.toBe (tests/unit/routes/economic.test.js:330:31)

  ‚óè Economic Routes Unit Tests ‚Ä∫ Edge cases and error handling ‚Ä∫ should handle invalid page numbers

    TypeError: Cannot read properties of undefined (reading 'page')

      366 |       );
      367 |
    > 368 |       expect(response.body.pagination.page).toBe(1); // Default page
          |                                       ^
      369 |       expect(response.body.pagination.limit).toBe(25); // Default limit
      370 |     });
      371 |

      at Object.page (tests/unit/routes/economic.test.js:368:39)

  ‚óè Economic Routes Unit Tests ‚Ä∫ Edge cases and error handling ‚Ä∫ should handle negative page and limit

    TypeError: Cannot read properties of undefined (reading 'page')

      382 |       const response = await request(app).get("/economic?page=-5&limit=-10");
      383 |
    > 384 |       expect(response.body.pagination.page).toBe(1); // Defaults to 1
          |                                       ^
      385 |       expect(response.body.pagination.limit).toBe(25); // Defaults to 25
      386 |     });
      387 |

      at Object.page (tests/unit/routes/economic.test.js:384:39)

  ‚óè Economic Routes Unit Tests ‚Ä∫ Edge cases and error handling ‚Ä∫ should handle very large page numbers

    expect(received).toMatchObject(expected)

    - Expected  - 2
    + Received  + 2

      Object {
        "hasNext": false,
        "hasPrev": true,
        "limit": 25,
        "page": 999,
    -   "total": 10,
    -   "totalPages": 1,
    +   "total": 50,
    +   "totalPages": 2,
      }

      398 |       const response = await request(app).get("/economic?page=999&limit=25");
      399 |
    > 400 |       expect(response.body.pagination).toMatchObject({
          |                                        ^
      401 |         page: 999,
      402 |         limit: 25,
      403 |         total: 10,

      at Object.toMatchObject (tests/unit/routes/economic.test.js:400:40)

  ‚óè Economic Routes Unit Tests ‚Ä∫ Edge cases and error handling ‚Ä∫ should handle empty series parameter

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "WHERE series_id = $1", ["", 25, 0]
    Received
           1
              "
          SELECT¬∑
            series_id,
            date,
            value
          FROM economic_data¬∑¬∑¬∑¬∑¬∑¬∑¬∑
          ORDER BY series_id, date DESC
          LIMIT $1 OFFSET $2
        ",
              Array [
            -   "",
                25,
                0,
              ],
           2
              "
          SELECT COUNT(*) as total FROM economic_data¬∑
        ",
            - Array [
            -   "",
            -   25,
            -   0,
            - ]
            + Array [],

    Number of calls: 2

      443 |       const response = await request(app).get("/economic?series=");
      444 |
    > 445 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      446 |         expect.stringContaining("WHERE series_id = $1"),
      447 |         ["", 25, 0]
      448 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/economic.test.js:445:25)

  ‚óè Economic Routes Unit Tests ‚Ä∫ Response format validation ‚Ä∫ should maintain consistent error response format

    expect(received).toHaveProperty(path, value)

    Expected path: "success"

    Expected value: false
    Received value: true

      487 |       const response = await request(app).get("/economic");
      488 |
    > 489 |       expect(response.body).toHaveProperty("success", false);
          |                             ^
      490 |       expect(response.body).toHaveProperty("error");
      491 |       expect(response.body).toHaveProperty("message");
      492 |       expect(typeof response.body.error).toBe("string");

      at Object.toHaveProperty (tests/unit/routes/economic.test.js:489:29)

  ‚óè Economic Routes Unit Tests ‚Ä∫ Response format validation ‚Ä∫ should return proper data structure

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 1
    Received array:  [{"total": "1"}]

      504 |
      505 |       expect(Array.isArray(response.body.data)).toBe(true);
    > 506 |       expect(response.body.data).toHaveLength(2);
          |                                  ^
      507 |       expect(response.body.data[0]).toHaveProperty("series_id");
      508 |       expect(response.body.data[0]).toHaveProperty("date");
      509 |       expect(response.body.data[0]).toHaveProperty("value");

      at Object.toHaveLength (tests/unit/routes/economic.test.js:506:34)

FAIL tests/unit/routes/performance.test.js
  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/health ‚Ä∫ should return health status without authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      76 |       const response = await request(app).get("/performance/health");
      77 |
    > 78 |       expect(response.status).toBe(200);
         |                               ^
      79 |       expect(response.body).toHaveProperty("status", "operational");
      80 |       expect(response.body).toHaveProperty("service", "performance-analytics");
      81 |       expect(response.body).toHaveProperty("timestamp");

      at Object.toBe (tests/unit/routes/performance.test.js:78:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance ‚Ä∫ should return performance API information without authentication

    expect(received).toHaveProperty(path, value)

    Expected path: "message"
    Received path: []

    Expected value: "Performance Analytics API - Ready"
    Received value: {"data": {"max_drawdown": 0.08, "sharpe_ratio": 1.2, "total_return": 0.15, "volatility": 0.12, "win_rate": 0.65}, "success": true, "timestamp": "2025-09-23T16:32:15.370Z"}

       96 |
       97 |       expect(response.status).toBe(200);
    >  98 |       expect(response.body).toHaveProperty(
          |                             ^
       99 |         "message",
      100 |         "Performance Analytics API - Ready"
      101 |       );

      at Object.toHaveProperty (tests/unit/routes/performance.test.js:98:29)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/benchmark (authenticated) ‚Ä∫ should return benchmark comparison with default parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      166 |       const response = await request(app).get("/performance/benchmark");
      167 |
    > 168 |       expect(response.status).toBe(200);
          |                               ^
      169 |       expect(response.body).toHaveProperty("success", true);
      170 |       expect(response.body).toHaveProperty("data");
      171 |       expect(response.body.data).toHaveProperty("portfolio");

      at Object.toBe (tests/unit/routes/performance.test.js:168:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/benchmark (authenticated) ‚Ä∫ should handle custom benchmark parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      188 |         .query({ benchmark: "QQQ" });
      189 |
    > 190 |       expect(response.status).toBe(200);
          |                               ^
      191 |       expect(mockQuery).toHaveBeenCalledWith(
      192 |         expect.stringContaining("QQQ"),
      193 |         expect.any(Array)

      at Object.toBe (tests/unit/routes/performance.test.js:190:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/benchmark (authenticated) ‚Ä∫ should handle custom period parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      204 |         .query({ period: "6m" });
      205 |
    > 206 |       expect(response.status).toBe(200);
          |                               ^
      207 |       expect(mockQuery).toHaveBeenCalledWith(
      208 |         expect.stringContaining("180"), // 6 months = 180 days
      209 |         expect.any(Array)

      at Object.toBe (tests/unit/routes/performance.test.js:206:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/benchmark (authenticated) ‚Ä∫ should handle invalid period gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      220 |         .query({ period: "invalid_period" });
      221 |
    > 222 |       expect(response.status).toBe(200);
          |                               ^
      223 |       // Should default to 365 days (1 year)
      224 |       expect(mockQuery).toHaveBeenCalledWith(
      225 |         expect.stringContaining("365"),

      at Object.toBe (tests/unit/routes/performance.test.js:222:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/benchmark (authenticated) ‚Ä∫ should use authenticated user ID in query

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "user_id", ArrayContaining ["test-user-123"]

    Number of calls: 0

      235 |       await request(app).get("/performance/benchmark");
      236 |
    > 237 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      238 |         expect.stringContaining("user_id"),
      239 |         expect.arrayContaining(["test-user-123"])
      240 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/performance.test.js:237:25)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/benchmark (authenticated) ‚Ä∫ should handle empty portfolio data

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      248 |       const response = await request(app).get("/performance/benchmark");
      249 |
    > 250 |       expect(response.status).toBe(200);
          |                               ^
      251 |       expect(response.body).toHaveProperty("success", true);
      252 |       expect(response.body).toHaveProperty(
      253 |         "message",

      at Object.toBe (tests/unit/routes/performance.test.js:250:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/benchmark (authenticated) ‚Ä∫ should handle database query errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 404

      262 |       const response = await request(app).get("/performance/benchmark");
      263 |
    > 264 |       expect(response.status).toBe(500);
          |                               ^
      265 |       expect(response.body).toHaveProperty("success", false);
      266 |       expect(response.body.error).toBeDefined();
      267 |     });

      at Object.toBe (tests/unit/routes/performance.test.js:264:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/benchmark (authenticated) ‚Ä∫ should handle performance calculation errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 404

      282 |       const response = await request(app).get("/performance/benchmark");
      283 |
    > 284 |       expect(response.status).toBe(500);
          |                               ^
      285 |       expect(response.body).toHaveProperty("success", false);
      286 |       expect(response.body.error).toContain("Failed to fetch performance benchmark data");
      287 |     });

      at Object.toBe (tests/unit/routes/performance.test.js:284:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/analytics (authenticated) ‚Ä∫ should return performance analytics

    expect(received).toHaveProperty(path, value)

    Expected path: "volatility"

    Expected value: 0.15
    Received value: 0.18

      310 |       expect(response.body).toHaveProperty("data");
      311 |       expect(response.body.data).toHaveProperty("total_return", 0.25);
    > 312 |       expect(response.body.data).toHaveProperty("volatility", 0.15);
          |                                  ^
      313 |       expect(
      314 |         mockPerformanceMonitor.getPerformanceAnalytics
      315 |       ).toHaveBeenCalledWith("test-user-123");

      at Object.toHaveProperty (tests/unit/routes/performance.test.js:312:34)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/analytics (authenticated) ‚Ä∫ should handle analytics calculation errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      323 |       const response = await request(app).get("/performance/analytics");
      324 |
    > 325 |       expect(response.status).toBe(500);
          |                               ^
      326 |       expect(response.body).toHaveProperty("success", false);
      327 |       expect(response.body.error).toContain("Failed to fetch performance analytics");
      328 |     });

      at Object.toBe (tests/unit/routes/performance.test.js:325:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/metrics (authenticated) ‚Ä∫ should return system performance metrics

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      346 |       const response = await request(app).get("/performance/metrics");
      347 |
    > 348 |       expect(response.status).toBe(200);
          |                               ^
      349 |       expect(response.body).toHaveProperty("success", true);
      350 |       expect(response.body).toHaveProperty("data");
      351 |       expect(response.body.data).toHaveProperty("cpu_usage", 0.45);

      at Object.toBe (tests/unit/routes/performance.test.js:348:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/metrics (authenticated) ‚Ä∫ should handle metrics collection errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 404

      361 |       const response = await request(app).get("/performance/metrics");
      362 |
    > 363 |       expect(response.status).toBe(500);
          |                               ^
      364 |       expect(response.body).toHaveProperty("success", false);
      365 |       expect(response.body.error).toContain("Failed to retrieve performance metrics");
      366 |     });

      at Object.toBe (tests/unit/routes/performance.test.js:363:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/attribution (authenticated) ‚Ä∫ should return Brinson attribution analysis

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      398 |       const response = await request(app).get("/performance/attribution");
      399 |
    > 400 |       expect(response.status).toBe(200);
          |                               ^
      401 |       expect(response.body).toHaveProperty("success", true);
      402 |       expect(response.body).toHaveProperty("data");
      403 |       expect(response.body.data).toHaveProperty("attribution_analysis");

      at Object.toBe (tests/unit/routes/performance.test.js:400:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/attribution (authenticated) ‚Ä∫ should handle custom benchmark for attribution

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      439 |       );
      440 |
    > 441 |       expect(response.status).toBe(200);
          |                               ^
      442 |       expect(mockQuery).toHaveBeenCalledWith(
      443 |         expect.stringContaining("QQQ"),
      444 |         expect.any(Array)

      at Object.toBe (tests/unit/routes/performance.test.js:441:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/attribution (authenticated) ‚Ä∫ should handle custom period for attribution

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      453 |       );
      454 |
    > 455 |       expect(response.status).toBe(200);
          |                               ^
      456 |       expect(mockQuery).toHaveBeenCalledWith(
      457 |         expect.stringContaining("90"), // 3 months = 90 days
      458 |         expect.any(Array)

      at Object.toBe (tests/unit/routes/performance.test.js:455:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/attribution (authenticated) ‚Ä∫ should handle insufficient data for attribution

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      465 |       const response = await request(app).get("/performance/attribution");
      466 |
    > 467 |       expect(response.status).toBe(200);
          |                               ^
      468 |       expect(response.body).toHaveProperty("success", true);
      469 |       expect(response.body).toHaveProperty(
      470 |         "message",

      at Object.toBe (tests/unit/routes/performance.test.js:467:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/attribution (authenticated) ‚Ä∫ should validate attribution parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 404

      479 |       );
      480 |
    > 481 |       expect(response.status).toBe(400);
          |                               ^
      482 |       expect(response.body).toHaveProperty("success", false);
      483 |       expect(response.body.error).toContain("Invalid benchmark symbol");
      484 |     });

      at Object.toBe (tests/unit/routes/performance.test.js:481:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/portfolio/:symbol (authenticated) ‚Ä∫ should return symbol-specific performance

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      505 |       const response = await request(app).get("/performance/portfolio/AAPL");
      506 |
    > 507 |       expect(response.status).toBe(200);
          |                               ^
      508 |       expect(response.body).toHaveProperty("success", true);
      509 |       expect(response.body).toHaveProperty("data");
      510 |       expect(response.body.data).toHaveProperty("symbol", "AAPL");

      at Object.toBe (tests/unit/routes/performance.test.js:507:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/portfolio/:symbol (authenticated) ‚Ä∫ should handle lowercase symbol conversion

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ArrayContaining ["test-user-123", "AAPL"]

    Number of calls: 0

      521 |       await request(app).get("/performance/portfolio/aapl");
      522 |
    > 523 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      524 |         expect.any(String),
      525 |         expect.arrayContaining(["test-user-123", "AAPL"]) // Should be uppercase
      526 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/performance.test.js:523:25)

  ‚óè Performance Routes Unit Tests ‚Ä∫ GET /performance/portfolio/:symbol (authenticated) ‚Ä∫ should handle symbol not found

    expect(received).toHaveProperty(path, value)

    Expected path: "success"
    Received path: []

    Expected value: false
    Received value: {}

      533 |
      534 |       expect(response.status).toBe(404);
    > 535 |       expect(response.body).toHaveProperty("success", false);
          |                             ^
      536 |       expect(response.body.error).toContain("No performance data found");
      537 |     });
      538 |   });

      at Object.toHaveProperty (tests/unit/routes/performance.test.js:535:29)

  ‚óè Performance Routes Unit Tests ‚Ä∫ Authentication ‚Ä∫ should allow public access to health endpoint

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      542 |       const response = await request(app).get("/performance/health");
      543 |
    > 544 |       expect(response.status).toBe(200);
          |                               ^
      545 |       // Should work without authentication
      546 |     });
      547 |

      at Object.toBe (tests/unit/routes/performance.test.js:544:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ Parameter validation ‚Ä∫ should validate benchmark symbol format

    expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 404

      567 |         .query({ benchmark: "invalid-benchmark-format!@#" });
      568 |
    > 569 |       expect(response.status).toBe(400);
          |                               ^
      570 |       expect(response.body).toHaveProperty("success", false);
      571 |       expect(response.body.error).toContain("Invalid benchmark symbol");
      572 |     });

      at Object.toBe (tests/unit/routes/performance.test.js:569:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ Parameter validation ‚Ä∫ should sanitize period parameter

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "365", Any<Array>

    Number of calls: 0

      582 |
      583 |       // Should handle malicious input by using predefined period values
    > 584 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      585 |         expect.stringContaining("365"), // Should default to 1y = 365 days
      586 |         expect.any(Array)
      587 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/performance.test.js:584:25)

  ‚óè Performance Routes Unit Tests ‚Ä∫ Error handling ‚Ä∫ should handle database connection timeout

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 404

      597 |       const response = await request(app).get("/performance/benchmark");
      598 |
    > 599 |       expect(response.status).toBe(500);
          |                               ^
      600 |       expect(response.body).toHaveProperty("success", false);
      601 |       expect(response.body.error).toContain("timeout");
      602 |     });

      at Object.toBe (tests/unit/routes/performance.test.js:599:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ Error handling ‚Ä∫ should handle performance monitor failures

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 404

      609 |       const response = await request(app).get("/performance/metrics");
      610 |
    > 611 |       expect(response.status).toBe(500);
          |                               ^
      612 |       expect(response.body).toHaveProperty("success", false);
      613 |       expect(response.body.error).toContain("Monitor unavailable");
      614 |     });

      at Object.toBe (tests/unit/routes/performance.test.js:611:31)

  ‚óè Performance Routes Unit Tests ‚Ä∫ Response format ‚Ä∫ should return consistent JSON response format

    expect(received).toMatch(expected)

    Expected pattern: /json/
    Received string:  "text/html; charset=utf-8"

      619 |       const response = await request(app).get("/performance/health");
      620 |
    > 621 |       expect(response.headers["content-type"]).toMatch(/json/);
          |                                                ^
      622 |       expect(typeof response.body).toBe("object");
      623 |     });
      624 |

      at Object.toMatch (tests/unit/routes/performance.test.js:621:48)

  ‚óè Performance Routes Unit Tests ‚Ä∫ Response format ‚Ä∫ should include metadata in performance responses

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      630 |       const response = await request(app).get("/performance/benchmark");
      631 |
    > 632 |       expect(response.status).toBe(200);
          |                               ^
      633 |       expect(response.body).toHaveProperty("success");
      634 |       expect(response.body).toHaveProperty("data");
      635 |     });

      at Object.toBe (tests/unit/routes/performance.test.js:632:31)

FAIL tests/unit/utils/liveDataManager.test.js
  ‚óè Live Data Manager ‚Ä∫ data provider management ‚Ä∫ should initialize with default providers

    expect(received).toBeGreaterThan(expected)

    Matcher error: received value must be a number or bigint

    Received has value: undefined

      15 |     test("should initialize with default providers", () => {
      16 |       expect(liveDataManager.providers).toBeDefined();
    > 17 |       expect(liveDataManager.providers.length).toBeGreaterThan(0);
         |                                                ^
      18 |     });
      19 |
      20 |     test("should add new data provider", () => {

      at Object.toBeGreaterThan (tests/unit/utils/liveDataManager.test.js:17:48)

  ‚óè Live Data Manager ‚Ä∫ data provider management ‚Ä∫ should add new data provider

    TypeError: liveDataManager.addProvider is not a function

      26 |       };
      27 |
    > 28 |       const result = liveDataManager.addProvider(provider);
         |                                      ^
      29 |       expect(result.success).toBe(true);
      30 |       expect(
      31 |         liveDataManager.providers.some((p) => p.name === "testProvider")

      at Object.addProvider (tests/unit/utils/liveDataManager.test.js:28:38)

  ‚óè Live Data Manager ‚Ä∫ data provider management ‚Ä∫ should validate provider configuration

    TypeError: liveDataManager.validateProvider is not a function

      39 |       };
      40 |
    > 41 |       const result = liveDataManager.validateProvider(invalidProvider);
         |                                      ^
      42 |       expect(result.valid).toBe(false);
      43 |       expect(result.errors).toBeDefined();
      44 |     });

      at Object.validateProvider (tests/unit/utils/liveDataManager.test.js:41:38)

  ‚óè Live Data Manager ‚Ä∫ data provider management ‚Ä∫ should get provider status

    expect(received).toHaveProperty(path)

    Expected path: "lastUpdate"
    Received path: []

    Received value: {"connections": Map {}, "metrics": {"errors": [], "latency": [], "successRate": 100, "uptime": 0}, "name": "Alpaca Markets", "rateLimits": {"costPerRequest": 0, "maxConcurrentConnections": 1, "monthlyQuota": 1000000, "requestsPerMinute": 200}, "status": "idle", "symbols": Set {}, "usage": {"lastReset": "2025-09-23", "requestsThisMonth": 0, "requestsToday": 0, "totalCost": 0}}

      48 |
      49 |       expect(result).toHaveProperty("status");
    > 50 |       expect(result).toHaveProperty("lastUpdate");
         |                      ^
      51 |       expect(result).toHaveProperty("health");
      52 |     });
      53 |   });

      at Object.toHaveProperty (tests/unit/utils/liveDataManager.test.js:50:22)

  ‚óè Live Data Manager ‚Ä∫ real-time data streaming ‚Ä∫ should start data stream for symbol

    TypeError: liveDataManager.startStream is not a function

      57 |       const mockCallback = jest.fn();
      58 |
    > 59 |       const result = await liveDataManager.startStream("AAPL", mockCallback);
         |                                            ^
      60 |
      61 |       expect(result.success).toBe(true);
      62 |       expect(result.streamId).toBeDefined();

      at Object.startStream (tests/unit/utils/liveDataManager.test.js:59:44)

  ‚óè Live Data Manager ‚Ä∫ real-time data streaming ‚Ä∫ should stop data stream

    TypeError: liveDataManager.startStream is not a function

      65 |     test("should stop data stream", async () => {
      66 |       const mockCallback = jest.fn();
    > 67 |       const stream = await liveDataManager.startStream("AAPL", mockCallback);
         |                                            ^
      68 |
      69 |       const result = await liveDataManager.stopStream(stream.streamId);
      70 |

      at Object.startStream (tests/unit/utils/liveDataManager.test.js:67:44)

  ‚óè Live Data Manager ‚Ä∫ real-time data streaming ‚Ä∫ should handle multiple symbol streams

    TypeError: liveDataManager.startStream is not a function

      78 |       const results = await Promise.all(
      79 |         symbols.map((symbol) =>
    > 80 |           liveDataManager.startStream(symbol, mockCallback)
         |                           ^
      81 |         )
      82 |       );
      83 |

      at startStream (tests/unit/utils/liveDataManager.test.js:80:27)
          at Array.map (<anonymous>)
      at Object.map (tests/unit/utils/liveDataManager.test.js:79:17)

  ‚óè Live Data Manager ‚Ä∫ real-time data streaming ‚Ä∫ should process incoming market data

    TypeError: liveDataManager.processMarketData is not a function

      94 |       };
      95 |
    > 96 |       const result = liveDataManager.processMarketData(marketData);
         |                                      ^
      97 |
      98 |       expect(result.success).toBe(true);
      99 |       expect(result.processed).toBeDefined();

      at Object.processMarketData (tests/unit/utils/liveDataManager.test.js:96:38)

  ‚óè Live Data Manager ‚Ä∫ data caching and storage ‚Ä∫ should cache market data

    TypeError: liveDataManager.cacheData is not a function

      109 |       };
      110 |
    > 111 |       liveDataManager.cacheData("AAPL", data);
          |                       ^
      112 |       const cached = liveDataManager.getCachedData("AAPL");
      113 |
      114 |       expect(cached).toMatchObject(data);

      at Object.cacheData (tests/unit/utils/liveDataManager.test.js:111:23)

  ‚óè Live Data Manager ‚Ä∫ data caching and storage ‚Ä∫ should handle cache expiration

    TypeError: liveDataManager.cacheData is not a function

      122 |       };
      123 |
    > 124 |       liveDataManager.cacheData("AAPL", data);
          |                       ^
      125 |       const cached = liveDataManager.getCachedData("AAPL");
      126 |
      127 |       expect(cached).toBeNull();

      at Object.cacheData (tests/unit/utils/liveDataManager.test.js:124:23)

  ‚óè Live Data Manager ‚Ä∫ data caching and storage ‚Ä∫ should store data to database

    TypeError: liveDataManager.storeData is not a function

      138 |       query.mockResolvedValue({ rowCount: 1 });
      139 |
    > 140 |       const result = await liveDataManager.storeData(data);
          |                                            ^
      141 |
      142 |       expect(result.success).toBe(true);
      143 |       expect(query).toHaveBeenCalledWith(

      at Object.storeData (tests/unit/utils/liveDataManager.test.js:140:44)

  ‚óè Live Data Manager ‚Ä∫ rate limiting and throttling ‚Ä∫ should reset rate limit counters

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: undefined

      169 |       const result = liveDataManager.makeRequest("testProvider", "/test");
      170 |
    > 171 |       expect(result.rateLimited).toBe(false);
          |                                  ^
      172 |     });
      173 |
      174 |     test("should get rate limit status", () => {

      at Object.toBe (tests/unit/utils/liveDataManager.test.js:171:34)

  ‚óè Live Data Manager ‚Ä∫ rate limiting and throttling ‚Ä∫ should get rate limit status

    TypeError: liveDataManager.getRateLimitStatus is not a function

      173 |
      174 |     test("should get rate limit status", () => {
    > 175 |       const status = liveDataManager.getRateLimitStatus("alpaca");
          |                                      ^
      176 |
      177 |       expect(status).toHaveProperty("remaining");
      178 |       expect(status).toHaveProperty("resetTime");

      at Object.getRateLimitStatus (tests/unit/utils/liveDataManager.test.js:175:38)

  ‚óè Live Data Manager ‚Ä∫ data quality and validation ‚Ä∫ should validate market data format

    TypeError: liveDataManager.validateData is not a function

      190 |       };
      191 |
    > 192 |       const result = liveDataManager.validateData(validData);
          |                                      ^
      193 |       expect(result.valid).toBe(true);
      194 |     });
      195 |

      at Object.validateData (tests/unit/utils/liveDataManager.test.js:192:38)

  ‚óè Live Data Manager ‚Ä∫ data quality and validation ‚Ä∫ should reject invalid market data

    TypeError: liveDataManager.validateData is not a function

      201 |       };
      202 |
    > 203 |       const result = liveDataManager.validateData(invalidData);
          |                                      ^
      204 |       expect(result.valid).toBe(false);
      205 |       expect(result.errors).toBeDefined();
      206 |     });

      at Object.validateData (tests/unit/utils/liveDataManager.test.js:203:38)

  ‚óè Live Data Manager ‚Ä∫ data quality and validation ‚Ä∫ should detect stale data

    TypeError: liveDataManager.isDataStale is not a function

      213 |       };
      214 |
    > 215 |       const result = liveDataManager.isDataStale(staleData);
          |                                      ^
      216 |       expect(result).toBe(true);
      217 |     });
      218 |

      at Object.isDataStale (tests/unit/utils/liveDataManager.test.js:215:38)

  ‚óè Live Data Manager ‚Ä∫ data quality and validation ‚Ä∫ should calculate data freshness

    TypeError: liveDataManager.calculateFreshness is not a function

      222 |       };
      223 |
    > 224 |       const freshness = liveDataManager.calculateFreshness(data);
          |                                         ^
      225 |       expect(freshness).toBeCloseTo(60, -1); // approximately 60 seconds
      226 |     });
      227 |   });

      at Object.calculateFreshness (tests/unit/utils/liveDataManager.test.js:224:41)

  ‚óè Live Data Manager ‚Ä∫ subscription management ‚Ä∫ should manage symbol subscriptions

    TypeError: liveDataManager.getSubscriptions is not a function

      232 |       liveDataManager.subscribe("GOOGL");
      233 |
    > 234 |       const subscriptions = liveDataManager.getSubscriptions();
          |                                             ^
      235 |       expect(subscriptions).toContain("AAPL");
      236 |       expect(subscriptions).toContain("GOOGL");
      237 |     });

      at Object.getSubscriptions (tests/unit/utils/liveDataManager.test.js:234:45)

  ‚óè Live Data Manager ‚Ä∫ subscription management ‚Ä∫ should unsubscribe from symbols

    TypeError: liveDataManager.unsubscribe is not a function

      239 |     test("should unsubscribe from symbols", () => {
      240 |       liveDataManager.subscribe("AAPL");
    > 241 |       liveDataManager.unsubscribe("AAPL");
          |                       ^
      242 |
      243 |       const subscriptions = liveDataManager.getSubscriptions();
      244 |       expect(subscriptions).not.toContain("AAPL");

      at Object.unsubscribe (tests/unit/utils/liveDataManager.test.js:241:23)

  ‚óè Live Data Manager ‚Ä∫ subscription management ‚Ä∫ should get subscription statistics

    TypeError: liveDataManager.getSubscriptionStats is not a function

      250 |       liveDataManager.subscribe("TSLA");
      251 |
    > 252 |       const stats = liveDataManager.getSubscriptionStats();
          |                                     ^
      253 |       expect(stats.total).toBe(3);
      254 |       expect(stats.active).toBeDefined();
      255 |     });

      at Object.getSubscriptionStats (tests/unit/utils/liveDataManager.test.js:252:37)

  ‚óè Live Data Manager ‚Ä∫ error handling and recovery ‚Ä∫ should handle provider connection errors

    TypeError: liveDataManager.testConnection is not a function

      258 |   describe("error handling and recovery", () => {
      259 |     test("should handle provider connection errors", async () => {
    > 260 |       const result = await liveDataManager.testConnection("invalidProvider");
          |                                            ^
      261 |
      262 |       expect(result.success).toBe(false);
      263 |       expect(result.error).toBeDefined();

      at Object.testConnection (tests/unit/utils/liveDataManager.test.js:260:44)

  ‚óè Live Data Manager ‚Ä∫ error handling and recovery ‚Ä∫ should implement retry logic for failed requests

    TypeError: liveDataManager.retryRequest is not a function

      271 |         .mockResolvedValue({ success: true });
      272 |
    > 273 |       const result = await liveDataManager.retryRequest(mockRetryCallback, 3);
          |                                            ^
      274 |
      275 |       expect(result.success).toBe(true);
      276 |       expect(mockRetryCallback).toHaveBeenCalledTimes(3);

      at Object.retryRequest (tests/unit/utils/liveDataManager.test.js:273:44)

  ‚óè Live Data Manager ‚Ä∫ error handling and recovery ‚Ä∫ should handle websocket disconnections

    TypeError: liveDataManager.handleWebSocketError is not a function

      280 |       const mockWs = { readyState: 3 }; // CLOSED
      281 |
    > 282 |       const result = liveDataManager.handleWebSocketError(
          |                                      ^
      283 |         mockWs,
      284 |         new Error("Connection lost")
      285 |       );

      at Object.handleWebSocketError (tests/unit/utils/liveDataManager.test.js:282:38)

  ‚óè Live Data Manager ‚Ä∫ error handling and recovery ‚Ä∫ should implement circuit breaker pattern

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: undefined

      302 |       );
      303 |
    > 304 |       expect(result.circuitOpen).toBe(true);
          |                                  ^
      305 |       expect(result.error).toContain("Circuit breaker");
      306 |     });
      307 |   });

      at Object.toBe (tests/unit/utils/liveDataManager.test.js:304:34)

  ‚óè Live Data Manager ‚Ä∫ performance monitoring ‚Ä∫ should track request latency

    TypeError: liveDataManager.getPerformanceMetrics is not a function

      312 |       await liveDataManager.makeRequest("testProvider", "/quote/AAPL");
      313 |
    > 314 |       const metrics = liveDataManager.getPerformanceMetrics();
          |                                       ^
      315 |       expect(metrics.averageLatency).toBeDefined();
      316 |       expect(metrics.requestCount).toBeGreaterThan(0);
      317 |     });

      at Object.getPerformanceMetrics (tests/unit/utils/liveDataManager.test.js:314:39)

  ‚óè Live Data Manager ‚Ä∫ performance monitoring ‚Ä∫ should monitor data throughput

    TypeError: liveDataManager.processMarketData is not a function

      319 |     test("should monitor data throughput", () => {
      320 |       for (let i = 0; i < 10; i++) {
    > 321 |         liveDataManager.processMarketData({
          |                         ^
      322 |           symbol: "AAPL",
      323 |           price: 150 + i,
      324 |           timestamp: Date.now(),

      at Object.processMarketData (tests/unit/utils/liveDataManager.test.js:321:25)

FAIL tests/unit/middleware/errorHandler.test.js
  ‚óè Error Handler Middleware ‚Ä∫ Generic Error Handling ‚Ä∫ should log error details

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "Error occurred:", ObjectContaining {"message": "Generic error message", "method": "GET", "stack": Any<String>, "timestamp": Any<String>, "url": "/test-generic-error"}
    Received: "AWS Lambda Error:", "{
      \"message\": \"Generic error message\",
      \"url\": \"/test-generic-error\",
      \"method\": \"GET\",
      \"timestamp\": \"2025-09-23T16:32:15.608Z\",
      \"environment\": \"test\"
    }"

    Number of calls: 1

      116 |       await request(app).get("/test-generic-error");
      117 |
    > 118 |       expect(consoleErrorSpy).toHaveBeenCalledWith(
          |                               ^
      119 |         "Error occurred:",
      120 |         expect.objectContaining({
      121 |           message: "Generic error message",

      at Object.toHaveBeenCalledWith (tests/unit/middleware/errorHandler.test.js:118:31)

FAIL tests/unit/utils/riskEngine.test.js
  ‚óè Risk Engine ‚Ä∫ risk limit monitoring ‚Ä∫ should monitor leverage limits

    expect(received).toBeCloseTo(expected, precision)

    Expected: 1.67
    Received: 0

    Expected precision:    2
    Expected difference: < 0.005
    Received difference:   1.67

      177 |       const check = riskEngine.checkLeverageLimits(portfolio, limits);
      178 |
    > 179 |       expect(check.currentLeverage).toBeCloseTo(1.67, 2);
          |                                     ^
      180 |       expect(check.exceeded).toBe(true);
      181 |     });
      182 |

      at Object.toBeCloseTo (tests/unit/utils/riskEngine.test.js:179:37)

  ‚óè Risk Engine ‚Ä∫ error handling and edge cases ‚Ä∫ should handle missing price data

    expect(received).toBeNull()

    Received: 0.2

      380 |       const volatility = await riskEngine.calculateVolatility("INVALID", 30);
      381 |
    > 382 |       expect(volatility).toBeNull();
          |                          ^
      383 |     });
      384 |
      385 |     test("should handle portfolio with zero weights", () => {

      at Object.toBeNull (tests/unit/utils/riskEngine.test.js:382:26)

  ‚óè Risk Engine ‚Ä∫ error handling and edge cases ‚Ä∫ should handle database connection errors

    expect(received).toBeNull()

    Received: 0.2

      411 |       const result = await riskEngine.calculateVolatility("AAPL", 30);
      412 |
    > 413 |       expect(result).toBeNull();
          |                      ^
      414 |     });
      415 |   });
      416 | });

      at Object.toBeNull (tests/unit/utils/riskEngine.test.js:413:22)

FAIL tests/unit/services/aiStrategyGenerator.test.js
  ‚óè AIStrategyGenerator Service ‚Ä∫ generateFromNaturalLanguage ‚Ä∫ should handle errors gracefully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "Strategy generation failed", ObjectContaining {"error": Any<Error>}
    Received: "Strategy generation failed", {"correlationId": "ai-strategy-1758645135808-w2lx0enxc", "error": "Service error"}

    Number of calls: 1

      165 |       expect(result.success).toBe(false);
      166 |       expect(result.error).toContain("Failed to generate strategy");
    > 167 |       expect(mockLogger.error).toHaveBeenCalledWith(
          |                                ^
      168 |         "Strategy generation failed",
      169 |         expect.objectContaining({
      170 |           error: expect.any(Error),

      at Object.toHaveBeenCalledWith (tests/unit/services/aiStrategyGenerator.test.js:167:32)

  ‚óè AIStrategyGenerator Service ‚Ä∫ generateWithClaude ‚Ä∫ should attempt Claude generation but fail due to configuration

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      181 |       const result = await generator.generateWithClaude(prompt, symbols);
      182 |
    > 183 |       expect(result.success).toBe(false);
          |                              ^
      184 |       expect(result.error).toContain("Claude AI service not configured");
      185 |       expect(mockLogger.warn).toHaveBeenCalledWith(
      186 |         "Claude AI service not available, using template fallback"

      at Object.toBe (tests/unit/services/aiStrategyGenerator.test.js:183:30)

  ‚óè AIStrategyGenerator Service ‚Ä∫ generateWithClaude ‚Ä∫ should handle Claude configuration errors

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      194 |       const result = await generator.generateWithClaude(prompt);
      195 |
    > 196 |       expect(result.success).toBe(false);
          |                              ^
      197 |       expect(result.error).toBeDefined();
      198 |     });
      199 |   });

      at Object.toBe (tests/unit/services/aiStrategyGenerator.test.js:196:30)

  ‚óè AIStrategyGenerator Service ‚Ä∫ generateWithTemplates ‚Ä∫ should generate momentum strategy from template

    expect(received).toBe(expected) // Object.is equality

    Expected: "template"
    Received: undefined

      211 |       expect(result.strategy.parameters).toHaveProperty("short_window");
      212 |       expect(result.strategy.parameters).toHaveProperty("long_window");
    > 213 |       expect(result.source).toBe("template");
          |                             ^
      214 |     });
      215 |
      216 |     test("should generate mean reversion strategy from template", async () => {

      at Object.toBe (tests/unit/services/aiStrategyGenerator.test.js:213:29)

  ‚óè AIStrategyGenerator Service ‚Ä∫ generateWithTemplates ‚Ä∫ should generate mean reversion strategy from template

    expect(received).toContain(expected) // indexOf

    Expected substring: "Mean Reversion"
    Received string:    "Mean_reversion-Multi-Asset-Trade-2025-09-23"

      221 |
      222 |       expect(result.success).toBe(true);
    > 223 |       expect(result.strategy.name).toContain("Mean Reversion");
          |                                    ^
      224 |       expect(result.strategy.parameters).toHaveProperty("rsi_period");
      225 |       expect(result.strategy.parameters).toHaveProperty("oversold_threshold");
      226 |     });

      at Object.toContain (tests/unit/services/aiStrategyGenerator.test.js:223:36)

  ‚óè AIStrategyGenerator Service ‚Ä∫ generateWithTemplates ‚Ä∫ should handle empty symbols gracefully

    No symbols available for strategy generation. Symbol data service must be configured and accessible for AI strategy creation.

      425 |   filterSymbolsByIntent(intent, availableSymbols) {
      426 |     if (!availableSymbols || availableSymbols.length === 0) {
    > 427 |       throw new Error(
          |             ^
      428 |         "No symbols available for strategy generation. Symbol data service must be configured and accessible for AI strategy creation."
      429 |       );
      430 |     }

      at AIStrategyGenerator.filterSymbolsByIntent (services/aiStrategyGenerator.js:427:13)
      at AIStrategyGenerator.filterSymbolsByIntent (services/aiStrategyGenerator.js:224:34)
      at Object.<anonymous> (tests/unit/services/aiStrategyGenerator.test.js:254:22)

  ‚óè AIStrategyGenerator Service ‚Ä∫ parseIntent ‚Ä∫ should parse buy intent correctly

    expect(received).toBe(expected) // Object.is equality

    Expected: "buy"
    Received: "unknown"

      269 |       for (const prompt of prompts) {
      270 |         const intent = await generator.parseIntent(prompt);
    > 271 |         expect(intent.action).toBe("buy");
          |                               ^
      272 |       }
      273 |     });
      274 |

      at Object.toBe (tests/unit/services/aiStrategyGenerator.test.js:271:31)

  ‚óè AIStrategyGenerator Service ‚Ä∫ parseIntent ‚Ä∫ should parse sell intent correctly

    expect(received).toBe(expected) // Object.is equality

    Expected: "sell"
    Received: "unknown"

      282 |       for (const prompt of prompts) {
      283 |         const intent = await generator.parseIntent(prompt);
    > 284 |         expect(intent.action).toBe("sell");
          |                               ^
      285 |       }
      286 |     });
      287 |

      at Object.toBe (tests/unit/services/aiStrategyGenerator.test.js:284:31)

  ‚óè AIStrategyGenerator Service ‚Ä∫ parseIntent ‚Ä∫ should parse strategy types correctly

    expect(received).toBe(expected) // Object.is equality

    Expected: "momentum"
    Received: undefined

      302 |       for (const testCase of testCases) {
      303 |         const intent = await generator.parseIntent(testCase.prompt);
    > 304 |         expect(intent.strategyType).toBe(testCase.expectedType);
          |                                     ^
      305 |       }
      306 |     });
      307 |

      at Object.toBe (tests/unit/services/aiStrategyGenerator.test.js:304:37)

  ‚óè AIStrategyGenerator Service ‚Ä∫ parseIntent ‚Ä∫ should identify timeframes from prompt

    expect(received).toBe(expected) // Object.is equality

    Expected: "5min"
    Received: "1min"

      325 |       for (const testCase of testCases) {
      326 |         const intent = await generator.parseIntent(testCase.prompt);
    > 327 |         expect(intent.timeframe).toBe(testCase.expected);
          |                                  ^
      328 |       }
      329 |     });
      330 |

      at Object.toBe (tests/unit/services/aiStrategyGenerator.test.js:327:34)

  ‚óè AIStrategyGenerator Service ‚Ä∫ generateStrategyCode ‚Ä∫ should generate code for momentum strategy

    expect(received).toContain(expected) // indexOf

    Expected substring: "def momentum_strategy"
    Received string:    "# AI Generated Strategy: undefined
    # Generated on: 2025-09-23T16:32:15.841Z¬∑¬∑
    # Filter to specific symbols of interest
    target_symbols = [\"AAPL\"]
    data_frames = {k: v for k, v in data_frames.items() if k in target_symbols}¬∑
    # Momentum Strategy Template
    # Buys when short MA crosses above long MA, sells when opposite¬∑
    import pandas as pd
    import numpy as np¬∑
    # Strategy Parameters
    short_window = parameters.get('short_window', 10)
    long_window = parameters.get('long_window', 30)
    position_size = parameters.get('position_size', 0.1)¬∑
    # Process each symbol
    for symbol in data_frames.keys():
        df = data_frames[symbol]¬∑¬∑¬∑¬∑¬∑
        if len(df) < long_window:
            continue¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑
        # Calculate moving averages
        df['SMA_short'] = df['close'].rolling(window=short_window).mean()
        df['SMA_long'] = df['close'].rolling(window=long_window).mean()¬∑¬∑¬∑¬∑¬∑
        # Get current values
        current_price = df['close'].iloc[-1]
        current_short_ma = df['SMA_short'].iloc[-1]
        current_long_ma = df['SMA_long'].iloc[-1]¬∑¬∑¬∑¬∑¬∑
        # Previous values for crossover detection
        prev_short_ma = df['SMA_short'].iloc[-2] if len(df) > 1 else current_short_ma
        prev_long_ma = df['SMA_long'].iloc[-2] if len(df) > 1 else current_long_ma¬∑¬∑¬∑¬∑¬∑
        # Check for crossover signals
        golden_cross = (current_short_ma > current_long_ma and prev_short_ma <= prev_long_ma)
        death_cross = (current_short_ma < current_long_ma and prev_short_ma >= prev_long_ma)¬∑¬∑¬∑¬∑¬∑
        # Calculate position size
        portfolio_value = context.portfolio_value
        dollar_amount = portfolio_value * position_size
        shares = int(dollar_amount / current_price)¬∑¬∑¬∑¬∑¬∑
        # Generate signals
        if golden_cross and shares > 0:
            success = context.buy(symbol, shares, current_price)
            signals.append({
                'action': 'BUY',
                'symbol': symbol,
                'shares': shares,
                'price': current_price,
                'reason': 'Golden Cross',
                'short_ma': current_short_ma,
                'long_ma': current_long_ma,
                'success': success
            })
        elif death_cross:
            # Sell existing position
            current_position = context.get_position(symbol)
            if current_position > 0:
                success = context.sell(symbol, current_position, current_price)
                signals.append({
                    'action': 'SELL',
                    'symbol': symbol,
                    'shares': current_position,
                    'price': current_price,
                    'reason': 'Death Cross',
                    'short_ma': current_short_ma,
                    'long_ma': current_long_ma,
                    'success': success
                })¬∑
    # Log strategy performance
    signals.append({
        'info': f'Processed {len(data_frames)} symbols with momentum strategy',
        'parameters': {
            'short_window': short_window,
            'long_window': long_window,
            'position_size': position_size
        }
    })"

      353 |       );
      354 |
    > 355 |       expect(code).toContain("def momentum_strategy");
          |                    ^
      356 |       expect(code).toContain("short_window");
      357 |       expect(code).toContain("long_window");
      358 |       expect(code).toContain("context.buy");

      at Object.toContain (tests/unit/services/aiStrategyGenerator.test.js:355:20)

  ‚óè AIStrategyGenerator Service ‚Ä∫ generateStrategyCode ‚Ä∫ should generate code for mean reversion strategy

    expect(received).toContain(expected) // indexOf

    Expected substring: "def mean_reversion_strategy"
    Received string:    "# AI Generated Strategy: undefined
    # Generated on: 2025-09-23T16:32:15.842Z¬∑¬∑
    # Filter to specific symbols of interest
    target_symbols = [\"MSFT\"]
    data_frames = {k: v for k, v in data_frames.items() if k in target_symbols}¬∑
    # Mean Reversion Strategy Template
    # Uses RSI to identify oversold/overbought conditions¬∑
    import pandas as pd
    import numpy as np¬∑
    # Strategy Parameters
    rsi_period = parameters.get('rsi_period', 14)
    oversold_threshold = parameters.get('oversold_threshold', 30)
    overbought_threshold = parameters.get('overbought_threshold', 70)
    position_size = parameters.get('position_size', 0.1)¬∑
    def calculate_rsi(prices, period=14):
        \"\"\"Calculate RSI indicator\"\"\"
        delta = prices.diff()
        gain = (delta.where(delta > 0, 0)).rolling(window=period).mean()
        loss = (-delta.where(delta < 0, 0)).rolling(window=period).mean()
        rs = gain / loss
        rsi = 100 - (100 / (1 + rs))
        return rsi¬∑
    # Process each symbol
    for symbol in data_frames.keys():
        df = data_frames[symbol]¬∑¬∑¬∑¬∑¬∑
        if len(df) < rsi_period + 1:
            continue¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑
        # Calculate RSI
        df['RSI'] = calculate_rsi(df['close'], rsi_period)¬∑¬∑¬∑¬∑¬∑
        # Get current values
        current_price = df['close'].iloc[-1]
        current_rsi = df['RSI'].iloc[-1]¬∑¬∑¬∑¬∑¬∑
        # Skip if RSI not available
        if pd.isna(current_rsi):
            continue¬∑¬∑¬∑¬∑¬∑
        # Calculate position size
        portfolio_value = context.portfolio_value
        dollar_amount = portfolio_value * position_size
        shares = int(dollar_amount / current_price)¬∑¬∑¬∑¬∑¬∑
        # Generate signals based on RSI
        if current_rsi < oversold_threshold and shares > 0:
            # Oversold - Buy signal
            success = context.buy(symbol, shares, current_price)
            signals.append({
                'action': 'BUY',
                'symbol': symbol,
                'shares': shares,
                'price': current_price,
                'reason': 'RSI Oversold',
                'rsi': current_rsi,
                'threshold': oversold_threshold,
                'success': success
            })
        elif current_rsi > overbought_threshold:
            # Overbought - Sell signal
            current_position = context.get_position(symbol)
            if current_position > 0:
                success = context.sell(symbol, current_position, current_price)
                signals.append({
                    'action': 'SELL',
                    'symbol': symbol,
                    'shares': current_position,
                    'price': current_price,
                    'reason': 'RSI Overbought',
                    'rsi': current_rsi,
                    'threshold': overbought_threshold,
                    'success': success
                })¬∑
    # Log strategy performance
    signals.append({
        'info': f'Processed {len(data_frames)} symbols with mean reversion strategy',
        'parameters': {
            'rsi_period': rsi_period,
            'oversold_threshold': oversold_threshold,
            'overbought_threshold': overbought_threshold,
            'position_size': position_size
        }
    })"

      376 |       );
      377 |
    > 378 |       expect(code).toContain("def mean_reversion_strategy");
          |                    ^
      379 |       expect(code).toContain("rsi_period");
      380 |       expect(code).toContain("oversold_threshold");
      381 |       expect(code).toContain("overbought_threshold");

      at Object.toContain (tests/unit/services/aiStrategyGenerator.test.js:378:20)

  ‚óè AIStrategyGenerator Service ‚Ä∫ generateStrategyCode ‚Ä∫ should generate code for breakout strategy

    expect(received).toContain(expected) // indexOf

    Expected substring: "def breakout_strategy"
    Received string:    "# AI Generated Strategy: undefined
    # Generated on: 2025-09-23T16:32:15.842Z¬∑¬∑
    # Filter to specific symbols of interest
    target_symbols = [\"GOOGL\"]
    data_frames = {k: v for k, v in data_frames.items() if k in target_symbols}¬∑
    # Breakout Strategy Template
    # Uses Bollinger Bands to identify breakout opportunities¬∑
    import pandas as pd
    import numpy as np¬∑
    # Strategy Parameters
    bb_period = parameters.get('bb_period', 20)
    bb_std = parameters.get('bb_std', 2)
    volume_threshold = parameters.get('volume_threshold', 1.5)
    position_size = parameters.get('position_size', 0.1)¬∑
    def calculate_bollinger_bands(prices, period=20, std_dev=2):
        \"\"\"Calculate Bollinger Bands\"\"\"
        sma = prices.rolling(window=period).mean()
        std = prices.rolling(window=period).std()
        upper_band = sma + (std * std_dev)
        lower_band = sma - (std * std_dev)
        return sma, upper_band, lower_band¬∑
    # Process each symbol
    for symbol in data_frames.keys():
        df = data_frames[symbol]¬∑¬∑¬∑¬∑¬∑
        if len(df) < bb_period + 1:
            continue¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑
        # Calculate Bollinger Bands
        df['BB_Middle'], df['BB_Upper'], df['BB_Lower'] = calculate_bollinger_bands(
            df['close'], bb_period, bb_std
        )¬∑¬∑¬∑¬∑¬∑
        # Calculate volume moving average
        df['Volume_MA'] = df['volume'].rolling(window=bb_period).mean()¬∑¬∑¬∑¬∑¬∑
        # Get current values
        current_price = df['close'].iloc[-1]
        current_volume = df['volume'].iloc[-1]
        bb_upper = df['BB_Upper'].iloc[-1]
        bb_lower = df['BB_Lower'].iloc[-1]
        volume_ma = df['Volume_MA'].iloc[-1]¬∑¬∑¬∑¬∑¬∑
        # Skip if indicators not available
        if pd.isna(bb_upper) or pd.isna(volume_ma):
            continue¬∑¬∑¬∑¬∑¬∑
        # Check for volume spike
        volume_spike = current_volume > (volume_ma * volume_threshold)¬∑¬∑¬∑¬∑¬∑
        # Calculate position size
        portfolio_value = context.portfolio_value
        dollar_amount = portfolio_value * position_size
        shares = int(dollar_amount / current_price)¬∑¬∑¬∑¬∑¬∑
        # Generate breakout signals
        if current_price > bb_upper and volume_spike and shares > 0:
            # Upward breakout with volume confirmation
            success = context.buy(symbol, shares, current_price)
            signals.append({
                'action': 'BUY',
                'symbol': symbol,
                'shares': shares,
                'price': current_price,
                'reason': 'Upward Breakout',
                'bb_upper': bb_upper,
                'volume_ratio': current_volume / volume_ma,
                'success': success
            })
        elif current_price < bb_lower and volume_spike:
            # Downward breakout - sell existing positions
            current_position = context.get_position(symbol)
            if current_position > 0:
                success = context.sell(symbol, current_position, current_price)
                signals.append({
                    'action': 'SELL',
                    'symbol': symbol,
                    'shares': current_position,
                    'price': current_price,
                    'reason': 'Downward Breakout',
                    'bb_lower': bb_lower,
                    'volume_ratio': current_volume / volume_ma,
                    'success': success
                })¬∑
    # Log strategy performance
    signals.append({
        'info': f'Processed {len(data_frames)} symbols with breakout strategy',
        'parameters': {
            'bb_period': bb_period,
            'bb_std': bb_std,
            'volume_threshold': volume_threshold,
            'position_size': position_size
        }
    })"

      398 |       );
      399 |
    > 400 |       expect(code).toContain("def breakout_strategy");
          |                    ^
      401 |       expect(code).toContain("bb_period");
      402 |       expect(code).toContain("bb_std");
      403 |       expect(code).toContain("volume_threshold");

      at Object.toContain (tests/unit/services/aiStrategyGenerator.test.js:400:20)

  ‚óè AIStrategyGenerator Service ‚Ä∫ generateStrategyCode ‚Ä∫ should include proper error handling in generated code

    expect(received).toContain(expected) // indexOf

    Expected substring: "try:"
    Received string:    "# AI Generated Strategy: undefined
    # Generated on: 2025-09-23T16:32:15.843Z¬∑¬∑
    # Filter to specific symbols of interest
    target_symbols = [\"SPY\"]
    data_frames = {k: v for k, v in data_frames.items() if k in target_symbols}¬∑
    # Momentum Strategy Template
    # Buys when short MA crosses above long MA, sells when opposite¬∑
    import pandas as pd
    import numpy as np¬∑
    # Strategy Parameters
    short_window = parameters.get('short_window', 10)
    long_window = parameters.get('long_window', 30)
    position_size = parameters.get('position_size', 0.1)¬∑
    # Process each symbol
    for symbol in data_frames.keys():
        df = data_frames[symbol]¬∑¬∑¬∑¬∑¬∑
        if len(df) < long_window:
            continue¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑
        # Calculate moving averages
        df['SMA_short'] = df['close'].rolling(window=short_window).mean()
        df['SMA_long'] = df['close'].rolling(window=long_window).mean()¬∑¬∑¬∑¬∑¬∑
        # Get current values
        current_price = df['close'].iloc[-1]
        current_short_ma = df['SMA_short'].iloc[-1]
        current_long_ma = df['SMA_long'].iloc[-1]¬∑¬∑¬∑¬∑¬∑
        # Previous values for crossover detection
        prev_short_ma = df['SMA_short'].iloc[-2] if len(df) > 1 else current_short_ma
        prev_long_ma = df['SMA_long'].iloc[-2] if len(df) > 1 else current_long_ma¬∑¬∑¬∑¬∑¬∑
        # Check for crossover signals
        golden_cross = (current_short_ma > current_long_ma and prev_short_ma <= prev_long_ma)
        death_cross = (current_short_ma < current_long_ma and prev_short_ma >= prev_long_ma)¬∑¬∑¬∑¬∑¬∑
        # Calculate position size
        portfolio_value = context.portfolio_value
        dollar_amount = portfolio_value * position_size
        shares = int(dollar_amount / current_price)¬∑¬∑¬∑¬∑¬∑
        # Generate signals
        if golden_cross and shares > 0:
            success = context.buy(symbol, shares, current_price)
            signals.append({
                'action': 'BUY',
                'symbol': symbol,
                'shares': shares,
                'price': current_price,
                'reason': 'Golden Cross',
                'short_ma': current_short_ma,
                'long_ma': current_long_ma,
                'success': success
            })
        elif death_cross:
            # Sell existing position
            current_position = context.get_position(symbol)
            if current_position > 0:
                success = context.sell(symbol, current_position, current_price)
                signals.append({
                    'action': 'SELL',
                    'symbol': symbol,
                    'shares': current_position,
                    'price': current_price,
                    'reason': 'Death Cross',
                    'short_ma': current_short_ma,
                    'long_ma': current_long_ma,
                    'success': success
                })¬∑
    # Log strategy performance
    signals.append({
        'info': f'Processed {len(data_frames)} symbols with momentum strategy',
        'parameters': {
            'short_window': short_window,
            'long_window': long_window,
            'position_size': position_size
        }
    })"

      430 |       );
      431 |
    > 432 |       expect(code).toContain("try:");
          |                    ^
      433 |       expect(code).toContain("except Exception as e:");
      434 |       expect(code).toContain('print(f"Error: {e}")');
      435 |     });

      at Object.toContain (tests/unit/services/aiStrategyGenerator.test.js:432:20)

  ‚óè AIStrategyGenerator Service ‚Ä∫ validateStrategy ‚Ä∫ should validate complete strategy successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: undefined

      448 |       const result = await generator.validateStrategy(strategy);
      449 |
    > 450 |       expect(result.valid).toBe(true);
          |                            ^
      451 |       expect(result.errors).toHaveLength(0);
      452 |     });
      453 |

      at Object.toBe (tests/unit/services/aiStrategyGenerator.test.js:450:28)

  ‚óè AIStrategyGenerator Service ‚Ä∫ validateStrategy ‚Ä∫ should identify missing required fields

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: undefined

      460 |       const result = await generator.validateStrategy(incompleteStrategy);
      461 |
    > 462 |       expect(result.valid).toBe(false);
          |                            ^
      463 |       expect(result.errors.length).toBeGreaterThan(0);
      464 |       expect(result.errors).toEqual(
      465 |         expect.arrayContaining([

      at Object.toBe (tests/unit/services/aiStrategyGenerator.test.js:462:28)

  ‚óè AIStrategyGenerator Service ‚Ä∫ validateStrategy ‚Ä∫ should validate code syntax

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: undefined

      482 |       const result = await generator.validateStrategy(strategyWithBadCode);
      483 |
    > 484 |       expect(result.valid).toBe(false);
          |                            ^
      485 |       expect(result.errors).toEqual(
      486 |         expect.arrayContaining([expect.stringContaining("syntax")])
      487 |       );

      at Object.toBe (tests/unit/services/aiStrategyGenerator.test.js:484:28)

  ‚óè AIStrategyGenerator Service ‚Ä∫ validateStrategy ‚Ä∫ should validate parameter types

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: undefined

      502 |       const result = await generator.validateStrategy(strategyWithBadParams);
      503 |
    > 504 |       expect(result.valid).toBe(false);
          |                            ^
      505 |       expect(result.errors.length).toBeGreaterThan(0);
      506 |     });
      507 |

      at Object.toBe (tests/unit/services/aiStrategyGenerator.test.js:504:28)

  ‚óè AIStrategyGenerator Service ‚Ä∫ Template Methods ‚Ä∫ should return momentum template code

    expect(received).toContain(expected) // indexOf

    Expected substring: "def momentum_strategy"
    Received string:    "# Momentum Strategy Template
    # Buys when short MA crosses above long MA, sells when opposite¬∑
    import pandas as pd
    import numpy as np¬∑
    # Strategy Parameters
    short_window = parameters.get('short_window', 10)
    long_window = parameters.get('long_window', 30)
    position_size = parameters.get('position_size', 0.1)¬∑
    # Process each symbol
    for symbol in data_frames.keys():
        df = data_frames[symbol]¬∑¬∑¬∑¬∑¬∑
        if len(df) < long_window:
            continue¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑
        # Calculate moving averages
        df['SMA_short'] = df['close'].rolling(window=short_window).mean()
        df['SMA_long'] = df['close'].rolling(window=long_window).mean()¬∑¬∑¬∑¬∑¬∑
        # Get current values
        current_price = df['close'].iloc[-1]
        current_short_ma = df['SMA_short'].iloc[-1]
        current_long_ma = df['SMA_long'].iloc[-1]¬∑¬∑¬∑¬∑¬∑
        # Previous values for crossover detection
        prev_short_ma = df['SMA_short'].iloc[-2] if len(df) > 1 else current_short_ma
        prev_long_ma = df['SMA_long'].iloc[-2] if len(df) > 1 else current_long_ma¬∑¬∑¬∑¬∑¬∑
        # Check for crossover signals
        golden_cross = (current_short_ma > current_long_ma and prev_short_ma <= prev_long_ma)
        death_cross = (current_short_ma < current_long_ma and prev_short_ma >= prev_long_ma)¬∑¬∑¬∑¬∑¬∑
        # Calculate position size
        portfolio_value = context.portfolio_value
        dollar_amount = portfolio_value * position_size
        shares = int(dollar_amount / current_price)¬∑¬∑¬∑¬∑¬∑
        # Generate signals
        if golden_cross and shares > 0:
            success = context.buy(symbol, shares, current_price)
            signals.append({
                'action': 'BUY',
                'symbol': symbol,
                'shares': shares,
                'price': current_price,
                'reason': 'Golden Cross',
                'short_ma': current_short_ma,
                'long_ma': current_long_ma,
                'success': success
            })
        elif death_cross:
            # Sell existing position
            current_position = context.get_position(symbol)
            if current_position > 0:
                success = context.sell(symbol, current_position, current_price)
                signals.append({
                    'action': 'SELL',
                    'symbol': symbol,
                    'shares': current_position,
                    'price': current_price,
                    'reason': 'Death Cross',
                    'short_ma': current_short_ma,
                    'long_ma': current_long_ma,
                    'success': success
                })¬∑
    # Log strategy performance
    signals.append({
        'info': f'Processed {len(data_frames)} symbols with momentum strategy',
        'parameters': {
            'short_window': short_window,
            'long_window': long_window,
            'position_size': position_size
        }
    })"

      526 |       const code = generator.getMomentumTemplate();
      527 |
    > 528 |       expect(code).toContain("def momentum_strategy");
          |                    ^
      529 |       expect(code).toContain("short_window");
      530 |       expect(code).toContain("long_window");
      531 |       expect(typeof code).toBe("string");

      at Object.toContain (tests/unit/services/aiStrategyGenerator.test.js:528:20)

  ‚óè AIStrategyGenerator Service ‚Ä∫ Template Methods ‚Ä∫ should return mean reversion template code

    expect(received).toContain(expected) // indexOf

    Expected substring: "def mean_reversion_strategy"
    Received string:    "# Mean Reversion Strategy Template
    # Uses RSI to identify oversold/overbought conditions¬∑
    import pandas as pd
    import numpy as np¬∑
    # Strategy Parameters
    rsi_period = parameters.get('rsi_period', 14)
    oversold_threshold = parameters.get('oversold_threshold', 30)
    overbought_threshold = parameters.get('overbought_threshold', 70)
    position_size = parameters.get('position_size', 0.1)¬∑
    def calculate_rsi(prices, period=14):
        \"\"\"Calculate RSI indicator\"\"\"
        delta = prices.diff()
        gain = (delta.where(delta > 0, 0)).rolling(window=period).mean()
        loss = (-delta.where(delta < 0, 0)).rolling(window=period).mean()
        rs = gain / loss
        rsi = 100 - (100 / (1 + rs))
        return rsi¬∑
    # Process each symbol
    for symbol in data_frames.keys():
        df = data_frames[symbol]¬∑¬∑¬∑¬∑¬∑
        if len(df) < rsi_period + 1:
            continue¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑
        # Calculate RSI
        df['RSI'] = calculate_rsi(df['close'], rsi_period)¬∑¬∑¬∑¬∑¬∑
        # Get current values
        current_price = df['close'].iloc[-1]
        current_rsi = df['RSI'].iloc[-1]¬∑¬∑¬∑¬∑¬∑
        # Skip if RSI not available
        if pd.isna(current_rsi):
            continue¬∑¬∑¬∑¬∑¬∑
        # Calculate position size
        portfolio_value = context.portfolio_value
        dollar_amount = portfolio_value * position_size
        shares = int(dollar_amount / current_price)¬∑¬∑¬∑¬∑¬∑
        # Generate signals based on RSI
        if current_rsi < oversold_threshold and shares > 0:
            # Oversold - Buy signal
            success = context.buy(symbol, shares, current_price)
            signals.append({
                'action': 'BUY',
                'symbol': symbol,
                'shares': shares,
                'price': current_price,
                'reason': 'RSI Oversold',
                'rsi': current_rsi,
                'threshold': oversold_threshold,
                'success': success
            })
        elif current_rsi > overbought_threshold:
            # Overbought - Sell signal
            current_position = context.get_position(symbol)
            if current_position > 0:
                success = context.sell(symbol, current_position, current_price)
                signals.append({
                    'action': 'SELL',
                    'symbol': symbol,
                    'shares': current_position,
                    'price': current_price,
                    'reason': 'RSI Overbought',
                    'rsi': current_rsi,
                    'threshold': overbought_threshold,
                    'success': success
                })¬∑
    # Log strategy performance
    signals.append({
        'info': f'Processed {len(data_frames)} symbols with mean reversion strategy',
        'parameters': {
            'rsi_period': rsi_period,
            'oversold_threshold': oversold_threshold,
            'overbought_threshold': overbought_threshold,
            'position_size': position_size
        }
    })"

      536 |       const code = generator.getMeanReversionTemplate();
      537 |
    > 538 |       expect(code).toContain("def mean_reversion_strategy");
          |                    ^
      539 |       expect(code).toContain("rsi_period");
      540 |       expect(code).toContain("oversold_threshold");
      541 |       expect(typeof code).toBe("string");

      at Object.toContain (tests/unit/services/aiStrategyGenerator.test.js:538:20)

  ‚óè AIStrategyGenerator Service ‚Ä∫ Template Methods ‚Ä∫ should return breakout template code

    expect(received).toContain(expected) // indexOf

    Expected substring: "def breakout_strategy"
    Received string:    "# Breakout Strategy Template
    # Uses Bollinger Bands to identify breakout opportunities¬∑
    import pandas as pd
    import numpy as np¬∑
    # Strategy Parameters
    bb_period = parameters.get('bb_period', 20)
    bb_std = parameters.get('bb_std', 2)
    volume_threshold = parameters.get('volume_threshold', 1.5)
    position_size = parameters.get('position_size', 0.1)¬∑
    def calculate_bollinger_bands(prices, period=20, std_dev=2):
        \"\"\"Calculate Bollinger Bands\"\"\"
        sma = prices.rolling(window=period).mean()
        std = prices.rolling(window=period).std()
        upper_band = sma + (std * std_dev)
        lower_band = sma - (std * std_dev)
        return sma, upper_band, lower_band¬∑
    # Process each symbol
    for symbol in data_frames.keys():
        df = data_frames[symbol]¬∑¬∑¬∑¬∑¬∑
        if len(df) < bb_period + 1:
            continue¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑
        # Calculate Bollinger Bands
        df['BB_Middle'], df['BB_Upper'], df['BB_Lower'] = calculate_bollinger_bands(
            df['close'], bb_period, bb_std
        )¬∑¬∑¬∑¬∑¬∑
        # Calculate volume moving average
        df['Volume_MA'] = df['volume'].rolling(window=bb_period).mean()¬∑¬∑¬∑¬∑¬∑
        # Get current values
        current_price = df['close'].iloc[-1]
        current_volume = df['volume'].iloc[-1]
        bb_upper = df['BB_Upper'].iloc[-1]
        bb_lower = df['BB_Lower'].iloc[-1]
        volume_ma = df['Volume_MA'].iloc[-1]¬∑¬∑¬∑¬∑¬∑
        # Skip if indicators not available
        if pd.isna(bb_upper) or pd.isna(volume_ma):
            continue¬∑¬∑¬∑¬∑¬∑
        # Check for volume spike
        volume_spike = current_volume > (volume_ma * volume_threshold)¬∑¬∑¬∑¬∑¬∑
        # Calculate position size
        portfolio_value = context.portfolio_value
        dollar_amount = portfolio_value * position_size
        shares = int(dollar_amount / current_price)¬∑¬∑¬∑¬∑¬∑
        # Generate breakout signals
        if current_price > bb_upper and volume_spike and shares > 0:
            # Upward breakout with volume confirmation
            success = context.buy(symbol, shares, current_price)
            signals.append({
                'action': 'BUY',
                'symbol': symbol,
                'shares': shares,
                'price': current_price,
                'reason': 'Upward Breakout',
                'bb_upper': bb_upper,
                'volume_ratio': current_volume / volume_ma,
                'success': success
            })
        elif current_price < bb_lower and volume_spike:
            # Downward breakout - sell existing positions
            current_position = context.get_position(symbol)
            if current_position > 0:
                success = context.sell(symbol, current_position, current_price)
                signals.append({
                    'action': 'SELL',
                    'symbol': symbol,
                    'shares': current_position,
                    'price': current_price,
                    'reason': 'Downward Breakout',
                    'bb_lower': bb_lower,
                    'volume_ratio': current_volume / volume_ma,
                    'success': success
                })¬∑
    # Log strategy performance
    signals.append({
        'info': f'Processed {len(data_frames)} symbols with breakout strategy',
        'parameters': {
            'bb_period': bb_period,
            'bb_std': bb_std,
            'volume_threshold': volume_threshold,
            'position_size': position_size
        }
    })"

      546 |       const code = generator.getBreakoutTemplate();
      547 |
    > 548 |       expect(code).toContain("def breakout_strategy");
          |                    ^
      549 |       expect(code).toContain("bb_period");
      550 |       expect(code).toContain("volume_threshold");
      551 |       expect(typeof code).toBe("string");

      at Object.toContain (tests/unit/services/aiStrategyGenerator.test.js:548:20)

  ‚óè AIStrategyGenerator Service ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle null or undefined prompts

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      618 |       results.forEach((result) => {
      619 |         expect(result.status).toBe("fulfilled");
    > 620 |         expect(result.value.success).toBe(false);
          |                                      ^
      621 |       });
      622 |     });
      623 |

      at toBe (tests/unit/services/aiStrategyGenerator.test.js:620:38)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/unit/services/aiStrategyGenerator.test.js:618:15)

  ‚óè AIStrategyGenerator Service ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle empty symbols array

    expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 7

    - Array []
    + Array [
    +   "AAPL",
    +   "GOOGL",
    +   "MSFT",
    +   "SPY",
    +   "QQQ",
    + ]

      645 |
      646 |       expect(result.success).toBe(true);
    > 647 |       expect(result.strategy.symbols).toEqual([]);
          |                                       ^
      648 |     });
      649 |
      650 |     test("should handle very large symbols array", async () => {

      at Object.toEqual (tests/unit/services/aiStrategyGenerator.test.js:647:39)

  ‚óè AIStrategyGenerator Service ‚Ä∫ Integration with Logger ‚Ä∫ should log errors appropriately

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "Strategy generation failed", ObjectContaining {"error": Any<Error>}

    Number of calls: 0

      725 |       await generator.generateFromNaturalLanguage("test strategy");
      726 |
    > 727 |       expect(mockLogger.error).toHaveBeenCalledWith(
          |                                ^
      728 |         "Strategy generation failed",
      729 |         expect.objectContaining({
      730 |           error: expect.any(Error),

      at Object.toHaveBeenCalledWith (tests/unit/services/aiStrategyGenerator.test.js:727:32)

FAIL tests/integration/utils/schemaValidator.test.js
  ‚óè Schema Validator Integration Tests ‚Ä∫ Stock Data Validation ‚Ä∫ should reject invalid stock data

    expect(received).toContain(expected) // indexOf

    Expected value: "symbol"
    Received array: [undefined, undefined, undefined]

      55 |
      56 |       const errorFields = validation.errors.map((err) => err.field);
    > 57 |       expect(errorFields).toContain("symbol");
         |                           ^
      58 |       expect(errorFields).toContain("price");
      59 |       expect(errorFields).toContain("volume");
      60 |       expect(errorFields).toContain("timestamp");

      at Object.toContain (tests/integration/utils/schemaValidator.test.js:57:27)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Stock Data Validation ‚Ä∫ should validate portfolio data

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      85 |       const validation = schemaValidator.validate(validPortfolio, "portfolio");
      86 |
    > 87 |       expect(validation.isValid).toBe(true);
         |                                  ^
      88 |       expect(validation.errors).toEqual([]);
      89 |       expect(validation.sanitizedData.holdings.length).toBe(2);
      90 |     });

      at Object.toBe (tests/integration/utils/schemaValidator.test.js:87:34)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Trading Order Validation ‚Ä∫ should validate buy order

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      105 |       const validation = schemaValidator.validate(buyOrder, "tradingOrder");
      106 |
    > 107 |       expect(validation.isValid).toBe(true);
          |                                  ^
      108 |       expect(validation.sanitizedData.side).toBe("buy");
      109 |       expect(validation.sanitizedData.type).toBe("market");
      110 |       expect(validation.sanitizedData.quantity).toBe(100);

      at Object.toBe (tests/integration/utils/schemaValidator.test.js:107:34)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Trading Order Validation ‚Ä∫ should validate limit order with price

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      125 |       const validation = schemaValidator.validate(limitOrder, "tradingOrder");
      126 |
    > 127 |       expect(validation.isValid).toBe(true);
          |                                  ^
      128 |       expect(validation.sanitizedData.type).toBe("limit");
      129 |       expect(validation.sanitizedData.limitPrice).toBe(155.0);
      130 |     });

      at Object.toBe (tests/integration/utils/schemaValidator.test.js:127:34)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Trading Order Validation ‚Ä∫ should reject invalid trading orders

    expect(received).toContain(expected) // indexOf

    Expected value: "INVALID_USER_ID"
    Received array: [undefined, undefined, undefined, undefined, undefined]

      146 |
      147 |       const errorCodes = validation.errors.map((err) => err.code);
    > 148 |       expect(errorCodes).toContain("INVALID_USER_ID");
          |                          ^
      149 |       expect(errorCodes).toContain("INVALID_SYMBOL");
      150 |       expect(errorCodes).toContain("INVALID_SIDE");
      151 |       expect(errorCodes).toContain("INVALID_QUANTITY");

      at Object.toContain (tests/integration/utils/schemaValidator.test.js:148:26)

  ‚óè Schema Validator Integration Tests ‚Ä∫ User Data Validation ‚Ä∫ should validate user registration data

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      168 |       const validation = schemaValidator.validate(userData, "userRegistration");
      169 |
    > 170 |       expect(validation.isValid).toBe(true);
          |                                  ^
      171 |       expect(validation.sanitizedData.email).toBe("test@example.com");
      172 |       expect(validation.sanitizedData.country).toBe("US");
      173 |       // Password should be excluded from sanitized data for security

      at Object.toBe (tests/integration/utils/schemaValidator.test.js:170:34)

  ‚óè Schema Validator Integration Tests ‚Ä∫ User Data Validation ‚Ä∫ should validate API key configuration

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      189 |       const validation = schemaValidator.validate(apiKeyConfig, "apiKeyConfig");
      190 |
    > 191 |       expect(validation.isValid).toBe(true);
          |                                  ^
      192 |       expect(validation.sanitizedData.provider).toBe("alpaca");
      193 |       expect(validation.sanitizedData.environment).toBe("paper");
      194 |       expect(Array.isArray(validation.sanitizedData.permissions)).toBe(true);

      at Object.toBe (tests/integration/utils/schemaValidator.test.js:191:34)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Market Data Validation ‚Ä∫ should validate technical indicators

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      223 |       );
      224 |
    > 225 |       expect(validation.isValid).toBe(true);
          |                                  ^
      226 |       expect(validation.sanitizedData.indicators.rsi).toBe(65.5);
      227 |       expect(validation.sanitizedData.indicators.macd.macd).toBe(1.25);
      228 |       expect(validation.sanitizedData.indicators.bollinger.upper).toBe(155.0);

      at Object.toBe (tests/integration/utils/schemaValidator.test.js:225:34)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Market Data Validation ‚Ä∫ should validate earnings data

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      249 |       const validation = schemaValidator.validate(earningsData, "earningsData");
      250 |
    > 251 |       expect(validation.isValid).toBe(true);
          |                                  ^
      252 |       expect(validation.sanitizedData.quarter).toBe("Q1");
      253 |       expect(validation.sanitizedData.year).toBe(2023);
      254 |       expect(validation.sanitizedData.surprise.epsPercent).toBe(4.83);

      at Object.toBe (tests/integration/utils/schemaValidator.test.js:251:34)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Real-time Data Validation ‚Ä∫ should validate WebSocket message format

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      276 |       );
      277 |
    > 278 |       expect(validation.isValid).toBe(true);
          |                                  ^
      279 |       expect(validation.sanitizedData.type).toBe("quote");
      280 |       expect(validation.sanitizedData.symbol).toBe("AAPL");
      281 |       expect(validation.sanitizedData.data.price).toBe(150.25);

      at Object.toBe (tests/integration/utils/schemaValidator.test.js:278:34)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Real-time Data Validation ‚Ä∫ should validate streaming data batch

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      312 |       );
      313 |
    > 314 |       expect(validation.isValid).toBe(true);
          |                                  ^
      315 |       expect(validation.sanitizedData.messages.length).toBe(2);
      316 |       expect(validation.sanitizedData.source).toBe("alpaca");
      317 |     });

      at Object.toBe (tests/integration/utils/schemaValidator.test.js:314:34)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Custom Schema Validation ‚Ä∫ should validate with custom schema

    TypeError: schemaValidator.validateWithCustomSchema is not a function

      340 |       };
      341 |
    > 342 |       const validation = schemaValidator.validateWithCustomSchema(
          |                                          ^
      343 |         testData,
      344 |         customSchema
      345 |       );

      at Object.validateWithCustomSchema (tests/integration/utils/schemaValidator.test.js:342:42)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Custom Schema Validation ‚Ä∫ should register and use persistent custom schemas

    TypeError: schemaValidator.registerSchema is not a function

      362 |
      363 |       // Register schema
    > 364 |       schemaValidator.registerSchema(schemaName, schema);
          |                       ^
      365 |
      366 |       // Use registered schema
      367 |       const testData = { id: "test_123", value: 456 };

      at Object.registerSchema (tests/integration/utils/schemaValidator.test.js:364:23)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Data Sanitization ‚Ä∫ should sanitize and transform data

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      389 |       });
      390 |
    > 391 |       expect(validation.isValid).toBe(true);
          |                                  ^
      392 |       expect(validation.sanitizedData.symbol).toBe("AAPL");
      393 |       expect(validation.sanitizedData.price).toBe(150.25);
      394 |       expect(validation.sanitizedData.description).not.toContain("<script>");

      at Object.toBe (tests/integration/utils/schemaValidator.test.js:391:34)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Data Sanitization ‚Ä∫ should handle SQL injection attempts

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: undefined

      408 |       });
      409 |
    > 410 |       expect(validation.sanitized).toBe(true);
          |                                    ^
      411 |       expect(validation.sanitizedData.symbol).not.toContain("DROP TABLE");
      412 |       expect(validation.sanitizedData.userId).not.toContain("OR '1'='1");
      413 |       expect(validation.sanitizedData.description).not.toContain("DELETE FROM");

      at Object.toBe (tests/integration/utils/schemaValidator.test.js:410:36)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Performance and Scalability ‚Ä∫ should cache compiled schemas for performance

    expect(received).toBeLessThan(expected)

    Expected: < 0
    Received:   0

      452 |       expect(validation1.isValid).toBe(true);
      453 |       expect(validation2.isValid).toBe(true);
    > 454 |       expect(duration2).toBeLessThan(duration1); // Cached should be faster
          |                         ^
      455 |     });
      456 |   });
      457 |

      at Object.toBeLessThan (tests/integration/utils/schemaValidator.test.js:454:25)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle malformed data gracefully

    TypeError: Cannot read properties of null (reading 'symbol')

      732 |     // Check required fields
      733 |     for (const requiredField of schema.required) {
    > 734 |       if (data[requiredField] === undefined || data[requiredField] === null) {
          |               ^
      735 |         errors.push(`Required field "${requiredField}" is missing`);
      736 |       }
      737 |     }

      at SchemaValidator.validate (utils/schemaValidator.js:734:15)
      at Object.validate (utils/schemaValidator.js:1576:51)
      at validate (tests/integration/utils/schemaValidator.test.js:463:44)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/utils/schemaValidator.test.js:462:21)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle circular references

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      477 |       expect(
      478 |         validation.errors.some((err) => err.code === "CIRCULAR_REFERENCE")
    > 479 |       ).toBe(true);
          |         ^
      480 |     });
      481 |
      482 |     test("should handle very large numbers", () => {

      at Object.toBe (tests/integration/utils/schemaValidator.test.js:479:9)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle very large numbers

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      496 |       expect(
      497 |         validation.errors.some((err) => err.code === "INVALID_NUMBER")
    > 498 |       ).toBe(true);
          |         ^
      499 |     });
      500 |   });
      501 |

      at Object.toBe (tests/integration/utils/schemaValidator.test.js:498:9)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Integration with Database ‚Ä∫ should validate data before database insertion

    TypeError: schemaValidator.validateForDatabase is not a function

      509 |       };
      510 |
    > 511 |       const validation = await schemaValidator.validateForDatabase(
          |                                                ^
      512 |         stockData,
      513 |         "stock_quotes"
      514 |       );

      at Object.validateForDatabase (tests/integration/utils/schemaValidator.test.js:511:48)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Integration with Database ‚Ä∫ should handle database constraint violations

    TypeError: schemaValidator.validateForDatabase is not a function

      527 |       };
      528 |
    > 529 |       const validation = await schemaValidator.validateForDatabase(
          |                                                ^
      530 |         duplicateData,
      531 |         "stock_quotes"
      532 |       );

      at Object.validateForDatabase (tests/integration/utils/schemaValidator.test.js:529:48)

  ‚óè Schema Validator Integration Tests ‚Ä∫ Multi-language Support ‚Ä∫ should support localized error messages

    expect(received).not.toBe(expected) // Object.is equality

    Expected: not undefined

      556 |       expect(validationEn.isValid).toBe(false);
      557 |       expect(validationEs.isValid).toBe(false);
    > 558 |       expect(validationEn.errors[0].message).not.toBe(
          |                                                  ^
      559 |         validationEs.errors[0].message
      560 |       );
      561 |     });

      at Object.toBe (tests/integration/utils/schemaValidator.test.js:558:50)

FAIL tests/unit/routes/insider.test.js
  ‚óè Insider Routes ‚Ä∫ GET /api/insider/trades/:symbol ‚Ä∫ should return 501 status for not implemented endpoint

    expected 501 "Not Implemented", got 200 "OK"

      24 |       const response = await request(app)
      25 |         .get("/api/insider/trades/AAPL")
    > 26 |         .expect(501);
         |          ^
      27 |
      28 |       expect(response.body).toEqual({
      29 |         success: false,

      at Object.expect (tests/unit/routes/insider.test.js:26:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Insider Routes ‚Ä∫ GET /api/insider/trades/:symbol ‚Ä∫ should convert symbol to uppercase

    expected 501 "Not Implemented", got 200 "OK"

      49 |       const response = await request(app)
      50 |         .get("/api/insider/trades/aapl")
    > 51 |         .expect(501);
         |          ^
      52 |
      53 |       expect(response.body.symbol).toBe("AAPL");
      54 |     });

      at Object.expect (tests/unit/routes/insider.test.js:51:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Insider Routes ‚Ä∫ GET /api/insider/trades/:symbol ‚Ä∫ should log the request with symbol

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "ÔøΩÔøΩ Insider trades requested for TSLA - not implemented"
    Received: "ÔøΩÔøΩ Insider trades requested for TSLA"

    Number of calls: 1

      57 |       await request(app).get("/api/insider/trades/TSLA");
      58 |
    > 59 |       expect(consoleSpy).toHaveBeenCalledWith(
         |                          ^
      60 |         "ÔøΩÔøΩ Insider trades requested for TSLA - not implemented"
      61 |       );
      62 |     });

      at Object.toHaveBeenCalledWith (tests/unit/routes/insider.test.js:59:26)

  ‚óè Insider Routes ‚Ä∫ GET /api/insider/trades/:symbol ‚Ä∫ should include valid ISO timestamp

    expected 501 "Not Implemented", got 200 "OK"

      65 |       const response = await request(app)
      66 |         .get("/api/insider/trades/GOOGL")
    > 67 |         .expect(501);
         |          ^
      68 |
      69 |       const timestamp = response.body.timestamp;
      70 |       expect(timestamp).toMatch(

      at Object.expect (tests/unit/routes/insider.test.js:67:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Insider Routes ‚Ä∫ GET /api/insider/trades/:symbol ‚Ä∫ should handle symbols with special characters

    expected 501 "Not Implemented", got 200 "OK"

      78 |       const response = await request(app)
      79 |         .get("/api/insider/trades/BRK.A")
    > 80 |         .expect(501);
         |          ^
      81 |
      82 |       expect(response.body.symbol).toBe("BRK.A");
      83 |       expect(response.body.success).toBe(false);

      at Object.expect (tests/unit/routes/insider.test.js:80:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Insider Routes ‚Ä∫ GET /api/insider/trades/:symbol ‚Ä∫ should handle long symbol names

    expected 501 "Not Implemented", got 200 "OK"

      88 |       const response = await request(app)
      89 |         .get(`/api/insider/trades/${longSymbol}`)
    > 90 |         .expect(501);
         |          ^
      91 |
      92 |       expect(response.body.symbol).toBe(longSymbol);
      93 |       expect(consoleSpy).toHaveBeenCalledWith(

      at Object.expect (tests/unit/routes/insider.test.js:90:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Insider Routes ‚Ä∫ GET /api/insider/trades/:symbol ‚Ä∫ should handle empty symbol gracefully

    expected 404 "Not Found", got 500 "Internal Server Error"

       99 |       const response = await request(app)
      100 |         .get("/api/insider/trades/")
    > 101 |         .expect(404); // Express router will return 404 for missing route parameter
          |          ^
      102 |     });
      103 |
      104 |     it("should handle route error and return 500", async () => {

      at Object.expect (tests/unit/routes/insider.test.js:101:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Insider Routes ‚Ä∫ GET /api/insider/trades/:symbol ‚Ä∫ should handle route error and return 500

    expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 3

      Object {
    +   "details": "Console logging failed",
        "error": "Failed to fetch insider trades",
    -   "message": "Console logging failed",
        "success": false,
    +   "symbol": "AAPL",
    +   "timestamp": "2025-09-23T16:32:16.075Z",
      }

      112 |         .expect(500);
      113 |
    > 114 |       expect(response.body).toEqual({
          |                             ^
      115 |         success: false,
      116 |         error: "Failed to fetch insider trades",
      117 |         message: "Console logging failed",

      at Object.toEqual (tests/unit/routes/insider.test.js:114:29)

  ‚óè Insider Routes ‚Ä∫ GET /api/insider/trades/:symbol ‚Ä∫ should maintain consistent response structure for different symbols

    expected 501 "Not Implemented", got 200 "OK"

      130 |         const response = await request(app)
      131 |           .get(`/api/insider/trades/${symbol}`)
    > 132 |           .expect(501);
          |            ^
      133 |
      134 |         expect(response.body).toHaveProperty("success", false);
      135 |         expect(response.body).toHaveProperty("error");

      at Object.expect (tests/unit/routes/insider.test.js:132:12)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Insider Routes ‚Ä∫ GET /api/insider/trades/:symbol ‚Ä∫ should have consistent error message structure

    expected 501 "Not Implemented", got 200 "OK"

      148 |       const response = await request(app)
      149 |         .get("/api/insider/trades/TEST")
    > 150 |         .expect(501);
          |          ^
      151 |
      152 |       expect(response.body.troubleshooting.required_setup).toHaveLength(3);
      153 |       expect(response.body.troubleshooting.required_setup).toContain(

      at Object.expect (tests/unit/routes/insider.test.js:150:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Insider Routes ‚Ä∫ GET /api/insider/trades/:symbol ‚Ä∫ should handle numeric symbol inputs

    expected 501 "Not Implemented", got 200 "OK"

      165 |       const response = await request(app)
      166 |         .get("/api/insider/trades/123")
    > 167 |         .expect(501);
          |          ^
      168 |
      169 |       expect(response.body.symbol).toBe("123");
      170 |       expect(response.body.success).toBe(false);

      at Object.expect (tests/unit/routes/insider.test.js:167:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

FAIL tests/unit/routes/watchlist.test.js
  ‚óè Watchlist Routes ‚Ä∫ GET /api/watchlist/ ‚Ä∫ should return user watchlists

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "SELECT", ["test-user-123"]
    Received: "
            SELECT
              symbol as id,
              'My Watchlist' as name,
              symbol,
              created_at
            FROM portfolio_transactions
            GROUP BY symbol, created_at
            ORDER BY created_at DESC
            LIMIT 20
          "

    Number of calls: 1

      54 |       });
      55 |
    > 56 |       expect(query).toHaveBeenCalledWith(expect.stringContaining("SELECT"), [
         |                     ^
      57 |         "test-user-123",
      58 |       ]);
      59 |     });

      at Object.toHaveBeenCalledWith (tests/unit/routes/watchlist.test.js:56:21)

  ‚óè Watchlist Routes ‚Ä∫ Error handling ‚Ä∫ should handle invalid watchlist IDs

    expect(received).toBe(expected) // Object.is equality

    Expected: 404
    Received: 400

      327 |       const response = await request(app).get("/api/watchlist/invalid");
      328 |
    > 329 |       expect(response.status).toBe(404);
          |                               ^
      330 |       expect(response.body).toMatchObject({
      331 |         success: false,
      332 |         error: "Watchlist not found",

      at Object.toBe (tests/unit/routes/watchlist.test.js:329:31)

FAIL tests/integration/utils/riskEngine.test.js
  ‚óè Risk Engine Integration Tests ‚Ä∫ Portfolio Risk Assessment with Database Integration ‚Ä∫ should calculate portfolio-wide risk metrics from database

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Portfolio Risk Assessment with Database Integration ‚Ä∫ should identify concentration risk

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Portfolio Risk Assessment with Database Integration ‚Ä∫ should calculate sector allocation risk

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Historical Volatility Analysis ‚Ä∫ should calculate volatility from historical price data

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Historical Volatility Analysis ‚Ä∫ should handle insufficient data gracefully

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Historical Volatility Analysis ‚Ä∫ should calculate beta relative to market

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Value at Risk (VaR) Calculations ‚Ä∫ should calculate portfolio VaR using historical method

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Value at Risk (VaR) Calculations ‚Ä∫ should calculate VaR for different confidence levels

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Value at Risk (VaR) Calculations ‚Ä∫ should calculate parametric VaR

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Position Sizing and Risk Management ‚Ä∫ should recommend optimal position sizes

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Position Sizing and Risk Management ‚Ä∫ should validate position size against risk limits

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Correlation and Covariance Analysis ‚Ä∫ should calculate correlation matrix for portfolio

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Correlation and Covariance Analysis ‚Ä∫ should identify highly correlated positions

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Stress Testing and Scenario Analysis ‚Ä∫ should perform market crash stress test

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Stress Testing and Scenario Analysis ‚Ä∫ should perform custom scenario analysis

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Risk Monitoring and Alerts ‚Ä∫ should monitor portfolio risk limits

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Risk Monitoring and Alerts ‚Ä∫ should generate risk alerts for violations

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Performance and Scalability ‚Ä∫ should handle large portfolios efficiently

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Performance and Scalability ‚Ä∫ should maintain accuracy with concurrent calculations

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle empty portfolio gracefully

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle database connection errors

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

  ‚óè Risk Engine Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle invalid risk parameters

    error: column "cost_basis" of relation "portfolio_holdings" does not exist

      1345 |     });
      1346 |
    > 1347 |     const result = await Promise.race([
           |                    ^
      1348 |       pool.query(text, params),
      1349 |       timeoutPromise,
      1350 |     ]);

      at node_modules/pg-pool/index.js:45:11
      at query (utils/database.js:1347:20)
      at setupTestData (tests/integration/utils/riskEngine.test.js:49:7)
      at Object.<anonymous> (tests/integration/utils/riskEngine.test.js:22:5)

FAIL tests/integration/services/alpacaService.test.js
  ‚óè Alpaca Service Integration Tests ‚Ä∫ Account Operations ‚Ä∫ should fetch account information

    expect(received).toEqual(expected) // deep equality

    - Expected  -  4
    + Received  + 21

      Object {
    -   "buying_power": "20000.00",
    -   "cash": "10000.00",
    -   "id": "test-account-id",
    -   "portfolio_value": "12000.00",
    +   "accountBlocked": undefined,
    +   "accountId": "test-account-id",
    +   "buyingPower": 20000,
    +   "cash": 10000,
    +   "createdAt": undefined,
    +   "currency": undefined,
    +   "dayTradeCount": NaN,
    +   "dayTradingBuyingPower": NaN,
    +   "environment": "paper",
    +   "equity": NaN,
    +   "initialMargin": NaN,
    +   "lastEquity": NaN,
    +   "longMarketValue": NaN,
    +   "maintenanceMargin": NaN,
    +   "multiplier": NaN,
    +   "patternDayTrader": undefined,
    +   "portfolioValue": 12000,
    +   "regtBuyingPower": NaN,
    +   "shortMarketValue": NaN,
        "status": "ACTIVE",
    +   "tradingBlocked": undefined,
    +   "transfersBlocked": undefined,
      }

      141 |
      142 |       expect(mockClient.getAccount).toHaveBeenCalledTimes(1);
    > 143 |       expect(account).toEqual(mockAccount);
          |                       ^
      144 |     });
      145 |
      146 |     test("should handle account fetch errors gracefully", async () => {

      at Object.toEqual (tests/integration/services/alpacaService.test.js:143:23)

  ‚óè Alpaca Service Integration Tests ‚Ä∫ Account Operations ‚Ä∫ should fetch portfolio history

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      Object {
    +   "extended_hours": true,
    +   "period": Object {
          "period": "1D",
          "timeframe": "1Min",
    +   },
    +   "timeframe": "1Day",
      },

    Number of calls: 1

      165 |       });
      166 |
    > 167 |       expect(mockClient.getPortfolioHistory).toHaveBeenCalledWith({
          |                                              ^
      168 |         period: "1D",
      169 |         timeframe: "1Min",
      170 |       });

      at Object.toHaveBeenCalledWith (tests/integration/services/alpacaService.test.js:167:46)

  ‚óè Alpaca Service Integration Tests ‚Ä∫ Position Management ‚Ä∫ should fetch position for specific symbol

    Failed to fetch position for AAPL: Cannot read properties of undefined (reading 'find')

      820 |     } catch (error) {
      821 |       console.error("Error fetching position:", error.message);
    > 822 |       throw new Error(
          |             ^
      823 |         `Failed to fetch position for ${symbol}: ${error.message}`
      824 |       );
      825 |     }

      at AlpacaService.getPosition (utils/alpacaService.js:822:13)
      at Object.<anonymous> (tests/integration/services/alpacaService.test.js:218:24)

  ‚óè Alpaca Service Integration Tests ‚Ä∫ Order Management ‚Ä∫ should place market buy order

    Failed to create order: Quantity must be a positive number

      739 |     } catch (error) {
      740 |       console.error("Alpaca order creation error:", error.message);
    > 741 |       throw new Error(`Failed to create order: ${error.message}`);
          |             ^
      742 |     }
      743 |   }
      744 |

      at AlpacaService.createOrder (utils/alpacaService.js:741:13)
      at Object.createOrder (tests/integration/services/alpacaService.test.js:238:41)

  ‚óè Alpaca Service Integration Tests ‚Ä∫ Order Management ‚Ä∫ should place limit sell order

    Failed to create order: Quantity must be a positive number

      739 |     } catch (error) {
      740 |       console.error("Alpaca order creation error:", error.message);
    > 741 |       throw new Error(`Failed to create order: ${error.message}`);
          |             ^
      742 |     }
      743 |   }
      744 |

      at AlpacaService.createOrder (utils/alpacaService.js:741:13)
      at Object.createOrder (tests/integration/services/alpacaService.test.js:267:41)

  ‚óè Alpaca Service Integration Tests ‚Ä∫ Order Management ‚Ä∫ should cancel specific order

    expect(received).toBe(expected) // Object.is equality

    Expected: "order-123"
    Received: undefined

      303 |
      304 |       expect(mockClient.cancelOrder).toHaveBeenCalledWith("order-123");
    > 305 |       expect(result.id).toBe("order-123");
          |                         ^
      306 |     });
      307 |
      308 |     test("should validate order parameters", async () => {

      at Object.toBe (tests/integration/services/alpacaService.test.js:305:25)

  ‚óè Alpaca Service Integration Tests ‚Ä∫ Order Management ‚Ä∫ should validate order parameters

    expect(received).rejects.toThrow(expected)

    Expected substring: "Symbol is required"
    Received message:   "Failed to create order: Quantity must be a positive number"

          739 |     } catch (error) {
          740 |       console.error("Alpaca order creation error:", error.message);
        > 741 |       throw new Error(`Failed to create order: ${error.message}`);
              |             ^
          742 |     }
          743 |   }
          744 |

      at AlpacaService.createOrder (utils/alpacaService.js:741:13)
      at Object.createOrder (tests/integration/services/alpacaService.test.js:311:23)
      at Object.toThrow (node_modules/expect/build/index.js:218:22)
      at Object.toThrow (tests/integration/services/alpacaService.test.js:317:17)

  ‚óè Alpaca Service Integration Tests ‚Ä∫ Market Data Operations ‚Ä∫ should fetch historical bars data

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      "AAPL",
      Object {
    +   "asof": null,
        "end": "2023-01-02",
    +   "feed": null,
    +   "limit": 100,
    +   "page_token": null,
        "start": "2023-01-01",
        "timeframe": "1Day",
      },

    Number of calls: 1

      396 |       });
      397 |
    > 398 |       expect(mockClient.getBars).toHaveBeenCalledWith("AAPL", {
          |                                  ^
      399 |         start: "2023-01-01",
      400 |         end: "2023-01-02",
      401 |         timeframe: "1Day",

      at Object.toHaveBeenCalledWith (tests/integration/services/alpacaService.test.js:398:34)

  ‚óè Alpaca Service Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle market closed scenarios

    expect(received).rejects.toThrow(expected)

    Expected substring: "Market is closed"
    Received message:   "Failed to create order: Quantity must be a positive number"

          739 |     } catch (error) {
          740 |       console.error("Alpaca order creation error:", error.message);
        > 741 |       throw new Error(`Failed to create order: ${error.message}`);
              |             ^
          742 |     }
          743 |   }
          744 |

      at AlpacaService.createOrder (utils/alpacaService.js:741:13)
      at Object.createOrder (tests/integration/services/alpacaService.test.js:495:23)
      at Object.toThrow (node_modules/expect/build/index.js:218:22)
      at Object.toThrow (tests/integration/services/alpacaService.test.js:501:17)

  ‚óè Alpaca Service Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle insufficient funds

    expect(received).rejects.toThrow(expected)

    Expected substring: "Insufficient buying power"
    Received message:   "Failed to create order: Quantity must be a positive number"

          739 |     } catch (error) {
          740 |       console.error("Alpaca order creation error:", error.message);
        > 741 |       throw new Error(`Failed to create order: ${error.message}`);
              |             ^
          742 |     }
          743 |   }
          744 |

      at AlpacaService.createOrder (utils/alpacaService.js:741:13)
      at Object.createOrder (tests/integration/services/alpacaService.test.js:510:23)
      at Object.toThrow (node_modules/expect/build/index.js:218:22)
      at Object.toThrow (tests/integration/services/alpacaService.test.js:516:17)

FAIL tests/unit/utils/schemaValidator.test.js
  ‚óè Schema Validator ‚Ä∫ validateData ‚Ä∫ should fail validation for missing required fields

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 1
    Received array:  [{"code": "REQUIRED_FIELD_MISSING", "field": "ticker", "message": "Required field \"ticker\" is missing"}]

      68 |       expect(result.isValid).toBe(false);
      69 |       expect(result.errors).toContain('Required field "ticker" is missing');
    > 70 |       expect(result.errorDetails).toHaveLength(2);
         |                                   ^
      71 |     });
      72 |
      73 |     test("should fail validation for unknown table", () => {

      at Object.toHaveLength (tests/unit/utils/schemaValidator.test.js:70:35)

  ‚óè Schema Validator ‚Ä∫ validateIndexes ‚Ä∫ should return valid for table without indexes

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      926 |       const result = await validateIndexes("fear_greed_index"); // Table with only created_at index
      927 |
    > 928 |       expect(result.valid).toBe(true);
          |                            ^
      929 |       expect(result.missingIndexes).toBeDefined();
      930 |     });
      931 |

      at Object.toBe (tests/unit/utils/schemaValidator.test.js:928:28)

  ‚óè Schema Validator ‚Ä∫ validateIndexes ‚Ä∫ should handle database errors

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: {"actualIndexes": ["fear_greed_index_created_at_idx"], "expectedIndexes": ["stock_prices_symbol_idx", "stock_prices_date_idx"], "isValid": false, "missingIndexes": ["stock_prices_symbol_idx", "stock_prices_date_idx"], "valid": false}

      934 |       mockQuery.mockRejectedValueOnce(dbError);
      935 |
    > 936 |       await expect(validateIndexes("stock_prices")).rejects.toThrow(
          |             ^
      937 |         "Index query failed"
      938 |       );
      939 |       expect(mockLogger.error).toHaveBeenCalled();

      at expect (node_modules/expect/build/index.js:113:15)
      at Object.expect (tests/unit/utils/schemaValidator.test.js:936:13)

  ‚óè Schema Validator ‚Ä∫ safeQuery ‚Ä∫ should execute query successfully

    expect(received).toEqual(expected) // deep equality

    Expected: {"rows": [{"count": 5}]}
    Received: null

      951 |       const result = await safeQuery("SELECT COUNT(*) as count FROM test");
      952 |
    > 953 |       expect(result).toEqual(expectedResult);
          |                      ^
      954 |       expect(mockQuery).toHaveBeenCalledWith(
      955 |         "SELECT COUNT(*) as count FROM test",
      956 |         []

      at Object.toEqual (tests/unit/utils/schemaValidator.test.js:953:22)

  ‚óè Schema Validator ‚Ä∫ safeQuery ‚Ä∫ should return null on database error and log warning

    expect(received).toBeNull()

    Received: {"rows": [{"count": 5}]}

      967 |       const result = await safeQuery("SELECT * FROM test", ["param"]);
      968 |
    > 969 |       expect(result).toBeNull();
          |                      ^
      970 |       expect(mockLogger.warn).toHaveBeenCalledWith(
      971 |         "Safe query failed, database may be unavailable",
      972 |         expect.objectContaining({

      at Object.toBeNull (tests/unit/utils/schemaValidator.test.js:969:22)

  ‚óè Schema Validator ‚Ä∫ edge cases and error scenarios ‚Ä∫ should handle very long strings gracefully

    expect(received).toContain(expected) // indexOf

    Expected value: "Field \"ticker\" exceeds maximum length of 10 characters"
    Received array: ["Field \"symbol\" exceeds maximum length of 10 characters"]

      1098 |
      1099 |       expect(result.valid).toBe(false);
    > 1100 |       expect(result.errors).toContain(
           |                             ^
      1101 |         'Field "ticker" exceeds maximum length of 10 characters'
      1102 |       );
      1103 |     });

      at Object.toContain (tests/unit/utils/schemaValidator.test.js:1100:29)

FAIL tests/unit/routes/backtest.test.js
  ‚óè Backtest Routes Unit Tests ‚Ä∫ POST /backtest/run ‚Ä∫ should handle backtest run request

    expect(received).toHaveProperty(path)

    Expected path: "success"
    Received path: []

    Received value: {"error": "Start date and end date are required"}

      64 |       // API may return 200 for success or 400 for validation errors
      65 |       expect([200, 400]).toContain(response.status);
    > 66 |       expect(response.body).toHaveProperty("success");
         |                             ^
      67 |     });
      68 |   });
      69 |

      at Object.toHaveProperty (tests/unit/routes/backtest.test.js:66:29)

  ‚óè Backtest Routes Unit Tests ‚Ä∫ GET /backtest/results/:id ‚Ä∫ should return backtest results

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      73 |
      74 |       // API may return 200 for found or 404 for not found
    > 75 |       expect(response.status).toBe(200);
         |                               ^
      76 |       expect(response.body).toHaveProperty("success");
      77 |     });
      78 |   });

      at Object.toBe (tests/unit/routes/backtest.test.js:75:31)

  ‚óè Backtest Routes Unit Tests ‚Ä∫ GET /backtest/optimize ‚Ä∫ should return optimization results for valid strategy

    expected 200 "OK", got 404 "Not Found"

       95 |         .get("/backtest/optimize")
       96 |         .query(optimizationParams)
    >  97 |         .expect(200);
          |          ^
       98 |
       99 |       expect(response.body).toMatchObject({
      100 |         success: true,

      at Object.expect (tests/unit/routes/backtest.test.js:97:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Backtest Routes Unit Tests ‚Ä∫ GET /backtest/optimize ‚Ä∫ should require strategy_id parameter

    expected 400 "Bad Request", got 404 "Not Found"

      139 |
      140 |     test("should require strategy_id parameter", async () => {
    > 141 |       const response = await request(app).get("/backtest/optimize").expect(400);
          |                                                                     ^
      142 |
      143 |       expect(response.body).toMatchObject({
      144 |         success: false,

      at Object.expect (tests/unit/routes/backtest.test.js:141:69)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Backtest Routes Unit Tests ‚Ä∫ GET /backtest/optimize ‚Ä∫ should handle invalid parameters JSON

    expected 400 "Bad Request", got 404 "Not Found"

      151 |       const response = await request(app)
      152 |         .get("/backtest/optimize?strategy_id=test&parameters=invalid-json")
    > 153 |         .expect(400);
          |          ^
      154 |
      155 |       expect(response.body).toMatchObject({
      156 |         success: false,

      at Object.expect (tests/unit/routes/backtest.test.js:153:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Backtest Routes Unit Tests ‚Ä∫ GET /backtest/optimize ‚Ä∫ should support different optimization types and targets

    expected 200 "OK", got 404 "Not Found"

      170 |           max_iterations: 25,
      171 |         })
    > 172 |         .expect(200);
          |          ^
      173 |
      174 |       expect(response.body.data.optimization_config).toMatchObject({
      175 |         method: "genetic_algorithm",

      at Object.expect (tests/unit/routes/backtest.test.js:172:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè Backtest Routes Unit Tests ‚Ä∫ GET /backtest/optimize ‚Ä∫ should handle optimization errors gracefully

    expected 200 "OK", got 404 "Not Found"

      186 |       const response = await request(app)
      187 |         .get("/backtest/optimize?strategy_id=error-test&parameters={}")
    > 188 |         .expect(200); // Our implementation generates synthetic data, so it won't error
          |          ^
      189 |
      190 |       // Restore console.error
      191 |       console.error = originalConsoleError;

      at Object.expect (tests/unit/routes/backtest.test.js:188:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

FAIL tests/unit/routes/settings.test.js
  ‚óè Settings API Routes ‚Ä∫ POST /api/settings/api-keys ‚Ä∫ should add new API key successfully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "test-jwt-token", "alpaca", ObjectContaining {"apiKey": "test-api-key", "apiSecret": "test-secret", "description": "New API Key", "isSandbox": true}
    Received: "test-jwt-token", "alpaca", {"createdAt": "2025-09-23T16:32:16.690Z", "description": "New API Key", "isSandbox": true, "keyId": "test-api-key", "secret": "test-secret"}

    Number of calls: 1

      124 |       });
      125 |
    > 126 |       expect(storeApiKey).toHaveBeenCalledWith(
          |                           ^
      127 |         "test-jwt-token",
      128 |         "alpaca",
      129 |         expect.objectContaining({

      at Object.toHaveBeenCalledWith (tests/unit/routes/settings.test.js:126:27)

  ‚óè Settings API Routes ‚Ä∫ PUT /api/settings/api-keys/:provider ‚Ä∫ should update API key successfully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "test-jwt-token", "alpaca", ObjectContaining {"apiKey": "existing-key", "apiSecret": "existing-secret", "description": "Updated API Key", "isSandbox": false}
    Received: "test-jwt-token", "alpaca", {"description": "Updated API Key", "isSandbox": false, "keyId": undefined, "secret": undefined, "updatedAt": "2025-09-23T16:32:16.700Z"}

    Number of calls: 1

      209 |
      210 |       expect(getApiKey).toHaveBeenCalledWith("test-jwt-token", "alpaca");
    > 211 |       expect(storeApiKey).toHaveBeenCalledWith(
          |                           ^
      212 |         "test-jwt-token",
      213 |         "alpaca",
      214 |         expect.objectContaining({

      at Object.toHaveBeenCalledWith (tests/unit/routes/settings.test.js:211:27)

  ‚óè Settings API Routes ‚Ä∫ GET /api/settings/onboarding-status ‚Ä∫ should return onboarding status

    expect(received).toEqual(expected) // deep equality

    - Expected  - 0
    + Received  + 1

    @@ -1,9 +1,10 @@
      Object {
        "onboarding": Object {
          "completed": true,
          "configuredProviders": 1,
    +     "fallback": false,
          "hasApiKeys": true,
          "nextStep": "complete",
        },
        "success": true,
        "timestamp": Any<String>,

      275 |         .expect(200);
      276 |
    > 277 |       expect(response.body).toEqual({
          |                             ^
      278 |         success: true,
      279 |         onboarding: {
      280 |           completed: true,

      at Object.toEqual (tests/unit/routes/settings.test.js:277:29)

FAIL tests/integration/routes/portfolio.integration.test.js
  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Core Portfolio APIs ‚Ä∫ GET /api/portfolio - should return portfolio API info

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Core Portfolio APIs ‚Ä∫ GET /api/portfolio/summary - should return portfolio summary

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Core Portfolio APIs ‚Ä∫ GET /api/portfolio/positions - should return portfolio positions

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Core Portfolio APIs ‚Ä∫ GET /api/portfolio/holdings - should return portfolio holdings

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Core Portfolio APIs ‚Ä∫ GET /api/portfolio/value - should return portfolio value data

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Core Portfolio APIs ‚Ä∫ GET /api/portfolio/allocation - should return portfolio allocation

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Core Portfolio APIs ‚Ä∫ GET /api/portfolio/allocations - should return portfolio allocations

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Analytics and Analysis APIs ‚Ä∫ GET /api/portfolio/analytics - should return portfolio analytics

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Performance and Returns APIs ‚Ä∫ GET /api/portfolio/returns - should return portfolio returns

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Performance and Returns APIs ‚Ä∫ GET /api/portfolio/benchmark - should return benchmark comparison

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Risk Management APIs ‚Ä∫ GET /api/portfolio/risk - should return risk assessment

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Risk Management APIs ‚Ä∫ GET /api/portfolio/risk-analysis - should return risk analysis

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Risk Management APIs ‚Ä∫ GET /api/portfolio/risk/analysis - should return detailed risk analysis

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Risk Management APIs ‚Ä∫ GET /api/portfolio/risk/var - should return VaR analysis

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Risk Management APIs ‚Ä∫ GET /api/portfolio/risk/stress-test - should return stress test results

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Risk Management APIs ‚Ä∫ GET /api/portfolio/risk/concentration - should return concentration risk

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Portfolio Management APIs ‚Ä∫ GET /api/portfolio/rebalance - should return rebalance recommendations

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Portfolio Management APIs ‚Ä∫ GET /api/portfolio/optimization - should return optimization suggestions

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Portfolio Management APIs ‚Ä∫ GET /api/portfolio/watchlist - should return portfolio watchlist

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Portfolio Management APIs ‚Ä∫ GET /api/portfolio/transactions - should return portfolio transactions

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Broker Integration APIs ‚Ä∫ GET /api/portfolio/api-keys - should return API keys status

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Broker Integration APIs ‚Ä∫ POST /api/portfolio/api-keys - should handle API key creation

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Health and System APIs ‚Ä∫ GET /api/portfolio/health - should return portfolio service health

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Error Handling and Authentication ‚Ä∫ should require authentication for protected endpoints

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Error Handling and Authentication ‚Ä∫ should handle invalid endpoints gracefully

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Error Handling and Authentication ‚Ä∫ should handle invalid user IDs gracefully

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Error Handling and Authentication ‚Ä∫ DELETE /api/portfolio/api-keys/test-broker - should handle API key deletion

    connect ECONNREFUSED 127.0.0.1:3001



  ‚óè Portfolio Integration Tests - 100% Coverage ‚Ä∫ Error Handling and Authentication ‚Ä∫ GET /api/portfolio/data - should redirect to holdings endpoint

    connect ECONNREFUSED 127.0.0.1:3001



FAIL tests/unit/utils/logger.test.js
  ‚óè Logger ‚Ä∫ Initialization ‚Ä∫ should initialize with environment variables

    expect(received).toBe(expected) // Object.is equality

    Expected: 3
    Received: 2

      43 |       const newLogger = require("../../../utils/logger");
      44 |
    > 45 |       expect(newLogger.currentLevel).toBe(3); // DEBUG level
         |                                      ^
      46 |       expect(newLogger.serviceName).toBe("test-service");
      47 |       expect(newLogger.version).toBe("2.0.0");
      48 |     });

      at Object.toBe (tests/unit/utils/logger.test.js:45:38)

  ‚óè Logger ‚Ä∫ Log Level Parsing ‚Ä∫ should default to INFO for invalid log levels

    TypeError: Cannot read properties of null (reading 'toUpperCase')

      30 |    */
      31 |   parseLogLevel(levelStr) {
    > 32 |     const level = levelStr.toUpperCase();
         |                            ^
      33 |     return LOG_LEVELS[level] !== undefined
      34 |       ? LOG_LEVELS[level]
      35 |       : LOG_LEVELS.INFO;

      at Logger.toUpperCase [as parseLogLevel] (utils/logger.js:32:28)
      at Object.parseLogLevel (tests/unit/utils/logger.test.js:69:21)

  ‚óè Logger ‚Ä∫ Output Formatting ‚Ä∫ should format output for development environment

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 2
    Received number of calls: 1

      131 |       logger.output(logEntry);
      132 |
    > 133 |       expect(consoleSpy).toHaveBeenCalledTimes(2);
          |                          ^
      134 |       expect(consoleSpy).toHaveBeenNthCalledWith(
      135 |         1,
      136 |         "[2023-01-01T00:00:00.000Z] [INFO] [12345] Test message"

      at Object.toHaveBeenCalledTimes (tests/unit/utils/logger.test.js:133:26)

  ‚óè Logger ‚Ä∫ Output Formatting ‚Ä∫ should handle development output without extra context

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "[2023-01-01T00:00:00.000Z] [INFO] [12345] Test message"
    Received: "{\"timestamp\":\"2023-01-01T00:00:00.000Z\",\"level\":\"INFO\",\"message\":\"Test message\",\"correlationId\":\"12345\"}"

    Number of calls: 1

      171 |
      172 |       expect(consoleSpy).toHaveBeenCalledTimes(1);
    > 173 |       expect(consoleSpy).toHaveBeenCalledWith(
          |                          ^
      174 |         "[2023-01-01T00:00:00.000Z] [INFO] [12345] Test message"
      175 |       );
      176 |     });

      at Object.toHaveBeenCalledWith (tests/unit/utils/logger.test.js:173:26)

  ‚óè Logger ‚Ä∫ Warning Logging ‚Ä∫ should log warning messages

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      209 |       logger.warn("Warning message");
      210 |
    > 211 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      212 |     });
      213 |
      214 |     test("should log warning with context", () => {

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:211:26)

  ‚óè Logger ‚Ä∫ Warning Logging ‚Ä∫ should log warning with context

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      215 |       logger.warn("Warning message", { component: "test" });
      216 |
    > 217 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      218 |     });
      219 |   });
      220 |

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:217:26)

  ‚óè Logger ‚Ä∫ Info Logging ‚Ä∫ should log info messages

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      223 |       logger.info("Info message");
      224 |
    > 225 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      226 |     });
      227 |
      228 |     test("should log info with context", () => {

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:225:26)

  ‚óè Logger ‚Ä∫ Info Logging ‚Ä∫ should log info with context

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      229 |       logger.info("Info message", { operation: "test" });
      230 |
    > 231 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      232 |     });
      233 |   });
      234 |

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:231:26)

  ‚óè Logger ‚Ä∫ Debug Logging ‚Ä∫ should log debug messages when level is DEBUG

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      247 |       debugLogger.debug("Debug message");
      248 |
    > 249 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      250 |     });
      251 |   });
      252 |

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:249:26)

  ‚óè Logger ‚Ä∫ Specialized Logging Methods ‚Ä∫ should log database operations

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      257 |       });
      258 |
    > 259 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      260 |     });
      261 |
      262 |     test("should log API calls", () => {

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:259:26)

  ‚óè Logger ‚Ä∫ Specialized Logging Methods ‚Ä∫ should log API calls

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      263 |       logger.apiCall("GET", "/api/stocks", { statusCode: 200 });
      264 |
    > 265 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      266 |     });
      267 |
      268 |     test("should log authentication events", () => {

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:265:26)

  ‚óè Logger ‚Ä∫ Specialized Logging Methods ‚Ä∫ should log authentication events

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      269 |       logger.auth("login_attempt", { userId: "123" });
      270 |
    > 271 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      272 |     });
      273 |
      274 |     test("should log performance with normal duration", () => {

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:271:26)

  ‚óè Logger ‚Ä∫ Specialized Logging Methods ‚Ä∫ should log performance with normal duration

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      275 |       logger.performance("database_query", 1000, { table: "stocks" });
      276 |
    > 277 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      278 |     });
      279 |
      280 |     test("should log performance warning for slow operations", () => {

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:277:26)

  ‚óè Logger ‚Ä∫ Specialized Logging Methods ‚Ä∫ should log performance warning for slow operations

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      281 |       logger.performance("slow_query", 6000, { table: "stocks" });
      282 |
    > 283 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      284 |     });
      285 |
      286 |     test("should log security events", () => {

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:283:26)

  ‚óè Logger ‚Ä∫ Specialized Logging Methods ‚Ä∫ should log security events

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      287 |       logger.security("unauthorized_access", { ip: "192.168.1.1" });
      288 |
    > 289 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      290 |     });
      291 |
      292 |     test("should log user actions", () => {

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:289:26)

  ‚óè Logger ‚Ä∫ Specialized Logging Methods ‚Ä∫ should log user actions

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      293 |       logger.userAction("user123456789", "login", { method: "oauth" });
      294 |
    > 295 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      296 |     });
      297 |
      298 |     test("should log user actions for anonymous users", () => {

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:295:26)

  ‚óè Logger ‚Ä∫ Specialized Logging Methods ‚Ä∫ should log user actions for anonymous users

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      299 |       logger.userAction(null, "view_page", { page: "home" });
      300 |
    > 301 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      302 |     });
      303 |   });
      304 |

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:301:26)

  ‚óè Logger ‚Ä∫ Request Middleware ‚Ä∫ should handle incoming request

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      328 |       expect(req.logger).toBe(logger);
      329 |       expect(next).toHaveBeenCalled();
    > 330 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      331 |     });
      332 |
      333 |     test("should handle request with authorization header", () => {

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:330:26)

  ‚óè Logger ‚Ä∫ Error Middleware ‚Ä∫ should handle errors

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      400 |
      401 |       expect(next).toHaveBeenCalledWith(error);
    > 402 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      403 |     });
      404 |   });
      405 |

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:402:26)

  ‚óè Logger ‚Ä∫ Child Logger ‚Ä∫ should use child logger context in logs

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      416 |       childLogger.info("Test message", { extra: "data" });
      417 |
    > 418 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      419 |     });
      420 |   });
      421 |

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:418:26)

  ‚óè Logger ‚Ä∫ Application Lifecycle Logging ‚Ä∫ should log application startup

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      424 |       logger.startup({ port: 3000 });
      425 |
    > 426 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      427 |     });
      428 |
      429 |     test("should log application shutdown", () => {

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:426:26)

  ‚óè Logger ‚Ä∫ Application Lifecycle Logging ‚Ä∫ should log application shutdown

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      430 |       logger.shutdown({ reason: "SIGTERM" });
      431 |
    > 432 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      433 |     });
      434 |
      435 |     test("should log configuration loaded", () => {

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:432:26)

  ‚óè Logger ‚Ä∫ Application Lifecycle Logging ‚Ä∫ should log configuration loaded

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      442 |       logger.configLoaded(config);
      443 |
    > 444 |       expect(consoleSpy).toHaveBeenCalled();
          |                          ^
      445 |     });
      446 |   });
      447 |

      at Object.toHaveBeenCalled (tests/unit/utils/logger.test.js:444:26)

FAIL tests/unit/routes/metrics.test.js
  ‚óè Metrics Routes ‚Ä∫ GET /metrics/ ‚Ä∫ should return comprehensive metrics with default pagination

    expect(received).toHaveProperty(path)

    Expected path: "stocks"
    Received path: []

    Received value: {"data": [{"currentPrice": 100, "growthMetric": 0.5, "lastUpdated": "2025-09-23T16:32:16.985Z", "macd": 0, "momentumMetric": 0.5, "overallScore": 0.5, "qualityMetric": 0.5, "rsi": 50, "sma20": 100, "symbol": "TEST", "trendMetric": 0.5, "valueMetric": 0.5, "volume": 1000000}], "pagination": {"hasMore": false, "limit": 50, "page": 1, "total": 1, "totalPages": 1}, "service": "financial-platform", "success": true, "summary": {"averageScore": 0.5, "totalStocks": 1}, "timestamp": "2025-09-23T16:32:16.985Z"}

      39 |       const response = await request(app).get("/metrics/").expect(200);
      40 |
    > 41 |       expect(response.body).toHaveProperty("stocks");
         |                             ^
      42 |       expect(response.body).toHaveProperty("pagination");
      43 |       expect(response.body.pagination).toMatchObject({
      44 |         currentPage: 1,

      at Object.toHaveProperty (tests/unit/routes/metrics.test.js:41:29)

  ‚óè Metrics Routes ‚Ä∫ GET /metrics/ ‚Ä∫ should handle search filtering

    expect(received).toMatchObject(expected)

    - Expected  - 3
    + Received  + 0

      Object {
    -   "currentPage": 1,
    -   "itemsPerPage": 10,
    -   "totalItems": Any<Number>,
        "totalPages": Any<Number>,
      }

      101 |
      102 |       expect(response.body).toHaveProperty("pagination");
    > 103 |       expect(response.body.pagination).toMatchObject({
          |                                        ^
      104 |         currentPage: 1,
      105 |         itemsPerPage: 10,
      106 |         totalPages: expect.any(Number),

      at Object.toMatchObject (tests/unit/routes/metrics.test.js:103:40)

  ‚óè Metrics Routes ‚Ä∫ GET /metrics/ ‚Ä∫ should handle sector filtering

    expect(received).toBeDefined()

    Received: undefined

      119 |         .expect(200);
      120 |
    > 121 |       expect(response.body.stocks).toBeDefined();
          |                                    ^
      122 |       expect(response.body).toHaveProperty("pagination");
      123 |     });
      124 |

      at Object.toBeDefined (tests/unit/routes/metrics.test.js:121:36)

  ‚óè Metrics Routes ‚Ä∫ GET /metrics/ ‚Ä∫ should handle metric range filtering

    expect(received).toBeDefined()

    Received: undefined

      129 |         .expect(200);
      130 |
    > 131 |       expect(response.body.stocks).toBeDefined();
          |                                    ^
      132 |       expect(response.body).toHaveProperty("pagination");
      133 |     });
      134 |

      at Object.toBeDefined (tests/unit/routes/metrics.test.js:131:36)

  ‚óè Metrics Routes ‚Ä∫ GET /metrics/ ‚Ä∫ should prevent SQL injection in sort parameters

    expect(received).toBeDefined()

    Received: undefined

      142 |         .expect(200);
      143 |
    > 144 |       expect(response.body.stocks).toBeDefined();
          |                                    ^
      145 |       expect(response.body).toHaveProperty("pagination");
      146 |     });
      147 |

      at Object.toBeDefined (tests/unit/routes/metrics.test.js:144:36)

  ‚óè Metrics Routes ‚Ä∫ GET /metrics/ ‚Ä∫ should limit page size to maximum

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: undefined

      152 |         .expect(200);
      153 |
    > 154 |       expect(response.body.pagination.itemsPerPage).toBe(200);
          |                                                     ^
      155 |     });
      156 |
      157 |     // Database error testing skipped - using real database

      at Object.toBe (tests/unit/routes/metrics.test.js:154:53)

FAIL tests/unit/routes/user.test.js
  ‚óè User Routes - 2FA Functionality ‚Ä∫ POST /user/two-factor (enable) ‚Ä∫ should enable 2FA and save secret to database

    expected 200 "OK", got 404 "Not Found"

      62 |           userId: "test-user-123",
      63 |         })
    > 64 |         .expect(200);
         |          ^
      65 |
      66 |       expect(response.body.success).toBe(true);
      67 |       expect(response.body.message).toContain("2FA setup initiated");

      at Object.expect (tests/unit/routes/user.test.js:64:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè User Routes - 2FA Functionality ‚Ä∫ POST /user/two-factor (enable) ‚Ä∫ should handle database errors gracefully during setup

    expected 200 "OK", got 404 "Not Found"

      86 |           userId: "test-user-123",
      87 |         })
    > 88 |         .expect(200);
         |          ^
      89 |
      90 |       expect(response.body.success).toBe(true);
      91 |       expect(response.body.message).toContain("2FA setup initiated");

      at Object.expect (tests/unit/routes/user.test.js:88:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè User Routes - 2FA Functionality ‚Ä∫ POST /user/two-factor (verify) ‚Ä∫ should verify 2FA code and activate

    expected 200 "OK", got 404 "Not Found"

      115 |           code: "123456",
      116 |         })
    > 117 |         .expect(200);
          |          ^
      118 |
      119 |       expect(response.body.success).toBe(true);
      120 |       expect(response.body.message).toContain("setup completed successfully");

      at Object.expect (tests/unit/routes/user.test.js:117:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè User Routes - 2FA Functionality ‚Ä∫ POST /user/two-factor (verify) ‚Ä∫ should reject invalid 2FA codes

    expected 400 "Bad Request", got 404 "Not Found"

      148 |           code: "invalid",
      149 |         })
    > 150 |         .expect(400);
          |          ^
      151 |
      152 |       expect(response.body.success).toBe(false);
      153 |       expect(response.body.error).toBe("Invalid 2FA code");

      at Object.expect (tests/unit/routes/user.test.js:150:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè User Routes - 2FA Functionality ‚Ä∫ POST /user/two-factor (verify) ‚Ä∫ should handle missing 2FA setup

    expected 400 "Bad Request", got 404 "Not Found"

      164 |           code: "123456",
      165 |         })
    > 166 |         .expect(400);
          |          ^
      167 |
      168 |       expect(response.body.success).toBe(false);
      169 |       expect(response.body.error).toBe("No 2FA setup found");

      at Object.expect (tests/unit/routes/user.test.js:166:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè User Routes - 2FA Functionality ‚Ä∫ POST /user/two-factor (disable) ‚Ä∫ should disable 2FA after verifying current code

    expected 200 "OK", got 404 "Not Found"

      191 |           code: "123456",
      192 |         })
    > 193 |         .expect(200);
          |          ^
      194 |
      195 |       expect(response.body.success).toBe(true);
      196 |       expect(response.body.message).toContain("disabled successfully");

      at Object.expect (tests/unit/routes/user.test.js:193:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè User Routes - 2FA Functionality ‚Ä∫ POST /user/two-factor (disable) ‚Ä∫ should require valid code to disable

    expected 400 "Bad Request", got 404 "Not Found"

      223 |           code: "invalid",
      224 |         })
    > 225 |         .expect(400);
          |          ^
      226 |
      227 |       expect(response.body.success).toBe(false);
      228 |       expect(response.body.error).toBe("Invalid 2FA code");

      at Object.expect (tests/unit/routes/user.test.js:225:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè User Routes - 2FA Functionality ‚Ä∫ Error handling ‚Ä∫ should require action parameter

    expected 400 "Bad Request", got 404 "Not Found"

      237 |           userId: "test-user-123",
      238 |         })
    > 239 |         .expect(400);
          |          ^
      240 |
      241 |       expect(response.body.success).toBe(false);
      242 |       expect(response.body.error).toBe("Missing required parameters");

      at Object.expect (tests/unit/routes/user.test.js:239:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè User Routes - 2FA Functionality ‚Ä∫ Error handling ‚Ä∫ should require userId parameter

    expected 400 "Bad Request", got 404 "Not Found"

      249 |           action: "enable",
      250 |         })
    > 251 |         .expect(400);
          |          ^
      252 |
      253 |       expect(response.body.success).toBe(false);
      254 |       expect(response.body.error).toBe("Missing required parameters");

      at Object.expect (tests/unit/routes/user.test.js:251:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ‚óè User Routes - 2FA Functionality ‚Ä∫ Error handling ‚Ä∫ should handle invalid actions

    expected 400 "Bad Request", got 404 "Not Found"

      262 |           userId: "test-user-123",
      263 |         })
    > 264 |         .expect(400);
          |          ^
      265 |
      266 |       expect(response.body.success).toBe(false);
      267 |       expect(response.body.error).toBe("Invalid action");

      at Object.expect (tests/unit/routes/user.test.js:264:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

FAIL tests/integration/utils/liveDataManager.test.js
  ‚óè Live Data Manager Integration Tests ‚Ä∫ Connection Management ‚Ä∫ should get connection status

    TypeError: Cannot read properties of null (reading 'connectionId')

      84 |
      85 |       expect(status).toBeDefined();
    > 86 |       expect(status.connectionId).toBe(connectionId);
         |                     ^
      87 |       expect(status.provider).toBe("alpaca");
      88 |       expect(status.symbols).toBeDefined();
      89 |       expect(status.status).toBe("active");

      at Object.connectionId (tests/integration/utils/liveDataManager.test.js:86:21)

  ‚óè Live Data Manager Integration Tests ‚Ä∫ Connection Management ‚Ä∫ should remove connection successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      100 |
      101 |       expect(result).toBeDefined();
    > 102 |       expect(result.success).toBe(true);
          |                              ^
      103 |       expect(result.connectionId).toBe(connectionId);
      104 |       expect(result.removedAt).toBeDefined();
      105 |       expect(result.provider).toBe("alpaca");

      at Object.toBe (tests/integration/utils/liveDataManager.test.js:102:30)

FAIL tests/unit/routes/earnings.test.js
  ‚óè Earnings Routes Unit Tests ‚Ä∫ GET /earnings ‚Ä∫ should delegate to calendar earnings endpoint

    expect(received).toMatchObject(expected)

    - Expected  - 2
    + Received  + 0

      Object {
    -   "earnings": Any<Array>,
        "success": true,
    -   "summary": Any<Object>,
      }

      49 |
      50 |       expect(response.status).toBe(200);
    > 51 |       expect(response.body).toMatchObject({
         |                             ^
      52 |         success: true,
      53 |         earnings: expect.any(Array),
      54 |         summary: expect.any(Object),

      at Object.toMatchObject (tests/unit/routes/earnings.test.js:51:29)

  ‚óè Earnings Routes Unit Tests ‚Ä∫ GET /earnings ‚Ä∫ should handle calendar delegation errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      66 |       const response = await request(app).get("/earnings");
      67 |
    > 68 |       expect(response.status).toBe(500);
         |                               ^
      69 |       expect(response.body).toMatchObject({
      70 |         success: false,
      71 |         error: "Failed to fetch earnings data",

      at Object.toBe (tests/unit/routes/earnings.test.js:68:31)

  ‚óè Earnings Routes Unit Tests ‚Ä∫ GET /earnings/:symbol ‚Ä∫ should delegate to calendar earnings with symbol filter

    expect(received).toMatchObject(expected)

    - Expected  - 1
    + Received  + 0

      Object {
    -   "earnings": Any<Array>,
        "success": true,
        "symbol": "AAPL",
      }

       96 |
       97 |       expect(response.status).toBe(200);
    >  98 |       expect(response.body).toMatchObject({
          |                             ^
       99 |         success: true,
      100 |         earnings: expect.any(Array),
      101 |         symbol: "AAPL",

      at Object.toMatchObject (tests/unit/routes/earnings.test.js:98:29)

  ‚óè Earnings Routes Unit Tests ‚Ä∫ GET /earnings/:symbol ‚Ä∫ should handle symbol-specific delegation errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 404

      113 |       const response = await request(app).get("/earnings/INVALID");
      114 |
    > 115 |       expect(response.status).toBe(500);
          |                               ^
      116 |       expect(response.body).toMatchObject({
      117 |         success: false,
      118 |         error: "Failed to fetch earnings details",

      at Object.toBe (tests/unit/routes/earnings.test.js:115:31)

  ‚óè Earnings Routes Unit Tests ‚Ä∫ Error handling ‚Ä∫ should handle unexpected errors gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      131 |       const response = await request(app).get("/earnings");
      132 |
    > 133 |       expect(response.status).toBe(500);
          |                               ^
      134 |       expect(response.body).toMatchObject({
      135 |         success: false,
      136 |         error: "Failed to fetch earnings data",

      at Object.toBe (tests/unit/routes/earnings.test.js:133:31)

FAIL tests/integration/utils/tradingModeHelper.test.js
  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Trading Mode Management ‚Ä∫ should get current trading mode

    expect(received).toBeDefined()

    Received: undefined

      24 |
      25 |       expect(currentMode).toBeDefined();
    > 26 |       expect(currentMode.mode).toBeDefined();
         |                                ^
      27 |       expect(["paper", "live", "simulation", "backtest"]).toContain(
      28 |         currentMode.mode
      29 |       );

      at Object.toBeDefined (tests/integration/utils/tradingModeHelper.test.js:26:32)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Trading Mode Management ‚Ä∫ should switch to paper trading mode

    expect(received).toBe(expected) // Object.is equality

    Expected: "paper"
    Received: undefined

      43 |       expect(switchResult.success).toBe(true);
      44 |       expect(switchResult.previousMode).toBeDefined();
    > 45 |       expect(switchResult.currentMode).toBe("paper");
         |                                        ^
      46 |       expect(switchResult.switchedAt).toBeDefined();
      47 |       expect(switchResult.confirmation).toBeDefined();
      48 |     });

      at Object.toBe (tests/integration/utils/tradingModeHelper.test.js:45:40)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Trading Mode Management ‚Ä∫ should switch to live trading mode with validation

    expect(received).toBe(expected) // Object.is equality

    Expected: "live"
    Received: undefined

      70 |
      71 |       if (switchResult.success) {
    > 72 |         expect(switchResult.currentMode).toBe("live");
         |                                          ^
      73 |         expect(switchResult.riskLimits).toEqual(liveConfig.riskLimits);
      74 |         expect(switchResult.safeguards).toBeDefined();
      75 |       } else {

      at Object.toBe (tests/integration/utils/tradingModeHelper.test.js:72:42)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Trading Mode Management ‚Ä∫ should handle simulation mode

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

       95 |       );
       96 |
    >  97 |       expect(switchResult.success).toBe(true);
          |                                    ^
       98 |       expect(switchResult.currentMode).toBe("simulation");
       99 |       expect(switchResult.simulationSettings).toEqual(simulationConfig);
      100 |     });

      at Object.toBe (tests/integration/utils/tradingModeHelper.test.js:97:36)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Mode Validation ‚Ä∫ should validate paper trading requirements

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: undefined

      110 |
      111 |       expect(validation).toBeDefined();
    > 112 |       expect(validation.isValid).toBe(true);
          |                                  ^
      113 |       expect(validation.requirements).toBeDefined();
      114 |       expect(validation.checks).toBeDefined();
      115 |

      at Object.toBe (tests/integration/utils/tradingModeHelper.test.js:112:34)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Mode Validation ‚Ä∫ should validate live trading requirements

    TypeError: Cannot read properties of undefined (reading 'find')

      141 |
      142 |       requiredChecks.forEach((checkName) => {
    > 143 |         const check = validation.checks.find((c) => c.name === checkName);
          |                                         ^
      144 |         expect(check).toBeDefined();
      145 |       });
      146 |     });

      at find (tests/integration/utils/tradingModeHelper.test.js:143:41)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/utils/tradingModeHelper.test.js:142:22)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Mode Validation ‚Ä∫ should prevent unauthorized mode switches

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      155 |       );
      156 |
    > 157 |       expect(switchResult.success).toBe(false);
          |                                    ^
      158 |       expect(switchResult.error).toBeDefined();
      159 |       expect(switchResult.error.code).toBe("UNAUTHORIZED");
      160 |     });

      at Object.toBe (tests/integration/utils/tradingModeHelper.test.js:157:36)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Trading Environment Configuration ‚Ä∫ should configure paper trading environment

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: undefined

      177 |
      178 |       expect(configResult).toBeDefined();
    > 179 |       expect(configResult.success).toBe(true);
          |                                    ^
      180 |       expect(configResult.configuration).toEqual(paperConfig);
      181 |       expect(configResult.environmentReady).toBe(true);
      182 |     });

      at Object.toBe (tests/integration/utils/tradingModeHelper.test.js:179:36)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Trading Environment Configuration ‚Ä∫ should configure live trading environment

    expect(received).toBeDefined()

    Received: undefined

      204 |       } else {
      205 |         // May fail in test environment
    > 206 |         expect(configResult.error).toBeDefined();
          |                                    ^
      207 |       }
      208 |     });
      209 |

      at Object.toBeDefined (tests/integration/utils/tradingModeHelper.test.js:206:36)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Trading Environment Configuration ‚Ä∫ should handle environment health checks

    expect(received).toBeDefined()

    Received: undefined

      213 |
      214 |       expect(healthCheck).toBeDefined();
    > 215 |       expect(healthCheck.status).toBeDefined();
          |                                  ^
      216 |       expect(["healthy", "degraded", "unhealthy"]).toContain(
      217 |         healthCheck.status
      218 |       );

      at Object.toBeDefined (tests/integration/utils/tradingModeHelper.test.js:215:34)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Risk Management Integration ‚Ä∫ should enforce risk limits by trading mode

    expect(received).toBeDefined()

    Received: undefined

      245 |
      246 |       expect(riskCheck).toBeDefined();
    > 247 |       expect(riskCheck.approved).toBeDefined();
          |                                  ^
      248 |       expect(riskCheck.riskScore).toBeDefined();
      249 |       expect(riskCheck.appliedLimits).toBeDefined();
      250 |

      at Object.toBeDefined (tests/integration/utils/tradingModeHelper.test.js:247:34)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Mode-Specific Features ‚Ä∫ should track paper trading performance

    expect(received).toBeDefined()

    Received: undefined

      321 |       expect(performance).toBeDefined();
      322 |       expect(performance.totalReturn).toBeDefined();
    > 323 |       expect(performance.realizedPnL).toBeDefined();
          |                                       ^
      324 |       expect(performance.unrealizedPnL).toBeDefined();
      325 |       expect(performance.tradeCount).toBeDefined();
      326 |       expect(performance.winRate).toBeDefined();

      at Object.toBeDefined (tests/integration/utils/tradingModeHelper.test.js:323:39)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Mode-Specific Features ‚Ä∫ should handle backtesting mode

    expect(received).toBeDefined()

    Received: undefined

      348 |
      349 |       expect(backtestResult).toBeDefined();
    > 350 |       expect(backtestResult.backtestId).toBeDefined();
          |                                         ^
      351 |       expect(backtestResult.status).toBeDefined();
      352 |       expect(backtestResult.progress).toBeDefined();
      353 |

      at Object.toBeDefined (tests/integration/utils/tradingModeHelper.test.js:350:41)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Data Isolation and Security ‚Ä∫ should maintain data isolation between modes

    TypeError: tradingModeHelper.getPositions is not a function

      374 |       });
      375 |
    > 376 |       const paperPositions = await tradingModeHelper.getPositions(userId);
          |                                                      ^
      377 |
      378 |       // Switch to simulation mode
      379 |       await tradingModeHelper.switchMode(userId, "simulation");

      at Object.getPositions (tests/integration/utils/tradingModeHelper.test.js:376:54)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Data Isolation and Security ‚Ä∫ should secure live trading credentials

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: undefined

      398 |
      399 |       expect(securityCheck).toBeDefined();
    > 400 |       expect(securityCheck.encrypted).toBe(true);
          |                                       ^
      401 |       expect(securityCheck.keyStrength).toBeDefined();
      402 |       expect(securityCheck.securityScore).toBeDefined();
      403 |

      at Object.toBe (tests/integration/utils/tradingModeHelper.test.js:400:39)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Performance and Monitoring ‚Ä∫ should monitor mode switching performance

    expect(received).toBeDefined()

    Received: undefined

      421 |       expect(metrics.averageSwitchTime).toBeDefined();
      422 |       expect(metrics.successRate).toBeDefined();
    > 423 |       expect(metrics.activeUsers).toBeDefined();
          |                                   ^
      424 |     });
      425 |
      426 |     test("should handle concurrent mode operations", async () => {

      at Object.toBeDefined (tests/integration/utils/tradingModeHelper.test.js:423:35)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Performance and Monitoring ‚Ä∫ should handle concurrent mode operations

    TypeError: tradingModeHelper.getPositions is not a function

      432 |         tradingModeHelper.validateModeRequirements(userId, "paper"),
      433 |         tradingModeHelper.getCurrentRiskLimits(userId),
    > 434 |         tradingModeHelper.getPositions(userId),
          |                           ^
      435 |       ];
      436 |
      437 |       const results = await Promise.all(operations);

      at Object.getPositions (tests/integration/utils/tradingModeHelper.test.js:434:27)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle invalid mode transitions

    expect(received).toBe(expected) // Object.is equality

    Expected: "INVALID_MODE"
    Received: undefined

      455 |       expect(invalidTransition.success).toBe(false);
      456 |       expect(invalidTransition.error).toBeDefined();
    > 457 |       expect(invalidTransition.error.code).toBe("INVALID_MODE");
          |                                            ^
      458 |     });
      459 |
      460 |     test("should handle system failures gracefully", async () => {

      at Object.toBe (tests/integration/utils/tradingModeHelper.test.js:457:44)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle system failures gracefully

    expect(received).toBeDefined()

    Received: undefined

      471 |
      472 |       expect(failureRecovery).toBeDefined();
    > 473 |       expect(failureRecovery.recovered).toBeDefined();
          |                                         ^
      474 |       expect(failureRecovery.fallbackActivated).toBeDefined();
      475 |
      476 |       if (failureRecovery.fallbackActivated) {

      at Object.toBeDefined (tests/integration/utils/tradingModeHelper.test.js:473:41)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Error Handling and Edge Cases ‚Ä∫ should handle network connectivity issues

    expect(received).toBeDefined()

    Received: undefined

      485 |
      486 |       expect(connectivityCheck).toBeDefined();
    > 487 |       expect(connectivityCheck.status).toBeDefined();
          |                                        ^
      488 |       expect(["connected", "degraded", "disconnected"]).toContain(
      489 |         connectivityCheck.status
      490 |       );

      at Object.toBeDefined (tests/integration/utils/tradingModeHelper.test.js:487:40)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Audit and Compliance ‚Ä∫ should log all mode changes

    expect(received).toBe(expected) // Object.is equality

    Expected: "MODE_SWITCH"
    Received: "mode_switch"

      516 |
      517 |       const latestEntry = auditLog.entries[0];
    > 518 |       expect(latestEntry.action).toBe("MODE_SWITCH");
          |                                  ^
      519 |       expect(latestEntry.userId).toBe(userId);
      520 |       expect(latestEntry.details.targetMode).toBe("paper");
      521 |       expect(latestEntry.timestamp).toBeDefined();

      at Object.toBe (tests/integration/utils/tradingModeHelper.test.js:518:34)

  ‚óè Trading Mode Helper Integration Tests ‚Ä∫ Audit and Compliance ‚Ä∫ should maintain compliance records

    expect(received).toBeDefined()

    Received: undefined

      527 |
      528 |       expect(compliance).toBeDefined();
    > 529 |       expect(compliance.status).toBeDefined();
          |                                 ^
      530 |       expect(compliance.checks).toBeDefined();
      531 |       expect(compliance.lastUpdate).toBeDefined();
      532 |

      at Object.toBeDefined (tests/integration/utils/tradingModeHelper.test.js:529:33)

FAIL tests/integration/utils/alertSystem.test.js
  ‚óè Alert System Integration Tests ‚Ä∫ Alert Processing and Database Integration ‚Ä∫ should create and store alerts in database

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)

  ‚óè Alert System Integration Tests ‚Ä∫ Alert Processing and Database Integration ‚Ä∫ should handle multiple alert types

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)

  ‚óè Alert System Integration Tests ‚Ä∫ Alert Processing and Database Integration ‚Ä∫ should process provider performance alerts

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)

  ‚óè Alert System Integration Tests ‚Ä∫ Alert Processing and Database Integration ‚Ä∫ should handle cost monitoring alerts

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)

  ‚óè Alert System Integration Tests ‚Ä∫ Alert Subscription and Filtering ‚Ä∫ should manage alert subscriptions

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)

  ‚óè Alert System Integration Tests ‚Ä∫ Alert Subscription and Filtering ‚Ä∫ should handle multiple subscriptions

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)

  ‚óè Alert System Integration Tests ‚Ä∫ Alert Deduplication and Rate Limiting ‚Ä∫ should deduplicate similar alerts

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)

  ‚óè Alert System Integration Tests ‚Ä∫ Alert Deduplication and Rate Limiting ‚Ä∫ should respect rate limiting

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)

  ‚óè Alert System Integration Tests ‚Ä∫ Alert Metrics and Analytics ‚Ä∫ should calculate alert statistics

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)

  ‚óè Alert System Integration Tests ‚Ä∫ Alert Metrics and Analytics ‚Ä∫ should track alert trends

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)

  ‚óè Alert System Integration Tests ‚Ä∫ Error Handling and Recovery ‚Ä∫ should handle invalid alert data gracefully

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)

  ‚óè Alert System Integration Tests ‚Ä∫ Error Handling and Recovery ‚Ä∫ should recover from subscription callback errors

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)

  ‚óè Alert System Integration Tests ‚Ä∫ Error Handling and Recovery ‚Ä∫ should handle database connectivity issues

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)

  ‚óè Alert System Integration Tests ‚Ä∫ Configuration and Customization ‚Ä∫ should allow threshold customization

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)

  ‚óè Alert System Integration Tests ‚Ä∫ Configuration and Customization ‚Ä∫ should support custom alert processors

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)

  ‚óè Alert System Integration Tests ‚Ä∫ Performance and Scalability ‚Ä∫ should handle high volume of alerts efficiently

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)

  ‚óè Alert System Integration Tests ‚Ä∫ Performance and Scalability ‚Ä∫ should maintain memory usage under control

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)

  ‚óè Alert System Integration Tests ‚Ä∫ Integration with Real-Time Services ‚Ä∫ should integrate with live data monitoring

    TypeError: alertSystem.clearHistory is not a function

      26 |   beforeEach(() => {
      27 |     // Reset alert system for each test
    > 28 |     alertSystem.clearHistory();
         |                 ^
      29 |     alertSystem.clearSubscriptions();
      30 |   });
      31 |

      at Object.clearHistory (tests/integration/utils/alertSystem.test.js:28:17)


  ‚óè Test suite failed to run

    TypeError: alertSystem.stop is not a function

      19 |   afterAll(async () => {
      20 |     if (alertSystem) {
    > 21 |       alertSystem.stop();
         |                   ^
      22 |     }
      23 |     await closeDatabase();
      24 |   });

      at Object.stop (tests/integration/utils/alertSystem.test.js:21:19)

FAIL tests/integration/utils/logger.test.js
  ‚óè Logger Integration Tests ‚Ä∫ Error Handling ‚Ä∫ should handle circular references in context

    expect(received).not.toThrow()

    Error name:    "TypeError"
    Error message: "Converting circular structure to JSON
        --> starting at object with constructor 'Object'
        --- property 'self' closes the circle"

          89 |     } else {
          90 |       // JSON format for production (structured logging)
        > 91 |       console.log(JSON.stringify(logEntry));
             |                        ^
          92 |     }
          93 |   }
          94 |

      at Logger.stringify [as output] (utils/logger.js:91:24)
      at Logger.output [as info] (utils/logger.js:144:10)
      at info (tests/integration/utils/logger.test.js:584:16)
      at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:74:11)
      at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:320:21)
      at Object.toThrow (tests/integration/utils/logger.test.js:585:14)
      at Object.toThrow (tests/integration/utils/logger.test.js:585:14)

FAIL tests/integration/utils/newsAnalyzer.test.js
  ‚óè News Analyzer Integration Tests ‚Ä∫ News Data Processing ‚Ä∫ should analyze news sentiment

    expect(received).toBeDefined()

    Received: undefined

      34 |       expect(sentiment).toBeDefined();
      35 |       expect(sentiment.score).toBeDefined();
    > 36 |       expect(sentiment.magnitude).toBeDefined();
         |                                   ^
      37 |       expect(sentiment.label).toBeDefined();
      38 |
      39 |       expect(typeof sentiment.score).toBe("number");

      at Object.toBeDefined (tests/integration/utils/newsAnalyzer.test.js:36:35)

  ‚óè News Analyzer Integration Tests ‚Ä∫ News Data Processing ‚Ä∫ should extract key topics from news

    expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      54 |
      55 |       expect(Array.isArray(topics)).toBe(true);
    > 56 |       expect(topics.length).toBeGreaterThan(0);
         |                             ^
      57 |
      58 |       topics.forEach((topic) => {
      59 |         expect(topic.keyword).toBeDefined();

      at Object.toBeGreaterThan (tests/integration/utils/newsAnalyzer.test.js:56:29)

  ‚óè News Analyzer Integration Tests ‚Ä∫ Real-time News Processing ‚Ä∫ should process news feed

    TypeError: newsAnalyzer.processNewsFeed is not a function

      83 |       ];
      84 |
    > 85 |       const processedFeed = await newsAnalyzer.processNewsFeed(newsFeed);
         |                                                ^
      86 |
      87 |       expect(Array.isArray(processedFeed)).toBe(true);
      88 |       expect(processedFeed.length).toBe(newsFeed.length);

      at Object.processNewsFeed (tests/integration/utils/newsAnalyzer.test.js:85:48)

  ‚óè News Analyzer Integration Tests ‚Ä∫ Real-time News Processing ‚Ä∫ should handle high-volume news processing

    TypeError: newsAnalyzer.processBulkNews is not a function

      103 |
      104 |       const startTime = Date.now();
    > 105 |       const processed = await newsAnalyzer.processBulkNews(largeNewsFeed);
          |                                            ^
      106 |       const duration = Date.now() - startTime;
      107 |
      108 |       expect(processed.length).toBe(100);

      at Object.processBulkNews (tests/integration/utils/newsAnalyzer.test.js:105:44)

  ‚óè News Analyzer Integration Tests ‚Ä∫ Symbol-Specific Analysis ‚Ä∫ should analyze news for specific symbols

    TypeError: newsAnalyzer.getSymbolNews is not a function

      119 |     test("should analyze news for specific symbols", async () => {
      120 |       const symbol = "AAPL";
    > 121 |       const symbolNews = await newsAnalyzer.getSymbolNews(symbol, {
          |                                             ^
      122 |         limit: 10,
      123 |       });
      124 |

      at Object.getSymbolNews (tests/integration/utils/newsAnalyzer.test.js:121:45)

  ‚óè News Analyzer Integration Tests ‚Ä∫ Symbol-Specific Analysis ‚Ä∫ should calculate symbol sentiment score

    TypeError: newsAnalyzer.getSymbolSentimentScore is not a function

      133 |     test("should calculate symbol sentiment score", async () => {
      134 |       const symbol = "AAPL";
    > 135 |       const sentimentScore = await newsAnalyzer.getSymbolSentimentScore(symbol);
          |                                                 ^
      136 |
      137 |       expect(sentimentScore).toBeDefined();
      138 |       expect(sentimentScore.composite).toBeDefined();

      at Object.getSymbolSentimentScore (tests/integration/utils/newsAnalyzer.test.js:135:49)

  ‚óè News Analyzer Integration Tests ‚Ä∫ Trend Analysis ‚Ä∫ should identify trending topics

    TypeError: newsAnalyzer.getTrendingTopics is not a function

      149 |   describe("Trend Analysis", () => {
      150 |     test("should identify trending topics", async () => {
    > 151 |       const trendingTopics = await newsAnalyzer.getTrendingTopics({
          |                                                 ^
      152 |         period: "24h",
      153 |       });
      154 |

      at Object.getTrendingTopics (tests/integration/utils/newsAnalyzer.test.js:151:49)

  ‚óè News Analyzer Integration Tests ‚Ä∫ Trend Analysis ‚Ä∫ should analyze sentiment trends over time

    TypeError: newsAnalyzer.analyzeSentimentTrends is not a function

      167 |     test("should analyze sentiment trends over time", async () => {
      168 |       const symbol = "AAPL";
    > 169 |       const trendAnalysis = await newsAnalyzer.analyzeSentimentTrends(symbol, {
          |                                                ^
      170 |         period: "7days",
      171 |         granularity: "1hour",
      172 |       });

      at Object.analyzeSentimentTrends (tests/integration/utils/newsAnalyzer.test.js:169:48)

  ‚óè News Analyzer Integration Tests ‚Ä∫ News Source Quality ‚Ä∫ should evaluate news source credibility

    TypeError: newsAnalyzer.evaluateSourceCredibility is not a function

      191 |       for (const source of sources) {
      192 |         const credibility =
    > 193 |           await newsAnalyzer.evaluateSourceCredibility(source);
          |                              ^
      194 |
      195 |         expect(credibility).toBeDefined();
      196 |         expect(credibility.score).toBeDefined();

      at Object.evaluateSourceCredibility (tests/integration/utils/newsAnalyzer.test.js:193:30)

  ‚óè News Analyzer Integration Tests ‚Ä∫ News Source Quality ‚Ä∫ should weight analysis by source quality

    expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      224 |         await newsAnalyzer.analyzeSentiment(lowQualityArticle);
      225 |
    > 226 |       expect(highQualitySentiment.confidence).toBeGreaterThan(
          |                                               ^
      227 |         lowQualitySentiment.confidence
      228 |       );
      229 |       expect(highQualitySentiment.weight).toBeGreaterThan(

      at Object.toBeGreaterThan (tests/integration/utils/newsAnalyzer.test.js:226:47)

  ‚óè News Analyzer Integration Tests ‚Ä∫ Language Processing ‚Ä∫ should handle multiple languages

    expect(received).toBe(expected) // Object.is equality

    Expected: "en"
    Received: undefined

      252 |
      253 |         expect(analysis).toBeDefined();
    > 254 |         expect(analysis.language).toBe(article.language);
          |                                   ^
      255 |         expect(analysis.sentiment).toBeDefined();
      256 |       }
      257 |     });

      at Object.toBe (tests/integration/utils/newsAnalyzer.test.js:254:35)

  ‚óè News Analyzer Integration Tests ‚Ä∫ Language Processing ‚Ä∫ should detect article language automatically

    TypeError: newsAnalyzer.detectLanguageAndAnalyze is not a function

      264 |       };
      265 |
    > 266 |       const analysis = await newsAnalyzer.detectLanguageAndAnalyze(article);
          |                                           ^
      267 |
      268 |       expect(analysis).toBeDefined();
      269 |       expect(analysis.detectedLanguage).toBe("fr");

      at Object.detectLanguageAndAnalyze (tests/integration/utils/newsAnalyzer.test.js:266:43)

  ‚óè News Analyzer Integration Tests ‚Ä∫ Market Impact Analysis ‚Ä∫ should predict market impact from news

    TypeError: newsAnalyzer.predictMarketImpact is not a function

      282 |       };
      283 |
    > 284 |       const marketImpact = await newsAnalyzer.predictMarketImpact(breakingNews);
          |                                               ^
      285 |
      286 |       expect(marketImpact).toBeDefined();
      287 |       expect(marketImpact.impactScore).toBeDefined();

      at Object.predictMarketImpact (tests/integration/utils/newsAnalyzer.test.js:284:47)

  ‚óè News Analyzer Integration Tests ‚Ä∫ Market Impact Analysis ‚Ä∫ should correlate news with price movements

    TypeError: newsAnalyzer.correlateSentimentWithPrice is not a function

      298 |     test("should correlate news with price movements", async () => {
      299 |       const symbol = "AAPL";
    > 300 |       const correlation = await newsAnalyzer.correlateSentimentWithPrice(
          |                                              ^
      301 |         symbol,
      302 |         {
      303 |           period: "30days",

      at Object.correlateSentimentWithPrice (tests/integration/utils/newsAnalyzer.test.js:300:46)

  ‚óè News Analyzer Integration Tests ‚Ä∫ Alert Integration ‚Ä∫ should trigger news-based alerts

    TypeError: newsAnalyzer.setupNewsAlert is not a function

      326 |       };
      327 |
    > 328 |       const newsAlert = await newsAnalyzer.setupNewsAlert(alertConfig);
          |                                            ^
      329 |
      330 |       expect(newsAlert).toBeDefined();
      331 |       expect(newsAlert.alertId).toBeDefined();

      at Object.setupNewsAlert (tests/integration/utils/newsAnalyzer.test.js:328:44)

  ‚óè News Analyzer Integration Tests ‚Ä∫ Alert Integration ‚Ä∫ should process real-time news alerts

    TypeError: newsAnalyzer.processNewsAlert is not a function

      344 |       };
      345 |
    > 346 |       const alertTriggered = await newsAnalyzer.processNewsAlert(urgentNews);
          |                                                 ^
      347 |
      348 |       expect(alertTriggered).toBeDefined();
      349 |       expect(typeof alertTriggered.triggered).toBe("boolean");

      at Object.processNewsAlert (tests/integration/utils/newsAnalyzer.test.js:346:49)

  ‚óè News Analyzer Integration Tests ‚Ä∫ Performance and Scalability ‚Ä∫ should process news articles efficiently

    TypeError: newsAnalyzer.processBulkNews is not a function

      364 |
      365 |       const startTime = Date.now();
    > 366 |       const results = await newsAnalyzer.processBulkNews(testArticles);
          |                                          ^
      367 |       const duration = Date.now() - startTime;
      368 |
      369 |       expect(results.length).toBe(50);

      at Object.processBulkNews (tests/integration/utils/newsAnalyzer.test.js:366:42)

  ‚óè News Analyzer Integration Tests ‚Ä∫ Performance and Scalability ‚Ä∫ should handle memory efficiently with large datasets

    TypeError: newsAnalyzer.processBulkNews is not a function

      387 |       }));
      388 |
    > 389 |       await newsAnalyzer.processBulkNews(largeDataset);
          |                          ^
      390 |
      391 |       const finalMemory = process.memoryUsage().heapUsed;
      392 |       const memoryIncrease = finalMemory - initialMemory;

      at Object.processBulkNews (tests/integration/utils/newsAnalyzer.test.js:389:26)

FAIL tests/integration/utils/apiKeyService.test.js
  ‚óè API Key Service Integration Tests ‚Ä∫ API Key Encryption ‚Ä∫ should encrypt and decrypt API keys

    TypeError: apiKeyService.encryptApiKey is not a function

      24 |       const userSalt = "user-salt-456";
      25 |
    > 26 |       const encrypted = await apiKeyService.encryptApiKey(testKey, userSalt);
         |                                             ^
      27 |       expect(encrypted).toBeDefined();
      28 |       expect(encrypted).not.toBe(testKey);
      29 |

      at Object.encryptApiKey (tests/integration/utils/apiKeyService.test.js:26:45)

  ‚óè API Key Service Integration Tests ‚Ä∫ API Key Encryption ‚Ä∫ should handle encryption with different salts

    TypeError: apiKeyService.encryptApiKey is not a function

      37 |       const salt2 = "salt2";
      38 |
    > 39 |       const encrypted1 = await apiKeyService.encryptApiKey(testKey, salt1);
         |                                              ^
      40 |       const encrypted2 = await apiKeyService.encryptApiKey(testKey, salt2);
      41 |
      42 |       // Same key with different salts should produce different encrypted results

      at Object.encryptApiKey (tests/integration/utils/apiKeyService.test.js:39:46)

  ‚óè API Key Service Integration Tests ‚Ä∫ API Key Encryption ‚Ä∫ should handle decryption with wrong salt gracefully

    TypeError: apiKeyService.encryptApiKey is not a function

      57 |       const wrongSalt = "wrong-salt";
      58 |
    > 59 |       const encrypted = await apiKeyService.encryptApiKey(testKey, correctSalt);
         |                                             ^
      60 |
      61 |       // Should not decrypt correctly with wrong salt
      62 |       try {

      at Object.encryptApiKey (tests/integration/utils/apiKeyService.test.js:59:45)

  ‚óè API Key Service Integration Tests ‚Ä∫ JWT Token Validation ‚Ä∫ should handle JWT token validation

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      134 |       expect(result).toBeDefined();
      135 |       // Invalid token should return null or false
    > 136 |       expect(result === null || result === false).toBe(true);
          |                                                   ^
      137 |     });
      138 |
      139 |     test("should check JWT circuit breaker", () => {

      at Object.toBe (tests/integration/utils/apiKeyService.test.js:136:51)

  ‚óè API Key Service Integration Tests ‚Ä∫ JWT Token Validation ‚Ä∫ should check JWT circuit breaker

    TypeError: apiKeyService.checkJwtCircuitBreaker is not a function

      138 |
      139 |     test("should check JWT circuit breaker", () => {
    > 140 |       const circuitBreakerStatus = apiKeyService.checkJwtCircuitBreaker();
          |                                                  ^
      141 |       expect(typeof circuitBreakerStatus).toBe("boolean");
      142 |     });
      143 |

      at Object.checkJwtCircuitBreaker (tests/integration/utils/apiKeyService.test.js:140:50)

  ‚óè API Key Service Integration Tests ‚Ä∫ JWT Token Validation ‚Ä∫ should record JWT success and failure

    expect(received).not.toThrow()

    Error name:    "TypeError"
    Error message: "apiKeyService.recordJwtSuccess is not a function"

          145 |       // These methods should not throw errors
          146 |       expect(() => {
        > 147 |         apiKeyService.recordJwtSuccess();
              |                       ^
          148 |         apiKeyService.recordJwtFailure(new Error("test error"));
          149 |       }).not.toThrow();
          150 |     });

      at recordJwtSuccess (tests/integration/utils/apiKeyService.test.js:147:23)
      at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:74:11)
      at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:320:21)
      at Object.toThrow (tests/integration/utils/apiKeyService.test.js:149:14)
      at Object.toThrow (tests/integration/utils/apiKeyService.test.js:149:14)

  ‚óè API Key Service Integration Tests ‚Ä∫ Circuit Breaker Functionality ‚Ä∫ should check circuit breaker status

    TypeError: apiKeyService.checkCircuitBreaker is not a function

      153 |   describe("Circuit Breaker Functionality", () => {
      154 |     test("should check circuit breaker status", () => {
    > 155 |       const status = apiKeyService.checkCircuitBreaker();
          |                                    ^
      156 |       expect(typeof status).toBe("boolean");
      157 |     });
      158 |

      at Object.checkCircuitBreaker (tests/integration/utils/apiKeyService.test.js:155:36)

  ‚óè API Key Service Integration Tests ‚Ä∫ Circuit Breaker Functionality ‚Ä∫ should record success and failure

    expect(received).not.toThrow()

    Error name:    "TypeError"
    Error message: "apiKeyService.recordSuccess is not a function"

          160 |       // These methods should not throw errors
          161 |       expect(() => {
        > 162 |         apiKeyService.recordSuccess();
              |                       ^
          163 |         apiKeyService.recordFailure(new Error("test error"));
          164 |       }).not.toThrow();
          165 |     });

      at recordSuccess (tests/integration/utils/apiKeyService.test.js:162:23)
      at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:74:11)
      at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:320:21)
      at Object.toThrow (tests/integration/utils/apiKeyService.test.js:164:14)
      at Object.toThrow (tests/integration/utils/apiKeyService.test.js:164:14)

  ‚óè API Key Service Integration Tests ‚Ä∫ Audit Logging ‚Ä∫ should log audit events

    TypeError: apiKeyService.logAuditEvent is not a function

      175 |       // Should not throw error
      176 |       await expect(
    > 177 |         apiKeyService.logAuditEvent(userId, action, provider, sessionId)
          |                       ^
      178 |       ).resolves.not.toThrow();
      179 |     });
      180 |

      at Object.logAuditEvent (tests/integration/utils/apiKeyService.test.js:177:23)

  ‚óè API Key Service Integration Tests ‚Ä∫ Audit Logging ‚Ä∫ should handle audit logging failures gracefully

    TypeError: apiKeyService.logAuditEvent is not a function

      182 |       // Should not throw even with invalid data
      183 |       await expect(
    > 184 |         apiKeyService.logAuditEvent(null, null, null, null)
          |                       ^
      185 |       ).resolves.not.toThrow();
      186 |     });
      187 |   });

      at Object.logAuditEvent (tests/integration/utils/apiKeyService.test.js:184:23)

  ‚óè API Key Service Integration Tests ‚Ä∫ Encryption Key Management ‚Ä∫ should get encryption key

    TypeError: apiKeyService.getEncryptionKey is not a function

      189 |   describe("Encryption Key Management", () => {
      190 |     test("should get encryption key", async () => {
    > 191 |       const encryptionKey = await apiKeyService.getEncryptionKey();
          |                                                 ^
      192 |       expect(encryptionKey).toBeDefined();
      193 |       expect(typeof encryptionKey).toBe("string");
      194 |     });

      at Object.getEncryptionKey (tests/integration/utils/apiKeyService.test.js:191:49)

FAIL tests/unit/services/alpacaIntegration.test.js
  ‚óè Alpaca Integration Service Unit Tests ‚Ä∫ Account Information ‚Ä∫ should retrieve account information

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "test-user-123", "alpaca"

    Number of calls: 0

      55 |       expect(result).toEqual(mockAccountInfo);
      56 |       expect(alpacaService.getAccountInfo).toHaveBeenCalledWith(testUserId);
    > 57 |       expect(getDecryptedApiKey).toHaveBeenCalledWith(testUserId, "alpaca");
         |                                  ^
      58 |     });
      59 |
      60 |     test("should handle account information errors", async () => {

      at Object.toHaveBeenCalledWith (tests/unit/services/alpacaIntegration.test.js:57:34)

  ‚óè Alpaca Integration Service Unit Tests ‚Ä∫ Error Handling ‚Ä∫ should handle authentication failures

    expect(received).rejects.toThrow(expected)

    Expected substring: "Invalid API credentials"
    Received message:   "Request timeout"

          391 |     test("should handle network timeouts", async () => {
          392 |       alpacaService.getAccountInfo.mockRejectedValue(
        > 393 |         new Error("Request timeout")
              |         ^
          394 |       );
          395 |
          396 |       await expect(alpacaService.getAccountInfo(testUserId)).rejects.toThrow(

      at Object.<anonymous> (tests/unit/services/alpacaIntegration.test.js:393:9)
      at Object.toThrow (node_modules/expect/build/index.js:218:22)
      at Object.toThrow (tests/unit/services/alpacaIntegration.test.js:406:70)

FAIL tests/integration/utils/sentimentEngine.test.js
  ‚óè Sentiment Engine Integration Tests ‚Ä∫ Score to Label Conversion ‚Ä∫ should handle invalid scores gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: "neutral"
    Received: "positive"

      141 |       invalidScores.forEach((score) => {
      142 |         const label = sentimentEngine.scoreToLabel(score);
    > 143 |         expect(label).toBe("neutral");
          |                       ^
      144 |       });
      145 |     });
      146 |

      at toBe (tests/integration/utils/sentimentEngine.test.js:143:23)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/utils/sentimentEngine.test.js:141:21)

FAIL tests/unit/utils/tradingModeHelper.test.js
  ‚óè Trading Mode Helper Unit Tests ‚Ä∫ getTradingModeTable ‚Ä∫ should return live table name for live mode

    expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 1

      Object {
        "fallbackTable": "orders",
        "mode": "live",
    -   "table": "orders_live",
    +   "table": "orders",
      }

      370 |       );
      371 |
    > 372 |       expect(result).toEqual({
          |                      ^
      373 |         table: "orders_live",
      374 |         mode: "live",
      375 |         fallbackTable: "orders",

      at Object.toEqual (tests/unit/utils/tradingModeHelper.test.js:372:22)

  ‚óè Trading Mode Helper Unit Tests ‚Ä∫ formatPortfolioWithMode ‚Ä∫ should format portfolio data with paper trading context

    expect(received).toMatchObject(expected)

    - Expected  - 1
    + Received  + 6

    @@ -3,7 +3,12 @@
        "paper_trading": true,
        "performance_disclaimer": "Paper trading performance - results are simulated and may not reflect real trading conditions",
        "risk_warning": null,
        "total_pnl": 5000,
        "total_value": 50000,
    -   "trading_mode": "paper",
    +   "trading_mode": Object {
    +     "isLive": false,
    +     "isPaper": true,
    +     "mode": "paper",
    +     "source": "database",
    +   },
      }

      475 |       );
      476 |
    > 477 |       expect(result).toMatchObject({
          |                      ^
      478 |         total_value: 50000,
      479 |         total_pnl: 5000,
      480 |         trading_mode: "paper",

      at Object.toMatchObject (tests/unit/utils/tradingModeHelper.test.js:477:22)

  ‚óè Trading Mode Helper Unit Tests ‚Ä∫ formatPortfolioWithMode ‚Ä∫ should format portfolio data with live trading context

    expect(received).toMatchObject(expected)

    - Expected  - 1
    + Received  + 6

    @@ -3,7 +3,12 @@
        "paper_trading": false,
        "performance_disclaimer": "Live trading performance - actual results from real money trades",
        "risk_warning": "‚ö†Ô∏è Live trading results reflect real money gains/losses",
        "total_pnl": 5000,
        "total_value": 50000,
    -   "trading_mode": "live",
    +   "trading_mode": Object {
    +     "isLive": true,
    +     "isPaper": false,
    +     "mode": "live",
    +     "source": "database",
    +   },
      }

      508 |       );
      509 |
    > 510 |       expect(result).toMatchObject({
          |                      ^
      511 |         total_value: 50000,
      512 |         total_pnl: 5000,
      513 |         trading_mode: "live",

      at Object.toMatchObject (tests/unit/utils/tradingModeHelper.test.js:510:22)

FAIL tests/integration/routes/liveData.integration.test.js (7.332 s)
  ‚óè Live Data Routes Integration Tests ‚Ä∫ GET /api/livedata/latest/:symbols (Authenticated) ‚Ä∫ should require authentication for latest data

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      329 |       const response = await request(app).get("/api/livedata/latest/AAPL");
      330 |
    > 331 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      332 |     });
      333 |
      334 |     test("should return latest data for single symbol", async () => {

      at Object.toBe (tests/integration/routes/liveData.integration.test.js:331:52)

  ‚óè Live Data Routes Integration Tests ‚Ä∫ GET /api/livedata/latest/:symbols (Authenticated) ‚Ä∫ should return latest data for single symbol

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      337 |         .set("Authorization", `Bearer ${authToken}`);
      338 |
    > 339 |       expect(response.status).toBe(200);
          |                               ^
      340 |
      341 |       if (response.status === 200) {
      342 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/liveData.integration.test.js:339:31)

  ‚óè Live Data Routes Integration Tests ‚Ä∫ GET /api/livedata/latest/:symbols (Authenticated) ‚Ä∫ should return latest data for multiple symbols

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      353 |         .set("Authorization", `Bearer ${authToken}`);
      354 |
    > 355 |       expect([200, 400].includes(response.status)).toBe(true);
          |                                                    ^
      356 |
      357 |       if (response.status === 200) {
      358 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/liveData.integration.test.js:355:52)

  ‚óè Live Data Routes Integration Tests ‚Ä∫ GET /api/livedata/latest/:symbols (Authenticated) ‚Ä∫ should handle fields parameter for latest data

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      366 |         .set("Authorization", `Bearer ${authToken}`);
      367 |
    > 368 |       expect([200, 400].includes(response.status)).toBe(true);
          |                                                    ^
      369 |     });
      370 |   });
      371 |

      at Object.toBe (tests/integration/routes/liveData.integration.test.js:368:52)


Test Suites: 107 failed, 45 passed, 152 total
Tests:       1065 failed, 10 skipped, 2641 passed, 3716 total
Snapshots:   0 total
Time:        110.77 s
Ran all test suites.
Force exiting Jest: Have you considered using `--detectOpenHandles` to detect async operations that kept running after all tests finished?
