
> financial-dashboard-lambda@1.0.0 test
> jest --coverage --coverageReporters=text --coverageReporters=html --coverageReporters=lcov --no-coverage

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:44 +0000] "GET /api/trading HTTP/1.1" 200 193 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:44 +0000] "GET /api/trading HTTP/1.1" 200 193 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:44 +0000] "GET /api/trading HTTP/1.1" 200 193 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:44 +0000] "GET /api/trading HTTP/1.1" 200 193 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:44 +0000] "GET /api/trading HTTP/1.1" 200 193 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:44 +0000] "GET /api/trading HTTP/1.1" 200 193 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:44 +0000] "GET /api/trading/health HTTP/1.1" 200 137 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:44 +0000] "GET /api/trading/health HTTP/1.1" 200 137 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:44 +0000] "GET /api/trading/health HTTP/1.1" 200 137 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:44 +0000] "GET /api/trading/health HTTP/1.1" 200 137 "-" "-"
  console.log
    [TRADING] Debug endpoint called

      at log (routes/trading.js:147:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:44 +0000] "GET /api/trading/debug HTTP/1.1" 200 746 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:204:13)

  console.log
    📊 Executing query:  SELECT symbol, date, signal, close, rsi, volume, target_price, buylevel, selllevel, stoplevel, entry_quality_score FROM buy_sell_daily WHERE timeframe = 'Daily' AND signal IN ('Buy', 'Sell') AND date >= CURRENT_DATE - INTERVAL '90 days' ORDER BY date DESC LIMIT $1 [ 100 ]

      at log (routes/trading.js:261:13)

  console.warn
    ⚠️ No trading signals found for filters: { symbol: undefined, signal_type: undefined }

      272 |
      273 |     if (result.rows.length === 0) {
    > 274 |       console.warn('⚠️ No trading signals found for filters:', { symbol, signal_type });
          |               ^
      275 |       return res.json({
      276 |         success: true,
      277 |         data: [],

      at warn (routes/trading.js:274:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:44 +0000] "GET /api/trading/signals HTTP/1.1" 200 82 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:204:13)

  console.log
    📊 Executing query:  SELECT symbol, date, signal, close, rsi, volume, target_price, buylevel, selllevel, stoplevel, entry_quality_score FROM buy_sell_daily WHERE timeframe = 'Daily' AND signal IN ('Buy', 'Sell') AND date >= CURRENT_DATE - INTERVAL '90 days' ORDER BY date DESC LIMIT $1 [ 50 ]

      at log (routes/trading.js:261:13)

  console.warn
    ⚠️ No trading signals found for filters: { symbol: undefined, signal_type: undefined }

      272 |
      273 |     if (result.rows.length === 0) {
    > 274 |       console.warn('⚠️ No trading signals found for filters:', { symbol, signal_type });
          |               ^
      275 |       return res.json({
      276 |         success: true,
      277 |         data: [],

      at warn (routes/trading.js:274:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:44 +0000] "GET /api/trading/signals?limit=50 HTTP/1.1" 200 82 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: AAPL, type: undefined, timeframe: daily

      at log (routes/trading.js:204:13)

  console.log
    📊 Executing query:  SELECT symbol, date, signal, close, rsi, volume, target_price, buylevel, selllevel, stoplevel, entry_quality_score FROM buy_sell_daily WHERE timeframe = 'Daily' AND signal IN ('Buy', 'Sell') AND date >= CURRENT_DATE - INTERVAL '90 days' AND symbol = $1 ORDER BY date DESC LIMIT $2 [ 'AAPL', 25 ]

      at log (routes/trading.js:261:13)

  console.warn
    ⚠️ No trading signals found for filters: { symbol: 'AAPL', signal_type: undefined }

      272 |
      273 |     if (result.rows.length === 0) {
    > 274 |       console.warn('⚠️ No trading signals found for filters:', { symbol, signal_type });
          |               ^
      275 |       return res.json({
      276 |         success: true,
      277 |         data: [],

      at warn (routes/trading.js:274:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:44 +0000] "GET /api/trading/signals?symbol=AAPL&limit=25 HTTP/1.1" 200 82 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: undefined, type: buy, timeframe: daily

      at log (routes/trading.js:204:13)

  console.log
    📊 Executing query:  SELECT symbol, date, signal, close, rsi, volume, target_price, buylevel, selllevel, stoplevel, entry_quality_score FROM buy_sell_daily WHERE timeframe = 'Daily' AND signal IN ('Buy', 'Sell') AND date >= CURRENT_DATE - INTERVAL '90 days' AND signal = $1 ORDER BY date DESC LIMIT $2 [ 'buy', 25 ]

      at log (routes/trading.js:261:13)

  console.warn
    ⚠️ No trading signals found for filters: { symbol: undefined, signal_type: 'buy' }

      272 |
      273 |     if (result.rows.length === 0) {
    > 274 |       console.warn('⚠️ No trading signals found for filters:', { symbol, signal_type });
          |               ^
      275 |       return res.json({
      276 |         success: true,
      277 |         data: [],

      at warn (routes/trading.js:274:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:44 +0000] "GET /api/trading/signals?signal_type=buy&limit=25 HTTP/1.1" 200 82 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:204:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:44 +0000] "GET /api/trading/signals?limit=invalid HTTP/1.1" 400 59 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:204:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:44 +0000] "GET /api/trading/signals?limit=1000 HTTP/1.1" 400 51 "-" "-"
  console.log
    [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:349:11)

  console.log
    [TRADING] Request URL: /signals/daily

      at log (routes/trading.js:350:11)

  console.log
    [TRADING] Received request for /signals/:timeframe {
      params: { timeframe: 'daily' },
      query: {},
      path: '/signals/daily',
      method: 'GET',
      time: '2025-10-19T11:48:44.907Z'
    }

      at log (routes/trading.js:351:11)

  console.log
    [TRADING] Table existence check results:

      at log (routes/trading.js:639:13)

  console.log
      Main table exists: true

      at log (routes/trading.js:640:13)

  console.log
      Company profile exists: false

      at log (routes/trading.js:641:13)

  console.log
      Price daily exists: true

      at log (routes/trading.js:642:13)

  console.log
    [TRADING] Executing SQL: 
            SELECT 
              bs.symbol,
              bs.date,
              bs.signal as signal,
              bs.close as price,
              NULL as stoplevel,
              false as inposition,
              pd.close as current_price,
              NULL as company_name,
              NULL as sector,
              NULL as market_cap,
              NULL as trailing_pe,
              NULL as dividend_yield,
              CASE 
                WHEN bs.signal = 'BUY' AND pd.close > bs.close
                THEN ((pd.close - bs.close) / bs.close * 100)
                WHEN bs.signal = 'SELL' AND pd.close < bs.close
                THEN ((bs.close - pd.close) / bs.close * 100)
                ELSE 0
              END as performance_percent
            FROM buy_sell_daily bs
            
            
            LEFT JOIN (SELECT DISTINCT ON (pd_inner.symbol) pd_inner.symbol, pd_inner.close FROM price_daily pd_inner ORDER BY pd_inner.symbol, pd_inner.date DESC) pd ON bs.symbol = pd.symbol
            WHERE bs.signal IN ('BUY', 'SELL', 'Buy', 'Sell')
            ORDER BY bs.date DESC, bs.symbol ASC
            LIMIT $1 OFFSET $2
           Params: [ 100, 0 ]

      at log (routes/trading.js:643:13)

  console.log
    [TRADING] Executing count SQL: 
            SELECT COUNT(*) as total
            FROM buy_sell_daily bs
            WHERE bs.signal IN ('BUY', 'SELL', 'Buy', 'Sell')
           Params: []

      at log (routes/trading.js:644:13)

  console.log
    [TRADING] About to execute main query...

      at log (routes/trading.js:651:13)

  console.log
    [TRADING] Main query successful, now executing count query...

      at log (routes/trading.js:653:13)

  console.log
    [TRADING] Both queries successful

      at log (routes/trading.js:660:13)

  console.error
    [TRADING] Error fetching trading signals: TypeError: Cannot read properties of undefined (reading 'total')
        at total (/home/stocks/algo/webapp/lambda/routes/trading.js:662:48)

      715 |     });
      716 |   } catch (error) {
    > 717 |     console.error("[TRADING] Error fetching trading signals:", error);
          |             ^
      718 |     console.error("[TRADING] Error details:", {
      719 |       message: error.message,
      720 |       stack: error.stack,

      at error (routes/trading.js:717:13)

  console.error
    [TRADING] Error details: {
      message: "Cannot read properties of undefined (reading 'total')",
      stack: "TypeError: Cannot read properties of undefined (reading 'total')\n" +
        '    at total (/home/stocks/algo/webapp/lambda/routes/trading.js:662:48)',
      timeframe: 'daily',
      query: {},
      position: undefined,
      detail: undefined,
      hint: undefined,
      where: undefined
    }

      716 |   } catch (error) {
      717 |     console.error("[TRADING] Error fetching trading signals:", error);
    > 718 |     console.error("[TRADING] Error details:", {
          |             ^
      719 |       message: error.message,
      720 |       stack: error.stack,
      721 |       timeframe: req.params.timeframe,

      at error (routes/trading.js:718:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:44 +0000] "GET /api/trading/signals/daily HTTP/1.1" 500 200 "-" "-"
  console.log
    [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:349:11)

  console.log
    [TRADING] Request URL: /signals/weekly

      at log (routes/trading.js:350:11)

  console.log
    [TRADING] Received request for /signals/:timeframe {
      params: { timeframe: 'weekly' },
      query: {},
      path: '/signals/weekly',
      method: 'GET',
      time: '2025-10-19T11:48:44.944Z'
    }

      at log (routes/trading.js:351:11)

  console.log
    [TRADING] Table existence check results:

      at log (routes/trading.js:639:13)

  console.log
      Main table exists: true

      at log (routes/trading.js:640:13)

  console.log
      Company profile exists: false

      at log (routes/trading.js:641:13)

  console.log
      Price daily exists: true

      at log (routes/trading.js:642:13)

  console.log
    [TRADING] Executing SQL: 
            SELECT 
              bs.symbol,
              bs.date,
              bs.signal as signal,
              bs.close as price,
              NULL as stoplevel,
              false as inposition,
              pd.close as current_price,
              NULL as company_name,
              NULL as sector,
              NULL as market_cap,
              NULL as trailing_pe,
              NULL as dividend_yield,
              CASE 
                WHEN bs.signal = 'BUY' AND pd.close > bs.close
                THEN ((pd.close - bs.close) / bs.close * 100)
                WHEN bs.signal = 'SELL' AND pd.close < bs.close
                THEN ((bs.close - pd.close) / bs.close * 100)
                ELSE 0
              END as performance_percent
            FROM buy_sell_weekly bs
            
            
            LEFT JOIN (SELECT DISTINCT ON (pd_inner.symbol) pd_inner.symbol, pd_inner.close FROM price_daily pd_inner ORDER BY pd_inner.symbol, pd_inner.date DESC) pd ON bs.symbol = pd.symbol
            WHERE bs.signal IN ('BUY', 'SELL', 'Buy', 'Sell')
            ORDER BY bs.date DESC, bs.symbol ASC
            LIMIT $1 OFFSET $2
           Params: [ 100, 0 ]

      at log (routes/trading.js:643:13)

  console.log
    [TRADING] Executing count SQL: 
            SELECT COUNT(*) as total
            FROM buy_sell_weekly bs
            WHERE bs.signal IN ('BUY', 'SELL', 'Buy', 'Sell')
           Params: []

      at log (routes/trading.js:644:13)

  console.log
    [TRADING] About to execute main query...

      at log (routes/trading.js:651:13)

  console.log
    [TRADING] Main query successful, now executing count query...

      at log (routes/trading.js:653:13)

  console.log
    [TRADING] Both queries successful

      at log (routes/trading.js:660:13)

  console.error
    [TRADING] Error fetching trading signals: TypeError: Cannot read properties of undefined (reading 'total')
        at total (/home/stocks/algo/webapp/lambda/routes/trading.js:662:48)

      715 |     });
      716 |   } catch (error) {
    > 717 |     console.error("[TRADING] Error fetching trading signals:", error);
          |             ^
      718 |     console.error("[TRADING] Error details:", {
      719 |       message: error.message,
      720 |       stack: error.stack,

      at error (routes/trading.js:717:13)

  console.error
    [TRADING] Error details: {
      message: "Cannot read properties of undefined (reading 'total')",
      stack: "TypeError: Cannot read properties of undefined (reading 'total')\n" +
        '    at total (/home/stocks/algo/webapp/lambda/routes/trading.js:662:48)',
      timeframe: 'weekly',
      query: {},
      position: undefined,
      detail: undefined,
      hint: undefined,
      where: undefined
    }

      716 |   } catch (error) {
      717 |     console.error("[TRADING] Error fetching trading signals:", error);
    > 718 |     console.error("[TRADING] Error details:", {
          |             ^
      719 |       message: error.message,
      720 |       stack: error.stack,
      721 |       timeframe: req.params.timeframe,

      at error (routes/trading.js:718:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:44 +0000] "GET /api/trading/signals/weekly HTTP/1.1" 500 201 "-" "-"
  console.log
    [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:349:11)

  console.log
    [TRADING] Request URL: /signals/monthly

      at log (routes/trading.js:350:11)

  console.log
    [TRADING] Received request for /signals/:timeframe {
      params: { timeframe: 'monthly' },
      query: {},
      path: '/signals/monthly',
      method: 'GET',
      time: '2025-10-19T11:48:44.952Z'
    }

      at log (routes/trading.js:351:11)

  console.log
    [TRADING] Table existence check results:

      at log (routes/trading.js:639:13)

  console.log
      Main table exists: true

      at log (routes/trading.js:640:13)

  console.log
      Company profile exists: false

      at log (routes/trading.js:641:13)

  console.log
      Price daily exists: true

      at log (routes/trading.js:642:13)

  console.log
    [TRADING] Executing SQL: 
            SELECT 
              bs.symbol,
              bs.date,
              bs.signal as signal,
              bs.close as price,
              NULL as stoplevel,
              false as inposition,
              pd.close as current_price,
              NULL as company_name,
              NULL as sector,
              NULL as market_cap,
              NULL as trailing_pe,
              NULL as dividend_yield,
              CASE 
                WHEN bs.signal = 'BUY' AND pd.close > bs.close
                THEN ((pd.close - bs.close) / bs.close * 100)
                WHEN bs.signal = 'SELL' AND pd.close < bs.close
                THEN ((bs.close - pd.close) / bs.close * 100)
                ELSE 0
              END as performance_percent
            FROM buy_sell_monthly bs
            
            
            LEFT JOIN (SELECT DISTINCT ON (pd_inner.symbol) pd_inner.symbol, pd_inner.close FROM price_daily pd_inner ORDER BY pd_inner.symbol, pd_inner.date DESC) pd ON bs.symbol = pd.symbol
            WHERE bs.signal IN ('BUY', 'SELL', 'Buy', 'Sell')
            ORDER BY bs.date DESC, bs.symbol ASC
            LIMIT $1 OFFSET $2
           Params: [ 100, 0 ]

      at log (routes/trading.js:643:13)

  console.log
    [TRADING] Executing count SQL: 
            SELECT COUNT(*) as total
            FROM buy_sell_monthly bs
            WHERE bs.signal IN ('BUY', 'SELL', 'Buy', 'Sell')
           Params: []

      at log (routes/trading.js:644:13)

  console.log
    [TRADING] About to execute main query...

      at log (routes/trading.js:651:13)

  console.log
    [TRADING] Main query successful, now executing count query...

      at log (routes/trading.js:653:13)

  console.log
    [TRADING] Both queries successful

      at log (routes/trading.js:660:13)

  console.error
    [TRADING] Error fetching trading signals: TypeError: Cannot read properties of undefined (reading 'total')
        at total (/home/stocks/algo/webapp/lambda/routes/trading.js:662:48)

      715 |     });
      716 |   } catch (error) {
    > 717 |     console.error("[TRADING] Error fetching trading signals:", error);
          |             ^
      718 |     console.error("[TRADING] Error details:", {
      719 |       message: error.message,
      720 |       stack: error.stack,

      at error (routes/trading.js:717:13)

  console.error
    [TRADING] Error details: {
      message: "Cannot read properties of undefined (reading 'total')",
      stack: "TypeError: Cannot read properties of undefined (reading 'total')\n" +
        '    at total (/home/stocks/algo/webapp/lambda/routes/trading.js:662:48)',
      timeframe: 'monthly',
      query: {},
      position: undefined,
      detail: undefined,
      hint: undefined,
      where: undefined
    }

      716 |   } catch (error) {
      717 |     console.error("[TRADING] Error fetching trading signals:", error);
    > 718 |     console.error("[TRADING] Error details:", {
          |             ^
      719 |       message: error.message,
      720 |       stack: error.stack,
      721 |       timeframe: req.params.timeframe,

      at error (routes/trading.js:718:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:44 +0000] "GET /api/trading/signals/monthly HTTP/1.1" 500 202 "-" "-"
  console.log
    [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:349:11)

  console.log
    [TRADING] Request URL: /signals/invalid

      at log (routes/trading.js:350:11)

  console.log
    [TRADING] Received request for /signals/:timeframe {
      params: { timeframe: 'invalid' },
      query: {},
      path: '/signals/invalid',
      method: 'GET',
      time: '2025-10-19T11:48:44.960Z'
    }

      at log (routes/trading.js:351:11)

  console.warn
    [TRADING] Invalid timeframe: invalid

      384 |     const validTimeframes = ["daily", "weekly", "monthly"];
      385 |     if (!validTimeframes.includes(normalizedTimeframe)) {
    > 386 |       console.warn("[TRADING] Invalid timeframe:", timeframe);
          |               ^
      387 |       return res.status(400).json({
      388 |         success: false,
      389 |         error: `Invalid timeframe: ${timeframe}. Must be one of: ${validTimeframes.join(", ")} or their aliases (swing, day, week, month)`,

      at warn (routes/trading.js:386:15)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at SendStream.error (node_modules/serve-static/index.js:121:7)
      at SendStream.error (node_modules/send/index.js:270:17)
      at SendStream.onStatError (node_modules/send/index.js:417:12)
      at next (node_modules/send/index.js:730:16)
      at onstat (node_modules/send/index.js:719:14)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:44 +0000] "GET /api/trading/signals/invalid HTTP/1.1" 400 137 "-" "-"
  console.log
    [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:349:11)

  console.log
    [TRADING] Request URL: /signals/daily?page=1&limit=10

      at log (routes/trading.js:350:11)

  console.log
    [TRADING] Received request for /signals/:timeframe {
      params: { timeframe: 'daily' },
      query: { page: '1', limit: '10' },
      path: '/signals/daily',
      method: 'GET',
      time: '2025-10-19T11:48:44.971Z'
    }

      at log (routes/trading.js:351:11)

  console.log
    [TRADING] Table existence check results:

      at log (routes/trading.js:639:13)

  console.log
      Main table exists: true

      at log (routes/trading.js:640:13)

  console.log
      Company profile exists: false

      at log (routes/trading.js:641:13)

  console.log
      Price daily exists: true

      at log (routes/trading.js:642:13)

  console.log
    [TRADING] Executing SQL: 
            SELECT 
              bs.symbol,
              bs.date,
              bs.signal as signal,
              bs.close as price,
              NULL as stoplevel,
              false as inposition,
              pd.close as current_price,
              NULL as company_name,
              NULL as sector,
              NULL as market_cap,
              NULL as trailing_pe,
              NULL as dividend_yield,
              CASE 
                WHEN bs.signal = 'BUY' AND pd.close > bs.close
                THEN ((pd.close - bs.close) / bs.close * 100)
                WHEN bs.signal = 'SELL' AND pd.close < bs.close
                THEN ((bs.close - pd.close) / bs.close * 100)
                ELSE 0
              END as performance_percent
            FROM buy_sell_daily bs
            
            
            LEFT JOIN (SELECT DISTINCT ON (pd_inner.symbol) pd_inner.symbol, pd_inner.close FROM price_daily pd_inner ORDER BY pd_inner.symbol, pd_inner.date DESC) pd ON bs.symbol = pd.symbol
            WHERE bs.signal IN ('BUY', 'SELL', 'Buy', 'Sell')
            ORDER BY bs.date DESC, bs.symbol ASC
            LIMIT $1 OFFSET $2
           Params: [ 10, 0 ]

      at log (routes/trading.js:643:13)

  console.log
    [TRADING] Executing count SQL: 
            SELECT COUNT(*) as total
            FROM buy_sell_daily bs
            WHERE bs.signal IN ('BUY', 'SELL', 'Buy', 'Sell')
           Params: []

      at log (routes/trading.js:644:13)

  console.log
    [TRADING] About to execute main query...

      at log (routes/trading.js:651:13)

  console.log
    [TRADING] Main query successful, now executing count query...

      at log (routes/trading.js:653:13)

  console.log
    [TRADING] Both queries successful

      at log (routes/trading.js:660:13)

  console.error
    [TRADING] Error fetching trading signals: TypeError: Cannot read properties of undefined (reading 'total')
        at total (/home/stocks/algo/webapp/lambda/routes/trading.js:662:48)

      715 |     });
      716 |   } catch (error) {
    > 717 |     console.error("[TRADING] Error fetching trading signals:", error);
          |             ^
      718 |     console.error("[TRADING] Error details:", {
      719 |       message: error.message,
      720 |       stack: error.stack,

      at error (routes/trading.js:717:13)

  console.error
    [TRADING] Error details: {
      message: "Cannot read properties of undefined (reading 'total')",
      stack: "TypeError: Cannot read properties of undefined (reading 'total')\n" +
        '    at total (/home/stocks/algo/webapp/lambda/routes/trading.js:662:48)',
      timeframe: 'daily',
      query: { page: '1', limit: '10' },
      position: undefined,
      detail: undefined,
      hint: undefined,
      where: undefined
    }

      716 |   } catch (error) {
      717 |     console.error("[TRADING] Error fetching trading signals:", error);
    > 718 |     console.error("[TRADING] Error details:", {
          |             ^
      719 |       message: error.message,
      720 |       stack: error.stack,
      721 |       timeframe: req.params.timeframe,

      at error (routes/trading.js:718:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:44 +0000] "GET /api/trading/signals/daily?page=1&limit=10 HTTP/1.1" 500 200 "-" "-"
  console.log
    [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:349:11)

  console.log
    [TRADING] Request URL: /signals/daily?latest_only=true&limit=5

      at log (routes/trading.js:350:11)

  console.log
    [TRADING] Received request for /signals/:timeframe {
      params: { timeframe: 'daily' },
      query: { latest_only: 'true', limit: '5' },
      path: '/signals/daily',
      method: 'GET',
      time: '2025-10-19T11:48:44.979Z'
    }

      at log (routes/trading.js:351:11)

  console.log
    [TRADING] Table existence check results:

      at log (routes/trading.js:639:13)

  console.log
      Main table exists: true

      at log (routes/trading.js:640:13)

  console.log
      Company profile exists: false

      at log (routes/trading.js:641:13)

  console.log
      Price daily exists: true

      at log (routes/trading.js:642:13)

  console.log
    [TRADING] Executing SQL: 
            WITH ranked_signals AS (
              SELECT 
                bs.symbol,
                bs.date,
                bs.signal as signal,
                bs.close as price,
                NULL as stoplevel,
                false as inposition,
                pd.close as current_price,
                NULL as company_name,
                NULL as sector,
                NULL as market_cap,
                NULL as trailing_pe,
                NULL as dividend_yield,
                CASE 
                  WHEN bs.signal = 'BUY' AND pd.close > bs.close
                  THEN ((pd.close - bs.close) / bs.close * 100)
                  WHEN bs.signal = 'SELL' AND pd.close < bs.close
                  THEN ((bs.close - pd.close) / bs.close * 100)
                  ELSE 0
                END as performance_percent,
                ROW_NUMBER() OVER (PARTITION BY bs.symbol ORDER BY bs.date DESC) as rn
              FROM buy_sell_daily bs
              
              
              LEFT JOIN (SELECT DISTINCT ON (pd_inner.symbol) pd_inner.symbol, pd_inner.close FROM price_daily pd_inner ORDER BY pd_inner.symbol, pd_inner.date DESC) pd ON bs.symbol = pd.symbol
              WHERE bs.signal IN ('BUY', 'SELL', 'Buy', 'Sell')
            )
            SELECT * FROM ranked_signals 
            WHERE rn = 1
            ORDER BY ranked_signals.date DESC, ranked_signals.symbol ASC
            LIMIT $1 OFFSET $2
           Params: [ 5, 0 ]

      at log (routes/trading.js:643:13)

  console.log
    [TRADING] Executing count SQL: 
            WITH ranked_signals AS (
              SELECT bs.symbol,
                ROW_NUMBER() OVER (PARTITION BY bs.symbol ORDER BY bs.date DESC) as rn
              FROM buy_sell_daily bs
              WHERE bs.signal IN ('BUY', 'SELL', 'Buy', 'Sell')
            )
            SELECT COUNT(*) as total
            FROM ranked_signals 
            WHERE rn = 1
           Params: []

      at log (routes/trading.js:644:13)

  console.log
    [TRADING] About to execute main query...

      at log (routes/trading.js:651:13)

  console.log
    [TRADING] Main query successful, now executing count query...

      at log (routes/trading.js:653:13)

  console.log
    [TRADING] Both queries successful

      at log (routes/trading.js:660:13)

  console.error
    [TRADING] Error fetching trading signals: TypeError: Cannot read properties of undefined (reading 'total')
        at total (/home/stocks/algo/webapp/lambda/routes/trading.js:662:48)

      715 |     });
      716 |   } catch (error) {
    > 717 |     console.error("[TRADING] Error fetching trading signals:", error);
          |             ^
      718 |     console.error("[TRADING] Error details:", {
      719 |       message: error.message,
      720 |       stack: error.stack,

      at error (routes/trading.js:717:13)

  console.error
    [TRADING] Error details: {
      message: "Cannot read properties of undefined (reading 'total')",
      stack: "TypeError: Cannot read properties of undefined (reading 'total')\n" +
        '    at total (/home/stocks/algo/webapp/lambda/routes/trading.js:662:48)',
      timeframe: 'daily',
      query: { latest_only: 'true', limit: '5' },
      position: undefined,
      detail: undefined,
      hint: undefined,
      where: undefined
    }

      716 |   } catch (error) {
      717 |     console.error("[TRADING] Error fetching trading signals:", error);
    > 718 |     console.error("[TRADING] Error details:", {
          |             ^
      719 |       message: error.message,
      720 |       stack: error.stack,
      721 |       timeframe: req.params.timeframe,

      at error (routes/trading.js:718:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:44 +0000] "GET /api/trading/signals/daily?latest_only=true&limit=5 HTTP/1.1" 500 200 "-" "-"
  console.log
    [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:349:11)

  console.log
    [TRADING] Request URL: /signals/daily?symbol=AAPL&signal_type=buy&limit=5

      at log (routes/trading.js:350:11)

  console.log
    [TRADING] Received request for /signals/:timeframe {
      params: { timeframe: 'daily' },
      query: { symbol: 'AAPL', signal_type: 'buy', limit: '5' },
      path: '/signals/daily',
      method: 'GET',
      time: '2025-10-19T11:48:44.986Z'
    }

      at log (routes/trading.js:351:11)

  console.log
    [TRADING] Table existence check results:

      at log (routes/trading.js:639:13)

  console.log
      Main table exists: true

      at log (routes/trading.js:640:13)

  console.log
      Company profile exists: false

      at log (routes/trading.js:641:13)

  console.log
      Price daily exists: true

      at log (routes/trading.js:642:13)

  console.log
    [TRADING] Executing SQL: 
            SELECT 
              bs.symbol,
              bs.date,
              bs.signal as signal,
              bs.close as price,
              NULL as stoplevel,
              false as inposition,
              pd.close as current_price,
              NULL as company_name,
              NULL as sector,
              NULL as market_cap,
              NULL as trailing_pe,
              NULL as dividend_yield,
              CASE 
                WHEN bs.signal = 'BUY' AND pd.close > bs.close
                THEN ((pd.close - bs.close) / bs.close * 100)
                WHEN bs.signal = 'SELL' AND pd.close < bs.close
                THEN ((bs.close - pd.close) / bs.close * 100)
                ELSE 0
              END as performance_percent
            FROM buy_sell_daily bs
            
            
            LEFT JOIN (SELECT DISTINCT ON (pd_inner.symbol) pd_inner.symbol, pd_inner.close FROM price_daily pd_inner ORDER BY pd_inner.symbol, pd_inner.date DESC) pd ON bs.symbol = pd.symbol
            WHERE bs.symbol = $1 AND bs.signal IN ('BUY', 'SELL', 'Buy', 'Sell') AND bs.signal IN ('BUY', 'Buy')
            ORDER BY bs.date DESC, bs.symbol ASC
            LIMIT $2 OFFSET $3
           Params: [ 'AAPL', 5, 0 ]

      at log (routes/trading.js:643:13)

  console.log
    [TRADING] Executing count SQL: 
            SELECT COUNT(*) as total
            FROM buy_sell_daily bs
            WHERE bs.symbol = $1 AND bs.signal IN ('BUY', 'SELL', 'Buy', 'Sell') AND bs.signal IN ('BUY', 'Buy')
           Params: [ 'AAPL' ]

      at log (routes/trading.js:644:13)

  console.log
    [TRADING] About to execute main query...

      at log (routes/trading.js:651:13)

  console.log
    [TRADING] Main query successful, now executing count query...

      at log (routes/trading.js:653:13)

  console.log
    [TRADING] Both queries successful

      at log (routes/trading.js:660:13)

  console.error
    [TRADING] Error fetching trading signals: TypeError: Cannot read properties of undefined (reading 'total')
        at total (/home/stocks/algo/webapp/lambda/routes/trading.js:662:48)

      715 |     });
      716 |   } catch (error) {
    > 717 |     console.error("[TRADING] Error fetching trading signals:", error);
          |             ^
      718 |     console.error("[TRADING] Error details:", {
      719 |       message: error.message,
      720 |       stack: error.stack,

      at error (routes/trading.js:717:13)

  console.error
    [TRADING] Error details: {
      message: "Cannot read properties of undefined (reading 'total')",
      stack: "TypeError: Cannot read properties of undefined (reading 'total')\n" +
        '    at total (/home/stocks/algo/webapp/lambda/routes/trading.js:662:48)',
      timeframe: 'daily',
      query: { symbol: 'AAPL', signal_type: 'buy', limit: '5' },
      position: undefined,
      detail: undefined,
      hint: undefined,
      where: undefined
    }

      716 |   } catch (error) {
      717 |     console.error("[TRADING] Error fetching trading signals:", error);
    > 718 |     console.error("[TRADING] Error details:", {
          |             ^
      719 |       message: error.message,
      720 |       stack: error.stack,
      721 |       timeframe: req.params.timeframe,

      at error (routes/trading.js:718:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:44 +0000] "GET /api/trading/signals/daily?symbol=AAPL&signal_type=buy&limit=5 HTTP/1.1" 500 200 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:44 +0000] "GET /api/trading/summary/daily HTTP/1.1" 404 56 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:44 +0000] "GET /api/trading/summary/weekly HTTP/1.1" 404 56 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:44 +0000] "GET /api/trading/summary/invalid HTTP/1.1" 400 45 "-" "-"
  console.error
    Error fetching swing signals: TypeError: Cannot read properties of undefined (reading 'total')
        at total (/home/stocks/algo/webapp/lambda/routes/trading.js:932:48)

      957 |     });
      958 |   } catch (error) {
    > 959 |     console.error("Error fetching swing signals:", error);
          |             ^
      960 |     console.error("Swing signals error details:", {
      961 |       message: error.message,
      962 |       stack: error.stack,

      at error (routes/trading.js:959:13)

  console.error
    Swing signals error details: {
      message: "Cannot read properties of undefined (reading 'total')",
      stack: "TypeError: Cannot read properties of undefined (reading 'total')\n" +
        '    at total (/home/stocks/algo/webapp/lambda/routes/trading.js:932:48)',
      query: {}
    }

      958 |   } catch (error) {
      959 |     console.error("Error fetching swing signals:", error);
    > 960 |     console.error("Swing signals error details:", {
          |             ^
      961 |       message: error.message,
      962 |       stack: error.stack,
      963 |       query: req.query,

      at error (routes/trading.js:960:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/swing-signals HTTP/1.1" 500 178 "-" "-"
  console.error
    Error fetching swing signals: TypeError: Cannot read properties of undefined (reading 'total')
        at total (/home/stocks/algo/webapp/lambda/routes/trading.js:932:48)

      957 |     });
      958 |   } catch (error) {
    > 959 |     console.error("Error fetching swing signals:", error);
          |             ^
      960 |     console.error("Swing signals error details:", {
      961 |       message: error.message,
      962 |       stack: error.stack,

      at error (routes/trading.js:959:13)

  console.error
    Swing signals error details: {
      message: "Cannot read properties of undefined (reading 'total')",
      stack: "TypeError: Cannot read properties of undefined (reading 'total')\n" +
        '    at total (/home/stocks/algo/webapp/lambda/routes/trading.js:932:48)',
      query: { page: '1', limit: '10' }
    }

      958 |   } catch (error) {
      959 |     console.error("Error fetching swing signals:", error);
    > 960 |     console.error("Swing signals error details:", {
          |             ^
      961 |       message: error.message,
      962 |       stack: error.stack,
      963 |       query: req.query,

      at error (routes/trading.js:960:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/swing-signals?page=1&limit=10 HTTP/1.1" 500 178 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/AAPL/technicals HTTP/1.1" 200 64 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/MSFT/technicals?timeframe=weekly HTTP/1.1" 200 65 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/TSLA/technicals?timeframe=monthly HTTP/1.1" 200 66 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/performance HTTP/1.1" 200 89 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/performance?days=60 HTTP/1.1" 200 89 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/performance?days=invalid HTTP/1.1" 200 89 "-" "-"
  console.log
    🔄 Trading positions requested for user: anonymous

      at log (routes/trading.js:1118:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/positions HTTP/1.1" 200 75 "-" "-"
  console.log
    🔄 Trading positions requested for user: anonymous

      at log (routes/trading.js:1118:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/positions?summary=true HTTP/1.1" 200 156 "-" "-"
  console.log
    📋 Trading orders requested for user: test-user-123

      at log (routes/trading.js:1252:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/orders HTTP/1.1" 200 463 "-" "-"
  console.log
    📋 Trading orders requested for user: test-user-123

      at log (routes/trading.js:1252:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/orders HTTP/1.1" 200 463 "-" "-"
  console.log
    📋 Trading orders requested for user: test-user-123

      at log (routes/trading.js:1252:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/orders HTTP/1.1" 200 463 "-" "-"
  console.log
    📝 Order placement requested for user: test-user-123, buy 1 AAPL

      at log (routes/trading.js:1364:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "POST /api/trading/orders HTTP/1.1" 201 615 "-" "-"
  console.log
    📝 Order placement requested for user: test-user-123, buy 10 AAPL

      at log (routes/trading.js:1364:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "POST /api/trading/orders HTTP/1.1" 201 616 "-" "-"
  console.log
    📝 Order placement requested for user: test-user-123, sell 5 TSLA

      at log (routes/trading.js:1364:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "POST /api/trading/orders HTTP/1.1" 201 614 "-" "-"
  console.log
    📝 Order placement requested for user: test-user-123, undefined 1 AAPL

      at log (routes/trading.js:1364:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "POST /api/trading/orders HTTP/1.1" 400 134 "-" "-"
  console.log
    📝 Order placement requested for user: test-user-123, buy 1 AAPL

      at log (routes/trading.js:1364:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "POST /api/trading/orders HTTP/1.1" 400 91 "-" "-"
  console.log
    📝 Order placement requested for user: test-user-123, invalid_side 1 AAPL

      at log (routes/trading.js:1364:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "POST /api/trading/orders HTTP/1.1" 400 62 "-" "-"
  console.log
    📝 Order placement requested for user: test-user-123, buy 0 AAPL

      at log (routes/trading.js:1364:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "POST /api/trading/orders HTTP/1.1" 400 134 "-" "-"
  console.log
    📝 Order placement requested for user: test-user-123, buy 1 AAPL

      at log (routes/trading.js:1364:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "POST /api/trading/orders HTTP/1.1" 400 65 "-" "-"
  console.log
    📝 Order placement requested for user: test-user-123, sell 2 NVDA

      at log (routes/trading.js:1364:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "POST /api/trading/orders HTTP/1.1" 201 618 "-" "-"
  console.log
    🎮 Trading simulator requested - Portfolio: $100000, Strategy: momentum, Symbols: SPY,QQQ,AAPL,TSLA,NVDA

      at log (routes/trading.js:1507:13)

  console.log
    🔍 All available columns in buy_sell_daily: []

      at log (routes/trading.js:1555:15)

  console.log
    🎮 Found columns in buy_sell_daily: []

      at log (routes/trading.js:1567:15)

  console.log
    🎮 Trading table columns config: {
      symbol: false,
      date: false,
      signal: false,
      signal_type: false,
      price: false,
      buylevel: false,
      stoplevel: false,
      inposition: false
    }

      at log (routes/trading.js:1573:15)

  console.log
    🎮 Using price column: 0 for trading simulation

      at log (routes/trading.js:1602:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/simulator HTTP/1.1" 500 245 "-" "-"
  console.log
    🎮 Trading simulator requested - Portfolio: $50000, Strategy: mean_reversion, Symbols: AAPL,MSFT,GOOGL

      at log (routes/trading.js:1507:13)

  console.log
    🔍 All available columns in buy_sell_daily: []

      at log (routes/trading.js:1555:15)

  console.log
    🎮 Found columns in buy_sell_daily: []

      at log (routes/trading.js:1567:15)

  console.log
    🎮 Trading table columns config: {
      symbol: false,
      date: false,
      signal: false,
      signal_type: false,
      price: false,
      buylevel: false,
      stoplevel: false,
      inposition: false
    }

      at log (routes/trading.js:1573:15)

  console.log
    🎮 Using price column: 0 for trading simulation

      at log (routes/trading.js:1602:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/simulator?portfolio=50000&strategy=mean_reversion&symbols=AAPL,MSFT,GOOGL HTTP/1.1" 500 245 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/simulator?portfolio=invalid HTTP/1.1" 400 69 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/simulator?portfolio=-1000 HTTP/1.1" 400 69 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/simulator?strategy=invalid_strategy HTTP/1.1" 400 103 "-" "-"
  console.log
    📈 Trading strategies requested - category: all, risk: all, active: false

      at log (routes/trading.js:1735:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/strategies HTTP/1.1" 200 544 "-" "-"
  console.log
    📈 Trading strategies requested - category: momentum, risk: all, active: false

      at log (routes/trading.js:1735:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/strategies?category=momentum HTTP/1.1" 200 549 "-" "-"
  console.log
    📈 Trading strategies requested - category: all, risk: low, active: false

      at log (routes/trading.js:1735:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/strategies?risk_level=low HTTP/1.1" 200 544 "-" "-"
  console.log
    📈 Trading strategies requested - category: all, risk: all, active: true

      at log (routes/trading.js:1735:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/strategies?active_only=true HTTP/1.1" 200 543 "-" "-"
  console.log
    📈 Trading strategies requested - category: all, risk: all, active: false

      at log (routes/trading.js:1735:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/strategies?limit=3 HTTP/1.1" 200 543 "-" "-"
  console.log
    📈 Trading strategies requested - category: trend_following, risk: medium, active: true

      at log (routes/trading.js:1735:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/strategies?category=trend_following&risk_level=medium&active_only=true&limit=5 HTTP/1.1" 200 557 "-" "-"
  console.log
    📊 Strategy details requested - ID: momentum_breakout_v1, signals: false, backtest: false

      at log (routes/trading.js:1979:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/strategies/momentum_breakout_v1 HTTP/1.1" 200 2227 "-" "-"
  console.log
    📊 Strategy details requested - ID: momentum_breakout_v1, signals: true, backtest: false

      at log (routes/trading.js:1979:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/strategies/momentum_breakout_v1?include_signals=true HTTP/1.1" 200 2621 "-" "-"
  console.log
    📊 Strategy details requested - ID: momentum_breakout_v1, signals: false, backtest: true

      at log (routes/trading.js:1979:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/strategies/momentum_breakout_v1?include_backtest=true HTTP/1.1" 200 2564 "-" "-"
  console.log
    📊 Strategy details requested - ID: momentum_breakout_v1, signals: true, backtest: true

      at log (routes/trading.js:1979:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/strategies/momentum_breakout_v1?include_signals=true&include_backtest=true HTTP/1.1" 200 2958 "-" "-"
  console.log
    📊 Strategy details requested - ID: momentum_breakout_v1, signals: false, backtest: false

      at log (routes/trading.js:1979:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/strategies/momentum_breakout_v1 HTTP/1.1" 200 2227 "-" "-"
  console.log
    📊 Strategy details requested - ID: momentum_breakout_v1, signals: true, backtest: false

      at log (routes/trading.js:1979:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/strategies/momentum_breakout_v1?include_signals=true HTTP/1.1" 200 2621 "-" "-"
  console.log
    📊 Strategy details requested - ID: momentum_breakout_v1, signals: false, backtest: true

      at log (routes/trading.js:1979:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/strategies/momentum_breakout_v1?include_backtest=true HTTP/1.1" 200 2564 "-" "-"
  console.log
    📊 Strategy details requested - ID: momentum_breakout_v1, signals: true, backtest: true

      at log (routes/trading.js:1979:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/strategies/momentum_breakout_v1?include_signals=true&include_backtest=true HTTP/1.1" 200 2958 "-" "-"
  console.log
    📊 Strategy details requested - ID: nonexistent_strategy, signals: false, backtest: false

      at log (routes/trading.js:1979:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/strategies/nonexistent_strategy HTTP/1.1" 200 2227 "-" "-"
  console.log
    [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:349:11)

  console.log
    [TRADING] Request URL: /signals/daily?symbol=AAPL&signal_type=buy&page=2&limit=15&latest_only=false

      at log (routes/trading.js:350:11)

  console.log
    [TRADING] Received request for /signals/:timeframe {
      params: { timeframe: 'daily' },
      query: {
        symbol: 'AAPL',
        signal_type: 'buy',
        page: '2',
        limit: '15',
        latest_only: 'false'
      },
      path: '/signals/daily',
      method: 'GET',
      time: '2025-10-19T11:48:45.129Z'
    }

      at log (routes/trading.js:351:11)

  console.log
    [TRADING] Table existence check results:

      at log (routes/trading.js:639:13)

  console.log
      Main table exists: true

      at log (routes/trading.js:640:13)

  console.log
      Company profile exists: false

      at log (routes/trading.js:641:13)

  console.log
      Price daily exists: true

      at log (routes/trading.js:642:13)

  console.log
    [TRADING] Executing SQL: 
            SELECT 
              bs.symbol,
              bs.date,
              bs.signal as signal,
              bs.close as price,
              NULL as stoplevel,
              false as inposition,
              pd.close as current_price,
              NULL as company_name,
              NULL as sector,
              NULL as market_cap,
              NULL as trailing_pe,
              NULL as dividend_yield,
              CASE 
                WHEN bs.signal = 'BUY' AND pd.close > bs.close
                THEN ((pd.close - bs.close) / bs.close * 100)
                WHEN bs.signal = 'SELL' AND pd.close < bs.close
                THEN ((bs.close - pd.close) / bs.close * 100)
                ELSE 0
              END as performance_percent
            FROM buy_sell_daily bs
            
            
            LEFT JOIN (SELECT DISTINCT ON (pd_inner.symbol) pd_inner.symbol, pd_inner.close FROM price_daily pd_inner ORDER BY pd_inner.symbol, pd_inner.date DESC) pd ON bs.symbol = pd.symbol
            WHERE bs.symbol = $1 AND bs.signal IN ('BUY', 'SELL', 'Buy', 'Sell') AND bs.signal IN ('BUY', 'Buy')
            ORDER BY bs.date DESC, bs.symbol ASC
            LIMIT $2 OFFSET $3
           Params: [ 'AAPL', 15, 15 ]

      at log (routes/trading.js:643:13)

  console.log
    [TRADING] Executing count SQL: 
            SELECT COUNT(*) as total
            FROM buy_sell_daily bs
            WHERE bs.symbol = $1 AND bs.signal IN ('BUY', 'SELL', 'Buy', 'Sell') AND bs.signal IN ('BUY', 'Buy')
           Params: [ 'AAPL' ]

      at log (routes/trading.js:644:13)

  console.log
    [TRADING] About to execute main query...

      at log (routes/trading.js:651:13)

  console.log
    [TRADING] Main query successful, now executing count query...

      at log (routes/trading.js:653:13)

  console.log
    [TRADING] Both queries successful

      at log (routes/trading.js:660:13)

  console.error
    [TRADING] Error fetching trading signals: TypeError: Cannot read properties of undefined (reading 'total')
        at total (/home/stocks/algo/webapp/lambda/routes/trading.js:662:48)

      715 |     });
      716 |   } catch (error) {
    > 717 |     console.error("[TRADING] Error fetching trading signals:", error);
          |             ^
      718 |     console.error("[TRADING] Error details:", {
      719 |       message: error.message,
      720 |       stack: error.stack,

      at error (routes/trading.js:717:13)

  console.error
    [TRADING] Error details: {
      message: "Cannot read properties of undefined (reading 'total')",
      stack: "TypeError: Cannot read properties of undefined (reading 'total')\n" +
        '    at total (/home/stocks/algo/webapp/lambda/routes/trading.js:662:48)',
      timeframe: 'daily',
      query: {
        symbol: 'AAPL',
        signal_type: 'buy',
        page: '2',
        limit: '15',
        latest_only: 'false'
      },
      position: undefined,
      detail: undefined,
      hint: undefined,
      where: undefined
    }

      716 |   } catch (error) {
      717 |     console.error("[TRADING] Error fetching trading signals:", error);
    > 718 |     console.error("[TRADING] Error details:", {
          |             ^
      719 |       message: error.message,
      720 |       stack: error.stack,
      721 |       timeframe: req.params.timeframe,

      at error (routes/trading.js:718:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/signals/daily?symbol=AAPL&signal_type=buy&page=2&limit=15&latest_only=false HTTP/1.1" 500 200 "-" "-"
  console.log
    [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:349:11)

  console.log
    [TRADING] Request URL: /signals/daily?page=-1&limit=10

      at log (routes/trading.js:350:11)

  console.log
    [TRADING] Received request for /signals/:timeframe {
      params: { timeframe: 'daily' },
      query: { page: '-1', limit: '10' },
      path: '/signals/daily',
      method: 'GET',
      time: '2025-10-19T11:48:45.138Z'
    }

      at log (routes/trading.js:351:11)

  console.log
    [TRADING] Table existence check results:

      at log (routes/trading.js:639:13)

  console.log
      Main table exists: true

      at log (routes/trading.js:640:13)

  console.log
      Company profile exists: false

      at log (routes/trading.js:641:13)

  console.log
      Price daily exists: true

      at log (routes/trading.js:642:13)

  console.log
    [TRADING] Executing SQL: 
            SELECT 
              bs.symbol,
              bs.date,
              bs.signal as signal,
              bs.close as price,
              NULL as stoplevel,
              false as inposition,
              pd.close as current_price,
              NULL as company_name,
              NULL as sector,
              NULL as market_cap,
              NULL as trailing_pe,
              NULL as dividend_yield,
              CASE 
                WHEN bs.signal = 'BUY' AND pd.close > bs.close
                THEN ((pd.close - bs.close) / bs.close * 100)
                WHEN bs.signal = 'SELL' AND pd.close < bs.close
                THEN ((bs.close - pd.close) / bs.close * 100)
                ELSE 0
              END as performance_percent
            FROM buy_sell_daily bs
            
            
            LEFT JOIN (SELECT DISTINCT ON (pd_inner.symbol) pd_inner.symbol, pd_inner.close FROM price_daily pd_inner ORDER BY pd_inner.symbol, pd_inner.date DESC) pd ON bs.symbol = pd.symbol
            WHERE bs.signal IN ('BUY', 'SELL', 'Buy', 'Sell')
            ORDER BY bs.date DESC, bs.symbol ASC
            LIMIT $1 OFFSET $2
           Params: [ 10, 0 ]

      at log (routes/trading.js:643:13)

  console.log
    [TRADING] Executing count SQL: 
            SELECT COUNT(*) as total
            FROM buy_sell_daily bs
            WHERE bs.signal IN ('BUY', 'SELL', 'Buy', 'Sell')
           Params: []

      at log (routes/trading.js:644:13)

  console.log
    [TRADING] About to execute main query...

      at log (routes/trading.js:651:13)

  console.log
    [TRADING] Main query successful, now executing count query...

      at log (routes/trading.js:653:13)

  console.log
    [TRADING] Both queries successful

      at log (routes/trading.js:660:13)

  console.error
    [TRADING] Error fetching trading signals: TypeError: Cannot read properties of undefined (reading 'total')
        at total (/home/stocks/algo/webapp/lambda/routes/trading.js:662:48)

      715 |     });
      716 |   } catch (error) {
    > 717 |     console.error("[TRADING] Error fetching trading signals:", error);
          |             ^
      718 |     console.error("[TRADING] Error details:", {
      719 |       message: error.message,
      720 |       stack: error.stack,

      at error (routes/trading.js:717:13)

  console.error
    [TRADING] Error details: {
      message: "Cannot read properties of undefined (reading 'total')",
      stack: "TypeError: Cannot read properties of undefined (reading 'total')\n" +
        '    at total (/home/stocks/algo/webapp/lambda/routes/trading.js:662:48)',
      timeframe: 'daily',
      query: { page: '-1', limit: '10' },
      position: undefined,
      detail: undefined,
      hint: undefined,
      where: undefined
    }

      716 |   } catch (error) {
      717 |     console.error("[TRADING] Error fetching trading signals:", error);
    > 718 |     console.error("[TRADING] Error details:", {
          |             ^
      719 |       message: error.message,
      720 |       stack: error.stack,
      721 |       timeframe: req.params.timeframe,

      at error (routes/trading.js:718:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/signals/daily?page=-1&limit=10 HTTP/1.1" 500 200 "-" "-"
  console.log
    [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:349:11)

  console.log
    [TRADING] Request URL: /signals/daily?page=999999

      at log (routes/trading.js:350:11)

  console.log
    [TRADING] Received request for /signals/:timeframe {
      params: { timeframe: 'daily' },
      query: { page: '999999' },
      path: '/signals/daily',
      method: 'GET',
      time: '2025-10-19T11:48:45.144Z'
    }

      at log (routes/trading.js:351:11)

  console.log
    [TRADING] Table existence check results:

      at log (routes/trading.js:639:13)

  console.log
      Main table exists: true

      at log (routes/trading.js:640:13)

  console.log
      Company profile exists: false

      at log (routes/trading.js:641:13)

  console.log
      Price daily exists: true

      at log (routes/trading.js:642:13)

  console.log
    [TRADING] Executing SQL: 
            SELECT 
              bs.symbol,
              bs.date,
              bs.signal as signal,
              bs.close as price,
              NULL as stoplevel,
              false as inposition,
              pd.close as current_price,
              NULL as company_name,
              NULL as sector,
              NULL as market_cap,
              NULL as trailing_pe,
              NULL as dividend_yield,
              CASE 
                WHEN bs.signal = 'BUY' AND pd.close > bs.close
                THEN ((pd.close - bs.close) / bs.close * 100)
                WHEN bs.signal = 'SELL' AND pd.close < bs.close
                THEN ((bs.close - pd.close) / bs.close * 100)
                ELSE 0
              END as performance_percent
            FROM buy_sell_daily bs
            
            
            LEFT JOIN (SELECT DISTINCT ON (pd_inner.symbol) pd_inner.symbol, pd_inner.close FROM price_daily pd_inner ORDER BY pd_inner.symbol, pd_inner.date DESC) pd ON bs.symbol = pd.symbol
            WHERE bs.signal IN ('BUY', 'SELL', 'Buy', 'Sell')
            ORDER BY bs.date DESC, bs.symbol ASC
            LIMIT $1 OFFSET $2
           Params: [ 100, 99999800 ]

      at log (routes/trading.js:643:13)

  console.log
    [TRADING] Executing count SQL: 
            SELECT COUNT(*) as total
            FROM buy_sell_daily bs
            WHERE bs.signal IN ('BUY', 'SELL', 'Buy', 'Sell')
           Params: []

      at log (routes/trading.js:644:13)

  console.log
    [TRADING] About to execute main query...

      at log (routes/trading.js:651:13)

  console.log
    [TRADING] Main query successful, now executing count query...

      at log (routes/trading.js:653:13)

  console.log
    [TRADING] Both queries successful

      at log (routes/trading.js:660:13)

  console.error
    [TRADING] Error fetching trading signals: TypeError: Cannot read properties of undefined (reading 'total')
        at total (/home/stocks/algo/webapp/lambda/routes/trading.js:662:48)

      715 |     });
      716 |   } catch (error) {
    > 717 |     console.error("[TRADING] Error fetching trading signals:", error);
          |             ^
      718 |     console.error("[TRADING] Error details:", {
      719 |       message: error.message,
      720 |       stack: error.stack,

      at error (routes/trading.js:717:13)

  console.error
    [TRADING] Error details: {
      message: "Cannot read properties of undefined (reading 'total')",
      stack: "TypeError: Cannot read properties of undefined (reading 'total')\n" +
        '    at total (/home/stocks/algo/webapp/lambda/routes/trading.js:662:48)',
      timeframe: 'daily',
      query: { page: '999999' },
      position: undefined,
      detail: undefined,
      hint: undefined,
      where: undefined
    }

      716 |   } catch (error) {
      717 |     console.error("[TRADING] Error fetching trading signals:", error);
    > 718 |     console.error("[TRADING] Error details:", {
          |             ^
      719 |       message: error.message,
      720 |       stack: error.stack,
      721 |       timeframe: req.params.timeframe,

      at error (routes/trading.js:718:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/signals/daily?page=999999 HTTP/1.1" 500 200 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/performance?days=0 HTTP/1.1" 200 89 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/performance?days=99999 HTTP/1.1" 200 92 "-" "-"
  console.log
    🎮 Trading simulator requested - Portfolio: $1, Strategy: momentum, Symbols: SPY,QQQ,AAPL,TSLA,NVDA

      at log (routes/trading.js:1507:13)

  console.log
    🔍 All available columns in buy_sell_daily: []

      at log (routes/trading.js:1555:15)

  console.log
    🎮 Found columns in buy_sell_daily: []

      at log (routes/trading.js:1567:15)

  console.log
    🎮 Trading table columns config: {
      symbol: false,
      date: false,
      signal: false,
      signal_type: false,
      price: false,
      buylevel: false,
      stoplevel: false,
      inposition: false
    }

      at log (routes/trading.js:1573:15)

  console.log
    🎮 Using price column: 0 for trading simulation

      at log (routes/trading.js:1602:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/simulator?portfolio=1 HTTP/1.1" 500 245 "-" "-"
  console.log
    🎮 Trading simulator requested - Portfolio: $1000000000, Strategy: momentum, Symbols: SPY,QQQ,AAPL,TSLA,NVDA

      at log (routes/trading.js:1507:13)

  console.log
    🔍 All available columns in buy_sell_daily: []

      at log (routes/trading.js:1555:15)

  console.log
    🎮 Found columns in buy_sell_daily: []

      at log (routes/trading.js:1567:15)

  console.log
    🎮 Trading table columns config: {
      symbol: false,
      date: false,
      signal: false,
      signal_type: false,
      price: false,
      buylevel: false,
      stoplevel: false,
      inposition: false
    }

      at log (routes/trading.js:1573:15)

  console.log
    🎮 Using price column: 0 for trading simulation

      at log (routes/trading.js:1602:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/simulator?portfolio=1000000000 HTTP/1.1" 500 245 "-" "-"
  console.log
    🎮 Trading simulator requested - Portfolio: $100000, Strategy: momentum, Symbols: SYM0,SYM1,SYM2,SYM3,SYM4,SYM5,SYM6,SYM7,SYM8,SYM9

      at log (routes/trading.js:1507:13)

  console.log
    🔍 All available columns in buy_sell_daily: []

      at log (routes/trading.js:1555:15)

  console.log
    🎮 Found columns in buy_sell_daily: []

      at log (routes/trading.js:1567:15)

  console.log
    🎮 Trading table columns config: {
      symbol: false,
      date: false,
      signal: false,
      signal_type: false,
      price: false,
      buylevel: false,
      stoplevel: false,
      inposition: false
    }

      at log (routes/trading.js:1573:15)

  console.log
    🎮 Using price column: 0 for trading simulation

      at log (routes/trading.js:1602:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/simulator?symbols=SYM0,SYM1,SYM2,SYM3,SYM4,SYM5,SYM6,SYM7,SYM8,SYM9,SYM10,SYM11,SYM12,SYM13,SYM14,SYM15,SYM16,SYM17,SYM18,SYM19 HTTP/1.1" 500 245 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: '; DROP TABLE buy_sell_daily; --, type: undefined, timeframe: daily

      at log (routes/trading.js:204:13)

  console.log
    📊 Executing query:  SELECT symbol, date, signal, close, rsi, volume, target_price, buylevel, selllevel, stoplevel, entry_quality_score FROM buy_sell_daily WHERE timeframe = 'Daily' AND signal IN ('Buy', 'Sell') AND date >= CURRENT_DATE - INTERVAL '90 days' AND symbol = $1 ORDER BY date DESC LIMIT $2 [ "'; DROP TABLE BUY_SELL_DAILY; --", 100 ]

      at log (routes/trading.js:261:13)

  console.warn
    ⚠️ No trading signals found for filters: { symbol: "'; DROP TABLE buy_sell_daily; --", signal_type: undefined }

      272 |
      273 |     if (result.rows.length === 0) {
    > 274 |       console.warn('⚠️ No trading signals found for filters:', { symbol, signal_type });
          |               ^
      275 |       return res.json({
      276 |         success: true,
      277 |         data: [],

      at warn (routes/trading.js:274:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/signals?symbol=%27%3B%20DROP%20TABLE%20buy_sell_daily%3B%20-- HTTP/1.1" 200 82 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: SYMBOL中文, type: undefined, timeframe: daily

      at log (routes/trading.js:204:13)

  console.log
    📊 Executing query:  SELECT symbol, date, signal, close, rsi, volume, target_price, buylevel, selllevel, stoplevel, entry_quality_score FROM buy_sell_daily WHERE timeframe = 'Daily' AND signal IN ('Buy', 'Sell') AND date >= CURRENT_DATE - INTERVAL '90 days' AND symbol = $1 ORDER BY date DESC LIMIT $2 [ 'SYMBOL中文', 100 ]

      at log (routes/trading.js:261:13)

  console.warn
    ⚠️ No trading signals found for filters: { symbol: 'SYMBOL中文', signal_type: undefined }

      272 |
      273 |     if (result.rows.length === 0) {
    > 274 |       console.warn('⚠️ No trading signals found for filters:', { symbol, signal_type });
          |               ^
      275 |       return res.json({
      276 |         success: true,
      277 |         data: [],

      at warn (routes/trading.js:274:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/signals?symbol=SYMBOL%E4%B8%AD%E6%96%87 HTTP/1.1" 200 82 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: , type: , timeframe: daily

      at log (routes/trading.js:204:13)

  console.log
    📊 Executing query:  SELECT symbol, date, signal, close, rsi, volume, target_price, buylevel, selllevel, stoplevel, entry_quality_score FROM buy_sell_daily WHERE timeframe = 'Daily' AND signal IN ('Buy', 'Sell') AND date >= CURRENT_DATE - INTERVAL '90 days' ORDER BY date DESC LIMIT $1 [ 100 ]

      at log (routes/trading.js:261:13)

  console.warn
    ⚠️ No trading signals found for filters: { symbol: '', signal_type: '' }

      272 |
      273 |     if (result.rows.length === 0) {
    > 274 |       console.warn('⚠️ No trading signals found for filters:', { symbol, signal_type });
          |               ^
      275 |       return res.json({
      276 |         success: true,
      277 |         data: [],

      at warn (routes/trading.js:274:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/signals?symbol=&signal_type= HTTP/1.1" 200 82 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol:    , type: 	, timeframe: daily

      at log (routes/trading.js:204:13)

  console.log
    📊 Executing query:  SELECT symbol, date, signal, close, rsi, volume, target_price, buylevel, selllevel, stoplevel, entry_quality_score FROM buy_sell_daily WHERE timeframe = 'Daily' AND signal IN ('Buy', 'Sell') AND date >= CURRENT_DATE - INTERVAL '90 days' AND symbol = $1 AND signal = $2 ORDER BY date DESC LIMIT $3 [ '   ', '\t', 100 ]

      at log (routes/trading.js:261:13)

  console.warn
    ⚠️ No trading signals found for filters: { symbol: '   ', signal_type: '\t' }

      272 |
      273 |     if (result.rows.length === 0) {
    > 274 |       console.warn('⚠️ No trading signals found for filters:', { symbol, signal_type });
          |               ^
      275 |       return res.json({
      276 |         success: true,
      277 |         data: [],

      at warn (routes/trading.js:274:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/signals?symbol=%20%20%20&signal_type=%09 HTTP/1.1" 200 82 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:204:13)

  console.log
    📊 Executing query:  SELECT symbol, date, signal, close, rsi, volume, target_price, buylevel, selllevel, stoplevel, entry_quality_score FROM buy_sell_daily WHERE timeframe = 'Daily' AND signal IN ('Buy', 'Sell') AND date >= CURRENT_DATE - INTERVAL '90 days' ORDER BY date DESC LIMIT $1 [ 100 ]

      at log (routes/trading.js:261:13)

  console.warn
    ⚠️ No trading signals found for filters: { symbol: undefined, signal_type: undefined }

      272 |
      273 |     if (result.rows.length === 0) {
    > 274 |       console.warn('⚠️ No trading signals found for filters:', { symbol, signal_type });
          |               ^
      275 |       return res.json({
      276 |         success: true,
      277 |         data: [],

      at warn (routes/trading.js:274:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/signals HTTP/1.1" 200 82 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/performance HTTP/1.1" 200 89 "-" "-"
  console.log
    🔄 Trading positions requested for user: anonymous

      at log (routes/trading.js:1118:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/positions HTTP/1.1" 200 75 "-" "-"
  console.log
    📈 Trading strategies requested - category: all, risk: all, active: false

      at log (routes/trading.js:1735:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/strategies HTTP/1.1" 200 544 "-" "-"
  console.log
    🎮 Trading simulator requested - Portfolio: $100000, Strategy: momentum, Symbols: SPY,QQQ,AAPL,TSLA,NVDA

      at log (routes/trading.js:1507:13)

  console.log
    🔍 All available columns in buy_sell_daily: []

      at log (routes/trading.js:1555:15)

  console.log
    🎮 Found columns in buy_sell_daily: []

      at log (routes/trading.js:1567:15)

  console.log
    🎮 Trading table columns config: {
      symbol: false,
      date: false,
      signal: false,
      signal_type: false,
      price: false,
      buylevel: false,
      stoplevel: false,
      inposition: false
    }

      at log (routes/trading.js:1573:15)

  console.log
    🎮 Using price column: 0 for trading simulation

      at log (routes/trading.js:1602:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/simulator HTTP/1.1" 500 245 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:204:13)

  console.log
    📊 Executing query:  SELECT symbol, date, signal, close, rsi, volume, target_price, buylevel, selllevel, stoplevel, entry_quality_score FROM buy_sell_daily WHERE timeframe = 'Daily' AND signal IN ('Buy', 'Sell') AND date >= CURRENT_DATE - INTERVAL '90 days' ORDER BY date DESC LIMIT $1 [ 10 ]

      at log (routes/trading.js:261:13)

  console.warn
    ⚠️ No trading signals found for filters: { symbol: undefined, signal_type: undefined }

      272 |
      273 |     if (result.rows.length === 0) {
    > 274 |       console.warn('⚠️ No trading signals found for filters:', { symbol, signal_type });
          |               ^
      275 |       return res.json({
      276 |         success: true,
      277 |         data: [],

      at warn (routes/trading.js:274:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/signals?limit=10 HTTP/1.1" 200 82 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:204:13)

  console.log
    📊 Executing query:  SELECT symbol, date, signal, close, rsi, volume, target_price, buylevel, selllevel, stoplevel, entry_quality_score FROM buy_sell_daily WHERE timeframe = 'Daily' AND signal IN ('Buy', 'Sell') AND date >= CURRENT_DATE - INTERVAL '90 days' ORDER BY date DESC LIMIT $1 [ 10 ]

      at log (routes/trading.js:261:13)

  console.warn
    ⚠️ No trading signals found for filters: { symbol: undefined, signal_type: undefined }

      272 |
      273 |     if (result.rows.length === 0) {
    > 274 |       console.warn('⚠️ No trading signals found for filters:', { symbol, signal_type });
          |               ^
      275 |       return res.json({
      276 |         success: true,
      277 |         data: [],

      at warn (routes/trading.js:274:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/signals?limit=10 HTTP/1.1" 200 82 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:204:13)

  console.log
    📊 Executing query:  SELECT symbol, date, signal, close, rsi, volume, target_price, buylevel, selllevel, stoplevel, entry_quality_score FROM buy_sell_daily WHERE timeframe = 'Daily' AND signal IN ('Buy', 'Sell') AND date >= CURRENT_DATE - INTERVAL '90 days' ORDER BY date DESC LIMIT $1 [ 10 ]

      at log (routes/trading.js:261:13)

  console.warn
    ⚠️ No trading signals found for filters: { symbol: undefined, signal_type: undefined }

      272 |
      273 |     if (result.rows.length === 0) {
    > 274 |       console.warn('⚠️ No trading signals found for filters:', { symbol, signal_type });
          |               ^
      275 |       return res.json({
      276 |         success: true,
      277 |         data: [],

      at warn (routes/trading.js:274:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/signals?limit=10 HTTP/1.1" 200 82 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:204:13)

  console.log
    📊 Executing query:  SELECT symbol, date, signal, close, rsi, volume, target_price, buylevel, selllevel, stoplevel, entry_quality_score FROM buy_sell_daily WHERE timeframe = 'Daily' AND signal IN ('Buy', 'Sell') AND date >= CURRENT_DATE - INTERVAL '90 days' ORDER BY date DESC LIMIT $1 [ 10 ]

      at log (routes/trading.js:261:13)

  console.warn
    ⚠️ No trading signals found for filters: { symbol: undefined, signal_type: undefined }

      272 |
      273 |     if (result.rows.length === 0) {
    > 274 |       console.warn('⚠️ No trading signals found for filters:', { symbol, signal_type });
          |               ^
      275 |       return res.json({
      276 |         success: true,
      277 |         data: [],

      at warn (routes/trading.js:274:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/signals?limit=10 HTTP/1.1" 200 82 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:204:13)

  console.log
    📊 Executing query:  SELECT symbol, date, signal, close, rsi, volume, target_price, buylevel, selllevel, stoplevel, entry_quality_score FROM buy_sell_daily WHERE timeframe = 'Daily' AND signal IN ('Buy', 'Sell') AND date >= CURRENT_DATE - INTERVAL '90 days' ORDER BY date DESC LIMIT $1 [ 10 ]

      at log (routes/trading.js:261:13)

  console.warn
    ⚠️ No trading signals found for filters: { symbol: undefined, signal_type: undefined }

      272 |
      273 |     if (result.rows.length === 0) {
    > 274 |       console.warn('⚠️ No trading signals found for filters:', { symbol, signal_type });
          |               ^
      275 |       return res.json({
      276 |         success: true,
      277 |         data: [],

      at warn (routes/trading.js:274:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/signals?limit=10 HTTP/1.1" 200 82 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/health HTTP/1.1" 200 137 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/health HTTP/1.1" 200 137 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/health HTTP/1.1" 200 137 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:204:13)

  console.log
    📊 Executing query:  SELECT symbol, date, signal, close, rsi, volume, target_price, buylevel, selllevel, stoplevel, entry_quality_score FROM buy_sell_daily WHERE timeframe = 'Daily' AND signal IN ('Buy', 'Sell') AND date >= CURRENT_DATE - INTERVAL '90 days' ORDER BY date DESC LIMIT $1 [ 500 ]

      at log (routes/trading.js:261:13)

  console.warn
    ⚠️ No trading signals found for filters: { symbol: undefined, signal_type: undefined }

      272 |
      273 |     if (result.rows.length === 0) {
    > 274 |       console.warn('⚠️ No trading signals found for filters:', { symbol, signal_type });
          |               ^
      275 |       return res.json({
      276 |         success: true,
      277 |         data: [],

      at warn (routes/trading.js:274:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/signals?limit=500 HTTP/1.1" 200 82 "-" "-"
  console.log
    [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:349:11)

  console.log
    [TRADING] Request URL: /signals/daily?limit=5

      at log (routes/trading.js:350:11)

  console.log
    [TRADING] Received request for /signals/:timeframe {
      params: { timeframe: 'daily' },
      query: { limit: '5' },
      path: '/signals/daily',
      method: 'GET',
      time: '2025-10-19T11:48:45.211Z'
    }

      at log (routes/trading.js:351:11)

  console.log
    [TRADING] Table existence check results:

      at log (routes/trading.js:639:13)

  console.log
      Main table exists: true

      at log (routes/trading.js:640:13)

  console.log
      Company profile exists: false

      at log (routes/trading.js:641:13)

  console.log
      Price daily exists: true

      at log (routes/trading.js:642:13)

  console.log
    [TRADING] Executing SQL: 
            SELECT 
              bs.symbol,
              bs.date,
              bs.signal as signal,
              bs.close as price,
              NULL as stoplevel,
              false as inposition,
              pd.close as current_price,
              NULL as company_name,
              NULL as sector,
              NULL as market_cap,
              NULL as trailing_pe,
              NULL as dividend_yield,
              CASE 
                WHEN bs.signal = 'BUY' AND pd.close > bs.close
                THEN ((pd.close - bs.close) / bs.close * 100)
                WHEN bs.signal = 'SELL' AND pd.close < bs.close
                THEN ((bs.close - pd.close) / bs.close * 100)
                ELSE 0
              END as performance_percent
            FROM buy_sell_daily bs
            
            
            LEFT JOIN (SELECT DISTINCT ON (pd_inner.symbol) pd_inner.symbol, pd_inner.close FROM price_daily pd_inner ORDER BY pd_inner.symbol, pd_inner.date DESC) pd ON bs.symbol = pd.symbol
            WHERE bs.signal IN ('BUY', 'SELL', 'Buy', 'Sell')
            ORDER BY bs.date DESC, bs.symbol ASC
            LIMIT $1 OFFSET $2
           Params: [ 5, 0 ]

      at log (routes/trading.js:643:13)

  console.log
    [TRADING] Executing count SQL: 
            SELECT COUNT(*) as total
            FROM buy_sell_daily bs
            WHERE bs.signal IN ('BUY', 'SELL', 'Buy', 'Sell')
           Params: []

      at log (routes/trading.js:644:13)

  console.log
    [TRADING] About to execute main query...

      at log (routes/trading.js:651:13)

  console.log
    [TRADING] Main query successful, now executing count query...

      at log (routes/trading.js:653:13)

  console.log
    [TRADING] Both queries successful

      at log (routes/trading.js:660:13)

  console.error
    [TRADING] Error fetching trading signals: TypeError: Cannot read properties of undefined (reading 'total')
        at total (/home/stocks/algo/webapp/lambda/routes/trading.js:662:48)

      715 |     });
      716 |   } catch (error) {
    > 717 |     console.error("[TRADING] Error fetching trading signals:", error);
          |             ^
      718 |     console.error("[TRADING] Error details:", {
      719 |       message: error.message,
      720 |       stack: error.stack,

      at error (routes/trading.js:717:13)

  console.error
    [TRADING] Error details: {
      message: "Cannot read properties of undefined (reading 'total')",
      stack: "TypeError: Cannot read properties of undefined (reading 'total')\n" +
        '    at total (/home/stocks/algo/webapp/lambda/routes/trading.js:662:48)',
      timeframe: 'daily',
      query: { limit: '5' },
      position: undefined,
      detail: undefined,
      hint: undefined,
      where: undefined
    }

      716 |   } catch (error) {
      717 |     console.error("[TRADING] Error fetching trading signals:", error);
    > 718 |     console.error("[TRADING] Error details:", {
          |             ^
      719 |       message: error.message,
      720 |       stack: error.stack,
      721 |       timeframe: req.params.timeframe,

      at error (routes/trading.js:718:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/signals/daily?limit=5 HTTP/1.1" 500 200 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/performance?days=30 HTTP/1.1" 200 89 "-" "-"
  console.error
    Error fetching swing signals: TypeError: Cannot read properties of undefined (reading 'total')
        at total (/home/stocks/algo/webapp/lambda/routes/trading.js:932:48)

      957 |     });
      958 |   } catch (error) {
    > 959 |     console.error("Error fetching swing signals:", error);
          |             ^
      960 |     console.error("Swing signals error details:", {
      961 |       message: error.message,
      962 |       stack: error.stack,

      at error (routes/trading.js:959:13)

  console.error
    Swing signals error details: {
      message: "Cannot read properties of undefined (reading 'total')",
      stack: "TypeError: Cannot read properties of undefined (reading 'total')\n" +
        '    at total (/home/stocks/algo/webapp/lambda/routes/trading.js:932:48)',
      query: { limit: '3' }
    }

      958 |   } catch (error) {
      959 |     console.error("Error fetching swing signals:", error);
    > 960 |     console.error("Swing signals error details:", {
          |             ^
      961 |       message: error.message,
      962 |       stack: error.stack,
      963 |       query: req.query,

      at error (routes/trading.js:960:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/swing-signals?limit=3 HTTP/1.1" 500 178 "-" "-"
  console.log
    📈 Trading strategies requested - category: all, risk: all, active: false

      at log (routes/trading.js:1735:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/strategies?limit=2 HTTP/1.1" 200 543 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:204:13)

  console.log
    📊 Executing query:  SELECT symbol, date, signal, close, rsi, volume, target_price, buylevel, selllevel, stoplevel, entry_quality_score FROM buy_sell_daily WHERE timeframe = 'Daily' AND signal IN ('Buy', 'Sell') AND date >= CURRENT_DATE - INTERVAL '90 days' ORDER BY date DESC LIMIT $1 [ 100 ]

      at log (routes/trading.js:261:13)

  console.warn
    ⚠️ No trading signals found for filters: { symbol: undefined, signal_type: undefined }

      272 |
      273 |     if (result.rows.length === 0) {
    > 274 |       console.warn('⚠️ No trading signals found for filters:', { symbol, signal_type });
          |               ^
      275 |       return res.json({
      276 |         success: true,
      277 |         data: [],

      at warn (routes/trading.js:274:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/signals HTTP/1.1" 200 82 "-" "-"
  console.log
    [TRADING] Debug endpoint called

      at log (routes/trading.js:147:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/debug HTTP/1.1" 200 746 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/health HTTP/1.1" 200 137 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:204:13)

  console.log
    📊 Executing query:  SELECT symbol, date, signal, close, rsi, volume, target_price, buylevel, selllevel, stoplevel, entry_quality_score FROM buy_sell_daily WHERE timeframe = 'Daily' AND signal IN ('Buy', 'Sell') AND date >= CURRENT_DATE - INTERVAL '90 days' ORDER BY date DESC LIMIT $1 [ 100 ]

      at log (routes/trading.js:261:13)

  console.warn
    ⚠️ No trading signals found for filters: { symbol: undefined, signal_type: undefined }

      272 |
      273 |     if (result.rows.length === 0) {
    > 274 |       console.warn('⚠️ No trading signals found for filters:', { symbol, signal_type });
          |               ^
      275 |       return res.json({
      276 |         success: true,
      277 |         data: [],

      at warn (routes/trading.js:274:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/signals HTTP/1.1" 200 82 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/performance HTTP/1.1" 200 89 "-" "-"
  console.log
    📈 Trading strategies requested - category: all, risk: all, active: false

      at log (routes/trading.js:1735:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/strategies HTTP/1.1" 200 544 "-" "-"
  console.error
    Error: SyntaxError: Unexpected end of JSON input
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{"invalid": ',
      type: 'entity.parse.failed'
    }

      268 | app.use((err, req, res, _next) => {
      269 |   try {
    > 270 |     console.error("Error:", err);
          |             ^
      271 |   } catch (e) {
      272 |     // Ignore console logging errors
      273 |   }

      at error (server.js:270:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "POST /api/trading/orders HTTP/1.1" 400 135 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA, type: undefined, timeframe: daily

      at log (routes/trading.js:204:13)

  console.log
    📊 Executing query:  SELECT symbol, date, signal, close, rsi, volume, target_price, buylevel, selllevel, stoplevel, entry_quality_score FROM buy_sell_daily WHERE timeframe = 'Daily' AND signal IN ('Buy', 'Sell') AND date >= CURRENT_DATE - INTERVAL '90 days' AND symbol = $1 ORDER BY date DESC LIMIT $2 [ 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA', 100 ]

      at log (routes/trading.js:261:13)

  console.warn
    ⚠️ No trading signals found for filters: {
      symbol: 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA',
      signal_type: undefined
    }

      272 |
      273 |     if (result.rows.length === 0) {
    > 274 |       console.warn('⚠️ No trading signals found for filters:', { symbol, signal_type });
          |               ^
      275 |       return res.json({
      276 |         success: true,
      277 |         data: [],

      at warn (routes/trading.js:274:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/signals?symbol=AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA HTTP/1.1" 200 82 "-" "-"
  console.log
    🎯 Trading signals requested - user: undefined, symbol: @, type: undefined, timeframe: daily

      at log (routes/trading.js:204:13)

  console.log
    📊 Executing query:  SELECT symbol, date, signal, close, rsi, volume, target_price, buylevel, selllevel, stoplevel, entry_quality_score FROM buy_sell_daily WHERE timeframe = 'Daily' AND signal IN ('Buy', 'Sell') AND date >= CURRENT_DATE - INTERVAL '90 days' AND symbol = $1 ORDER BY date DESC LIMIT $2 [ '@', 100 ]

      at log (routes/trading.js:261:13)

  console.warn
    ⚠️ No trading signals found for filters: { symbol: '@', signal_type: undefined }

      272 |
      273 |     if (result.rows.length === 0) {
    > 274 |       console.warn('⚠️ No trading signals found for filters:', { symbol, signal_type });
          |               ^
      275 |       return res.json({
      276 |         success: true,
      277 |         data: [],

      at warn (routes/trading.js:274:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/signals?symbol=@ HTTP/1.1" 200 82 "-" "-"
  console.log
    📝 Order placement requested for user: test-user-123, buy 1 AAPL

      at log (routes/trading.js:1364:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "POST /api/trading/orders HTTP/1.1" 201 615 "-" "-"
  console.log
    📝 Order placement requested for user: test-user-123, buy 1 AAPL

      at log (routes/trading.js:1364:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "POST /api/trading/orders HTTP/1.1" 201 615 "-" "-"
  console.log
    📝 Order placement requested for user: test-user-123, buy 1 AAPL

      at log (routes/trading.js:1364:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "POST /api/trading/orders HTTP/1.1" 201 615 "-" "-"
  console.log
    [TRADING] ========= ROUTE ENTRY =========

      at log (routes/trading.js:349:11)

  console.log
    [TRADING] Request URL: /signals/daily?limit=10

      at log (routes/trading.js:350:11)

  console.log
    [TRADING] Received request for /signals/:timeframe {
      params: { timeframe: 'daily' },
      query: { limit: '10' },
      path: '/signals/daily',
      method: 'GET',
      time: '2025-10-19T11:48:45.254Z'
    }

      at log (routes/trading.js:351:11)

  console.log
    [TRADING] Table existence check results:

      at log (routes/trading.js:639:13)

  console.log
      Main table exists: true

      at log (routes/trading.js:640:13)

  console.log
      Company profile exists: false

      at log (routes/trading.js:641:13)

  console.log
      Price daily exists: true

      at log (routes/trading.js:642:13)

  console.log
    [TRADING] Executing SQL: 
            SELECT 
              bs.symbol,
              bs.date,
              bs.signal as signal,
              bs.close as price,
              NULL as stoplevel,
              false as inposition,
              pd.close as current_price,
              NULL as company_name,
              NULL as sector,
              NULL as market_cap,
              NULL as trailing_pe,
              NULL as dividend_yield,
              CASE 
                WHEN bs.signal = 'BUY' AND pd.close > bs.close
                THEN ((pd.close - bs.close) / bs.close * 100)
                WHEN bs.signal = 'SELL' AND pd.close < bs.close
                THEN ((bs.close - pd.close) / bs.close * 100)
                ELSE 0
              END as performance_percent
            FROM buy_sell_daily bs
            
            
            LEFT JOIN (SELECT DISTINCT ON (pd_inner.symbol) pd_inner.symbol, pd_inner.close FROM price_daily pd_inner ORDER BY pd_inner.symbol, pd_inner.date DESC) pd ON bs.symbol = pd.symbol
            WHERE bs.signal IN ('BUY', 'SELL', 'Buy', 'Sell')
            ORDER BY bs.date DESC, bs.symbol ASC
            LIMIT $1 OFFSET $2
           Params: [ 10, 0 ]

      at log (routes/trading.js:643:13)

  console.log
    [TRADING] Executing count SQL: 
            SELECT COUNT(*) as total
            FROM buy_sell_daily bs
            WHERE bs.signal IN ('BUY', 'SELL', 'Buy', 'Sell')
           Params: []

      at log (routes/trading.js:644:13)

  console.log
    [TRADING] About to execute main query...

      at log (routes/trading.js:651:13)

  console.log
    [TRADING] Main query successful, now executing count query...

      at log (routes/trading.js:653:13)

  console.log
    [TRADING] Both queries successful

      at log (routes/trading.js:660:13)

  console.error
    [TRADING] Error fetching trading signals: TypeError: Cannot read properties of undefined (reading 'total')
        at total (/home/stocks/algo/webapp/lambda/routes/trading.js:662:48)

      715 |     });
      716 |   } catch (error) {
    > 717 |     console.error("[TRADING] Error fetching trading signals:", error);
          |             ^
      718 |     console.error("[TRADING] Error details:", {
      719 |       message: error.message,
      720 |       stack: error.stack,

      at error (routes/trading.js:717:13)

  console.error
    [TRADING] Error details: {
      message: "Cannot read properties of undefined (reading 'total')",
      stack: "TypeError: Cannot read properties of undefined (reading 'total')\n" +
        '    at total (/home/stocks/algo/webapp/lambda/routes/trading.js:662:48)',
      timeframe: 'daily',
      query: { limit: '10' },
      position: undefined,
      detail: undefined,
      hint: undefined,
      where: undefined
    }

      716 |   } catch (error) {
      717 |     console.error("[TRADING] Error fetching trading signals:", error);
    > 718 |     console.error("[TRADING] Error details:", {
          |             ^
      719 |       message: error.message,
      720 |       stack: error.stack,
      721 |       timeframe: req.params.timeframe,

      at error (routes/trading.js:718:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/signals/daily?limit=10 HTTP/1.1" 500 200 "-" "-"
  console.log
    📋 Trading orders requested for user: test-user-123

      at log (routes/trading.js:1252:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/orders HTTP/1.1" 200 463 "-" "-"
  console.log
    📋 Trading orders requested for user: test-user-123

      at log (routes/trading.js:1252:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/trading/orders HTTP/1.1" 200 463 "-" "-"
  console.log
    📝 Order placement requested for user: test-user-123, buy 1 AAPL

      at log (routes/trading.js:1364:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "POST /api/trading/orders HTTP/1.1" 201 615 "-" "-"
  console.log
    📝 Order placement requested for user: test-user-123, buy 0.5 AAPL

      at log (routes/trading.js:1364:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "POST /api/trading/orders HTTP/1.1" 201 615 "-" "-"
  console.log
    📝 Order placement requested for user: test-user-123, BUY 1 aapl

      at log (routes/trading.js:1364:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "POST /api/trading/orders HTTP/1.1" 400 91 "-" "-"
  console.log
    📝 Order placement requested for user: test-user-123, buy 1 AAPL

      at log (routes/trading.js:1364:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "POST /api/trading/orders HTTP/1.1" 201 615 "-" "-"
  console.log
    📝 Order placement requested for user: test-user-123, buy 1000000 AAPL

      at log (routes/trading.js:1364:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "POST /api/trading/orders HTTP/1.1" 201 621 "-" "-"
  console.log
    📝 Order placement requested for user: test-user-123, sell 10 TSLA

      at log (routes/trading.js:1364:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "POST /api/trading/orders HTTP/1.1" 201 624 "-" "-"
FAIL tests/integration/routes/trading.integration.test.js
  Trading Routes Integration Tests
    GET /api/trading (Root endpoint)
      ✓ should return trading API information (18 ms)
      ✓ should handle concurrent requests to root endpoint (10 ms)
    GET /api/trading/health
      ✓ should return health status without authentication (2 ms)
      ✓ should return consistent health status across multiple calls (10 ms)
    GET /api/trading/debug
      ✓ should return debug information about trading tables (32 ms)
    GET /api/trading/signals
      ✓ should return all trading signals without authentication (8 ms)
      ✓ should handle limit parameter for signals (5 ms)
      ✓ should handle symbol filtering (4 ms)
      ✓ should handle signal type filtering (4 ms)
      ✓ should reject invalid limit values (2 ms)
      ✓ should reject excessive limit values (2 ms)
    GET /api/trading/signals/:timeframe
      ✕ should return daily signals (31 ms)
      ✕ should return weekly signals (8 ms)
      ✕ should return monthly signals (7 ms)
      ✓ should reject invalid timeframes (11 ms)
      ✕ should handle pagination parameters (8 ms)
      ✕ should handle latest_only parameter (7 ms)
      ✕ should handle symbol and signal type filters together (8 ms)
    GET /api/trading/summary/:timeframe
      ✕ should return daily signals summary (2 ms)
      ✕ should return weekly signals summary (2 ms)
      ✓ should reject invalid timeframes for summary (2 ms)
    GET /api/trading/swing-signals
      ✕ should return swing trading signals (3 ms)
      ✕ should handle pagination for swing signals (7 ms)
    GET /api/trading/:ticker/technicals
      ✓ should return technical indicators for a stock (2 ms)
      ✓ should handle timeframe parameter for technicals (2 ms)
      ✓ should handle monthly timeframe for technicals (1 ms)
    GET /api/trading/performance
      ✓ should return performance summary of recent signals (1 ms)
      ✓ should handle custom days parameter (1 ms)
      ✓ should handle invalid days parameter gracefully (2 ms)
    GET /api/trading/positions
      ✓ should return current trading positions (2 ms)
      ✓ should return positions summary when requested (2 ms)
    GET /api/trading/orders (Authenticated)
      ✓ should require authentication for orders (8 ms)
      ✓ should return trading orders with valid authentication (3 ms)
      ✓ should handle database unavailability for orders (3 ms)
    POST /api/trading/orders (Authenticated)
      ✕ should require authentication for order creation (11 ms)
      ✓ should create market buy order with valid data (3 ms)
      ✓ should create limit sell order with valid data (2 ms)
      ✓ should reject order with missing required fields (4 ms)
      ✓ should reject order with invalid order type (3 ms)
      ✓ should reject order with invalid side (3 ms)
      ✓ should reject order with invalid quantity (2 ms)
      ✓ should reject limit order without limit price (3 ms)
      ✓ should handle stop limit order with valid data (3 ms)
    GET /api/trading/simulator
      ✕ should return trading simulation results with default parameters (3 ms)
      ✕ should handle custom simulation parameters (3 ms)
      ✓ should reject invalid portfolio values (2 ms)
      ✓ should reject negative portfolio values (1 ms)
      ✓ should reject invalid strategy (2 ms)
    GET /api/trading/strategies
      ✓ should return all trading strategies (3 ms)
      ✓ should filter strategies by category (2 ms)
      ✓ should filter strategies by risk level (2 ms)
      ✓ should filter active strategies only (2 ms)
      ✓ should handle limit parameter (3 ms)
      ✓ should combine multiple filters (4 ms)
    GET /api/trading/strategies/:strategyId
      ✓ should return detailed strategy information (3 ms)
      ✓ should include signals when requested (3 ms)
      ✓ should include backtest results when requested (3 ms)
      ✓ should include both signals and backtest when both requested (2 ms)
      ✓ should return strategy details without optional includes (2 ms)
      ✓ should include signals when requested (2 ms)
      ✓ should include backtest results when requested (3 ms)
      ✓ should handle both signals and backtest parameters (2 ms)
      ✓ should handle invalid strategy ID gracefully (2 ms)
    Advanced Parameter Validation
      ✓ should handle multiple complex query parameters for signals (12 ms)
      ✓ should handle zero and negative page numbers (6 ms)
      ✓ should handle extremely large page numbers (7 ms)
      ✓ should handle performance endpoint with edge case days parameter (2 ms)
      ✓ should handle performance endpoint with very large days parameter (2 ms)
      ✓ should handle simulator with minimum portfolio value (2 ms)
      ✓ should handle simulator with maximum realistic portfolio (2 ms)
      ✓ should handle simulator with extensive symbol list (3 ms)
    Database Edge Cases
      ✓ should handle potential SQL injection in symbol parameters (4 ms)
      ✓ should handle Unicode and international symbols (3 ms)
      ✓ should handle empty string parameters gracefully (3 ms)
      ✓ should handle whitespace-only parameters (4 ms)
    Performance and Load Testing
      ✓ should handle multiple concurrent requests to different endpoints (9 ms)
      ✓ should handle rapid sequential requests to same endpoint (16 ms)
      ✓ should maintain response time consistency across requests (4 ms)
      ✓ should handle memory-intensive operations gracefully (3 ms)
    Data Consistency and Validation
      ✓ should validate signal data structure consistency (6 ms)
      ✓ should validate performance data calculation accuracy (1 ms)
      ✓ should validate swing signals structure (3 ms)
      ✓ should validate strategies data completeness (2 ms)
    Error Recovery and Resilience
      ✓ should gracefully handle database connection timeouts (4 ms)
      ✓ should handle partial data availability scenarios (3 ms)
      ✓ should maintain API availability during high error rates (6 ms)
    Edge Cases and Error Handling
      ✓ should handle malformed JSON in POST requests (4 ms)
      ✓ should handle very long symbol names (3 ms)
      ✓ should handle special characters in symbol parameter (3 ms)
      ✓ should handle concurrent order submissions (6 ms)
      ✕ should handle performance testing with response time validation (6 ms)
      ✓ should handle missing authentication header gracefully (2 ms)
      ✕ should handle malformed authentication token (3 ms)
      ✓ should handle large payload sizes gracefully (2 ms)
      ✓ should handle order validation edge cases (12 ms)
      ✓ should handle complex stop-limit order scenarios (2 ms)

  ● Trading Routes Integration Tests › GET /api/trading/signals/:timeframe › should return daily signals

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      187 |       const response = await request(app).get("/api/trading/signals/daily");
      188 |
    > 189 |       expect(response.status).toBe(200);
          |                               ^
      190 |
      191 |       if (response.status === 200) {
      192 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/trading.integration.test.js:189:31)

  ● Trading Routes Integration Tests › GET /api/trading/signals/:timeframe › should return weekly signals

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      201 |       const response = await request(app).get("/api/trading/signals/weekly");
      202 |
    > 203 |       expect(response.status).toBe(200);
          |                               ^
      204 |
      205 |       if (response.status === 200) {
      206 |         expect(response.body.timeframe).toBe("weekly");

      at Object.toBe (tests/integration/routes/trading.integration.test.js:203:31)

  ● Trading Routes Integration Tests › GET /api/trading/signals/:timeframe › should return monthly signals

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      211 |       const response = await request(app).get("/api/trading/signals/monthly");
      212 |
    > 213 |       expect(response.status).toBe(200);
          |                               ^
      214 |
      215 |       if (response.status === 200) {
      216 |         expect(response.body.timeframe).toBe("monthly");

      at Object.toBe (tests/integration/routes/trading.integration.test.js:213:31)

  ● Trading Routes Integration Tests › GET /api/trading/signals/:timeframe › should handle pagination parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      229 |       );
      230 |
    > 231 |       expect(response.status).toBe(200);
          |                               ^
      232 |
      233 |       if (response.status === 200) {
      234 |         expect(response.body.pagination).toHaveProperty("page", 1);

      at Object.toBe (tests/integration/routes/trading.integration.test.js:231:31)

  ● Trading Routes Integration Tests › GET /api/trading/signals/:timeframe › should handle latest_only parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      242 |       );
      243 |
    > 244 |       expect(response.status).toBe(200);
          |                               ^
      245 |
      246 |       if (response.status === 200 && response.body.data.length > 0) {
      247 |         // Each symbol should appear only once with latest_only=true

      at Object.toBe (tests/integration/routes/trading.integration.test.js:244:31)

  ● Trading Routes Integration Tests › GET /api/trading/signals/:timeframe › should handle symbol and signal type filters together

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      257 |       );
      258 |
    > 259 |       expect(response.status).toBe(200);
          |                               ^
      260 |
      261 |       if (response.status === 200 && response.body.data.length > 0) {
      262 |         response.body.data.forEach((signal) => {

      at Object.toBe (tests/integration/routes/trading.integration.test.js:259:31)

  ● Trading Routes Integration Tests › GET /api/trading/summary/:timeframe › should return daily signals summary

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      271 |       const response = await request(app).get("/api/trading/summary/daily");
      272 |
    > 273 |       expect(response.status).toBe(200);
          |                               ^
      274 |
      275 |       if (response.status === 200) {
      276 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/trading.integration.test.js:273:31)

  ● Trading Routes Integration Tests › GET /api/trading/summary/:timeframe › should return weekly signals summary

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      286 |       const response = await request(app).get("/api/trading/summary/weekly");
      287 |
    > 288 |       expect(response.status).toBe(200);
          |                               ^
      289 |
      290 |       if (response.status === 200) {
      291 |         expect(response.body.timeframe).toBe("weekly");

      at Object.toBe (tests/integration/routes/trading.integration.test.js:288:31)

  ● Trading Routes Integration Tests › GET /api/trading/swing-signals › should return swing trading signals

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      304 |       const response = await request(app).get("/api/trading/swing-signals");
      305 |
    > 306 |       expect(response.status).toBe(200);
          |                               ^
      307 |
      308 |       if (response.status === 200) {
      309 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/trading.integration.test.js:306:31)

  ● Trading Routes Integration Tests › GET /api/trading/swing-signals › should handle pagination for swing signals

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      327 |       );
      328 |
    > 329 |       expect(response.status).toBe(200);
          |                               ^
      330 |
      331 |       if (response.status === 200) {
      332 |         expect(response.body.pagination).toHaveProperty("page", 1);

      at Object.toBe (tests/integration/routes/trading.integration.test.js:329:31)

  ● Trading Routes Integration Tests › POST /api/trading/orders (Authenticated) › should require authentication for order creation

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      502 |
      503 |       // Trading orders endpoint appears to allow unauthenticated access in current implementation
    > 504 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      505 |     });
      506 |
      507 |     test("should create market buy order with valid data", async () => {

      at Object.toBe (tests/integration/routes/trading.integration.test.js:504:52)

  ● Trading Routes Integration Tests › GET /api/trading/simulator › should return trading simulation results with default parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      663 |       const response = await request(app).get("/api/trading/simulator");
      664 |
    > 665 |       expect(response.status).toBe(200);
          |                               ^
      666 |
      667 |       if (response.status === 200) {
      668 |         expect(response.body).toHaveProperty("simulation_parameters");

      at Object.toBe (tests/integration/routes/trading.integration.test.js:665:31)

  ● Trading Routes Integration Tests › GET /api/trading/simulator › should handle custom simulation parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      688 |       );
      689 |
    > 690 |       expect(response.status).toBe(200);
          |                               ^
      691 |
      692 |       if (response.status === 200) {
      693 |         expect(response.body.simulation_parameters.starting_portfolio).toBe(

      at Object.toBe (tests/integration/routes/trading.integration.test.js:690:31)

  ● Trading Routes Integration Tests › Edge Cases and Error Handling › should handle performance testing with response time validation

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      1308 |       const responseTime = Date.now() - startTime;
      1309 |
    > 1310 |       expect(response.status).toBe(200);
           |                               ^
      1311 |       expect(responseTime).toBeLessThan(30000); // 30 second timeout
      1312 |     });
      1313 |

      at Object.toBe (tests/integration/routes/trading.integration.test.js:1310:31)

  ● Trading Routes Integration Tests › Edge Cases and Error Handling › should handle malformed authentication token

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      1326 |         .set("Authorization", "Bearer invalid-malformed-token");
      1327 |
    > 1328 |       expect([401].includes(response.status)).toBe(true);
           |                                               ^
      1329 |     });
      1330 |
      1331 |     test("should handle large payload sizes gracefully", async () => {

      at Object.toBe (tests/integration/routes/trading.integration.test.js:1328:47)

  console.error
    Error: SyntaxError: Unexpected end of JSON input
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{"invalid": ',
      type: 'entity.parse.failed'
    }

      268 | app.use((err, req, res, _next) => {
      269 |   try {
    > 270 |     console.error("Error:", err);
          |             ^
      271 |   } catch (e) {
      272 |     // Ignore console logging errors
      273 |   }

      at error (server.js:270:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
  console.error
    Error: SyntaxError: Expected property name or '}' in JSON at position 1
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{incomplete json',
      type: 'entity.parse.failed'
    }

      268 | app.use((err, req, res, _next) => {
      269 |   try {
    > 270 |     console.error("Error:", err);
          |             ^
      271 |   } catch (e) {
      272 |     // Ignore console logging errors
      273 |   }

      at error (server.js:270:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "POST /api/backtest/run HTTP/1.1" 400 135 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/calendar/earnings?limit=not-a-number HTTP/1.1" 400 105 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/calendar/earnings?days_ahead=invalid HTTP/1.1" 400 114 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/calendar/earnings?start_date=not-a-date HTTP/1.1" 400 120 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "POST /api/portfolio/analyze HTTP/1.1" 501 273 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "POST /api/portfolio/analyze HTTP/1.1" 501 273 "-" "-"
  console.log
    Portfolio analytics endpoint called for authenticated user: test-user-123, timeframe: 1y

      at log (routes/portfolio.js:353:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/portfolio/analytics HTTP/1.1" 200 679 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/portfolio/admin HTTP/1.1" 404 125 "-" "-"
  console.log
    📊 Portfolio summary requested for user: test-user-123

      at log (routes/portfolio.js:175:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/portfolio/summary?user_id=999 HTTP/1.1" 200 655 "-" "-"
  console.log
    🔔 Active alerts requested for user: test-user-123, status: active

      at log (routes/alerts.js:39:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/alerts/active?user_id=999 HTTP/1.1" 200 501 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/nonexistent HTTP/1.1" 404 121 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/portfolio/nonexistent-action HTTP/1.1" 404 138 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/calendar/nonexistent-calendar HTTP/1.1" 404 139 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "POST /api/invalid/endpoint HTTP/1.1" 404 126 "-" "-"
  console.log
    📊 Retrieving backtest results for ID: nonexistent-id

      at log (routes/backtest.js:20:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/backtest/results/nonexistent-id HTTP/1.1" 404 162 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/portfolio/positions/999999 HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/calendar/invalid-calendar-type HTTP/1.1" 404 140 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/portfolio/invalid-portfolio-action HTTP/1.1" 404 144 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/invalid-market-data HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "POST /api/health HTTP/1.1" 404 116 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "PUT /api/market/overview HTTP/1.1" 404 125 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "DELETE /api/calendar/earnings HTTP/1.1" 404 127 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "POST /api/health HTTP/1.1" 404 116 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "POST /api/market/overview HTTP/1.1" 404 125 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "POST /api/calendar/earnings HTTP/1.1" 404 127 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "POST /api/portfolio/positions HTTP/1.1" 404 129 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "POST /api/portfolio/analyze HTTP/1.1" 501 273 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "POST /api/portfolio/analyze HTTP/1.1" 501 273 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 1ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 1ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 1ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/nonexistent HTTP/1.1" 404 121 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    📋 Portfolio positions requested for user: test-user-123

      at log (routes/portfolio.js:282:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:45 +0000] "GET /api/calendar/admin-only HTTP/1.1" 404 129 "-" "-"
FAIL tests/integration/errors/4xx-error-scenarios.integration.test.js
  4xx Client Error Scenarios Integration
    400 Bad Request Scenarios
      ✓ should return 400 for malformed JSON requests (13 ms)
      ✓ should return 400 for invalid parameter types (6 ms)
      ✕ should return 400 for missing required fields (2 ms)
      ✕ should return 400 for invalid field values (2 ms)
    401 Unauthorized Scenarios
      ✕ should return 401 for missing authorization header (26 ms)
      ✕ should return 401 for invalid authorization tokens (2 ms)
      ✕ should return 401 for malformed authorization headers (1 ms)
    403 Forbidden Scenarios
      ✓ should return 403 for insufficient permissions (2 ms)
      ✓ should return 403 for resource access violations (19 ms)
    404 Not Found Scenarios
      ✓ should return 404 for non-existent endpoints (6 ms)
      ✓ should return 404 for non-existent resources (11 ms)
      ✓ should return 404 for valid endpoint with invalid sub-routes (5 ms)
    405 Method Not Allowed Scenarios
      ✓ should return 405 for unsupported HTTP methods (4 ms)
      ✓ should return 405 for POST on GET-only endpoints (3 ms)
    409 Conflict Scenarios
      ✓ should return 409 for resource conflicts (2 ms)
    415 Unsupported Media Type Scenarios
      ✕ should return 415 for unsupported content types (1 ms)
    422 Unprocessable Entity Scenarios
      ✕ should return 422 for semantically invalid data (1 ms)
    429 Rate Limiting Scenarios
      ✓ should handle rate limiting if implemented (243 ms)
    Cross-Route 4xx Error Consistency
      ✕ should maintain consistent 4xx error response format (4 ms)
      ✓ should not expose sensitive information in 4xx errors (3 ms)

  ● 4xx Client Error Scenarios Integration › 400 Bad Request Scenarios › should return 400 for missing required fields

    expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 501

      150 |         const response = await requestBuilder.send(test.body);
      151 |
    > 152 |         expect(response.status).toBe(test.expectedStatus);
          |                                 ^
      153 |
      154 |         if (response.status === 400 || response.status === 422) {
      155 |           expect(response.body).toHaveProperty("error");

      at Object.toBe (tests/integration/errors/4xx-error-scenarios.integration.test.js:152:33)

  ● 4xx Client Error Scenarios Integration › 400 Bad Request Scenarios › should return 400 for invalid field values

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [200, 400, 404]

      185 |         const response = await requestBuilder.send(test.body);
      186 |
    > 187 |         expect([200, 400, 404]).toContain(response.status);
          |                                 ^
      188 |
      189 |         if (response.status === 400 || response.status === 422) {
      190 |           expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/errors/4xx-error-scenarios.integration.test.js:187:33)

  ● 4xx Client Error Scenarios Integration › 401 Unauthorized Scenarios › should return 401 for missing authorization header

    expect(received).toBe(expected) // Object.is equality

    Expected: 401
    Received: 200

      206 |
      207 |         // Should return 401 for missing authorization
    > 208 |         expect(response.status).toBe(401);
          |                                 ^
      209 |         expect(response.body).toHaveProperty("success", false);
      210 |         expect(response.body).toHaveProperty("error");
      211 |         expect(response.body.error).toMatch(

      at Object.toBe (tests/integration/errors/4xx-error-scenarios.integration.test.js:208:33)

  ● 4xx Client Error Scenarios Integration › 401 Unauthorized Scenarios › should return 401 for invalid authorization tokens

    expect(received).toBe(expected) // Object.is equality

    Expected: 401
    Received: 200

      231 |
      232 |         // Should return 401 for invalid tokens
    > 233 |         expect(response.status).toBe(401);
          |                                 ^
      234 |         expect(response.body).toHaveProperty("success", false);
      235 |         expect(response.body).toHaveProperty("error");
      236 |       }

      at Object.toBe (tests/integration/errors/4xx-error-scenarios.integration.test.js:233:33)

  ● 4xx Client Error Scenarios Integration › 401 Unauthorized Scenarios › should return 401 for malformed authorization headers

    expect(received).toBe(expected) // Object.is equality

    Expected: 401
    Received: 200

      253 |
      254 |         // Should return 401 for malformed headers
    > 255 |         expect(response.status).toBe(401);
          |                                 ^
      256 |         expect(response.body).toHaveProperty("success", false);
      257 |         expect(response.body).toHaveProperty("error");
      258 |       }

      at Object.toBe (tests/integration/errors/4xx-error-scenarios.integration.test.js:255:33)

  ● 4xx Client Error Scenarios Integration › 415 Unsupported Media Type Scenarios › should return 415 for unsupported content types

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [400, 404, 415, 422, 500]

      509 |           .send(test.body);
      510 |
    > 511 |         expect([400, 404, 415, 422, 500]).toContain(response.status);
          |                                           ^
      512 |
      513 |         if (response.status === 415) {
      514 |           expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/errors/4xx-error-scenarios.integration.test.js:511:43)

  ● 4xx Client Error Scenarios Integration › 422 Unprocessable Entity Scenarios › should return 422 for semantically invalid data

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [200, 400, 404]

      560 |         const response = await requestBuilder;
      561 |
    > 562 |         expect([200, 400, 404]).toContain(response.status);
          |                                 ^
      563 |
      564 |         if (response.status === 422) {
      565 |           expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/errors/4xx-error-scenarios.integration.test.js:562:33)

  ● 4xx Client Error Scenarios Integration › Cross-Route 4xx Error Consistency › should maintain consistent 4xx error response format

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 403]

      640 |           : [scenario.expectedStatus];
      641 |
    > 642 |         expect(expectedStatuses).toContain(response.status);
          |                                  ^
      643 |
      644 |         // All 4xx responses should have consistent structure
      645 |         if (response.status >= 400 && response.status < 500) {

      at Object.toContain (tests/integration/errors/4xx-error-scenarios.integration.test.js:642:34)

  console.log
    [2025-10-19T11:48:45.790Z] [WARN] [7669f381] Operation not found

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "operationId": "non_existent_timer"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

FAIL tests/integration/utils/performanceMonitor.test.js
  Performance Monitor Integration Tests
    Performance Timing
      ✓ should measure operation duration accurately (1 ms)
      ✓ should handle multiple concurrent timers (4 ms)
      ✓ should handle invalid timer IDs gracefully (8 ms)
    Metrics Recording
      ✓ should record custom metrics
      ✓ should record metrics with different categories
      ✓ should handle metrics with metadata
    Performance Analytics
      ✓ should calculate average response times
      ✓ should handle empty metrics gracefully (1 ms)
      ✓ should calculate metrics for different time ranges
    System Health Monitoring
      ✓ should collect system health metrics (1 ms)
      ✓ should include database health in system metrics (1 ms)
      ✓ should detect system health status accurately
    Anomaly Detection
      ✓ should detect performance anomalies
      ✓ should handle normal data without false positives
      ✓ should detect trend-based anomalies
    Performance Reporting
      ✓ should generate comprehensive performance report (1 ms)
      ✓ should include performance recommendations (1 ms)
      ✓ should filter report by categories (1 ms)
    Performance Benchmarking
      ✕ should benchmark database operations
      ✓ should benchmark API response times (272 ms)
      ✓ should compare performance across time periods
    Error Handling and Edge Cases
      ✓ should handle database connection issues gracefully
      ✓ should handle invalid time ranges
      ✓ should handle very large metric values
      ✓ should handle concurrent metric recording

  ● Performance Monitor Integration Tests › Performance Benchmarking › should benchmark database operations

    expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      589 |       });
      590 |
    > 591 |       expect(duration).toBeGreaterThan(0);
          |                        ^
      592 |       expect(duration).toBeLessThan(1000); // Should complete within 1 second
      593 |
      594 |       // Verify metric was recorded

      at Object.toBeGreaterThan (tests/integration/utils/performanceMonitor.test.js:591:24)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades HTTP/1.1" 200 281 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades/health HTTP/1.1" 200 142 "-" "-"
  console.log
    🕒 Recent trades endpoint disabled for user: test-user-123

      at log (routes/trades.js:358:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades/recent HTTP/1.1" 501 475 "-" "-"
  console.log
    🕒 Recent trades endpoint disabled for user: test-user-123

      at log (routes/trades.js:358:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades/recent?limit=10&days=30&symbol=AAPL&type=buy&status=executed HTTP/1.1" 501 483 "-" "-"
  console.log
    🕒 Recent trades endpoint disabled for user: test-user-123

      at log (routes/trades.js:358:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades/recent HTTP/1.1" 501 475 "-" "-"
  console.log
    🕒 Recent trades endpoint disabled for user: test-user-123

      at log (routes/trades.js:358:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades/recent HTTP/1.1" 501 475 "-" "-"
  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

  console.log
    Getting trade import status for user: test-user-123

      at log (routes/trades.js:657:13)

  console.error
    Database query failed for broker status: Cannot read properties of undefined (reading 'rows')

      690 |       });
      691 |     } catch (dbError) {
    > 692 |       console.error(
          |               ^
      693 |         "Database query failed for broker status:",
      694 |         dbError.message
      695 |       );

      at error (routes/trades.js:692:15)

  console.error
    ❌ Broker status unavailable - comprehensive diagnosis needed {
      database_query_failed: true,
      detailed_diagnostics: {
        attempted_operations: [ 'broker_api_configs_query', 'user_api_keys_join' ],
        potential_causes: [
          'Database connection failure',
          'broker_api_configs table missing',
          'user_api_keys table missing',
          'Data sync process failed',
          'User authentication issues'
        ],
        troubleshooting_steps: [
          'Check database connectivity',
          'Verify broker_api_configs table exists',
          'Verify user_api_keys table exists',
          'Check data sync process status',
          'Review user authentication flow'
        ],
        system_checks: [
          'Database health status',
          'Table existence validation',
          'Data sync service availability',
          'Authentication service health'
        ]
      }
    }

      696 |
      697 |       // Return empty broker status with comprehensive diagnostics
    > 698 |       console.error(
          |               ^
      699 |         "❌ Broker status unavailable - comprehensive diagnosis needed",
      700 |         {
      701 |           database_query_failed: true,

      at error (routes/trades.js:698:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades/import/status HTTP/1.1" 200 157 "-" "-"
  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

  console.log
    Getting trade import status for user: test-user-123

      at log (routes/trades.js:657:13)

  console.error
    Database query failed for broker status: Cannot read properties of undefined (reading 'rows')

      690 |       });
      691 |     } catch (dbError) {
    > 692 |       console.error(
          |               ^
      693 |         "Database query failed for broker status:",
      694 |         dbError.message
      695 |       );

      at error (routes/trades.js:692:15)

  console.error
    ❌ Broker status unavailable - comprehensive diagnosis needed {
      database_query_failed: true,
      detailed_diagnostics: {
        attempted_operations: [ 'broker_api_configs_query', 'user_api_keys_join' ],
        potential_causes: [
          'Database connection failure',
          'broker_api_configs table missing',
          'user_api_keys table missing',
          'Data sync process failed',
          'User authentication issues'
        ],
        troubleshooting_steps: [
          'Check database connectivity',
          'Verify broker_api_configs table exists',
          'Verify user_api_keys table exists',
          'Check data sync process status',
          'Review user authentication flow'
        ],
        system_checks: [
          'Database health status',
          'Table existence validation',
          'Data sync service availability',
          'Authentication service health'
        ]
      }
    }

      696 |
      697 |       // Return empty broker status with comprehensive diagnostics
    > 698 |       console.error(
          |               ^
      699 |         "❌ Broker status unavailable - comprehensive diagnosis needed",
      700 |         {
      701 |           database_query_failed: true,

      at error (routes/trades.js:698:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades/import/status HTTP/1.1" 200 157 "-" "-"
  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

  console.log
    🔄 [TRADES] Import requested for user: test-user-123

      at log (routes/trades.js:848:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "POST /api/trades/import/alpaca HTTP/1.1" 400 129 "-" "-"
  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

  console.log
    🔄 [TRADES] Import requested for user: test-user-123

      at log (routes/trades.js:848:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "POST /api/trades/import/alpaca HTTP/1.1" 400 129 "-" "-"
  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

  console.error
    Trade analysis summary error: TypeError: Cannot read properties of undefined (reading 'rows')
        at TradeAnalyticsService.rows [as getTradeAnalysisSummary] (/home/stocks/algo/webapp/lambda/routes/trades.js:555:37)
        at /home/stocks/algo/webapp/lambda/routes/trades.js:947:21

      584 |       };
      585 |     } catch (error) {
    > 586 |       console.error("Trade analysis summary error:", error);
          |               ^
      587 |       return {
      588 |         insights: [`Error: ${error.message}`],
      589 |         summary: "Analysis unavailable - database error",

      at TradeAnalyticsService.error [as getTradeAnalysisSummary] (routes/trades.js:586:15)
      at routes/trades.js:947:21

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades/summary HTTP/1.1" 200 223 "-" "-"
  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

  console.error
    Trade analysis summary error: TypeError: Cannot read properties of undefined (reading 'rows')
        at TradeAnalyticsService.rows [as getTradeAnalysisSummary] (/home/stocks/algo/webapp/lambda/routes/trades.js:555:37)
        at /home/stocks/algo/webapp/lambda/routes/trades.js:947:21

      584 |       };
      585 |     } catch (error) {
    > 586 |       console.error("Trade analysis summary error:", error);
          |               ^
      587 |       return {
      588 |         insights: [`Error: ${error.message}`],
      589 |         summary: "Analysis unavailable - database error",

      at TradeAnalyticsService.error [as getTradeAnalysisSummary] (routes/trades.js:586:15)
      at routes/trades.js:947:21

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades/summary HTTP/1.1" 200 223 "-" "-"
  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

  console.error
    Error fetching positions: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/trades.js:1011:27)

      1021 |     });
      1022 |   } catch (error) {
    > 1023 |     console.error("Error fetching positions:", error);
           |             ^
      1024 |     res.status(500).json({
      1025 |       success: false,
      1026 |       error: "Failed to fetch positions",

      at error (routes/trades.js:1023:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades/positions HTTP/1.1" 500 53 "-" "-"
  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

  console.error
    Error fetching positions: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/trades.js:1011:27)

      1021 |     });
      1022 |   } catch (error) {
    > 1023 |     console.error("Error fetching positions:", error);
           |             ^
      1024 |     res.status(500).json({
      1025 |       success: false,
      1026 |       error: "Failed to fetch positions",

      at error (routes/trades.js:1023:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades/positions?status=open&limit=10&offset=0 HTTP/1.1" 500 53 "-" "-"
  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

  console.error
    Error fetching positions: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/trades.js:1011:27)

      1021 |     });
      1022 |   } catch (error) {
    > 1023 |     console.error("Error fetching positions:", error);
           |             ^
      1024 |     res.status(500).json({
      1025 |       success: false,
      1026 |       error: "Failed to fetch positions",

      at error (routes/trades.js:1023:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades/positions HTTP/1.1" 500 53 "-" "-"
  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

  console.log
    📊 Trade analytics requested for user: test-user-123, timeframe: 3M

      at log (routes/trades.js:1040:13)

  console.error
    Database query failed for trade analytics: Cannot read properties of undefined (reading 'rows')

      1261 |       }));
      1262 |     } catch (dbError) {
    > 1263 |       console.error(
           |               ^
      1264 |         "Database query failed for trade analytics:",
      1265 |         dbError.message
      1266 |       );

      at error (routes/trades.js:1263:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades/analytics HTTP/1.1" 500 196 "-" "-"
  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

  console.log
    📊 Trade analytics requested for user: test-user-123, timeframe: 1W

      at log (routes/trades.js:1040:13)

  console.error
    Database query failed for trade analytics: Cannot read properties of undefined (reading 'rows')

      1261 |       }));
      1262 |     } catch (dbError) {
    > 1263 |       console.error(
           |               ^
      1264 |         "Database query failed for trade analytics:",
      1265 |         dbError.message
      1266 |       );

      at error (routes/trades.js:1263:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades/analytics?timeframe=1W HTTP/1.1" 500 196 "-" "-"
  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

  console.log
    📊 Trade analytics requested for user: test-user-123, timeframe: 3M

      at log (routes/trades.js:1040:13)

  console.error
    Database query failed for trade analytics: Cannot read properties of undefined (reading 'rows')

      1261 |       }));
      1262 |     } catch (dbError) {
    > 1263 |       console.error(
           |               ^
      1264 |         "Database query failed for trade analytics:",
      1265 |         dbError.message
      1266 |       );

      at error (routes/trades.js:1263:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades/analytics HTTP/1.1" 500 196 "-" "-"
  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

  console.log
    📊 Trade analytics requested for user test-user-123, timeframe: 3M

      at log (routes/trades.js:1318:13)

  console.warn
    Failed to fetch live trade data: Cannot read properties of undefined (reading 'rows')

      1397 |       }
      1398 |     } catch (error) {
    > 1399 |       console.warn("Failed to fetch live trade data:", error.message);
           |               ^
      1400 |     }
      1401 |
      1402 |     // Get stored trade analytics from database with comprehensive error handling

      at warn (routes/trades.js:1399:15)

  console.warn
    Database query failed, checking for tables: Cannot read properties of undefined (reading 'rows')

      1461 |       sectorBreakdown = sectorResult.rows;
      1462 |     } catch (dbError) {
    > 1463 |       console.warn(
           |               ^
      1464 |         "Database query failed, checking for tables:",
      1465 |         dbError.message
      1466 |       );

      at warn (routes/trades.js:1463:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades/analytics/overview HTTP/1.1" 200 289 "-" "-"
  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

  console.log
    📊 Trade analytics requested for user test-user-123, timeframe: 3M

      at log (routes/trades.js:1318:13)

  console.warn
    Failed to fetch live trade data: Cannot read properties of undefined (reading 'rows')

      1397 |       }
      1398 |     } catch (error) {
    > 1399 |       console.warn("Failed to fetch live trade data:", error.message);
           |               ^
      1400 |     }
      1401 |
      1402 |     // Get stored trade analytics from database with comprehensive error handling

      at warn (routes/trades.js:1399:15)

  console.warn
    Database query failed, checking for tables: Cannot read properties of undefined (reading 'rows')

      1461 |       sectorBreakdown = sectorResult.rows;
      1462 |     } catch (dbError) {
    > 1463 |       console.warn(
           |               ^
      1464 |         "Database query failed, checking for tables:",
      1465 |         dbError.message
      1466 |       );

      at warn (routes/trades.js:1463:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades/analytics/overview HTTP/1.1" 200 289 "-" "-"
  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

  console.log
    📈 Trade history request received for user: test-user-123

      at log (routes/trades.js:1876:13)

  console.log
    🔑 Retrieving API credentials for Alpaca...

      at log (routes/trades.js:1901:15)

  console.log
    🔄 No broker API credentials found, falling back to database trade data...

      at log (routes/trades.js:2007:13)

  console.error
    Database fallback failed: Cannot read properties of undefined (reading 'rows')

      2071 |       });
      2072 |     } catch (dbError) {
    > 2073 |       console.error("Database fallback failed:", dbError.message);
           |               ^
      2074 |       // If database fallback also fails, return the original 503 error
      2075 |       return res.status(503).json({
      2076 |         success: false,

      at error (routes/trades.js:2073:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades/history HTTP/1.1" 503 645 "-" "-"
  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

  console.log
    📈 Trade history request received for user: test-user-123

      at log (routes/trades.js:1876:13)

  console.log
    🔑 Retrieving API credentials for Alpaca...

      at log (routes/trades.js:1901:15)

  console.log
    🔄 No broker API credentials found, falling back to database trade data...

      at log (routes/trades.js:2007:13)

  console.error
    Database fallback failed: Cannot read properties of undefined (reading 'rows')

      2071 |       });
      2072 |     } catch (dbError) {
    > 2073 |       console.error("Database fallback failed:", dbError.message);
           |               ^
      2074 |       // If database fallback also fails, return the original 503 error
      2075 |       return res.status(503).json({
      2076 |         success: false,

      at error (routes/trades.js:2073:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades/history?symbol=AAPL&limit=10&offset=0&sortBy=execution_time&sortOrder=desc HTTP/1.1" 503 645 "-" "-"
  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

  console.log
    📈 Trade history request received for user: test-user-123

      at log (routes/trades.js:1876:13)

  console.log
    🔑 Retrieving API credentials for Alpaca...

      at log (routes/trades.js:1901:15)

  console.log
    🔄 No broker API credentials found, falling back to database trade data...

      at log (routes/trades.js:2007:13)

  console.error
    Database fallback failed: Cannot read properties of undefined (reading 'rows')

      2071 |       });
      2072 |     } catch (dbError) {
    > 2073 |       console.error("Database fallback failed:", dbError.message);
           |               ^
      2074 |       // If database fallback also fails, return the original 503 error
      2075 |       return res.status(503).json({
      2076 |         success: false,

      at error (routes/trades.js:2073:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades/history HTTP/1.1" 503 645 "-" "-"
  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

  console.error
    Error fetching performance data: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/trades.js:1838:37)

      1843 |     });
      1844 |   } catch (error) {
    > 1845 |     console.error("Error fetching performance data:", error);
           |             ^
      1846 |     res.status(500).json({
      1847 |       success: false,
      1848 |       error: "Performance data unavailable",

      at error (routes/trades.js:1845:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades/performance HTTP/1.1" 500 560 "-" "-"
  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

  console.error
    Error fetching performance data: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/trades.js:1838:37)

      1843 |     });
      1844 |   } catch (error) {
    > 1845 |     console.error("Error fetching performance data:", error);
           |             ^
      1846 |     res.status(500).json({
      1847 |       success: false,
      1848 |       error: "Performance data unavailable",

      at error (routes/trades.js:1845:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades/performance HTTP/1.1" 500 560 "-" "-"
  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

  console.error
    Trade insights error: TypeError: Cannot read properties of undefined (reading 'rows')
        at TradeAnalyticsService.rows [as getTradeInsights] (/home/stocks/algo/webapp/lambda/routes/trades.js:620:29)
        at /home/stocks/algo/webapp/lambda/routes/trades.js:1773:22

      629 |       }));
      630 |     } catch (error) {
    > 631 |       console.error("Trade insights error:", error);
          |               ^
      632 |       return [
      633 |         {
      634 |           error: error.message,

      at TradeAnalyticsService.error [as getTradeInsights] (routes/trades.js:631:15)
      at routes/trades.js:1773:22

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades/insights HTTP/1.1" 200 184 "-" "-"
  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

  console.error
    Trade insights error: TypeError: Cannot read properties of undefined (reading 'rows')
        at TradeAnalyticsService.rows [as getTradeInsights] (/home/stocks/algo/webapp/lambda/routes/trades.js:620:29)
        at /home/stocks/algo/webapp/lambda/routes/trades.js:1773:22

      629 |       }));
      630 |     } catch (error) {
    > 631 |       console.error("Trade insights error:", error);
          |               ^
      632 |       return [
      633 |         {
      634 |           error: error.message,

      at TradeAnalyticsService.error [as getTradeInsights] (routes/trades.js:631:15)
      at routes/trades.js:1773:22

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades/insights?limit=5 HTTP/1.1" 200 184 "-" "-"
  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

  console.error
    Trade insights error: TypeError: Cannot read properties of undefined (reading 'rows')
        at TradeAnalyticsService.rows [as getTradeInsights] (/home/stocks/algo/webapp/lambda/routes/trades.js:620:29)
        at /home/stocks/algo/webapp/lambda/routes/trades.js:1773:22

      629 |       }));
      630 |     } catch (error) {
    > 631 |       console.error("Trade insights error:", error);
          |               ^
      632 |       return [
      633 |         {
      634 |           error: error.message,

      at TradeAnalyticsService.error [as getTradeInsights] (routes/trades.js:631:15)
      at routes/trades.js:1773:22

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades/insights HTTP/1.1" 200 184 "-" "-"
  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

  console.error
    Error exporting trade data: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/trades.js:2179:30)

      2220 |     }
      2221 |   } catch (error) {
    > 2222 |     console.error("Error exporting trade data:", error);
           |             ^
      2223 |     res.status(500).json({
      2224 |       success: false,
      2225 |       error: "Failed to export trade data",

      at error (routes/trades.js:2222:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades/export HTTP/1.1" 500 55 "-" "-"
  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

  console.error
    Error exporting trade data: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/trades.js:2179:30)

      2220 |     }
      2221 |   } catch (error) {
    > 2222 |     console.error("Error exporting trade data:", error);
           |             ^
      2223 |     res.status(500).json({
      2224 |       success: false,
      2225 |       error: "Failed to export trade data",

      at error (routes/trades.js:2222:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades/export?format=csv HTTP/1.1" 500 55 "-" "-"
  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

  console.error
    Error exporting trade data: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/trades.js:2179:30)

      2220 |     }
      2221 |   } catch (error) {
    > 2222 |     console.error("Error exporting trade data:", error);
           |             ^
      2223 |     res.status(500).json({
      2224 |       success: false,
      2225 |       error: "Failed to export trade data",

      at error (routes/trades.js:2222:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades/export?startDate=2023-01-01&endDate=2023-12-31 HTTP/1.1" 500 55 "-" "-"
  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

  console.error
    Error exporting trade data: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/trades.js:2179:30)

      2220 |     }
      2221 |   } catch (error) {
    > 2222 |     console.error("Error exporting trade data:", error);
           |             ^
      2223 |     res.status(500).json({
      2224 |       success: false,
      2225 |       error: "Failed to export trade data",

      at error (routes/trades.js:2222:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades/export HTTP/1.1" 500 55 "-" "-"
  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "DELETE /api/trades/data HTTP/1.1" 400 98 "-" "-"
  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "DELETE /api/trades/data HTTP/1.1" 200 49 "-" "-"
  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "DELETE /api/trades/data HTTP/1.1" 200 49 "-" "-"
  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

  console.log
    📊 Trade analytics requested for user: test-user-123, timeframe: invalid

      at log (routes/trades.js:1040:13)

  console.error
    Database query failed for trade analytics: Cannot read properties of undefined (reading 'rows')

      1261 |       }));
      1262 |     } catch (dbError) {
    > 1263 |       console.error(
           |               ^
      1264 |         "Database query failed for trade analytics:",
      1265 |         dbError.message
      1266 |       );

      at error (routes/trades.js:1263:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades/analytics?timeframe=invalid HTTP/1.1" 500 196 "-" "-"
  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades/analytics/invalid-id HTTP/1.1" 400 73 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades HTTP/1.1" 200 281 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades HTTP/1.1" 200 281 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades/health HTTP/1.1" 200 142 "-" "-"
  console.log
    🔍 validateUserAuthentication called with req.user: { sub: 'test-user-123' }

      at log (routes/trades.js:402:11)

  console.log
    🔍 Extracted userId: test-user-123

      at log (routes/trades.js:416:11)

  console.error
    Trade analysis summary error: TypeError: Cannot read properties of undefined (reading 'rows')
        at TradeAnalyticsService.rows [as getTradeAnalysisSummary] (/home/stocks/algo/webapp/lambda/routes/trades.js:555:37)
        at /home/stocks/algo/webapp/lambda/routes/trades.js:947:21

      584 |       };
      585 |     } catch (error) {
    > 586 |       console.error("Trade analysis summary error:", error);
          |               ^
      587 |       return {
      588 |         insights: [`Error: ${error.message}`],
      589 |         summary: "Analysis unavailable - database error",

      at TradeAnalyticsService.error [as getTradeAnalysisSummary] (routes/trades.js:586:15)
      at routes/trades.js:947:21

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/trades/summary HTTP/1.1" 200 223 "-" "-"
FAIL tests/integration/routes/trades.integration.test.js
  ● Trades Routes › GET /api/trades/recent › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      133 |       // No auth header
      134 |
    > 135 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      136 |     });
      137 |   });
      138 |

      at Object.toBe (tests/integration/routes/trades.integration.test.js:135:47)

  ● Trades Routes › GET /api/trades/import/status › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      159 |       // No auth header
      160 |
    > 161 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      162 |     });
      163 |   });
      164 |

      at Object.toBe (tests/integration/routes/trades.integration.test.js:161:47)

  ● Trades Routes › POST /api/trades/import/alpaca › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      191 |       // No auth header
      192 |
    > 193 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      194 |     });
      195 |   });
      196 |

      at Object.toBe (tests/integration/routes/trades.integration.test.js:193:47)

  ● Trades Routes › GET /api/trades/summary › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      213 |       // No auth header
      214 |
    > 215 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      216 |     });
      217 |   });
      218 |

      at Object.toBe (tests/integration/routes/trades.integration.test.js:215:47)

  ● Trades Routes › GET /api/trades/positions › should return positions data

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      223 |         .set("Authorization", "Bearer dev-bypass-token");
      224 |
    > 225 |       expect(response.status).toBe(200);
          |                               ^
      226 |
      227 |       if (response.status === 200) {
      228 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/trades.integration.test.js:225:31)

  ● Trades Routes › GET /api/trades/positions › should handle query parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      238 |         .set("Authorization", "Bearer dev-bypass-token");
      239 |
    > 240 |       expect(response.status).toBe(200);
          |                               ^
      241 |
      242 |       if (response.status === 200) {
      243 |         expect(response.body.data.pagination.limit).toBe(10);

      at Object.toBe (tests/integration/routes/trades.integration.test.js:240:31)

  ● Trades Routes › GET /api/trades/positions › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      250 |       // No auth header
      251 |
    > 252 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      253 |     });
      254 |   });
      255 |

      at Object.toBe (tests/integration/routes/trades.integration.test.js:252:47)

  ● Trades Routes › GET /api/trades/analytics › should return comprehensive trade analytics

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      260 |         .set("Authorization", "Bearer dev-bypass-token");
      261 |
    > 262 |       expect(response.status).toBe(200);
          |                               ^
      263 |
      264 |       if (response.status === 200) {
      265 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/trades.integration.test.js:262:31)

  ● Trades Routes › GET /api/trades/analytics › should handle timeframe parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      292 |           .set("Authorization", "Bearer dev-bypass-token");
      293 |
    > 294 |         expect(response.status).toBe(200);
          |                                 ^
      295 |
      296 |         if (response.status === 200) {
      297 |           expect(response.body.metadata.timeframe).toBe(timeframe);

      at Object.toBe (tests/integration/routes/trades.integration.test.js:294:33)

  ● Trades Routes › GET /api/trades/analytics › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      304 |       // No auth header
      305 |
    > 306 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      307 |     });
      308 |   });
      309 |

      at Object.toBe (tests/integration/routes/trades.integration.test.js:306:47)

  ● Trades Routes › GET /api/trades/analytics/overview › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      333 |       // No auth header
      334 |
    > 335 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      336 |     });
      337 |   });
      338 |

      at Object.toBe (tests/integration/routes/trades.integration.test.js:335:47)

  ● Trades Routes › GET /api/trades/history › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      375 |       // No auth header
      376 |
    > 377 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      378 |     });
      379 |   });
      380 |

      at Object.toBe (tests/integration/routes/trades.integration.test.js:377:47)

  ● Trades Routes › GET /api/trades/performance › should return performance data or error

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      385 |         .set("Authorization", "Bearer dev-bypass-token");
      386 |
    > 387 |       expect(response.status).toBe(200);
          |                               ^
      388 |
      389 |       if (response.status === 200) {
      390 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/trades.integration.test.js:387:31)

  ● Trades Routes › GET /api/trades/performance › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      407 |       // No auth header
      408 |
    > 409 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      410 |     });
      411 |   });
      412 |

      at Object.toBe (tests/integration/routes/trades.integration.test.js:409:47)

  ● Trades Routes › GET /api/trades/insights › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      440 |       // No auth header
      441 |
    > 442 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      443 |     });
      444 |   });
      445 |

      at Object.toBe (tests/integration/routes/trades.integration.test.js:442:47)

  ● Trades Routes › GET /api/trades/export › should export as CSV when format=csv

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      482 |         .set("Authorization", "Bearer dev-bypass-token");
      483 |
    > 484 |       expect(response.status).toBe(200);
          |                               ^
      485 |
      486 |       if (response.status === 200) {
      487 |         // Updated implementation returns JSON with CSV content

      at Object.toBe (tests/integration/routes/trades.integration.test.js:484:31)

  ● Trades Routes › GET /api/trades/export › should handle date range parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      499 |         .set("Authorization", "Bearer dev-bypass-token");
      500 |
    > 501 |       expect(response.status).toBe(200);
          |                               ^
      502 |     });
      503 |
      504 |     test("should require authentication", async () => {

      at Object.toBe (tests/integration/routes/trades.integration.test.js:501:31)

  ● Trades Routes › GET /api/trades/export › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      506 |       // No auth header
      507 |
    > 508 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      509 |     });
      510 |   });
      511 |

      at Object.toBe (tests/integration/routes/trades.integration.test.js:508:47)

  ● Trades Routes › DELETE /api/trades/data › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      543 |       // No auth header
      544 |
    > 545 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      546 |     });
      547 |   });
      548 |

      at Object.toBe (tests/integration/routes/trades.integration.test.js:545:47)


  ● Test suite failed to run

    Cannot add a hook after tests have started running. Hooks must be defined synchronously.

      30 | describe("Trades Routes", () => {
      31 |   beforeAll(async () => {
    > 32 |     beforeEach(() => {
         |     ^
      33 |     jest.clearAllMocks();
      34 |     query.mockImplementation((sql, params) => {
      35 |       // Default: return empty rows for all queries

      at eventHandler (node_modules/jest-circus/build/eventHandler.js:104:11)
      at Object.beforeEach (tests/integration/routes/trades.integration.test.js:32:5)

  console.log
    ✅ Using real database integration testing for signals

      at Object.log (tests/integration/routes/signals.integration.test.js:47:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/daily HTTP/1.1" 400 268 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/weekly HTTP/1.1" 400 271 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/monthly HTTP/1.1" 400 274 "-" "-"
  console.log
    📊 Signals data requested (deployment refresh v3)

      at log (routes/signals.js:94:13)

  console.log
    📊 Fetching real daily signals from database {}

      at log (routes/signals.js:123:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals?timeframe=daily HTTP/1.1" 200 226 "-" "-"
  console.log
    📊 Signals data requested (deployment refresh v3)

      at log (routes/signals.js:94:13)

  console.log
    📊 Fetching real daily signals from database {}

      at log (routes/signals.js:123:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals HTTP/1.1" 200 226 "-" "-"
  console.log
    📊 Signals data requested (deployment refresh v3)

      at log (routes/signals.js:94:13)

  console.log
    📊 Fetching real daily signals from database {}

      at log (routes/signals.js:123:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals?timeframe=daily HTTP/1.1" 200 226 "-" "-"
  console.log
    📊 Fetching real signals for AAPL from buy_sell_daily table

      at log (routes/signals.js:1954:13)

  console.error
    Error building query for buy_sell_daily: Table buy_sell_daily not found or has no columns

      1959 |       queryConfig = await buildSignalQuery(tableName, null, timeframe);
      1960 |     } catch (error) {
    > 1961 |       console.error(`Error building query for ${tableName}:`, error.message);
           |               ^
      1962 |       return res.status(404).json({
      1963 |         success: false,
      1964 |         error: "Signals data not available",

      at error (routes/signals.js:1961:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/AAPL HTTP/1.1" 404 190 "-" "-"
  console.log
    📈 Fetching trending signals from buy_sell_daily

      at log (routes/signals.js:1054:13)

  console.error
    Error building query for buy_sell_daily: Table buy_sell_daily not found or has no columns

      1059 |       queryConfig = await buildSignalQuery(tableName, null, timeframe);
      1060 |     } catch (error) {
    > 1061 |       console.error(`Error building query for ${tableName}:`, error.message);
           |               ^
      1062 |       // Return empty data instead of 404 to pass tests
      1063 |       return res.json({
      1064 |         success: true,

      at error (routes/signals.js:1061:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/trending HTTP/1.1" 200 225 "-" "-"
  console.log
    📈 Fetching real BUY signals from buy_sell_daily

      at log (routes/signals.js:470:13)

  console.error
    Error building query for buy_sell_daily: Table buy_sell_daily not found or has no columns

      475 |       queryConfig = await buildSignalQuery(tableName, 'BUY', timeframe);
      476 |     } catch (error) {
    > 477 |       console.error(`Error building query for ${tableName}:`, error.message);
          |               ^
      478 |
      479 |       // Return error instead of fallback data in any environment
      480 |

      at error (routes/signals.js:477:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/buy HTTP/1.1" 404 174 "-" "-"
  console.log
    📈 Fetching real BUY signals from buy_sell_weekly

      at log (routes/signals.js:470:13)

  console.error
    Error building query for buy_sell_weekly: Table buy_sell_weekly not found or has no columns

      475 |       queryConfig = await buildSignalQuery(tableName, 'BUY', timeframe);
      476 |     } catch (error) {
    > 477 |       console.error(`Error building query for ${tableName}:`, error.message);
          |               ^
      478 |
      479 |       // Return error instead of fallback data in any environment
      480 |

      at error (routes/signals.js:477:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/buy?timeframe=weekly HTTP/1.1" 404 176 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/buy?timeframe=invalid HTTP/1.1" 400 119 "-" "-"
  console.log
    📉 Sell signals requested for daily timeframe

      at log (routes/signals.js:607:13)

  console.log
    📉 Fetching real SELL signals from buy_sell_daily

      at log (routes/signals.js:620:13)

  console.error
    Error building query for buy_sell_daily: Table buy_sell_daily not found or has no columns

      625 |       queryConfig = await buildSignalQuery(tableName, 'SELL', timeframe);
      626 |     } catch (error) {
    > 627 |       console.error(`Error building query for ${tableName}:`, error.message);
          |               ^
      628 |
      629 |       // Return error instead of fallback data
      630 |

      at error (routes/signals.js:627:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/sell HTTP/1.1" 404 174 "-" "-"
  console.log
    🔔 Signal alerts requested

      at log (routes/signals.js:1130:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/alerts HTTP/1.1" 200 75 "-" "-"
  console.log
    🔔 Creating signal alert for AAPL

      at log (routes/signals.js:1206:13)

  console.error
    Create signal alert error: TypeError: Cannot read properties of undefined (reading 'id')
        at id (/home/stocks/algo/webapp/lambda/routes/signals.js:1246:27)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)

      1261 |     });
      1262 |   } catch (error) {
    > 1263 |     console.error("Create signal alert error:", error);
           |             ^
      1264 |     // Return error - no fallback or mock data
      1265 |     res.status(500).json({
      1266 |       success: false,

      at error (routes/signals.js:1263:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "POST /api/signals/alerts HTTP/1.1" 500 159 "-" "-"
  console.log
    🔔 Creating signal alert for undefined

      at log (routes/signals.js:1206:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "POST /api/signals/alerts HTTP/1.1" 400 85 "-" "-"
  console.log
    🔔 Creating signal alert for AAPL

      at log (routes/signals.js:1206:13)

  console.error
    Create signal alert error: TypeError: Cannot read properties of undefined (reading 'id')
        at id (/home/stocks/algo/webapp/lambda/routes/signals.js:1246:27)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)

      1261 |     });
      1262 |   } catch (error) {
    > 1263 |     console.error("Create signal alert error:", error);
           |             ^
      1264 |     // Return error - no fallback or mock data
      1265 |     res.status(500).json({
      1266 |       success: false,

      at error (routes/signals.js:1263:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "POST /api/signals/alerts HTTP/1.1" 500 159 "-" "-"
  console.log
    🔙 Signal backtest requested for AAPL

      at log (routes/signals.js:1324:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/backtest?symbol=AAPL&start_date=2023-01-01 HTTP/1.1" 200 231 "-" "-"
  console.log
    🔙 Signal backtest requested for all symbols

      at log (routes/signals.js:1324:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/backtest HTTP/1.1" 400 126 "-" "-"
  console.log
    📊 Signal performance requested for daily

      at log (routes/signals.js:1486:13)

  console.error
    Error building query for buy_sell_daily: Table buy_sell_daily not found or has no columns

      1509 |       queryConfig = await buildSignalQuery(tableName, null, timeframe);
      1510 |     } catch (error) {
    > 1511 |       console.error(`Error building query for ${tableName}:`, error.message);
           |               ^
      1512 |       // Return properly structured empty data instead of 404 to pass tests
      1513 |       return res.json({
      1514 |         success: true,

      at error (routes/signals.js:1511:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/performance HTTP/1.1" 200 380 "-" "-"
  console.log
    📊 Signal performance requested for 1M

      at log (routes/signals.js:1486:13)

  console.error
    Error building query for buy_sell_monthly: Table buy_sell_monthly not found or has no columns

      1509 |       queryConfig = await buildSignalQuery(tableName, null, timeframe);
      1510 |     } catch (error) {
    > 1511 |       console.error(`Error building query for ${tableName}:`, error.message);
           |               ^
      1512 |       // Return properly structured empty data instead of 404 to pass tests
      1513 |       return res.json({
      1514 |         success: true,

      at error (routes/signals.js:1511:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/performance?timeframe=1M HTTP/1.1" 200 384 "-" "-"
  console.log
    📊 Signal performance requested for AAPL - 7d

      at log (routes/signals.js:1370:13)

  console.error
    Error building query for buy_sell_daily: Table buy_sell_daily not found or has no columns

      1394 |       queryConfig = await buildSignalQuery(tableName, null, timeframe);
      1395 |     } catch (error) {
    > 1396 |       console.error(`Error building query for ${tableName}:`, error.message);
           |               ^
      1397 |       // Return properly formatted data for SignalPerformanceTracker component
      1398 |       return res.json({
      1399 |         symbol: symbol.toUpperCase(),

      at error (routes/signals.js:1396:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/performance/AAPL?timeframe=7d HTTP/1.1" 200 283 "-" "-"
  console.log
    📊 Signal performance requested for META - 7d

      at log (routes/signals.js:1370:13)

  console.error
    Error building query for buy_sell_daily: Table buy_sell_daily not found or has no columns

      1394 |       queryConfig = await buildSignalQuery(tableName, null, timeframe);
      1395 |     } catch (error) {
    > 1396 |       console.error(`Error building query for ${tableName}:`, error.message);
           |               ^
      1397 |       // Return properly formatted data for SignalPerformanceTracker component
      1398 |       return res.json({
      1399 |         symbol: symbol.toUpperCase(),

      at error (routes/signals.js:1396:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/performance/META?timeframe=7d HTTP/1.1" 200 283 "-" "-"
  console.log
    📊 Signal performance requested for META - 1d

      at log (routes/signals.js:1370:13)

  console.error
    Error building query for buy_sell_daily: Table buy_sell_daily not found or has no columns

      1394 |       queryConfig = await buildSignalQuery(tableName, null, timeframe);
      1395 |     } catch (error) {
    > 1396 |       console.error(`Error building query for ${tableName}:`, error.message);
           |               ^
      1397 |       // Return properly formatted data for SignalPerformanceTracker component
      1398 |       return res.json({
      1399 |         symbol: symbol.toUpperCase(),

      at error (routes/signals.js:1396:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/performance/META?timeframe=1d HTTP/1.1" 200 283 "-" "-"
  console.log
    📊 Signal performance requested for META - daily

      at log (routes/signals.js:1370:13)

  console.error
    Error building query for buy_sell_daily: Table buy_sell_daily not found or has no columns

      1394 |       queryConfig = await buildSignalQuery(tableName, null, timeframe);
      1395 |     } catch (error) {
    > 1396 |       console.error(`Error building query for ${tableName}:`, error.message);
           |               ^
      1397 |       // Return properly formatted data for SignalPerformanceTracker component
      1398 |       return res.json({
      1399 |         symbol: symbol.toUpperCase(),

      at error (routes/signals.js:1396:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/performance/META?timeframe=daily HTTP/1.1" 200 283 "-" "-"
  console.log
    📊 Signal performance requested for META - weekly

      at log (routes/signals.js:1370:13)

  console.error
    Error building query for buy_sell_weekly: Table buy_sell_weekly not found or has no columns

      1394 |       queryConfig = await buildSignalQuery(tableName, null, timeframe);
      1395 |     } catch (error) {
    > 1396 |       console.error(`Error building query for ${tableName}:`, error.message);
           |               ^
      1397 |       // Return properly formatted data for SignalPerformanceTracker component
      1398 |       return res.json({
      1399 |         symbol: symbol.toUpperCase(),

      at error (routes/signals.js:1396:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/performance/META?timeframe=weekly HTTP/1.1" 200 285 "-" "-"
  console.log
    📊 Signal performance requested for AAPL - invalid

      at log (routes/signals.js:1370:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/performance/AAPL?timeframe=invalid HTTP/1.1" 400 151 "-" "-"
  console.log
    📊 Signal performance requested for NONEXISTENT - 7d

      at log (routes/signals.js:1370:13)

  console.error
    Error building query for buy_sell_daily: Table buy_sell_daily not found or has no columns

      1394 |       queryConfig = await buildSignalQuery(tableName, null, timeframe);
      1395 |     } catch (error) {
    > 1396 |       console.error(`Error building query for ${tableName}:`, error.message);
           |               ^
      1397 |       // Return properly formatted data for SignalPerformanceTracker component
      1398 |       return res.json({
      1399 |         symbol: symbol.toUpperCase(),

      at error (routes/signals.js:1396:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/performance/NONEXISTENT?timeframe=7d HTTP/1.1" 200 290 "-" "-"
  console.log
    🔔 Creating signal alert for AAPL

      at log (routes/signals.js:1206:13)

  console.error
    Create signal alert error: TypeError: Cannot read properties of undefined (reading 'id')
        at id (/home/stocks/algo/webapp/lambda/routes/signals.js:1246:27)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)

      1261 |     });
      1262 |   } catch (error) {
    > 1263 |     console.error("Create signal alert error:", error);
           |             ^
      1264 |     // Return error - no fallback or mock data
      1265 |     res.status(500).json({
      1266 |       success: false,

      at error (routes/signals.js:1263:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "POST /api/signals/alerts HTTP/1.1" 500 159 "-" "-"
  console.log
    🗑️ Deleting signal alert: 99999

      at log (routes/signals.js:1279:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "DELETE /api/signals/alerts/99999 HTTP/1.1" 404 82 "-" "-"
  console.log
    📈 Fetching options signals

      at log (routes/signals.js:1627:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/options HTTP/1.1" 200 146 "-" "-"
  console.log
    📈 Fetching sentiment signals

      at log (routes/signals.js:1649:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/sentiment HTTP/1.1" 200 150 "-" "-"
  console.log
    📈 Fetching earnings signals

      at log (routes/signals.js:1671:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/earnings HTTP/1.1" 200 148 "-" "-"
  console.log
    📈 Fetching crypto signals

      at log (routes/signals.js:1693:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/crypto HTTP/1.1" 200 144 "-" "-"
  console.log
    📈 Fetching historical signals

      at log (routes/signals.js:1716:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/history HTTP/1.1" 200 241 "-" "-"
  console.log
    📈 Fetching historical signals

      at log (routes/signals.js:1716:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/history?page=1&limit=5 HTTP/1.1" 200 240 "-" "-"
  console.log
    📈 Fetching sector rotation signals

      at log (routes/signals.js:1746:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/sector-rotation HTTP/1.1" 200 162 "-" "-"
  console.log
    📊 Signals data requested (list endpoint)

      at log (routes/signals.js:1818:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/list HTTP/1.1" 200 150 "-" "-"
  console.log
    📊 Signals data requested (list endpoint)

      at log (routes/signals.js:1818:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/list?timeframe=weekly HTTP/1.1" 200 152 "-" "-"
  console.log
    📊 Signals data requested (list endpoint)

      at log (routes/signals.js:1818:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/list?page=1&limit=10 HTTP/1.1" 200 150 "-" "-"
  console.log
    📈 Creating custom signal alert: Test Custom Signal

      at log (routes/signals.js:1790:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "POST /api/signals/custom HTTP/1.1" 201 395 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "POST /api/signals/custom HTTP/1.1" 400 126 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "POST /api/signals/custom HTTP/1.1" 400 119 "-" "-"
  console.log
    📊 Technical signals requested for daily timeframe filtered by symbols: AAPL, TSLA

      at log (routes/signals.js:758:13)

  console.log
    📊 Fetching technical signals from buy_sell_daily

      at log (routes/signals.js:771:13)

  console.error
    Error building query for buy_sell_daily: Table buy_sell_daily not found or has no columns

      776 |       queryConfig = await buildSignalQuery(tableName, null, timeframe);
      777 |     } catch (error) {
    > 778 |       console.error(`Error building query for ${tableName}:`, error.message);
          |               ^
      779 |
      780 |       // Return error instead of fallback data
      781 |

      at error (routes/signals.js:778:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/technical?symbols=AAPL,TSLA HTTP/1.1" 404 184 "-" "-"
  console.log
    📊 Technical signals requested for daily timeframe

      at log (routes/signals.js:758:13)

  console.log
    📊 Fetching technical signals from buy_sell_daily

      at log (routes/signals.js:771:13)

  console.error
    Error building query for buy_sell_daily: Table buy_sell_daily not found or has no columns

      776 |       queryConfig = await buildSignalQuery(tableName, null, timeframe);
      777 |     } catch (error) {
    > 778 |       console.error(`Error building query for ${tableName}:`, error.message);
          |               ^
      779 |
      780 |       // Return error instead of fallback data
      781 |

      at error (routes/signals.js:778:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/technical HTTP/1.1" 404 184 "-" "-"
  console.log
    📊 Signals data requested (deployment refresh v3)

      at log (routes/signals.js:94:13)

  console.log
    📊 Fetching real daily signals from database {}

      at log (routes/signals.js:123:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/ HTTP/1.1" 200 226 "-" "-"
  console.log
    📊 Fetching real signals for INVALID_SYMBOL_123456 from buy_sell_daily table

      at log (routes/signals.js:1954:13)

  console.error
    Error building query for buy_sell_daily: Table buy_sell_daily not found or has no columns

      1959 |       queryConfig = await buildSignalQuery(tableName, null, timeframe);
      1960 |     } catch (error) {
    > 1961 |       console.error(`Error building query for ${tableName}:`, error.message);
           |               ^
      1962 |       return res.status(404).json({
      1963 |         success: false,
      1964 |         error: "Signals data not available",

      at error (routes/signals.js:1961:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/INVALID_SYMBOL_123456 HTTP/1.1" 404 207 "-" "-"
  console.log
    📊 Fetching real signals for !@#$% from buy_sell_daily table

      at log (routes/signals.js:1954:13)

  console.error
    Error building query for buy_sell_daily: Table buy_sell_daily not found or has no columns

      1959 |       queryConfig = await buildSignalQuery(tableName, null, timeframe);
      1960 |     } catch (error) {
    > 1961 |       console.error(`Error building query for ${tableName}:`, error.message);
           |               ^
      1962 |       return res.status(404).json({
      1963 |         success: false,
      1964 |         error: "Signals data not available",

      at error (routes/signals.js:1961:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/!%40%23%24%25 HTTP/1.1" 404 191 "-" "-"
  console.log
    📊 Signals data requested (deployment refresh v3)

      at log (routes/signals.js:94:13)

  console.log
    📊 Fetching real daily signals from database {}

      at log (routes/signals.js:123:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals?page=-1&limit=10 HTTP/1.1" 200 227 "-" "-"
  console.log
    📊 Signals data requested (deployment refresh v3)

      at log (routes/signals.js:94:13)

  console.log
    📊 Fetching real daily signals from database {}

      at log (routes/signals.js:123:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals?page=0&limit=-5 HTTP/1.1" 200 226 "-" "-"
  console.log
    📊 Signals data requested (deployment refresh v3)

      at log (routes/signals.js:94:13)

  console.log
    📊 Fetching real daily signals from database {}

      at log (routes/signals.js:123:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals?page=1&limit=1000 HTTP/1.1" 200 228 "-" "-"
  console.log
    📊 Signals data requested (deployment refresh v3)

      at log (routes/signals.js:94:13)

  console.log
    📊 Fetching real daily signals from database {}

      at log (routes/signals.js:123:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals?page=9999&limit=1 HTTP/1.1" 200 228 "-" "-"
  console.log
    📊 Signals data requested (deployment refresh v3)

      at log (routes/signals.js:94:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals?timeframe=daily! HTTP/1.1" 400 80 "-" "-"
  console.log
    📊 Signals data requested (deployment refresh v3)

      at log (routes/signals.js:94:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals?timeframe=week%40ly HTTP/1.1" 400 80 "-" "-"
  console.log
    📊 Signals data requested (deployment refresh v3)

      at log (routes/signals.js:94:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals?timeframe=month%23ly HTTP/1.1" 400 80 "-" "-"
  console.log
    📊 Signals data requested (deployment refresh v3)

      at log (routes/signals.js:94:13)

  console.log
    📊 Fetching real daily signals from database {}

      at log (routes/signals.js:123:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals?timeframe= HTTP/1.1" 200 226 "-" "-"
  console.log
    📊 Signals data requested (deployment refresh v3)

      at log (routes/signals.js:94:13)

  console.log
    📊 Fetching real daily signals from database {}

      at log (routes/signals.js:123:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals HTTP/1.1" 200 226 "-" "-"
  console.log
    📊 Signals data requested (deployment refresh v3)

      at log (routes/signals.js:94:13)

  console.log
    📊 Fetching real daily signals from database {}

      at log (routes/signals.js:123:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals HTTP/1.1" 200 226 "-" "-"
  console.log
    📊 Signals data requested (deployment refresh v3)

      at log (routes/signals.js:94:13)

  console.log
    📊 Fetching real daily signals from database {}

      at log (routes/signals.js:123:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals HTTP/1.1" 200 226 "-" "-"
  console.log
    📊 Signals data requested (deployment refresh v3)

      at log (routes/signals.js:94:13)

  console.log
    📊 Fetching real daily signals from database {}

      at log (routes/signals.js:123:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals HTTP/1.1" 200 226 "-" "-"
  console.log
    📊 Signals data requested (deployment refresh v3)

      at log (routes/signals.js:94:13)

  console.log
    📊 Fetching real daily signals from database {}

      at log (routes/signals.js:123:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals HTTP/1.1" 200 226 "-" "-"
  console.log
    📊 Signals data requested (deployment refresh v3)

      at log (routes/signals.js:94:13)

  console.log
    📊 Fetching real daily signals from database {}

      at log (routes/signals.js:123:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals HTTP/1.1" 200 226 "-" "-"
  console.log
    📈 Fetching real BUY signals from buy_sell_daily

      at log (routes/signals.js:470:13)

  console.error
    Error building query for buy_sell_daily: Table buy_sell_daily not found or has no columns

      475 |       queryConfig = await buildSignalQuery(tableName, 'BUY', timeframe);
      476 |     } catch (error) {
    > 477 |       console.error(`Error building query for ${tableName}:`, error.message);
          |               ^
      478 |
      479 |       // Return error instead of fallback data in any environment
      480 |

      at error (routes/signals.js:477:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/buy HTTP/1.1" 404 174 "-" "-"
  console.log
    📉 Sell signals requested for daily timeframe

      at log (routes/signals.js:607:13)

  console.log
    📉 Fetching real SELL signals from buy_sell_daily

      at log (routes/signals.js:620:13)

  console.error
    Error building query for buy_sell_daily: Table buy_sell_daily not found or has no columns

      625 |       queryConfig = await buildSignalQuery(tableName, 'SELL', timeframe);
      626 |     } catch (error) {
    > 627 |       console.error(`Error building query for ${tableName}:`, error.message);
          |               ^
      628 |
      629 |       // Return error instead of fallback data
      630 |

      at error (routes/signals.js:627:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/sell HTTP/1.1" 404 174 "-" "-"
  console.log
    📊 Technical signals requested for daily timeframe

      at log (routes/signals.js:758:13)

  console.log
    📊 Fetching technical signals from buy_sell_daily

      at log (routes/signals.js:771:13)

  console.error
    Error building query for buy_sell_daily: Table buy_sell_daily not found or has no columns

      776 |       queryConfig = await buildSignalQuery(tableName, null, timeframe);
      777 |     } catch (error) {
    > 778 |       console.error(`Error building query for ${tableName}:`, error.message);
          |               ^
      779 |
      780 |       // Return error instead of fallback data
      781 |

      at error (routes/signals.js:778:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/technical HTTP/1.1" 404 184 "-" "-"
  console.log
    📊 Momentum signals requested for daily timeframe

      at log (routes/signals.js:913:13)

  console.log
    📊 Fetching momentum signals from buy_sell_daily

      at log (routes/signals.js:926:13)

  console.error
    Error building query for buy_sell_daily: Table buy_sell_daily not found or has no columns

      931 |       queryConfig = await buildSignalQuery(tableName, null, timeframe);
      932 |     } catch (error) {
    > 933 |       console.error(`Error building query for ${tableName}:`, error.message);
          |               ^
      934 |
      935 |       // Return error instead of fallback data
      936 |

      at error (routes/signals.js:933:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/momentum HTTP/1.1" 404 183 "-" "-"
  console.log
    🔔 Signal alerts requested

      at log (routes/signals.js:1130:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/signals/alerts HTTP/1.1" 200 75 "-" "-"
FAIL tests/integration/routes/signals.integration.test.js
  Signals Routes - Integration Tests
    Frontend API Pattern Validation
      ✓ should reject /api/signals/daily path parameter pattern (7 ms)
      ✓ should reject /api/signals/weekly path parameter pattern (2 ms)
      ✓ should reject /api/signals/monthly path parameter pattern (1 ms)
      ✓ should accept correct query parameter timeframe pattern (10 ms)
    GET /api/signals - Database Schema Integration
      ✕ should return signals with proper loader table schema structure including swing metrics (4 ms)
      ✓ should handle timeframe parameter with database schema (4 ms)
    GET /api/signals/:symbol
      ✕ should return symbol-specific signals (3 ms)
    GET /api/signals/trending
      ✓ should return trending signals with proper structure (6 ms)
    GET /api/signals/buy - Loader Schema Integration
      ✓ should return buy signals with exact loader table schema structure including swing metrics (3 ms)
      ✓ should handle timeframe filters with database schema (3 ms)
      ✓ should validate timeframe parameter strictly (2 ms)
    GET /api/signals/sell - Loader Schema Integration
      ✓ should return sell signals with exact loader table schema structure (3 ms)
    GET /api/signals/alerts
      ✓ should return alerts with AWS-compatible structure (3 ms)
    POST /api/signals/alerts - Database Integration
      ✓ should create signal alert with database persistence (13 ms)
      ✓ should validate required fields strictly (3 ms)
      ✕ should validate signal_type field strictly (6 ms)
    GET /api/signals/backtest
      ✓ should return backtest results with proper structure (3 ms)
      ✓ should handle missing parameters gracefully (2 ms)
    GET /api/signals/performance
      ✓ should return performance metrics with proper structure (3 ms)
      ✓ should handle timeframe parameter correctly (3 ms)
    GET /api/signals/performance/:symbol
      ✕ should return performance data for specific symbol (3 ms)
      ✓ should handle different timeframe formats for symbol performance (12 ms)
      ✓ should handle invalid timeframes gracefully (3 ms)
      ✓ should return data even when no signals found (3 ms)
    DELETE /api/signals/alerts/:alertId - Database Integration
      ✓ should delete alert with database persistence (5 ms)
      ✓ should handle non-existent alert ID (3 ms)
    GET /api/signals/options
      ✓ should return options signals endpoint (2 ms)
    GET /api/signals/sentiment
      ✓ should return sentiment signals endpoint (3 ms)
    GET /api/signals/earnings
      ✓ should return earnings signals endpoint (2 ms)
    GET /api/signals/crypto
      ✓ should return crypto signals endpoint (2 ms)
    GET /api/signals/history
      ✓ should return historical signals endpoint (2 ms)
      ✓ should handle pagination parameters (2 ms)
    GET /api/signals/sector-rotation
      ✓ should return sector rotation signals endpoint (3 ms)
    GET /api/signals/list
      ✕ should return signals list endpoint (2 ms)
      ✕ should handle timeframe parameter (3 ms)
      ✕ should handle pagination parameters (2 ms)
    POST /api/signals/custom
      ✓ should create custom signal alert (2 ms)
      ✓ should validate required fields (1 ms)
      ✓ should validate criteria format (3 ms)
    GET /api/signals/technical - Advanced
      ✓ should support symbol filtering (3 ms)
      ✓ should return technical indicators (4 ms)
    Edge Cases and Error Handling
      ✓ should handle invalid symbol patterns gracefully (10 ms)
      ✓ should handle extreme pagination values (10 ms)
      ✓ should handle special characters in timeframe (9 ms)
      ✓ should handle concurrent requests gracefully (12 ms)
    Database Schema Validation
      ✓ should handle database connection issues gracefully (18 ms)

  ● Signals Routes - Integration Tests › GET /api/signals - Database Schema Integration › should return signals with proper loader table schema structure including swing metrics

    expect(received).toHaveProperty(path)

    Expected path: "summary"
    Received path: []

    Received value: {"data": [], "message": "No daily signals currently available. Signals will appear after data loading.", "pagination": {"hasMore": false, "limit": 25, "page": 1}, "success": true, "timeframe": "daily", "timestamp": "2025-10-19T11:48:46.563Z"}

      111 |       expect(response.body).toHaveProperty("data");
      112 |       expect(Array.isArray(response.body.data)).toBe(true);
    > 113 |       expect(response.body).toHaveProperty("summary");
          |                             ^
      114 |       expect(response.body.summary).toHaveProperty("buy_signals");
      115 |       expect(response.body.summary).toHaveProperty("sell_signals");
      116 |

      at Object.toHaveProperty (tests/integration/routes/signals.integration.test.js:113:29)

  ● Signals Routes - Integration Tests › GET /api/signals/:symbol › should return symbol-specific signals

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      185 |       const response = await request(app).get("/api/signals/AAPL");
      186 |
    > 187 |       expect(response.status).toBe(200);
          |                               ^
      188 |       expect(response.body.success).toBe(true);
      189 |       expect(response.body).toHaveProperty("data");
      190 |       expect(Array.isArray(response.body.data)).toBe(true);

      at Object.toBe (tests/integration/routes/signals.integration.test.js:187:31)

  ● Signals Routes - Integration Tests › POST /api/signals/alerts - Database Integration › should validate signal_type field strictly

    expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 500

      374 |         expect(response.body.data).toHaveProperty("signal_type", "INVALID");
      375 |       } else {
    > 376 |         expect(response.status).toBe(400);
          |                                 ^
      377 |         expect(response.body.success).toBe(false);
      378 |         expect(response.body.error).toContain("signal_type");
      379 |       }

      at Object.toBe (tests/integration/routes/signals.integration.test.js:376:33)

  ● Signals Routes - Integration Tests › GET /api/signals/performance/:symbol › should return performance data for specific symbol

    expect(received).toHaveProperty(path)

    Expected path: "confidence"
    Received path: []

    Received value: {"currentReturn": 0, "data_source": "database", "daysHeld": 0, "error_details": "Table buy_sell_daily not found or has no columns", "message": "Performance data not available", "signal": "BUY", "signalDate": "2025-10-19", "symbol": "AAPL", "timeframe": "daily", "timestamp": "2025-10-19T11:48:46.636Z"}

      428 |       expect(response.body).toHaveProperty("symbol", "AAPL");
      429 |       expect(response.body).toHaveProperty("signal");
    > 430 |       expect(response.body).toHaveProperty("confidence");
          |                             ^
      431 |       expect(response.body).toHaveProperty("signalDate");
      432 |       expect(response.body).toHaveProperty("daysHeld");
      433 |       expect(response.body).toHaveProperty("currentReturn");

      at Object.toHaveProperty (tests/integration/routes/signals.integration.test.js:430:29)

  ● Signals Routes - Integration Tests › GET /api/signals/list › should return signals list endpoint

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      594 |
      595 |       expect(response.status).toBe(200);
    > 596 |       expect(response.body.success).toBe(true);
          |                                     ^
      597 |       expect(response.body).toHaveProperty("data");
      598 |       expect(response.body).toHaveProperty("summary");
      599 |       expect(Array.isArray(response.body.data)).toBe(true);

      at Object.toBe (tests/integration/routes/signals.integration.test.js:596:37)

  ● Signals Routes - Integration Tests › GET /api/signals/list › should handle timeframe parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      604 |
      605 |       expect(response.status).toBe(200);
    > 606 |       expect(response.body.success).toBe(true);
          |                                     ^
      607 |       expect(response.body).toHaveProperty("timeframe", "weekly");
      608 |     });
      609 |

      at Object.toBe (tests/integration/routes/signals.integration.test.js:606:37)

  ● Signals Routes - Integration Tests › GET /api/signals/list › should handle pagination parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      612 |
      613 |       expect(response.status).toBe(200);
    > 614 |       expect(response.body.success).toBe(true);
          |                                     ^
      615 |       expect(response.body).toHaveProperty("pagination");
      616 |       if (response.body.pagination) {
      617 |         expect(response.body.pagination.limit).toBe(10);

      at Object.toBe (tests/integration/routes/signals.integration.test.js:614:37)

  console.log
    🔔 Active alerts requested for user: test-user-123, status: active

      at log (routes/alerts.js:39:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/alerts/active HTTP/1.1" 200 284 "-" "-"
  console.log
    🔔 Active alerts requested for user: test-user-123, status: active

      at log (routes/alerts.js:39:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/alerts/active?priority=high&category=price&limit=25 HTTP/1.1" 200 284 "-" "-"
  console.log
    🔔 Active alerts requested for user: test-user-123, status: active

      at log (routes/alerts.js:39:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/alerts/active?include_resolved=true HTTP/1.1" 200 284 "-" "-"
  console.log
    📋 All alerts requested for user: test-user-123, status: all

      at log (routes/alerts.js:309:13)

  console.warn
    Query returned invalid result: undefined

      20 |     const result = await query(tableCheckQuery, [tableName]);
      21 |     if (!result || !result.rows || result.rows.length === 0) {
    > 22 |       console.warn('Query returned invalid result:', result);
         |               ^
      23 |       return null;
      24 |     }
      25 |     return result.rows[0].exists;

      at warn (utils/routeHelpers.js:22:15)
      at routes/alerts.js:314:11

  console.warn
    Query returned invalid result: undefined

      20 |     const result = await query(tableCheckQuery, [tableName]);
      21 |     if (!result || !result.rows || result.rows.length === 0) {
    > 22 |       console.warn('Query returned invalid result:', result);
         |               ^
      23 |       return null;
      24 |     }
      25 |     return result.rows[0].exists;

      at warn (utils/routeHelpers.js:22:15)
      at routes/alerts.js:314:51

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/alerts HTTP/1.1" 200 122 "-" "-"
  console.log
    📋 All alerts requested for user: test-user-123, status: resolved

      at log (routes/alerts.js:309:13)

  console.warn
    Query returned invalid result: undefined

      20 |     const result = await query(tableCheckQuery, [tableName]);
      21 |     if (!result || !result.rows || result.rows.length === 0) {
    > 22 |       console.warn('Query returned invalid result:', result);
         |               ^
      23 |       return null;
      24 |     }
      25 |     return result.rows[0].exists;

      at warn (utils/routeHelpers.js:22:15)
      at routes/alerts.js:314:11

  console.warn
    Query returned invalid result: undefined

      20 |     const result = await query(tableCheckQuery, [tableName]);
      21 |     if (!result || !result.rows || result.rows.length === 0) {
    > 22 |       console.warn('Query returned invalid result:', result);
         |               ^
      23 |       return null;
      24 |     }
      25 |     return result.rows[0].exists;

      at warn (utils/routeHelpers.js:22:15)
      at routes/alerts.js:314:51

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/alerts?status=resolved&limit=50 HTTP/1.1" 200 122 "-" "-"
  console.log
    ✅ Alert test_alert_123 acknowledge requested by user: test-user-123

      at log (routes/alerts.js:409:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "PUT /api/alerts/test_alert_123/acknowledge HTTP/1.1" 200 286 "-" "-"
  console.log
    ✅ Alert test_alert_456 dismiss requested by user: test-user-123

      at log (routes/alerts.js:409:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "PUT /api/alerts/test_alert_456/acknowledge HTTP/1.1" 200 278 "-" "-"
  console.log
    ✅ Alert test_alert_789 acknowledge requested by user: test-user-123

      at log (routes/alerts.js:409:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "PUT /api/alerts/test_alert_789/acknowledge HTTP/1.1" 200 286 "-" "-"
  console.log
    😴 Alert test_alert_snooze snooze requested by user: test-user-123 for 60 minutes

      at log (routes/alerts.js:441:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "PUT /api/alerts/test_alert_snooze/snooze HTTP/1.1" 200 275 "-" "-"
  console.log
    😴 Alert test_alert_custom_snooze snooze requested by user: test-user-123 for 120 minutes

      at log (routes/alerts.js:441:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "PUT /api/alerts/test_alert_custom_snooze/snooze HTTP/1.1" 200 291 "-" "-"
  console.log
    😴 Alert test_alert_time_validate snooze requested by user: test-user-123 for 30 minutes

      at log (routes/alerts.js:441:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "PUT /api/alerts/test_alert_time_validate/snooze HTTP/1.1" 200 289 "-" "-"
  console.log
    🆕 New alert creation requested by user: test-user-123 for AAPL

      at log (routes/alerts.js:484:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "POST /api/alerts HTTP/1.1" 201 383 "-" "-"
  console.log
    🆕 New alert creation requested by user: test-user-123 for TSLA

      at log (routes/alerts.js:484:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "POST /api/alerts HTTP/1.1" 201 377 "-" "-"
  console.log
    📊 Alerts summary requested for user: dev-user-bypass, timeframe: 24h

      at log (routes/alerts.js:528:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/alerts/summary HTTP/1.1" 200 1367 "-" "-"
  console.log
    📊 Alerts summary requested for user: dev-user-bypass, timeframe: 1h

      at log (routes/alerts.js:528:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/alerts/summary?timeframe=1h HTTP/1.1" 200 1366 "-" "-"
  console.log
    📊 Alerts summary requested for user: dev-user-bypass, timeframe: 6h

      at log (routes/alerts.js:528:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/alerts/summary?timeframe=6h HTTP/1.1" 200 1366 "-" "-"
  console.log
    📊 Alerts summary requested for user: dev-user-bypass, timeframe: 24h

      at log (routes/alerts.js:528:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/alerts/summary?timeframe=24h HTTP/1.1" 200 1367 "-" "-"
  console.log
    📊 Alerts summary requested for user: dev-user-bypass, timeframe: 7d

      at log (routes/alerts.js:528:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/alerts/summary?timeframe=7d HTTP/1.1" 200 1366 "-" "-"
  console.log
    📊 Alerts summary requested for user: dev-user-bypass, timeframe: 30d

      at log (routes/alerts.js:528:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/alerts/summary?timeframe=30d HTTP/1.1" 200 1367 "-" "-"
  console.log
    📊 Alerts summary requested for user: dev-user-bypass, timeframe: invalid

      at log (routes/alerts.js:528:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/alerts/summary?timeframe=invalid HTTP/1.1" 400 115 "-" "-"
  console.log
    📊 Alerts summary requested for user: dev-user-bypass, timeframe: 24h

      at log (routes/alerts.js:528:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/alerts/summary?include_trends=true HTTP/1.1" 200 1367 "-" "-"
  console.log
    📊 Alerts summary requested for user: dev-user-bypass, timeframe: 24h

      at log (routes/alerts.js:528:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/alerts/summary?include_stats=true HTTP/1.1" 200 1367 "-" "-"
  console.log
    📊 Alerts summary requested for user: dev-user-bypass, timeframe: 24h

      at log (routes/alerts.js:528:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/alerts/summary HTTP/1.1" 200 1367 "-" "-"
  console.log
    ⚙️ Alert settings requested for user: dev-user-bypass

      at log (routes/alerts.js:805:13)

  console.error
    Alert settings error: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/alerts.js:825:24)

      1053 |     });
      1054 |   } catch (error) {
    > 1055 |     console.error("Alert settings error:", error);
           |             ^
      1056 |     res.status(500).json({
      1057 |       success: false,
      1058 |       error: "Failed to fetch alert settings",

      at error (routes/alerts.js:1055:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/alerts/settings HTTP/1.1" 500 162 "-" "-"
  console.log
    ⚙️ Alert settings requested for user: dev-user-bypass

      at log (routes/alerts.js:805:13)

  console.error
    Alert settings error: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/alerts.js:825:24)

      1053 |     });
      1054 |   } catch (error) {
    > 1055 |     console.error("Alert settings error:", error);
           |             ^
      1056 |     res.status(500).json({
      1057 |       success: false,
      1058 |       error: "Failed to fetch alert settings",

      at error (routes/alerts.js:1055:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/alerts/settings HTTP/1.1" 500 162 "-" "-"
  console.log
    ⚙️ Alert settings requested for user: dev-user-bypass

      at log (routes/alerts.js:805:13)

  console.error
    Alert settings error: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/alerts.js:825:24)

      1053 |     });
      1054 |   } catch (error) {
    > 1055 |     console.error("Alert settings error:", error);
           |             ^
      1056 |     res.status(500).json({
      1057 |       success: false,
      1058 |       error: "Failed to fetch alert settings",

      at error (routes/alerts.js:1055:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/alerts/settings HTTP/1.1" 500 162 "-" "-"
  console.log
    ⚙️ Alert settings requested for user: dev-user-bypass

      at log (routes/alerts.js:805:13)

  console.error
    Alert settings error: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/alerts.js:825:24)

      1053 |     });
      1054 |   } catch (error) {
    > 1055 |     console.error("Alert settings error:", error);
           |             ^
      1056 |     res.status(500).json({
      1057 |       success: false,
      1058 |       error: "Failed to fetch alert settings",

      at error (routes/alerts.js:1055:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/alerts/settings HTTP/1.1" 500 162 "-" "-"
  console.log
    📋 Alert history requested for user: test-user-123

      at log (routes/alerts.js:1282:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/alerts/history HTTP/1.1" 200 224 "-" "-"
  console.log
    📋 Alert history requested for user: test-user-123

      at log (routes/alerts.js:1282:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/alerts/history?limit=50&status=resolved&category=price HTTP/1.1" 200 230 "-" "-"
  console.log
    📋 Alert rules requested for user: dev-user-bypass

      at log (routes/alerts.js:1400:13)

  console.error
    Database query error for alert rules: Cannot read properties of undefined (reading 'rows')

      1431 |       });
      1432 |     } catch (dbError) {
    > 1433 |       console.error("Database query error for alert rules:", dbError.message);
           |               ^
      1434 |       // Return empty rules instead of hardcoded data
      1435 |       res.json({
      1436 |         success: true,

      at error (routes/alerts.js:1433:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/alerts/rules HTTP/1.1" 200 212 "-" "-"
  console.log
    📋 Alert rules requested for user: dev-user-bypass

      at log (routes/alerts.js:1400:13)

  console.error
    Database query error for alert rules: Cannot read properties of undefined (reading 'rows')

      1431 |       });
      1432 |     } catch (dbError) {
    > 1433 |       console.error("Database query error for alert rules:", dbError.message);
           |               ^
      1434 |       // Return empty rules instead of hardcoded data
      1435 |       res.json({
      1436 |         success: true,

      at error (routes/alerts.js:1433:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:46 +0000] "GET /api/alerts/rules HTTP/1.1" 200 212 "-" "-"
  console.log
    🔗 Alert webhooks requested for user: test-user-123, status: all, type: all

      at log (routes/alerts.js:1468:13)

  console.log
    🔗 Fetching webhook configurations for user: test-user-123

      at log (routes/alerts.js:1476:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/alerts/webhooks HTTP/1.1" 200 749 "-" "-"
  console.log
    🔗 Alert webhooks requested for user: test-user-123, status: active, type: slack

      at log (routes/alerts.js:1468:13)

  console.log
    🔗 Fetching webhook configurations for user: test-user-123

      at log (routes/alerts.js:1476:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/alerts/webhooks?status=active&webhook_type=slack&limit=10 HTTP/1.1" 200 377 "-" "-"
  console.log
    🚨 Creating new alert for user: test-user-123, symbol: NVDA

      at log (routes/alerts.js:1801:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "POST /api/alerts/create HTTP/1.1" 201 623 "-" "-"
  console.log
    🚨 Creating new alert for user: test-user-123, symbol: msft

      at log (routes/alerts.js:1801:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "POST /api/alerts/create HTTP/1.1" 201 623 "-" "-"
  console.log
    🚨 Creating new alert for user: test-user-123, symbol: AAPL

      at log (routes/alerts.js:1801:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "POST /api/alerts/create HTTP/1.1" 400 114 "-" "-"
  console.log
    🚨 Creating new alert for user: test-user-123, symbol: undefined

      at log (routes/alerts.js:1801:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "POST /api/alerts/create HTTP/1.1" 400 99 "-" "-"
  console.log
    🗑️ Deleting alert alert_to_delete_123 for user: test-user-123

      at log (routes/alerts.js:1861:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "DELETE /api/alerts/delete/alert_to_delete_123 HTTP/1.1" 200 433 "-" "-"
  console.log
    🗑️ Deleting alert alert_default_reason for user: test-user-123

      at log (routes/alerts.js:1861:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "DELETE /api/alerts/delete/alert_default_reason HTTP/1.1" 200 433 "-" "-"
  console.log
    🗑️ Deleting alert delete for user: test-user-123

      at log (routes/alerts.js:2388:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "DELETE /api/alerts/delete/ HTTP/1.1" 404 43 "-" "-"
  console.log
    💰 Price alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:1916:13)

  console.error
    Price alerts error: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/alerts.js:1955:33)

      2060 |     });
      2061 |   } catch (error) {
    > 2062 |     console.error("Price alerts error:", error);
           |             ^
      2063 |     res.status(500).json({
      2064 |       success: false,
      2065 |       error: "Failed to fetch price alerts",

      at error (routes/alerts.js:2062:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/alerts/price HTTP/1.1" 500 160 "-" "-"
  console.log
    💰 Price alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:1916:13)

  console.error
    Price alerts error: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/alerts.js:1955:33)

      2060 |     });
      2061 |   } catch (error) {
    > 2062 |     console.error("Price alerts error:", error);
           |             ^
      2063 |     res.status(500).json({
      2064 |       success: false,
      2065 |       error: "Failed to fetch price alerts",

      at error (routes/alerts.js:2062:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/alerts/price?symbol=AAPL HTTP/1.1" 500 160 "-" "-"
  console.log
    💰 Price alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:1916:13)

  console.error
    Price alerts error: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/alerts.js:1955:33)

      2060 |     });
      2061 |   } catch (error) {
    > 2062 |     console.error("Price alerts error:", error);
           |             ^
      2063 |     res.status(500).json({
      2064 |       success: false,
      2065 |       error: "Failed to fetch price alerts",

      at error (routes/alerts.js:2062:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/alerts/price?threshold_min=100&threshold_max=200 HTTP/1.1" 500 160 "-" "-"
  console.log
    💰 Price alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:1916:13)

  console.error
    Price alerts error: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/alerts.js:1955:33)

      2060 |     });
      2061 |   } catch (error) {
    > 2062 |     console.error("Price alerts error:", error);
           |             ^
      2063 |     res.status(500).json({
      2064 |       success: false,
      2065 |       error: "Failed to fetch price alerts",

      at error (routes/alerts.js:2062:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/alerts/price?alert_type=stop_loss&status=active HTTP/1.1" 500 160 "-" "-"
  console.log
    ✏️ Updating alert alert_to_update_123 for user: test-user-123

      at log (routes/alerts.js:2283:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "PUT /api/alerts/update/alert_to_update_123 HTTP/1.1" 200 528 "-" "-"
  console.log
    ✏️ Updating alert alert_defaults_123 for user: test-user-123

      at log (routes/alerts.js:2283:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "PUT /api/alerts/update/alert_defaults_123 HTTP/1.1" 200 483 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "PUT /api/alerts/update/ HTTP/1.1" 404 124 "-" "-"
  console.log
    ⚙️ Alert settings requested for user: dev-user-bypass

      at log (routes/alerts.js:805:13)

  console.error
    Alert settings error: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/alerts.js:825:24)

      1053 |     });
      1054 |   } catch (error) {
    > 1055 |     console.error("Alert settings error:", error);
           |             ^
      1056 |     res.status(500).json({
      1057 |       success: false,
      1058 |       error: "Failed to fetch alert settings",

      at error (routes/alerts.js:1055:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/alerts/settings HTTP/1.1" 500 162 "-" "-"
  console.log
    📋 Alert rules requested for user: dev-user-bypass

      at log (routes/alerts.js:1400:13)

  console.error
    Database query error for alert rules: Cannot read properties of undefined (reading 'rows')

      1431 |       });
      1432 |     } catch (dbError) {
    > 1433 |       console.error("Database query error for alert rules:", dbError.message);
           |               ^
      1434 |       // Return empty rules instead of hardcoded data
      1435 |       res.json({
      1436 |         success: true,

      at error (routes/alerts.js:1433:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/alerts/rules HTTP/1.1" 200 212 "-" "-"
  console.log
    📊 Alerts summary requested for user: dev-user-bypass, timeframe: 24h

      at log (routes/alerts.js:528:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/alerts/summary HTTP/1.1" 200 1367 "-" "-"
FAIL tests/integration/routes/alerts.integration.test.js
  ● Alerts Routes › GET /api/alerts/active › should return active alerts with proper structure

    expect(received).toHaveProperty(path)

    Expected path: "summary"
    Received path: []

    Received value: {"alerts": [], "filters": {"alert_type": "all", "severity": "all", "status": "active"}, "message": "No alerts found or database query returned invalid format", "pagination": {"hasMore": false, "limit": 50, "offset": 0, "page": 1}, "total": 0}

      61 |         expect(response.body.success).toBe(true);
      62 |         expect(response.body.data).toHaveProperty("alerts");
    > 63 |         expect(response.body.data).toHaveProperty("summary");
         |                                    ^
      64 |         expect(response.body.filters).toHaveProperty(
      65 |           "user_id",
      66 |           "dev-user-bypass"

      at Object.toHaveProperty (tests/integration/routes/alerts.integration.test.js:63:36)

  ● Alerts Routes › GET /api/alerts/active › should handle query parameters

    TypeError: Cannot read properties of undefined (reading 'user_id')

      82 |       if (response.status === 200) {
      83 |         expect(response.body.success).toBe(true);
    > 84 |         expect(response.body.filters.user_id).toBe("dev-user-bypass");
         |                                      ^
      85 |       } else {
      86 |         expect(response.body.success).toBe(false);
      87 |       }

      at Object.user_id (tests/integration/routes/alerts.integration.test.js:84:38)

  ● Alerts Routes › PUT /api/alerts/:alertId/acknowledge › should acknowledge alert successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: "dev-user-bypass"
    Received: "test-user-123"

      133 |       expect(response.body.data.alert_id).toBe(alertId);
      134 |       expect(response.body.data.action).toBe("acknowledge");
    > 135 |       expect(response.body.data.acknowledged_by).toBe("dev-user-bypass");
          |                                                  ^
      136 |       expect(response.body.data.status).toBe("acknowledged");
      137 |       expect(response.body).toHaveProperty("message");
      138 |       expect(response.body).toHaveProperty("timestamp");

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:135:50)

  ● Alerts Routes › PUT /api/alerts/:alertId/snooze › should snooze alert with default duration

    expect(received).toBe(expected) // Object.is equality

    Expected: "dev-user-bypass"
    Received: "test-user-123"

      179 |       expect(response.body.data.alert_id).toBe(alertId);
      180 |       expect(response.body.data.duration_minutes).toBe(60);
    > 181 |       expect(response.body.data.snoozed_by).toBe("dev-user-bypass");
          |                                             ^
      182 |       expect(response.body.data.status).toBe("snoozed");
      183 |       expect(response.body.data).toHaveProperty("snooze_until");
      184 |     });

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:181:45)

  ● Alerts Routes › POST /api/alerts › should create new alert

    expect(received).toBe(expected) // Object.is equality

    Expected: "dev-user-bypass"
    Received: "test-user-123"

      234 |       expect([200, 201]).toContain(response.status);
      235 |       expect(response.body.success).toBe(true);
    > 236 |       expect(response.body.data.user_id).toBe("dev-user-bypass");
          |                                          ^
      237 |       if (response.body.data && response.body.data.symbol) { expect(response.body.data.symbol).toBe("AAPL"); } else { expect(response.body.data).toBeDefined(); }
      238 |       expect(response.body.data.category).toBe("price");
      239 |       expect(response.body.data.condition).toBe("above");

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:236:42)

  ● Alerts Routes › GET /api/alerts/settings › should return comprehensive alert settings

    expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [200, 201, 204]

      360 |         .set("Authorization", "Bearer dev-bypass-token");
      361 |
    > 362 |       expect([200, 201, 204]).toContain(response.status);
          |                               ^
      363 |       expect(response.body.success).toBe(true);
      364 |       expect(response.body.data).toHaveProperty("settings");
      365 |       expect(response.body.data).toHaveProperty("summary");

      at Object.toContain (tests/integration/routes/alerts.integration.test.js:362:31)

  ● Alerts Routes › GET /api/alerts/settings › should include notification preferences

    TypeError: Cannot read properties of undefined (reading 'settings')

      382 |
      383 |       const notifications =
    > 384 |         response.body.data.settings.notification_preferences;
          |                            ^
      385 |       expect(notifications).toHaveProperty("email_enabled");
      386 |       expect(notifications).toHaveProperty("sms_enabled");
      387 |       expect(notifications).toHaveProperty("push_enabled");

      at Object.settings (tests/integration/routes/alerts.integration.test.js:384:28)

  ● Alerts Routes › GET /api/alerts/settings › should include alert categories

    TypeError: Cannot read properties of undefined (reading 'settings')

      394 |         .set("Authorization", "Bearer dev-bypass-token");
      395 |
    > 396 |       const categories = response.body.data.settings.alert_categories;
          |                                             ^
      397 |       expect(categories).toHaveProperty("price_alerts");
      398 |       expect(categories).toHaveProperty("volume_alerts");
      399 |       expect(categories).toHaveProperty("earnings_alerts");

      at Object.settings (tests/integration/routes/alerts.integration.test.js:396:45)

  ● Alerts Routes › GET /api/alerts/settings › should include subscription info

    TypeError: Cannot read properties of undefined (reading 'settings')

      410 |         .set("Authorization", "Bearer dev-bypass-token");
      411 |
    > 412 |       const subscription = response.body.data.settings.subscription_info;
          |                                               ^
      413 |       expect(subscription).toHaveProperty("plan");
      414 |       expect(subscription).toHaveProperty("alerts_used_today");
      415 |       expect(subscription).toHaveProperty("alerts_limit_daily");

      at Object.settings (tests/integration/routes/alerts.integration.test.js:412:47)

  ● Alerts Routes › POST /api/alerts/create › should create alert with required fields

    expect(received).toBe(expected) // Object.is equality

    Expected: "dev-user-bypass"
    Received: "test-user-123"

      532 |       expect(response.body.data.alert.symbol).toBe("NVDA");
      533 |       expect(response.body.data.alert.threshold).toBe(500.0);
    > 534 |       expect(response.body.data.alert.user_id).toBe("dev-user-bypass");
          |                                                ^
      535 |       expect(response.body.data.alert.status).toBe("active");
      536 |       expect(response.body.data).toHaveProperty("next_actions");
      537 |     });

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:534:48)

  ● Alerts Routes › DELETE /api/alerts/delete/:alertId › should delete alert successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: "dev-user-bypass"
    Received: "test-user-123"

      595 |         expect(response.body.data.deleted_alert.alert_id).toBe(alertId);
      596 |         if (response.body.data && response.body.data.deleted_alert) {
    > 597 |           expect(response.body.data.deleted_alert.user_id).toBe("dev-user-bypass");
          |                                                            ^
      598 |           expect(response.body.data.deleted_alert.status).toBe("deleted");
      599 |           expect(response.body.data.deleted_alert.deletion_reason).toBe(
      600 |             "no_longer_needed"

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:597:60)


  ● Test suite failed to run

    Cannot add a hook after tests have started running. Hooks must be defined synchronously.

      30 | describe("Alerts Routes", () => {
      31 |   beforeAll(async () => {
    > 32 |     beforeEach(() => {
         |     ^
      33 |     jest.clearAllMocks();
      34 |     query.mockImplementation((sql, params) => {
      35 |       // Default: return empty rows for all queries

      at eventHandler (node_modules/jest-circus/build/eventHandler.js:104:11)
      at Object.beforeEach (tests/integration/routes/alerts.integration.test.js:32:5)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - test [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    📊 Portfolio summary requested for user: test-user-123

      at log (routes/portfolio.js:175:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio/summary HTTP/1.1" 200 655 "-" "-"
  console.log
    📋 Portfolio positions requested for user: test-user-123

      at log (routes/portfolio.js:282:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
  console.log
    🔔 Active alerts requested for user: test-user-123, status: active

      at log (routes/alerts.js:39:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/alerts/active HTTP/1.1" 200 501 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "POST /api/portfolio/analyze HTTP/1.1" 501 273 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    📊 Portfolio summary requested for user: test-user-123

      at log (routes/portfolio.js:175:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio/summary HTTP/1.1" 200 655 "-" "-"
  console.log
    📋 Portfolio positions requested for user: test-user-123

      at log (routes/portfolio.js:282:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
  console.log
    🔔 Active alerts requested for user: test-user-123, status: active

      at log (routes/alerts.js:39:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/alerts/active HTTP/1.1" 200 501 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    📊 Portfolio summary requested for user: test-user-123

      at log (routes/portfolio.js:175:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio/summary HTTP/1.1" 200 655 "-" "-"
  console.log
    📋 Portfolio positions requested for user: test-user-123

      at log (routes/portfolio.js:282:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
  console.log
    🔔 Active alerts requested for user: test-user-123, status: active

      at log (routes/alerts.js:39:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/alerts/active HTTP/1.1" 200 501 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    📊 Portfolio summary requested for user: test-user-123

      at log (routes/portfolio.js:175:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio/summary HTTP/1.1" 200 655 "-" "-"
  console.log
    📋 Portfolio positions requested for user: test-user-123

      at log (routes/portfolio.js:282:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
  console.log
    Portfolio analytics endpoint called for authenticated user: test-user-123, timeframe: 1y

      at log (routes/portfolio.js:353:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio/analytics HTTP/1.1" 200 679 "-" "-"
  console.log
    📊 Portfolio analysis requested for user: test-user-123, period: 1y

      at log (routes/portfolio.js:602:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio/analysis HTTP/1.1" 200 690 "-" "-"
  console.log
    Portfolio risk analysis endpoint called for user: test-user-123

      at log (routes/portfolio.js:824:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio/risk-analysis HTTP/1.1" 200 266 "-" "-"
  console.log
    Portfolio performance endpoint called for user: test-user-123, timeframe: 1y

      at log (routes/portfolio.js:1180:13)

  console.log
    📊 Retrieved 0 performance data points

      at log (routes/portfolio.js:1208:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio/performance HTTP/1.1" 200 451 "-" "-"
  console.log
    Portfolio holdings endpoint called for authenticated user: test-user-123

      at log (routes/portfolio.js:1734:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio/holdings HTTP/1.1" 200 496 "-" "-"
  console.log
    📈 Portfolio transactions requested for user: test-user-123, type: all, limit: 50

      at log (routes/portfolio.js:5525:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio/transactions HTTP/1.1" 200 525 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/trades HTTP/1.1" 200 281 "-" "-"
  console.log
    🔔 Active alerts requested for user: test-user-123, status: active

      at log (routes/alerts.js:39:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/alerts/active HTTP/1.1" 200 501 "-" "-"
  console.log
    📊 Backtest results requested - ID: all, limit: 50

      at log (routes/backtest.js:821:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/backtest/results HTTP/1.1" 200 934 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "POST /api/portfolio/analyze HTTP/1.1" 501 273 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 404 131 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 404 131 "-" "-"
FAIL tests/integration/auth/auth-flow.integration.test.js
  Authentication Flow Integration
    Token-Based Authentication Flow
      ✓ should handle dev bypass token authentication (6 ms)
      ✕ should reject invalid tokens (3 ms)
      ✕ should handle missing authorization header (2 ms)
    Authorization Header Validation
      ✓ should validate Bearer token format (8 ms)
      ✓ should handle case sensitivity in authorization (5 ms)
    Authentication Context Propagation
      ✓ should maintain authentication context across request pipeline (11 ms)
      ✕ should handle authentication in POST/PUT requests (4 ms)
    Multi-Request Authentication Sessions
      ✓ should handle multiple sequential authenticated requests (13 ms)
      ✓ should handle concurrent authenticated requests (6 ms)
    Authentication Error Handling
      ✕ should provide consistent error responses for auth failures (3 ms)
      ✕ should not leak sensitive information in auth errors (2 ms)
    Route-Specific Authentication
      ✓ should enforce authentication on protected routes (28 ms)
      ✓ should allow public access to public routes (11 ms)
      ✕ should handle mixed public/protected route access (4 ms)
    Authentication Performance
      ✓ should handle authentication efficiently (6 ms)
      ✓ should handle rapid authentication attempts (12 ms)
    Authentication Integration with Other Middleware
      ✕ should work with request validation (3 ms)
      ✕ should work with error handling middleware (3 ms)

  ● Authentication Flow Integration › Token-Based Authentication Flow › should reject invalid tokens

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 500]

      85 |           .set("Authorization", token);
      86 |
    > 87 |         expect([401, 500]).toContain(response.status);
         |                            ^
      88 |
      89 |         // Handle both custom API format and Express default format
      90 |         const hasCustomFormat = Object.prototype.hasOwnProperty.call(

      at Object.toContain (tests/integration/auth/auth-flow.integration.test.js:87:28)

  ● Authentication Flow Integration › Token-Based Authentication Flow › should handle missing authorization header

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 403, 500]

      115 |         const response = await request(app).get(endpoint);
      116 |
    > 117 |         expect([401, 403, 500]).toContain(response.status);
          |                                 ^
      118 |
      119 |         // Should return authentication error
      120 |         if (response.status === 401 || response.status === 403) {

      at Object.toContain (tests/integration/auth/auth-flow.integration.test.js:117:33)

  ● Authentication Flow Integration › Authentication Context Propagation › should handle authentication in POST/PUT requests

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [401, 403]

      246 |           .send(test.body);
      247 |
    > 248 |         expect([401, 403]).toContain(unauthResponse.status);
          |                            ^
      249 |         expect(unauthResponse.body).toHaveProperty("success", false);
      250 |
      251 |         // Test with auth

      at Object.toContain (tests/integration/auth/auth-flow.integration.test.js:248:28)

  ● Authentication Flow Integration › Authentication Error Handling › should provide consistent error responses for auth failures

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 500]

      342 |         const response = await requestBuilder;
      343 |
    > 344 |         expect([401, 500]).toContain(response.status);
          |                            ^
      345 |
      346 |         // Handle both custom API format and Express default format
      347 |         const hasCustomFormat = Object.prototype.hasOwnProperty.call(

      at Object.toContain (tests/integration/auth/auth-flow.integration.test.js:344:28)

  ● Authentication Flow Integration › Authentication Error Handling › should not leak sensitive information in auth errors

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 500]

      373 |           .set("Authorization", token);
      374 |
    > 375 |         expect([401, 500]).toContain(response.status);
          |                            ^
      376 |
      377 |         const errorMessage = (
      378 |           response.body?.error ||

      at Object.toContain (tests/integration/auth/auth-flow.integration.test.js:375:28)

  ● Authentication Flow Integration › Route-Specific Authentication › should handle mixed public/protected route access

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 403]

      455 |       // Access protected route without auth
      456 |       const protectedResponse = await request(app).get("/api/portfolio");
    > 457 |       expect([401, 403]).toContain(protectedResponse.status);
          |                          ^
      458 |
      459 |       // Access protected route with auth
      460 |       const authResponse = await request(app)

      at Object.toContain (tests/integration/auth/auth-flow.integration.test.js:457:26)

  ● Authentication Flow Integration › Authentication Integration with Other Middleware › should work with request validation

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [200, 404]

      542 |         .send({ symbols: ["AAPL"] });
      543 |
    > 544 |       expect([200, 404]).toContain(validResponse.status);
          |                          ^
      545 |       expect([401, 403]).not.toContain(validResponse.status);
      546 |
      547 |       // Invalid request with auth (should get validation error, not auth error)

      at Object.toContain (tests/integration/auth/auth-flow.integration.test.js:544:26)

  ● Authentication Flow Integration › Authentication Integration with Other Middleware › should work with error handling middleware

    expect(received).toContain(expected) // indexOf

    Expected value: 404
    Received array: [401, 403]

      585 |       const noAuthResponse = await request(app).get(endpoint);
      586 |
    > 587 |       expect([401, 403]).toContain(noAuthResponse.status);
          |                          ^
      588 |
      589 |       // Handle both custom API format and Express default format
      590 |       const hasCustomFormat2 = Object.prototype.hasOwnProperty.call(

      at Object.toContain (tests/integration/auth/auth-flow.integration.test.js:587:26)

  console.log
    📋 Orders endpoint called for user: test-user-123

      at log (routes/orders.js:92:11)

  console.warn
    Column check query returned invalid result: { rows: [] }

      17 |     const result = await query(columnCheckQuery, [tableName, columnName]);
      18 |     if (!result || !result.rows || result.rows.length === 0) {
    > 19 |       console.warn('Column check query returned invalid result:', result);
         |               ^
      20 |       return false;
      21 |     }
      22 |     return result.rows[0].exists;

      at warn (routes/orders.js:19:15)
      at routes/orders.js:115:29

  console.log
    Executing orders query with timeout protection

      at log (routes/orders.js:170:15)

  console.error
    Orders query error: Cannot read properties of undefined (reading 'count')

      191 |           : 0;
      192 |     } catch (error) {
    > 193 |       console.error(`Orders query error:`, error.message);
          |               ^
      194 |
      195 |       return res.status(500).json({
      196 |         success: false,

      at error (routes/orders.js:193:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/orders HTTP/1.1" 500 152 "-" "-"
  console.log
    📋 Orders endpoint called for user: test-user-123

      at log (routes/orders.js:92:11)

  console.warn
    Column check query returned invalid result: { rows: [] }

      17 |     const result = await query(columnCheckQuery, [tableName, columnName]);
      18 |     if (!result || !result.rows || result.rows.length === 0) {
    > 19 |       console.warn('Column check query returned invalid result:', result);
         |               ^
      20 |       return false;
      21 |     }
      22 |     return result.rows[0].exists;

      at warn (routes/orders.js:19:15)
      at routes/orders.js:115:29

  console.log
    ⚠️ Status filter 'filled' ignored - orders table has no status column

      at log (routes/orders.js:126:15)

  console.log
    Executing orders query with timeout protection

      at log (routes/orders.js:170:15)

  console.error
    Orders query error: Cannot read properties of undefined (reading 'count')

      191 |           : 0;
      192 |     } catch (error) {
    > 193 |       console.error(`Orders query error:`, error.message);
          |               ^
      194 |
      195 |       return res.status(500).json({
      196 |         success: false,

      at error (routes/orders.js:193:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/orders?status=filled HTTP/1.1" 500 152 "-" "-"
  console.log
    📋 Orders endpoint called for user: test-user-123

      at log (routes/orders.js:92:11)

  console.warn
    Column check query returned invalid result: { rows: [] }

      17 |     const result = await query(columnCheckQuery, [tableName, columnName]);
      18 |     if (!result || !result.rows || result.rows.length === 0) {
    > 19 |       console.warn('Column check query returned invalid result:', result);
         |               ^
      20 |       return false;
      21 |     }
      22 |     return result.rows[0].exists;

      at warn (routes/orders.js:19:15)
      at routes/orders.js:115:29

  console.log
    Executing orders query with timeout protection

      at log (routes/orders.js:170:15)

  console.error
    Orders query error: Cannot read properties of undefined (reading 'count')

      191 |           : 0;
      192 |     } catch (error) {
    > 193 |       console.error(`Orders query error:`, error.message);
          |               ^
      194 |
      195 |       return res.status(500).json({
      196 |         success: false,

      at error (routes/orders.js:193:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/orders?side=buy HTTP/1.1" 500 152 "-" "-"
  console.log
    📋 Orders endpoint called for user: test-user-123

      at log (routes/orders.js:92:11)

  console.warn
    Column check query returned invalid result: { rows: [] }

      17 |     const result = await query(columnCheckQuery, [tableName, columnName]);
      18 |     if (!result || !result.rows || result.rows.length === 0) {
    > 19 |       console.warn('Column check query returned invalid result:', result);
         |               ^
      20 |       return false;
      21 |     }
      22 |     return result.rows[0].exists;

      at warn (routes/orders.js:19:15)
      at routes/orders.js:115:29

  console.log
    Executing orders query with timeout protection

      at log (routes/orders.js:170:15)

  console.error
    Orders query error: Cannot read properties of undefined (reading 'count')

      191 |           : 0;
      192 |     } catch (error) {
    > 193 |       console.error(`Orders query error:`, error.message);
          |               ^
      194 |
      195 |       return res.status(500).json({
      196 |         success: false,

      at error (routes/orders.js:193:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/orders?limit=10&offset=5 HTTP/1.1" 500 152 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/orders HTTP/1.1" 200 134 "-" "-"
  console.log
    Order details request for user: test-user-123, order: test-order-123

      at log (routes/orders.js:1767:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/orders/test-order-123 HTTP/1.1" 404 173 "-" "-"
  console.log
    Order details request for user: test-user-123, order: non-existent-order

      at log (routes/orders.js:1767:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/orders/non-existent-order HTTP/1.1" 404 181 "-" "-"
  console.log
    Order details request for user: test-user-123, order: test-order-123

      at log (routes/orders.js:1767:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/orders/test-order-123 HTTP/1.1" 404 173 "-" "-"
  console.log
    📝 New order submission for user: test-user-123, symbol: AAPL, side: buy

      at log (routes/orders.js:429:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "POST /api/orders HTTP/1.1" 200 667 "-" "-"
  console.log
    📝 New order submission for user: test-user-123, symbol: AAPL, side: undefined

      at log (routes/orders.js:429:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "POST /api/orders HTTP/1.1" 400 91 "-" "-"
  console.log
    📝 New order submission for user: test-user-123, symbol: AAPL, side: buy

      at log (routes/orders.js:429:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "POST /api/orders HTTP/1.1" 400 101 "-" "-"
  console.log
    📝 New order submission for user: test-user-123, symbol: AAPL, side: buy

      at log (routes/orders.js:429:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "POST /api/orders HTTP/1.1" 400 85 "-" "-"
  console.log
    📝 New order submission for user: test-user-123, symbol: AAPL, side: buy

      at log (routes/orders.js:429:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "POST /api/orders HTTP/1.1" 200 667 "-" "-"
  console.log
    Update order request for user: test-user-123, order: test-order-123

      at log (routes/orders.js:1542:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "PUT /api/orders/test-order-123 HTTP/1.1" 400 163 "-" "-"
  console.log
    Update order request for user: test-user-123, order: test-order-123

      at log (routes/orders.js:1542:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "PUT /api/orders/test-order-123 HTTP/1.1" 400 163 "-" "-"
  console.log
    Update order request for user: test-user-123, order: test-order-123

      at log (routes/orders.js:1542:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "PUT /api/orders/test-order-123 HTTP/1.1" 400 163 "-" "-"
  console.log
    Delete order request for user: test-user-123, order: test-order-123

      at log (routes/orders.js:1677:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "DELETE /api/orders/test-order-123 HTTP/1.1" 400 163 "-" "-"
  console.log
    Delete order request for user: test-user-123, order: non-existent-order

      at log (routes/orders.js:1677:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "DELETE /api/orders/non-existent-order HTTP/1.1" 400 167 "-" "-"
  console.log
    Delete order request for user: test-user-123, order: test-order-123

      at log (routes/orders.js:1677:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "DELETE /api/orders/test-order-123 HTTP/1.1" 400 163 "-" "-"
  console.log
    📋 Order history requested for user: test-user-123

      at log (routes/orders.js:851:13)

  console.warn
    Column check query returned invalid result: { rows: [] }

      17 |     const result = await query(columnCheckQuery, [tableName, columnName]);
      18 |     if (!result || !result.rows || result.rows.length === 0) {
    > 19 |       console.warn('Column check query returned invalid result:', result);
         |               ^
      20 |       return false;
      21 |     }
      22 |     return result.rows[0].exists;

      at warn (routes/orders.js:19:15)
      at routes/orders.js:854:29

  console.error
    Order history error: TypeError: Cannot read properties of undefined (reading 'total')
        at total (/home/stocks/algo/webapp/lambda/routes/orders.js:890:47)

      899 |     });
      900 |   } catch (error) {
    > 901 |     console.error("Order history error:", error);
          |             ^
      902 |     res.status(500).json({
      903 |       success: false,
      904 |       error: "Failed to fetch order history",

      at error (routes/orders.js:901:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/orders/history HTTP/1.1" 500 123 "-" "-"
  console.log
    📋 Order history requested for user: test-user-123

      at log (routes/orders.js:851:13)

  console.warn
    Column check query returned invalid result: { rows: [] }

      17 |     const result = await query(columnCheckQuery, [tableName, columnName]);
      18 |     if (!result || !result.rows || result.rows.length === 0) {
    > 19 |       console.warn('Column check query returned invalid result:', result);
         |               ^
      20 |       return false;
      21 |     }
      22 |     return result.rows[0].exists;

      at warn (routes/orders.js:19:15)
      at routes/orders.js:854:29

  console.error
    Order history error: TypeError: Cannot read properties of undefined (reading 'total')
        at total (/home/stocks/algo/webapp/lambda/routes/orders.js:890:47)

      899 |     });
      900 |   } catch (error) {
    > 901 |     console.error("Order history error:", error);
          |             ^
      902 |     res.status(500).json({
      903 |       success: false,
      904 |       error: "Failed to fetch order history",

      at error (routes/orders.js:901:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/orders/history?from=2023-01-01&to=2023-12-31 HTTP/1.1" 500 123 "-" "-"
  console.log
    📋 Order history requested for user: test-user-123

      at log (routes/orders.js:851:13)

  console.warn
    Column check query returned invalid result: { rows: [] }

      17 |     const result = await query(columnCheckQuery, [tableName, columnName]);
      18 |     if (!result || !result.rows || result.rows.length === 0) {
    > 19 |       console.warn('Column check query returned invalid result:', result);
         |               ^
      20 |       return false;
      21 |     }
      22 |     return result.rows[0].exists;

      at warn (routes/orders.js:19:15)
      at routes/orders.js:854:29

  console.error
    Order history error: TypeError: Cannot read properties of undefined (reading 'total')
        at total (/home/stocks/algo/webapp/lambda/routes/orders.js:890:47)

      899 |     });
      900 |   } catch (error) {
    > 901 |     console.error("Order history error:", error);
          |             ^
      902 |     res.status(500).json({
      903 |       success: false,
      904 |       error: "Failed to fetch order history",

      at error (routes/orders.js:901:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/orders/history?include_summary=true HTTP/1.1" 500 123 "-" "-"
  console.log
    📋 Order history requested for user: test-user-123

      at log (routes/orders.js:851:13)

  console.warn
    Column check query returned invalid result: { rows: [] }

      17 |     const result = await query(columnCheckQuery, [tableName, columnName]);
      18 |     if (!result || !result.rows || result.rows.length === 0) {
    > 19 |       console.warn('Column check query returned invalid result:', result);
         |               ^
      20 |       return false;
      21 |     }
      22 |     return result.rows[0].exists;

      at warn (routes/orders.js:19:15)
      at routes/orders.js:854:29

  console.error
    Order history error: TypeError: Cannot read properties of undefined (reading 'total')
        at total (/home/stocks/algo/webapp/lambda/routes/orders.js:890:47)

      899 |     });
      900 |   } catch (error) {
    > 901 |     console.error("Order history error:", error);
          |             ^
      902 |     res.status(500).json({
      903 |       success: false,
      904 |       error: "Failed to fetch order history",

      at error (routes/orders.js:901:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/orders/history HTTP/1.1" 500 123 "-" "-"
  console.log
    📝 New order submission for user: test-user-123, symbol: AAPL, side: buy

      at log (routes/orders.js:429:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "POST /api/orders HTTP/1.1" 200 667 "-" "-"
  console.log
    📋 Orders endpoint called for user: test-user-123

      at log (routes/orders.js:92:11)

  console.warn
    Column check query returned invalid result: { rows: [] }

      17 |     const result = await query(columnCheckQuery, [tableName, columnName]);
      18 |     if (!result || !result.rows || result.rows.length === 0) {
    > 19 |       console.warn('Column check query returned invalid result:', result);
         |               ^
      20 |       return false;
      21 |     }
      22 |     return result.rows[0].exists;

      at warn (routes/orders.js:19:15)
      at routes/orders.js:115:29

  console.log
    Executing orders query with timeout protection

      at log (routes/orders.js:170:15)

  console.error
    Orders query error: Cannot read properties of undefined (reading 'count')

      191 |           : 0;
      192 |     } catch (error) {
    > 193 |       console.error(`Orders query error:`, error.message);
          |               ^
      194 |
      195 |       return res.status(500).json({
      196 |         success: false,

      at error (routes/orders.js:193:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/orders HTTP/1.1" 500 152 "-" "-"
  console.log
    📋 Order history requested for user: test-user-123

      at log (routes/orders.js:851:13)

  console.warn
    Column check query returned invalid result: { rows: [] }

      17 |     const result = await query(columnCheckQuery, [tableName, columnName]);
      18 |     if (!result || !result.rows || result.rows.length === 0) {
    > 19 |       console.warn('Column check query returned invalid result:', result);
         |               ^
      20 |       return false;
      21 |     }
      22 |     return result.rows[0].exists;

      at warn (routes/orders.js:19:15)
      at routes/orders.js:854:29

  console.error
    Order history error: TypeError: Cannot read properties of undefined (reading 'total')
        at total (/home/stocks/algo/webapp/lambda/routes/orders.js:890:47)

      899 |     });
      900 |   } catch (error) {
    > 901 |     console.error("Order history error:", error);
          |             ^
      902 |     res.status(500).json({
      903 |       success: false,
      904 |       error: "Failed to fetch order history",

      at error (routes/orders.js:901:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/orders/history HTTP/1.1" 500 123 "-" "-"
  console.log
    📋 Orders endpoint called for user: test-user-123

      at log (routes/orders.js:92:11)

  console.warn
    Column check query returned invalid result: { rows: [] }

      17 |     const result = await query(columnCheckQuery, [tableName, columnName]);
      18 |     if (!result || !result.rows || result.rows.length === 0) {
    > 19 |       console.warn('Column check query returned invalid result:', result);
         |               ^
      20 |       return false;
      21 |     }
      22 |     return result.rows[0].exists;

      at warn (routes/orders.js:19:15)
      at routes/orders.js:115:29

  console.log
    Executing orders query with timeout protection

      at log (routes/orders.js:170:15)

  console.error
    Orders query error: Cannot read properties of undefined (reading 'count')

      191 |           : 0;
      192 |     } catch (error) {
    > 193 |       console.error(`Orders query error:`, error.message);
          |               ^
      194 |
      195 |       return res.status(500).json({
      196 |         success: false,

      at error (routes/orders.js:193:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/orders?limit=invalid HTTP/1.1" 500 152 "-" "-"
  console.log
    📋 Orders endpoint called for user: test-user-123

      at log (routes/orders.js:92:11)

  console.warn
    Column check query returned invalid result: { rows: [] }

      17 |     const result = await query(columnCheckQuery, [tableName, columnName]);
      18 |     if (!result || !result.rows || result.rows.length === 0) {
    > 19 |       console.warn('Column check query returned invalid result:', result);
         |               ^
      20 |       return false;
      21 |     }
      22 |     return result.rows[0].exists;

      at warn (routes/orders.js:19:15)
      at routes/orders.js:115:29

  console.log
    Executing orders query with timeout protection

      at log (routes/orders.js:170:15)

  console.error
    Orders query error: Cannot read properties of undefined (reading 'count')

      191 |           : 0;
      192 |     } catch (error) {
    > 193 |       console.error(`Orders query error:`, error.message);
          |               ^
      194 |
      195 |       return res.status(500).json({
      196 |         success: false,

      at error (routes/orders.js:193:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/orders?offset=-1 HTTP/1.1" 500 152 "-" "-"
  console.log
    📋 Orders endpoint called for user: test-user-123

      at log (routes/orders.js:92:11)

  console.warn
    Column check query returned invalid result: { rows: [] }

      17 |     const result = await query(columnCheckQuery, [tableName, columnName]);
      18 |     if (!result || !result.rows || result.rows.length === 0) {
    > 19 |       console.warn('Column check query returned invalid result:', result);
         |               ^
      20 |       return false;
      21 |     }
      22 |     return result.rows[0].exists;

      at warn (routes/orders.js:19:15)
      at routes/orders.js:115:29

  console.log
    ⚠️ Status filter 'invalid_status' ignored - orders table has no status column

      at log (routes/orders.js:126:15)

  console.log
    Executing orders query with timeout protection

      at log (routes/orders.js:170:15)

  console.error
    Orders query error: Cannot read properties of undefined (reading 'count')

      191 |           : 0;
      192 |     } catch (error) {
    > 193 |       console.error(`Orders query error:`, error.message);
          |               ^
      194 |
      195 |       return res.status(500).json({
      196 |         success: false,

      at error (routes/orders.js:193:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/orders?status=invalid_status HTTP/1.1" 500 152 "-" "-"
  console.log
    📋 Orders endpoint called for user: test-user-123

      at log (routes/orders.js:92:11)

  console.warn
    Column check query returned invalid result: { rows: [] }

      17 |     const result = await query(columnCheckQuery, [tableName, columnName]);
      18 |     if (!result || !result.rows || result.rows.length === 0) {
    > 19 |       console.warn('Column check query returned invalid result:', result);
         |               ^
      20 |       return false;
      21 |     }
      22 |     return result.rows[0].exists;

      at warn (routes/orders.js:19:15)
      at routes/orders.js:115:29

  console.log
    Executing orders query with timeout protection

      at log (routes/orders.js:170:15)

  console.error
    Orders query error: Cannot read properties of undefined (reading 'count')

      191 |           : 0;
      192 |     } catch (error) {
    > 193 |       console.error(`Orders query error:`, error.message);
          |               ^
      194 |
      195 |       return res.status(500).json({
      196 |         success: false,

      at error (routes/orders.js:193:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/orders HTTP/1.1" 500 152 "-" "-"
  console.log
    Order details request for user: test-user-123, order: '; DROP TABLE orders; --

      at log (routes/orders.js:1767:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/orders/%27%3B%20DROP%20TABLE%20orders%3B%20-- HTTP/1.1" 404 193 "-" "-"
  console.log
    Order details request for user: test-user-123, order: 1' OR '1'='1

      at log (routes/orders.js:1767:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/orders/1%27%20OR%20%271%27%3D%271 HTTP/1.1" 404 169 "-" "-"
  console.log
    Order details request for user: test-user-123, order: UNION SELECT * FROM users

      at log (routes/orders.js:1767:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/orders/UNION%20SELECT%20*%20FROM%20users HTTP/1.1" 404 195 "-" "-"
  console.log
    📋 Orders endpoint called for user: test-user-123

      at log (routes/orders.js:92:11)

  console.warn
    Column check query returned invalid result: { rows: [] }

      17 |     const result = await query(columnCheckQuery, [tableName, columnName]);
      18 |     if (!result || !result.rows || result.rows.length === 0) {
    > 19 |       console.warn('Column check query returned invalid result:', result);
         |               ^
      20 |       return false;
      21 |     }
      22 |     return result.rows[0].exists;

      at warn (routes/orders.js:19:15)
      at routes/orders.js:115:29

  console.log
    Executing orders query with timeout protection

      at log (routes/orders.js:170:15)

  console.error
    Orders query error: Cannot read properties of undefined (reading 'count')

      191 |           : 0;
      192 |     } catch (error) {
    > 193 |       console.error(`Orders query error:`, error.message);
          |               ^
      194 |
      195 |       return res.status(500).json({
      196 |         success: false,

      at error (routes/orders.js:193:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/orders HTTP/1.1" 500 152 "-" "-"
  console.log
    📋 Order history requested for user: test-user-123

      at log (routes/orders.js:851:13)

  console.warn
    Column check query returned invalid result: { rows: [] }

      17 |     const result = await query(columnCheckQuery, [tableName, columnName]);
      18 |     if (!result || !result.rows || result.rows.length === 0) {
    > 19 |       console.warn('Column check query returned invalid result:', result);
         |               ^
      20 |       return false;
      21 |     }
      22 |     return result.rows[0].exists;

      at warn (routes/orders.js:19:15)
      at routes/orders.js:854:29

  console.error
    Order history error: TypeError: Cannot read properties of undefined (reading 'total')
        at total (/home/stocks/algo/webapp/lambda/routes/orders.js:890:47)

      899 |     });
      900 |   } catch (error) {
    > 901 |     console.error("Order history error:", error);
          |             ^
      902 |     res.status(500).json({
      903 |       success: false,
      904 |       error: "Failed to fetch order history",

      at error (routes/orders.js:901:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/orders/history HTTP/1.1" 500 123 "-" "-"
  console.log
    📋 Orders endpoint called for user: test-user-123

      at log (routes/orders.js:92:11)

  console.warn
    Column check query returned invalid result: { rows: [] }

      17 |     const result = await query(columnCheckQuery, [tableName, columnName]);
      18 |     if (!result || !result.rows || result.rows.length === 0) {
    > 19 |       console.warn('Column check query returned invalid result:', result);
         |               ^
      20 |       return false;
      21 |     }
      22 |     return result.rows[0].exists;

      at warn (routes/orders.js:19:15)
      at routes/orders.js:115:29

  console.log
    Executing orders query with timeout protection

      at log (routes/orders.js:170:15)

  console.error
    Orders query error: Cannot read properties of undefined (reading 'count')

      191 |           : 0;
      192 |     } catch (error) {
    > 193 |       console.error(`Orders query error:`, error.message);
          |               ^
      194 |
      195 |       return res.status(500).json({
      196 |         success: false,

      at error (routes/orders.js:193:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/orders HTTP/1.1" 500 152 "-" "-"
  console.log
    📋 Orders endpoint called for user: test-user-123

      at log (routes/orders.js:92:11)

  console.warn
    Column check query returned invalid result: { rows: [] }

      17 |     const result = await query(columnCheckQuery, [tableName, columnName]);
      18 |     if (!result || !result.rows || result.rows.length === 0) {
    > 19 |       console.warn('Column check query returned invalid result:', result);
         |               ^
      20 |       return false;
      21 |     }
      22 |     return result.rows[0].exists;

      at warn (routes/orders.js:19:15)
      at routes/orders.js:115:29

  console.log
    Executing orders query with timeout protection

      at log (routes/orders.js:170:15)

  console.error
    Orders query error: Cannot read properties of undefined (reading 'count')

      191 |           : 0;
      192 |     } catch (error) {
    > 193 |       console.error(`Orders query error:`, error.message);
          |               ^
      194 |
      195 |       return res.status(500).json({
      196 |         success: false,

      at error (routes/orders.js:193:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/orders HTTP/1.1" 500 152 "-" "-"
  console.log
    📋 Orders endpoint called for user: test-user-123

      at log (routes/orders.js:92:11)

  console.warn
    Column check query returned invalid result: { rows: [] }

      17 |     const result = await query(columnCheckQuery, [tableName, columnName]);
      18 |     if (!result || !result.rows || result.rows.length === 0) {
    > 19 |       console.warn('Column check query returned invalid result:', result);
         |               ^
      20 |       return false;
      21 |     }
      22 |     return result.rows[0].exists;

      at warn (routes/orders.js:19:15)
      at routes/orders.js:115:29

  console.log
    Executing orders query with timeout protection

      at log (routes/orders.js:170:15)

  console.error
    Orders query error: Cannot read properties of undefined (reading 'count')

      191 |           : 0;
      192 |     } catch (error) {
    > 193 |       console.error(`Orders query error:`, error.message);
          |               ^
      194 |
      195 |       return res.status(500).json({
      196 |         success: false,

      at error (routes/orders.js:193:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/orders HTTP/1.1" 500 152 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/orders HTTP/1.1" 200 134 "-" "-"
  console.log
    📋 Recent orders requested - limit: 20, days: 7, status: all

      at log (routes/orders.js:1096:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/orders/recent HTTP/1.1" 200 149 "-" "-"
  console.log
    📋 Recent orders requested - limit: 10, days: 30, status: filled

      at log (routes/orders.js:1096:13)

  console.log
    ⚠️ Status filter 'filled' ignored - portfolio_transactions table has no status column

      at log (routes/orders.js:1120:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/orders/recent?limit=10&days=30&status=filled HTTP/1.1" 200 153 "-" "-"
FAIL tests/integration/routes/orders.integration.test.js
  Orders Routes Integration Tests
    GET /api/orders (List Orders)
      ✕ should return user orders (15 ms)
      ✕ should handle status filter (5 ms)
      ✕ should handle side filter (3 ms)
      ✕ should handle pagination parameters (6 ms)
      ✓ should require authentication (1 ms)
    GET /api/orders/:orderId (Get Specific Order)
      ✓ should handle order lookup (3 ms)
      ✓ should return 404 for non-existent order (2 ms)
      ✓ should require authentication (3 ms)
    POST /api/orders (Create Order)
      ✓ should create new order with valid data (4 ms)
      ✓ should validate required fields (2 ms)
      ✓ should validate quantity is positive (3 ms)
      ✓ should validate order types (3 ms)
      ✓ should require authentication (3 ms)
    PUT /api/orders/:orderId (Update Order)
      ✓ should update order (2 ms)
      ✓ should validate numeric fields (3 ms)
      ✕ should require authentication (2 ms)
    DELETE /api/orders/:orderId (Cancel Order)
      ✓ should cancel order (4 ms)
      ✓ should return 404 for non-existent order (5 ms)
      ✕ should require authentication (3 ms)
    GET /api/orders/history (Order History)
      ✕ should return order history (9 ms)
      ✕ should handle date filtering (3 ms)
      ✕ should include performance summary (3 ms)
      ✕ should require authentication (4 ms)
    Performance and Edge Cases
      ✕ should handle concurrent requests (7 ms)
      ✓ should handle invalid parameters gracefully (12 ms)
      ✓ should maintain response time consistency (3 ms)
      ✓ should handle SQL injection attempts safely (5 ms)
      ✓ should validate response content types (6 ms)
      ✕ should handle database connection issues gracefully (3 ms)
    Authentication and Trading Mode
      ✕ should respect trading mode restrictions (3 ms)
      ✕ should handle malformed authorization headers (3 ms)
      ✓ should handle empty authorization headers (3 ms)
    GET /api/orders/recent (Recent Orders)
      ✓ should return recent orders with sample data (3 ms)
      ✓ should handle query parameters for recent orders (3 ms)

  ● Orders Routes Integration Tests › GET /api/orders (List Orders) › should return user orders

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      50 |         .set("Authorization", "Bearer dev-bypass-token");
      51 |
    > 52 |       expect([200, 401].includes(response.status)).toBe(true);
         |                                                    ^
      53 |
      54 |       if (response.status === 200) {
      55 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/orders.integration.test.js:52:52)

  ● Orders Routes Integration Tests › GET /api/orders (List Orders) › should handle status filter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      64 |         .set("Authorization", "Bearer dev-bypass-token");
      65 |
    > 66 |       expect([200, 401].includes(response.status)).toBe(true);
         |                                                    ^
      67 |
      68 |       if (response.status === 200) {
      69 |         expect(response.body.data).toHaveProperty("orders");

      at Object.toBe (tests/integration/routes/orders.integration.test.js:66:52)

  ● Orders Routes Integration Tests › GET /api/orders (List Orders) › should handle side filter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      76 |         .set("Authorization", "Bearer dev-bypass-token");
      77 |
    > 78 |       expect([200, 401].includes(response.status)).toBe(true);
         |                                                    ^
      79 |
      80 |       if (response.status === 200) {
      81 |         expect(response.body.data).toHaveProperty("orders");

      at Object.toBe (tests/integration/routes/orders.integration.test.js:78:52)

  ● Orders Routes Integration Tests › GET /api/orders (List Orders) › should handle pagination parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      88 |         .set("Authorization", "Bearer dev-bypass-token");
      89 |
    > 90 |       expect([200, 401].includes(response.status)).toBe(true);
         |                                                    ^
      91 |
      92 |       if (response.status === 200) {
      93 |         expect(response.body.data.orders.length).toBeLessThanOrEqual(10);

      at Object.toBe (tests/integration/routes/orders.integration.test.js:90:52)

  ● Orders Routes Integration Tests › PUT /api/orders/:orderId (Update Order) › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      251 |         .send({ limit_price: 150.0 });
      252 |
    > 253 |       expect([200, 401, 403, 404].includes(response.status)).toBe(true);
          |                                                              ^
      254 |     });
      255 |   });
      256 |

      at Object.toBe (tests/integration/routes/orders.integration.test.js:253:62)

  ● Orders Routes Integration Tests › DELETE /api/orders/:orderId (Cancel Order) › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      279 |       const response = await request(app).delete("/api/orders/test-order-123");
      280 |
    > 281 |       expect([200, 401, 403, 404].includes(response.status)).toBe(true);
          |                                                              ^
      282 |     });
      283 |   });
      284 |

      at Object.toBe (tests/integration/routes/orders.integration.test.js:281:62)

  ● Orders Routes Integration Tests › GET /api/orders/history (Order History) › should return order history

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      289 |         .set("Authorization", "Bearer dev-bypass-token");
      290 |
    > 291 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      292 |
      293 |       if (response.status === 200) {
      294 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/orders.integration.test.js:291:52)

  ● Orders Routes Integration Tests › GET /api/orders/history (Order History) › should handle date filtering

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      303 |         .set("Authorization", "Bearer dev-bypass-token");
      304 |
    > 305 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      306 |
      307 |       if (response.status === 200) {
      308 |         expect(response.body.data).toHaveProperty("orders");

      at Object.toBe (tests/integration/routes/orders.integration.test.js:305:52)

  ● Orders Routes Integration Tests › GET /api/orders/history (Order History) › should include performance summary

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      315 |         .set("Authorization", "Bearer dev-bypass-token");
      316 |
    > 317 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      318 |
      319 |       if (response.status === 200) {
      320 |         expect(response.body.data).toHaveProperty("orders");

      at Object.toBe (tests/integration/routes/orders.integration.test.js:317:52)

  ● Orders Routes Integration Tests › GET /api/orders/history (Order History) › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      325 |       const response = await request(app).get("/api/orders/history");
      326 |
    > 327 |       expect([200, 401, 403].includes(response.status)).toBe(true);
          |                                                         ^
      328 |     });
      329 |   });
      330 |

      at Object.toBe (tests/integration/routes/orders.integration.test.js:327:57)

  ● Orders Routes Integration Tests › Performance and Edge Cases › should handle concurrent requests

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      354 |
      355 |       responses.forEach((response) => {
    > 356 |         expect([200, 201, 400, 401].includes(response.status)).toBe(true);
          |                                                                ^
      357 |       });
      358 |     });
      359 |

      at toBe (tests/integration/routes/orders.integration.test.js:356:64)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/routes/orders.integration.test.js:355:17)

  ● Orders Routes Integration Tests › Performance and Edge Cases › should handle database connection issues gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      425 |         .set("Authorization", "Bearer dev-bypass-token");
      426 |
    > 427 |       expect(response.status).toBe(200);
          |                               ^
      428 |
      429 |       if (response.status >= 500) {
      430 |         expect(response.body).toHaveProperty("error");

      at Object.toBe (tests/integration/routes/orders.integration.test.js:427:31)

  ● Orders Routes Integration Tests › Authentication and Trading Mode › should respect trading mode restrictions

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      439 |         .set("Authorization", "Bearer dev-bypass-token");
      440 |
    > 441 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      442 |
      443 |       if (response.status === 403) {
      444 |         expect(response.body).toHaveProperty("trading_mode");

      at Object.toBe (tests/integration/routes/orders.integration.test.js:441:52)

  ● Orders Routes Integration Tests › Authentication and Trading Mode › should handle malformed authorization headers

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      451 |         .set("Authorization", "InvalidFormat");
      452 |
    > 453 |       expect([200, 401, 403].includes(response.status)).toBe(true);
          |                                                         ^
      454 |     });
      455 |
      456 |     test("should handle empty authorization headers", async () => {

      at Object.toBe (tests/integration/routes/orders.integration.test.js:453:57)

  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "-"
  console.log
    CORS not implemented - cross-origin requests allowed without explicit headers

      at Object.log (tests/integration/middleware/security-headers.integration.test.js:95:19)

  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "POST /api/portfolio/analyze HTTP/1.1" 501 273 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/stocks/%3Cscript%3Ealert(%27xss%27)%3C/script%3E/details HTTP/1.1" 404 166 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/stocks/AAPL%27;%20DROP%20TABLE%20stocks;%20--/details HTTP/1.1" 404 163 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/stocks/../../etc/passwd HTTP/1.1" 404 133 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/health HTTP/1.1" 200 464 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/health HTTP/1.1" 200 464 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/health HTTP/1.1" 200 464 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/health HTTP/1.1" 200 464 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/health HTTP/1.1" 200 464 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "-"
  console.log
    Rate limiting not implemented - recommendation for DDoS protection

      at Object.log (tests/integration/middleware/security-headers.integration.test.js:283:17)

  console.log
    📋 Portfolio positions requested for user: test-user-123

      at log (routes/portfolio.js:282:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
  console.log
    📋 Portfolio positions requested for user: test-user-123

      at log (routes/portfolio.js:282:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
  console.log
    📋 Portfolio positions requested for user: test-user-123

      at log (routes/portfolio.js:282:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
  console.log
    📋 Portfolio positions requested for user: test-user-123

      at log (routes/portfolio.js:282:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
  console.log
    📋 Portfolio positions requested for user: test-user-123

      at log (routes/portfolio.js:282:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
  console.log
    📋 Portfolio positions requested for user: test-user-123

      at log (routes/portfolio.js:282:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
  console.log
    📋 Portfolio positions requested for user: test-user-123

      at log (routes/portfolio.js:282:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
  console.log
    📋 Portfolio positions requested for user: test-user-123

      at log (routes/portfolio.js:282:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
  console.log
    📋 Portfolio positions requested for user: test-user-123

      at log (routes/portfolio.js:282:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
  console.log
    📋 Portfolio positions requested for user: test-user-123

      at log (routes/portfolio.js:282:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 404 131 "-" "-"
  console.log
    Portfolio performance endpoint called for user: test-user-123, timeframe: 1y

      at log (routes/portfolio.js:1180:13)

  console.log
    📊 Retrieved 0 performance data points

      at log (routes/portfolio.js:1208:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio/performance HTTP/1.1" 200 451 "-" "-"
  console.log
    Portfolio performance endpoint called for user: test-user-123, timeframe: invalid

      at log (routes/portfolio.js:1180:13)

  console.log
    📊 Retrieved 0 performance data points

      at log (routes/portfolio.js:1208:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio/performance?timeframe=invalid&detailed=true&complex=true HTTP/1.1" 200 456 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "POST /api/portfolio/analyze HTTP/1.1" 501 273 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "Mozilla/5.0 TestAgent"
FAIL tests/integration/middleware/security-headers.integration.test.js
  Security Headers Integration
    CORS Headers
      ✓ should include proper CORS headers for API endpoints (4 ms)
      ✓ should handle preflight OPTIONS requests (1 ms)
      ✓ should handle cross-origin requests securely (4 ms)
    Security Headers
      ✓ should include security headers in responses (2 ms)
      ✓ should set appropriate content-type headers (6 ms)
      ✓ should handle authentication headers securely (2 ms)
    Content Security Policy
      ✓ should include CSP headers if configured (2 ms)
      ✓ should prevent clickjacking with frame options (2 ms)
    Request Validation Security
      ✕ should reject oversized request bodies (7 ms)
      ✓ should sanitize request parameters (3 ms)
      ✓ should prevent SQL injection attempts (2 ms)
      ✓ should handle path traversal attempts (1 ms)
    Rate Limiting Security
      ✓ should implement basic rate limiting (37 ms)
      ✓ should rate limit authenticated endpoints more strictly (15 ms)
    Error Information Leakage
      ✓ should not expose sensitive error information (2 ms)
      ✕ should not expose database connection details (2 ms)
      ✓ should handle server errors securely (3 ms)
    Authentication Security
      ✕ should reject requests with malformed authentication (1 ms)
      ✕ should handle authentication bypass attempts (3 ms)
    Input Validation Security
      ✕ should validate and sanitize JSON payloads (1 ms)
      ✓ should prevent header injection attacks (3 ms)

  ● Security Headers Integration › Request Validation Security › should reject oversized request bodies

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [200, 400, 404, 405, 413, 422]

      211 |         .send({ data: largePayload });
      212 |
    > 213 |       expect([200, 400, 404, 405, 413, 422]).toContain(response.status);
          |                                              ^
      214 |       expect(response.headers["content-type"]).toMatch(/application\/json/);
      215 |
      216 |       if (response.status === 413) {

      at Object.toContain (tests/integration/middleware/security-headers.integration.test.js:213:46)

  ● Security Headers Integration › Error Information Leakage › should not expose database connection details

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 500]

      327 |         .set("Authorization", "Bearer invalid-token");
      328 |
    > 329 |       expect([401, 500]).toContain(response.status);
          |                          ^
      330 |       expect(response.headers["content-type"]).toMatch(/application\/json/);
      331 |
      332 |       if (response.body && typeof response.body === "object") {

      at Object.toContain (tests/integration/middleware/security-headers.integration.test.js:329:26)

  ● Security Headers Integration › Authentication Security › should reject requests with malformed authentication

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422]

      381 |           .set("Authorization", token);
      382 |
    > 383 |         expect([400, 401, 404, 422]).toContain(response.status);
          |                                      ^
      384 |         expect(response.headers["content-type"]).toMatch(/application\/json/);
      385 |
      386 |         // Should not reflect malicious content in response

      at Object.toContain (tests/integration/middleware/security-headers.integration.test.js:383:38)

  ● Security Headers Integration › Authentication Security › should handle authentication bypass attempts

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 500]

      404 |         const response = await request(app).get("/api/portfolio").set(headers);
      405 |
    > 406 |         expect([401, 500]).toContain(response.status);
          |                            ^
      407 |         expect(response.headers["content-type"]).toMatch(/application\/json/);
      408 |       }
      409 |     });

      at Object.toContain (tests/integration/middleware/security-headers.integration.test.js:406:28)

  ● Security Headers Integration › Input Validation Security › should validate and sanitize JSON payloads

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [200, 400, 404, 422, 405]

      426 |           .send(payload);
      427 |
    > 428 |         expect([200, 400, 404, 422, 405]).toContain(response.status);
          |                                           ^
      429 |
      430 |         // Should not execute or reflect malicious content
      431 |         if (response.body && typeof response.body === "object") {

      at Object.toContain (tests/integration/middleware/security-headers.integration.test.js:428:43)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard HTTP/1.1" 200 497 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard HTTP/1.1" 200 497 "-" "-"
  console.log
    📊 Dashboard summary request received

      at log (routes/dashboard.js:128:13)

  console.log
    🔍 Executing comprehensive dashboard queries with timeout protection...

      at log (routes/dashboard.js:297:13)

  console.log
    ✅ Dashboard queries completed: undefined market, undefined gainers, undefined losers, undefined sectors, undefined earnings, undefined sentiment, undefined volume, undefined breadth

      at log (routes/dashboard.js:360:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/summary HTTP/1.1" 404 106 "-" "-"
  console.log
    📊 Dashboard summary request received

      at log (routes/dashboard.js:128:13)

  console.log
    🔍 Executing comprehensive dashboard queries with timeout protection...

      at log (routes/dashboard.js:297:13)

  console.log
    ✅ Dashboard queries completed: undefined market, undefined gainers, undefined losers, undefined sectors, undefined earnings, undefined sentiment, undefined volume, undefined breadth

      at log (routes/dashboard.js:360:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/summary HTTP/1.1" 404 106 "-" "-"
  console.log
    📊 Dashboard summary request received

      at log (routes/dashboard.js:128:13)

  console.log
    🔍 Executing comprehensive dashboard queries with timeout protection...

      at log (routes/dashboard.js:297:13)

  console.log
    ✅ Dashboard queries completed: undefined market, undefined gainers, undefined losers, undefined sectors, undefined earnings, undefined sentiment, undefined volume, undefined breadth

      at log (routes/dashboard.js:360:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/summary HTTP/1.1" 404 106 "-" "-"
  console.log
    📊 Dashboard summary request received

      at log (routes/dashboard.js:128:13)

  console.log
    🔍 Executing comprehensive dashboard queries with timeout protection...

      at log (routes/dashboard.js:297:13)

  console.log
    ✅ Dashboard queries completed: undefined market, undefined gainers, undefined losers, undefined sectors, undefined earnings, undefined sentiment, undefined volume, undefined breadth

      at log (routes/dashboard.js:360:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/summary HTTP/1.1" 404 106 "-" "-"
  console.log
    💼 Holdings request received for user: test-user-123

      at log (routes/dashboard.js:459:13)

  console.log
    🔍 Executing holdings queries...

      at log (routes/dashboard.js:526:13)

  console.log
    ✅ Holdings queries completed: undefined holdings found

      at log (routes/dashboard.js:532:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/holdings HTTP/1.1" 200 93 "-" "-"
  console.log
    💼 Holdings request received for user: test-user-123

      at log (routes/dashboard.js:459:13)

  console.log
    🔍 Executing holdings queries...

      at log (routes/dashboard.js:526:13)

  console.log
    ✅ Holdings queries completed: undefined holdings found

      at log (routes/dashboard.js:532:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/holdings HTTP/1.1" 200 93 "-" "-"
  console.log
    💼 Holdings request received for user: test-user-123

      at log (routes/dashboard.js:459:13)

  console.log
    🔍 Executing holdings queries...

      at log (routes/dashboard.js:526:13)

  console.log
    ✅ Holdings queries completed: undefined holdings found

      at log (routes/dashboard.js:532:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/holdings HTTP/1.1" 200 93 "-" "-"
  console.log
    💼 Holdings request received for user: test-user-123

      at log (routes/dashboard.js:459:13)

  console.log
    🔍 Executing holdings queries...

      at log (routes/dashboard.js:526:13)

  console.log
    ✅ Holdings queries completed: undefined holdings found

      at log (routes/dashboard.js:532:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/holdings HTTP/1.1" 200 93 "-" "-"
  console.log
    📈 Performance request received for user: test-user-123

      at log (routes/dashboard.js:602:13)

  console.log
    🔍 Executing performance queries...

      at log (routes/dashboard.js:673:13)

  console.log
    ✅ Performance queries completed: undefined data points

      at log (routes/dashboard.js:679:13)

  console.error
    ❌ Performance error: TypeError: Cannot read properties of undefined (reading 'avg_daily_return')
        at avg_daily_return (/home/stocks/algo/webapp/lambda/routes/dashboard.js:713:58)

      728 |     });
      729 |   } catch (error) {
    > 730 |     console.error("❌ Performance error:", error);
          |             ^
      731 |     res.status(500).json({
      732 |       success: false,
      733 |       error: "Failed to fetch performance data",

      at error (routes/dashboard.js:730:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/performance HTTP/1.1" 500 137 "-" "-"
  console.log
    📈 Performance request received for user: test-user-123

      at log (routes/dashboard.js:602:13)

  console.log
    🔍 Executing performance queries...

      at log (routes/dashboard.js:673:13)

  console.log
    ✅ Performance queries completed: undefined data points

      at log (routes/dashboard.js:679:13)

  console.error
    ❌ Performance error: TypeError: Cannot read properties of undefined (reading 'avg_daily_return')
        at avg_daily_return (/home/stocks/algo/webapp/lambda/routes/dashboard.js:713:58)

      728 |     });
      729 |   } catch (error) {
    > 730 |     console.error("❌ Performance error:", error);
          |             ^
      731 |     res.status(500).json({
      732 |       success: false,
      733 |       error: "Failed to fetch performance data",

      at error (routes/dashboard.js:730:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/performance HTTP/1.1" 500 137 "-" "-"
  console.log
    📈 Performance request received for user: test-user-123

      at log (routes/dashboard.js:602:13)

  console.log
    🔍 Executing performance queries...

      at log (routes/dashboard.js:673:13)

  console.log
    ✅ Performance queries completed: undefined data points

      at log (routes/dashboard.js:679:13)

  console.error
    ❌ Performance error: TypeError: Cannot read properties of undefined (reading 'avg_daily_return')
        at avg_daily_return (/home/stocks/algo/webapp/lambda/routes/dashboard.js:713:58)

      728 |     });
      729 |   } catch (error) {
    > 730 |     console.error("❌ Performance error:", error);
          |             ^
      731 |     res.status(500).json({
      732 |       success: false,
      733 |       error: "Failed to fetch performance data",

      at error (routes/dashboard.js:730:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/performance HTTP/1.1" 500 137 "-" "-"
  console.log
    📈 Performance request received for user: test-user-123

      at log (routes/dashboard.js:602:13)

  console.log
    🔍 Executing performance queries...

      at log (routes/dashboard.js:673:13)

  console.log
    ✅ Performance queries completed: undefined data points

      at log (routes/dashboard.js:679:13)

  console.error
    ❌ Performance error: TypeError: Cannot read properties of undefined (reading 'avg_daily_return')
        at avg_daily_return (/home/stocks/algo/webapp/lambda/routes/dashboard.js:713:58)

      728 |     });
      729 |   } catch (error) {
    > 730 |     console.error("❌ Performance error:", error);
          |             ^
      731 |     res.status(500).json({
      732 |       success: false,
      733 |       error: "Failed to fetch performance data",

      at error (routes/dashboard.js:730:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/performance HTTP/1.1" 500 137 "-" "-"
  console.log
    🚨 Alerts request received for user: test-user-123

      at log (routes/dashboard.js:745:13)

  console.log
    🔍 Executing alerts queries...

      at log (routes/dashboard.js:780:13)

  console.log
    ✅ Alerts queries completed: 0 alerts found

      at log (routes/dashboard.js:786:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/alerts HTTP/1.1" 200 99 "-" "-"
  console.log
    🚨 Alerts request received for user: test-user-123

      at log (routes/dashboard.js:745:13)

  console.log
    🔍 Executing alerts queries...

      at log (routes/dashboard.js:780:13)

  console.log
    ✅ Alerts queries completed: 0 alerts found

      at log (routes/dashboard.js:786:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/alerts HTTP/1.1" 200 99 "-" "-"
  console.log
    🚨 Alerts request received for user: test-user-123

      at log (routes/dashboard.js:745:13)

  console.log
    🔍 Executing alerts queries...

      at log (routes/dashboard.js:780:13)

  console.log
    ✅ Alerts queries completed: 0 alerts found

      at log (routes/dashboard.js:786:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/alerts HTTP/1.1" 200 99 "-" "-"
  console.log
    🚨 Alerts request received for user: test-user-123

      at log (routes/dashboard.js:745:13)

  console.log
    🔍 Executing alerts queries...

      at log (routes/dashboard.js:780:13)

  console.log
    ✅ Alerts queries completed: 0 alerts found

      at log (routes/dashboard.js:786:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/alerts HTTP/1.1" 200 99 "-" "-"
  console.log
    📊 Market data request received

      at log (routes/dashboard.js:824:13)

  console.log
    🔍 Executing market data queries...

      at log (routes/dashboard.js:910:13)

  console.log
    ✅ Market data queries completed: undefined econ, undefined sectors, undefined internals

      at log (routes/dashboard.js:916:13)

  console.log
    📊 Market data prepared: 0 econ, 0 sectors, 0 internals

      at log (routes/dashboard.js:926:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/market-data HTTP/1.1" 200 228 "-" "-"
  console.log
    📊 Market data request received

      at log (routes/dashboard.js:824:13)

  console.log
    🔍 Executing market data queries...

      at log (routes/dashboard.js:910:13)

  console.log
    ✅ Market data queries completed: undefined econ, undefined sectors, undefined internals

      at log (routes/dashboard.js:916:13)

  console.log
    📊 Market data prepared: 0 econ, 0 sectors, 0 internals

      at log (routes/dashboard.js:926:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/market-data HTTP/1.1" 200 228 "-" "-"
  console.log
    📊 Market data request received

      at log (routes/dashboard.js:824:13)

  console.log
    🔍 Executing market data queries...

      at log (routes/dashboard.js:910:13)

  console.log
    ✅ Market data queries completed: undefined econ, undefined sectors, undefined internals

      at log (routes/dashboard.js:916:13)

  console.log
    📊 Market data prepared: 0 econ, 0 sectors, 0 internals

      at log (routes/dashboard.js:926:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/market-data HTTP/1.1" 200 228 "-" "-"
  console.log
    📊 Market data request received

      at log (routes/dashboard.js:824:13)

  console.log
    🔍 Executing market data queries...

      at log (routes/dashboard.js:910:13)

  console.log
    ✅ Market data queries completed: undefined econ, undefined sectors, undefined internals

      at log (routes/dashboard.js:916:13)

  console.log
    📊 Market data prepared: 0 econ, 0 sectors, 0 internals

      at log (routes/dashboard.js:926:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/market-data HTTP/1.1" 200 228 "-" "-"
  console.log
    🔧 Dashboard debug request received

      at log (routes/dashboard.js:1137:13)

  console.log
    🔧 Debug data collected: {
      timestamp: '2025-10-19T11:48:47.939Z',
      database_status: 'connected',
      table_counts: {
        price_daily: "error: Cannot read properties of undefined (reading 'count')",
        earnings_history: "error: Cannot read properties of undefined (reading 'count')",
        fear_greed_index: "error: Cannot read properties of undefined (reading 'count')",
        portfolio_holdings: "error: Cannot read properties of undefined (reading 'count')",
        portfolio_performance: "error: Cannot read properties of undefined (reading 'count')",
        trading_alerts: "error: Cannot read properties of undefined (reading 'count')",
        economic_data: "error: Cannot read properties of undefined (reading 'count')",
        stocks: "error: Cannot read properties of undefined (reading 'count')",
        technical_data_daily: "error: Cannot read properties of undefined (reading 'count')"
      },
      data_counts: undefined,
      database_connectivity: 'operational',
      sample_data: {
        recent_prices: { AAPL: 150.25, MSFT: 350.75, GOOGL: 2750.4 },
        last_update: '2025-10-19T11:48:47.940Z',
        status: 'active'
      }
    }

      at log (routes/dashboard.js:1206:13)

  console.log
    🔧 Debug data validation - table_counts type: object

      at log (routes/dashboard.js:1209:13)

  console.log
    🔧 Debug data validation - data_counts type: undefined

      at log (routes/dashboard.js:1210:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/debug HTTP/1.1" 200 1014 "-" "-"
  console.log
    🔧 Dashboard debug request received

      at log (routes/dashboard.js:1137:13)

  console.log
    🔧 Debug data collected: {
      timestamp: '2025-10-19T11:48:47.942Z',
      database_status: 'connected',
      table_counts: {
        price_daily: "error: Cannot read properties of undefined (reading 'count')",
        earnings_history: "error: Cannot read properties of undefined (reading 'count')",
        fear_greed_index: "error: Cannot read properties of undefined (reading 'count')",
        portfolio_holdings: "error: Cannot read properties of undefined (reading 'count')",
        portfolio_performance: "error: Cannot read properties of undefined (reading 'count')",
        trading_alerts: "error: Cannot read properties of undefined (reading 'count')",
        economic_data: "error: Cannot read properties of undefined (reading 'count')",
        stocks: "error: Cannot read properties of undefined (reading 'count')",
        technical_data_daily: "error: Cannot read properties of undefined (reading 'count')"
      },
      data_counts: undefined,
      database_connectivity: 'operational',
      sample_data: {
        recent_prices: { AAPL: 150.25, MSFT: 350.75, GOOGL: 2750.4 },
        last_update: '2025-10-19T11:48:47.943Z',
        status: 'active'
      }
    }

      at log (routes/dashboard.js:1206:13)

  console.log
    🔧 Debug data validation - table_counts type: object

      at log (routes/dashboard.js:1209:13)

  console.log
    🔧 Debug data validation - data_counts type: undefined

      at log (routes/dashboard.js:1210:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/debug HTTP/1.1" 200 1014 "-" "-"
  console.log
    🔧 Dashboard debug request received

      at log (routes/dashboard.js:1137:13)

  console.log
    🔧 Debug data collected: {
      timestamp: '2025-10-19T11:48:47.945Z',
      database_status: 'connected',
      table_counts: {
        price_daily: "error: Cannot read properties of undefined (reading 'count')",
        earnings_history: "error: Cannot read properties of undefined (reading 'count')",
        fear_greed_index: "error: Cannot read properties of undefined (reading 'count')",
        portfolio_holdings: "error: Cannot read properties of undefined (reading 'count')",
        portfolio_performance: "error: Cannot read properties of undefined (reading 'count')",
        trading_alerts: "error: Cannot read properties of undefined (reading 'count')",
        economic_data: "error: Cannot read properties of undefined (reading 'count')",
        stocks: "error: Cannot read properties of undefined (reading 'count')",
        technical_data_daily: "error: Cannot read properties of undefined (reading 'count')"
      },
      data_counts: undefined,
      database_connectivity: 'operational',
      sample_data: {
        recent_prices: { AAPL: 150.25, MSFT: 350.75, GOOGL: 2750.4 },
        last_update: '2025-10-19T11:48:47.946Z',
        status: 'active'
      }
    }

      at log (routes/dashboard.js:1206:13)

  console.log
    🔧 Debug data validation - table_counts type: object

      at log (routes/dashboard.js:1209:13)

  console.log
    🔧 Debug data validation - data_counts type: undefined

      at log (routes/dashboard.js:1210:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/debug HTTP/1.1" 200 1014 "-" "-"
  console.log
    📊 Dashboard overview requested

      at log (routes/dashboard.js:973:13)

  console.log
    🔍 Executing overview queries...

      at log (routes/dashboard.js:1056:13)

  console.log
    📊 Overview data prepared: 0 key metrics, 0 movers, 0 sectors

      at log (routes/dashboard.js:1068:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/overview HTTP/1.1" 200 336 "-" "-"
  console.log
    📊 Dashboard overview requested

      at log (routes/dashboard.js:973:13)

  console.log
    🔍 Executing overview queries...

      at log (routes/dashboard.js:1056:13)

  console.log
    📊 Overview data prepared: 0 key metrics, 0 movers, 0 sectors

      at log (routes/dashboard.js:1068:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/overview HTTP/1.1" 200 336 "-" "-"
  console.log
    📊 Dashboard overview requested

      at log (routes/dashboard.js:973:13)

  console.log
    🔍 Executing overview queries...

      at log (routes/dashboard.js:1056:13)

  console.log
    📊 Overview data prepared: 0 key metrics, 0 movers, 0 sectors

      at log (routes/dashboard.js:1068:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/overview HTTP/1.1" 200 336 "-" "-"
  console.log
    📊 Dashboard overview requested

      at log (routes/dashboard.js:973:13)

  console.log
    🔍 Executing overview queries...

      at log (routes/dashboard.js:1056:13)

  console.log
    📊 Overview data prepared: 0 key metrics, 0 movers, 0 sectors

      at log (routes/dashboard.js:1068:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/overview HTTP/1.1" 200 336 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard HTTP/1.1" 200 497 "-" "-"
  console.log
    📊 Dashboard summary request received

      at log (routes/dashboard.js:128:13)

  console.log
    🔍 Executing comprehensive dashboard queries with timeout protection...

      at log (routes/dashboard.js:297:13)

  console.log
    ✅ Dashboard queries completed: undefined market, undefined gainers, undefined losers, undefined sectors, undefined earnings, undefined sentiment, undefined volume, undefined breadth

      at log (routes/dashboard.js:360:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/summary HTTP/1.1" 404 106 "-" "-"
  console.log
    📊 Market data request received

      at log (routes/dashboard.js:824:13)

  console.log
    🔍 Executing market data queries...

      at log (routes/dashboard.js:910:13)

  console.log
    ✅ Market data queries completed: undefined econ, undefined sectors, undefined internals

      at log (routes/dashboard.js:916:13)

  console.log
    📊 Market data prepared: 0 econ, 0 sectors, 0 internals

      at log (routes/dashboard.js:926:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/market-data HTTP/1.1" 200 228 "-" "-"
  console.log
    📊 Dashboard overview requested

      at log (routes/dashboard.js:973:13)

  console.log
    🔍 Executing overview queries...

      at log (routes/dashboard.js:1056:13)

  console.log
    📊 Overview data prepared: 0 key metrics, 0 movers, 0 sectors

      at log (routes/dashboard.js:1068:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/overview HTTP/1.1" 200 336 "-" "-"
  console.log
    🔧 Dashboard debug request received

      at log (routes/dashboard.js:1137:13)

  console.log
    🔧 Debug data collected: {
      timestamp: '2025-10-19T11:48:47.969Z',
      database_status: 'connected',
      table_counts: {
        price_daily: "error: Cannot read properties of undefined (reading 'count')",
        earnings_history: "error: Cannot read properties of undefined (reading 'count')",
        fear_greed_index: "error: Cannot read properties of undefined (reading 'count')",
        portfolio_holdings: "error: Cannot read properties of undefined (reading 'count')",
        portfolio_performance: "error: Cannot read properties of undefined (reading 'count')",
        trading_alerts: "error: Cannot read properties of undefined (reading 'count')",
        economic_data: "error: Cannot read properties of undefined (reading 'count')",
        stocks: "error: Cannot read properties of undefined (reading 'count')",
        technical_data_daily: "error: Cannot read properties of undefined (reading 'count')"
      },
      data_counts: undefined,
      database_connectivity: 'operational',
      sample_data: {
        recent_prices: { AAPL: 150.25, MSFT: 350.75, GOOGL: 2750.4 },
        last_update: '2025-10-19T11:48:47.969Z',
        status: 'active'
      }
    }

      at log (routes/dashboard.js:1206:13)

  console.log
    🔧 Debug data validation - table_counts type: object

      at log (routes/dashboard.js:1209:13)

  console.log
    🔧 Debug data validation - data_counts type: undefined

      at log (routes/dashboard.js:1210:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/debug HTTP/1.1" 200 1014 "-" "-"
  console.log
    📊 Dashboard summary request received

      at log (routes/dashboard.js:128:13)

  console.log
    🔍 Executing comprehensive dashboard queries with timeout protection...

      at log (routes/dashboard.js:297:13)

  console.log
    ✅ Dashboard queries completed: undefined market, undefined gainers, undefined losers, undefined sectors, undefined earnings, undefined sentiment, undefined volume, undefined breadth

      at log (routes/dashboard.js:360:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/summary HTTP/1.1" 404 106 "-" "-"
  console.log
    💼 Holdings request received for user: test-user-123

      at log (routes/dashboard.js:459:13)

  console.log
    🔍 Executing holdings queries...

      at log (routes/dashboard.js:526:13)

  console.log
    ✅ Holdings queries completed: undefined holdings found

      at log (routes/dashboard.js:532:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/holdings HTTP/1.1" 200 93 "-" "-"
  console.log
    📊 Dashboard summary request received

      at log (routes/dashboard.js:128:13)

  console.log
    🔍 Executing comprehensive dashboard queries with timeout protection...

      at log (routes/dashboard.js:297:13)

  console.log
    ✅ Dashboard queries completed: undefined market, undefined gainers, undefined losers, undefined sectors, undefined earnings, undefined sentiment, undefined volume, undefined breadth

      at log (routes/dashboard.js:360:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/summary HTTP/1.1" 404 106 "-" "-"
  console.log
    📊 Dashboard summary request received

      at log (routes/dashboard.js:128:13)

  console.log
    🔍 Executing comprehensive dashboard queries with timeout protection...

      at log (routes/dashboard.js:297:13)

  console.log
    ✅ Dashboard queries completed: undefined market, undefined gainers, undefined losers, undefined sectors, undefined earnings, undefined sentiment, undefined volume, undefined breadth

      at log (routes/dashboard.js:360:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/summary HTTP/1.1" 404 106 "-" "-"
  console.log
    📊 Dashboard summary request received

      at log (routes/dashboard.js:128:13)

  console.log
    🔍 Executing comprehensive dashboard queries with timeout protection...

      at log (routes/dashboard.js:297:13)

  console.log
    ✅ Dashboard queries completed: undefined market, undefined gainers, undefined losers, undefined sectors, undefined earnings, undefined sentiment, undefined volume, undefined breadth

      at log (routes/dashboard.js:360:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/summary?filter=%27%3B%20DROP%20TABLE%20market_data%3B%20-- HTTP/1.1" 404 106 "-" "-"
  console.log
    📊 Dashboard summary request received

      at log (routes/dashboard.js:128:13)

  console.log
    🔍 Executing comprehensive dashboard queries with timeout protection...

      at log (routes/dashboard.js:297:13)

  console.log
    ✅ Dashboard queries completed: undefined market, undefined gainers, undefined losers, undefined sectors, undefined earnings, undefined sentiment, undefined volume, undefined breadth

      at log (routes/dashboard.js:360:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/summary HTTP/1.1" 404 106 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard HTTP/1.1" 200 497 "-" "-"
  console.log
    📊 Dashboard summary request received

      at log (routes/dashboard.js:128:13)

  console.log
    🔍 Executing comprehensive dashboard queries with timeout protection...

      at log (routes/dashboard.js:297:13)

  console.log
    ✅ Dashboard queries completed: undefined market, undefined gainers, undefined losers, undefined sectors, undefined earnings, undefined sentiment, undefined volume, undefined breadth

      at log (routes/dashboard.js:360:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/summary HTTP/1.1" 404 106 "-" "-"
  console.log
    📊 Market data request received

      at log (routes/dashboard.js:824:13)

  console.log
    🔍 Executing market data queries...

      at log (routes/dashboard.js:910:13)

  console.log
    ✅ Market data queries completed: undefined econ, undefined sectors, undefined internals

      at log (routes/dashboard.js:916:13)

  console.log
    📊 Market data prepared: 0 econ, 0 sectors, 0 internals

      at log (routes/dashboard.js:926:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/market-data HTTP/1.1" 200 228 "-" "-"
  console.log
    📊 Dashboard overview requested

      at log (routes/dashboard.js:973:13)

  console.log
    🔍 Executing overview queries...

      at log (routes/dashboard.js:1056:13)

  console.log
    📊 Overview data prepared: 0 key metrics, 0 movers, 0 sectors

      at log (routes/dashboard.js:1068:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:47 +0000] "GET /api/dashboard/overview HTTP/1.1" 200 336 "-" "-"
  console.log
    🔧 Dashboard debug request received

      at log (routes/dashboard.js:1137:13)

  console.log
    🔧 Debug data collected: {
      timestamp: '2025-10-19T11:48:48.001Z',
      database_status: 'connected',
      table_counts: {
        price_daily: "error: Cannot read properties of undefined (reading 'count')",
        earnings_history: "error: Cannot read properties of undefined (reading 'count')",
        fear_greed_index: "error: Cannot read properties of undefined (reading 'count')",
        portfolio_holdings: "error: Cannot read properties of undefined (reading 'count')",
        portfolio_performance: "error: Cannot read properties of undefined (reading 'count')",
        trading_alerts: "error: Cannot read properties of undefined (reading 'count')",
        economic_data: "error: Cannot read properties of undefined (reading 'count')",
        stocks: "error: Cannot read properties of undefined (reading 'count')",
        technical_data_daily: "error: Cannot read properties of undefined (reading 'count')"
      },
      data_counts: undefined,
      database_connectivity: 'operational',
      sample_data: {
        recent_prices: { AAPL: 150.25, MSFT: 350.75, GOOGL: 2750.4 },
        last_update: '2025-10-19T11:48:48.001Z',
        status: 'active'
      }
    }

      at log (routes/dashboard.js:1206:13)

  console.log
    🔧 Debug data validation - table_counts type: object

      at log (routes/dashboard.js:1209:13)

  console.log
    🔧 Debug data validation - data_counts type: undefined

      at log (routes/dashboard.js:1210:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/dashboard/debug HTTP/1.1" 200 1014 "-" "-"
  console.log
    💼 Holdings request received for user: test-user-123

      at log (routes/dashboard.js:459:13)

  console.log
    🔍 Executing holdings queries...

      at log (routes/dashboard.js:526:13)

  console.log
    ✅ Holdings queries completed: undefined holdings found

      at log (routes/dashboard.js:532:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/dashboard/holdings HTTP/1.1" 200 93 "-" "-"
FAIL tests/integration/routes/dashboard.integration.test.js
  Dashboard Routes Integration Tests
    GET /api/dashboard (Dashboard Root)
      ✓ should return dashboard endpoints and operational status (3 ms)
      ✓ should handle high-frequency requests without degradation (4 ms)
    GET /api/dashboard/summary (Dashboard Summary)
      ✕ should return comprehensive dashboard summary data (10 ms)
      ✓ should validate market overview data structure (5 ms)
      ✓ should validate sector performance data (2 ms)
      ✕ should handle database connectivity issues gracefully (3 ms)
    GET /api/dashboard/holdings (Portfolio Holdings)
      ✕ should require authentication (2 ms)
      ✕ should return holdings data with valid authentication (3 ms)
      ✓ should validate holdings data structure (2 ms)
      ✕ should handle invalid authentication tokens (2 ms)
    GET /api/dashboard/performance (Portfolio Performance)
      ✕ should require authentication for performance data (9 ms)
      ✕ should return performance data with valid authentication (4 ms)
      ✓ should validate performance metrics structure (6 ms)
      ✓ should validate performance metrics calculations (3 ms)
    GET /api/dashboard/alerts (Trading Alerts)
      ✕ should require authentication for alerts (3 ms)
      ✓ should return alerts data with authentication (3 ms)
      ✓ should validate alert data structure (3 ms)
      ✓ should handle alert summary aggregation (3 ms)
    GET /api/dashboard/market-data (Market Data)
      ✓ should return comprehensive market data (2 ms)
      ✓ should validate economic indicators structure (3 ms)
      ✓ should validate sector rotation data (4 ms)
      ✓ should validate market internals data (2 ms)
    GET /api/dashboard/debug (Debug Endpoint)
      ✓ should return debug information about database connectivity (3 ms)
      ✓ should validate table count information (3 ms)
      ✓ should validate database connection status (3 ms)
    GET /api/dashboard/overview (Market Overview)
      ✓ should return market overview data (5 ms)
      ✓ should validate market status information (3 ms)
      ✓ should validate top movers structure (3 ms)
      ✓ should handle empty market data gracefully (3 ms)
    Performance and Edge Cases
      ✕ should handle concurrent requests to dashboard endpoints (10 ms)
      ✕ should maintain response time consistency (4 ms)
      ✕ should handle malformed authentication headers (2 ms)
      ✕ should handle database connection failures gracefully (3 ms)
      ✓ should validate numeric data integrity (2 ms)
      ✕ should handle SQL injection attempts safely (3 ms)
      ✕ should handle memory pressure with large data requests (5 ms)
      ✓ should validate response content types (11 ms)
      ✕ should handle authentication edge cases (2 ms)

  ● Dashboard Routes Integration Tests › GET /api/dashboard/summary (Dashboard Summary) › should return comprehensive dashboard summary data

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      87 |         .set("Authorization", `Bearer ${authToken}`);
      88 |
    > 89 |       expect(response.status).toBe(200);
         |                               ^
      90 |
      91 |       if (response.status === 200) {
      92 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:89:31)

  ● Dashboard Routes Integration Tests › GET /api/dashboard/summary (Dashboard Summary) › should handle database connectivity issues gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      152 |         .set("Authorization", `Bearer ${authToken}`);
      153 |
    > 154 |       expect(response.status).toBe(200);
          |                               ^
      155 |
      156 |       if (response.status >= 500) {
      157 |         expect(response.body).toHaveProperty("error");

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:154:31)

  ● Dashboard Routes Integration Tests › GET /api/dashboard/holdings (Portfolio Holdings) › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      165 |       const response = await request(app).get("/api/dashboard/holdings");
      166 |
    > 167 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      168 |     });
      169 |
      170 |     test("should return holdings data with valid authentication", async () => {

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:167:47)

  ● Dashboard Routes Integration Tests › GET /api/dashboard/holdings (Portfolio Holdings) › should return holdings data with valid authentication

    expect(received).toHaveProperty(path)

    Expected path: "count"
    Received path: []

    Received value: {"holdings": [], "summary": null}

      179 |         expect(response.body.data).toHaveProperty("holdings");
      180 |         expect(response.body.data).toHaveProperty("summary");
    > 181 |         expect(response.body.data).toHaveProperty("count");
          |                                    ^
      182 |         expect(Array.isArray(response.body.data.holdings)).toBe(true);
      183 |       }
      184 |     });

      at Object.toHaveProperty (tests/integration/routes/dashboard.integration.test.js:181:36)

  ● Dashboard Routes Integration Tests › GET /api/dashboard/holdings (Portfolio Holdings) › should handle invalid authentication tokens

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      204 |         .set("Authorization", "Bearer invalid-token");
      205 |
    > 206 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      207 |     });
      208 |   });
      209 |

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:206:47)

  ● Dashboard Routes Integration Tests › GET /api/dashboard/performance (Portfolio Performance) › should require authentication for performance data

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      212 |       const response = await request(app).get("/api/dashboard/performance");
      213 |
    > 214 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      215 |     });
      216 |
      217 |     test("should return performance data with valid authentication", async () => {

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:214:47)

  ● Dashboard Routes Integration Tests › GET /api/dashboard/performance (Portfolio Performance) › should return performance data with valid authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      220 |         .set("Authorization", `Bearer ${authToken}`);
      221 |
    > 222 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      223 |
      224 |       if (response.status === 200) {
      225 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:222:52)

  ● Dashboard Routes Integration Tests › GET /api/dashboard/alerts (Trading Alerts) › should require authentication for alerts

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      271 |       const response = await request(app).get("/api/dashboard/alerts");
      272 |
    > 273 |       expect([401, 403, 500, 501].includes(response.status)).toBe(true);
          |                                                              ^
      274 |     });
      275 |
      276 |     test("should return alerts data with authentication", async () => {

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:273:62)

  ● Dashboard Routes Integration Tests › Performance and Edge Cases › should handle concurrent requests to dashboard endpoints

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      552 |
      553 |       responses.forEach((response) => {
    > 554 |         expect(response.status).toBe(200);
          |                                 ^
      555 |       });
      556 |     });
      557 |

      at toBe (tests/integration/routes/dashboard.integration.test.js:554:33)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/routes/dashboard.integration.test.js:553:17)

  ● Dashboard Routes Integration Tests › Performance and Edge Cases › should maintain response time consistency

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      563 |       const responseTime = Date.now() - startTime;
      564 |
    > 565 |       expect(response.status).toBe(200);
          |                               ^
      566 |       expect(responseTime).toBeLessThan(15000);
      567 |     });
      568 |

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:565:31)

  ● Dashboard Routes Integration Tests › Performance and Edge Cases › should handle malformed authentication headers

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      581 |           .set("Authorization", header);
      582 |
    > 583 |         expect([401].includes(response.status)).toBe(true);
          |                                                 ^
      584 |       }
      585 |     });
      586 |

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:583:49)

  ● Dashboard Routes Integration Tests › Performance and Edge Cases › should handle database connection failures gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      590 |         .set("Authorization", `Bearer ${authToken}`);
      591 |
    > 592 |       expect(response.status).toBe(200);
          |                               ^
      593 |
      594 |       if (response.status >= 500) {
      595 |         expect(response.body).toHaveProperty("error");

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:592:31)

  ● Dashboard Routes Integration Tests › Performance and Edge Cases › should handle SQL injection attempts safely

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      634 |           .set("Authorization", `Bearer ${authToken}`);
      635 |
    > 636 |         expect([200, 400, 401].includes(response.status)).toBe(true);
          |                                                           ^
      637 |       }
      638 |     });
      639 |

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:636:59)

  ● Dashboard Routes Integration Tests › Performance and Edge Cases › should handle memory pressure with large data requests

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      643 |         .set("Authorization", `Bearer ${authToken}`);
      644 |
    > 645 |       expect([200, 401, 413, 500, 503].includes(response.status)).toBe(true);
          |                                                                   ^
      646 |     });
      647 |
      648 |     test("should validate response content types", async () => {

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:645:67)

  ● Dashboard Routes Integration Tests › Performance and Edge Cases › should handle authentication edge cases

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      674 |         // Test missing authorization header
      675 |         const noAuthResponse = await request(app).get(endpoint);
    > 676 |         expect([401, 403, 500, 501].includes(noAuthResponse.status)).toBe(true);
          |                                                                      ^
      677 |
      678 |         // Test malformed token
      679 |         const badTokenResponse = await request(app)

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:676:70)

  console.log
    [2025-10-19T11:48:48.108Z] [INFO] [ai-strategy-1760874528081-1lnsqjnli] Generating AI-powered strategy from natural language

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "prompt": "Create a momentum trading strategy",
      "symbolCount": 1,
      "aiEnabled": true
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:48:48.124Z] [INFO] [ai-strategy-1760874528081-1lnsqjnli] Generating AI strategy using advanced NLP engine

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    [2025-10-19T11:48:48.126Z] [INFO] [ai-strategy-1760874528081-1lnsqjnli] AI strategy generation successful

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "strategyType": "volatility_trading",
      "confidence": 0.9
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:48:48.127Z] [INFO] [ai-strategy-1760874528081-1lnsqjnli] Successfully parsed AI response

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "strategyName": "Trend_following-APPLE-VolatilityTrading-AI-5L84",
      "confidence": 0.9
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:48:48.128Z] [INFO] [ai-strategy-1760874528081-1lnsqjnli] AI strategy generation successful

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "strategyName": "Trend_following-APPLE-VolatilityTrading-AI-5L84",
      "strategyType": "volatility_trading"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:48:48.128Z] [INFO] [b8ce4089] AI strategy generated successfully

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "strategyName": "Trend_following-APPLE-VolatilityTrading-AI-5L84",
      "strategyType": "volatility_trading"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "POST /api/strategies/ai-generate HTTP/1.1" 200 11028 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "POST /api/strategies/ai-generate HTTP/1.1" 400 84 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "POST /api/strategies/ai-generate HTTP/1.1" 400 110 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "POST /api/strategies/ai-generate HTTP/1.1" 400 84 "-" "-"
  console.log
    [2025-10-19T11:48:48.144Z] [INFO] [ai-strategy-1760874528081-1lnsqjnli] Generating AI-powered strategy from natural language

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "prompt": "Create a momentum trading strategy based on RSI and moving averages",
      "symbolCount": 2,
      "aiEnabled": true
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:48:48.146Z] [INFO] [ai-strategy-1760874528081-1lnsqjnli] Generating AI strategy using advanced NLP engine

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    [2025-10-19T11:48:48.147Z] [INFO] [ai-strategy-1760874528081-1lnsqjnli] AI strategy generation successful

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "strategyType": "volatility_trading",
      "confidence": 0.9
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:48:48.148Z] [INFO] [ai-strategy-1760874528081-1lnsqjnli] Successfully parsed AI response

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "strategyName": "Trend_following-APPLE-VolatilityTrading-AI-PYD6",
      "confidence": 0.9
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:48:48.148Z] [INFO] [ai-strategy-1760874528081-1lnsqjnli] AI strategy generation successful

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "strategyName": "Trend_following-APPLE-VolatilityTrading-AI-PYD6",
      "strategyType": "volatility_trading"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:48:48.149Z] [INFO] [3e74c19d] AI strategy generated successfully

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "strategyName": "Trend_following-APPLE-VolatilityTrading-AI-PYD6",
      "strategyType": "volatility_trading"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "POST /api/strategies/ai-generate HTTP/1.1" 200 11127 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "POST /api/strategies/ai-generate HTTP/1.1" 400 110 "-" "-"
  console.log
    [2025-10-19T11:48:48.156Z] [INFO] [ai-strategy-1760874528081-1lnsqjnli] Generating AI-powered strategy from natural language

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "prompt": "Create a scalping strategy for high frequency trading",
      "symbolCount": 1,
      "aiEnabled": true
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:48:48.158Z] [INFO] [ai-strategy-1760874528081-1lnsqjnli] Generating AI strategy using advanced NLP engine

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    [2025-10-19T11:48:48.159Z] [INFO] [ai-strategy-1760874528081-1lnsqjnli] AI strategy generation successful

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "strategyType": "hft_scalping",
      "confidence": 0.9
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:48:48.159Z] [INFO] [ai-strategy-1760874528081-1lnsqjnli] Successfully parsed AI response

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "strategyName": "Balanced-SPY-HftScalping-AI-09MJ",
      "confidence": 0.9
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:48:48.160Z] [INFO] [ai-strategy-1760874528081-1lnsqjnli] AI strategy generation successful

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "strategyName": "Balanced-SPY-HftScalping-AI-09MJ",
      "strategyType": "hft_scalping"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:48:48.160Z] [INFO] [5abba8d2] AI strategy generated successfully

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "strategyName": "Balanced-SPY-HftScalping-AI-09MJ",
      "strategyType": "hft_scalping"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "POST /api/strategies/ai-generate HTTP/1.1" 200 10632 "-" "-"
  console.log
    [2025-10-19T11:48:48.163Z] [INFO] [67d5ee71] Strategy validation request

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "strategyName": "Test Strategy"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:48:48.165Z] [INFO] [d8211f86] Strategy validation completed

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "isValid": false,
      "errorCount": 2,
      "warningCount": 3
    }

      at Logger.log [as output] (utils/logger.js:90:17)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "POST /api/strategies/validate HTTP/1.1" 200 282 "-" "-"
  console.log
    [2025-10-19T11:48:48.167Z] [INFO] [916b35a0] Strategy validation request

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {}

      at Logger.log [as output] (utils/logger.js:90:17)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "POST /api/strategies/validate HTTP/1.1" 400 68 "-" "-"
  console.log
    [2025-10-19T11:48:48.171Z] [INFO] [b6ec02d3] Strategy validation request

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "strategyName": "Test Strategy"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "POST /api/strategies/validate HTTP/1.1" 400 68 "-" "-"
  console.log
    [2025-10-19T11:48:48.174Z] [INFO] [87b32545] Strategy validation request

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "strategyName": "Test Momentum Strategy"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:48:48.176Z] [INFO] [0928f8de] Strategy validation completed

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "isValid": false,
      "errorCount": 2,
      "warningCount": 2
    }

      at Logger.log [as output] (utils/logger.js:90:17)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "POST /api/strategies/validate HTTP/1.1" 200 246 "-" "-"
  console.log
    [2025-10-19T11:48:48.178Z] [INFO] [45cdd05b] Strategy validation request

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "strategyName": "Empty Strategy"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "POST /api/strategies/validate HTTP/1.1" 400 68 "-" "-"
  console.log
    [2025-10-19T11:48:48.182Z] [INFO] [9e1f29aa] AI strategy backtest request

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "strategyName": "Test Strategy",
      "symbolCount": 0
    }

      at Logger.log [as output] (utils/logger.js:90:17)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "POST /api/strategies/run-ai-strategy HTTP/1.1" 400 75 "-" "-"
  console.log
    [2025-10-19T11:48:48.185Z] [INFO] [6cdbabd1] AI strategy backtest request

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "strategyName": "Test Strategy",
      "symbolCount": 1
    }

      at Logger.log [as output] (utils/logger.js:90:17)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "POST /api/strategies/run-ai-strategy HTTP/1.1" 501 136 "-" "-"
  console.log
    [2025-10-19T11:48:48.191Z] [INFO] [8d5147b2] AI strategy backtest request

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "symbolCount": 0
    }

      at Logger.log [as output] (utils/logger.js:90:17)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "POST /api/strategies/run-ai-strategy HTTP/1.1" 400 64 "-" "-"
  console.log
    [2025-10-19T11:48:48.195Z] [INFO] [c6c3ea9b] AI strategy backtest request

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "strategyName": "Test Strategy",
      "symbolCount": 0
    }

      at Logger.log [as output] (utils/logger.js:90:17)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "POST /api/strategies/run-ai-strategy HTTP/1.1" 400 64 "-" "-"
  console.log
    [2025-10-19T11:48:48.198Z] [INFO] [ce5648c1] AI strategy backtest request

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "strategyName": "Test Strategy",
      "symbolCount": 2
    }

      at Logger.log [as output] (utils/logger.js:90:17)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "POST /api/strategies/run-ai-strategy HTTP/1.1" 501 136 "-" "-"
  console.log
    [2025-10-19T11:48:48.203Z] [INFO] [89502e27] AI strategy backtest request

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "strategyName": "Test Strategy",
      "symbolCount": 0
    }

      at Logger.log [as output] (utils/logger.js:90:17)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "POST /api/strategies/run-ai-strategy HTTP/1.1" 400 75 "-" "-"
  console.log
    [2025-10-19T11:48:48.208Z] [INFO] [c1671e8e] HFT deployment request

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "strategyName": "Test",
      "sharpeRatio": 1.5
    }

      at Logger.log [as output] (utils/logger.js:90:17)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "POST /api/strategies/deploy-hft HTTP/1.1" 400 244 "-" "-"
  console.log
    [2025-10-19T11:48:48.211Z] [INFO] [c7f07ee3] HFT deployment request

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "strategyName": "High Performance Strategy",
      "sharpeRatio": 1.5
    }

      at Logger.log [as output] (utils/logger.js:90:17)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "POST /api/strategies/deploy-hft HTTP/1.1" 501 130 "-" "-"
  console.log
    [2025-10-19T11:48:48.215Z] [INFO] [0d1d1ab9] HFT deployment request

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {}

      at Logger.log [as output] (utils/logger.js:90:17)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "POST /api/strategies/deploy-hft HTTP/1.1" 400 89 "-" "-"
  console.log
    [2025-10-19T11:48:48.219Z] [INFO] [cc9df034] HFT deployment request

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "strategyName": "Poor Performance Strategy",
      "sharpeRatio": 0.5
    }

      at Logger.log [as output] (utils/logger.js:90:17)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "POST /api/strategies/deploy-hft HTTP/1.1" 400 246 "-" "-"
  console.log
    [2025-10-19T11:48:48.222Z] [INFO] [f391f84a] HFT deployment request

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "strategyName": "High Performance Strategy",
      "sharpeRatio": 1.5
    }

      at Logger.log [as output] (utils/logger.js:90:17)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "POST /api/strategies/deploy-hft HTTP/1.1" 501 130 "-" "-"
  console.log
    [2025-10-19T11:48:48.227Z] [INFO] [916b252d] HFT deployment request

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "strategyName": "Edge Case Strategy",
      "sharpeRatio": 1
    }

      at Logger.log [as output] (utils/logger.js:90:17)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "POST /api/strategies/deploy-hft HTTP/1.1" 501 130 "-" "-"
  console.log
    [2025-10-19T11:48:48.231Z] [INFO] [ca5b5f64] Available symbols request

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {}

      at Logger.log [as output] (utils/logger.js:90:17)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/strategies/available-symbols HTTP/1.1" 503 124 "-" "-"
  console.log
    [2025-10-19T11:48:48.234Z] [INFO] [75166d9a] Available symbols request

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {}

      at Logger.log [as output] (utils/logger.js:90:17)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/strategies/available-symbols HTTP/1.1" 503 124 "-" "-"
  console.log
    [2025-10-19T11:48:48.238Z] [INFO] [195e0d54] Available symbols request

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {}

      at Logger.log [as output] (utils/logger.js:90:17)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/strategies/available-symbols HTTP/1.1" 503 124 "-" "-"
  console.log
    [2025-10-19T11:48:48.241Z] [INFO] [e930ae94] User strategies list request

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "includeBacktests": false,
      "includeDeployments": false
    }

      at Logger.log [as output] (utils/logger.js:90:17)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/strategies/list HTTP/1.1" 200 142 "-" "-"
  console.log
    [2025-10-19T11:48:48.244Z] [INFO] [893a0c31] User strategies list request

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "includeBacktests": false,
      "includeDeployments": false
    }

      at Logger.log [as output] (utils/logger.js:90:17)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/strategies/list HTTP/1.1" 200 142 "-" "-"
  console.log
    [2025-10-19T11:48:48.246Z] [INFO] [31d03bf1] User strategies list request

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "includeBacktests": "true",
      "includeDeployments": "true"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/strategies/list?includeBacktests=true&includeDeployments=true HTTP/1.1" 200 140 "-" "-"
  console.log
    [2025-10-19T11:48:48.249Z] [INFO] [c086b4f7] User strategies list request

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "includeBacktests": "false",
      "includeDeployments": "false"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/strategies/list?includeBacktests=false&includeDeployments=false HTTP/1.1" 200 142 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/strategies/templates HTTP/1.1" 200 994 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/strategies/templates HTTP/1.1" 200 994 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/strategies/templates HTTP/1.1" 200 994 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/strategies/templates HTTP/1.1" 200 994 "-" "-"
  console.log
    [2025-10-19T11:48:48.258Z] [INFO] [ai-strategy-1760874528081-1lnsqjnli] Generating AI-powered strategy from natural language

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "prompt": "Create a strategy",
      "symbolCount": 1,
      "aiEnabled": true
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:48:48.260Z] [INFO] [ai-strategy-1760874528081-1lnsqjnli] Generating AI strategy using advanced NLP engine

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    [2025-10-19T11:48:48.261Z] [INFO] [ai-strategy-1760874528081-1lnsqjnli] AI strategy generation successful

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "strategyType": "volatility_trading",
      "confidence": 0.9
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:48:48.261Z] [INFO] [ai-strategy-1760874528081-1lnsqjnli] Successfully parsed AI response

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "strategyName": "Balanced-APPLE-VolatilityTrading-AI-SWY6",
      "confidence": 0.9
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:48:48.262Z] [INFO] [ai-strategy-1760874528081-1lnsqjnli] AI strategy generation successful

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "strategyName": "Balanced-APPLE-VolatilityTrading-AI-SWY6",
      "strategyType": "volatility_trading"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:48:48.262Z] [INFO] [d522c8ed] AI strategy generated successfully

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "strategyName": "Balanced-APPLE-VolatilityTrading-AI-SWY6",
      "strategyType": "volatility_trading"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "POST /api/strategies/ai-generate HTTP/1.1" 200 10956 "-" "-"
  console.log
    [2025-10-19T11:48:48.266Z] [INFO] [79867cfe] Strategy validation request

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {}

      at Logger.log [as output] (utils/logger.js:90:17)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "POST /api/strategies/validate HTTP/1.1" 400 68 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "POST /api/strategies/ai-generate HTTP/1.1" 400 84 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/strategies/templates HTTP/1.1" 200 994 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/strategies/templates HTTP/1.1" 200 994 "-" "-"
  console.log
    [2025-10-19T11:48:48.273Z] [INFO] [0cc1a15e] Available symbols request

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {}

      at Logger.log [as output] (utils/logger.js:90:17)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/strategies/available-symbols HTTP/1.1" 503 124 "-" "-"
  console.log
    [2025-10-19T11:48:48.275Z] [INFO] [57d23b05] User strategies list request

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "includeBacktests": false,
      "includeDeployments": false
    }

      at Logger.log [as output] (utils/logger.js:90:17)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/strategies/list HTTP/1.1" 200 142 "-" "-"
FAIL tests/integration/routes/strategyBuilder.integration.test.js
  ● Strategy Builder Routes › POST /api/strategies/ai-generate › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      58 |         });
      59 |
    > 60 |       expect([401].includes(response.status)).toBe(true);
         |                                               ^
      61 |     });
      62 |
      63 |     test("should require prompt parameter", async () => {

      at Object.toBe (tests/integration/routes/strategyBuilder.integration.test.js:60:47)

  ● Strategy Builder Routes › POST /api/strategies/validate › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      174 |         });
      175 |
    > 176 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      177 |     });
      178 |
      179 |     test("should require strategy parameter", async () => {

      at Object.toBe (tests/integration/routes/strategyBuilder.integration.test.js:176:47)

  ● Strategy Builder Routes › POST /api/strategies/run-ai-strategy › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      262 |         });
      263 |
    > 264 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      265 |     });
      266 |
      267 |     test("should run AI strategy backtest successfully", async () => {

      at Object.toBe (tests/integration/routes/strategyBuilder.integration.test.js:264:47)

  ● Strategy Builder Routes › POST /api/strategies/deploy-hft › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      369 |         });
      370 |
    > 371 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      372 |     });
      373 |
      374 |     test("should return 501 not implemented", async () => {

      at Object.toBe (tests/integration/routes/strategyBuilder.integration.test.js:371:47)

  ● Strategy Builder Routes › GET /api/strategies/available-symbols › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      492 |       );
      493 |
    > 494 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      495 |     });
      496 |
      497 |     test("should return available symbols", async () => {

      at Object.toBe (tests/integration/routes/strategyBuilder.integration.test.js:494:47)

  ● Strategy Builder Routes › GET /api/strategies/available-symbols › should return available symbols

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 503

      500 |         .set("Authorization", "Bearer dev-bypass-token");
      501 |
    > 502 |       expect(response.status).toBe(200);
          |                               ^
      503 |
      504 |       if (response.status === 200) {
      505 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/strategyBuilder.integration.test.js:502:31)

  ● Strategy Builder Routes › GET /api/strategies/available-symbols › should handle database connection issues

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 503

      520 |         .set("Authorization", "Bearer dev-bypass-token");
      521 |
    > 522 |       expect(response.status).toBe(200);
          |                               ^
      523 |     });
      524 |   });
      525 |

      at Object.toBe (tests/integration/routes/strategyBuilder.integration.test.js:522:31)

  ● Strategy Builder Routes › GET /api/strategies/list › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      528 |       const response = await request(app).get("/api/strategies/list");
      529 |
    > 530 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      531 |     });
      532 |
      533 |     test("should return 501 not implemented", async () => {

      at Object.toBe (tests/integration/routes/strategyBuilder.integration.test.js:530:47)

  ● Strategy Builder Routes › GET /api/strategies/templates › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      582 |       const response = await request(app).get("/api/strategies/templates");
      583 |
    > 584 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      585 |     });
      586 |
      587 |     test("should return strategy templates", async () => {

      at Object.toBe (tests/integration/routes/strategyBuilder.integration.test.js:584:47)

  ● Strategy Builder Routes › Authentication and Error Handling › should handle invalid authentication tokens

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      643 |         .set("Authorization", "Bearer invalid-token");
      644 |
    > 645 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      646 |     });
      647 |
      648 |     test("should handle missing authorization header", async () => {

      at Object.toBe (tests/integration/routes/strategyBuilder.integration.test.js:645:47)

  ● Strategy Builder Routes › Authentication and Error Handling › should handle missing authorization header

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      654 |         });
      655 |
    > 656 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      657 |     });
      658 |
      659 |     test("should handle malformed request bodies", async () => {

      at Object.toBe (tests/integration/routes/strategyBuilder.integration.test.js:656:47)


  ● Test suite failed to run

    Cannot add a hook after tests have started running. Hooks must be defined synchronously.

      30 | describe("Strategy Builder Routes", () => {
      31 |   beforeAll(async () => {
    > 32 |     beforeEach(() => {
         |     ^
      33 |     jest.clearAllMocks();
      34 |     query.mockImplementation((sql, params) => {
      35 |       // Default: return empty rows for all queries

      at eventHandler (node_modules/jest-circus/build/eventHandler.js:104:11)
      at Object.beforeEach (tests/integration/routes/strategyBuilder.integration.test.js:32:5)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔔 Active alerts requested for user: test-user-123, status: active

      at log (routes/alerts.js:39:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/alerts/active HTTP/1.1" 200 501 "-" "-"
  console.log
    📊 Portfolio summary requested for user: test-user-123

      at log (routes/portfolio.js:175:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/portfolio/summary HTTP/1.1" 200 655 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    📋 Portfolio positions requested for user: test-user-123

      at log (routes/portfolio.js:282:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "POST /api/portfolio/nonexistent-endpoint HTTP/1.1" 404 140 "-" "-"
  console.log
    📊 Portfolio summary requested for user: test-user-123

      at log (routes/portfolio.js:175:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/portfolio/summary HTTP/1.1" 200 655 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/health HTTP/1.1" 200 464 "-" "-"
FAIL tests/integration/infrastructure/middleware-chains.integration.test.js
  Middleware Chain Integration
    Authentication → Validation → Response Pipeline
      ✓ should process complete middleware chain for valid requests (4 ms)
      ✕ should handle auth failure → error formatting chain (3 ms)
      ✓ should handle malformed authorization headers (6 ms)
    Cross-Route Middleware Consistency
      ✓ should apply auth middleware consistently across protected routes (8 ms)
      ✓ should format responses consistently across all routes (4 ms)
    Error Propagation Integration
      ✓ should handle database connection errors gracefully (2 ms)
      ✓ should handle invalid route requests through middleware chain (2 ms)
    Request Context Propagation
      ✓ should maintain user context through service calls (3 ms)
      ✓ should handle concurrent requests through middleware chain (6 ms)
    Performance Under Middleware Load
      ✓ should maintain middleware chain performance (3 ms)

  ● Middleware Chain Integration › Authentication → Validation → Response Pipeline › should handle auth failure → error formatting chain

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 500]

      75 |       const response = await request(app).get("/api/portfolio").send(); // No auth header
      76 |
    > 77 |       expect([401, 500]).toContain(response.status);
         |                          ^
      78 |
      79 |       // Verify error response format consistency
      80 |       expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/infrastructure/middleware-chains.integration.test.js:77:26)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment HTTP/1.1" 200 184 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/health HTTP/1.1" 200 135 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/ping HTTP/1.1" 200 77 "-" "-"
  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=undefined, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    ❌ Symbol parameter missing

      at log (routes/sentiment.js:39:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/analysis HTTP/1.1" 400 149 "-" "-"
  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=AAPL, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: AAPL, period: 7d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for AAPL, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 0 rows

      at log (routes/sentiment.js:90:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/analysis?symbol=AAPL HTTP/1.1" 503 157 "-" "-"
  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=AAPL, period=1d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: AAPL, period: 1d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for AAPL, period: 1 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 0 rows

      at log (routes/sentiment.js:90:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/analysis?symbol=AAPL&period=1d HTTP/1.1" 503 157 "-" "-"
  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=MSFT, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: MSFT, period: 7d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for MSFT, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 0 rows

      at log (routes/sentiment.js:90:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/analysis?symbol=MSFT HTTP/1.1" 503 157 "-" "-"
  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=TSLA, period=invalid

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: TSLA, period: invalid

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for TSLA, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 0 rows

      at log (routes/sentiment.js:90:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/analysis?symbol=TSLA&period=invalid HTTP/1.1" 503 157 "-" "-"
  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=aapl, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: aapl, period: 7d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for AAPL, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 0 rows

      at log (routes/sentiment.js:90:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/analysis?symbol=aapl HTTP/1.1" 503 157 "-" "-"
  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=BRK.A, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: BRK.A, period: 7d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for BRK.A, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 0 rows

      at log (routes/sentiment.js:90:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/analysis?symbol=BRK.A HTTP/1.1" 503 157 "-" "-"
  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=GOOGL, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: GOOGL, period: 7d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for GOOGL, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 0 rows

      at log (routes/sentiment.js:90:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/analysis?symbol=GOOGL HTTP/1.1" 503 157 "-" "-"
  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=NVDA, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: NVDA, period: 7d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for NVDA, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 0 rows

      at log (routes/sentiment.js:90:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/analysis?symbol=NVDA HTTP/1.1" 503 157 "-" "-"
  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=META, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: META, period: 7d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for META, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 0 rows

      at log (routes/sentiment.js:90:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/analysis?symbol=META HTTP/1.1" 503 157 "-" "-"
  console.log
    📱 Social sentiment overview requested - not implemented

      at log (routes/sentiment.js:384:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/social HTTP/1.1" 501 311 "-" "-"
  console.log
    📱 Social sentiment for AAPL requested - not implemented

      at log (routes/sentiment.js:537:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/social/AAPL HTTP/1.1" 501 250 "-" "-"
  console.log
    📱 Social sentiment for MSFT requested - not implemented

      at log (routes/sentiment.js:537:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/social/MSFT HTTP/1.1" 501 250 "-" "-"
  console.log
    📱 Social sentiment for TSLA requested - not implemented

      at log (routes/sentiment.js:537:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/social/TSLA HTTP/1.1" 501 250 "-" "-"
  console.log
    📱 Social sentiment for GOOGL requested - not implemented

      at log (routes/sentiment.js:537:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/social/GOOGL HTTP/1.1" 501 251 "-" "-"
  console.log
    📱 Social sentiment for BRK.A requested - not implemented

      at log (routes/sentiment.js:537:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/social/BRK.A HTTP/1.1" 501 251 "-" "-"
  console.log
    📈 Trending sentiment requested - not implemented

      at log (routes/sentiment.js:563:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/trending HTTP/1.1" 501 249 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment HTTP/1.1" 200 184 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/health HTTP/1.1" 200 135 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/ping HTTP/1.1" 200 77 "-" "-"
  console.log
    📱 Social sentiment overview requested - not implemented

      at log (routes/sentiment.js:384:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/social HTTP/1.1" 501 311 "-" "-"
  console.log
    📈 Trending sentiment requested - not implemented

      at log (routes/sentiment.js:563:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/trending HTTP/1.1" 501 249 "-" "-"
  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=AAPL, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: AAPL, period: 7d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for AAPL, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 0 rows

      at log (routes/sentiment.js:90:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/analysis?symbol=AAPL HTTP/1.1" 503 157 "-" "-"
  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=TEST_ERROR_SYMBOL, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: TEST_ERROR_SYMBOL, period: 7d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for TEST_ERROR_SYMBOL, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 0 rows

      at log (routes/sentiment.js:90:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/analysis?symbol=TEST_ERROR_SYMBOL HTTP/1.1" 503 157 "-" "-"
  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    ❌ Symbol parameter missing

      at log (routes/sentiment.js:39:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/analysis?symbol= HTTP/1.1" 400 149 "-" "-"
  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol= invalid , period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol:  invalid , period: 7d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for INVALID, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 0 rows

      at log (routes/sentiment.js:90:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/analysis?symbol=%20invalid%20 HTTP/1.1" 503 157 "-" "-"
  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=BRK.A, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: BRK.A, period: 7d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for BRK.A, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 0 rows

      at log (routes/sentiment.js:90:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/analysis?symbol=BRK%2EA&period=7d HTTP/1.1" 503 157 "-" "-"
  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=AAPL, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: AAPL, period: 7d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for AAPL, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 0 rows

      at log (routes/sentiment.js:90:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/analysis?symbol=AAPL HTTP/1.1" 503 157 "-" "-"
  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=AAPL, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: AAPL, period: 7d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for AAPL, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 0 rows

      at log (routes/sentiment.js:90:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/analysis?symbol=AAPL HTTP/1.1" 503 157 "-" "-"
  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=MSFT, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: MSFT, period: 7d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for MSFT, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 0 rows

      at log (routes/sentiment.js:90:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/analysis?symbol=MSFT HTTP/1.1" 503 157 "-" "-"
  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=AAPL, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: AAPL, period: 7d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for AAPL, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 0 rows

      at log (routes/sentiment.js:90:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/analysis?symbol=AAPL HTTP/1.1" 503 157 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment HTTP/1.1" 200 184 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/health HTTP/1.1" 200 135 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/ping HTTP/1.1" 200 77 "-" "-"
  console.log
    📱 Social sentiment overview requested - not implemented

      at log (routes/sentiment.js:384:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/social HTTP/1.1" 501 311 "-" "-"
  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=123, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: 123, period: 7d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for 123, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 0 rows

      at log (routes/sentiment.js:90:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/analysis?symbol=123 HTTP/1.1" 503 157 "-" "-"
  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA, period: 7d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 0 rows

      at log (routes/sentiment.js:90:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/analysis?symbol=AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA HTTP/1.1" 503 157 "-" "-"
  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=AAPL, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: AAPL, period: 7d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for AAPL, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 0 rows

      at log (routes/sentiment.js:90:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/sentiment/analysis?symbol=AAPL&period=7d&extra=ignored HTTP/1.1" 503 157 "-" "-"
FAIL tests/integration/routes/sentiment.integration.test.js
  ● Sentiment Routes › GET /api/sentiment/analysis › should return sentiment analysis for valid symbol

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 503

      115 |         .set("Authorization", "Bearer dev-bypass-token");
      116 |
    > 117 |       expect(response.status).toBe(200);
          |                               ^
      118 |
      119 |       if (response.status === 200) {
      120 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/sentiment.integration.test.js:117:31)

  ● Sentiment Routes › GET /api/sentiment/analysis › should handle different period parameters

    expect(received).toContain(expected) // indexOf

    Expected value: 503
    Received array: [200, 404]

      162 |           .set("Authorization", "Bearer dev-bypass-token");
      163 |
    > 164 |         expect([200, 404]).toContain(response.status);
          |                            ^
      165 |
      166 |         if (response.status === 200) {
      167 |           expect(response.body.data.period).toBe(period);

      at Object.toContain (tests/integration/routes/sentiment.integration.test.js:164:28)

  ● Sentiment Routes › GET /api/sentiment/analysis › should use default period when not specified

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 503

      175 |         .set("Authorization", "Bearer dev-bypass-token");
      176 |
    > 177 |       expect(response.status).toBe(200);
          |                               ^
      178 |
      179 |       if (response.status === 200) {
      180 |         expect(response.body.data.period).toBe("7d");

      at Object.toBe (tests/integration/routes/sentiment.integration.test.js:177:31)

  ● Sentiment Routes › GET /api/sentiment/analysis › should handle invalid period parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 503

      187 |         .set("Authorization", "Bearer dev-bypass-token");
      188 |
    > 189 |       expect(response.status).toBe(200);
          |                               ^
      190 |
      191 |       if (response.status === 200) {
      192 |         // Should fall back to default period

      at Object.toBe (tests/integration/routes/sentiment.integration.test.js:189:31)

  ● Sentiment Routes › GET /api/sentiment/analysis › should convert symbol to uppercase

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 503

      200 |         .set("Authorization", "Bearer dev-bypass-token");
      201 |
    > 202 |       expect(response.status).toBe(200);
          |                               ^
      203 |
      204 |       if (response.status === 200) {
      205 |         expect(response.body.data.symbol).toBe("AAPL");

      at Object.toBe (tests/integration/routes/sentiment.integration.test.js:202:31)

  ● Sentiment Routes › GET /api/sentiment/analysis › should handle special characters in symbol

    expect(received).toContain(expected) // indexOf

    Expected value: 503
    Received array: [200, 404]

      212 |         .set("Authorization", "Bearer dev-bypass-token");
      213 |
    > 214 |       expect([200, 404]).toContain(response.status);
          |                          ^
      215 |
      216 |       if (response.status === 200) {
      217 |         expect(response.body.data.symbol).toBe("BRK.A");

      at Object.toContain (tests/integration/routes/sentiment.integration.test.js:214:26)

  ● Sentiment Routes › Authentication › should handle sentiment analysis without authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      368 |
      369 |       // May work without auth or require it
    > 370 |       expect([200, 400, 401, 403, 500].includes(response.status)).toBe(true);
          |                                                                   ^
      371 |     });
      372 |   });
      373 |

      at Object.toBe (tests/integration/routes/sentiment.integration.test.js:370:67)

  ● Sentiment Routes › Error Handling › should handle database errors gracefully

    expect(received).toContain(expected) // indexOf

    Expected value: 503
    Received array: [200, 404, 500]

      378 |         .set("Authorization", "Bearer dev-bypass-token");
      379 |
    > 380 |       expect([200, 404, 500]).toContain(response.status);
          |                               ^
      381 |
      382 |       if (response.status === 500) {
      383 |         expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/routes/sentiment.integration.test.js:380:31)

  ● Sentiment Routes › Error Handling › should handle malformed URLs

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      399 |         .set("Authorization", "Bearer dev-bypass-token");
      400 |
    > 401 |       expect([200, 400, 404, 500].includes(response.status)).toBe(true);
          |                                                              ^
      402 |     });
      403 |
      404 |     test("should handle URL encoded parameters", async () => {

      at Object.toBe (tests/integration/routes/sentiment.integration.test.js:401:62)

  ● Sentiment Routes › Error Handling › should handle URL encoded parameters

    expect(received).toContain(expected) // indexOf

    Expected value: 503
    Received array: [200, 404]

      407 |         .set("Authorization", "Bearer dev-bypass-token");
      408 |
    > 409 |       expect([200, 404]).toContain(response.status);
          |                          ^
      410 |
      411 |       if (response.status === 200) {
      412 |         expect(response.body.data.symbol).toBe("BRK.A");

      at Object.toContain (tests/integration/routes/sentiment.integration.test.js:409:26)

  ● Sentiment Routes › Performance › should respond within reasonable time

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      475 |
      476 |       expect(responseTime).toBeLessThan(5000); // 5 second timeout
    > 477 |       expect([200, 400, 500].includes(response.status)).toBe(true);
          |                                                         ^
      478 |     });
      479 |
      480 |     test("should handle concurrent requests", async () => {

      at Object.toBe (tests/integration/routes/sentiment.integration.test.js:477:57)

  ● Sentiment Routes › Edge Cases › should handle numeric symbols

    expect(received).toContain(expected) // indexOf

    Expected value: 503
    Received array: [200, 404]

      508 |         .set("Authorization", "Bearer dev-bypass-token");
      509 |
    > 510 |       expect([200, 404]).toContain(response.status);
          |                          ^
      511 |
      512 |       if (response.status === 200) {
      513 |         expect(response.body.data.symbol).toBe("123");

      at Object.toContain (tests/integration/routes/sentiment.integration.test.js:510:26)

  ● Sentiment Routes › Edge Cases › should handle extremely long symbols

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      521 |         .set("Authorization", "Bearer dev-bypass-token");
      522 |
    > 523 |       expect([200, 400, 404, 500].includes(response.status)).toBe(true);
          |                                                              ^
      524 |     });
      525 |
      526 |     test("should handle multiple query parameters", async () => {

      at Object.toBe (tests/integration/routes/sentiment.integration.test.js:523:62)

  ● Sentiment Routes › Edge Cases › should handle multiple query parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 503

      529 |         .set("Authorization", "Bearer dev-bypass-token");
      530 |
    > 531 |       expect(response.status).toBe(200);
          |                               ^
      532 |
      533 |       if (response.status === 200) {
      534 |         expect(response.body.data.symbol).toBe("AAPL");

      at Object.toBe (tests/integration/routes/sentiment.integration.test.js:531:31)


  ● Test suite failed to run

    Cannot add a hook after tests have started running. Hooks must be defined synchronously.

      30 | describe("Sentiment Routes", () => {
      31 |   beforeAll(async () => {
    > 32 |     beforeEach(() => {
         |     ^
      33 |     jest.clearAllMocks();
      34 |     query.mockImplementation((sql, params) => {
      35 |       // Default: return empty rows for all queries

      at eventHandler (node_modules/jest-circus/build/eventHandler.js:104:11)
      at Object.beforeEach (tests/integration/routes/sentiment.integration.test.js:32:5)

  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

  console.error
    Recommendations error: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:96:16)

      168 |   } catch (error) {
      169 |     try {
    > 170 |       console.error("Recommendations error:", error);
          |               ^
      171 |     } catch (e) {
      172 |       // Ignore console logging errors
      173 |     }

      at error (routes/recommendations.js:170:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations HTTP/1.1" 500 644 "-" "-"
  console.log
    📊 Stock recommendations requested - symbol: AAPL, category: all

      at log (routes/recommendations.js:20:15)

  console.error
    Recommendations error: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:96:16)

      168 |   } catch (error) {
      169 |     try {
    > 170 |       console.error("Recommendations error:", error);
          |               ^
      171 |     } catch (e) {
      172 |       // Ignore console logging errors
      173 |     }

      at error (routes/recommendations.js:170:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations?symbol=AAPL HTTP/1.1" 500 644 "-" "-"
  console.log
    📊 Stock recommendations requested - symbol: all, category: buy

      at log (routes/recommendations.js:20:15)

  console.error
    Recommendations error: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:96:16)

      168 |   } catch (error) {
      169 |     try {
    > 170 |       console.error("Recommendations error:", error);
          |               ^
      171 |     } catch (e) {
      172 |       // Ignore console logging errors
      173 |     }

      at error (routes/recommendations.js:170:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations?category=buy HTTP/1.1" 500 644 "-" "-"
  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

  console.error
    Recommendations error: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:96:16)

      168 |   } catch (error) {
      169 |     try {
    > 170 |       console.error("Recommendations error:", error);
          |               ^
      171 |     } catch (e) {
      172 |       // Ignore console logging errors
      173 |     }

      at error (routes/recommendations.js:170:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations?analyst=goldman_sachs HTTP/1.1" 500 644 "-" "-"
  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

  console.error
    Recommendations error: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:96:16)

      168 |   } catch (error) {
      169 |     try {
    > 170 |       console.error("Recommendations error:", error);
          |               ^
      171 |     } catch (e) {
      172 |       // Ignore console logging errors
      173 |     }

      at error (routes/recommendations.js:170:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations?limit=50 HTTP/1.1" 500 644 "-" "-"
  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

  console.error
    Recommendations error: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:96:16)

      168 |   } catch (error) {
      169 |     try {
    > 170 |       console.error("Recommendations error:", error);
          |               ^
      171 |     } catch (e) {
      172 |       // Ignore console logging errors
      173 |     }

      at error (routes/recommendations.js:170:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations?timeframe=weekly HTTP/1.1" 500 644 "-" "-"
  console.log
    📊 Stock recommendations requested - symbol: MSFT, category: hold

      at log (routes/recommendations.js:20:15)

  console.error
    Recommendations error: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:96:16)

      168 |   } catch (error) {
      169 |     try {
    > 170 |       console.error("Recommendations error:", error);
          |               ^
      171 |     } catch (e) {
      172 |       // Ignore console logging errors
      173 |     }

      at error (routes/recommendations.js:170:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations?symbol=MSFT&category=hold&limit=10 HTTP/1.1" 500 644 "-" "-"
  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

  console.error
    Recommendations error: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:96:16)

      168 |   } catch (error) {
      169 |     try {
    > 170 |       console.error("Recommendations error:", error);
          |               ^
      171 |     } catch (e) {
      172 |       // Ignore console logging errors
      173 |     }

      at error (routes/recommendations.js:170:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations HTTP/1.1" 500 644 "-" "-"
  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

  console.error
    Recommendations error: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:96:16)

      168 |   } catch (error) {
      169 |     try {
    > 170 |       console.error("Recommendations error:", error);
          |               ^
      171 |     } catch (e) {
      172 |       // Ignore console logging errors
      173 |     }

      at error (routes/recommendations.js:170:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations HTTP/1.1" 500 644 "-" "-"
  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

  console.error
    Recommendations error: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:96:16)

      168 |   } catch (error) {
      169 |     try {
    > 170 |       console.error("Recommendations error:", error);
          |               ^
      171 |     } catch (e) {
      172 |       // Ignore console logging errors
      173 |     }

      at error (routes/recommendations.js:170:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations HTTP/1.1" 500 644 "-" "-"
  console.log
    📊 Stock recommendations requested - symbol: aapl, category: all

      at log (routes/recommendations.js:20:15)

  console.error
    Recommendations error: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:96:16)

      168 |   } catch (error) {
      169 |     try {
    > 170 |       console.error("Recommendations error:", error);
          |               ^
      171 |     } catch (e) {
      172 |       // Ignore console logging errors
      173 |     }

      at error (routes/recommendations.js:170:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations?symbol=aapl HTTP/1.1" 500 644 "-" "-"
  console.log
    📊 Stock recommendations requested - symbol: BRK.A, category: all

      at log (routes/recommendations.js:20:15)

  console.error
    Recommendations error: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:96:16)

      168 |   } catch (error) {
      169 |     try {
    > 170 |       console.error("Recommendations error:", error);
          |               ^
      171 |     } catch (e) {
      172 |       // Ignore console logging errors
      173 |     }

      at error (routes/recommendations.js:170:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations?symbol=BRK.A HTTP/1.1" 500 644 "-" "-"
  console.log
    👨‍💼 Analyst coverage requested for AAPL

      at log (routes/recommendations.js:198:15)

  console.error
    Analyst coverage error for AAPL: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:234:16)

      295 |   } catch (error) {
      296 |     try {
    > 297 |       console.error(`Analyst coverage error for ${req.params.symbol}:`, error);
          |               ^
      298 |     } catch (e) {
      299 |       // Ignore console logging errors
      300 |     }

      at error (routes/recommendations.js:297:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations/analysts/AAPL HTTP/1.1" 500 660 "-" "-"
  console.log
    👨‍💼 Analyst coverage requested for AAPL

      at log (routes/recommendations.js:198:15)

  console.error
    Analyst coverage error for aapl: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:234:16)

      295 |   } catch (error) {
      296 |     try {
    > 297 |       console.error(`Analyst coverage error for ${req.params.symbol}:`, error);
          |               ^
      298 |     } catch (e) {
      299 |       // Ignore console logging errors
      300 |     }

      at error (routes/recommendations.js:297:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations/analysts/aapl HTTP/1.1" 500 660 "-" "-"
  console.log
    👨‍💼 Analyst coverage requested for MSFT

      at log (routes/recommendations.js:198:15)

  console.error
    Analyst coverage error for MSFT: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:234:16)

      295 |   } catch (error) {
      296 |     try {
    > 297 |       console.error(`Analyst coverage error for ${req.params.symbol}:`, error);
          |               ^
      298 |     } catch (e) {
      299 |       // Ignore console logging errors
      300 |     }

      at error (routes/recommendations.js:297:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations/analysts/MSFT?limit=5 HTTP/1.1" 500 660 "-" "-"
  console.log
    👨‍💼 Analyst coverage requested for TSLA

      at log (routes/recommendations.js:198:15)

  console.error
    Analyst coverage error for TSLA: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:234:16)

      295 |   } catch (error) {
      296 |     try {
    > 297 |       console.error(`Analyst coverage error for ${req.params.symbol}:`, error);
          |               ^
      298 |     } catch (e) {
      299 |       // Ignore console logging errors
      300 |     }

      at error (routes/recommendations.js:297:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations/analysts/TSLA HTTP/1.1" 500 660 "-" "-"
  console.log
    👨‍💼 Analyst coverage requested for BRK.A

      at log (routes/recommendations.js:198:15)

  console.error
    Analyst coverage error for BRK.A: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:234:16)

      295 |   } catch (error) {
      296 |     try {
    > 297 |       console.error(`Analyst coverage error for ${req.params.symbol}:`, error);
          |               ^
      298 |     } catch (e) {
      299 |       // Ignore console logging errors
      300 |     }

      at error (routes/recommendations.js:297:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations/analysts/BRK.A HTTP/1.1" 500 661 "-" "-"
  console.log
    👨‍💼 Analyst coverage requested for GOOGL

      at log (routes/recommendations.js:198:15)

  console.error
    Analyst coverage error for GOOGL: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:234:16)

      295 |   } catch (error) {
      296 |     try {
    > 297 |       console.error(`Analyst coverage error for ${req.params.symbol}:`, error);
          |               ^
      298 |     } catch (e) {
      299 |       // Ignore console logging errors
      300 |     }

      at error (routes/recommendations.js:297:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations/analysts/GOOGL HTTP/1.1" 500 661 "-" "-"
  console.log
    👨‍💼 Analyst coverage requested for NVDA

      at log (routes/recommendations.js:198:15)

  console.error
    Analyst coverage error for NVDA: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:234:16)

      295 |   } catch (error) {
      296 |     try {
    > 297 |       console.error(`Analyst coverage error for ${req.params.symbol}:`, error);
          |               ^
      298 |     } catch (e) {
      299 |       // Ignore console logging errors
      300 |     }

      at error (routes/recommendations.js:297:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations/analysts/NVDA HTTP/1.1" 500 660 "-" "-"
  console.log
    👨‍💼 Analyst coverage requested for 123

      at log (routes/recommendations.js:198:15)

  console.error
    Analyst coverage error for 123: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:234:16)

      295 |   } catch (error) {
      296 |     try {
    > 297 |       console.error(`Analyst coverage error for ${req.params.symbol}:`, error);
          |               ^
      298 |     } catch (e) {
      299 |       // Ignore console logging errors
      300 |     }

      at error (routes/recommendations.js:297:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations/analysts/123 HTTP/1.1" 500 659 "-" "-"
  console.log
    👨‍💼 Analyst coverage requested for AAPL

      at log (routes/recommendations.js:198:15)

  console.error
    Analyst coverage error for AAPL: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:234:16)

      295 |   } catch (error) {
      296 |     try {
    > 297 |       console.error(`Analyst coverage error for ${req.params.symbol}:`, error);
          |               ^
      298 |     } catch (e) {
      299 |       // Ignore console logging errors
      300 |     }

      at error (routes/recommendations.js:297:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations/analysts/AAPL?limit=invalid HTTP/1.1" 500 660 "-" "-"
  console.log
    👨‍💼 Analyst coverage requested for AAPL

      at log (routes/recommendations.js:198:15)

  console.error
    Analyst coverage error for AAPL: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:234:16)

      295 |   } catch (error) {
      296 |     try {
    > 297 |       console.error(`Analyst coverage error for ${req.params.symbol}:`, error);
          |               ^
      298 |     } catch (e) {
      299 |       // Ignore console logging errors
      300 |     }

      at error (routes/recommendations.js:297:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations/analysts/AAPL?limit=-5 HTTP/1.1" 500 660 "-" "-"
  console.log
    👨‍💼 Analyst coverage requested for AAPL

      at log (routes/recommendations.js:198:15)

  console.error
    Analyst coverage error for AAPL: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:234:16)

      295 |   } catch (error) {
      296 |     try {
    > 297 |       console.error(`Analyst coverage error for ${req.params.symbol}:`, error);
          |               ^
      298 |     } catch (e) {
      299 |       // Ignore console logging errors
      300 |     }

      at error (routes/recommendations.js:297:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations/analysts/AAPL?limit=99999 HTTP/1.1" 500 660 "-" "-"
  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

  console.error
    Recommendations error: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:96:16)

      168 |   } catch (error) {
      169 |     try {
    > 170 |       console.error("Recommendations error:", error);
          |               ^
      171 |     } catch (e) {
      172 |       // Ignore console logging errors
      173 |     }

      at error (routes/recommendations.js:170:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations HTTP/1.1" 500 644 "-" "-"
  console.log
    👨‍💼 Analyst coverage requested for AAPL

      at log (routes/recommendations.js:198:15)

  console.error
    Analyst coverage error for AAPL: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:234:16)

      295 |   } catch (error) {
      296 |     try {
    > 297 |       console.error(`Analyst coverage error for ${req.params.symbol}:`, error);
          |               ^
      298 |     } catch (e) {
      299 |       // Ignore console logging errors
      300 |     }

      at error (routes/recommendations.js:297:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations/analysts/AAPL HTTP/1.1" 500 660 "-" "-"
  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

  console.error
    Recommendations error: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:96:16)

      168 |   } catch (error) {
      169 |     try {
    > 170 |       console.error("Recommendations error:", error);
          |               ^
      171 |     } catch (e) {
      172 |       // Ignore console logging errors
      173 |     }

      at error (routes/recommendations.js:170:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations HTTP/1.1" 500 644 "-" "-"
  console.log
    📊 Stock recommendations requested - symbol:  invalid , category: all

      at log (routes/recommendations.js:20:15)

  console.error
    Recommendations error: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:96:16)

      168 |   } catch (error) {
      169 |     try {
    > 170 |       console.error("Recommendations error:", error);
          |               ^
      171 |     } catch (e) {
      172 |       // Ignore console logging errors
      173 |     }

      at error (routes/recommendations.js:170:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations?symbol=%20invalid%20 HTTP/1.1" 500 644 "-" "-"
  console.log
    📊 Stock recommendations requested - symbol: all, category:

      at log (routes/recommendations.js:20:15)

  console.error
    Recommendations error: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:96:16)

      168 |   } catch (error) {
      169 |     try {
    > 170 |       console.error("Recommendations error:", error);
          |               ^
      171 |     } catch (e) {
      172 |       // Ignore console logging errors
      173 |     }

      at error (routes/recommendations.js:170:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations?symbol=&category=&analyst= HTTP/1.1" 500 644 "-" "-"
  console.log
    📊 Stock recommendations requested - symbol: BRK.A, category: all

      at log (routes/recommendations.js:20:15)

  console.error
    Recommendations error: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:96:16)

      168 |   } catch (error) {
      169 |     try {
    > 170 |       console.error("Recommendations error:", error);
          |               ^
      171 |     } catch (e) {
      172 |       // Ignore console logging errors
      173 |     }

      at error (routes/recommendations.js:170:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations?symbol=BRK%2EA HTTP/1.1" 500 644 "-" "-"
  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

  console.error
    Recommendations error: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:96:16)

      168 |   } catch (error) {
      169 |     try {
    > 170 |       console.error("Recommendations error:", error);
          |               ^
      171 |     } catch (e) {
      172 |       // Ignore console logging errors
      173 |     }

      at error (routes/recommendations.js:170:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations HTTP/1.1" 500 644 "-" "-"
  console.log
    👨‍💼 Analyst coverage requested for AAPL

      at log (routes/recommendations.js:198:15)

  console.error
    Analyst coverage error for AAPL: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:234:16)

      295 |   } catch (error) {
      296 |     try {
    > 297 |       console.error(`Analyst coverage error for ${req.params.symbol}:`, error);
          |               ^
      298 |     } catch (e) {
      299 |       // Ignore console logging errors
      300 |     }

      at error (routes/recommendations.js:297:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations/analysts/AAPL HTTP/1.1" 500 660 "-" "-"
  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

  console.error
    Recommendations error: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:96:16)

      168 |   } catch (error) {
      169 |     try {
    > 170 |       console.error("Recommendations error:", error);
          |               ^
      171 |     } catch (e) {
      172 |       // Ignore console logging errors
      173 |     }

      at error (routes/recommendations.js:170:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations HTTP/1.1" 500 644 "-" "-"
  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

  console.error
    Recommendations error: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:96:16)

      168 |   } catch (error) {
      169 |     try {
    > 170 |       console.error("Recommendations error:", error);
          |               ^
      171 |     } catch (e) {
      172 |       // Ignore console logging errors
      173 |     }

      at error (routes/recommendations.js:170:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations HTTP/1.1" 500 644 "-" "-"
  console.log
    👨‍💼 Analyst coverage requested for AAPL

      at log (routes/recommendations.js:198:15)

  console.error
    Analyst coverage error for AAPL: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:234:16)

      295 |   } catch (error) {
      296 |     try {
    > 297 |       console.error(`Analyst coverage error for ${req.params.symbol}:`, error);
          |               ^
      298 |     } catch (e) {
      299 |       // Ignore console logging errors
      300 |     }

      at error (routes/recommendations.js:297:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations/analysts/AAPL HTTP/1.1" 500 660 "-" "-"
  console.log
    📊 Stock recommendations requested - symbol: MSFT, category: all

      at log (routes/recommendations.js:20:15)

  console.error
    Recommendations error: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:96:16)

      168 |   } catch (error) {
      169 |     try {
    > 170 |       console.error("Recommendations error:", error);
          |               ^
      171 |     } catch (e) {
      172 |       // Ignore console logging errors
      173 |     }

      at error (routes/recommendations.js:170:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations?symbol=MSFT HTTP/1.1" 500 644 "-" "-"
  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

  console.error
    Recommendations error: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:96:16)

      168 |   } catch (error) {
      169 |     try {
    > 170 |       console.error("Recommendations error:", error);
          |               ^
      171 |     } catch (e) {
      172 |       // Ignore console logging errors
      173 |     }

      at error (routes/recommendations.js:170:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations HTTP/1.1" 500 644 "-" "-"
  console.log
    👨‍💼 Analyst coverage requested for AAPL

      at log (routes/recommendations.js:198:15)

  console.error
    Analyst coverage error for AAPL: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/recommendations.js:234:16)

      295 |   } catch (error) {
      296 |     try {
    > 297 |       console.error(`Analyst coverage error for ${req.params.symbol}:`, error);
          |               ^
      298 |     } catch (e) {
      299 |       // Ignore console logging errors
      300 |     }

      at error (routes/recommendations.js:297:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:48 +0000] "GET /api/recommendations/analysts/AAPL HTTP/1.1" 500 660 "-" "-"
FAIL tests/integration/routes/recommendations.integration.test.js
  ● Recommendations Routes › GET /api/recommendations › should fetch stock recommendations successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      55 |         .set("Authorization", "Bearer dev-bypass-token");
      56 |
    > 57 |       expect(response.status).toBe(200);
         |                               ^
      58 |       expect(response.body).toHaveProperty("success", true);
      59 |       expect(response.body).toHaveProperty("recommendations");
      60 |       expect(response.body).toHaveProperty("summary");

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:57:31)

  ● Recommendations Routes › GET /api/recommendations › should handle symbol parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      69 |         .set("Authorization", "Bearer dev-bypass-token");
      70 |
    > 71 |       expect(response.status).toBe(200);
         |                               ^
      72 |       expect(response.body.success).toBe(true);
      73 |       expect(response.body.filters.symbol).toBe("AAPL");
      74 |     });

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:71:31)

  ● Recommendations Routes › GET /api/recommendations › should handle category parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      79 |         .set("Authorization", "Bearer dev-bypass-token");
      80 |
    > 81 |       expect(response.status).toBe(200);
         |                               ^
      82 |       expect(response.body.success).toBe(true);
      83 |       expect(response.body.filters.category).toBe("buy");
      84 |     });

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:81:31)

  ● Recommendations Routes › GET /api/recommendations › should handle analyst parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      89 |         .set("Authorization", "Bearer dev-bypass-token");
      90 |
    > 91 |       expect(response.status).toBe(200);
         |                               ^
      92 |       expect(response.body.success).toBe(true);
      93 |       expect(response.body.filters.analyst).toBe("goldman_sachs");
      94 |     });

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:91:31)

  ● Recommendations Routes › GET /api/recommendations › should handle limit parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       99 |         .set("Authorization", "Bearer dev-bypass-token");
      100 |
    > 101 |       expect(response.status).toBe(200);
          |                               ^
      102 |       expect(response.body.success).toBe(true);
      103 |       expect(response.body.filters.limit).toBe(50);
      104 |     });

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:101:31)

  ● Recommendations Routes › GET /api/recommendations › should handle timeframe parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      109 |         .set("Authorization", "Bearer dev-bypass-token");
      110 |
    > 111 |       expect(response.status).toBe(200);
          |                               ^
      112 |       expect(response.body.success).toBe(true);
      113 |       expect(response.body.filters.timeframe).toBe("weekly");
      114 |     });

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:111:31)

  ● Recommendations Routes › GET /api/recommendations › should handle multiple parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      119 |         .set("Authorization", "Bearer dev-bypass-token");
      120 |
    > 121 |       expect(response.status).toBe(200);
          |                               ^
      122 |       expect(response.body.success).toBe(true);
      123 |       expect(response.body.filters.symbol).toBe("MSFT");
      124 |       expect(response.body.filters.category).toBe("hold");

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:121:31)

  ● Recommendations Routes › GET /api/recommendations › should use default values for missing parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      131 |         .set("Authorization", "Bearer dev-bypass-token");
      132 |
    > 133 |       expect(response.status).toBe(200);
          |                               ^
      134 |       expect(response.body.success).toBe(true);
      135 |       expect(response.body.filters.symbol).toBe(undefined);
      136 |       expect(response.body.filters.category).toBe("all");

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:133:31)

  ● Recommendations Routes › GET /api/recommendations › should include proper response structure

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      145 |         .set("Authorization", "Bearer dev-bypass-token");
      146 |
    > 147 |       expect(response.status).toBe(200);
          |                               ^
      148 |       expect(response.body.success).toBe(true);
      149 |       expect(response.body).toHaveProperty("recommendations");
      150 |       expect(response.body).toHaveProperty("summary");

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:147:31)

  ● Recommendations Routes › GET /api/recommendations › should have valid timestamp

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      162 |         .set("Authorization", "Bearer dev-bypass-token");
      163 |
    > 164 |       expect(response.status).toBe(200);
          |                               ^
      165 |       expect(response.body.success).toBe(true);
      166 |       const timestamp = new Date(response.body.timestamp);
      167 |       expect(timestamp).toBeInstanceOf(Date);

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:164:31)

  ● Recommendations Routes › GET /api/recommendations › should handle mixed case symbol

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      174 |         .set("Authorization", "Bearer dev-bypass-token");
      175 |
    > 176 |       expect(response.status).toBe(200);
          |                               ^
      177 |       expect(response.body.success).toBe(true);
      178 |       expect(response.body.filters.symbol).toBe("aapl");
      179 |     });

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:176:31)

  ● Recommendations Routes › GET /api/recommendations › should handle special characters in symbol

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      184 |         .set("Authorization", "Bearer dev-bypass-token");
      185 |
    > 186 |       expect(response.status).toBe(200);
          |                               ^
      187 |       expect(response.body.success).toBe(true);
      188 |       expect(response.body.filters.symbol).toBe("BRK.A");
      189 |     });

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:186:31)

  ● Recommendations Routes › GET /api/recommendations/analysts/:symbol › should fetch analyst coverage successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      196 |         .set("Authorization", "Bearer dev-bypass-token");
      197 |
    > 198 |       expect(response.status).toBe(200);
          |                               ^
      199 |       expect(response.body).toHaveProperty("success", true);
      200 |       expect(response.body).toHaveProperty("symbol");
      201 |       expect(response.body).toHaveProperty("coverage");

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:198:31)

  ● Recommendations Routes › GET /api/recommendations/analysts/:symbol › should convert symbol to uppercase

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      210 |         .set("Authorization", "Bearer dev-bypass-token");
      211 |
    > 212 |       expect(response.status).toBe(200);
          |                               ^
      213 |       expect(response.body.success).toBe(true);
      214 |       expect(response.body.symbol).toBe("AAPL");
      215 |     });

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:212:31)

  ● Recommendations Routes › GET /api/recommendations/analysts/:symbol › should handle limit parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      220 |         .set("Authorization", "Bearer dev-bypass-token");
      221 |
    > 222 |       expect(response.status).toBe(200);
          |                               ^
      223 |       expect(response.body.success).toBe(true);
      224 |       expect(response.body.consensus).toHaveProperty("total_analysts");
      225 |     });

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:222:31)

  ● Recommendations Routes › GET /api/recommendations/analysts/:symbol › should use default limit when not specified

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      230 |         .set("Authorization", "Bearer dev-bypass-token");
      231 |
    > 232 |       expect(response.status).toBe(200);
          |                               ^
      233 |       expect(response.body.success).toBe(true);
      234 |       expect(response.body.symbol).toBe("TSLA");
      235 |     });

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:232:31)

  ● Recommendations Routes › GET /api/recommendations/analysts/:symbol › should handle special characters in symbol

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      240 |         .set("Authorization", "Bearer dev-bypass-token");
      241 |
    > 242 |       expect(response.status).toBe(200);
          |                               ^
      243 |       expect(response.body.success).toBe(true);
      244 |       expect(response.body.symbol).toBe("BRK.A");
      245 |     });

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:242:31)

  ● Recommendations Routes › GET /api/recommendations/analysts/:symbol › should include analyst coverage response structure

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      250 |         .set("Authorization", "Bearer dev-bypass-token");
      251 |
    > 252 |       expect(response.status).toBe(200);
          |                               ^
      253 |       expect(response.body.success).toBe(true);
      254 |       expect(response.body).toHaveProperty("coverage");
      255 |       expect(response.body).toHaveProperty("consensus");

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:252:31)

  ● Recommendations Routes › GET /api/recommendations/analysts/:symbol › should have valid timestamp

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      265 |         .set("Authorization", "Bearer dev-bypass-token");
      266 |
    > 267 |       expect(response.status).toBe(200);
          |                               ^
      268 |       expect(response.body.success).toBe(true);
      269 |       const timestamp = new Date(response.body.timestamp);
      270 |       expect(timestamp).toBeInstanceOf(Date);

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:267:31)

  ● Recommendations Routes › GET /api/recommendations/analysts/:symbol › should handle numeric symbols

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      277 |         .set("Authorization", "Bearer dev-bypass-token");
      278 |
    > 279 |       expect(response.status).toBe(200);
          |                               ^
      280 |       expect(response.body.success).toBe(true);
      281 |       expect(response.body.symbol).toBe("123");
      282 |     });

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:279:31)

  ● Recommendations Routes › GET /api/recommendations/analysts/:symbol › should handle malformed limit parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      287 |         .set("Authorization", "Bearer dev-bypass-token");
      288 |
    > 289 |       expect(response.status).toBe(200);
          |                               ^
      290 |       expect(response.body.success).toBe(true);
      291 |       // Should handle gracefully, parseInt("invalid") returns NaN, which gets handled
      292 |       expect(response.body).toHaveProperty("symbol");

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:289:31)

  ● Recommendations Routes › GET /api/recommendations/analysts/:symbol › should handle negative limit parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      299 |         .set("Authorization", "Bearer dev-bypass-token");
      300 |
    > 301 |       expect(response.status).toBe(200);
          |                               ^
      302 |       expect(response.body.success).toBe(true);
      303 |       expect(response.body.symbol).toBe("AAPL");
      304 |     });

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:301:31)

  ● Recommendations Routes › GET /api/recommendations/analysts/:symbol › should handle extremely large limit

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      309 |         .set("Authorization", "Bearer dev-bypass-token");
      310 |
    > 311 |       expect(response.status).toBe(200);
          |                               ^
      312 |       expect(response.body).toHaveProperty("success", true);
      313 |       expect(response.body).toHaveProperty("symbol", "AAPL");
      314 |       expect(response.body).toHaveProperty("analysts");

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:311:31)

  ● Recommendations Routes › Error Handling › should handle malformed URLs gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      348 |         .set("Authorization", "Bearer dev-bypass-token");
      349 |
    > 350 |       expect(response.status).toBe(200);
          |                               ^
      351 |       expect(response.body).toHaveProperty("success", true);
      352 |       expect(response.body).toHaveProperty("recommendations");
      353 |       expect(Array.isArray(response.body.recommendations)).toBe(true);

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:350:31)

  ● Recommendations Routes › Error Handling › should handle empty parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      359 |         .set("Authorization", "Bearer dev-bypass-token");
      360 |
    > 361 |       expect(response.status).toBe(200);
          |                               ^
      362 |       expect(response.body).toHaveProperty("success", true);
      363 |     });
      364 |

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:361:31)

  ● Recommendations Routes › Error Handling › should handle URL encoded parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      368 |         .set("Authorization", "Bearer dev-bypass-token");
      369 |
    > 370 |       expect(response.status).toBe(200);
          |                               ^
      371 |       expect(response.body).toHaveProperty("success", true);
      372 |       expect(response.body.filters.symbol).toBe("BRK.A");
      373 |     });

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:370:31)

  ● Recommendations Routes › Response Structure Validation › should have consistent response structure

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      380 |         .set("Authorization", "Bearer dev-bypass-token");
      381 |
    > 382 |       expect(response.status).toBe(200);
          |                               ^
      383 |       expect(response.body).toHaveProperty("success", true);
      384 |       expect(response.body).toHaveProperty("recommendations");
      385 |       expect(response.body).toHaveProperty("summary");

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:382:31)

  ● Recommendations Routes › Response Structure Validation › should have consistent analyst coverage response structure

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      404 |         .set("Authorization", "Bearer dev-bypass-token");
      405 |
    > 406 |       expect(response.status).toBe(200);
          |                               ^
      407 |       expect(response.body).toHaveProperty("success", true);
      408 |       expect(response.body).toHaveProperty("symbol", "AAPL");
      409 |       expect(response.body).toHaveProperty("analysts");

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:406:31)

  ● Recommendations Routes › Performance › should respond within reasonable time

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      425 |
      426 |       expect(responseTime).toBeLessThan(3000);
    > 427 |       expect(response.status).toBe(200);
          |                               ^
      428 |       expect(response.body).toHaveProperty("success", true);
      429 |     });
      430 |

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:427:31)

  ● Recommendations Routes › Performance › should handle concurrent requests

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      445 |
      446 |       responses.forEach((response) => {
    > 447 |         expect(response.status).toBe(200);
          |                                 ^
      448 |       expect(response.body).toHaveProperty("success", true);
      449 |       });
      450 |     });

      at toBe (tests/integration/routes/recommendations.integration.test.js:447:33)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/routes/recommendations.integration.test.js:446:17)

  ● Recommendations Routes › Required Setup Documentation › should return recommendations data successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      457 |         .set("Authorization", "Bearer dev-bypass-token");
      458 |
    > 459 |       expect(response.status).toBe(200);
          |                               ^
      460 |       expect(response.body).toHaveProperty("success", true);
      461 |       expect(response.body).toHaveProperty("recommendations");
      462 |       expect(Array.isArray(response.body.recommendations)).toBe(true);

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:459:31)

  ● Recommendations Routes › Required Setup Documentation › should return analyst coverage data successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      476 |         .set("Authorization", "Bearer dev-bypass-token");
      477 |
    > 478 |       expect(response.status).toBe(200);
          |                               ^
      479 |       expect(response.body).toHaveProperty("success", true);
      480 |       expect(response.body).toHaveProperty("symbol", "AAPL");
      481 |       expect(response.body).toHaveProperty("coverage");

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:478:31)


  ● Test suite failed to run

    Cannot add a hook after tests have started running. Hooks must be defined synchronously.

      30 | describe("Recommendations Routes", () => {
      31 |   beforeAll(async () => {
    > 32 |     beforeEach(() => {
         |     ^
      33 |     jest.clearAllMocks();
      34 |     query.mockImplementation((sql, params) => {
      35 |       // Default: return empty rows for all queries

      at eventHandler (node_modules/jest-circus/build/eventHandler.js:104:11)
      at Object.beforeEach (tests/integration/routes/recommendations.integration.test.js:32:5)

  console.log
    Stocks main endpoint called with params: { page: '1', limit: '5' }

      at log (routes/stocks.js:848:13)

  console.log
    Triggering workflow deploy

      at log (routes/stocks.js:849:13)

  console.log
    Query params: { whereClause: 'WHERE 1=1', params: [], limit: 5, offset: 0 }

      at log (routes/stocks.js:904:13)

  console.log
    Executing FAST queries with schema validation...

      at log (routes/stocks.js:994:13)

  console.log
    Executing comprehensive stocks query with timeout protection...

      at log (routes/stocks.js:997:13)

  console.log
    FAST query results: 0 stocks, 0 estimated total

      at log (routes/stocks.js:1041:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/?page=1&limit=5 HTTP/1.1" 200 2378 "-" "-"
  console.log
    Stocks main endpoint called with params: { page: '1', limit: '2' }

      at log (routes/stocks.js:848:13)

  console.log
    Triggering workflow deploy

      at log (routes/stocks.js:849:13)

  console.log
    Query params: { whereClause: 'WHERE 1=1', params: [], limit: 2, offset: 0 }

      at log (routes/stocks.js:904:13)

  console.log
    Executing FAST queries with schema validation...

      at log (routes/stocks.js:994:13)

  console.log
    Executing comprehensive stocks query with timeout protection...

      at log (routes/stocks.js:997:13)

  console.log
    FAST query results: 0 stocks, 0 estimated total

      at log (routes/stocks.js:1041:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/?page=1&limit=2 HTTP/1.1" 200 2378 "-" "-"
  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:13:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 69 "-" "-"
  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:13:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 69 "-" "-"
  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:13:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 69 "-" "-"
  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:13:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 69 "-" "-"
  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:13:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 69 "-" "-"
  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:13:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 69 "-" "-"
  console.log
    🔍 Stock search requested for: AAPL

      at log (routes/stocks.js:1745:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/search?q=AAPL HTTP/1.1" 200 171 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/search HTTP/1.1" 200 129 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/search?q= HTTP/1.1" 200 129 "-" "-"
  console.log
    🔍 Stock search requested for: A

      at log (routes/stocks.js:1745:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/search?q=A&limit=10 HTTP/1.1" 200 165 "-" "-"
  console.log
    🔍 Stock search requested for: AAPL

      at log (routes/stocks.js:1745:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/search?q=AAPL HTTP/1.1" 200 171 "-" "-"
  console.log
    Individual stock request for AAPL

      at log (routes/stocks.js:662:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/AAPL HTTP/1.1" 404 89 "-" "-"
  console.log
    Individual stock request for INVALID

      at log (routes/stocks.js:662:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/INVALID HTTP/1.1" 404 92 "-" "-"
  console.log
    Individual stock request for VERYLONGSYMBOLNAME123456

      at log (routes/stocks.js:662:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/VERYLONGSYMBOLNAME123456 HTTP/1.1" 404 109 "-" "-"
  console.log
    Individual stock request for @

      at log (routes/stocks.js:662:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/@ HTTP/1.1" 404 86 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/trending HTTP/1.1" 200 102 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/trending?timeframe=1d HTTP/1.1" 200 102 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/trending HTTP/1.1" 200 102 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/screener HTTP/1.1" 200 145 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/screener?market_cap_min=1000000&pe_ratio_max=20 HTTP/1.1" 200 145 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/watchlist HTTP/1.1" 301 164 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "POST /api/stocks/watchlist/add HTTP/1.1" 200 140 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "POST /api/stocks/watchlist/add HTTP/1.1" 400 58 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "DELETE /api/stocks/watchlist/remove HTTP/1.1" 200 147 "-" "-"
  console.log
    Alternative stock quote request for AAPL

      at log (routes/stocks.js:4005:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/AAPL/quote HTTP/1.1" 200 258 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/AAPL/technicals HTTP/1.1" 200 124 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/AAPL/options HTTP/1.1" 200 113 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/AAPL/insider HTTP/1.1" 200 128 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/AAPL/analysts HTTP/1.1" 200 124 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/AAPL/earnings HTTP/1.1" 200 115 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/AAPL/dividends HTTP/1.1" 200 116 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/AAPL/sentiment HTTP/1.1" 200 121 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/AAPL/social HTTP/1.1" 200 122 "-" "-"
  console.log
    🔍 Stock search requested for: AAPL

      at log (routes/stocks.js:1745:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/search?q=AAPL HTTP/1.1" 200 171 "-" "-"
  console.log
    🔍 Stock search requested for: AAPL

      at log (routes/stocks.js:1745:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/search?q=AAPL HTTP/1.1" 200 171 "-" "-"
  console.log
    🔍 Stock search requested for: AAPL

      at log (routes/stocks.js:1745:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/search?q=AAPL HTTP/1.1" 200 171 "-" "-"
  console.log
    🔍 Stock search requested for: AAPL

      at log (routes/stocks.js:1745:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/search?q=AAPL HTTP/1.1" 200 171 "-" "-"
  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:13:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 69 "-" "-"
  console.log
    🔍 Stock search requested for: A

      at log (routes/stocks.js:1745:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/search?q=A HTTP/1.1" 200 165 "-" "-"
  console.log
    Individual stock request for AAPL

      at log (routes/stocks.js:662:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/AAPL HTTP/1.1" 404 89 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/trending HTTP/1.1" 200 102 "-" "-"
  console.log
    🔍 Stock search requested for: A

      at log (routes/stocks.js:1745:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/search?q=A&limit=abc HTTP/1.1" 200 165 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/trending?timeframe=INVALID HTTP/1.1" 200 107 "-" "-"
  console.log
    🔍 Stock search requested for: A

      at log (routes/stocks.js:1745:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/search?q=A&limit=1000 HTTP/1.1" 200 166 "-" "-"
  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:13:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 69 "-" "-"
  console.log
    🔍 Stock search requested for: AAPL

      at log (routes/stocks.js:1745:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/search?q=AAPL HTTP/1.1" 200 171 "-" "-"
  console.log
    Individual stock request for '; DROP TABLE stocks; --

      at log (routes/stocks.js:662:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/%27%3B%20DROP%20TABLE%20stocks%3B%20-- HTTP/1.1" 404 109 "-" "-"
  console.log
    Individual stock request for 1' OR '1'='1

      at log (routes/stocks.js:662:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/1%27%20OR%20%271%27%3D%271 HTTP/1.1" 404 97 "-" "-"
  console.log
    Individual stock request for UNION SELECT * FROM users

      at log (routes/stocks.js:662:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/UNION%20SELECT%20*%20FROM%20users HTTP/1.1" 404 110 "-" "-"
  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:13:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/sectors HTTP/1.1" 200 69 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/stocks/search?q=%E6%B5%8B%E8%AF%95 HTTP/1.1" 200 172 "-" "-"
FAIL tests/integration/routes/stocks.integration.test.js
  Stocks Routes Integration Tests
    GET /api/stocks/
      ✓ should return stocks data with comprehensive key metrics (41 ms)
      ✓ should handle pagination properly (6 ms)
    GET /api/stocks/sectors
      ✓ should return sectors data (3 ms)
      ✓ should handle concurrent requests to sectors endpoint (7 ms)
    GET /api/stocks/search
      ✓ should handle search with valid query (2 ms)
      ✓ should require query parameter (2 ms)
      ✓ should handle empty search query (3 ms)
      ✓ should handle search with limit parameter (2 ms)
      ✓ should require authentication for search (1 ms)
    GET /api/stocks/:symbol
      ✕ should handle valid stock symbol (3 ms)
      ✓ should handle invalid stock symbols (2 ms)
      ✓ should handle very long symbol names (2 ms)
      ✓ should handle special characters in symbols (2 ms)
    GET /api/stocks/trending
      ✓ should return trending stocks (2 ms)
      ✓ should handle timeframe parameters (2 ms)
      ✓ should require authentication for trending (1 ms)
    GET /api/stocks/screener
      ✓ should return screener results (3 ms)
      ✓ should handle screener filters (3 ms)
    Watchlist Operations
      ✓ should handle watchlist requests (2 ms)
      ✓ should handle adding to watchlist (4 ms)
      ✓ should validate symbol parameter for watchlist add (2 ms)
      ✓ should handle removing from watchlist (1 ms)
    Stock Data Endpoints
      ✓ should handle stock quote requests (2 ms)
      ✓ should handle stock technicals requests (2 ms)
      ✓ should handle stock options requests (1 ms)
      ✓ should handle stock insider trading requests (1 ms)
      ✓ should handle stock analysts requests (2 ms)
      ✓ should handle stock earnings requests (1 ms)
      ✓ should handle stock dividends requests (1 ms)
      ✓ should handle stock sentiment requests (2 ms)
      ✓ should handle stock social requests (1 ms)
    Authentication Tests
      ✓ should handle requests without authentication (3 ms)
      ✓ should handle malformed authorization headers (2 ms)
      ✓ should handle empty authorization headers (2 ms)
      ✓ should handle missing bearer token (2 ms)
    Error Handling and Edge Cases
      ✓ should handle concurrent requests (6 ms)
      ✓ should handle invalid parameters gracefully (6 ms)
      ✓ should validate response content types (3 ms)
      ✓ should handle SQL injection attempts safely (5 ms)
      ✓ should handle database connection issues gracefully (2 ms)
      ✓ should handle international characters in search (3 ms)

  ● Stocks Routes Integration Tests › GET /api/stocks/:symbol › should handle valid stock symbol

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      171 |         .set("Authorization", "Bearer dev-bypass-token");
      172 |
    > 173 |       expect(response.status).toBe(200);
          |                               ^
      174 |       expect(response.body).toHaveProperty("success", true);
      175 |       expect(response.body).toHaveProperty("data");
      176 |       expect(response.body.data).toHaveProperty("symbol", "AAPL");

      at Object.toBe (tests/integration/routes/stocks.integration.test.js:173:31)

  console.warn
    Economic data count query returned null result, database may be unavailable

      162 |     // Add null safety check
      163 |     if (!countResult || !countResult.rows || countResult.rows.length === 0) {
    > 164 |       console.warn(
          |               ^
      165 |         "Economic data count query returned null result, database may be unavailable"
      166 |       );
      167 |       return res.status(503).json({

      at warn (routes/economic.js:164:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic HTTP/1.1" 503 240 "-" "-"
  console.warn
    Economic data count query returned null result, database may be unavailable

      162 |     // Add null safety check
      163 |     if (!countResult || !countResult.rows || countResult.rows.length === 0) {
    > 164 |       console.warn(
          |               ^
      165 |         "Economic data count query returned null result, database may be unavailable"
      166 |       );
      167 |       return res.status(503).json({

      at warn (routes/economic.js:164:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic?page=1&limit=10 HTTP/1.1" 503 240 "-" "-"
  console.warn
    Economic data count query returned null result, database may be unavailable

      162 |     // Add null safety check
      163 |     if (!countResult || !countResult.rows || countResult.rows.length === 0) {
    > 164 |       console.warn(
          |               ^
      165 |         "Economic data count query returned null result, database may be unavailable"
      166 |       );
      167 |       return res.status(503).json({

      at warn (routes/economic.js:164:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic?series=GDPC1 HTTP/1.1" 503 240 "-" "-"
  console.warn
    Economic data count query returned null result, database may be unavailable

      162 |     // Add null safety check
      163 |     if (!countResult || !countResult.rows || countResult.rows.length === 0) {
    > 164 |       console.warn(
          |               ^
      165 |         "Economic data count query returned null result, database may be unavailable"
      166 |       );
      167 |       return res.status(503).json({

      at warn (routes/economic.js:164:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic?limit=5 HTTP/1.1" 503 239 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic?page=-1&limit=10 HTTP/1.1" 400 192 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic?page=0&limit=10 HTTP/1.1" 400 192 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic?page=1&limit=-5 HTTP/1.1" 400 193 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic?page=abc&limit=def HTTP/1.1" 400 192 "-" "-"
  console.warn
    Economic data count query returned null result, database may be unavailable

      162 |     // Add null safety check
      163 |     if (!countResult || !countResult.rows || countResult.rows.length === 0) {
    > 164 |       console.warn(
          |               ^
      165 |         "Economic data count query returned null result, database may be unavailable"
      166 |       );
      167 |       return res.status(503).json({

      at warn (routes/economic.js:164:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic?page=999999&limit=1000 HTTP/1.1" 503 246 "-" "-"
  console.log
    📊 Economic indicators requested, category: all

      at log (routes/economic.js:282:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/indicators HTTP/1.1" 200 151 "-" "-"
  console.log
    📊 Economic indicators requested, category: all

      at log (routes/economic.js:282:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/indicators HTTP/1.1" 200 151 "-" "-"
  console.log
    📊 Economic indicators requested, category: growth

      at log (routes/economic.js:282:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/indicators?category=growth HTTP/1.1" 200 154 "-" "-"
  console.log
    📊 Economic indicators requested, category: inflation

      at log (routes/economic.js:282:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/indicators?category=inflation HTTP/1.1" 200 157 "-" "-"
  console.log
    📊 Economic indicators requested, category: employment

      at log (routes/economic.js:282:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/indicators?category=employment HTTP/1.1" 200 158 "-" "-"
  console.log
    📊 Economic indicators requested, category: monetary

      at log (routes/economic.js:282:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/indicators?category=monetary HTTP/1.1" 200 156 "-" "-"
  console.log
    📅 Economic calendar requested - start: undefined, end: undefined, importance: undefined, country: undefined

      at log (routes/economic.js:374:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/calendar HTTP/1.1" 200 104 "-" "-"
  console.log
    📅 Economic calendar requested - start: 2025-01-01, end: 2025-12-31, importance: undefined, country: undefined

      at log (routes/economic.js:374:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/calendar?start_date=2025-01-01&end_date=2025-12-31 HTTP/1.1" 200 116 "-" "-"
  console.log
    📅 Economic calendar requested - start: undefined, end: undefined, importance: high, country: undefined

      at log (routes/economic.js:374:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/calendar?importance=high HTTP/1.1" 200 104 "-" "-"
  console.log
    📅 Economic calendar requested - start: undefined, end: undefined, importance: medium, country: undefined

      at log (routes/economic.js:374:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/calendar?importance=medium HTTP/1.1" 200 104 "-" "-"
  console.log
    📅 Economic calendar requested - start: undefined, end: undefined, importance: low, country: undefined

      at log (routes/economic.js:374:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/calendar?importance=low HTTP/1.1" 200 104 "-" "-"
  console.log
    📅 Economic calendar requested - start: undefined, end: undefined, importance: undefined, country: US

      at log (routes/economic.js:374:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/calendar?country=US HTTP/1.1" 200 104 "-" "-"
  console.log
    📅 Economic calendar requested - start: undefined, end: undefined, importance: undefined, country: EU

      at log (routes/economic.js:374:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/calendar?country=EU HTTP/1.1" 200 104 "-" "-"
  console.log
    📅 Economic calendar requested - start: undefined, end: undefined, importance: undefined, country: JP

      at log (routes/economic.js:374:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/calendar?country=JP HTTP/1.1" 200 104 "-" "-"
  console.log
    📅 Economic calendar requested - start: undefined, end: undefined, importance: undefined, country: GB

      at log (routes/economic.js:374:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/calendar?country=GB HTTP/1.1" 200 104 "-" "-"
  console.log
    📅 Economic calendar requested - start: undefined, end: undefined, importance: undefined, country: CA

      at log (routes/economic.js:374:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/calendar?country=CA HTTP/1.1" 200 104 "-" "-"
  console.log
    📈 Economic series requested - series: GDPC1, timeframe: undefined

      at log (routes/economic.js:437:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/series/GDPC1 HTTP/1.1" 404 380 "-" "-"
  console.log
    📈 Economic series requested - series: GDPC1, timeframe: 1Y

      at log (routes/economic.js:437:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/series/GDPC1?timeframe=1Y HTTP/1.1" 404 380 "-" "-"
  console.log
    📈 Economic series requested - series: UNEMPLOYMENT_RATE, timeframe: undefined

      at log (routes/economic.js:437:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/series/UNEMPLOYMENT_RATE?frequency=daily HTTP/1.1" 404 406 "-" "-"
  console.log
    📈 Economic series requested - series: INVALID_SERIES, timeframe: undefined

      at log (routes/economic.js:437:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/series/INVALID_SERIES HTTP/1.1" 404 416 "-" "-"
  console.log
    ⚖️ Economic comparison requested - series: GDPC1,UNRATE,VIXCLS

      at log (routes/economic.js:729:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/compare?series=GDPC1,UNRATE,VIXCLS HTTP/1.1" 200 282 "-" "-"
  console.log
    ⚖️ Economic comparison requested - series: GDPC1,UNRATE

      at log (routes/economic.js:729:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/compare?series=GDPC1,UNRATE&normalize=true HTTP/1.1" 200 192 "-" "-"
  console.log
    ⚖️ Economic comparison requested - series: GDPC1,UNRATE

      at log (routes/economic.js:729:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/compare?series=GDPC1,UNRATE&align_period=quarterly HTTP/1.1" 200 193 "-" "-"
  console.log
    🔮 Economic forecast requested - series: GDPC1, horizon: undefined

      at log (routes/economic.js:521:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/forecast?series=GDPC1 HTTP/1.1" 404 279 "-" "-"
  console.log
    🔮 Economic forecast requested - series: UNRATE, horizon: 1Q

      at log (routes/economic.js:521:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/forecast?series=UNRATE&horizon=1Q HTTP/1.1" 404 281 "-" "-"
  console.log
    🔮 Economic forecast requested - series: UNRATE, horizon: undefined

      at log (routes/economic.js:521:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/forecast?series=UNRATE&confidence=0.95 HTTP/1.1" 404 281 "-" "-"
  console.log
    🔗 Economic correlations requested - series: FEDFUNDS, timeframe: undefined

      at log (routes/economic.js:619:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/correlations?series=FEDFUNDS HTTP/1.1" 200 244 "-" "-"
  console.log
    🔗 Economic correlations requested - series: UNRATE, timeframe: 5Y

      at log (routes/economic.js:619:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/correlations?series=UNRATE&timeframe=5Y HTTP/1.1" 200 242 "-" "-"
  console.warn
    Economic data count query returned null result, database may be unavailable

      162 |     // Add null safety check
      163 |     if (!countResult || !countResult.rows || countResult.rows.length === 0) {
    > 164 |       console.warn(
          |               ^
      165 |         "Economic data count query returned null result, database may be unavailable"
      166 |       );
      167 |       return res.status(503).json({

      at warn (routes/economic.js:164:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic HTTP/1.1" 503 240 "-" "-"
  console.log
    📊 Economic indicators requested, category: all

      at log (routes/economic.js:282:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/indicators HTTP/1.1" 200 151 "-" "-"
  console.log
    📅 Economic calendar requested - start: undefined, end: undefined, importance: undefined, country: undefined

      at log (routes/economic.js:374:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/calendar HTTP/1.1" 200 104 "-" "-"
  console.log
    📈 Economic series requested - series: GDP, timeframe: undefined

      at log (routes/economic.js:437:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/series/GDP HTTP/1.1" 404 372 "-" "-"
  console.log
    🔮 Economic forecast requested - series: UNEMPLOYMENT_RATE, horizon: undefined

      at log (routes/economic.js:521:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/forecast?series=UNEMPLOYMENT_RATE HTTP/1.1" 404 292 "-" "-"
  console.warn
    Economic data count query returned null result, database may be unavailable

      162 |     // Add null safety check
      163 |     if (!countResult || !countResult.rows || countResult.rows.length === 0) {
    > 164 |       console.warn(
          |               ^
      165 |         "Economic data count query returned null result, database may be unavailable"
      166 |       );
      167 |       return res.status(503).json({

      at warn (routes/economic.js:164:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic?limit=1000 HTTP/1.1" 503 242 "-" "-"
  console.log
    📊 Economic indicators requested, category: all

      at log (routes/economic.js:282:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/indicators HTTP/1.1" 200 151 "-" "-"
  console.log
    📅 Economic calendar requested - start: invalid-date, end: undefined, importance: undefined, country: undefined

      at log (routes/economic.js:374:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/calendar?start_date=invalid-date HTTP/1.1" 200 112 "-" "-"
  console.log
    📅 Economic calendar requested - start: undefined, end: 2025-13-40, importance: undefined, country: undefined

      at log (routes/economic.js:374:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/calendar?end_date=2025-13-40 HTTP/1.1" 200 110 "-" "-"
  console.log
    📅 Economic calendar requested - start: 2025-12-31, end: 2025-01-01, importance: undefined, country: undefined

      at log (routes/economic.js:374:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/calendar?start_date=2025-12-31&end_date=2025-01-01 HTTP/1.1" 200 116 "-" "-"
  console.log
    📅 Economic calendar requested - start: , end: , importance: undefined, country: undefined

      at log (routes/economic.js:374:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/calendar?start_date=&end_date= HTTP/1.1" 200 104 "-" "-"
  console.log
    📈 Economic series requested - series: UNEMPLOYMENT_RATE, timeframe: undefined

      at log (routes/economic.js:437:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/series/UNEMPLOYMENT_RATE?limit=10 HTTP/1.1" 404 406 "-" "-"
  console.warn
    Economic data count query returned null result, database may be unavailable

      162 |     // Add null safety check
      163 |     if (!countResult || !countResult.rows || countResult.rows.length === 0) {
    > 164 |       console.warn(
          |               ^
      165 |         "Economic data count query returned null result, database may be unavailable"
      166 |       );
      167 |       return res.status(503).json({

      at warn (routes/economic.js:164:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic HTTP/1.1" 503 240 "-" "-"
  console.warn
    Economic data count query returned null result, database may be unavailable

      162 |     // Add null safety check
      163 |     if (!countResult || !countResult.rows || countResult.rows.length === 0) {
    > 164 |       console.warn(
          |               ^
      165 |         "Economic data count query returned null result, database may be unavailable"
      166 |       );
      167 |       return res.status(503).json({

      at warn (routes/economic.js:164:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic?series=GDP%27%3B%20DROP%20TABLE%20economic_data%3B%20-- HTTP/1.1" 503 240 "-" "-"
  console.log
    ⚖️ Economic comparison requested - series: GDP,UNEMPLOYMENT_RATE,FEDERAL_FUNDS_RATE,INFLATION_RATE

      at log (routes/economic.js:729:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/compare?series=GDP,UNEMPLOYMENT_RATE,FEDERAL_FUNDS_RATE,INFLATION_RATE&timeframe=max HTTP/1.1" 200 495 "-" "-"
  console.log
    🔮 Economic forecast requested - series: GDP, horizon: 1Y

      at log (routes/economic.js:521:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/economic/forecast?series=GDP&horizon=1Y HTTP/1.1" 404 275 "-" "-"
FAIL tests/integration/routes/economic.integration.test.js
  Economic Routes Integration Tests
    GET /api/economic (Economic Data)
      ✕ should return economic data with pagination (7 ms)
      ✓ should handle page and limit parameters (2 ms)
      ✕ should filter by economic series (2 ms)
      ✓ should validate economic data structure (2 ms)
      ✓ should handle invalid pagination parameters (7 ms)
    GET /api/economic/indicators
      ✓ should return available economic indicators (2 ms)
      ✓ should categorize economic indicators (2 ms)
      ✓ should handle category filter for indicators (9 ms)
    GET /api/economic/calendar
      ✓ should return economic calendar events (2 ms)
      ✓ should handle date range for calendar (2 ms)
      ✓ should filter by importance level (6 ms)
      ✓ should handle country filter (9 ms)
    GET /api/economic/series/:seriesId
      ✕ should return specific economic series data (2 ms)
      ✕ should handle timeframe parameter for series (2 ms)
      ✕ should handle frequency parameter (2 ms)
      ✓ should handle invalid series ID (2 ms)
    GET /api/economic/compare
      ✓ should compare multiple economic series (2 ms)
      ✓ should handle normalization parameter (2 ms)
      ✓ should handle period alignment (1 ms)
    GET /api/economic/forecast
      ✕ should return economic forecasts (2 ms)
      ✕ should handle forecast horizon parameter (2 ms)
      ✕ should handle confidence level parameter (4 ms)
    GET /api/economic/correlations
      ✓ should return correlations with market indices (2 ms)
      ✓ should handle timeframe for correlations (2 ms)
    Performance and Edge Cases
      ✕ should handle concurrent requests to economic endpoints (8 ms)
      ✓ should handle large data requests gracefully (1 ms)
      ✓ should maintain response time consistency (2 ms)
      ✓ should handle malformed date parameters (8 ms)
      ✓ should validate economic data value ranges (2 ms)
      ✕ should handle database connection failures gracefully (2 ms)
      ✕ should handle SQL injection attempts (2 ms)
      ✓ should handle memory pressure with large datasets (2 ms)
      ✓ should validate forecast accuracy metadata (2 ms)

  ● Economic Routes Integration Tests › GET /api/economic (Economic Data) › should return economic data with pagination

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 503

      49 |       const response = await request(app).get("/api/economic");
      50 |
    > 51 |       expect(response.status).toBe(200);
         |                               ^
      52 |
      53 |       if (response.status === 200) {
      54 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/economic.integration.test.js:51:31)

  ● Economic Routes Integration Tests › GET /api/economic (Economic Data) › should filter by economic series

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      91 |         );
      92 |
    > 93 |         expect([200, 400].includes(response.status)).toBe(true);
         |                                                      ^
      94 |
      95 |         if (response.status === 200 && response.body.data.length > 0) {
      96 |           response.body.data.forEach((dataPoint) => {

      at Object.toBe (tests/integration/routes/economic.integration.test.js:93:54)

  ● Economic Routes Integration Tests › GET /api/economic/series/:seriesId › should return specific economic series data

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      251 |         );
      252 |
    > 253 |         expect(response.status).toBe(200);
          |                                 ^
      254 |
      255 |         if (response.status === 200) {
      256 |           expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/economic.integration.test.js:253:33)

  ● Economic Routes Integration Tests › GET /api/economic/series/:seriesId › should handle timeframe parameter for series

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      271 |         );
      272 |
    > 273 |         expect([200, 400].includes(response.status)).toBe(true);
          |                                                      ^
      274 |       }
      275 |     });
      276 |

      at Object.toBe (tests/integration/routes/economic.integration.test.js:273:54)

  ● Economic Routes Integration Tests › GET /api/economic/series/:seriesId › should handle frequency parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      283 |         );
      284 |
    > 285 |         expect([200, 400].includes(response.status)).toBe(true);
          |                                                      ^
      286 |       }
      287 |     });
      288 |

      at Object.toBe (tests/integration/routes/economic.integration.test.js:285:54)

  ● Economic Routes Integration Tests › GET /api/economic/forecast › should return economic forecasts

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      340 |       );
      341 |
    > 342 |       expect(response.status).toBe(200);
          |                               ^
      343 |
      344 |       if (response.status === 200) {
      345 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/economic.integration.test.js:342:31)

  ● Economic Routes Integration Tests › GET /api/economic/forecast › should handle forecast horizon parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      359 |         );
      360 |
    > 361 |         expect([200, 400].includes(response.status)).toBe(true);
          |                                                      ^
      362 |       }
      363 |     });
      364 |

      at Object.toBe (tests/integration/routes/economic.integration.test.js:361:54)

  ● Economic Routes Integration Tests › GET /api/economic/forecast › should handle confidence level parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      368 |       );
      369 |
    > 370 |       expect([200, 400].includes(response.status)).toBe(true);
          |                                                    ^
      371 |     });
      372 |   });
      373 |

      at Object.toBe (tests/integration/routes/economic.integration.test.js:370:52)

  ● Economic Routes Integration Tests › Performance and Edge Cases › should handle concurrent requests to economic endpoints

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 503

      415 |
      416 |       responses.forEach((response) => {
    > 417 |         expect(response.status).toBe(200);
          |                                 ^
      418 |       });
      419 |     });
      420 |

      at toBe (tests/integration/routes/economic.integration.test.js:417:33)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/routes/economic.integration.test.js:416:17)

  ● Economic Routes Integration Tests › Performance and Edge Cases › should handle database connection failures gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 503

      468 |       const response = await request(app).get("/api/economic");
      469 |
    > 470 |       expect(response.status).toBe(200);
          |                               ^
      471 |
      472 |       if (response.status >= 500) {
      473 |         expect(response.body).toHaveProperty("error");

      at Object.toBe (tests/integration/routes/economic.integration.test.js:470:31)

  ● Economic Routes Integration Tests › Performance and Edge Cases › should handle SQL injection attempts

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      481 |       );
      482 |
    > 483 |       expect([200, 400, 404].includes(response.status)).toBe(true);
          |                                                         ^
      484 |     });
      485 |
      486 |     test("should handle memory pressure with large datasets", async () => {

      at Object.toBe (tests/integration/routes/economic.integration.test.js:483:57)

  console.error
    Error: SyntaxError: Unexpected token 'j', "{"incomplete": json" is not valid JSON
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{"incomplete": json',
      type: 'entity.parse.failed'
    }

      268 | app.use((err, req, res, _next) => {
      269 |   try {
    > 270 |     console.error("Error:", err);
          |             ^
      271 |   } catch (e) {
      272 |     // Ignore console logging errors
      273 |   }

      at error (server.js:270:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
  console.error
    Error: SyntaxError: Expected property name or '}' in JSON at position 1
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{invalid: "json"',
      type: 'entity.parse.failed'
    }

      268 | app.use((err, req, res, _next) => {
      269 |   try {
    > 270 |     console.error("Error:", err);
          |             ^
      271 |   } catch (e) {
      272 |     // Ignore console logging errors
      273 |   }

      at error (server.js:270:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
  console.error
    Error: SyntaxError: Unexpected token '}', ..."omplete": }" is not valid JSON
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{"nested": {"incomplete": }',
      type: 'entity.parse.failed'
    }

      268 | app.use((err, req, res, _next) => {
      269 |   try {
    > 270 |     console.error("Error:", err);
          |             ^
      271 |   } catch (e) {
      272 |     // Ignore console logging errors
      273 |   }

      at error (server.js:270:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "POST /api/portfolio/analyze HTTP/1.1" 501 273 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "POST /api/portfolio/analyze HTTP/1.1" 501 273 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "POST /api/portfolio/analyze HTTP/1.1" 501 273 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - user [19/Oct/2025:11:48:49 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "POST /api/portfolio/analyze HTTP/1.1" 501 273 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/portfolio/../../../etc/passwd HTTP/1.1" 404 139 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/portfolio/%2e%2e%2f%2e%2e%2fetc%2fpasswd HTTP/1.1" 404 150 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/portfolio/ HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/portfolio
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/portfolio/%3Cscript%3Ealert(%27xss%27)%3C/script%3E HTTP/1.1" 404 161 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/calendar/earnings?param=value% HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/calendar/earnings?param=value%ZZ HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/calendar/earnings?param=value HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/calendar/earnings?param=%3Cscript%3Ealert(%27xss%27)%3C/script%3E HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/calendar/earnings?param=%27OR%201=1-- HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/calendar/earnings?param= HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "POST /api/portfolio/analyze HTTP/1.1" 501 273 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "POST /api/portfolio/analyze HTTP/1.1" 501 273 "-" "-"
  console.error
    Error: SyntaxError: Unexpected token 'n', "not json content" is not valid JSON
        at JSON.parse (<anonymous>)
        at createStrictSyntaxError (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:169:10)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:86:15)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: 'not json content',
      type: 'entity.parse.failed'
    }

      268 | app.use((err, req, res, _next) => {
      269 |   try {
    > 270 |     console.error("Error:", err);
          |             ^
      271 |   } catch (e) {
      272 |     // Ignore console logging errors
      273 |   }

      at error (server.js:270:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "POST /api/portfolio/analyze HTTP/1.1" 501 273 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "POST /api/portfolio/analyze HTTP/1.1" 501 273 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "POST /api/portfolio/analyze HTTP/1.1" 501 273 "-" "-"
  console.error
    Error: SyntaxError: Expected ',' or '}' after property value in JSON at position 30
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{"malicious": "<script>alert("xss")</script>"}',
      type: 'entity.parse.failed'
    }

      268 | app.use((err, req, res, _next) => {
      269 |   try {
    > 270 |     console.error("Error:", err);
          |             ^
      271 |   } catch (e) {
      272 |     // Ignore console logging errors
      273 |   }

      at error (server.js:270:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "POST /api/portfolio/analyze HTTP/1.1" 501 273 "-" "-"
  console.error
    Error: SyntaxError: Unterminated string in JSON at position 20
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{"unclosed": "string',
      type: 'entity.parse.failed'
    }

      268 | app.use((err, req, res, _next) => {
      269 |   try {
    > 270 |     console.error("Error:", err);
          |             ^
      271 |   } catch (e) {
      272 |     // Ignore console logging errors
      273 |   }

      at error (server.js:270:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
  console.error
    Error: SyntaxError: Unexpected token 'u', ..."nction": function() "... is not valid JSON
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{"function": function() {}}',
      type: 'entity.parse.failed'
    }

      268 | app.use((err, req, res, _next) => {
      269 |   try {
    > 270 |     console.error("Error:", err);
          |             ^
      271 |   } catch (e) {
      272 |     // Ignore console logging errors
      273 |   }

      at error (server.js:270:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
  console.error
    Error: SyntaxError: Unexpected token 'u', ..."defined": undefined}" is not valid JSON
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{"undefined": undefined}',
      type: 'entity.parse.failed'
    }

      268 | app.use((err, req, res, _next) => {
      269 |   try {
    > 270 |     console.error("Error:", err);
          |             ^
      271 |   } catch (e) {
      272 |     // Ignore console logging errors
      273 |   }

      at error (server.js:270:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
  console.error
    Error: SyntaxError: Unexpected end of JSON input
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{"invalid": ',
      type: 'entity.parse.failed'
    }

      268 | app.use((err, req, res, _next) => {
      269 |   try {
    > 270 |     console.error("Error:", err);
          |             ^
      271 |   } catch (e) {
      272 |     // Ignore console logging errors
      273 |   }

      at error (server.js:270:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/portfolio/../invalid HTTP/1.1" 404 130 "-" "-"
  console.error
    Error: SyntaxError: Unexpected end of JSON input
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{"invalid": ',
      type: 'entity.parse.failed'
    }

      268 | app.use((err, req, res, _next) => {
      269 |   try {
    > 270 |     console.error("Error:", err);
          |             ^
      271 |   } catch (e) {
      272 |     // Ignore console logging errors
      273 |   }

      at error (server.js:270:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "-"
FAIL tests/integration/errors/malformed-request.integration.test.js
  Malformed Request Integration
    JSON Parsing Error Scenarios
      ✕ should handle malformed JSON gracefully (16 ms)
      ✕ should handle JSON with dangerous characters (3 ms)
      ✕ should handle deeply nested JSON structures (2 ms)
    HTTP Header Malformation
      ✓ should handle malformed authorization headers (6 ms)
      ✕ should handle malformed content-type headers (2 ms)
      ✓ should handle custom header injection attempts (4 ms)
    URL and Path Malformation
      ✓ should handle malformed URLs and paths (16 ms)
      ✓ should handle malformed query parameters (9 ms)
    Request Body Malformation
      ✕ should handle oversized request bodies (8 ms)
      ✕ should handle binary data in JSON fields (1 ms)
      ✕ should handle mismatched content-type and body (4 ms)
    Character Encoding Issues
      ✕ should handle invalid UTF-8 sequences (2 ms)
      ✕ should handle different character encodings (1 ms)
    Security and Sanitization
      ✕ should sanitize error messages containing malformed input (4 ms)
      ✓ should not expose stack traces in malformed request errors (11 ms)
    Error Response Consistency
      ✓ should maintain consistent error format for all malformed requests (4 ms)
      ✓ should handle malformed requests without service disruption (8 ms)

  ● Malformed Request Integration › JSON Parsing Error Scenarios › should handle malformed JSON gracefully

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [400, 422]

      87 |           .send(test.body);
      88 |
    > 89 |         expect([400, 422]).toContain(response.status);
         |                            ^
      90 |
      91 |         if (response.status === 400 || response.status === 422) {
      92 |           expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/errors/malformed-request.integration.test.js:89:28)

  ● Malformed Request Integration › JSON Parsing Error Scenarios › should handle JSON with dangerous characters

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [200, 400, 404, 422]

      143 |
      144 |         // Should handle safely (either process successfully or reject with error)
    > 145 |         expect([200, 400, 404, 422]).toContain(response.status);
          |                                      ^
      146 |
      147 |         if (response.status >= 400) {
      148 |           expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/errors/malformed-request.integration.test.js:145:38)

  ● Malformed Request Integration › JSON Parsing Error Scenarios › should handle deeply nested JSON structures

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [200, 400, 404]

      175 |
      176 |       // Should handle deep nesting gracefully
    > 177 |       expect([200, 400, 404]).toContain(response.status);
          |                               ^
      178 |
      179 |       if (response.status >= 400) {
      180 |         expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/errors/malformed-request.integration.test.js:177:31)

  ● Malformed Request Integration › HTTP Header Malformation › should handle malformed content-type headers

    expect(received).toMatch(expected)

    Expected pattern: /invalid|malformed|character|header/i
    Received string:  "expect(received).toContain(expected) // indexOf·
    Expected value: 501
    Received array: [200, 400, 404]"

      277 |         } catch (error) {
      278 |           // Some malformed content-types might be rejected at HTTP level
    > 279 |           expect(error.message).toMatch(/invalid|malformed|character|header/i);
          |                                 ^
      280 |         }
      281 |       }
      282 |     });

      at Object.toMatch (tests/integration/errors/malformed-request.integration.test.js:279:33)

  ● Malformed Request Integration › Request Body Malformation › should handle oversized request bodies

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [200, 413, 422]

      457 |         .send(largeBody);
      458 |
    > 459 |       expect([200, 413, 422]).toContain(response.status);
          |                               ^
      460 |
      461 |       if (response.status === 413) {
      462 |         expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/errors/malformed-request.integration.test.js:459:31)

  ● Malformed Request Integration › Request Body Malformation › should handle binary data in JSON fields

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [200, 400, 404]

      491 |           .send(test.body);
      492 |
    > 493 |         expect([200, 400, 404]).toContain(response.status);
          |                                 ^
      494 |
      495 |         if (response.status >= 400) {
      496 |           expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/errors/malformed-request.integration.test.js:493:33)

  ● Malformed Request Integration › Request Body Malformation › should handle mismatched content-type and body

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [200, 400, 404]

      526 |           .send(test.body);
      527 |
    > 528 |         expect([200, 400, 404]).toContain(response.status);
          |                                 ^
      529 |
      530 |         if (response.status >= 400) {
      531 |           expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/errors/malformed-request.integration.test.js:528:33)

  ● Malformed Request Integration › Character Encoding Issues › should handle invalid UTF-8 sequences

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [200, 400, 404]

      564 |           .send(test.body);
      565 |
    > 566 |         expect([200, 400, 404]).toContain(response.status);
          |                                 ^
      567 |
      568 |         // Should handle encoding gracefully
      569 |         expect(response.headers["content-type"]).toMatch(/application\/json/);

      at Object.toContain (tests/integration/errors/malformed-request.integration.test.js:566:33)

  ● Malformed Request Integration › Character Encoding Issues › should handle different character encodings

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [200, 400, 404, 415]

      592 |           .send(testBody);
      593 |
    > 594 |         expect([200, 400, 404, 415]).toContain(response.status);
          |                                      ^
      595 |
      596 |         if (response.status >= 400) {
      597 |           expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/errors/malformed-request.integration.test.js:594:38)

  ● Malformed Request Integration › Security and Sanitization › should sanitize error messages containing malformed input

    expect(received).toMatch(expected)

    Expected pattern: /invalid|malformed|error|failed/i
    Received string:  "Not Implemented"

      628 |
      629 |           // Should be a generic, safe error message
    > 630 |           expect(errorMessage).toMatch(/invalid|malformed|error|failed/i);
          |                                ^
      631 |         }
      632 |       }
      633 |     });

      at Object.toMatch (tests/integration/errors/malformed-request.integration.test.js:630:32)

  console.log
    📊 Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:30:13)

  console.error
    Error fetching stock positioning data: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/positioning.js:154:24)

      296 |     });
      297 |   } catch (error) {
    > 298 |     console.error("Error fetching stock positioning data:", error);
          |             ^
      299 |     res.status(500).json({
      300 |       success: false,
      301 |       error: "Failed to fetch stock positioning data",

      at error (routes/positioning.js:298:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/positioning/stocks HTTP/1.1" 500 66 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: AAPL, timeframe: daily

      at log (routes/positioning.js:30:13)

  console.error
    Error fetching stock positioning data: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/positioning.js:154:24)

      296 |     });
      297 |   } catch (error) {
    > 298 |     console.error("Error fetching stock positioning data:", error);
          |             ^
      299 |     res.status(500).json({
      300 |       success: false,
      301 |       error: "Failed to fetch stock positioning data",

      at error (routes/positioning.js:298:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/positioning/stocks?symbol=AAPL HTTP/1.1" 500 66 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: all, timeframe: weekly

      at log (routes/positioning.js:30:13)

  console.error
    Error fetching stock positioning data: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/positioning.js:154:24)

      296 |     });
      297 |   } catch (error) {
    > 298 |     console.error("Error fetching stock positioning data:", error);
          |             ^
      299 |     res.status(500).json({
      300 |       success: false,
      301 |       error: "Failed to fetch stock positioning data",

      at error (routes/positioning.js:298:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/positioning/stocks?timeframe=weekly HTTP/1.1" 500 66 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:30:13)

  console.error
    Error fetching stock positioning data: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/positioning.js:154:24)

      296 |     });
      297 |   } catch (error) {
    > 298 |     console.error("Error fetching stock positioning data:", error);
          |             ^
      299 |     res.status(500).json({
      300 |       success: false,
      301 |       error: "Failed to fetch stock positioning data",

      at error (routes/positioning.js:298:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/positioning/stocks?limit=10&page=1 HTTP/1.1" 500 66 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:30:13)

  console.error
    Error fetching stock positioning data: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/positioning.js:154:24)

      296 |     });
      297 |   } catch (error) {
    > 298 |     console.error("Error fetching stock positioning data:", error);
          |             ^
      299 |     res.status(500).json({
      300 |       success: false,
      301 |       error: "Failed to fetch stock positioning data",

      at error (routes/positioning.js:298:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/positioning/stocks?limit=5&page=2 HTTP/1.1" 500 66 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:30:13)

  console.error
    Error fetching stock positioning data: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/positioning.js:154:24)

      296 |     });
      297 |   } catch (error) {
    > 298 |     console.error("Error fetching stock positioning data:", error);
          |             ^
      299 |     res.status(500).json({
      300 |       success: false,
      301 |       error: "Failed to fetch stock positioning data",

      at error (routes/positioning.js:298:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/positioning/stocks HTTP/1.1" 500 66 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: aapl, timeframe: daily

      at log (routes/positioning.js:30:13)

  console.error
    Error fetching stock positioning data: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/positioning.js:154:24)

      296 |     });
      297 |   } catch (error) {
    > 298 |     console.error("Error fetching stock positioning data:", error);
          |             ^
      299 |     res.status(500).json({
      300 |       success: false,
      301 |       error: "Failed to fetch stock positioning data",

      at error (routes/positioning.js:298:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/positioning/stocks?symbol=aapl HTTP/1.1" 500 66 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: BRK.A, timeframe: daily

      at log (routes/positioning.js:30:13)

  console.error
    Error fetching stock positioning data: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/positioning.js:154:24)

      296 |     });
      297 |   } catch (error) {
    > 298 |     console.error("Error fetching stock positioning data:", error);
          |             ^
      299 |     res.status(500).json({
      300 |       success: false,
      301 |       error: "Failed to fetch stock positioning data",

      at error (routes/positioning.js:298:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/positioning/stocks?symbol=BRK.A HTTP/1.1" 500 66 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: NONEXISTENT, timeframe: daily

      at log (routes/positioning.js:30:13)

  console.error
    Error fetching stock positioning data: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/positioning.js:154:24)

      296 |     });
      297 |   } catch (error) {
    > 298 |     console.error("Error fetching stock positioning data:", error);
          |             ^
      299 |     res.status(500).json({
      300 |       success: false,
      301 |       error: "Failed to fetch stock positioning data",

      at error (routes/positioning.js:298:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/positioning/stocks?symbol=NONEXISTENT HTTP/1.1" 500 66 "-" "-"
  console.error
    Error fetching positioning summary: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/positioning.js:334:48)

      398 |     });
      399 |   } catch (error) {
    > 400 |     console.error("Error fetching positioning summary:", error);
          |             ^
      401 |     res
      402 |       .status(500)
      403 |       .json({ success: false, error: "Failed to fetch positioning summary" });

      at error (routes/positioning.js:400:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/positioning/summary HTTP/1.1" 500 63 "-" "-"
  console.error
    Error fetching positioning summary: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/positioning.js:334:48)

      398 |     });
      399 |   } catch (error) {
    > 400 |     console.error("Error fetching positioning summary:", error);
          |             ^
      401 |     res
      402 |       .status(500)
      403 |       .json({ success: false, error: "Failed to fetch positioning summary" });

      at error (routes/positioning.js:400:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/positioning/summary HTTP/1.1" 500 63 "-" "-"
  console.error
    Error fetching positioning summary: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/positioning.js:334:48)

      398 |     });
      399 |   } catch (error) {
    > 400 |     console.error("Error fetching positioning summary:", error);
          |             ^
      401 |     res
      402 |       .status(500)
      403 |       .json({ success: false, error: "Failed to fetch positioning summary" });

      at error (routes/positioning.js:400:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/positioning/summary HTTP/1.1" 500 63 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:30:13)

  console.error
    Error fetching stock positioning data: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/positioning.js:154:24)

      296 |     });
      297 |   } catch (error) {
    > 298 |     console.error("Error fetching stock positioning data:", error);
          |             ^
      299 |     res.status(500).json({
      300 |       success: false,
      301 |       error: "Failed to fetch stock positioning data",

      at error (routes/positioning.js:298:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/positioning/stocks HTTP/1.1" 500 66 "-" "-"
  console.error
    Error fetching positioning summary: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/positioning.js:334:48)

      398 |     });
      399 |   } catch (error) {
    > 400 |     console.error("Error fetching positioning summary:", error);
          |             ^
      401 |     res
      402 |       .status(500)
      403 |       .json({ success: false, error: "Failed to fetch positioning summary" });

      at error (routes/positioning.js:400:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/positioning/summary HTTP/1.1" 500 63 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:30:13)

  console.error
    Error fetching stock positioning data: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/positioning.js:154:24)

      296 |     });
      297 |   } catch (error) {
    > 298 |     console.error("Error fetching stock positioning data:", error);
          |             ^
      299 |     res.status(500).json({
      300 |       success: false,
      301 |       error: "Failed to fetch stock positioning data",

      at error (routes/positioning.js:298:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/positioning/stocks HTTP/1.1" 500 66 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: INVALID_TEST_SYMBOL, timeframe: daily

      at log (routes/positioning.js:30:13)

  console.error
    Error fetching stock positioning data: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/positioning.js:154:24)

      296 |     });
      297 |   } catch (error) {
    > 298 |     console.error("Error fetching stock positioning data:", error);
          |             ^
      299 |     res.status(500).json({
      300 |       success: false,
      301 |       error: "Failed to fetch stock positioning data",

      at error (routes/positioning.js:298:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/positioning/stocks?symbol=INVALID_TEST_SYMBOL HTTP/1.1" 500 66 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:30:13)

  console.error
    Error fetching stock positioning data: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/positioning.js:154:24)

      296 |     });
      297 |   } catch (error) {
    > 298 |     console.error("Error fetching stock positioning data:", error);
          |             ^
      299 |     res.status(500).json({
      300 |       success: false,
      301 |       error: "Failed to fetch stock positioning data",

      at error (routes/positioning.js:298:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/positioning/stocks?limit=invalid&page=invalid HTTP/1.1" 500 66 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:30:13)

  console.error
    Error fetching stock positioning data: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/positioning.js:154:24)

      296 |     });
      297 |   } catch (error) {
    > 298 |     console.error("Error fetching stock positioning data:", error);
          |             ^
      299 |     res.status(500).json({
      300 |       success: false,
      301 |       error: "Failed to fetch stock positioning data",

      at error (routes/positioning.js:298:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/positioning/stocks?limit=99999 HTTP/1.1" 500 66 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:30:13)

  console.error
    Error fetching stock positioning data: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/positioning.js:154:24)

      296 |     });
      297 |   } catch (error) {
    > 298 |     console.error("Error fetching stock positioning data:", error);
          |             ^
      299 |     res.status(500).json({
      300 |       success: false,
      301 |       error: "Failed to fetch stock positioning data",

      at error (routes/positioning.js:298:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/positioning/stocks?limit=-1&page=-1 HTTP/1.1" 500 66 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:30:13)

  console.error
    Error fetching stock positioning data: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/positioning.js:154:24)

      296 |     });
      297 |   } catch (error) {
    > 298 |     console.error("Error fetching stock positioning data:", error);
          |             ^
      299 |     res.status(500).json({
      300 |       success: false,
      301 |       error: "Failed to fetch stock positioning data",

      at error (routes/positioning.js:298:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/positioning/stocks HTTP/1.1" 500 66 "-" "-"
  console.error
    Error fetching positioning summary: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/positioning.js:334:48)

      398 |     });
      399 |   } catch (error) {
    > 400 |     console.error("Error fetching positioning summary:", error);
          |             ^
      401 |     res
      402 |       .status(500)
      403 |       .json({ success: false, error: "Failed to fetch positioning summary" });

      at error (routes/positioning.js:400:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/positioning/summary HTTP/1.1" 500 63 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:30:13)

  console.error
    Error fetching stock positioning data: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/positioning.js:154:24)

      296 |     });
      297 |   } catch (error) {
    > 298 |     console.error("Error fetching stock positioning data:", error);
          |             ^
      299 |     res.status(500).json({
      300 |       success: false,
      301 |       error: "Failed to fetch stock positioning data",

      at error (routes/positioning.js:298:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/positioning/stocks HTTP/1.1" 500 66 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:30:13)

  console.error
    Error fetching stock positioning data: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/positioning.js:154:24)

      296 |     });
      297 |   } catch (error) {
    > 298 |     console.error("Error fetching stock positioning data:", error);
          |             ^
      299 |     res.status(500).json({
      300 |       success: false,
      301 |       error: "Failed to fetch stock positioning data",

      at error (routes/positioning.js:298:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/positioning/stocks HTTP/1.1" 500 66 "-" "-"
  console.error
    Error fetching positioning summary: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/positioning.js:334:48)

      398 |     });
      399 |   } catch (error) {
    > 400 |     console.error("Error fetching positioning summary:", error);
          |             ^
      401 |     res
      402 |       .status(500)
      403 |       .json({ success: false, error: "Failed to fetch positioning summary" });

      at error (routes/positioning.js:400:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/positioning/summary HTTP/1.1" 500 63 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: AAPL, timeframe: daily

      at log (routes/positioning.js:30:13)

  console.error
    Error fetching stock positioning data: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/positioning.js:154:24)

      296 |     });
      297 |   } catch (error) {
    > 298 |     console.error("Error fetching stock positioning data:", error);
          |             ^
      299 |     res.status(500).json({
      300 |       success: false,
      301 |       error: "Failed to fetch stock positioning data",

      at error (routes/positioning.js:298:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/positioning/stocks?symbol=AAPL HTTP/1.1" 500 66 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: all, timeframe: daily

      at log (routes/positioning.js:30:13)

  console.error
    Error fetching stock positioning data: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/positioning.js:154:24)

      296 |     });
      297 |   } catch (error) {
    > 298 |     console.error("Error fetching stock positioning data:", error);
          |             ^
      299 |     res.status(500).json({
      300 |       success: false,
      301 |       error: "Failed to fetch stock positioning data",

      at error (routes/positioning.js:298:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/positioning/stocks HTTP/1.1" 500 66 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: all, timeframe:

      at log (routes/positioning.js:30:13)

  console.error
    Error fetching stock positioning data: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/positioning.js:154:24)

      296 |     });
      297 |   } catch (error) {
    > 298 |     console.error("Error fetching stock positioning data:", error);
          |             ^
      299 |     res.status(500).json({
      300 |       success: false,
      301 |       error: "Failed to fetch stock positioning data",

      at error (routes/positioning.js:298:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/positioning/stocks?symbol=&timeframe= HTTP/1.1" 500 66 "-" "-"
  console.log
    📊 Stock positioning data requested - symbol: BRK.A, timeframe: daily

      at log (routes/positioning.js:30:13)

  console.error
    Error fetching stock positioning data: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/positioning.js:154:24)

      296 |     });
      297 |   } catch (error) {
    > 298 |     console.error("Error fetching stock positioning data:", error);
          |             ^
      299 |     res.status(500).json({
      300 |       success: false,
      301 |       error: "Failed to fetch stock positioning data",

      at error (routes/positioning.js:298:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/positioning/stocks?symbol=BRK%2EA HTTP/1.1" 500 66 "-" "-"
FAIL tests/integration/routes/positioning.integration.test.js
  ● Positioning Routes › GET /api/positioning/stocks › should return stock positioning data

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      56 |
      57 |       // May return 200 with data or 404 if no data found
    > 58 |       expect([200, 404].includes(response.status)).toBe(true);
         |                                                    ^
      59 |
      60 |       if (response.status === 200) {
      61 |         expect(response.body).toHaveProperty("positioning_metrics");

      at Object.toBe (tests/integration/routes/positioning.integration.test.js:58:52)

  ● Positioning Routes › GET /api/positioning/stocks › should support symbol parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      79 |         .set("Authorization", "Bearer dev-bypass-token");
      80 |
    > 81 |       expect([200, 404].includes(response.status)).toBe(true);
         |                                                    ^
      82 |
      83 |       if (response.status === 200) {
      84 |         expect(response.body.metadata.symbol).toBe("AAPL");

      at Object.toBe (tests/integration/routes/positioning.integration.test.js:81:52)

  ● Positioning Routes › GET /api/positioning/stocks › should support timeframe parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      91 |         .set("Authorization", "Bearer dev-bypass-token");
      92 |
    > 93 |       expect([200, 404].includes(response.status)).toBe(true);
         |                                                    ^
      94 |
      95 |       if (response.status === 200) {
      96 |         expect(response.body.metadata.timeframe).toBe("weekly");

      at Object.toBe (tests/integration/routes/positioning.integration.test.js:93:52)

  ● Positioning Routes › GET /api/positioning/stocks › should support pagination parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      103 |         .set("Authorization", "Bearer dev-bypass-token");
      104 |
    > 105 |       expect([200, 404].includes(response.status)).toBe(true);
          |                                                    ^
      106 |
      107 |       if (response.status === 200) {
      108 |         // Should respect limit - institutional holders should be <= 10

      at Object.toBe (tests/integration/routes/positioning.integration.test.js:105:52)

  ● Positioning Routes › GET /api/positioning/stocks › should handle pagination with different page numbers

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      116 |         .set("Authorization", "Bearer dev-bypass-token");
      117 |
    > 118 |       expect([200, 404].includes(response.status)).toBe(true);
          |                                                    ^
      119 |     });
      120 |
      121 |     test("should validate response structure when data exists", async () => {

      at Object.toBe (tests/integration/routes/positioning.integration.test.js:118:52)

  ● Positioning Routes › GET /api/positioning/stocks › should handle mixed case symbol parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      170 |         .set("Authorization", "Bearer dev-bypass-token");
      171 |
    > 172 |       expect([200, 404].includes(response.status)).toBe(true);
          |                                                    ^
      173 |     });
      174 |
      175 |     test("should handle special characters in symbol", async () => {

      at Object.toBe (tests/integration/routes/positioning.integration.test.js:172:52)

  ● Positioning Routes › GET /api/positioning/stocks › should handle special characters in symbol

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      178 |         .set("Authorization", "Bearer dev-bypass-token");
      179 |
    > 180 |       expect([200, 404].includes(response.status)).toBe(true);
          |                                                    ^
      181 |     });
      182 |
      183 |     test("should return 404 for non-existent symbol", async () => {

      at Object.toBe (tests/integration/routes/positioning.integration.test.js:180:52)

  ● Positioning Routes › GET /api/positioning/stocks › should return 404 for non-existent symbol

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      186 |         .set("Authorization", "Bearer dev-bypass-token");
      187 |
    > 188 |       expect([200, 404].includes(response.status)).toBe(true);
          |                                                    ^
      189 |
      190 |       if (response.status === 404) {
      191 |         expect(response.body).toHaveProperty("error");

      at Object.toBe (tests/integration/routes/positioning.integration.test.js:188:52)

  ● Positioning Routes › Authentication › should require authentication for stock positioning

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      287 |       // No auth header
      288 |
    > 289 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      290 |     });
      291 |
      292 |     test("should require authentication for positioning summary", async () => {

      at Object.toBe (tests/integration/routes/positioning.integration.test.js:289:52)

  ● Positioning Routes › Authentication › should require authentication for positioning summary

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      294 |       // No auth header
      295 |
    > 296 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      297 |     });
      298 |
      299 |     test("should handle invalid authentication", async () => {

      at Object.toBe (tests/integration/routes/positioning.integration.test.js:296:52)

  ● Positioning Routes › Authentication › should handle invalid authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      302 |         .set("Authorization", "Bearer invalid-token");
      303 |
    > 304 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      305 |     });
      306 |   });
      307 |

      at Object.toBe (tests/integration/routes/positioning.integration.test.js:304:52)


  ● Test suite failed to run

    Cannot add a hook after tests have started running. Hooks must be defined synchronously.

      30 | describe("Positioning Routes", () => {
      31 |   beforeAll(async () => {
    > 32 |     beforeEach(() => {
         |     ^
      33 |     jest.clearAllMocks();
      34 |     query.mockImplementation((sql, params) => {
      35 |       // Default: return empty rows for all queries

      at eventHandler (node_modules/jest-circus/build/eventHandler.js:104:11)
      at Object.beforeEach (tests/integration/routes/positioning.integration.test.js:32:5)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance HTTP/1.1" 200 431 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/health HTTP/1.1" 200 150 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/benchmark HTTP/1.1" 200 270 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/benchmark HTTP/1.1" 200 270 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/benchmark?benchmark=SPY HTTP/1.1" 200 270 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/benchmark?benchmark=QQQ HTTP/1.1" 200 272 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/benchmark?benchmark=IWM HTTP/1.1" 200 272 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/benchmark?benchmark=VTI HTTP/1.1" 200 272 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/benchmark?benchmark=SCHB HTTP/1.1" 200 273 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/benchmark?period=1d HTTP/1.1" 200 270 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/benchmark?period=1w HTTP/1.1" 200 270 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/benchmark?period=1m HTTP/1.1" 200 270 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/benchmark?period=3m HTTP/1.1" 200 270 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/benchmark?period=6m HTTP/1.1" 200 270 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/benchmark?period=1y HTTP/1.1" 200 270 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/benchmark?period=2y HTTP/1.1" 200 270 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/benchmark?benchmark=SPY&period=1m HTTP/1.1" 200 270 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/portfolio HTTP/1.1" 200 302 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/portfolio HTTP/1.1" 200 302 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/portfolio?period=1d HTTP/1.1" 200 302 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/portfolio?period=1w HTTP/1.1" 200 302 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/portfolio?period=1m HTTP/1.1" 200 302 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/portfolio?period=3m HTTP/1.1" 200 302 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/portfolio?period=6m HTTP/1.1" 200 302 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/portfolio?period=1y HTTP/1.1" 200 302 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/portfolio HTTP/1.1" 200 302 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/returns HTTP/1.1" 200 244 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/returns HTTP/1.1" 200 244 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/returns?type=time_weighted HTTP/1.1" 200 252 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/returns?type=dollar_weighted HTTP/1.1" 200 254 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/returns?type=both HTTP/1.1" 200 243 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/attribution HTTP/1.1" 200 405 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/attribution HTTP/1.1" 200 405 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/attribution?type=sector HTTP/1.1" 200 405 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/attribution?type=security HTTP/1.1" 200 407 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/attribution?type=allocation HTTP/1.1" 200 409 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/attribution?type=all HTTP/1.1" 200 402 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/metrics HTTP/1.1" 200 188 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/metrics HTTP/1.1" 200 188 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/metrics HTTP/1.1" 200 188 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/metrics?period=1m HTTP/1.1" 200 188 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/metrics?period=3m HTTP/1.1" 200 188 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/metrics?period=6m HTTP/1.1" 200 188 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/metrics?period=1y HTTP/1.1" 200 188 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/metrics?period=2y HTTP/1.1" 200 188 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/risk HTTP/1.1" 200 179 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/risk HTTP/1.1" 200 179 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance HTTP/1.1" 200 431 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/benchmark HTTP/1.1" 200 270 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/portfolio HTTP/1.1" 200 302 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/returns HTTP/1.1" 200 244 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/metrics HTTP/1.1" 200 188 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/metrics HTTP/1.1" 200 188 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/portfolio?period=invalid HTTP/1.1" 200 307 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/portfolio?benchmark=INVALID_SYMBOL HTTP/1.1" 200 302 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/portfolio?type=unknown_type HTTP/1.1" 200 302 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/portfolio?start_date=invalid-date HTTP/1.1" 200 302 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/portfolio?end_date=2025-13-40 HTTP/1.1" 200 302 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/portfolio HTTP/1.1" 200 302 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/benchmark HTTP/1.1" 200 270 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/portfolio HTTP/1.1" 200 302 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/returns HTTP/1.1" 200 244 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/metrics HTTP/1.1" 200 188 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/portfolio HTTP/1.1" 200 302 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance HTTP/1.1" 200 431 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/health HTTP/1.1" 200 150 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/benchmark HTTP/1.1" 200 270 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/portfolio HTTP/1.1" 200 302 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/returns HTTP/1.1" 200 244 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/metrics HTTP/1.1" 200 188 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:49 +0000] "GET /api/performance/portfolio?period=10y HTTP/1.1" 200 303 "-" "-"
FAIL tests/integration/routes/performance.integration.test.js
  Performance Routes Integration Tests
    GET /api/performance (Root Endpoint)
      ✓ should return performance API information (5 ms)
    GET /api/performance/health (Health Check)
      ✓ should return performance service health status (1 ms)
    GET /api/performance/benchmark (Benchmark Comparison)
      ✕ should require authentication for benchmark comparison (1 ms)
      ✓ should return benchmark comparison with authentication (2 ms)
      ✓ should handle different benchmark symbols (7 ms)
      ✓ should handle different time periods (9 ms)
      ✓ should validate benchmark comparison metrics (2 ms)
    GET /api/performance/portfolio (Portfolio Performance)
      ✕ should require authentication for portfolio performance (1 ms)
      ✓ should return portfolio performance data with authentication (2 ms)
      ✓ should handle period parameter for portfolio performance (10 ms)
      ✓ should validate portfolio performance metrics (2 ms)
    GET /api/performance/returns (Return Calculations)
      ✕ should require authentication for return calculations (1 ms)
      ✓ should return return calculations with authentication (2 ms)
      ✓ should handle calculation type parameter (4 ms)
    GET /api/performance/attribution (Performance Attribution)
      ✕ should require authentication for performance attribution (2 ms)
      ✓ should return performance attribution analysis (2 ms)
      ✓ should handle attribution type parameter (5 ms)
    GET /api/performance/metrics (Performance Metrics)
      ✕ should require authentication for performance metrics (2 ms)
      ✓ should return comprehensive performance metrics (2 ms)
      ✓ should validate metric value ranges (2 ms)
      ✓ should handle period parameter for metrics (7 ms)
    GET /api/performance/risk (Risk Metrics)
      ✕ should require authentication for risk metrics (1 ms)
      ✓ should return risk analysis metrics (2 ms)
    Performance and Edge Cases
      ✓ should handle concurrent requests to performance endpoints (5 ms)
      ✓ should maintain response time consistency (2 ms)
      ✓ should handle invalid parameters gracefully (6 ms)
      ✕ should handle malformed authentication tokens (4 ms)
      ✓ should validate numeric data integrity across endpoints (8 ms)
      ✓ should handle database connection issues gracefully (1 ms)
      ✓ should validate response content types (9 ms)
      ✓ should handle memory pressure with large data requests (1 ms)

  ● Performance Routes Integration Tests › GET /api/performance/benchmark (Benchmark Comparison) › should require authentication for benchmark comparison

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      91 |       const response = await request(app).get("/api/performance/benchmark");
      92 |
    > 93 |       expect([401].includes(response.status)).toBe(true);
         |                                               ^
      94 |     });
      95 |
      96 |     test("should return benchmark comparison with authentication", async () => {

      at Object.toBe (tests/integration/routes/performance.integration.test.js:93:47)

  ● Performance Routes Integration Tests › GET /api/performance/portfolio (Portfolio Performance) › should require authentication for portfolio performance

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      195 |       const response = await request(app).get("/api/performance/portfolio");
      196 |
    > 197 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      198 |     });
      199 |
      200 |     test("should return portfolio performance data with authentication", async () => {

      at Object.toBe (tests/integration/routes/performance.integration.test.js:197:47)

  ● Performance Routes Integration Tests › GET /api/performance/returns (Return Calculations) › should require authentication for return calculations

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      284 |       const response = await request(app).get("/api/performance/returns");
      285 |
    > 286 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      287 |     });
      288 |
      289 |     test("should return return calculations with authentication", async () => {

      at Object.toBe (tests/integration/routes/performance.integration.test.js:286:47)

  ● Performance Routes Integration Tests › GET /api/performance/attribution (Performance Attribution) › should require authentication for performance attribution

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      337 |       const response = await request(app).get("/api/performance/attribution");
      338 |
    > 339 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      340 |     });
      341 |
      342 |     test("should return performance attribution analysis", async () => {

      at Object.toBe (tests/integration/routes/performance.integration.test.js:339:47)

  ● Performance Routes Integration Tests › GET /api/performance/metrics (Performance Metrics) › should require authentication for performance metrics

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      390 |       const response = await request(app).get("/api/performance/metrics");
      391 |
    > 392 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      393 |     });
      394 |
      395 |     test("should return comprehensive performance metrics", async () => {

      at Object.toBe (tests/integration/routes/performance.integration.test.js:392:47)

  ● Performance Routes Integration Tests › GET /api/performance/risk (Risk Metrics) › should require authentication for risk metrics

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      471 |       const response = await request(app).get("/api/performance/risk");
      472 |
    > 473 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      474 |     });
      475 |
      476 |     test("should return risk analysis metrics", async () => {

      at Object.toBe (tests/integration/routes/performance.integration.test.js:473:47)

  ● Performance Routes Integration Tests › Performance and Edge Cases › should handle malformed authentication tokens

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      580 |           .set("Authorization", token);
      581 |
    > 582 |         expect([401].includes(response.status)).toBe(true);
          |                                                 ^
      583 |       }
      584 |     });
      585 |

      at Object.toBe (tests/integration/routes/performance.integration.test.js:582:49)

  console.error
    Technical data table for daily timeframe not found

      1512 |
      1513 |     if (!tableExists.rows[0].exists) {
    > 1514 |       console.error(
           |               ^
      1515 |         `Technical data table for ${timeframe} timeframe not found`
      1516 |       );
      1517 |       return res.status(404).json({

      at error (routes/technical.js:1514:15)

  console.log
    📊 [TECHNICAL] Fetching technical history for AAPL (60 days)

      at log (routes/technical.js:1788:11)

  console.log
    🔍 [PATTERNS] Analyzing patterns for AAPL on 1D timeframe

      at log (routes/technical.js:2336:11)

  console.log
    🔍 [PATTERNS] Analyzing patterns for AAPL on 1D timeframe

      at log (routes/technical.js:2336:11)

  console.error
    Error getting price data for patterns: Error: Database connection failed
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/technical.test.js:872:28)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      2677 |     return null;
      2678 |   } catch (error) {
    > 2679 |     console.error("Error getting price data for patterns:", error);
           |             ^
      2680 |     // Return null instead of throwing
      2681 |     return null;
      2682 |   }

      at error (routes/technical.js:2679:13)
      at analyzePatterns (routes/technical.js:2379:23)
      at routes/technical.js:2342:29

  console.error
    Error in technical overview endpoint: Error: Connection timeout
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/technical.test.js:886:35)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      1545 |     });
      1546 |   } catch (error) {
    > 1547 |     console.error("Error in technical overview endpoint:", error);
           |             ^
      1548 |     return res.status(500).json({
      1549 |       success: false,
      1550 |       error: "Failed to retrieve technical overview data",

      at error (routes/technical.js:1547:13)

  console.log
    📊 Technical chart requested - symbol: AAPL, period: 1M, interval: 1d

      at log (routes/technical.js:768:13)

  console.log
    📊 Technical chart requested - symbol: MSFT, period: 1Y, interval: 1d

      at log (routes/technical.js:768:13)

  console.log
    📊 Technical chart requested - symbol: AAPL, period: 1M, interval: 1d

      at log (routes/technical.js:768:13)

  console.log
    📊 Technical chart requested - symbol: AAPL, period: 1M, interval: 1d

      at log (routes/technical.js:768:13)

  console.log
    📊 Technical chart requested - symbol: AAPL, period: 1M, interval: 1d

      at log (routes/technical.js:768:13)

  console.log
    📊 Technical chart requested - symbol: AAPL, period: 1M, interval: 1d

      at log (routes/technical.js:768:13)

  console.log
    📊 Technical chart requested - symbol: AAPL, period: 1M, interval: 1d

      at log (routes/technical.js:768:13)

  console.log
    📊 Technical chart requested - symbol: AAPL, period: 1M, interval: 1d

      at log (routes/technical.js:768:13)

  console.error
    Chart data tables not available or database connection failed

      785 |       !tableCheck.rows[0].exists
      786 |     ) {
    > 787 |       console.error(
          |               ^
      788 |         "Chart data tables not available or database connection failed"
      789 |       );
      790 |       return res.status(404).json({

      at error (routes/technical.js:787:15)

  console.log
    📊 Technical chart requested - symbol: AAPL, timeframe: invalid, period: 1m

      at log (routes/technical.js:871:13)

  console.log
    📊 Technical chart requested - symbol: AAPL, timeframe: daily, period: invalid

      at log (routes/technical.js:871:13)

  console.log
    📊 Technical chart requested - symbol: AAPL, timeframe: daily, period: 1m

      at log (routes/technical.js:871:13)

FAIL tests/unit/routes/technical.test.js
  Technical Analysis Routes - Testing Your Actual Site
    GET /technical/ping - Basic endpoint
      ✓ should return ping response (17 ms)
    GET /technical/ - Root technical endpoint
      ✓ should return latest technical data for all symbols using daily timeframe (3 ms)
      ✓ should return 404 when technical_data_daily table doesn't exist (14 ms)
    GET /technical/:timeframe - Timeframe-based data
      ✓ should return daily technical data with pagination (2 ms)
      ✓ should validate timeframe parameter (2 ms)
      ✓ should handle symbol filtering (2 ms)
      ✓ should handle RSI filtering (1 ms)
    GET /technical/:timeframe/summary - Technical summary
      ✓ should return technical summary statistics (3 ms)
      ✓ should return error when table doesn't exist (1 ms)
    GET /technical/data/:symbol - Individual symbol data
      ✓ should return latest technical data for specific symbol (5 ms)
      ✓ should return 404 for non-existent symbol (2 ms)
      ✓ should return error when table missing (1 ms)
    GET /technical/indicators/:symbol - Technical indicators
      ✓ should return 30-day technical indicators for symbol (3 ms)
    GET /technical/history/:symbol - Technical history
      ✓ should return technical history with custom days parameter (3 ms)
    GET /technical/support-resistance/:symbol - Support/Resistance levels
      ✓ should return support and resistance levels (2 ms)
      ✓ should validate timeframe for support/resistance (3 ms)
    GET /technical/daily - Filtered technical data
      ✓ should handle filtered technical data requests (1 ms)
      ✕ should handle technical data queries safely (4 ms)
    GET /technical/patterns/:symbol - Pattern recognition
      ✓ should return technical pattern analysis (4 ms)
      ✓ should return error on database failures (6 ms)
    Error handling - Your site's error patterns
      ✓ should handle database errors with proper error responses (2 ms)
      ✓ should return structured error responses for invalid timeframes (1 ms)
      ✓ should handle large limit values safely (1 ms)
    GET /technical/chart/:symbol - Chart data for symbol
      ✓ should return chart data with default parameters (4 ms)
      ✓ should return chart data with custom parameters (5 ms)
      ✓ should include proper OHLCV structure (3 ms)
      ✓ should include complete chart metadata (2 ms)
      ✓ should include chart data with proper timestamp (3 ms)
      ✓ should handle volume inclusion correctly (5 ms)
      ✓ should handle table not exists gracefully (3 ms)
    GET /technical/chart - Query-based chart endpoint
      ✓ should validate timeframe parameter (2 ms)
      ✓ should validate period parameter (2 ms)
      ✓ should filter indicators correctly (3 ms)

  ● Technical Analysis Routes - Testing Your Actual Site › GET /technical/daily - Filtered technical data › should handle technical data queries safely

    expect(received).toContain(expected) // indexOf

    Expected substring: "technical_data_daily"
    Received string:    "
          SELECT COUNT(*) as total
          FROM stocks
          WHERE symbol = $3
          "

      808 |       expect(query).toHaveBeenCalled();
      809 |       if (query.mock.calls.length > 2 && query.mock.calls[2]) {
    > 810 |         expect(query.mock.calls[2][0]).toContain("technical_data_daily");
          |                                        ^
      811 |       }
      812 |     });
      813 |   });

      at Object.toContain (tests/unit/routes/technical.test.js:810:40)

  console.log
    [MARKET] Debug endpoint called

      at log (routes/market.js:309:11)

  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

  console.log
    🏢 Market sectors endpoint called (real data from Yahoo Finance)

      at log (routes/market.js:1043:11)

  console.log
    Economic indicators endpoint called for 90 days

      at log (routes/market.js:1753:11)

  console.log
    😊 Market sentiment endpoint called

      at log (routes/market.js:2188:11)

  console.log
    😊 Market sentiment endpoint called

      at log (routes/market.js:2188:11)

  console.log
    📊 Market data endpoint called

      at log (routes/market.js:78:13)

  console.log
    📊 Market data endpoint called

      at log (routes/market.js:78:13)

  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

  console.log
    Sector performance endpoint called

      at log (routes/market.js:776:11)

  console.log
    Sector performance endpoint called

      at log (routes/market.js:776:11)

  console.log
    📈 Economic indicators requested - querying real data from database

      at log (routes/market.js:1311:13)

  console.error
    Economic indicators error: TypeError: Cannot read properties of undefined (reading 'toLowerCase')
        at toLowerCase (/home/stocks/algo/webapp/lambda/routes/market.js:1345:28)
        at Array.forEach (<anonymous>)
        at forEach (/home/stocks/algo/webapp/lambda/routes/market.js:1344:17)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)

      1484 |     });
      1485 |   } catch (error) {
    > 1486 |     console.error("Economic indicators error:", error);
           |             ^
      1487 |     res.status(500).json({
      1488 |       success: false,
      1489 |       error: "Failed to fetch economic indicators",

      at error (routes/market.js:1486:13)

  console.log
    📈 Economic indicators requested - querying real data from database

      at log (routes/market.js:1311:13)

  console.error
    Economic indicators error: TypeError: Cannot read properties of undefined (reading 'toLowerCase')
        at toLowerCase (/home/stocks/algo/webapp/lambda/routes/market.js:1345:28)
        at Array.forEach (<anonymous>)
        at forEach (/home/stocks/algo/webapp/lambda/routes/market.js:1344:17)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)

      1484 |     });
      1485 |   } catch (error) {
    > 1486 |     console.error("Economic indicators error:", error);
           |             ^
      1487 |     res.status(500).json({
      1488 |       success: false,
      1489 |       error: "Failed to fetch economic indicators",

      at error (routes/market.js:1486:13)

  console.log
    📈 Economic indicators requested - querying real data from database

      at log (routes/market.js:1311:13)

  console.error
    Economic indicators error: TypeError: Cannot read properties of undefined (reading 'toLowerCase')
        at toLowerCase (/home/stocks/algo/webapp/lambda/routes/market.js:1345:28)
        at Array.forEach (<anonymous>)
        at forEach (/home/stocks/algo/webapp/lambda/routes/market.js:1344:17)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)

      1484 |     });
      1485 |   } catch (error) {
    > 1486 |     console.error("Economic indicators error:", error);
           |             ^
      1487 |     res.status(500).json({
      1488 |       success: false,
      1489 |       error: "Failed to fetch economic indicators",

      at error (routes/market.js:1486:13)

  console.log
    Market breadth endpoint called

      at log (routes/market.js:1497:11)

  console.log
    Market breadth endpoint called

      at log (routes/market.js:1497:11)

  console.log
    📊 Distribution Days endpoint called

      at log (routes/market.js:1617:11)

  console.log
    📊 Distribution Days endpoint called

      at log (routes/market.js:1617:11)

  console.log
    📊 Distribution Days endpoint called

      at log (routes/market.js:1617:11)

  console.log
    📊 Distribution Days endpoint called

      at log (routes/market.js:1617:11)

  console.error
    Error fetching distribution days: Error: Database connection failed
        at /home/stocks/algo/webapp/lambda/tests/unit/routes/market.test.js:558:33
        at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
        at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13
        at mockConstructor (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
        at query (/home/stocks/algo/webapp/lambda/routes/market.js:1662:26)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)

      1729 |     });
      1730 |   } catch (error) {
    > 1731 |     console.error("Error fetching distribution days:", error);
           |             ^
      1732 |     return res.status(503).json({
      1733 |       success: false,
      1734 |       error: "Distribution days service unavailable",

      at error (routes/market.js:1731:13)

  console.log
    📊 Distribution Days endpoint called

      at log (routes/market.js:1617:11)

  console.log
    📊 Market summary requested

      at log (routes/market.js:156:13)

  console.log
    📊 Market summary requested

      at log (routes/market.js:156:13)

  console.log
    NAAIM data endpoint called with limit: 30

      at log (routes/market.js:1876:11)

  console.log
    📊 Recession forecast endpoint called

      at log (routes/market.js:3147:11)

  console.log
    📈 Leading indicators endpoint called

      at log (routes/market.js:3293:11)

  console.log
    📊 Leading indicators query returned 2 series

      at log (routes/market.js:3323:13)

  console.log
      ✓ undefined: 2.3 (2025-09-28)

      at log (routes/market.js:3331:15)
          at Array.forEach (<anonymous>)

  console.log
      ✓ undefined: 3.8 (2025-09-28)

      at log (routes/market.js:3331:15)
          at Array.forEach (<anonymous>)

  console.log
    ⚠️  Missing series: UNRATE, PAYEMS, CPIAUCSL, GDPC1, DGS10, DGS2, T10Y2Y, SP500, VIXCLS, FEDFUNDS, INDPRO, HOUST, MICH

      at log (routes/market.js:3338:15)

  console.log
    🏭 Sectoral analysis endpoint called

      at log (routes/market.js:3608:11)

  console.log
    🤖 AI insights endpoint called

      at log (routes/market.js:3812:11)

  console.log
    🎯 Economic scenarios endpoint called

      at log (routes/market.js:3701:11)

  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

  console.log
    📈 Economic indicators requested - querying real data from database

      at log (routes/market.js:1311:13)

  console.error
    Economic indicators error: TypeError: Cannot read properties of undefined (reading 'toLowerCase')
        at toLowerCase (/home/stocks/algo/webapp/lambda/routes/market.js:1345:28)
        at Array.forEach (<anonymous>)
        at forEach (/home/stocks/algo/webapp/lambda/routes/market.js:1344:17)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)

      1484 |     });
      1485 |   } catch (error) {
    > 1486 |     console.error("Economic indicators error:", error);
           |             ^
      1487 |     res.status(500).json({
      1488 |       success: false,
      1489 |       error: "Failed to fetch economic indicators",

      at error (routes/market.js:1486:13)

FAIL tests/unit/routes/market.test.js
  Market Routes Unit Tests
    GET /market/
      ✓ should return market info (15 ms)
    GET /market/debug
      ✓ should return debug information (5 ms)
    GET /market/overview
      ✓ should return market overview (3 ms)
      ✓ should return market overview data (2 ms)
      ✓ should handle market overview with parameters (3 ms)
    GET /market/sectors
      ✕ should return sector data (3 ms)
    GET /market/economic
      ✓ should return economic data (2 ms)
    GET /market/sentiment
      ✓ should return sentiment history with AAII data (3 ms)
      ✓ should handle sentiment with custom parameters (2 ms)
    GET /market/aaii
      ✓ should return AAII sentiment data (2 ms)
    GET /market/data
      ✓ should return market data with success flag (5 ms)
      ✓ should handle query parameters (2 ms)
    GET /market/sectors/performance
      ✓ should return sector performance data (2 ms)
      ✓ should handle sector performance with timeframe (2 ms)
    GET /market/economic/indicators
      ✕ should return economic indicators (25 ms)
      ✕ should filter by category (8 ms)
      ✕ should include historical data when requested (3 ms)
    GET /market/breadth
      ✓ should return market breadth data (2 ms)
      ✓ should handle breadth with parameters (2 ms)
    GET /market/distribution-days
      ✓ should return distribution days data for major indices (2 ms)
      ✓ should return proper distribution day structure (1 ms)
      ✓ should handle missing distribution_days table gracefully (2 ms)
      ✓ should handle database query errors (3 ms)
      ✓ should return 404 when no distribution days data exists (2 ms)
    GET /market/summary
      ✓ should return market summary (6 ms)
      ✓ should handle summary with filters (2 ms)
    GET /market/naaim
      ✓ should return NAAIM data (2 ms)
    GET /market/ping
      ✓ should return ping response (1 ms)
    AWS Failing Endpoints - Database-Driven
      ✓ GET /market/recession-forecast should return database-driven recession analysis (3 ms)
      ✓ GET /market/leading-indicators should return database-driven leading indicators (3 ms)
      ✓ GET /market/sectoral-analysis should return database-driven sector analysis (3 ms)
      ✓ GET /market/ai-insights should return database-driven AI insights (2 ms)
      ✓ GET /market/economic-scenarios should return database-driven economic scenarios (3 ms)
    Error Handling
      ✓ should handle invalid query parameters gracefully (2 ms)
      ✕ should handle missing optional parameters (4 ms)

  ● Market Routes Unit Tests › GET /market/sectors › should return sector data

    expected 200 "OK", got 503 "Service Unavailable"

      301 |   describe("GET /market/sectors", () => {
      302 |     test("should return sector data", async () => {
    > 303 |       const response = await request(app).get("/market/sectors").expect(200);
          |                                                                  ^
      304 |       expect(response.body).toHaveProperty("success");
      305 |     });
      306 |   });

      at Object.expect (tests/unit/routes/market.test.js:303:66)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Market Routes Unit Tests › GET /market/economic/indicators › should return economic indicators

    expected 200 "OK", got 500 "Internal Server Error"

      416 |       const response = await request(app)
      417 |         .get("/market/economic/indicators")
    > 418 |         .expect(200);
          |          ^
      419 |       expect(response.body).toBeDefined();
      420 |       expect(typeof response.body).toBe("object");
      421 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/market.test.js:418:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Market Routes Unit Tests › GET /market/economic/indicators › should filter by category

    expected 200 "OK", got 500 "Internal Server Error"

      428 |       const response = await request(app)
      429 |         .get("/market/economic/indicators?category=inflation")
    > 430 |         .expect(200);
          |          ^
      431 |       expect(response.body).toBeDefined();
      432 |       expect(typeof response.body).toBe("object");
      433 |     });

      at Object.expect (tests/unit/routes/market.test.js:430:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Market Routes Unit Tests › GET /market/economic/indicators › should include historical data when requested

    expected 200 "OK", got 500 "Internal Server Error"

      435 |       const response = await request(app)
      436 |         .get("/market/economic/indicators?historical=true")
    > 437 |         .expect(200);
          |          ^
      438 |       expect(response.body).toBeDefined();
      439 |       expect(typeof response.body).toBe("object");
      440 |       if (response.body.data && response.body.data.indicators) {

      at Object.expect (tests/unit/routes/market.test.js:437:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Market Routes Unit Tests › Error Handling › should handle missing optional parameters

    expected 200 "OK", got 500 "Internal Server Error"

      712 |       const response = await request(app)
      713 |         .get("/market/economic/indicators?category=")
    > 714 |         .expect(200);
          |          ^
      715 |       expect(response.body).toBeDefined();
      716 |       expect(typeof response.body).toBe("object");
      717 |     });

      at Object.expect (tests/unit/routes/market.test.js:714:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

FAIL tests/integration/analytics/analysts.test.js
  Analysts API
    Analyst Recommendations
      ✕ should retrieve analyst recommendations for stock
      ✕ should handle invalid stock symbols
    Analyst Coverage
      ○ skipped should return error for individual analyst coverage (not available from yfinance)
    Price Targets
      ○ skipped should retrieve price targets for stock
      ○ skipped should provide consensus price targets
    Analyst Research
      ○ skipped should retrieve research reports
      ○ skipped should filter research by analyst firm

  ● Analysts API › Analyst Recommendations › should retrieve analyst recommendations for stock

    ReferenceError: query is not defined

      34 |     beforeEach(() => {
      35 |     jest.clearAllMocks();
    > 36 |     query.mockImplementation((sql, params) => {
         |     ^
      37 |       // Default: return empty rows for all queries
      38 |       if (sql.includes("information_schema.tables")) {
      39 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/analysts.test.js:36:5)

  ● Analysts API › Analyst Recommendations › should handle invalid stock symbols

    ReferenceError: query is not defined

      34 |     beforeEach(() => {
      35 |     jest.clearAllMocks();
    > 36 |     query.mockImplementation((sql, params) => {
         |     ^
      37 |       // Default: return empty rows for all queries
      38 |       if (sql.includes("information_schema.tables")) {
      39 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/analysts.test.js:36:5)

  console.log
    Using database config from environment variables

      at log (utils/database.js:182:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:220:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:271:15)

  console.log
    Using database config from environment variables

      at log (utils/database.js:182:15)

  console.log
    Database config loaded from environment: localhost:5432/test

      at log (utils/database.js:220:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:271:15)

  console.log
    Using database config from environment variables

      at log (utils/database.js:182:15)

  console.log
    Database config loaded from environment: localhost:5432/test

      at log (utils/database.js:220:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:271:15)

  console.error
    No database configuration available. Application cannot function without database.

      256 |           "Database configuration missing. Please set DB environment variables or DB_SECRET_ARN."
      257 |         );
    > 258 |         console.error(
          |                 ^
      259 |           "No database configuration available. Application cannot function without database."
      260 |         );
      261 |         dbInitialized = false;

      at error (utils/database.js:258:17)

  console.error
    Database query error: {
      error: 'Database connection failed',
      query: 'SELECT 1',
      params: 'no parameters',
      code: 'DB_CONNECTION_FAILED'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at Object.<anonymous> (tests/unit/utils/database.test.js:137:7)

  console.error
    Database connection error - no fallback available

      438 |       error.code === "ECONNABORTED"
      439 |     ) {
    > 440 |       console.error("Database connection error - no fallback available");
          |               ^
      441 |       error.message = `Database connection failed: ${error.message}`;
      442 |       throw error;
      443 |     }

      at error (utils/database.js:440:15)
      at Object.<anonymous> (tests/unit/utils/database.test.js:137:7)

  console.log
    Using database config from environment variables

      at log (utils/database.js:182:15)

  console.log
    Database config loaded from environment: localhost:5432/test

      at log (utils/database.js:220:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:271:15)

  console.error
    Database query error: {
      error: 'ECONNREFUSED',
      query: 'SELECT 1',
      params: 'no parameters',
      code: undefined
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at Object.<anonymous> (tests/unit/utils/database.test.js:147:7)

  console.error
    Database connection error - no fallback available

      438 |       error.code === "ECONNABORTED"
      439 |     ) {
    > 440 |       console.error("Database connection error - no fallback available");
          |               ^
      441 |       error.message = `Database connection failed: ${error.message}`;
      442 |       throw error;
      443 |     }

      at error (utils/database.js:440:15)
      at Object.<anonymous> (tests/unit/utils/database.test.js:147:7)

  console.log
    Using database config from environment variables

      at log (utils/database.js:182:15)

  console.log
    Database config loaded from environment: localhost:5432/test

      at log (utils/database.js:220:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:271:15)

  console.error
    Database query error: {
      error: 'syntax error',
      query: 'INVALID SQL',
      params: 'no parameters',
      code: undefined
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at Object.<anonymous> (tests/unit/utils/database.test.js:157:7)

  console.error
    Database syntax error: syntax error

      458 |       error.code === "42601" // syntax_error
      459 |     ) {
    > 460 |       console.error("Database syntax error:", error.message);
          |               ^
      461 |       throw error;
      462 |     }
      463 |

      at error (utils/database.js:460:15)
      at Object.<anonymous> (tests/unit/utils/database.test.js:157:7)

  console.log
    Using database config from environment variables

      at log (utils/database.js:182:15)

  console.log
    Database config loaded from environment: localhost:5432/test

      at log (utils/database.js:220:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:271:15)

  console.error
    Database query error: {
      error: 'Pool exhausted',
      query: 'SELECT 1',
      params: 'no parameters',
      code: undefined
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at Object.<anonymous> (tests/unit/utils/database.test.js:165:7)

  console.log
    Using database config from environment variables

      at log (utils/database.js:182:15)

  console.log
    Database config loaded from environment: localhost:5432/test

      at log (utils/database.js:220:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:271:15)

  console.log
    Using database config from environment variables

      at log (utils/database.js:182:15)

  console.log
    Database config loaded from environment: localhost:5432/test

      at log (utils/database.js:220:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:271:15)

  console.log
    Using database config from environment variables

      at log (utils/database.js:182:15)

  console.log
    Database config loaded from environment: localhost:5432/test

      at log (utils/database.js:220:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:271:15)

  console.log
    Using database config from environment variables

      at log (utils/database.js:182:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:220:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:271:15)

  console.error
    Database query error: {
      error: 'Connection failed',
      query: 'SELECT NOW() as timestamp, version() as db_version',
      params: 'no parameters',
      code: undefined
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at healthCheck (utils/database.js:557:20)
      at Object.<anonymous> (tests/unit/utils/database.test.js:231:22)

  console.log
    Using database config from environment variables

      at log (utils/database.js:182:15)

  console.log
    Database config loaded from environment: localhost:5432/test

      at log (utils/database.js:220:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:271:15)

  console.log
    Using database config from environment variables

      at log (utils/database.js:182:15)

  console.log
    Database config loaded from environment: localhost:5432/test

      at log (utils/database.js:220:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:271:15)

  console.log
    Using database config from environment variables

      at log (utils/database.js:182:15)

  console.log
    Database config loaded from environment: localhost:5432/test

      at log (utils/database.js:220:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:271:15)

  console.error
    Database query error: {
      error: 'connection timeout',
      query: 'SELECT 1',
      params: 'no parameters',
      code: undefined
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at Object.<anonymous> (tests/unit/utils/database.test.js:276:22)

  console.error
    Database connection error - no fallback available

      438 |       error.code === "ECONNABORTED"
      439 |     ) {
    > 440 |       console.error("Database connection error - no fallback available");
          |               ^
      441 |       error.message = `Database connection failed: ${error.message}`;
      442 |       throw error;
      443 |     }

      at error (utils/database.js:440:15)
      at Object.<anonymous> (tests/unit/utils/database.test.js:276:22)

  console.log
    Using database config from environment variables

      at log (utils/database.js:182:15)

  console.log
    Database config loaded from environment: localhost:5432/test

      at log (utils/database.js:220:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:271:15)

  console.error
    Database query error: {
      error: 'connection timeout',
      query: 'SELECT 1',
      params: 'no parameters',
      code: undefined
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at Object.<anonymous> (tests/unit/utils/database.test.js:286:22)

  console.error
    Database connection error - no fallback available

      438 |       error.code === "ECONNABORTED"
      439 |     ) {
    > 440 |       console.error("Database connection error - no fallback available");
          |               ^
      441 |       error.message = `Database connection failed: ${error.message}`;
      442 |       throw error;
      443 |     }

      at error (utils/database.js:440:15)
      at Object.<anonymous> (tests/unit/utils/database.test.js:286:22)

  console.log
    Using database config from environment variables

      at log (utils/database.js:182:15)

  console.log
    Database config loaded from environment: localhost:5432/test

      at log (utils/database.js:220:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:271:15)

FAIL tests/unit/utils/database.test.js
  Database Utilities - Unit Tests
    Database Module Export Tests
      ✓ should export required functions
    Connection Pool Management
      ✓ should initialize database and return pool object (8 ms)
      ✓ should handle initialization with environment variables (1 ms)
    Query Execution
      ✓ should execute queries through connection pool (2 ms)
      ✓ should throw error when database is not initialized (10 ms)
      ✓ should handle connection errors gracefully (2 ms)
      ✓ should handle non-connection errors by throwing (2 ms)
      ✓ should handle pool exhaustion errors (2 ms)
    Transaction Management
      ✓ should execute transaction with proper BEGIN/COMMIT (1 ms)
      ✓ should rollback transaction on error (2 ms)
      ✓ should handle transaction when database not initialized
    Health Check
      ✓ should return health status object (1 ms)
      ✓ should handle database errors gracefully (2 ms)
    Connection Cleanup
      ✓ should close database connections (1 ms)
      ✓ should handle cleanup when no pool exists (1 ms)
    Pool Access
      ✓ should throw error when pool not initialized
      ✓ should return connection pool when initialized (4 ms)
    Error Handling Edge Cases
      ✕ should handle database connection timeout errors (2 ms)
      ✕ should handle unexpected error formats (2 ms)
      ✓ should handle query logging for slow queries (101 ms)

  ● Database Utilities - Unit Tests › Error Handling Edge Cases › should handle database connection timeout errors

    Database connection failed: connection timeout

      273 |       process.env.DB_NAME = "test";
      274 |       await initializeDatabase();
    > 275 |       mockPool.query.mockRejectedValue(new Error("connection timeout"));
          |                                        ^
      276 |       const result = await query("SELECT 1");
      277 |       expect(result).toBeNull();
      278 |     });

      at Object.<anonymous> (tests/unit/utils/database.test.js:275:40)

  ● Database Utilities - Unit Tests › Error Handling Edge Cases › should handle unexpected error formats

    Database connection failed: connection timeout



  console.log
    Initializing database connection...

      at log (index.js:395:13)

  console.log
    🔧 DEV: Using development auth for registration

      at log (routes/auth.js:259:15)

  console.log
    🔧 DEV: Using development auth for registration

      at log (routes/auth.js:259:15)

  console.log
    🔧 DEV: Using development auth for registration

      at log (routes/auth.js:259:15)

  console.log
    🔧 DEV: Using development auth for registration

      at log (routes/auth.js:259:15)

  console.log
    🔧 DEV: Using development auth for login

      at log (routes/auth.js:40:15)

  console.log
    🔧 DEV: Using development auth for login

      at log (routes/auth.js:40:15)

  console.log
    🔧 DEV: Using development auth for confirmation

      at log (routes/auth.js:384:15)

  console.log
    🔧 DEV: Using development auth for confirmation

      at log (routes/auth.js:384:15)

  console.log
    🔧 DEV: Using development auth for forgot password

      at log (routes/auth.js:439:15)

  console.log
    🔧 DEV: Using development auth for password reset

      at log (routes/auth.js:472:15)

  console.log
    🔧 DEV: Using development auth for password reset

      at log (routes/auth.js:472:15)

  console.log
    🔧 DEV: Using development auth for login

      at log (routes/auth.js:40:15)

  console.log
    🔧 DEV: Using development auth for registration

      at log (routes/auth.js:259:15)

  console.log
    🔧 DEV: Using development auth for registration

      at log (routes/auth.js:259:15)

FAIL tests/integration/routes/auth.integration.test.js
  Authentication Routes Integration
    POST /auth/register
      ✓ should register new user successfully (11 ms)
      ✓ should reject duplicate email registration (2 ms)
      ✓ should validate required fields (2 ms)
      ✓ should validate email format (5 ms)
      ✓ should validate password strength (2 ms)
    POST /auth/login
      ✓ should login user with valid credentials (2 ms)
      ✓ should reject missing credentials (1 ms)
      ✓ should reject invalid credentials (1 ms)
    GET /auth/me
      ✕ should return user profile with dev bypass token (2 ms)
      ✕ should require valid token (2 ms)
      ✕ should reject invalid token (1 ms)
    POST /auth/confirm
      ✓ should confirm user registration (4 ms)
      ✓ should require confirmation parameters (1 ms)
    POST /auth/forgot-password
      ✓ should initiate password reset (2 ms)
      ✓ should require username (1 ms)
    POST /auth/reset-password
      ✓ should reset password with valid code (2 ms)
      ✓ should require all parameters (3 ms)
    Security and edge cases
      ✕ should handle SQL injection attempts (2 ms)
      ✓ should handle XSS attempts in registration (2 ms)
      ✕ should handle malformed Authorization header (1 ms)
      ✓ should handle empty password (1 ms)
      ✓ should handle extremely long inputs (2 ms)
    Health check
      ✓ should return auth service health (1 ms)

  ● Authentication Routes Integration › GET /auth/me › should return user profile with dev bypass token

    expect(received).toBe(expected) // Object.is equality

    Expected: "dev-bypass@example.com"
    Received: undefined

      196 |       expect(response.status).toBe(200);
      197 |       expect(response.body).toHaveProperty("user");
    > 198 |       expect(response.body.user.email).toBe("dev-bypass@example.com");
          |                                        ^
      199 |       expect(response.body.user.username).toBe("dev-bypass-user");
      200 |     });
      201 |

      at Object.toBe (tests/integration/routes/auth.integration.test.js:198:40)

  ● Authentication Routes Integration › GET /auth/me › should require valid token

    expect(received).toBe(expected) // Object.is equality

    Expected: 401
    Received: 200

      204 |
      205 |       // Authentication should properly require tokens
    > 206 |       expect(response.status).toBe(401);
          |                               ^
      207 |       expect(response.body.success).toBe(false);
      208 |       expect(response.body.error).toBe("Authentication required");
      209 |     });

      at Object.toBe (tests/integration/routes/auth.integration.test.js:206:31)

  ● Authentication Routes Integration › GET /auth/me › should reject invalid token

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 500]

      214 |         .set("Authorization", "Bearer invalid-token-here");
      215 |
    > 216 |       expect([401, 500]).toContain(response.status);
          |                          ^
      217 |       expect(response.body.success).toBe(false);
      218 |     });
      219 |   });

      at Object.toContain (tests/integration/routes/auth.integration.test.js:216:26)

  ● Authentication Routes Integration › Security and edge cases › should handle SQL injection attempts

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 0
    Received array:  []

      310 |       // Verify user_profiles table still exists
      311 |       const usersCheck = await query("SELECT COUNT(*) FROM user_profiles");
    > 312 |       expect(usersCheck.rows).toHaveLength(1);
          |                               ^
      313 |     });
      314 |
      315 |     test("should handle XSS attempts in registration", async () => {

      at Object.toHaveLength (tests/integration/routes/auth.integration.test.js:312:31)

  ● Authentication Routes Integration › Security and edge cases › should handle malformed Authorization header

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 500]

      332 |         .set("Authorization", "NotBearer token-here");
      333 |
    > 334 |       expect([401, 500]).toContain(response.status);
          |                          ^
      335 |       expect(response.body.success).toBe(false);
      336 |     });
      337 |

      at Object.toContain (tests/integration/routes/auth.integration.test.js:334:26)

  console.log
    📊 Live quotes requested for symbols: popular

      at log (routes/liveData.js:544:15)

  console.log
    Using database config from environment variables

      at log (utils/database.js:182:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:220:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:271:15)

  console.error
    Database query error: {
      error: 'column p.close_price does not exist',
      query: '\n' +
        '      WITH latest_prices AS (\n' +
        '        SELECT DISTINCT ON (p.symbol)\n' +
        '          p.symbol,\n' +
        '          p...',
      params: '1 parameters',
      code: '42703'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at routes/liveData.js:633:21

  console.warn
    Database query error (returning null for tests): column p.close_price does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at routes/liveData.js:633:21

  console.error
    Live quotes error: TypeError: Cannot read properties of null (reading 'map')
        at map (/home/stocks/algo/webapp/lambda/routes/liveData.js:636:32)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)

      725 |   } catch (error) {
      726 |     try {
    > 727 |       console.error("Live quotes error:", error);
          |               ^
      728 |     } catch (e) {
      729 |       // Ignore console logging errors
      730 |     }

      at error (routes/liveData.js:727:15)

  console.log
    📊 Live quotes requested for symbols: AAPL,MSFT,GOOGL

      at log (routes/liveData.js:544:15)

  console.error
    Database query error: {
      error: 'column p.close_price does not exist',
      query: '\n' +
        '      WITH latest_prices AS (\n' +
        '        SELECT DISTINCT ON (p.symbol)\n' +
        '          p.symbol,\n' +
        '          p...',
      params: '1 parameters',
      code: '42703'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at routes/liveData.js:633:21

  console.warn
    Database query error (returning null for tests): column p.close_price does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at routes/liveData.js:633:21

  console.error
    Live quotes error: TypeError: Cannot read properties of null (reading 'map')
        at map (/home/stocks/algo/webapp/lambda/routes/liveData.js:636:32)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)

      725 |   } catch (error) {
      726 |     try {
    > 727 |       console.error("Live quotes error:", error);
          |               ^
      728 |     } catch (e) {
      729 |       // Ignore console logging errors
      730 |     }

      at error (routes/liveData.js:727:15)

  console.log
    📊 Live quotes requested for symbols: popular

      at log (routes/liveData.js:544:15)

  console.error
    Database query error: {
      error: 'column p.close_price does not exist',
      query: '\n' +
        '      WITH latest_prices AS (\n' +
        '        SELECT DISTINCT ON (p.symbol)\n' +
        '          p.symbol,\n' +
        '          p...',
      params: '1 parameters',
      code: '42703'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at routes/liveData.js:633:21

  console.warn
    Database query error (returning null for tests): column p.close_price does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at routes/liveData.js:633:21

  console.error
    Live quotes error: TypeError: Cannot read properties of null (reading 'map')
        at map (/home/stocks/algo/webapp/lambda/routes/liveData.js:636:32)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)

      725 |   } catch (error) {
      726 |     try {
    > 727 |       console.error("Live quotes error:", error);
          |               ^
      728 |     } catch (e) {
      729 |       // Ignore console logging errors
      730 |     }

      at error (routes/liveData.js:727:15)

  console.log
    [2025-10-19T11:48:50.912Z] [INFO] [livedata-stream-1760874530912] Processing live data stream request

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "userId": "dev-user-bypass",
      "symbols": "default_watchlist",
      "type": "quotes",
      "format": "json"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:48:50.916Z] [INFO] [livedata-stream-1760874530912] Live data stream request completed (test mode)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "duration": 4,
      "symbols": [
        "AAPL",
        "MSFT",
        "GOOGL",
        "AMZN",
        "TSLA",
        "NVDA",
        "META"
      ],
      "type": "quotes"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:48:50.926Z] [INFO] [livedata-clear-1760874530926] Processing cache clear request

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "userId": "dev-user-bypass"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:48:50.929Z] [INFO] [livedata-clear-1760874530926] Cache cleared successfully

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "entriesCleared": 0
    }

      at Logger.log [as output] (utils/logger.js:90:17)

FAIL tests/unit/routes/liveData.test.js
  Live Data Routes Unit Tests
    GET /live-data/
      ✕ should return live data info (10 ms)
    GET /live-data/quotes
      ✕ should return live quotes with proper structure (65 ms)
      ✓ should handle symbols filter (12 ms)
      ✓ should handle limit parameter (15 ms)
    GET /live-data/stream
      ✕ should setup SSE stream with proper headers (12 ms)
    POST /live-data/admin/optimize
      ✕ should return optimization status (1 ms)
    POST /live-data/admin/restart
      ✕ should handle service restart for admin (1 ms)
    POST /live-data/cache/clear
      ✓ should handle cache clearing for admin (5 ms)
    GET /live-data/health
      ✓ should return live data service health (2 ms)

  ● Live Data Routes Unit Tests › GET /live-data/ › should return live data info

    expect(received).toHaveProperty(path)

    Expected path: "status"
    Received path: []

    Received value: {"data": {"authentication": "Required for most endpoints", "endpoints": ["/status - Get live data service status", "/stream/:symbols - Stream real-time data for symbols (requires auth)", "/latest/:symbols - Get latest data for symbols (requires auth)", "/health - Health check endpoint", "/metrics - Performance metrics"], "message": "Live Data API - Ready", "status": "operational", "timestamp": "2025-10-19T11:48:50.817Z"}, "success": true, "timestamp": "2025-10-19T11:48:50.817Z"}

      33 |
      34 |       expect(response.body).toHaveProperty("success");
    > 35 |       expect(response.body).toHaveProperty("status");
         |                             ^
      36 |     });
      37 |   });
      38 |

      at Object.toHaveProperty (tests/unit/routes/liveData.test.js:35:29)

  ● Live Data Routes Unit Tests › GET /live-data/quotes › should return live quotes with proper structure

    expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [401]

      67 |         expect(response.body.data.summary).toHaveProperty("losers");
      68 |       } else {
    > 69 |         expect([401]).toContain(response.status);
         |                       ^
      70 |         expect(response.body).toHaveProperty("success", false);
      71 |       }
      72 |     });

      at Object.toContain (tests/unit/routes/liveData.test.js:69:23)

  ● Live Data Routes Unit Tests › GET /live-data/stream › should setup SSE stream with proper headers

    expect(received).toBe(expected) // Object.is equality

    Expected: "text/event-stream"
    Received: "application/json; charset=utf-8"

      107 |       if (response.status === 200) {
      108 |         // Check SSE headers are set
    > 109 |         expect(response.headers["content-type"]).toBe("text/event-stream");
          |                                                  ^
      110 |         expect(response.headers["cache-control"]).toBe("no-cache");
      111 |         expect(response.headers["connection"]).toBe("keep-alive");
      112 |       } else {

      at Object.toBe (tests/unit/routes/liveData.test.js:109:50)

  ● Live Data Routes Unit Tests › POST /live-data/admin/optimize › should return optimization status

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [401]

      132 |         expect(Array.isArray(response.body.data.optimizations.recommendations)).toBe(true);
      133 |       } else {
    > 134 |         expect([401]).toContain(response.status);
          |                       ^
      135 |       }
      136 |     });
      137 |   });

      at Object.toContain (tests/unit/routes/liveData.test.js:134:23)

  ● Live Data Routes Unit Tests › POST /live-data/admin/restart › should handle service restart for admin

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [401, 403]

      147 |         expect(response.body).toHaveProperty("message");
      148 |       } else {
    > 149 |         expect([401, 403]).toContain(response.status);
          |                            ^
      150 |       }
      151 |     });
      152 |   });

      at Object.toContain (tests/unit/routes/liveData.test.js:149:28)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/calendar HTTP/1.1" 200 120 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/calendar/earnings?start_date=2024-01-01&end_date=2024-01-31 HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/calendar/earnings?symbol=AAPL HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/calendar/earnings?days_ahead=7 HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/calendar/earnings?limit=10 HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/calendar/earnings?symbol=AAPL&days_ahead=30&limit=25 HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/calendar/earnings?symbol=NONEXISTENT&start_date=2050-01-01&end_date=2050-01-02 HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/calendar/earnings?start_date=invalid-date HTTP/1.1" 400 120 "-" "-"
  console.log
    📅 Fetching dividend calendar events

      at log (routes/calendar.js:955:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/calendar/dividends HTTP/1.1" 200 118 "-" "-"
  console.log
    📅 Fetching dividend calendar events

      at log (routes/calendar.js:955:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/calendar/dividends?symbol=AAPL HTTP/1.1" 200 118 "-" "-"
  console.log
    📊 Fetching economic calendar events

      at log (routes/calendar.js:982:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/calendar/economic HTTP/1.1" 200 133 "-" "-"
  console.log
    📊 Fetching economic calendar events

      at log (routes/calendar.js:982:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/calendar/economic?country=US HTTP/1.1" 200 132 "-" "-"
  console.log
    📅 Fetching upcoming calendar events

      at log (routes/calendar.js:1010:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/calendar/upcoming HTTP/1.1" 200 127 "-" "-"
  console.log
    📅 Fetching upcoming calendar events

      at log (routes/calendar.js:1010:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/calendar/upcoming?days=7 HTTP/1.1" 200 126 "-" "-"
  console.log
    📅 Fetching upcoming calendar events

      at log (routes/calendar.js:1010:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/calendar/upcoming?days=14&type=earnings&symbol=AAPL&limit=25 HTTP/1.1" 200 127 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/calendar/health HTTP/1.1" 200 157 "-" "-"
  console.log
    Calendar debug endpoint called

      at log (routes/calendar.js:280:13)

  console.log
    Table exists check: { exists: true }

      at log (routes/calendar.js:292:13)

  console.log
    Total earnings reports: undefined

      at log (routes/calendar.js:298:15)

  console.log
    Sample records: []

      at log (routes/calendar.js:310:15)

  console.error
    Error in calendar debug: TypeError: Cannot read properties of undefined (reading 'total')
        at total (/home/stocks/algo/webapp/lambda/routes/calendar.js:315:52)

      326 |     }
      327 |   } catch (error) {
    > 328 |     console.error("Error in calendar debug:", error);
          |             ^
      329 |     return res.status(500).json({
      330 |       success: false,
      331 |       error: "Debug check failed - database unavailable",

      at error (routes/calendar.js:328:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/calendar/debug HTTP/1.1" 500 174 "-" "-"
  console.log
    Calendar debug endpoint called

      at log (routes/calendar.js:280:13)

  console.log
    Table exists check: { exists: true }

      at log (routes/calendar.js:292:13)

  console.log
    Total earnings reports: undefined

      at log (routes/calendar.js:298:15)

  console.log
    Sample records: []

      at log (routes/calendar.js:310:15)

  console.error
    Error in calendar debug: TypeError: Cannot read properties of undefined (reading 'total')
        at total (/home/stocks/algo/webapp/lambda/routes/calendar.js:315:52)

      326 |     }
      327 |   } catch (error) {
    > 328 |     console.error("Error in calendar debug:", error);
          |             ^
      329 |     return res.status(500).json({
      330 |       success: false,
      331 |       error: "Debug check failed - database unavailable",

      at error (routes/calendar.js:328:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/calendar/debug HTTP/1.1" 500 174 "-" "-"
  console.log
    Calendar test endpoint called

      at log (routes/calendar.js:341:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/calendar/test HTTP/1.1" 404 647 "-" "-"
  console.log
    Calendar events endpoint called with params: {}

      at log (routes/calendar.js:380:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/calendar/events HTTP/1.1" 200 223 "-" "-"
  console.log
    Calendar events endpoint called with params: { page: '2' }

      at log (routes/calendar.js:380:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/calendar/events?page=2 HTTP/1.1" 200 222 "-" "-"
  console.log
    Calendar events endpoint called with params: { limit: '10' }

      at log (routes/calendar.js:380:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/calendar/events?limit=10 HTTP/1.1" 200 223 "-" "-"
  console.log
    Calendar events endpoint called with params: { type: 'upcoming' }

      at log (routes/calendar.js:380:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/calendar/events?type=upcoming HTTP/1.1" 200 223 "-" "-"
  console.error
    Error fetching earnings estimates: TypeError: Cannot read properties of undefined (reading 'total')
        at total (/home/stocks/algo/webapp/lambda/routes/calendar.js:641:48)

      686 |     });
      687 |   } catch (error) {
    > 688 |     console.error("Error fetching earnings estimates:", error);
          |             ^
      689 |     console.error("Error details:", error.message);
      690 |     console.error("Error stack:", error.stack);
      691 |     return res

      at error (routes/calendar.js:688:13)

  console.error
    Error details: Cannot read properties of undefined (reading 'total')

      687 |   } catch (error) {
      688 |     console.error("Error fetching earnings estimates:", error);
    > 689 |     console.error("Error details:", error.message);
          |             ^
      690 |     console.error("Error stack:", error.stack);
      691 |     return res
      692 |       .status(500)

      at error (routes/calendar.js:689:13)

  console.error
    Error stack: TypeError: Cannot read properties of undefined (reading 'total')
        at total (/home/stocks/algo/webapp/lambda/routes/calendar.js:641:48)

      688 |     console.error("Error fetching earnings estimates:", error);
      689 |     console.error("Error details:", error.message);
    > 690 |     console.error("Error stack:", error.stack);
          |             ^
      691 |     return res
      692 |       .status(500)
      693 |       .json({

      at error (routes/calendar.js:690:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/calendar/earnings-estimates HTTP/1.1" 500 128 "-" "-"
  console.error
    Error fetching earnings estimates: TypeError: Cannot read properties of undefined (reading 'total')
        at total (/home/stocks/algo/webapp/lambda/routes/calendar.js:641:48)

      686 |     });
      687 |   } catch (error) {
    > 688 |     console.error("Error fetching earnings estimates:", error);
          |             ^
      689 |     console.error("Error details:", error.message);
      690 |     console.error("Error stack:", error.stack);
      691 |     return res

      at error (routes/calendar.js:688:13)

  console.error
    Error details: Cannot read properties of undefined (reading 'total')

      687 |   } catch (error) {
      688 |     console.error("Error fetching earnings estimates:", error);
    > 689 |     console.error("Error details:", error.message);
          |             ^
      690 |     console.error("Error stack:", error.stack);
      691 |     return res
      692 |       .status(500)

      at error (routes/calendar.js:689:13)

  console.error
    Error stack: TypeError: Cannot read properties of undefined (reading 'total')
        at total (/home/stocks/algo/webapp/lambda/routes/calendar.js:641:48)

      688 |     console.error("Error fetching earnings estimates:", error);
      689 |     console.error("Error details:", error.message);
    > 690 |     console.error("Error stack:", error.stack);
          |             ^
      691 |     return res
      692 |       .status(500)
      693 |       .json({

      at error (routes/calendar.js:690:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/calendar/earnings-estimates?page=1&limit=5 HTTP/1.1" 500 128 "-" "-"
  console.error
    Error fetching earnings history: TypeError: Cannot read properties of undefined (reading 'total')
        at total (/home/stocks/algo/webapp/lambda/routes/calendar.js:754:48)

      802 |     });
      803 |   } catch (error) {
    > 804 |     console.error("Error fetching earnings history:", error);
          |             ^
      805 |     return res
      806 |       .status(500)
      807 |       .json({ success: false, error: "Failed to fetch earnings history" });

      at error (routes/calendar.js:804:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/calendar/earnings-history HTTP/1.1" 500 60 "-" "-"
  console.error
    Error fetching earnings metrics: TypeError: Cannot read properties of undefined (reading 'total')
        at total (/home/stocks/algo/webapp/lambda/routes/calendar.js:893:48)

      931 |     });
      932 |   } catch (error) {
    > 933 |     console.error("Error fetching earnings metrics:", error);
          |             ^
      934 |     res.status(500).json({
      935 |       success: false,
      936 |       error: "Failed to fetch earnings metrics",

      at error (routes/calendar.js:933:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/calendar/earnings-metrics HTTP/1.1" 500 176 "-" "-"
FAIL tests/integration/routes/calendar.integration.test.js
  Calendar Routes
    GET /api/calendar
      ✓ should return calendar endpoints (4 ms)
    GET /api/calendar/earnings
      ✓ should return comprehensive earnings calendar data (2 ms)
      ✓ should handle date range parameters (4 ms)
      ✓ should handle symbol parameter (2 ms)
      ✓ should handle days_ahead parameter (2 ms)
      ✓ should handle limit parameter (3 ms)
      ✓ should handle multiple parameters together (1 ms)
      ✓ should return valid response structure for empty results (1 ms)
      ✓ should handle invalid dates gracefully (1 ms)
    GET /api/calendar/dividends
      ✕ should return dividend calendar data (13 ms)
      ✕ should handle symbol parameter in dividend calendar (3 ms)
    GET /api/calendar/economic
      ✕ should return economic calendar data (2 ms)
      ✓ should handle country parameter in 501 response (2 ms)
    GET /api/calendar/upcoming
      ✓ should return 501 not implemented (2 ms)
      ✓ should handle days parameter in 501 response (2 ms)
      ✓ should handle multiple parameters in 501 response (3 ms)
    GET /api/calendar/health
      ✓ should return health status (2 ms)
    GET /api/calendar/debug
      ✕ should return debug information (10 ms)
      ✓ should include table information when table exists (3 ms)
    GET /api/calendar/test
      ✓ should return test data (3 ms)
    GET /api/calendar/events
      ✓ should handle database errors gracefully (2 ms)
      ✓ should handle page parameter (3 ms)
      ✓ should handle limit parameter (1 ms)
      ✓ should handle type filter parameter (2 ms)
    GET /api/calendar/earnings-estimates
      ✓ should handle database dependencies gracefully (3 ms)
      ✓ should handle pagination parameters (4 ms)
    GET /api/calendar/earnings-history
      ✓ should handle database dependencies gracefully (2 ms)
    GET /api/calendar/earnings-metrics
      ✓ should handle database dependencies gracefully (2 ms)

  ● Calendar Routes › GET /api/calendar/dividends › should return dividend calendar data

    expect(received).toHaveProperty(path)

    Expected path: "dividend_calendar"
    Received path: []

    Received value: []

      172 |
      173 |       expect(response.body.success).toBe(true);
    > 174 |       expect(response.body.data).toHaveProperty("dividend_calendar");
          |                                  ^
      175 |       expect(response.body.data).toHaveProperty("summary");
      176 |       expect(Array.isArray(response.body.data.dividend_calendar)).toBe(true);
      177 |       expect(response.body.data.summary).toHaveProperty("total_events");

      at Object.toHaveProperty (tests/integration/routes/calendar.integration.test.js:174:34)

  ● Calendar Routes › GET /api/calendar/dividends › should handle symbol parameter in dividend calendar

    expect(received).toHaveProperty(path)

    Expected path: "dividend_calendar"
    Received path: []

    Received value: []

      186 |
      187 |       expect(response.body.success).toBe(true);
    > 188 |       expect(response.body.data).toHaveProperty("dividend_calendar");
          |                                  ^
      189 |       expect(response.body.data.filters.symbol).toBe("AAPL");
      190 |     });
      191 |   });

      at Object.toHaveProperty (tests/integration/routes/calendar.integration.test.js:188:34)

  ● Calendar Routes › GET /api/calendar/economic › should return economic calendar data

    expect(received).toHaveProperty(path)

    Expected path: "economic_events"
    Received path: []

    Received value: []

      198 |
      199 |       expect(response.body.success).toBe(true);
    > 200 |       expect(response.body.data).toHaveProperty("economic_events");
          |                                  ^
      201 |       expect(response.body.data).toHaveProperty("summary");
      202 |       expect(Array.isArray(response.body.data.economic_events)).toBe(true);
      203 |       // troubleshooting property is optional

      at Object.toHaveProperty (tests/integration/routes/calendar.integration.test.js:200:34)

  ● Calendar Routes › GET /api/calendar/debug › should return debug information

    expect(received).toHaveProperty(path)

    Expected path: "tableExists"
    Received path: []

    Received value: {"details": "Cannot read properties of undefined (reading 'total')", "error": "Debug check failed - database unavailable", "success": false, "timestamp": "2025-10-19T11:48:51.091Z"}

      273 |
      274 |       expect([200, 400, 404, 500]).toContain(response.status);
    > 275 |       expect(response.body).toHaveProperty("tableExists");
          |                             ^
      276 |       expect(response.body).toHaveProperty("timestamp");
      277 |       expect(typeof response.body.tableExists).toBe("boolean");
      278 |     });

      at Object.toHaveProperty (tests/integration/routes/calendar.integration.test.js:275:29)

  console.log
    🚀 Starting API contract tests against: http://localhost:3001

      at Object.log (tests/contract/api-contracts.test.js:11:13)

  console.log
    🔍 Testing GET /api/health...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/health - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/portfolio...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/portfolio - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/market/overview...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/market/overview - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/diagnostics/database-connectivity...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/diagnostics/database-connectivity - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/health...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/health - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/portfolio...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/portfolio - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/portfolio/positions...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/portfolio/positions - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/portfolio/performance...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/portfolio/performance - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/market/overview...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/market/overview - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/alerts/active...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/alerts/active - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/calendar/earnings...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/calendar/earnings - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/diagnostics...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/diagnostics - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/diagnostics/database-connectivity...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/diagnostics/database-connectivity - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/backtest/strategies...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/backtest/strategies - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/portfolio/holdings...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/portfolio/holdings - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/portfolio/value...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/portfolio/value - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/portfolio/analytics...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/portfolio/analytics - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/portfolio/transactions...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/portfolio/transactions - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/portfolio/summary...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/portfolio/summary - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/portfolio/metrics...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/portfolio/metrics - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/market...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/market - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/stocks...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/stocks - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/technical...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/technical - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/live-data...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/live-data - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/live-data/status...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/live-data/status - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/analytics...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/analytics - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/performance...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/performance - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/risk...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/risk - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/news...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/news - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/signals...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/signals - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/trading...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/trading - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/orders...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/orders - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/watchlist...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/watchlist - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/screener...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/screener - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/scores...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/scores - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/metrics...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/metrics - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/sectors...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/sectors - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/sentiment...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/sentiment - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/etf...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/etf - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/positioning...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/positioning - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/positioning/stocks...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/positioning/stocks - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/positioning/summary...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/positioning/summary - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/positioning/data...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/positioning/data - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    Running comprehensive site functionality tests...

      at Object.log (tests/contract/api-contracts.test.js:55:15)

  console.log
    
    🌐 Running site functionality tests...

      at log (tests/contract/contract-test-runner.js:559:11)

  console.log
    
    📋 Testing workflow: Portfolio Dashboard Load

      at log (tests/contract/contract-test-runner.js:585:13)

  console.log
    🔍 Testing GET /api/health...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/health - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/portfolio...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/portfolio - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/portfolio/positions...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/portfolio/positions - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    ❌ Workflow 'Portfolio Dashboard Load' has failures

      at log (tests/contract/contract-test-runner.js:599:15)

  console.log
    
    📋 Testing workflow: Market Data Access

      at log (tests/contract/contract-test-runner.js:585:13)

  console.log
    🔍 Testing GET /api/market/overview...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/market/overview - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/calendar/earnings...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/calendar/earnings - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    ❌ Workflow 'Market Data Access' has failures

      at log (tests/contract/contract-test-runner.js:599:15)

  console.log
    
    📋 Testing workflow: System Diagnostics

      at log (tests/contract/contract-test-runner.js:585:13)

  console.log
    🔍 Testing GET /api/diagnostics/database-connectivity...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/diagnostics/database-connectivity - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    🔍 Testing GET /api/diagnostics...

      at log (tests/contract/contract-test-runner.js:504:13)

  console.log
    ❌ GET /api/diagnostics - Request failed: connect ECONNREFUSED 127.0.0.1:3001

      at log (tests/contract/contract-test-runner.js:543:13)

  console.log
    ❌ Workflow 'System Diagnostics' has failures

      at log (tests/contract/contract-test-runner.js:599:15)

FAIL tests/contract/api-contracts.test.js
  API Contract Tests
    Critical Endpoints
      ✕ Health endpoint contract (44 ms)
      ✕ Portfolio endpoint contract (6 ms)
      ✕ Market overview endpoint contract (3 ms)
      ✕ Database connectivity contract (2 ms)
    All API Contracts
      ✓ GET /api/health contract validation (2 ms)
      ✓ GET /api/portfolio contract validation (1 ms)
      ✓ GET /api/portfolio/positions contract validation (1 ms)
      ✓ GET /api/portfolio/performance contract validation (2 ms)
      ✓ GET /api/market/overview contract validation (1 ms)
      ✓ GET /api/alerts/active contract validation (2 ms)
      ✓ GET /api/calendar/earnings contract validation (2 ms)
      ✓ GET /api/diagnostics contract validation (2 ms)
      ✓ GET /api/diagnostics/database-connectivity contract validation (1 ms)
      ✓ GET /api/backtest/strategies contract validation (2 ms)
      ✓ GET /api/portfolio/holdings contract validation (4 ms)
      ✓ GET /api/portfolio/value contract validation (2 ms)
      ✓ GET /api/portfolio/analytics contract validation (1 ms)
      ✓ GET /api/portfolio/transactions contract validation (1 ms)
      ✓ GET /api/portfolio/summary contract validation (2 ms)
      ✓ GET /api/portfolio/metrics contract validation (1 ms)
      ✓ GET /api/market contract validation (2 ms)
      ✓ GET /api/stocks contract validation (1 ms)
      ✓ GET /api/technical contract validation (2 ms)
      ✓ GET /api/live-data contract validation (1 ms)
      ✓ GET /api/live-data/status contract validation (2 ms)
      ✓ GET /api/analytics contract validation (2 ms)
      ✓ GET /api/performance contract validation (1 ms)
      ✓ GET /api/risk contract validation (1 ms)
      ✓ GET /api/news contract validation (2 ms)
      ✓ GET /api/signals contract validation (1 ms)
      ✓ GET /api/trading contract validation (2 ms)
      ✓ GET /api/orders contract validation (1 ms)
      ✓ GET /api/watchlist contract validation (2 ms)
      ✓ GET /api/screener contract validation (1 ms)
      ✓ GET /api/scores contract validation (4 ms)
      ✓ GET /api/metrics contract validation (1 ms)
      ✓ GET /api/sectors contract validation (2 ms)
      ✓ GET /api/sentiment contract validation (2 ms)
      ✓ GET /api/etf contract validation (1 ms)
      ✓ GET /api/positioning contract validation (2 ms)
      ✓ GET /api/positioning/stocks contract validation (1 ms)
      ✓ GET /api/positioning/summary contract validation (3 ms)
      ✓ GET /api/positioning/data contract validation (1 ms)
    Site Functionality
      ✓ Complete site functionality validation (12 ms)
  Contract Validation Functions
    ✓ Contract validation logic
    ✕ Contract validation with missing fields

  ● API Contract Tests › Critical Endpoints › Health endpoint contract

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      16 |     test("Health endpoint contract", async () => {
      17 |       const result = await runContractTest("GET /api/health", baseURL);
    > 18 |       expect(result).toBe(true);
         |                      ^
      19 |     });
      20 |
      21 |     test("Portfolio endpoint contract", async () => {

      at Object.toBe (tests/contract/api-contracts.test.js:18:22)

  ● API Contract Tests › Critical Endpoints › Portfolio endpoint contract

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      21 |     test("Portfolio endpoint contract", async () => {
      22 |       const result = await runContractTest("GET /api/portfolio", baseURL);
    > 23 |       expect(result).toBe(true);
         |                      ^
      24 |     });
      25 |
      26 |     test("Market overview endpoint contract", async () => {

      at Object.toBe (tests/contract/api-contracts.test.js:23:22)

  ● API Contract Tests › Critical Endpoints › Market overview endpoint contract

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      26 |     test("Market overview endpoint contract", async () => {
      27 |       const result = await runContractTest("GET /api/market/overview", baseURL);
    > 28 |       expect(result).toBe(true);
         |                      ^
      29 |     });
      30 |
      31 |     test("Database connectivity contract", async () => {

      at Object.toBe (tests/contract/api-contracts.test.js:28:22)

  ● API Contract Tests › Critical Endpoints › Database connectivity contract

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      34 |         baseURL
      35 |       );
    > 36 |       expect(result).toBe(true);
         |                      ^
      37 |     });
      38 |   });
      39 |

      at Object.toBe (tests/contract/api-contracts.test.js:36:22)

  ● Contract Validation Functions › Contract validation with missing fields

    ReferenceError: validateContract is not defined

      92 |     };
      93 |
    > 94 |     const errors = validateContract("GET /api/health", mockResponse);
         |                    ^
      95 |
      96 |     expect(Array.isArray(errors)).toBe(true);
      97 |     expect(errors.length).toBeGreaterThan(0);

      at Object.validateContract (tests/contract/api-contracts.test.js:94:20)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /live-data/stream HTTP/1.1" 200 2297 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /live-data/stream?symbols=AAPL%2CMSFT%2CGOOGL HTTP/1.1" 200 2297 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /live-data/stream?interval=1000 HTTP/1.1" 200 2297 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /live-data/quotes HTTP/1.1" 200 2297 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /live-data/quotes?symbols=AAPL%2CMSFT HTTP/1.1" 200 2297 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /live-data/quotes?limit=5&offset=10 HTTP/1.1" 200 2297 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /live-data/optimization HTTP/1.1" 200 2297 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "POST /live-data/admin/toggle-stream HTTP/1.1" 404 135 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "POST /live-data/admin/clear-cache HTTP/1.1" 404 133 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /live-data/health HTTP/1.1" 200 2297 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /live-data/health HTTP/1.1" 200 2297 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /live-data/quotes?symbols=AAPL&limit=1 HTTP/1.1" 200 2297 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /live-data/stream?symbols=AAPL HTTP/1.1" 200 2297 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /live-data/stream?symbols=MSFT HTTP/1.1" 200 2297 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /live-data/stream?symbols=GOOGL HTTP/1.1" 200 2297 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /live-data/stream?symbols=&interval=-1000 HTTP/1.1" 200 2297 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /live-data/stream?symbols
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /live-data/stream?interval=invalid HTTP/1.1" 200 2297 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /live-data/stream HTTP/1.1" 200 2297 "-" "-"
FAIL tests/integration/streaming/sse-streaming.integration.test.js
  SSE Streaming Integration Tests
    Server-Sent Events Streaming
      ✕ should establish SSE connection for live quotes stream (48 ms)
      ✕ should handle SSE streaming with symbol filters (3 ms)
      ✕ should handle SSE streaming with update interval (2 ms)
    Live Data Quotes API
      ✕ should return live quotes with comprehensive data structure (2 ms)
      ✕ should handle symbol filtering for live quotes (4 ms)
      ✕ should handle pagination for live quotes (2 ms)
    Live Data Administration
      ✕ should provide optimization status (2 ms)
      ✓ should handle stream toggle administration (3 ms)
      ✓ should handle cache clearing administration (1 ms)
    Live Data Service Health
      ✕ should provide comprehensive health status (2 ms)
      ✓ should validate streaming service health metrics (1 ms)
    Real-time Data Consistency
      ✕ should maintain data consistency across SSE and API endpoints (2 ms)
      ✓ should handle concurrent SSE connections (4 ms)
    Error Handling and Edge Cases
      ✓ should handle malformed SSE requests gracefully (5 ms)
      ✕ should handle SSE connection interruptions (2 ms)

  ● SSE Streaming Integration Tests › Server-Sent Events Streaming › should establish SSE connection for live quotes stream

    expect(received).toBe(expected) // Object.is equality

    Expected: "text/event-stream"
    Received: "text/html; charset=UTF-8"

      61 |       if (response.status === 200) {
      62 |         // SSE connection should set proper headers
    > 63 |         expect(response.headers["content-type"]).toBe("text/event-stream");
         |                                                  ^
      64 |         expect(response.headers["cache-control"]).toBe("no-cache");
      65 |         expect(response.headers["connection"]).toBe("keep-alive");
      66 |         expect(response.headers["access-control-allow-origin"]).toBe("*");

      at Object.toBe (tests/integration/streaming/sse-streaming.integration.test.js:63:50)

  ● SSE Streaming Integration Tests › Server-Sent Events Streaming › should handle SSE streaming with symbol filters

    expect(received).toBe(expected) // Object.is equality

    Expected: "text/event-stream"
    Received: "text/html; charset=UTF-8"

      93 |
      94 |       if (response.status === 200) {
    > 95 |         expect(response.headers["content-type"]).toBe("text/event-stream");
         |                                                  ^
      96 |
      97 |         // Should include requested symbols in stream
      98 |         if (response.text) {

      at Object.toBe (tests/integration/streaming/sse-streaming.integration.test.js:95:50)

  ● SSE Streaming Integration Tests › Server-Sent Events Streaming › should handle SSE streaming with update interval

    expect(received).toBe(expected) // Object.is equality

    Expected: "text/event-stream"
    Received: "text/html; charset=UTF-8"

      114 |
      115 |       if (response.status === 200) {
    > 116 |         expect(response.headers["content-type"]).toBe("text/event-stream");
          |                                                  ^
      117 |
      118 |         // Should receive multiple updates
      119 |         if (response.text) {

      at Object.toBe (tests/integration/streaming/sse-streaming.integration.test.js:116:50)

  ● SSE Streaming Integration Tests › Live Data Quotes API › should return live quotes with comprehensive data structure

    expect(received).toHaveProperty(path, value)

    Expected path: "success"
    Received path: []

    Expected value: true
    Received value: {}

      134 |
      135 |       if (response.status === 200) {
    > 136 |         expect(response.body).toHaveProperty("success", true);
          |                               ^
      137 |         expect(response.body).toHaveProperty("data");
      138 |         expect(response.body.data).toHaveProperty("quotes");
      139 |         expect(response.body.data).toHaveProperty("summary");

      at Object.toHaveProperty (tests/integration/streaming/sse-streaming.integration.test.js:136:31)

  ● SSE Streaming Integration Tests › Live Data Quotes API › should handle symbol filtering for live quotes

    TypeError: Cannot read properties of undefined (reading 'quotes')

      178 |
      179 |       if (response.status === 200) {
    > 180 |         expect(response.body.data.quotes.length).toBeLessThanOrEqual(2);
          |                                   ^
      181 |
      182 |         // All returned quotes should be from requested symbols
      183 |         response.body.data.quotes.forEach((quote) => {

      at Object.quotes (tests/integration/streaming/sse-streaming.integration.test.js:180:35)

  ● SSE Streaming Integration Tests › Live Data Quotes API › should handle pagination for live quotes

    TypeError: Cannot read properties of undefined (reading 'quotes')

      194 |
      195 |       if (response.status === 200) {
    > 196 |         expect(response.body.data.quotes.length).toBeLessThanOrEqual(5);
          |                                   ^
      197 |
      198 |         // Should include pagination metadata
      199 |         if (response.body.data.pagination) {

      at Object.quotes (tests/integration/streaming/sse-streaming.integration.test.js:196:35)

  ● SSE Streaming Integration Tests › Live Data Administration › should provide optimization status

    expect(received).toHaveProperty(path, value)

    Expected path: "success"
    Received path: []

    Expected value: true
    Received value: {}

      212 |
      213 |       if (response.status === 200) {
    > 214 |         expect(response.body).toHaveProperty("success", true);
          |                               ^
      215 |         expect(response.body).toHaveProperty("data");
      216 |         expect(response.body.data).toHaveProperty("status");
      217 |         expect(response.body.data).toHaveProperty("metrics");

      at Object.toHaveProperty (tests/integration/streaming/sse-streaming.integration.test.js:214:31)

  ● SSE Streaming Integration Tests › Live Data Service Health › should provide comprehensive health status

    expect(received).toHaveProperty(path, value)

    Expected path: "success"
    Received path: []

    Expected value: true
    Received value: {}

      279 |
      280 |       if (response.status === 200) {
    > 281 |         expect(response.body).toHaveProperty("success", true);
          |                               ^
      282 |         expect(response.body).toHaveProperty("data");
      283 |         expect(response.body.data).toHaveProperty("status");
      284 |         expect(response.body.data).toHaveProperty("uptime");

      at Object.toHaveProperty (tests/integration/streaming/sse-streaming.integration.test.js:281:31)

  ● SSE Streaming Integration Tests › Real-time Data Consistency › should maintain data consistency across SSE and API endpoints

    TypeError: Cannot read properties of undefined (reading 'quotes')

      341 |       if (
      342 |         apiResponse.status === 200 &&
    > 343 |         apiResponse.body.data.quotes.length > 0
          |                               ^
      344 |       ) {
      345 |         const apiQuote = apiResponse.body.data.quotes[0];
      346 |

      at Object.quotes (tests/integration/streaming/sse-streaming.integration.test.js:343:31)

  ● SSE Streaming Integration Tests › Error Handling and Edge Cases › should handle SSE connection interruptions

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      484 |             (code) => error.code === code || error.name === code
      485 |           )
    > 486 |         ).toBe(true);
          |           ^
      487 |       }
      488 |     });
      489 |   });

      at Object.toBe (tests/integration/streaming/sse-streaming.integration.test.js:486:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/market HTTP/1.1" 200 335 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/market/overview?period=1d&includePremarket=true HTTP/1.1" 200 251 "-" "-"
  console.log
    📊 Market data endpoint called

      at log (routes/market.js:78:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/market/data HTTP/1.1" 200 193 "-" "-"
  console.log
    📊 Market data endpoint called

      at log (routes/market.js:78:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/market/data?symbol=AAPL HTTP/1.1" 200 193 "-" "-"
  console.log
    😊 Market sentiment endpoint called

      at log (routes/market.js:2188:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/market/sentiment HTTP/1.1" 404 620 "-" "-"
  console.log
    Sentiment history endpoint called for 30 days

      at log (routes/market.js:1178:11)

  console.log
    Fetching AAII historical data...

      at log (routes/market.js:1252:15)

  console.log
    AAII query returned 0 rows

      at log (routes/market.js:1261:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/market/sentiment/history HTTP/1.1" 200 113 "-" "-"
  console.log
    Sentiment history endpoint called for 30 days

      at log (routes/market.js:1178:11)

  console.log
    Fetching AAII historical data...

      at log (routes/market.js:1252:15)

  console.log
    AAII query returned 0 rows

      at log (routes/market.js:1261:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/market/sentiment/history?days=30 HTTP/1.1" 200 115 "-" "-"
  console.log
    📊 Market movers requested - type: gainers, limit: 10

      at log (routes/market.js:3984:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/market/movers HTTP/1.1" 200 193 "-" "-"
  console.log
    📊 Market movers requested - type: gainers, limit: 10

      at log (routes/market.js:3984:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/market/movers?type=gainers HTTP/1.1" 200 193 "-" "-"
  console.log
    📊 Market indices requested, symbol filter: all

      at log (routes/market.js:6026:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/market/indices HTTP/1.1" 200 90 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/market/status HTTP/1.1" 200 179 "-" "-"
  console.log
    🏢 Market sectors endpoint called (real data from Yahoo Finance)

      at log (routes/market.js:1043:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/market/sectors HTTP/1.1" 503 233 "-" "-"
  console.log
    📊 Distribution Days endpoint called

      at log (routes/market.js:1617:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/market/distribution-days HTTP/1.1" 404 164 "-" "-"
  console.log
    📊 Distribution Days endpoint called

      at log (routes/market.js:1617:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/market/distribution-days HTTP/1.1" 404 164 "-" "-"
  console.log
    📊 Distribution Days endpoint called

      at log (routes/market.js:1617:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/market/distribution-days HTTP/1.1" 404 164 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/market/invalid-endpoint HTTP/1.1" 404 133 "-" "-"
  console.log
    📊 Market data endpoint called

      at log (routes/market.js:78:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/market/data?force_error=true HTTP/1.1" 200 193 "-" "-"
  console.log
    Sentiment history endpoint called for invalid days

      at log (routes/market.js:1178:11)

  console.log
    Fetching AAII historical data...

      at log (routes/market.js:1252:15)

  console.log
    AAII query returned 0 rows

      at log (routes/market.js:1261:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/market/sentiment/history?days=invalid HTTP/1.1" 200 120 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 1ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
FAIL tests/integration/routes/market.integration.test.js
  Market Routes Unit Tests
    GET /api/market
      ✓ should return market endpoint information (3 ms)
    GET /api/market/overview
      ✓ should return market overview data or handle missing data gracefully (5 ms)
      ✓ should handle market overview with parameters (2 ms)
    GET /api/market/data
      ✓ should return market data or handle service unavailable (3 ms)
      ✓ should handle symbol-specific market data (2 ms)
    GET /api/market/sentiment
      ✓ should return market sentiment data or handle missing data (2 ms)
    GET /api/market/sentiment/history
      ✓ should return sentiment history or handle service unavailable (3 ms)
      ✓ should handle sentiment history with time range (2 ms)
    GET /api/market/movers
      ✓ should return top movers or handle missing data (3 ms)
      ✓ should handle movers with type parameter (3 ms)
    GET /api/market/indices
      ✓ should return market indices or handle missing data (2 ms)
    GET /api/market/status
      ✓ should return market status (2 ms)
    GET /api/market/sectors
      ✕ should return sector performance or handle missing data (2 ms)
    GET /api/market/distribution-days
      ✓ should return distribution days data or handle missing data (2 ms)
      ✓ should have correct data structure and IBD methodology (2 ms)
      ✓ should return timestamp in response (2 ms)
    Error Handling
      ✓ should handle invalid endpoints gracefully (2 ms)
      ✓ should handle database connection issues (2 ms)
      ✓ should handle malformed query parameters (4 ms)
    Performance Tests
      ✓ should respond to overview requests within reasonable time (4 ms)
      ✓ should handle concurrent overview requests (13 ms)

  ● Market Routes Unit Tests › GET /api/market/sectors › should return sector performance or handle missing data

    expect(received).toContain(expected) // indexOf

    Expected value: 503
    Received array: [200, 500]

      315 |       const response = await request(app).get("/api/market/sectors");
      316 |
    > 317 |       expect([200, 500]).toContain(response.status);
          |                          ^
      318 |
      319 |       if (response.status === 200) {
      320 |         expect(response.body).toHaveProperty("success", true);

      at Object.toContain (tests/integration/routes/market.integration.test.js:317:26)

  console.log
    💰 Current price requested for AAPL

      at log (routes/price.js:427:13)

  console.log
    ❌ No data found for AAPL in price_daily table

      at log (routes/price.js:469:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/price/AAPL HTTP/1.1" 404 102 "-" "-"
  console.log
    💰 Current price requested for INVALID

      at log (routes/price.js:427:13)

  console.log
    ❌ Invalid symbol format: INVALID

      at log (routes/price.js:457:17)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/price/INVALID HTTP/1.1" 404 131 "-" "-"
  console.log
    📈 Price history requested for AAPL (period: 1Y)

      at log (routes/price.js:520:13)

  console.error
    📊 No historical data found for AAPL

      547 |
      548 |     if (!result || !result.rows || result.rows.length === 0) {
    > 549 |       console.error(
          |               ^
      550 |         `📊 No historical data found for ${symbolUpper}`
      551 |       );
      552 |

      at error (routes/price.js:549:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/price/AAPL/history HTTP/1.1" 404 151 "-" "-"
  console.log
    📈 Price history requested for AAPL (period: 1M)

      at log (routes/price.js:520:13)

  console.error
    📊 No historical data found for AAPL

      547 |
      548 |     if (!result || !result.rows || result.rows.length === 0) {
    > 549 |       console.error(
          |               ^
      550 |         `📊 No historical data found for ${symbolUpper}`
      551 |       );
      552 |

      at error (routes/price.js:549:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/price/AAPL/history?period=1M HTTP/1.1" 404 151 "-" "-"
  console.log
    ⏰ Intraday data requested for AAPL (interval: 5m)

      at log (routes/price.js:590:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/price/AAPL/intraday HTTP/1.1" 404 121 "-" "-"
  console.log
    ⏰ Intraday data requested for AAPL (interval: 5min)

      at log (routes/price.js:590:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/price/AAPL/intraday?interval=5min HTTP/1.1" 404 121 "-" "-"
  console.log
    📊 Batch price request for 3 symbols

      at log (routes/price.js:672:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "POST /api/price/batch HTTP/1.1" 200 472 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "POST /api/price/batch HTTP/1.1" 400 92 "-" "-"
  console.log
    🚨 Price alerts requested - symbol: all, status: all, type: all

      at log (routes/price.js:50:13)

  console.log
    🔔 Querying real price alerts from database

      at log (routes/price.js:106:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/price/alerts HTTP/1.1" 404 184 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "POST /api/price/alerts HTTP/1.1" 400 179 "-" "-"
FAIL tests/integration/routes/price.integration.test.js
  Price Routes
    GET /api/price/:symbol
      ✓ should return current price for symbol (8 ms)
      ✓ should handle invalid symbol (2 ms)
    GET /api/price/:symbol/history
      ✓ should return price history (3 ms)
      ✓ should handle period parameter (2 ms)
    GET /api/price/:symbol/intraday
      ✓ should return intraday prices (3 ms)
      ✓ should handle interval parameter (2 ms)
    POST /api/price/batch
      ✓ should return prices for multiple symbols (7 ms)
      ✓ should validate symbols array (2 ms)
    GET /api/price/alerts
      ✕ should return price alerts (3 ms)
    POST /api/price/alerts
      ✓ should create price alert (2 ms)

  ● Price Routes › GET /api/price/alerts › should return price alerts

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      135 |       const response = await request(app).get("/api/price/alerts");
      136 |
    > 137 |       expect(response.status).toBe(200);
          |                               ^
      138 |
      139 |       if (response.status === 200) {
      140 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/price.integration.test.js:137:31)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/financials HTTP/1.1" 200 831 "-" "-"
  console.log
    💰 [FINANCIALS] Fetching basic financial data for AAPL

      at log (routes/financials.js:1488:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/financials/AAPL HTTP/1.1" 404 67 "-" "-"
  console.log
    💰 [FINANCIALS] Fetching basic financial data for INVALID

      at log (routes/financials.js:1488:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/financials/INVALID HTTP/1.1" 404 70 "-" "-"
  console.log
    💰 [FINANCIALS] Fetching income data for AAPL (test endpoint)

      at log (routes/financials.js:1548:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/financials/AAPL/income HTTP/1.1" 404 64 "-" "-"
  console.log
    💰 [FINANCIALS] Fetching income data for AAPL (test endpoint)

      at log (routes/financials.js:1548:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/financials/AAPL/income?period=annual HTTP/1.1" 404 64 "-" "-"
  console.log
    💰 [FINANCIALS] Fetching balance data for AAPL (test endpoint)

      at log (routes/financials.js:1600:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/financials/AAPL/balance HTTP/1.1" 404 71 "-" "-"
  console.log
    💰 [FINANCIALS] Fetching cash flow for AAPL via /cash endpoint (test compatibility)

      at log (routes/financials.js:1704:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/financials/AAPL/cash HTTP/1.1" 404 67 "-" "-"
  console.log
    💰 [FINANCIALS] Fetching ratios for AAPL (test endpoint)

      at log (routes/financials.js:1898:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/financials/AAPL/ratios HTTP/1.1" 404 69 "-" "-"
  console.log
    📊 Financial metrics requested for AAPL

      at log (routes/financials.js:1983:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/financials/AAPL/metrics HTTP/1.1" 200 157 "-" "-"
  console.log
    📊 Financial growth metrics requested for AAPL

      at log (routes/financials.js:2054:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/financials/AAPL/growth HTTP/1.1" 200 153 "-" "-"
  console.log
    📊 Financial estimates requested for AAPL

      at log (routes/financials.js:2121:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/financials/AAPL/estimates HTTP/1.1" 200 159 "-" "-"
  console.log
    💰 [FINANCIALS] Fetching basic financial data for compare

      at log (routes/financials.js:320:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/financials/compare?symbols=AAPL,MSFT,GOOGL HTTP/1.1" 404 130 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/financials/compare HTTP/1.1" 400 128 "-" "-"
  console.log
    💰 [FINANCIALS] Fetching basic financial data for screener

      at log (routes/financials.js:235:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:51 +0000] "GET /api/financials/screener?pe_max=25&debt_to_equity_max=0.5 HTTP/1.1" 200 117 "-" "-"
FAIL tests/integration/routes/financials.integration.test.js
  Financials Routes
    GET /api/financials
      ✓ should return financials endpoints (3 ms)
    GET /api/financials/:symbol
      ✕ should return financial data for symbol (11 ms)
      ✓ should handle invalid symbol (3 ms)
    GET /api/financials/:symbol/income
      ✕ should return income statement (2 ms)
      ✕ should handle period parameter (2 ms)
    GET /api/financials/:symbol/balance
      ✕ should return balance sheet (2 ms)
    GET /api/financials/:symbol/cash
      ✕ should return cash flow statement (5 ms)
    GET /api/financials/:symbol/ratios
      ✕ should return financial ratios (2 ms)
    GET /api/financials/:symbol/metrics
      ✓ should return key financial metrics (3 ms)
    GET /api/financials/:symbol/growth
      ✓ should return growth metrics (2 ms)
    GET /api/financials/:symbol/estimates
      ✓ should return analyst estimates (2 ms)
    GET /api/financials/compare
      ✕ should compare multiple companies (2 ms)
      ✓ should require symbols parameter (1 ms)
    GET /api/financials/screener
      ✓ should screen stocks by financial criteria (2 ms)

  ● Financials Routes › GET /api/financials/:symbol › should return financial data for symbol

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      58 |       const response = await request(app).get("/api/financials/AAPL");
      59 |
    > 60 |       expect(response.status).toBe(200);
         |                               ^
      61 |       expect(response.body.success).toBe(true);
      62 |       expect(response.body.data).toHaveProperty("symbol");
      63 |       expect(response.body.data).toHaveProperty("financials");

      at Object.toBe (tests/integration/routes/financials.integration.test.js:60:31)

  ● Financials Routes › GET /api/financials/:symbol/income › should return income statement

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      75 |       const response = await request(app).get("/api/financials/AAPL/income");
      76 |
    > 77 |       expect(response.status).toBe(200);
         |                               ^
      78 |       expect(response.body.success).toBe(true);
      79 |       expect(response.body.data).toHaveProperty("income_statement");
      80 |     });

      at Object.toBe (tests/integration/routes/financials.integration.test.js:77:31)

  ● Financials Routes › GET /api/financials/:symbol/income › should handle period parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      85 |       );
      86 |
    > 87 |       expect(response.status).toBe(200);
         |                               ^
      88 |       expect(response.body.success).toBe(true);
      89 |     });
      90 |   });

      at Object.toBe (tests/integration/routes/financials.integration.test.js:87:31)

  ● Financials Routes › GET /api/financials/:symbol/balance › should return balance sheet

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      94 |       const response = await request(app).get("/api/financials/AAPL/balance");
      95 |
    > 96 |       expect(response.status).toBe(200);
         |                               ^
      97 |       expect(response.body.success).toBe(true);
      98 |       expect(response.body.data).toHaveProperty("balance_sheet");
      99 |     });

      at Object.toBe (tests/integration/routes/financials.integration.test.js:96:31)

  ● Financials Routes › GET /api/financials/:symbol/cash › should return cash flow statement

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      104 |       const response = await request(app).get("/api/financials/AAPL/cash");
      105 |
    > 106 |       expect(response.status).toBe(200);
          |                               ^
      107 |       expect(response.body.success).toBe(true);
      108 |       expect(response.body.data).toHaveProperty("cash_flow");
      109 |     });

      at Object.toBe (tests/integration/routes/financials.integration.test.js:106:31)

  ● Financials Routes › GET /api/financials/:symbol/ratios › should return financial ratios

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      114 |       const response = await request(app).get("/api/financials/AAPL/ratios");
      115 |
    > 116 |       expect(response.status).toBe(200);
          |                               ^
      117 |       expect(response.body.success).toBe(true);
      118 |       expect(response.body.data).toHaveProperty("ratios");
      119 |

      at Object.toBe (tests/integration/routes/financials.integration.test.js:116:31)

  ● Financials Routes › GET /api/financials/compare › should compare multiple companies

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      161 |       );
      162 |
    > 163 |       expect(response.status).toBe(200);
          |                               ^
      164 |       expect(response.body.success).toBe(true);
      165 |       expect(Array.isArray(response.body.data)).toBe(true);
      166 |     });

      at Object.toBe (tests/integration/routes/financials.integration.test.js:163:31)

  console.log
    📊 Financial statements requested - symbol: AAPL, period: annual, type: income

      at log (routes/financials.js:70:13)

  console.log
    📊 Financial statements requested - symbol: required, period: annual, type: all

      at log (routes/financials.js:70:13)

  console.log
    📊 Financial statements requested - symbol: AAPL, period: annual, type: all

      at log (routes/financials.js:70:13)

  console.log
    📊 Financial statements requested - symbol: AAPL, period: quarterly, type: all

      at log (routes/financials.js:70:13)

  console.log
    📊 Financial statements requested - symbol: AAPL, period: annual, type: balance

      at log (routes/financials.js:70:13)

  console.log
    📊 Financial statements requested - symbol: INVALID, period: annual, type: all

      at log (routes/financials.js:70:13)

  console.log
    📊 Financial statements requested - symbol: AAPL, period: annual, type: all

      at log (routes/financials.js:70:13)

  console.warn
    Balance sheet data not available for AAPL: Database connection failed

      125 |         statements.balance_sheet = balanceResult.rows || [];
      126 |       } catch (e) {
    > 127 |         console.warn(`Balance sheet data not available for ${symbol}:`, e.message);
          |                 ^
      128 |         statements.balance_sheet = [];
      129 |       }
      130 |     }

      at warn (routes/financials.js:127:17)

  console.warn
    Income statement data not available for AAPL: Database connection failed

      145 |         statements.income_statement = incomeResult.rows || [];
      146 |       } catch (e) {
    > 147 |         console.warn(`Income statement data not available for ${symbol}:`, e.message);
          |                 ^
      148 |         statements.income_statement = [];
      149 |       }
      150 |     }

      at warn (routes/financials.js:147:17)

  console.warn
    Cash flow data not available for AAPL: Database connection failed

      165 |         statements.cash_flow = cashflowResult.rows || [];
      166 |       } catch (e) {
    > 167 |         console.warn(`Cash flow data not available for ${symbol}:`, e.message);
          |                 ^
      168 |         statements.cash_flow = [];
      169 |       }
      170 |     }

      at warn (routes/financials.js:167:17)

  console.log
    💰 [FINANCIALS] Fetching basic financial data for AAPL

      at log (routes/financials.js:1488:11)

  console.log
    💰 [FINANCIALS] Fetching basic financial data for aapl

      at log (routes/financials.js:1488:11)

  console.log
    💰 [FINANCIALS] Fetching basic financial data for INVALID

      at log (routes/financials.js:1488:11)

  console.log
    💰 [FINANCIALS] Fetching ratios for GOOGL (test endpoint)

      at log (routes/financials.js:1898:11)

  console.log
    📊 [FINANCIALS] Fetching earnings data for MSFT

      at log (routes/financials.js:2467:11)

  console.log
    📊 [FINANCIALS] Fetching earnings data for AAPL

      at log (routes/financials.js:2467:11)

  console.log
    📊 [FINANCIALS] Earnings history table not available for AAPL

      at log (routes/financials.js:2496:15)

  console.log
    Financials debug endpoint called

      at log (routes/financials.js:615:13)

  console.log
    Financials debug endpoint called

      at log (routes/financials.js:615:13)

  console.log
    📊 Financial statements requested - symbol: AAPL'; DROP TABLE financial_statements; --, period: annual, type: all

      at log (routes/financials.js:70:13)

  console.warn
    Income statement data not available for AAPL'; DROP TABLE financial_statements; --: Debug query failed

      145 |         statements.income_statement = incomeResult.rows || [];
      146 |       } catch (e) {
    > 147 |         console.warn(`Income statement data not available for ${symbol}:`, e.message);
          |                 ^
      148 |         statements.income_statement = [];
      149 |       }
      150 |     }

      at warn (routes/financials.js:147:17)

  console.warn
    Cash flow data not available for AAPL'; DROP TABLE financial_statements; --: Debug query failed

      165 |         statements.cash_flow = cashflowResult.rows || [];
      166 |       } catch (e) {
    > 167 |         console.warn(`Cash flow data not available for ${symbol}:`, e.message);
          |                 ^
      168 |         statements.cash_flow = [];
      169 |       }
      170 |     }

      at warn (routes/financials.js:167:17)

  console.log
    💰 [FINANCIALS] Fetching basic financial data for invalid-symbol-format!@

      at log (routes/financials.js:1488:11)

  console.log
    📊 Financial statements requested - symbol: AAPL, period: invalid_period, type: all

      at log (routes/financials.js:70:13)

  console.log
    📊 Financial statements requested - symbol: AAPL, period: annual, type: invalid_type

      at log (routes/financials.js:70:13)

  console.log
    💰 [FINANCIALS] Fetching basic financial data for AAPL

      at log (routes/financials.js:1488:11)

  console.log
    💰 [FINANCIALS] Fetching basic financial data for AAPL

      at log (routes/financials.js:1488:11)

  console.log
    📊 Key metrics request for AAPL

      at log (routes/financials.js:2198:13)

  console.error
    Key metrics fetch error: Query timeout

      2361 |
      2362 |   } catch (error) {
    > 2363 |     console.error("Key metrics fetch error:", error.message);
           |             ^
      2364 |     res.status(500).json({
      2365 |       success: false,
      2366 |       error: "Failed to fetch key metrics data",

      at error (routes/financials.js:2363:13)

  console.log
    📊 Key metrics request for MSFT

      at log (routes/financials.js:2198:13)

  console.error
    Key metrics fetch error: Cannot read properties of null (reading 'rows')

      2361 |
      2362 |   } catch (error) {
    > 2363 |     console.error("Key metrics fetch error:", error.message);
           |             ^
      2364 |     res.status(500).json({
      2365 |       success: false,
      2366 |       error: "Failed to fetch key metrics data",

      at error (routes/financials.js:2363:13)

  console.log
    📊 Key metrics request for GOOGL

      at log (routes/financials.js:2198:13)

  console.log
    📊 Financial statements requested - symbol: AAPL, period: annual, type: all

      at log (routes/financials.js:70:13)

  console.warn
    Income statement data not available for AAPL: Database connection failed

      145 |         statements.income_statement = incomeResult.rows || [];
      146 |       } catch (e) {
    > 147 |         console.warn(`Income statement data not available for ${symbol}:`, e.message);
          |                 ^
      148 |         statements.income_statement = [];
      149 |       }
      150 |     }

      at warn (routes/financials.js:147:17)

FAIL tests/unit/routes/financials.test.js
  Financials Routes Unit Tests
    GET /financials
      ✓ should return financials API overview (4 ms)
    GET /financials/ping
      ✓ should return ping response (1 ms)
    GET /financials/statements
      ✓ should return financial statements with valid parameters (9 ms)
      ✓ should require symbol parameter (3 ms)
      ✓ should handle default parameters (2 ms)
      ✓ should handle quarterly period (2 ms)
      ✓ should filter by statement type (2 ms)
      ✓ should handle empty results (3 ms)
      ✓ should handle database errors (4 ms)
    GET /financials/:symbol
      ✓ should return basic financial overview (3 ms)
      ✓ should handle lowercase symbol conversion (2 ms)
      ✓ should handle symbol not found (3 ms)
    GET /financials/:symbol/ratios
      ✓ should return financial ratios (5 ms)
    GET /financials/earnings/:symbol
      ✓ should return earnings history (3 ms)
      ✓ should handle earnings when no data found (2 ms)
    GET /financials/debug/tables
      ✓ should return table structure information (2 ms)
      ✓ should handle debug query errors (2 ms)
    Parameter validation
      ✓ should sanitize symbol parameter (3 ms)
      ✓ should handle invalid symbol format (2 ms)
      ✓ should validate period parameter (2 ms)
      ✓ should validate type parameter (2 ms)
    Error handling
      ✓ should handle database connection errors gracefully (2 ms)
      ✓ should handle malformed database results gracefully (2 ms)
    GET /financials/:ticker/key-metrics
      ✕ should return key metrics data with proper structure (3 ms)
      ✕ should handle missing key metrics data (3 ms)
      ✕ should handle database errors gracefully (4 ms)
    Response format
      ✓ should return consistent JSON response format (1 ms)
      ✓ should include metadata in financial responses (2 ms)

  ● Financials Routes Unit Tests › GET /financials/:ticker/key-metrics › should return key metrics data with proper structure

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      475 |       mockQuery.mockResolvedValueOnce(mockKeyMetricsData);
      476 |       const response = await request(app).get("/financials/AAPL/key-metrics");
    > 477 |       expect(response.status).toBe(200);
          |                               ^
      478 |       expect(response.body).toHaveProperty("success", true);
      479 |       expect(response.body).toHaveProperty("data");
      480 |       expect(response.body).toHaveProperty("metadata");

      at Object.toBe (tests/unit/routes/financials.test.js:477:31)

  ● Financials Routes Unit Tests › GET /financials/:ticker/key-metrics › should handle missing key metrics data

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      508 |       mockQuery.mockResolvedValueOnce({ rows: [] });
      509 |       const response = await request(app).get("/financials/MSFT/key-metrics");
    > 510 |       expect(response.status).toBe(200);
          |                               ^
      511 |       expect(response.body).toHaveProperty("success", false);
      512 |       expect(response.body).toHaveProperty("error", "No key metrics data found");
      513 |       expect(response.body).toHaveProperty("data", null);

      at Object.toBe (tests/unit/routes/financials.test.js:510:31)

  ● Financials Routes Unit Tests › GET /financials/:ticker/key-metrics › should handle database errors gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      517 |       mockQuery.mockRejectedValueOnce(new Error("Database connection failed"));
      518 |       const response = await request(app).get("/financials/GOOGL/key-metrics");
    > 519 |       expect(response.status).toBe(500);
          |                               ^
      520 |       expect(response.body).toHaveProperty("success", false);
      521 |       expect(response.body).toHaveProperty("error", "Failed to fetch key metrics data");
      522 |       expect(response.body).toHaveProperty("message", "Database connection failed");

      at Object.toBe (tests/unit/routes/financials.test.js:519:31)

  console.log
    Initializing database connection...

      at log (index.js:395:13)

  console.error
    Error fetching earnings history: TypeError: Cannot read properties of undefined (reading 'total')
        at total (/home/stocks/algo/webapp/lambda/routes/calendar.js:754:48)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)

      802 |     });
      803 |   } catch (error) {
    > 804 |     console.error("Error fetching earnings history:", error);
          |             ^
      805 |     return res
      806 |       .status(500)
      807 |       .json({ success: false, error: "Failed to fetch earnings history" });

      at error (routes/calendar.js:804:13)

  console.error
    Error fetching earnings estimates: TypeError: Cannot read properties of undefined (reading 'total')
        at total (/home/stocks/algo/webapp/lambda/routes/calendar.js:641:48)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)

      686 |     });
      687 |   } catch (error) {
    > 688 |     console.error("Error fetching earnings estimates:", error);
          |             ^
      689 |     console.error("Error details:", error.message);
      690 |     console.error("Error stack:", error.stack);
      691 |     return res

      at error (routes/calendar.js:688:13)

  console.error
    Error details: Cannot read properties of undefined (reading 'total')

      687 |   } catch (error) {
      688 |     console.error("Error fetching earnings estimates:", error);
    > 689 |     console.error("Error details:", error.message);
          |             ^
      690 |     console.error("Error stack:", error.stack);
      691 |     return res
      692 |       .status(500)

      at error (routes/calendar.js:689:13)

  console.error
    Error stack: TypeError: Cannot read properties of undefined (reading 'total')
        at total (/home/stocks/algo/webapp/lambda/routes/calendar.js:641:48)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)

      688 |     console.error("Error fetching earnings estimates:", error);
      689 |     console.error("Error details:", error.message);
    > 690 |     console.error("Error stack:", error.stack);
          |             ^
      691 |     return res
      692 |       .status(500)
      693 |       .json({

      at error (routes/calendar.js:690:13)

FAIL tests/integration/routes/earnings.integration.test.js
  Earnings Data Integration
    Earnings Calendar (Using Loader Schema)
      ✓ should return earnings data using loader table schemas (5 ms)
      ✓ should delegate symbol-specific requests to calendar (2 ms)
      ✓ should handle query parameters for delegation (2 ms)
    Direct Calendar Earnings Access
      ✓ should access earnings via calendar route directly (1 ms)
      ✕ should access earnings history via calendar route (10 ms)
      ✕ should access earnings estimates via calendar route (2 ms)
    Error Handling
      ✓ should handle delegation errors gracefully (1 ms)

  ● Earnings Data Integration › Direct Calendar Earnings Access › should access earnings history via calendar route

    expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [200, 404, 501]

      115 |       const response = await request(app).get("/api/calendar/earnings-history");
      116 |
    > 117 |       expect([200, 404, 501]).toContain(response.status);
          |                               ^
      118 |
      119 |       if (response.status === 200) {
      120 |         // Should have earnings history data structure

      at Object.toContain (tests/integration/routes/earnings.integration.test.js:117:31)

  ● Earnings Data Integration › Direct Calendar Earnings Access › should access earnings estimates via calendar route

    expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [200, 404, 501]

      132 |       );
      133 |
    > 134 |       expect([200, 404, 501]).toContain(response.status);
          |                               ^
      135 |
      136 |       if (response.status === 200) {
      137 |         // Should have earnings estimates data structure

      at Object.toContain (tests/integration/routes/earnings.integration.test.js:134:31)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/screener HTTP/1.1" 200 447 "-" "-"
  console.log
    Stock screening with filters: { market_cap_min: '1000000000' }

      at log (routes/screener.js:127:13)

  console.log
    Executing screener queries with params: 2 parameters

      at log (routes/screener.js:422:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/screener/screen?market_cap_min=1000000000 HTTP/1.1" 200 152 "-" "-"
  console.log
    Stock screening with filters: { market_cap_min: '1000000000', pe_max: '25', volume_min: '1000000' }

      at log (routes/screener.js:127:13)

  console.log
    Executing screener queries with params: 2 parameters

      at log (routes/screener.js:422:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/screener/screen?market_cap_min=1000000000&pe_max=25&volume_min=1000000 HTTP/1.1" 200 152 "-" "-"
  console.log
    Stock screening with filters: { sector: 'Technology' }

      at log (routes/screener.js:127:13)

  console.log
    Executing screener queries with params: 3 parameters

      at log (routes/screener.js:422:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/screener/screen?sector=Technology HTTP/1.1" 200 152 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/screener/presets HTTP/1.1" 200 1324 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/screener/presets/growth HTTP/1.1" 200 217 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/screener/growth HTTP/1.1" 200 351 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/screener/growth?timeframe=1M HTTP/1.1" 200 351 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/screener/value HTTP/1.1" 200 342 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/screener/growth HTTP/1.1" 200 351 "-" "-"
  console.log
    Screening dividend stocks with min yield: 2%

      at log (routes/screener.js:52:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/screener/dividend HTTP/1.1" 200 1247 "-" "-"
  console.log
    Screening dividend stocks with min yield: 3%

      at log (routes/screener.js:52:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/screener/dividend?min_yield=3 HTTP/1.1" 200 595 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/screener/technical?rsi_min=30&rsi_max=70 HTTP/1.1" 404 150 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "POST /api/screener/custom HTTP/1.1" 400 109 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "POST /api/screener/custom HTTP/1.1" 400 109 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/screener/backtest?strategy=momentum&start_date=2023-01-01 HTTP/1.1" 404 167 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/screener/backtest HTTP/1.1" 404 127 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/screener/export?market_cap_min=1000000000&format=csv HTTP/1.1" 404 162 "-" "-"
FAIL tests/integration/routes/screener.integration.test.js
  Screener Routes
    GET /api/screener
      ✓ should return screener endpoints (7 ms)
    GET /api/screener/screen
      ✓ should screen stocks with basic criteria (12 ms)
      ✓ should handle multiple criteria (3 ms)
      ✓ should handle sector filter (2 ms)
    GET /api/screener/presets
      ✓ should return screening presets (2 ms)
    GET /api/screener/presets/:presetName
      ✓ should return specific preset (2 ms)
    GET /api/screener/growth
      ✓ should return growth stocks (1 ms)
      ✓ should handle timeframe parameter (2 ms)
      ✓ should return growth stocks (2 ms)
    GET /api/screener/value
      ✓ should return value stocks (1 ms)
    GET /api/screener/dividend
      ✓ should return dividend stocks (2 ms)
      ✓ should handle minimum yield parameter (5 ms)
    GET /api/screener/technical
      ✓ should return error for non-existent technical endpoint (2 ms)
    POST /api/screener/custom
      ✕ should create custom screen (4 ms)
      ✓ should validate criteria (1 ms)
    GET /api/screener/backtest
      ✓ should return error for non-existent backtest endpoint (1 ms)
      ✓ should return error for backtest without parameters (1 ms)
    GET /api/screener/export
      ✓ should return error for non-existent export endpoint (2 ms)

  ● Screener Routes › POST /api/screener/custom › should create custom screen

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [200, 201, 401, 422]

      213 |         .send(screenData);
      214 |
    > 215 |       expect([200, 201, 401, 422]).toContain(response.status);
          |                                    ^
      216 |
      217 |       if (response.status === 200 || response.status === 201) {
      218 |         expect(response.body.success).toBe(true);

      at Object.toContain (tests/integration/routes/screener.integration.test.js:215:36)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/health?quick=true HTTP/1.1" 200 431 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "-"
  console.log
    Received request for /health/database

      at log (routes/health.js:527:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/health/database HTTP/1.1" 200 593 "-" "-"
  console.log
    Received request for /health/database

      at log (routes/health.js:527:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/health/database HTTP/1.1" 200 593 "-" "-"
  console.error
    Error testing database connection: TypeError: Cannot read properties of undefined (reading 'current_time')
        at current_time (/home/stocks/algo/webapp/lambda/routes/health.js:687:35)

      689 |     });
      690 |   } catch (error) {
    > 691 |     console.error("Error testing database connection:", error);
          |             ^
      692 |     return res.status(500).json({
      693 |       connection: "failed",
      694 |       error: error.message,

      at error (routes/health.js:691:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/health/test-connection HTTP/1.1" 500 94 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/health/debug-secret HTTP/1.1" 200 392 "-" "-"
  console.log
    Received request for /health/database/diagnostics

      at log (routes/health.js:789:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/health/database/diagnostics HTTP/1.1" 200 1083 "-" "-"
  console.log
    Received request for /health/database/diagnostics

      at log (routes/health.js:789:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/health/database/diagnostics HTTP/1.1" 200 1083 "-" "-"
  console.log
    Received request for /health/database/diagnostics

      at log (routes/health.js:789:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/health/database/diagnostics HTTP/1.1" 200 1083 "-" "-"
  console.log
    Received request for /health/database/diagnostics

      at log (routes/health.js:789:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/health/database/diagnostics HTTP/1.1" 200 1083 "-" "-"
FAIL tests/integration/routes/health.integration.test.js
  Health Routes
    GET /api/health
      ✓ should return quick health check (7 ms)
      ✕ should return full health check with database (3 ms)
      ✓ should handle test environment correctly (3 ms)
    GET /api/health/database
      ✕ should return comprehensive database health (6 ms)
      ✕ should provide table summary statistics (3 ms)
    GET /api/health/test-connection
      ✕ should test database connection (9 ms)
    GET /api/health/debug-secret
      ✓ should handle debug secret endpoint (2 ms)
    GET /api/health/database/diagnostics
      ✓ should provide comprehensive database diagnostics (3 ms)
      ✓ should include performance metrics (2 ms)
      ✓ should provide actionable recommendations (3 ms)
      ✓ should handle database table errors gracefully (1 ms)

  ● Health Routes › GET /api/health › should return full health check with database

    expect(received).toBe(expected) // Object.is equality

    Expected: "healthy"
    Received: "unhealthy"

      67 |
      68 |       if (response.status === 200) {
    > 69 |         expect(response.body.status).toBe("healthy");
         |                                      ^
      70 |         expect(response.body.healthy).toBe(true);
      71 |         expect(response.body.service).toBe("Financial Dashboard API");
      72 |         expect(response.body).toHaveProperty("timestamp");

      at Object.toBe (tests/integration/routes/health.integration.test.js:69:38)

  ● Health Routes › GET /api/health/database › should return comprehensive database health

    expect(received).toHaveProperty(path)

    Expected path: "total_tables"
    Received path: []

    Received value: {"empty_tables": 1, "error_tables": 0, "healthy_tables": 0, "missing_tables": 0, "stale_tables": 0, "total_missing_data": 0, "total_records": 0}

      113 |         expect(response.body.database).toHaveProperty("tables");
      114 |         expect(response.body.database).toHaveProperty("summary");
    > 115 |         expect(response.body.database.summary).toHaveProperty("total_tables");
          |                                                ^
      116 |         expect(response.body.database.summary).toHaveProperty("healthy_tables");
      117 |         expect(response.body.database.summary).toHaveProperty("total_records");
      118 |       } else {

      at Object.toHaveProperty (tests/integration/routes/health.integration.test.js:115:48)

  ● Health Routes › GET /api/health/database › should provide table summary statistics

    expect(received).toBe(expected) // Object.is equality

    Expected: "number"
    Received: "undefined"

      127 |       if (response.status === 200) {
      128 |         const summary = response.body.database.summary;
    > 129 |         expect(typeof summary.total_tables).toBe("number");
          |                                             ^
      130 |         expect(typeof summary.healthy_tables).toBe("number");
      131 |         expect(typeof summary.empty_tables).toBe("number");
      132 |         expect(typeof summary.error_tables).toBe("number");

      at Object.toBe (tests/integration/routes/health.integration.test.js:129:45)

  ● Health Routes › GET /api/health/test-connection › should test database connection

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      143 |       const response = await request(app).get("/api/health/test-connection");
      144 |
    > 145 |       expect(response.status).toBe(200);
          |                               ^
      146 |
      147 |       if (response.status === 200) {
      148 |         expect(response.body.status).toBe("ok");

      at Object.toBe (tests/integration/routes/health.integration.test.js:145:31)

FAIL tests/performance/api-load-testing.test.js
  API Load Testing and Performance
    Concurrent Request Handling
      ✕ should handle multiple concurrent health check requests
      ✕ should handle concurrent authenticated requests
      ✕ should maintain performance under database load
    Response Time Benchmarks
      ✕ health endpoint should respond quickly (1 ms)
      ✕ stock data endpoints should meet performance targets
      ✕ should maintain performance with large response payloads
    Rate Limiting and Throttling
      ✕ should handle rapid successive requests appropriately
      ✕ should recover from rate limiting gracefully
    Memory and Resource Usage
      ✕ should maintain stable memory usage under load
      ✕ should handle connection cleanup properly
    Database Performance Under Load
      ✕ should handle concurrent database queries efficiently
      ✕ should maintain query performance with data growth
    Error Handling Performance
      ✕ should handle errors efficiently without performance degradation
      ✕ should handle authentication errors efficiently
    Performance Monitoring and Metrics
      ✕ should track response time metrics
      ✕ should maintain consistent performance across test run

  ● API Load Testing and Performance › Concurrent Request Handling › should handle multiple concurrent health check requests

    ReferenceError: query is not defined

      13 |   beforeAll(async () => {
      14 |     // Setup test data for load testing using actual schema
    > 15 |     await query(`
         |     ^
      16 |       INSERT INTO price_daily (symbol, date, open, high, low, close, adj_close, volume)
      17 |       VALUES
      18 |         ('AAPL', '2024-01-15', 188.0, 190.0, 187.5, 189.45, 189.45, 45000000),

      at Object.<anonymous> (tests/performance/api-load-testing.test.js:15:5)

  ● API Load Testing and Performance › Concurrent Request Handling › should handle concurrent authenticated requests

    ReferenceError: query is not defined

      13 |   beforeAll(async () => {
      14 |     // Setup test data for load testing using actual schema
    > 15 |     await query(`
         |     ^
      16 |       INSERT INTO price_daily (symbol, date, open, high, low, close, adj_close, volume)
      17 |       VALUES
      18 |         ('AAPL', '2024-01-15', 188.0, 190.0, 187.5, 189.45, 189.45, 45000000),

      at Object.<anonymous> (tests/performance/api-load-testing.test.js:15:5)

  ● API Load Testing and Performance › Concurrent Request Handling › should maintain performance under database load

    ReferenceError: query is not defined

      13 |   beforeAll(async () => {
      14 |     // Setup test data for load testing using actual schema
    > 15 |     await query(`
         |     ^
      16 |       INSERT INTO price_daily (symbol, date, open, high, low, close, adj_close, volume)
      17 |       VALUES
      18 |         ('AAPL', '2024-01-15', 188.0, 190.0, 187.5, 189.45, 189.45, 45000000),

      at Object.<anonymous> (tests/performance/api-load-testing.test.js:15:5)

  ● API Load Testing and Performance › Response Time Benchmarks › health endpoint should respond quickly

    ReferenceError: query is not defined

      13 |   beforeAll(async () => {
      14 |     // Setup test data for load testing using actual schema
    > 15 |     await query(`
         |     ^
      16 |       INSERT INTO price_daily (symbol, date, open, high, low, close, adj_close, volume)
      17 |       VALUES
      18 |         ('AAPL', '2024-01-15', 188.0, 190.0, 187.5, 189.45, 189.45, 45000000),

      at Object.<anonymous> (tests/performance/api-load-testing.test.js:15:5)

  ● API Load Testing and Performance › Response Time Benchmarks › stock data endpoints should meet performance targets

    ReferenceError: query is not defined

      13 |   beforeAll(async () => {
      14 |     // Setup test data for load testing using actual schema
    > 15 |     await query(`
         |     ^
      16 |       INSERT INTO price_daily (symbol, date, open, high, low, close, adj_close, volume)
      17 |       VALUES
      18 |         ('AAPL', '2024-01-15', 188.0, 190.0, 187.5, 189.45, 189.45, 45000000),

      at Object.<anonymous> (tests/performance/api-load-testing.test.js:15:5)

  ● API Load Testing and Performance › Response Time Benchmarks › should maintain performance with large response payloads

    ReferenceError: query is not defined

      13 |   beforeAll(async () => {
      14 |     // Setup test data for load testing using actual schema
    > 15 |     await query(`
         |     ^
      16 |       INSERT INTO price_daily (symbol, date, open, high, low, close, adj_close, volume)
      17 |       VALUES
      18 |         ('AAPL', '2024-01-15', 188.0, 190.0, 187.5, 189.45, 189.45, 45000000),

      at Object.<anonymous> (tests/performance/api-load-testing.test.js:15:5)

  ● API Load Testing and Performance › Rate Limiting and Throttling › should handle rapid successive requests appropriately

    ReferenceError: query is not defined

      13 |   beforeAll(async () => {
      14 |     // Setup test data for load testing using actual schema
    > 15 |     await query(`
         |     ^
      16 |       INSERT INTO price_daily (symbol, date, open, high, low, close, adj_close, volume)
      17 |       VALUES
      18 |         ('AAPL', '2024-01-15', 188.0, 190.0, 187.5, 189.45, 189.45, 45000000),

      at Object.<anonymous> (tests/performance/api-load-testing.test.js:15:5)

  ● API Load Testing and Performance › Rate Limiting and Throttling › should recover from rate limiting gracefully

    ReferenceError: query is not defined

      13 |   beforeAll(async () => {
      14 |     // Setup test data for load testing using actual schema
    > 15 |     await query(`
         |     ^
      16 |       INSERT INTO price_daily (symbol, date, open, high, low, close, adj_close, volume)
      17 |       VALUES
      18 |         ('AAPL', '2024-01-15', 188.0, 190.0, 187.5, 189.45, 189.45, 45000000),

      at Object.<anonymous> (tests/performance/api-load-testing.test.js:15:5)

  ● API Load Testing and Performance › Memory and Resource Usage › should maintain stable memory usage under load

    ReferenceError: query is not defined

      13 |   beforeAll(async () => {
      14 |     // Setup test data for load testing using actual schema
    > 15 |     await query(`
         |     ^
      16 |       INSERT INTO price_daily (symbol, date, open, high, low, close, adj_close, volume)
      17 |       VALUES
      18 |         ('AAPL', '2024-01-15', 188.0, 190.0, 187.5, 189.45, 189.45, 45000000),

      at Object.<anonymous> (tests/performance/api-load-testing.test.js:15:5)

  ● API Load Testing and Performance › Memory and Resource Usage › should handle connection cleanup properly

    ReferenceError: query is not defined

      13 |   beforeAll(async () => {
      14 |     // Setup test data for load testing using actual schema
    > 15 |     await query(`
         |     ^
      16 |       INSERT INTO price_daily (symbol, date, open, high, low, close, adj_close, volume)
      17 |       VALUES
      18 |         ('AAPL', '2024-01-15', 188.0, 190.0, 187.5, 189.45, 189.45, 45000000),

      at Object.<anonymous> (tests/performance/api-load-testing.test.js:15:5)

  ● API Load Testing and Performance › Database Performance Under Load › should handle concurrent database queries efficiently

    ReferenceError: query is not defined

      13 |   beforeAll(async () => {
      14 |     // Setup test data for load testing using actual schema
    > 15 |     await query(`
         |     ^
      16 |       INSERT INTO price_daily (symbol, date, open, high, low, close, adj_close, volume)
      17 |       VALUES
      18 |         ('AAPL', '2024-01-15', 188.0, 190.0, 187.5, 189.45, 189.45, 45000000),

      at Object.<anonymous> (tests/performance/api-load-testing.test.js:15:5)

  ● API Load Testing and Performance › Database Performance Under Load › should maintain query performance with data growth

    ReferenceError: query is not defined

      13 |   beforeAll(async () => {
      14 |     // Setup test data for load testing using actual schema
    > 15 |     await query(`
         |     ^
      16 |       INSERT INTO price_daily (symbol, date, open, high, low, close, adj_close, volume)
      17 |       VALUES
      18 |         ('AAPL', '2024-01-15', 188.0, 190.0, 187.5, 189.45, 189.45, 45000000),

      at Object.<anonymous> (tests/performance/api-load-testing.test.js:15:5)

  ● API Load Testing and Performance › Error Handling Performance › should handle errors efficiently without performance degradation

    ReferenceError: query is not defined

      13 |   beforeAll(async () => {
      14 |     // Setup test data for load testing using actual schema
    > 15 |     await query(`
         |     ^
      16 |       INSERT INTO price_daily (symbol, date, open, high, low, close, adj_close, volume)
      17 |       VALUES
      18 |         ('AAPL', '2024-01-15', 188.0, 190.0, 187.5, 189.45, 189.45, 45000000),

      at Object.<anonymous> (tests/performance/api-load-testing.test.js:15:5)

  ● API Load Testing and Performance › Error Handling Performance › should handle authentication errors efficiently

    ReferenceError: query is not defined

      13 |   beforeAll(async () => {
      14 |     // Setup test data for load testing using actual schema
    > 15 |     await query(`
         |     ^
      16 |       INSERT INTO price_daily (symbol, date, open, high, low, close, adj_close, volume)
      17 |       VALUES
      18 |         ('AAPL', '2024-01-15', 188.0, 190.0, 187.5, 189.45, 189.45, 45000000),

      at Object.<anonymous> (tests/performance/api-load-testing.test.js:15:5)

  ● API Load Testing and Performance › Performance Monitoring and Metrics › should track response time metrics

    ReferenceError: query is not defined

      13 |   beforeAll(async () => {
      14 |     // Setup test data for load testing using actual schema
    > 15 |     await query(`
         |     ^
      16 |       INSERT INTO price_daily (symbol, date, open, high, low, close, adj_close, volume)
      17 |       VALUES
      18 |         ('AAPL', '2024-01-15', 188.0, 190.0, 187.5, 189.45, 189.45, 45000000),

      at Object.<anonymous> (tests/performance/api-load-testing.test.js:15:5)

  ● API Load Testing and Performance › Performance Monitoring and Metrics › should maintain consistent performance across test run

    ReferenceError: query is not defined

      13 |   beforeAll(async () => {
      14 |     // Setup test data for load testing using actual schema
    > 15 |     await query(`
         |     ^
      16 |       INSERT INTO price_daily (symbol, date, open, high, low, close, adj_close, volume)
      17 |       VALUES
      18 |         ('AAPL', '2024-01-15', 188.0, 190.0, 187.5, 189.45, 189.45, 45000000),

      at Object.<anonymous> (tests/performance/api-load-testing.test.js:15:5)

  console.log
    📊 Signals data requested (deployment refresh v3)

      at log (routes/signals.js:94:13)

  console.log
    📈 Fetching real BUY signals from buy_sell_daily

      at log (routes/signals.js:470:13)

  console.log
    📈 Fetching real BUY signals from buy_sell_daily

      at log (routes/signals.js:470:13)

  console.error
    Error building query for buy_sell_daily: Table buy_sell_daily does not exist

      475 |       queryConfig = await buildSignalQuery(tableName, 'BUY', timeframe);
      476 |     } catch (error) {
    > 477 |       console.error(`Error building query for ${tableName}:`, error.message);
          |               ^
      478 |
      479 |       // Return error instead of fallback data in any environment
      480 |

      at error (routes/signals.js:477:15)

  console.log
    📈 Fetching real BUY signals from buy_sell_weekly

      at log (routes/signals.js:470:13)

  console.log
    📉 Sell signals requested for daily timeframe

      at log (routes/signals.js:607:13)

  console.log
    📉 Fetching real SELL signals from buy_sell_daily

      at log (routes/signals.js:620:13)

  console.log
    📊 Technical signals requested for daily timeframe

      at log (routes/signals.js:758:13)

  console.log
    📊 Fetching technical signals from buy_sell_daily

      at log (routes/signals.js:771:13)

  console.log
    📊 Momentum signals requested for daily timeframe

      at log (routes/signals.js:913:13)

  console.log
    📊 Fetching momentum signals from buy_sell_daily

      at log (routes/signals.js:926:13)

  console.log
    📈 Fetching options signals

      at log (routes/signals.js:1627:13)

  console.log
    🔔 Signal alerts requested

      at log (routes/signals.js:1130:13)

  console.log
    🔔 Signal alerts requested

      at log (routes/signals.js:1130:13)

  console.error
    Signal alerts error: Error: relation "signal_alerts" does not exist
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/signals.test.js:298:39)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      1177 |     });
      1178 |   } catch (error) {
    > 1179 |     console.error("Signal alerts error:", error);
           |             ^
      1180 |
      1181 |     // If table doesn't exist, database fails, or in test environment, return empty data instead of error
      1182 |     if (error.message.includes('does not exist') || error.message.includes('alert_id') || error.message.includes('Database query failed') || process.env.NODE_ENV === 'test') {

      at error (routes/signals.js:1179:13)

  console.log
    📊 Signal performance requested for AAPL - 7d

      at log (routes/signals.js:1370:13)

  console.log
    📊 Signal performance requested for AAPL - daily

      at log (routes/signals.js:1370:13)

  console.error
    Error building query for buy_sell_daily: Table buy_sell_daily does not exist

      1394 |       queryConfig = await buildSignalQuery(tableName, null, timeframe);
      1395 |     } catch (error) {
    > 1396 |       console.error(`Error building query for ${tableName}:`, error.message);
           |               ^
      1397 |       // Return properly formatted data for SignalPerformanceTracker component
      1398 |       return res.json({
      1399 |         symbol: symbol.toUpperCase(),

      at error (routes/signals.js:1396:15)

  console.log
    📊 Signal performance requested for NONEXISTENT - daily

      at log (routes/signals.js:1370:13)

  console.error
    Error building query for buy_sell_daily: Table buy_sell_daily does not have signal column. Available columns: symbol

      1394 |       queryConfig = await buildSignalQuery(tableName, null, timeframe);
      1395 |     } catch (error) {
    > 1396 |       console.error(`Error building query for ${tableName}:`, error.message);
           |               ^
      1397 |       // Return properly formatted data for SignalPerformanceTracker component
      1398 |       return res.json({
      1399 |         symbol: symbol.toUpperCase(),

      at error (routes/signals.js:1396:15)

  console.log
    📊 Signal performance requested for AAPL - invalid

      at log (routes/signals.js:1370:13)

  console.log
    📊 Signal performance requested for META - 7d

      at log (routes/signals.js:1370:13)

  console.error
    Error building query for buy_sell_daily: Table buy_sell_daily not found or has no columns

      1394 |       queryConfig = await buildSignalQuery(tableName, null, timeframe);
      1395 |     } catch (error) {
    > 1396 |       console.error(`Error building query for ${tableName}:`, error.message);
           |               ^
      1397 |       // Return properly formatted data for SignalPerformanceTracker component
      1398 |       return res.json({
      1399 |         symbol: symbol.toUpperCase(),

      at error (routes/signals.js:1396:15)

  console.log
    📈 Fetching options signals

      at log (routes/signals.js:1627:13)

  console.log
    📈 Fetching sentiment signals

      at log (routes/signals.js:1649:13)

  console.log
    📈 Fetching earnings signals

      at log (routes/signals.js:1671:13)

  console.log
    📈 Fetching crypto signals

      at log (routes/signals.js:1693:13)

  console.log
    📈 Fetching historical signals

      at log (routes/signals.js:1716:13)

  console.log
    📈 Fetching historical signals

      at log (routes/signals.js:1716:13)

  console.log
    📈 Fetching sector rotation signals

      at log (routes/signals.js:1746:13)

  console.log
    📊 Signals data requested (list endpoint)

      at log (routes/signals.js:1818:13)

  console.log
    📊 Signals data requested (list endpoint)

      at log (routes/signals.js:1818:13)

  console.log
    📈 Fetching real BUY signals from buy_sell_daily

      at log (routes/signals.js:470:13)

  console.error
    Error building query for buy_sell_daily: Table buy_sell_daily does not have signal column. Available columns:

      475 |       queryConfig = await buildSignalQuery(tableName, 'BUY', timeframe);
      476 |     } catch (error) {
    > 477 |       console.error(`Error building query for ${tableName}:`, error.message);
          |               ^
      478 |
      479 |       // Return error instead of fallback data in any environment
      480 |

      at error (routes/signals.js:477:15)

  console.log
    📊 Fetching real signals for INVALID_SIGNAL_TYPE from buy_sell_daily table

      at log (routes/signals.js:1954:13)

  console.error
    Error building query for buy_sell_daily: Table buy_sell_daily does not have signal column. Available columns:

      1959 |       queryConfig = await buildSignalQuery(tableName, null, timeframe);
      1960 |     } catch (error) {
    > 1961 |       console.error(`Error building query for ${tableName}:`, error.message);
           |               ^
      1962 |       return res.status(404).json({
      1963 |         success: false,
      1964 |         error: "Signals data not available",

      at error (routes/signals.js:1961:15)

FAIL tests/unit/routes/signals.test.js
  Signals Route - Unit Tests
    Frontend API Pattern Validation
      ✓ should reject /api/signals/daily path parameter pattern (2 ms)
      ✓ should reject /api/signals/weekly path parameter pattern (1 ms)
      ✓ should reject /api/signals/monthly path parameter pattern (5 ms)
      ✓ should validate timeframe parameter strictly (5 ms)
    GET /api/signals/buy - Business Logic
      ✓ should return formatted buy signals with correct structure (3 ms)
      ✓ should handle table not found error (2 ms)
      ✓ should validate timeframe parameter (1 ms)
      ✓ should handle different timeframes (2 ms)
    GET /api/signals/sell - Business Logic
      ✓ should return formatted sell signals (3 ms)
    GET /api/signals/technical - Business Logic
      ✓ should return technical signals with indicators (4 ms)
    GET /api/signals/momentum - Business Logic
      ✓ should return momentum signals with momentum indicators (6 ms)
    GET /api/signals/options - Static Endpoints
      ✓ should return options signals structure (3 ms)
    GET /api/signals/alerts - Alert Management
      ✓ should return signal alerts (2 ms)
      ✓ should handle alerts table not found (10 ms)
    POST /api/signals/alerts - Alert Creation
      ○ skipped should create signal alert
      ○ skipped should validate required fields
    GET /api/signals/performance/:symbol - Business Logic
      ✓ should return performance data for specific symbol (2 ms)
      ✓ should handle table not found error gracefully (5 ms)
      ✓ should handle no data found gracefully (3 ms)
      ✓ should validate timeframe parameter (2 ms)
      ✓ should handle 7d timeframe alias (3 ms)
    GET /api/signals/options - Business Logic
      ✓ should return options signals structure (2 ms)
    GET /api/signals/sentiment - Business Logic
      ✓ should return sentiment signals structure (3 ms)
    GET /api/signals/earnings - Business Logic
      ✓ should return earnings signals structure (4 ms)
    GET /api/signals/crypto - Business Logic
      ✓ should return crypto signals structure (3 ms)
    GET /api/signals/history - Business Logic
      ✓ should return historical signals with pagination (3 ms)
      ✓ should handle pagination parameters (3 ms)
    GET /api/signals/sector-rotation - Business Logic
      ✓ should return sector rotation signals (2 ms)
    GET /api/signals/list - Business Logic
      ✓ should return signals list with summary (2 ms)
      ✕ should handle timeframe parameter (2 ms)
    POST /api/signals/custom - Business Logic
      ○ skipped should create custom signal alert
      ○ skipped should validate required fields for custom signals
    Error Handling
      ✓ should handle database connection errors (3 ms)
      ✓ should validate signal type parameters (4 ms)

  ● Signals Route - Unit Tests › GET /api/signals/list - Business Logic › should handle timeframe parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      525 |       const response = await request(app).get("/api/signals/list?timeframe=weekly");
      526 |       expect(response.status).toBe(200);
    > 527 |       expect(response.body.success).toBe(true);
          |                                     ^
      528 |       expect(response.body).toHaveProperty("timeframe", "weekly");
      529 |     });
      530 |   });

      at Object.toBe (tests/unit/routes/signals.test.js:527:37)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/analytics HTTP/1.1" 200 827 "-" "-"
  console.log
    📈 Performance analytics requested for user: test-user-123, period: 1m

      at log (routes/analytics.js:174:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/analytics/performance HTTP/1.1" 200 1547 "-" "-"
  console.log
    ⚠️ Risk analytics requested for user: test-user-123, timeframe: 1m

      at log (routes/analytics.js:445:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/analytics/risk HTTP/1.1" 200 433 "-" "-"
  console.log
    📊 Asset allocation analytics requested for user: test-user-123, period: current

      at log (routes/analytics.js:836:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/analytics/allocation HTTP/1.1" 200 172 "-" "-"
  console.log
    📈 Returns analytics requested for user: test-user-123, period: 1m

      at log (routes/analytics.js:970:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/analytics/returns HTTP/1.1" 200 224 "-" "-"
  console.log
    🏭 Public sectors analytics requested

      at log (routes/analytics.js:1072:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/analytics/sectors HTTP/1.1" 200 157 "-" "-"
  console.log
    🔗 Correlation analytics requested for user: test-user-123, period: 3m

      at log (routes/analytics.js:633:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/analytics/correlation HTTP/1.1" 400 311 "-" "-"
  console.log
    📊 Volatility analytics requested for user: test-user-123, period: 1m

      at log (routes/analytics.js:1147:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/analytics/volatility HTTP/1.1" 200 229 "-" "-"
  console.log
    📈 Trends analytics requested for user: test-user-123, period: 1m

      at log (routes/analytics.js:1257:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "GET /api/analytics/trends HTTP/1.1" 200 192 "-" "-"
  console.log
    🔬 Custom analytics requested for user: test-user-123, type: symbol_analysis

      at log (routes/analytics.js:1369:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:52 +0000] "POST /api/analytics/custom HTTP/1.1" 200 200 "-" "-"
FAIL tests/integration/routes/analytics.integration.test.js
  Analytics Routes
    GET /api/analytics
      ✓ should return analytics endpoints (3 ms)
    GET /api/analytics/performance
      ✓ should return performance analytics (14 ms)
    GET /api/analytics/risk
      ✓ should return risk analytics (3 ms)
    GET /api/analytics/allocation
      ✓ should return allocation analytics (2 ms)
    GET /api/analytics/returns
      ✓ should return returns analysis (3 ms)
    GET /api/analytics/sectors
      ✓ should return sector analysis (2 ms)
    GET /api/analytics/correlation
      ✕ should return correlation analysis (3 ms)
    GET /api/analytics/volatility
      ✓ should return volatility analysis (2 ms)
    GET /api/analytics/trends
      ✓ should return trend analysis (3 ms)
    POST /api/analytics/custom
      ✓ should handle custom analytics request (5 ms)

  ● Analytics Routes › GET /api/analytics/correlation › should return correlation analysis

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 400

      136 |         .set("Authorization", "Bearer dev-bypass-token");
      137 |
    > 138 |       expect(response.status).toBe(200);
          |                               ^
      139 |
      140 |       if (response.status === 200) {
      141 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/analytics.integration.test.js:138:31)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:53 +0000] "GET /api/watchlist HTTP/1.1" 200 75 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:53 +0000] "POST /api/watchlist HTTP/1.1" 400 44 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:53 +0000] "POST /api/watchlist HTTP/1.1" 400 44 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:53 +0000] "DELETE /api/watchlist/AAPL HTTP/1.1" 400 203 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:53 +0000] "GET /api/watchlist/1 HTTP/1.1" 404 47 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:53 +0000] "PUT /api/watchlist/AAPL HTTP/1.1" 400 178 "-" "-"
  console.log
    🎯 Watchlist performance endpoint called

      at log (routes/watchlist.js:363:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:53 +0000] "GET /api/watchlist/performance HTTP/1.1" 404 454 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:53 +0000] "GET /api/watchlist/alerts HTTP/1.1" 200 131 "-" "-"
  console.log
    📥 Watchlist import requested for user: test-user-123

      at log (routes/watchlist.js:474:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:53 +0000] "POST /api/watchlist/import HTTP/1.1" 400 93 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:53 +0000] "GET /api/watchlist/export HTTP/1.1" 200 53 "-" "-"
FAIL tests/integration/routes/watchlist.integration.test.js
  Watchlist Routes
    GET /api/watchlist
      ✓ should return user watchlist (4 ms)
    POST /api/watchlist
      ✓ should return validation error for missing name (3 ms)
      ✓ should validate required symbol (4 ms)
    DELETE /api/watchlist/:id
      ✓ should return validation error for invalid ID format (2 ms)
    GET /api/watchlist/:listId
      ✓ should return specific watchlist (2 ms)
    PUT /api/watchlist/:id
      ✓ should return validation error for invalid ID format (1 ms)
    GET /api/watchlist/performance
      ✕ should return watchlist performance (8 ms)
    GET /api/watchlist/alerts
      ✓ should return price alerts (3 ms)
    POST /api/watchlist/import
      ✓ should import watchlist from CSV (6 ms)
    GET /api/watchlist/export
      ✓ should export watchlist to CSV (3 ms)

  ● Watchlist Routes › GET /api/watchlist/performance › should return watchlist performance

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      132 |         .set("Authorization", "Bearer dev-bypass-token");
      133 |
    > 134 |       expect(response.status).toBe(200);
          |                               ^
      135 |
      136 |       if (response.status === 200) {
      137 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/watchlist.integration.test.js:134:31)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:53 +0000] "GET /api/news/health HTTP/1.1" 200 131 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:53 +0000] "GET /api/news HTTP/1.1" 200 26 "-" "-"
  console.log
    📰 Recent news requested, limit: 20, hours: 24

      at log (routes/news.js:73:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:53 +0000] "GET /api/news/recent HTTP/1.1" 200 189 "-" "-"
  console.log
    📰 Recent news requested, limit: 5, hours: 24

      at log (routes/news.js:73:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:53 +0000] "GET /api/news/recent?limit=5 HTTP/1.1" 200 189 "-" "-"
  console.log
    📰 Recent news requested, limit: 20, hours: 24

      at log (routes/news.js:73:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:53 +0000] "GET /api/news/recent?category=earnings HTTP/1.1" 200 189 "-" "-"
  console.log
    🔍 News search requested: "market"

      at log (routes/news.js:1429:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:53 +0000] "GET /api/news/search?q=market HTTP/1.1" 200 415 "-" "-"
  console.log
    DEBUG: /sentiment route hit

      at log (routes/news.js:451:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:53 +0000] "GET /api/news/sentiment HTTP/1.1" 503 174 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:53 +0000] "GET /api/news/symbols/AAPL HTTP/1.1" 404 127 "-" "-"
FAIL tests/integration/routes/news.integration.test.js
  News Routes
    GET /api/news/health
      ✓ should return health status (4 ms)
    GET /api/news
      ✓ should return news API status (4 ms)
    GET /api/news/recent
      ✓ should return recent news (9 ms)
      ✓ should handle limit parameter (4 ms)
      ✓ should handle category filtering (2 ms)
    GET /api/news/search
      ✓ should search news articles (4 ms)
    GET /api/news/sentiment
      ✕ should return news sentiment analysis (3 ms)
    GET /api/news/symbols/:symbol
      ✓ should return news for specific symbol (2 ms)

  ● News Routes › GET /api/news/sentiment › should return news sentiment analysis

    expect(received).toContain(expected) // indexOf

    Expected value: 503
    Received array: [200, 404]

      118 |       const response = await request(app).get("/api/news/sentiment");
      119 |
    > 120 |       expect([200, 404]).toContain(response.status);
          |                          ^
      121 |
      122 |       if (response.status === 200) {
      123 |         if (response.status === 200 && response.body.success !== undefined) { expect(response.body.success).toBe(true); } else if (response.status === 404) { expect(response.body.success).toBe(false); } else { expect(response.body).toBeDefined(); }

      at Object.toContain (tests/integration/routes/news.integration.test.js:120:26)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:53 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:53 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:53 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    📊 Portfolio summary requested for user: test-user-123

      at log (routes/portfolio.js:175:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:53 +0000] "GET /api/portfolio/summary HTTP/1.1" 200 655 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:53 +0000] "POST /api/portfolio/analyze HTTP/1.1" 501 273 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:53 +0000] "POST /api/portfolio/analyze HTTP/1.1" 501 273 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:53 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔔 Active alerts requested for user: test-user-123, status: active

      at log (routes/alerts.js:39:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:53 +0000] "GET /api/alerts/active HTTP/1.1" 200 501 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:53 +0000] "GET /api/trades HTTP/1.1" 200 281 "-" "-"
  console.log
    📊 Portfolio summary requested for user: test-user-123

      at log (routes/portfolio.js:175:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:53 +0000] "GET /api/portfolio/summary HTTP/1.1" 200 655 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:53 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:48:53 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:53 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:48:53 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
FAIL tests/integration/middleware/auth-middleware.integration.test.js
  Auth Middleware with Service Integration
    Token Validation with Real Auth Service
      ✓ should validate tokens against real auth service (4 ms)
      ✕ should handle expired tokens in service calls (4 ms)
      ✕ should handle malformed auth headers (3 ms)
    Auth Context Propagation Through Service Chain
      ✓ should propagate auth context through service chain (3 ms)
      ✓ should maintain user context across multiple service calls (3 ms)
      ✕ should handle auth failures in middleware chain (3 ms)
    Auth Middleware with Different Route Types
      ✓ should protect all authenticated routes consistently (7 ms)
      ✓ should allow public routes without authentication (5 ms)
    Auth Service Error Handling
      ✕ should handle auth service unavailability gracefully (1 ms)
      ✕ should provide consistent error responses (2 ms)

  ● Auth Middleware with Service Integration › Token Validation with Real Auth Service › should handle expired tokens in service calls

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 500]

      71 |         .set("Authorization", "Bearer expired-token-123");
      72 |
    > 73 |       expect([401, 500]).toContain(response.status);
         |                          ^
      74 |       if (response.status === 401) {
      75 |         expect(response.body).toHaveProperty("success", false);
      76 |         expect(response.body).toHaveProperty("error");

      at Object.toContain (tests/integration/middleware/auth-middleware.integration.test.js:73:26)

  ● Auth Middleware with Service Integration › Token Validation with Real Auth Service › should handle malformed auth headers

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 403, 500]

      91 |           .set("Authorization", authHeader);
      92 |
    > 93 |         expect([401, 403, 500]).toContain(response.status);
         |                                 ^
      94 |
      95 |         if (response.status === 401 || response.status === 403) {
      96 |           expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/middleware/auth-middleware.integration.test.js:93:33)

  ● Auth Middleware with Service Integration › Auth Context Propagation Through Service Chain › should handle auth failures in middleware chain

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [401, 500]

      136 |         .send({ symbols: ["AAPL"] }); // No auth header
      137 |
    > 138 |       expect([401, 500]).toContain(response.status);
          |                          ^
      139 |       if (response.status === 401) {
      140 |         expect(response.body).toHaveProperty("success", false);
      141 |       }

      at Object.toContain (tests/integration/middleware/auth-middleware.integration.test.js:138:26)

  ● Auth Middleware with Service Integration › Auth Service Error Handling › should handle auth service unavailability gracefully

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 500]

      183 |         .set("Authorization", "Bearer invalid-service-token");
      184 |
    > 185 |       expect([401, 500]).toContain(response.status);
          |                          ^
      186 |       if (response.status === 401) {
      187 |         expect(response.body).toHaveProperty("success", false);
      188 |       }

      at Object.toContain (tests/integration/middleware/auth-middleware.integration.test.js:185:26)

  ● Auth Middleware with Service Integration › Auth Service Error Handling › should provide consistent error responses

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 403]

      205 |         const response = await requestBuilder;
      206 |
    > 207 |         expect(scenario.expectedStatus).toContain(response.status);
          |                                         ^
      208 |         expect(response.body).toHaveProperty("success", false);
      209 |         expect(response.body).toHaveProperty("error");
      210 |         expect(response.headers["content-type"]).toMatch(/application\/json/);

      at Object.toContain (tests/integration/middleware/auth-middleware.integration.test.js:207:41)

  console.log
    Initializing database connection...

      at log (index.js:395:13)

  console.log
    ⚙️ Dashboard settings requested for user: test-user-123

      at log (routes/settings.js:44:13)

  console.log
    Dashboard settings table not found, using defaults: Cannot read properties of undefined (reading 'rows')

      at log (routes/settings.js:55:15)

FAIL tests/integration/infrastructure/settings.test.js
  Settings Management API
    Settings Overview
      ✕ should retrieve settings endpoints
    Dashboard Settings
      ✓ should retrieve dashboard configuration (14 ms)
    API Key Management
      ✓ should list supported providers (5 ms)
      ✓ should retrieve API keys list (2 ms)
      ✓ should handle API key creation request (3 ms)
    Settings Health Status
      ✓ should retrieve settings health status (2 ms)

  ● Settings Management API › Settings Overview › should retrieve settings endpoints

    ReferenceError: query is not defined

      37 |     beforeEach(() => {
      38 |     jest.clearAllMocks();
    > 39 |     query.mockImplementation((sql, params) => {
         |     ^
      40 |       // Default: return empty rows for all queries
      41 |       if (sql.includes("information_schema.tables")) {
      42 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/infrastructure/settings.test.js:39:5)

  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for spy

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for INVALID

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

  console.error
    ETF holdings database error: Error: Database connection failed
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/etf.test.js:187:35)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      184 |     });
      185 |   } catch (error) {
    > 186 |     console.error("ETF holdings database error:", error);
          |             ^
      187 |
      188 |     if (error.code === "42P01") {
      189 |       return res.status(500).json({

      at error (routes/etf.js:186:13)

  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for VTI-B

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for ETF0

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for ETF1

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for ETF2

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for ETF3

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for ETF4

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for LARGE

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

FAIL tests/unit/routes/etf.test.js
  ETF Route - Comprehensive Unit Tests
    GET /api/etf/:symbol/holdings
      ✕ should get ETF holdings for valid symbol (19 ms)
      ✓ should handle case insensitive symbol lookup (4 ms)
      ✓ should handle limit parameter correctly (2 ms)
      ✓ should handle missing symbol parameter (2 ms)
      ✓ should handle ETF not found (2 ms)
      ✕ should handle null database results gracefully (2 ms)
      ✕ should handle database table not found error (2 ms)
      ✓ should handle general database errors (3 ms)
      ✕ should handle empty sector data gracefully (6 ms)
      ✓ should handle missing fund metrics gracefully (2 ms)
      ✓ should handle special characters in ETF symbol (2 ms)
      ✕ should parse numeric values correctly (3 ms)
      ✕ should handle sector name transformation correctly (5 ms)
    Edge Cases and Error Handling
      ✓ should handle very large limit parameter (3 ms)
      ✓ should handle non-numeric limit parameter (2 ms)
      ✓ should handle negative limit parameter (3 ms)
      ✓ should handle malformed database response (2 ms)
    Performance Testing
      ✓ should handle concurrent requests efficiently (8 ms)
      ✓ should handle large holdings dataset efficiently (3 ms)
    Response Format Validation
      ✓ should return consistent JSON response format (4 ms)
      ✓ should include timestamp in ISO format (6 ms)
      ✕ should maintain consistent error response format (4 ms)

  ● ETF Route - Comprehensive Unit Tests › GET /api/etf/:symbol/holdings › should get ETF holdings for valid symbol

    expect(received).toHaveProperty(path, value)

    Expected path: "technology"
    Received path: []

    Expected value: 28.5
    Received value: [{"percentage": 28.5, "sector": "Technology", "total_weight": 28.5, "weight": 28.5}, {"percentage": 13.2, "sector": "Healthcare", "total_weight": 13.2, "weight": 13.2}]

      78 |         sector: "Technology",
      79 |       });
    > 80 |       expect(response.body.data.sector_allocation).toHaveProperty(
         |                                                    ^
      81 |         "technology",
      82 |         28.5
      83 |       );

      at Object.toHaveProperty (tests/unit/routes/etf.test.js:80:52)

  ● ETF Route - Comprehensive Unit Tests › GET /api/etf/:symbol/holdings › should handle null database results gracefully

    expected 404 "Not Found", got 200 "OK"

      167 |       const response = await request(app)
      168 |         .get("/api/etf/SPY/holdings")
    > 169 |         .expect(404);
          |          ^
      170 |       expect(response.body.success).toBe(false);
      171 |       expect(response.body.error).toBe("ETF not found");
      172 |     });

      at Object.expect (tests/unit/routes/etf.test.js:169:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● ETF Route - Comprehensive Unit Tests › GET /api/etf/:symbol/holdings › should handle database table not found error

    expected 500 "Internal Server Error", got 200 "OK"

      177 |       const response = await request(app)
      178 |         .get("/api/etf/SPY/holdings")
    > 179 |         .expect(500);
          |          ^
      180 |       expect(response.body.success).toBe(false);
      181 |       expect(response.body.error).toBe("Database table not found");
      182 |       expect(response.body.message).toBe(

      at Object.expect (tests/unit/routes/etf.test.js:179:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● ETF Route - Comprehensive Unit Tests › GET /api/etf/:symbol/holdings › should handle empty sector data gracefully

    expect(received).toEqual(expected) // deep equality

    Expected: {}
    Received: []

      216 |         .get("/api/etf/SPY/holdings")
      217 |         .expect(200);
    > 218 |       expect(response.body.data.sector_allocation).toEqual({});
          |                                                    ^
      219 |       expect(response.body.data.top_holdings).toHaveLength(1);
      220 |     });
      221 |     test("should handle missing fund metrics gracefully", async () => {

      at Object.toEqual (tests/unit/routes/etf.test.js:218:52)

  ● ETF Route - Comprehensive Unit Tests › GET /api/etf/:symbol/holdings › should parse numeric values correctly

    expect(received).toBe(expected) // Object.is equality

    Expected: 28.5
    Received: undefined

      301 |       expect(response.body.data.top_holdings[0].shares_held).toBe(165000000);
      302 |       expect(response.body.data.top_holdings[0].market_value).toBe(25000000000);
    > 303 |       expect(response.body.data.sector_allocation.technology).toBe(28.5);
          |                                                               ^
      304 |       expect(response.body.data.fund_metrics.expense_ratio).toBe(0.0945);
      305 |       expect(response.body.data.fund_metrics.dividend_yield).toBe(1.25);
      306 |     });

      at Object.toBe (tests/unit/routes/etf.test.js:303:63)

  ● ETF Route - Comprehensive Unit Tests › GET /api/etf/:symbol/holdings › should handle sector name transformation correctly

    expect(received).toHaveProperty(path, value)

    Expected path: "information_technology"
    Received path: []

    Expected value: 28.5
    Received value: [{"percentage": 28.5, "sector": "Information Technology", "total_weight": 28.5, "weight": 28.5}, {"percentage": 13.2, "sector": "Health Care", "total_weight": 13.2, "weight": 13.2}, {"percentage": 12.1, "sector": "Consumer Discretionary", "total_weight": 12.1, "weight": 12.1}]

      340 |         .get("/api/etf/SPY/holdings")
      341 |         .expect(200);
    > 342 |       expect(response.body.data.sector_allocation).toHaveProperty(
          |                                                    ^
      343 |         "information_technology",
      344 |         28.5
      345 |       );

      at Object.toHaveProperty (tests/unit/routes/etf.test.js:342:52)

  ● ETF Route - Comprehensive Unit Tests › Response Format Validation › should maintain consistent error response format

    expected 500 "Internal Server Error", got 200 "OK"

      553 |       const response = await request(app)
      554 |         .get("/api/etf/SPY/holdings")
    > 555 |         .expect(500);
          |          ^
      556 |       expect(response.body.success).toBe(false);
      557 |       expect(response.body.error).toBeDefined();
      558 |       expect(typeof response.body.error).toBe("string");

      at Object.expect (tests/unit/routes/etf.test.js:555:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  console.log
    Initializing database connection...

      at log (index.js:395:13)

  console.log
    🔄 Sector rotation analysis requested, timeframe: 3m

      at log (routes/sectors.js:948:13)

  console.error
    Sector rotation error: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/sectors.js:960:21)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)

      1055 |     });
      1056 |   } catch (error) {
    > 1057 |     console.error("Sector rotation error:", error);
           |             ^
      1058 |     res.status(500).json({
      1059 |       success: false,
      1060 |       error: "Failed to fetch sector rotation",

      at error (routes/sectors.js:1057:13)

  console.log
    📊 Fetching stocks for sector: technology

      at log (routes/sectors.js:72:13)

  console.error
    ❌ Error fetching stocks for sector technology: TypeError: Cannot read properties of undefined (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/sectors.js:101:35)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)

      117 |     });
      118 |   } catch (error) {
    > 119 |     console.error(`❌ Error fetching stocks for sector ${req.params.sector}:`, error);
          |             ^
      120 |     res.status(500).json({
      121 |       success: false,
      122 |       error: error.message || "Failed to fetch sector stocks",

      at error (routes/sectors.js:119:13)

FAIL tests/integration/analytics/sectors.test.js
  Sectors Analysis API
    Sector Performance
      ✕ should retrieve sector performance data
    Sector Rotation
      ✕ should analyze sector rotation patterns (25 ms)
    Sector Stocks
      ✕ should retrieve stocks by sector (6 ms)

  ● Sectors Analysis API › Sector Performance › should retrieve sector performance data

    ReferenceError: query is not defined

      35 |     beforeEach(() => {
      36 |     jest.clearAllMocks();
    > 37 |     query.mockImplementation((sql, params) => {
         |     ^
      38 |       // Default: return empty rows for all queries
      39 |       if (sql.includes("information_schema.tables")) {
      40 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/sectors.test.js:37:5)

  ● Sectors Analysis API › Sector Rotation › should analyze sector rotation patterns

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      67 |       const response = await request(app).get("/api/sectors/rotation");
      68 |
    > 69 |       expect(response.status).toBe(200);
         |                               ^
      70 |
      71 |       if (response.status === 200) {
      72 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/sectors.test.js:69:31)

  ● Sectors Analysis API › Sector Stocks › should retrieve stocks by sector

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      83 |       const response = await request(app).get("/api/sectors/technology/stocks");
      84 |
    > 85 |       expect(response.status).toBe(200);
         |                               ^
      86 |
      87 |       if (response.status === 200) {
      88 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/sectors.test.js:85:31)

FAIL tests/integration/analytics/dashboard.test.js
  Dashboard API
    Dashboard Overview
      ✕ should retrieve comprehensive dashboard data (1 ms)
      ✕ should handle unauthorized dashboard access
    Market Summary
      ✕ should provide market summary for dashboard
      ✕ should include major market indices
    Portfolio Widget
      ✕ should retrieve portfolio summary for dashboard
      ✕ should show top portfolio positions
    Watchlist Widget
      ✕ should retrieve watchlist summary
      ✕ should show watchlist performance
    News Widget
      ✕ should provide market news for dashboard
      ✕ should provide personalized news based on portfolio
    Alerts Widget
      ✕ should show recent alerts
      ✕ should show alert summary (1 ms)
    Dashboard Customization
      ✕ should save dashboard layout preferences
      ✕ should retrieve user dashboard preferences

  ● Dashboard API › Dashboard Overview › should retrieve comprehensive dashboard data

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/dashboard.test.js:35:5)

  ● Dashboard API › Dashboard Overview › should handle unauthorized dashboard access

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/dashboard.test.js:35:5)

  ● Dashboard API › Market Summary › should provide market summary for dashboard

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/dashboard.test.js:35:5)

  ● Dashboard API › Market Summary › should include major market indices

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/dashboard.test.js:35:5)

  ● Dashboard API › Portfolio Widget › should retrieve portfolio summary for dashboard

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/dashboard.test.js:35:5)

  ● Dashboard API › Portfolio Widget › should show top portfolio positions

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/dashboard.test.js:35:5)

  ● Dashboard API › Watchlist Widget › should retrieve watchlist summary

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/dashboard.test.js:35:5)

  ● Dashboard API › Watchlist Widget › should show watchlist performance

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/dashboard.test.js:35:5)

  ● Dashboard API › News Widget › should provide market news for dashboard

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/dashboard.test.js:35:5)

  ● Dashboard API › News Widget › should provide personalized news based on portfolio

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/dashboard.test.js:35:5)

  ● Dashboard API › Alerts Widget › should show recent alerts

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/dashboard.test.js:35:5)

  ● Dashboard API › Alerts Widget › should show alert summary

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/dashboard.test.js:35:5)

  ● Dashboard API › Dashboard Customization › should save dashboard layout preferences

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/dashboard.test.js:35:5)

  ● Dashboard API › Dashboard Customization › should retrieve user dashboard preferences

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/dashboard.test.js:35:5)

FAIL tests/unit/routes/positioning.test.js
  Positioning Routes
    GET /api/positioning/stocks
      ✕ should return positioning data with positioning_score successfully (11 ms)
      ✕ should handle symbol parameter correctly (2 ms)
      ✕ should handle pagination parameters (1 ms)
      ✕ should handle timeframe parameter (2 ms)
      ✓ should handle database query failures with 500 error (2 ms)
      ✕ should return 404 when no data is found (2 ms)
      ✓ should handle database errors properly (2 ms)
      ✕ should include correct metadata structure (1 ms)
      ✓ should handle server errors properly (2 ms)
      ✕ should use default values when parameters are not provided (5 ms)
      ✕ should handle large page numbers correctly (2 ms)
      ✕ should calculate positioning score correctly (1 ms)
      ✕ should handle null metrics gracefully (1 ms)
    GET /api/positioning/summary
      ✓ should return positioning summary successfully (2 ms)
      ✓ should calculate bullish overall positioning (3 ms)
      ✓ should calculate moderately bullish positioning (1 ms)
      ✓ should calculate bearish positioning (1 ms)
      ✓ should calculate moderately bearish positioning (2 ms)
      ✓ should default to neutral positioning (1 ms)
      ✓ should handle null/undefined values in database results (1 ms)
      ✓ should calculate retail sentiment classifications correctly (9 ms)
      ✓ should include valid timestamp in response (1 ms)
      ✓ should handle database errors properly (2 ms)
      ✓ should use correct SQL queries with positioning_metrics and retail sentiment (1 ms)
      ✓ should have consistent data structure (2 ms)

  ● Positioning Routes › GET /api/positioning/stocks › should return positioning data with positioning_score successfully

    expected 200 "OK", got 500 "Internal Server Error"

      75 |       const response = await request(app)
      76 |         .get("/api/positioning/stocks")
    > 77 |         .expect(200);
         |          ^
      78 |       expect(response.body).toHaveProperty("positioning_metrics");
      79 |       expect(response.body).toHaveProperty("positioning_score");
      80 |       expect(response.body).toHaveProperty("institutional_holders");

      at Object.expect (tests/unit/routes/positioning.test.js:77:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Positioning Routes › GET /api/positioning/stocks › should handle symbol parameter correctly

    expected 200 "OK", got 500 "Internal Server Error"

      100 |       const response = await request(app)
      101 |         .get("/api/positioning/stocks?symbol=AAPL")
    > 102 |         .expect(200);
          |          ^
      103 |       expect(response.body.metadata.symbol).toBe("AAPL");
      104 |       expect(mockQuery).toHaveBeenCalledWith(
      105 |         expect.stringContaining("AND pm.symbol = $1"),

      at Object.expect (tests/unit/routes/positioning.test.js:102:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Positioning Routes › GET /api/positioning/stocks › should handle pagination parameters

    expected 200 "OK", got 500 "Internal Server Error"

      114 |       await request(app)
      115 |         .get("/api/positioning/stocks?limit=25&page=2")
    > 116 |         .expect(200);
          |          ^
      117 |       expect(mockQuery).toHaveBeenCalledWith(
      118 |         expect.stringContaining("LIMIT"),
      119 |         expect.arrayContaining([25, 25]) // page 2 with limit 25 = offset 25

      at Object.expect (tests/unit/routes/positioning.test.js:116:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Positioning Routes › GET /api/positioning/stocks › should handle timeframe parameter

    expected 200 "OK", got 500 "Internal Server Error"

      127 |       const response = await request(app)
      128 |         .get("/api/positioning/stocks?timeframe=weekly")
    > 129 |         .expect(200);
          |          ^
      130 |       expect(response.body.metadata.timeframe).toBe("weekly");
      131 |       expect(consoleSpy).toHaveBeenCalledWith(
      132 |         "📊 Stock positioning data requested - symbol: all, timeframe: weekly"

      at Object.expect (tests/unit/routes/positioning.test.js:129:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Positioning Routes › GET /api/positioning/stocks › should return 404 when no data is found

    expected 404 "Not Found", got 500 "Internal Server Error"

      152 |       const response = await request(app)
      153 |         .get("/api/positioning/stocks")
    > 154 |         .expect(404);
          |          ^
      155 |       expect(response.body.success).toBe(false);
      156 |       expect(response.body.error).toBe("No positioning data found");
      157 |       expect(response.body.message).toBe("No positioning data available for this symbol");

      at Object.expect (tests/unit/routes/positioning.test.js:154:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Positioning Routes › GET /api/positioning/stocks › should include correct metadata structure

    expected 200 "OK", got 500 "Internal Server Error"

      176 |       const response = await request(app)
      177 |         .get("/api/positioning/stocks?symbol=TSLA&timeframe=monthly")
    > 178 |         .expect(200);
          |          ^
      179 |       expect(response.body.metadata).toEqual({
      180 |         symbol: "TSLA",
      181 |         timeframe: "monthly",

      at Object.expect (tests/unit/routes/positioning.test.js:178:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Positioning Routes › GET /api/positioning/stocks › should use default values when parameters are not provided

    expected 200 "OK", got 500 "Internal Server Error"

      212 |         .mockResolvedValueOnce({ rows: mockInstitutionalData })
      213 |         .mockResolvedValueOnce({ rows: [mockSentimentData] });
    > 214 |       await request(app).get("/api/positioning/stocks").expect(200);
          |                                                         ^
      215 |       // Check that institutional query has limit and offset
      216 |       expect(mockQuery).toHaveBeenCalledWith(
      217 |         expect.stringContaining("LIMIT"),

      at Object.expect (tests/unit/routes/positioning.test.js:214:57)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Positioning Routes › GET /api/positioning/stocks › should handle large page numbers correctly

    expected 404 "Not Found", got 500 "Internal Server Error"

      226 |       await request(app)
      227 |         .get("/api/positioning/stocks?page=100&limit=10")
    > 228 |         .expect(404);
          |          ^
      229 |       expect(mockQuery).toHaveBeenCalledWith(
      230 |         expect.stringContaining("LIMIT"),
      231 |         expect.arrayContaining([10, 990]) // page 100 with limit 10 = offset 990

      at Object.expect (tests/unit/routes/positioning.test.js:228:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Positioning Routes › GET /api/positioning/stocks › should calculate positioning score correctly

    expected 200 "OK", got 500 "Internal Server Error"

      246 |       const response = await request(app)
      247 |         .get("/api/positioning/stocks?symbol=AAPL")
    > 248 |         .expect(200);
          |          ^
      249 |       // Score = 50 + 30 + 15 + 10 + 15 = 120, capped at 100
      250 |       expect(response.body.positioning_score).toBe(100);
      251 |     });

      at Object.expect (tests/unit/routes/positioning.test.js:248:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Positioning Routes › GET /api/positioning/stocks › should handle null metrics gracefully

    expected 200 "OK", got 500 "Internal Server Error"

      264 |       const response = await request(app)
      265 |         .get("/api/positioning/stocks?symbol=TEST")
    > 266 |         .expect(200);
          |          ^
      267 |       // Should return neutral score when all null
      268 |       expect(response.body.positioning_score).toBe(50);
      269 |     });

      at Object.expect (tests/unit/routes/positioning.test.js:266:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  console.error
    Benchmark endpoint error: Error: Database connection failed
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/performance.test.js:251:23)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      177 |     });
      178 |   } catch (error) {
    > 179 |     console.error("Benchmark endpoint error:", error);
          |             ^
      180 |     res.status(500).json({
      181 |       success: false,
      182 |       error: "Failed to fetch benchmark data",

      at error (routes/performance.js:179:13)

  console.error
    Benchmark endpoint error: Error: Query timeout
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/performance.test.js:523:28)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34) {
      code: 'QUERY_TIMEOUT'
    }

      177 |     });
      178 |   } catch (error) {
    > 179 |     console.error("Benchmark endpoint error:", error);
          |             ^
      180 |     res.status(500).json({
      181 |       success: false,
      182 |       error: "Failed to fetch benchmark data",

      at error (routes/performance.js:179:13)

FAIL tests/unit/routes/performance.test.js
  Performance Routes Unit Tests
    GET /performance/health
      ✓ should return health status without authentication (3 ms)
    GET /performance
      ✓ should return performance API information without authentication (2 ms)
    GET /performance/benchmark (authenticated)
      ✕ should return benchmark comparison with default parameters (2 ms)
      ✕ should handle custom benchmark parameter (2 ms)
      ✕ should handle custom period parameter (2 ms)
      ✕ should handle invalid period gracefully (1 ms)
      ✕ should use authenticated user ID in query (1 ms)
      ✕ should handle empty portfolio data (1 ms)
      ✓ should handle database query errors (4 ms)
      ✕ should handle performance calculation errors (4 ms)
    GET /performance/analytics (authenticated)
      ✕ should return performance analytics (1 ms)
      ✕ should handle analytics calculation errors (2 ms)
    GET /performance/metrics (authenticated)
      ✕ should return system performance metrics (1 ms)
      ✕ should handle metrics collection errors (2 ms)
    GET /performance/attribution (authenticated)
      ✕ should return Brinson attribution analysis (3 ms)
      ✕ should handle custom benchmark for attribution (1 ms)
      ✕ should handle custom period for attribution (1 ms)
      ✕ should handle insufficient data for attribution (1 ms)
      ✕ should validate attribution parameters (1 ms)
    GET /performance/portfolio/:symbol (authenticated)
      ✕ should return symbol-specific performance (1 ms)
      ✕ should handle lowercase symbol conversion (1 ms)
      ✕ should handle symbol not found (2 ms)
    Authentication
      ✓ should allow public access to health endpoint (1 ms)
      ✓ should allow public access to root endpoint (1 ms)
      ✕ should require authentication for benchmark endpoint
    Parameter validation
      ✕ should validate benchmark symbol format (1 ms)
      ✕ should sanitize period parameter (1 ms)
    Error handling
      ✕ should handle database connection timeout (2 ms)
      ✕ should handle performance monitor failures (2 ms)
    Response format
      ✓ should return consistent JSON response format (1 ms)
      ✓ should include metadata in performance responses (1 ms)

  ● Performance Routes Unit Tests › GET /performance/benchmark (authenticated) › should return benchmark comparison with default parameters

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      184 |       expect(
      185 |         mockPerformanceMonitor.calculateBenchmarkComparison
    > 186 |       ).toHaveBeenCalled();
          |         ^
      187 |     });
      188 |     test("should handle custom benchmark parameter", async () => {
      189 |       mockQuery

      at Object.toHaveBeenCalled (tests/unit/routes/performance.test.js:186:9)

  ● Performance Routes Unit Tests › GET /performance/benchmark (authenticated) › should handle custom benchmark parameter

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "QQQ", Any<Array>
    Received
           1: "
          SELECT
            COALESCE(AVG(total_pnl), 0) as portfolio_return,
            COALESCE(STDDEV(total_pnl), 0) as portfolio_volatility,
            COUNT(*) as data_points
          FROM portfolio_performance
          WHERE total_pnl IS NOT NULL
            AND date >= CURRENT_DATE - INTERVAL '365 days'
        "
           2: "
          SELECT
            symbol,
            COALESCE(AVG(close), 0) as avg_price,
            COUNT(*) as trading_days
          FROM price_daily
          WHERE symbol = 'QQQ'
            AND date >= CURRENT_DATE - INTERVAL '365 days'
          GROUP BY symbol
        "

    Number of calls: 2

      194 |         .query({ benchmark: "QQQ" });
      195 |       expect(response.status).toBe(200);
    > 196 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      197 |         expect.stringContaining("QQQ"),
      198 |         expect.any(Array)
      199 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/performance.test.js:196:25)

  ● Performance Routes Unit Tests › GET /performance/benchmark (authenticated) › should handle custom period parameter

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "180", Any<Array>
    Received
           1: "
          SELECT
            COALESCE(AVG(total_pnl), 0) as portfolio_return,
            COALESCE(STDDEV(total_pnl), 0) as portfolio_volatility,
            COUNT(*) as data_points
          FROM portfolio_performance
          WHERE total_pnl IS NOT NULL
            AND date >= CURRENT_DATE - INTERVAL '180 days'
        "
           2: "
          SELECT
            symbol,
            COALESCE(AVG(close), 0) as avg_price,
            COUNT(*) as trading_days
          FROM price_daily
          WHERE symbol = 'SPY'
            AND date >= CURRENT_DATE - INTERVAL '180 days'
          GROUP BY symbol
        "

    Number of calls: 2

      207 |         .query({ period: "6m" });
      208 |       expect(response.status).toBe(200);
    > 209 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      210 |         expect.stringContaining("180"), // 6 months = 180 days
      211 |         expect.any(Array)
      212 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/performance.test.js:209:25)

  ● Performance Routes Unit Tests › GET /performance/benchmark (authenticated) › should handle invalid period gracefully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "365", Any<Array>
    Received
           1: "
          SELECT
            COALESCE(AVG(total_pnl), 0) as portfolio_return,
            COALESCE(STDDEV(total_pnl), 0) as portfolio_volatility,
            COUNT(*) as data_points
          FROM portfolio_performance
          WHERE total_pnl IS NOT NULL
            AND date >= CURRENT_DATE - INTERVAL '365 days'
        "
           2: "
          SELECT
            symbol,
            COALESCE(AVG(close), 0) as avg_price,
            COUNT(*) as trading_days
          FROM price_daily
          WHERE symbol = 'SPY'
            AND date >= CURRENT_DATE - INTERVAL '365 days'
          GROUP BY symbol
        "

    Number of calls: 2

      221 |       expect(response.status).toBe(200);
      222 |       // Should default to 365 days (1 year)
    > 223 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      224 |         expect.stringContaining("365"),
      225 |         expect.any(Array)
      226 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/performance.test.js:223:25)

  ● Performance Routes Unit Tests › GET /performance/benchmark (authenticated) › should use authenticated user ID in query

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "user_id", ArrayContaining ["test-user-123"]
    Received
           1: "
          SELECT
            COALESCE(AVG(total_pnl), 0) as portfolio_return,
            COALESCE(STDDEV(total_pnl), 0) as portfolio_volatility,
            COUNT(*) as data_points
          FROM portfolio_performance
          WHERE total_pnl IS NOT NULL
            AND date >= CURRENT_DATE - INTERVAL '365 days'
        "
           2: "
          SELECT
            symbol,
            COALESCE(AVG(close), 0) as avg_price,
            COUNT(*) as trading_days
          FROM price_daily
          WHERE symbol = 'SPY'
            AND date >= CURRENT_DATE - INTERVAL '365 days'
          GROUP BY symbol
        "

    Number of calls: 2

      231 |         .mockResolvedValueOnce({ rows: [] });
      232 |       await request(app).get("/performance/benchmark");
    > 233 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      234 |         expect.stringContaining("user_id"),
      235 |         expect.arrayContaining(["test-user-123"])
      236 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/performance.test.js:233:25)

  ● Performance Routes Unit Tests › GET /performance/benchmark (authenticated) › should handle empty portfolio data

    expect(received).toHaveProperty(path, value)

    Expected path: "message"
    Received path: []

    Expected value: "Insufficient data for benchmark comparison"
    Received value: {"data": {"benchmark": {"return": 0.1, "symbol": "SPY", "volatility": 0.15}, "comparison": {"alpha": 0, "beta": 1, "correlation": 0.75, "outperformance": -0.1, "period": "1y"}, "portfolio": {"return": 0, "sharpe_ratio": 0, "volatility": 0}}, "success": true, "timestamp": "2025-10-19T11:48:54.011Z"}

      243 |       expect(response.status).toBe(200);
      244 |       expect(response.body).toHaveProperty("success", true);
    > 245 |       expect(response.body).toHaveProperty(
          |                             ^
      246 |         "message",
      247 |         "Insufficient data for benchmark comparison"
      248 |       );

      at Object.toHaveProperty (tests/unit/routes/performance.test.js:245:29)

  ● Performance Routes Unit Tests › GET /performance/benchmark (authenticated) › should handle performance calculation errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      268 |       );
      269 |       const response = await request(app).get("/performance/benchmark");
    > 270 |       expect(response.status).toBe(500);
          |                               ^
      271 |       expect(response.body).toHaveProperty("success", false);
      272 |       expect(response.body.error).toContain("Failed to fetch performance benchmark data");
      273 |     });

      at Object.toBe (tests/unit/routes/performance.test.js:270:31)

  ● Performance Routes Unit Tests › GET /performance/analytics (authenticated) › should return performance analytics

    expect(received).toHaveProperty(path, value)

    Expected path: "total_return"
    Received path: []

    Expected value: 0.25
    Received value: {"benchmark_comparison": {"alpha": 0, "beta": 1, "vs_sp500": 0}, "max_drawdown": 0, "sharpe_ratio": 0, "total_pnl": 0, "total_transactions": 0, "volatility": 0}

      291 |       expect(response.body).toHaveProperty("success", true);
      292 |       expect(response.body).toHaveProperty("data");
    > 293 |       expect(response.body.data).toHaveProperty("total_return", 0.25);
          |                                  ^
      294 |       expect(response.body.data).toHaveProperty("volatility", 0.15);
      295 |       expect(
      296 |         mockPerformanceMonitor.getPerformanceAnalytics

      at Object.toHaveProperty (tests/unit/routes/performance.test.js:293:34)

  ● Performance Routes Unit Tests › GET /performance/analytics (authenticated) › should handle analytics calculation errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      302 |       );
      303 |       const response = await request(app).get("/performance/analytics");
    > 304 |       expect(response.status).toBe(500);
          |                               ^
      305 |       expect(response.body).toHaveProperty("success", false);
      306 |       expect(response.body.error).toContain("Failed to fetch performance analytics");
      307 |     });

      at Object.toBe (tests/unit/routes/performance.test.js:304:31)

  ● Performance Routes Unit Tests › GET /performance/metrics (authenticated) › should return system performance metrics

    expect(received).toHaveProperty(path, value)

    Expected path: "cpu_usage"
    Received path: []

    Expected value: 0.45
    Received value: {"calmar_ratio": 0, "max_drawdown": 0, "max_return": 0, "period": "1y", "return": 0, "sharpe_ratio": 0, "sortino_ratio": 0, "volatility": 0}

      324 |       expect(response.body).toHaveProperty("success", true);
      325 |       expect(response.body).toHaveProperty("data");
    > 326 |       expect(response.body.data).toHaveProperty("cpu_usage", 0.45);
          |                                  ^
      327 |       expect(response.body.data).toHaveProperty("api_response_time", 120);
      328 |       expect(mockPerformanceMonitor.getSystemMetrics).toHaveBeenCalled();
      329 |     });

      at Object.toHaveProperty (tests/unit/routes/performance.test.js:326:34)

  ● Performance Routes Unit Tests › GET /performance/metrics (authenticated) › should handle metrics collection errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      333 |       );
      334 |       const response = await request(app).get("/performance/metrics");
    > 335 |       expect(response.status).toBe(500);
          |                               ^
      336 |       expect(response.body).toHaveProperty("success", false);
      337 |       expect(response.body.error).toContain("Failed to retrieve performance metrics");
      338 |     });

      at Object.toBe (tests/unit/routes/performance.test.js:335:31)

  ● Performance Routes Unit Tests › GET /performance/attribution (authenticated) › should return Brinson attribution analysis

    expect(received).toHaveProperty(path)

    Expected path: "attribution_analysis"
    Received path: []

    Received value: {"attribution": {"asset_allocation": 0, "attribution_type": "sector", "interaction_effect": 0, "sector_attribution": [{"contribution": 0, "sector": "technology"}, {"contribution": 0, "sector": "healthcare"}, {"contribution": 0, "sector": "finance"}], "security_selection": 0, "style_attribution": {"blend": 0, "growth": 0, "value": 0}, "total_pnl": 0, "total_positions": 1}}

      369 |       expect(response.body).toHaveProperty("success", true);
      370 |       expect(response.body).toHaveProperty("data");
    > 371 |       expect(response.body.data).toHaveProperty("attribution_analysis");
          |                                  ^
      372 |       expect(response.body.data).toHaveProperty("summary");
      373 |       expect(response.body.data).toHaveProperty("methodology");
      374 |       // Check attribution analysis structure

      at Object.toHaveProperty (tests/unit/routes/performance.test.js:371:34)

  ● Performance Routes Unit Tests › GET /performance/attribution (authenticated) › should handle custom benchmark for attribution

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "QQQ", Any<Array>
    Received: "
          SELECT
            COALESCE(SUM(total_pnl), 0) as total_pnl,
            COUNT(*) as total_positions
          FROM portfolio_performance
          WHERE total_pnl IS NOT NULL
        "

    Number of calls: 1

      401 |       );
      402 |       expect(response.status).toBe(200);
    > 403 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      404 |         expect.stringContaining("QQQ"),
      405 |         expect.any(Array)
      406 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/performance.test.js:403:25)

  ● Performance Routes Unit Tests › GET /performance/attribution (authenticated) › should handle custom period for attribution

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "90", Any<Array>
    Received: "
          SELECT
            COALESCE(SUM(total_pnl), 0) as total_pnl,
            COUNT(*) as total_positions
          FROM portfolio_performance
          WHERE total_pnl IS NOT NULL
        "

    Number of calls: 1

      412 |       );
      413 |       expect(response.status).toBe(200);
    > 414 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      415 |         expect.stringContaining("90"), // 3 months = 90 days
      416 |         expect.any(Array)
      417 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/performance.test.js:414:25)

  ● Performance Routes Unit Tests › GET /performance/attribution (authenticated) › should handle insufficient data for attribution

    expect(received).toHaveProperty(path, value)

    Expected path: "message"
    Received path: []

    Expected value: "Insufficient data for attribution analysis"
    Received value: {"data": {"attribution": {"asset_allocation": 0, "attribution_type": "sector", "interaction_effect": 0, "sector_attribution": [{"contribution": 0, "sector": "technology"}, {"contribution": 0, "sector": "healthcare"}, {"contribution": 0, "sector": "finance"}], "security_selection": 0, "style_attribution": {"blend": 0, "growth": 0, "value": 0}, "total_pnl": 0, "total_positions": 1}}, "success": true, "timestamp": "2025-10-19T11:48:54.032Z"}

      422 |       expect(response.status).toBe(200);
      423 |       expect(response.body).toHaveProperty("success", true);
    > 424 |       expect(response.body).toHaveProperty(
          |                             ^
      425 |         "message",
      426 |         "Insufficient data for attribution analysis"
      427 |       );

      at Object.toHaveProperty (tests/unit/routes/performance.test.js:424:29)

  ● Performance Routes Unit Tests › GET /performance/attribution (authenticated) › should validate attribution parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 200

      432 |         "/performance/attribution?benchmark=invalid-symbol!@#"
      433 |       );
    > 434 |       expect(response.status).toBe(400);
          |                               ^
      435 |       expect(response.body).toHaveProperty("success", false);
      436 |       expect(response.body.error).toContain("Invalid benchmark symbol");
      437 |     });

      at Object.toBe (tests/unit/routes/performance.test.js:434:31)

  ● Performance Routes Unit Tests › GET /performance/portfolio/:symbol (authenticated) › should return symbol-specific performance

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      454 |       mockQuery.mockResolvedValueOnce(mockSymbolPerformance);
      455 |       const response = await request(app).get("/performance/portfolio/AAPL");
    > 456 |       expect(response.status).toBe(200);
          |                               ^
      457 |       expect(response.body).toHaveProperty("success", true);
      458 |       expect(response.body).toHaveProperty("data");
      459 |       expect(response.body.data).toHaveProperty("symbol", "AAPL");

      at Object.toBe (tests/unit/routes/performance.test.js:456:31)

  ● Performance Routes Unit Tests › GET /performance/portfolio/:symbol (authenticated) › should handle lowercase symbol conversion

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ArrayContaining ["test-user-123", "AAPL"]

    Number of calls: 0

      467 |       mockQuery.mockResolvedValueOnce({ rows: [] });
      468 |       await request(app).get("/performance/portfolio/aapl");
    > 469 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      470 |         expect.any(String),
      471 |         expect.arrayContaining(["test-user-123", "AAPL"]) // Should be uppercase
      472 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/performance.test.js:469:25)

  ● Performance Routes Unit Tests › GET /performance/portfolio/:symbol (authenticated) › should handle symbol not found

    expect(received).toHaveProperty(path, value)

    Expected path: "success"
    Received path: []

    Expected value: false
    Received value: {}

      476 |       const response = await request(app).get("/performance/portfolio/INVALID");
      477 |       expect(response.status).toBe(404);
    > 478 |       expect(response.body).toHaveProperty("success", false);
          |                             ^
      479 |       expect(response.body.error).toContain("No performance data found");
      480 |     });
      481 |   });

      at Object.toHaveProperty (tests/unit/routes/performance.test.js:478:29)

  ● Performance Routes Unit Tests › Authentication › should require authentication for benchmark endpoint

    ReferenceError: authenticateToken is not defined

      492 |     });
      493 |     test("should require authentication for benchmark endpoint", () => {
    > 494 |       expect(authenticateToken).toBeDefined();
          |              ^
      495 |       // Authentication is tested through successful requests in other tests
      496 |     });
      497 |   });

      at Object.authenticateToken (tests/unit/routes/performance.test.js:494:14)

  ● Performance Routes Unit Tests › Parameter validation › should validate benchmark symbol format

    expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 200

      501 |         .get("/performance/benchmark")
      502 |         .query({ benchmark: "invalid-benchmark-format!@#" });
    > 503 |       expect(response.status).toBe(400);
          |                               ^
      504 |       expect(response.body).toHaveProperty("success", false);
      505 |       expect(response.body.error).toContain("Invalid benchmark symbol");
      506 |     });

      at Object.toBe (tests/unit/routes/performance.test.js:503:31)

  ● Performance Routes Unit Tests › Parameter validation › should sanitize period parameter

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "365", Any<Array>
    Received
           1: "
          SELECT
            COALESCE(AVG(total_pnl), 0) as portfolio_return,
            COALESCE(STDDEV(total_pnl), 0) as portfolio_volatility,
            COUNT(*) as data_points
          FROM portfolio_performance
          WHERE total_pnl IS NOT NULL
            AND date >= CURRENT_DATE - INTERVAL '365 days'
        "
           2: "
          SELECT
            symbol,
            COALESCE(AVG(close), 0) as avg_price,
            COUNT(*) as trading_days
          FROM price_daily
          WHERE symbol = 'SPY'
            AND date >= CURRENT_DATE - INTERVAL '365 days'
          GROUP BY symbol
        "

    Number of calls: 2

      513 |         .query({ period: "1y; DROP TABLE portfolio; --" });
      514 |       // Should handle malicious input by using predefined period values
    > 515 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      516 |         expect.stringContaining("365"), // Should default to 1y = 365 days
      517 |         expect.any(Array)
      518 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/performance.test.js:515:25)

  ● Performance Routes Unit Tests › Error handling › should handle database connection timeout

    expect(received).toContain(expected) // indexOf

    Expected substring: "timeout"
    Received string:    "Failed to fetch benchmark data"

      527 |       expect(response.status).toBe(500);
      528 |       expect(response.body).toHaveProperty("success", false);
    > 529 |       expect(response.body.error).toContain("timeout");
          |                                   ^
      530 |     });
      531 |     test("should handle performance monitor failures", async () => {
      532 |       mockPerformanceMonitor.getSystemMetrics.mockRejectedValue(

      at Object.toContain (tests/unit/routes/performance.test.js:529:35)

  ● Performance Routes Unit Tests › Error handling › should handle performance monitor failures

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      534 |       );
      535 |       const response = await request(app).get("/performance/metrics");
    > 536 |       expect(response.status).toBe(500);
          |                               ^
      537 |       expect(response.body).toHaveProperty("success", false);
      538 |       expect(response.body.error).toContain("Monitor unavailable");
      539 |     });

      at Object.toBe (tests/unit/routes/performance.test.js:536:31)

FAIL tests/integration/auth/api-key-integration.test.js
  API Key Integration Tests
    Portfolio Holdings Endpoint Authentication
      ✕ should authenticate successfully with dev bypass token
      ✕ should authenticate successfully with test token
      ✕ should reject requests without authentication
      ✕ should reject requests with invalid token
    Other Protected Endpoints Authentication
      ✕ /api/portfolio should authenticate with dev bypass token (6 ms)
      ✕ /api/portfolio should authenticate with test token
      ✕ /api/portfolio/summary should authenticate with dev bypass token
      ✕ /api/portfolio/summary should authenticate with test token
      ✕ /api/watchlist should authenticate with dev bypass token
      ✕ /api/watchlist should authenticate with test token (1 ms)
    Authentication Middleware Consistency
      ✕ both tokens should work consistently across multiple requests
      ✕ should handle mixed valid and invalid tokens correctly
    Token Format Validation
      ✕ should handle Bearer token format correctly
      ✕ should handle case sensitivity correctly
    Alpaca API Integration
      ✕ should use provided Alpaca credentials for testing

  ● API Key Integration Tests › Portfolio Holdings Endpoint Authentication › should authenticate successfully with dev bypass token

    ReferenceError: query is not defined

      28 |   beforeEach(() => {
      29 |     jest.clearAllMocks();
    > 30 |     query.mockImplementation((sql, params) => {
         |     ^
      31 |       // Default: return empty rows for all queries
      32 |       if (sql.includes("information_schema.tables")) {
      33 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/auth/api-key-integration.test.js:30:5)

  ● API Key Integration Tests › Portfolio Holdings Endpoint Authentication › should authenticate successfully with test token

    ReferenceError: query is not defined

      28 |   beforeEach(() => {
      29 |     jest.clearAllMocks();
    > 30 |     query.mockImplementation((sql, params) => {
         |     ^
      31 |       // Default: return empty rows for all queries
      32 |       if (sql.includes("information_schema.tables")) {
      33 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/auth/api-key-integration.test.js:30:5)

  ● API Key Integration Tests › Portfolio Holdings Endpoint Authentication › should reject requests without authentication

    ReferenceError: query is not defined

      28 |   beforeEach(() => {
      29 |     jest.clearAllMocks();
    > 30 |     query.mockImplementation((sql, params) => {
         |     ^
      31 |       // Default: return empty rows for all queries
      32 |       if (sql.includes("information_schema.tables")) {
      33 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/auth/api-key-integration.test.js:30:5)

  ● API Key Integration Tests › Portfolio Holdings Endpoint Authentication › should reject requests with invalid token

    ReferenceError: query is not defined

      28 |   beforeEach(() => {
      29 |     jest.clearAllMocks();
    > 30 |     query.mockImplementation((sql, params) => {
         |     ^
      31 |       // Default: return empty rows for all queries
      32 |       if (sql.includes("information_schema.tables")) {
      33 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/auth/api-key-integration.test.js:30:5)

  ● API Key Integration Tests › Other Protected Endpoints Authentication › /api/portfolio should authenticate with dev bypass token

    ReferenceError: query is not defined

      28 |   beforeEach(() => {
      29 |     jest.clearAllMocks();
    > 30 |     query.mockImplementation((sql, params) => {
         |     ^
      31 |       // Default: return empty rows for all queries
      32 |       if (sql.includes("information_schema.tables")) {
      33 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/auth/api-key-integration.test.js:30:5)

  ● API Key Integration Tests › Other Protected Endpoints Authentication › /api/portfolio should authenticate with test token

    ReferenceError: query is not defined

      28 |   beforeEach(() => {
      29 |     jest.clearAllMocks();
    > 30 |     query.mockImplementation((sql, params) => {
         |     ^
      31 |       // Default: return empty rows for all queries
      32 |       if (sql.includes("information_schema.tables")) {
      33 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/auth/api-key-integration.test.js:30:5)

  ● API Key Integration Tests › Other Protected Endpoints Authentication › /api/portfolio/summary should authenticate with dev bypass token

    ReferenceError: query is not defined

      28 |   beforeEach(() => {
      29 |     jest.clearAllMocks();
    > 30 |     query.mockImplementation((sql, params) => {
         |     ^
      31 |       // Default: return empty rows for all queries
      32 |       if (sql.includes("information_schema.tables")) {
      33 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/auth/api-key-integration.test.js:30:5)

  ● API Key Integration Tests › Other Protected Endpoints Authentication › /api/portfolio/summary should authenticate with test token

    ReferenceError: query is not defined

      28 |   beforeEach(() => {
      29 |     jest.clearAllMocks();
    > 30 |     query.mockImplementation((sql, params) => {
         |     ^
      31 |       // Default: return empty rows for all queries
      32 |       if (sql.includes("information_schema.tables")) {
      33 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/auth/api-key-integration.test.js:30:5)

  ● API Key Integration Tests › Other Protected Endpoints Authentication › /api/watchlist should authenticate with dev bypass token

    ReferenceError: query is not defined

      28 |   beforeEach(() => {
      29 |     jest.clearAllMocks();
    > 30 |     query.mockImplementation((sql, params) => {
         |     ^
      31 |       // Default: return empty rows for all queries
      32 |       if (sql.includes("information_schema.tables")) {
      33 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/auth/api-key-integration.test.js:30:5)

  ● API Key Integration Tests › Other Protected Endpoints Authentication › /api/watchlist should authenticate with test token

    ReferenceError: query is not defined

      28 |   beforeEach(() => {
      29 |     jest.clearAllMocks();
    > 30 |     query.mockImplementation((sql, params) => {
         |     ^
      31 |       // Default: return empty rows for all queries
      32 |       if (sql.includes("information_schema.tables")) {
      33 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/auth/api-key-integration.test.js:30:5)

  ● API Key Integration Tests › Authentication Middleware Consistency › both tokens should work consistently across multiple requests

    ReferenceError: query is not defined

      28 |   beforeEach(() => {
      29 |     jest.clearAllMocks();
    > 30 |     query.mockImplementation((sql, params) => {
         |     ^
      31 |       // Default: return empty rows for all queries
      32 |       if (sql.includes("information_schema.tables")) {
      33 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/auth/api-key-integration.test.js:30:5)

  ● API Key Integration Tests › Authentication Middleware Consistency › should handle mixed valid and invalid tokens correctly

    ReferenceError: query is not defined

      28 |   beforeEach(() => {
      29 |     jest.clearAllMocks();
    > 30 |     query.mockImplementation((sql, params) => {
         |     ^
      31 |       // Default: return empty rows for all queries
      32 |       if (sql.includes("information_schema.tables")) {
      33 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/auth/api-key-integration.test.js:30:5)

  ● API Key Integration Tests › Token Format Validation › should handle Bearer token format correctly

    ReferenceError: query is not defined

      28 |   beforeEach(() => {
      29 |     jest.clearAllMocks();
    > 30 |     query.mockImplementation((sql, params) => {
         |     ^
      31 |       // Default: return empty rows for all queries
      32 |       if (sql.includes("information_schema.tables")) {
      33 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/auth/api-key-integration.test.js:30:5)

  ● API Key Integration Tests › Token Format Validation › should handle case sensitivity correctly

    ReferenceError: query is not defined

      28 |   beforeEach(() => {
      29 |     jest.clearAllMocks();
    > 30 |     query.mockImplementation((sql, params) => {
         |     ^
      31 |       // Default: return empty rows for all queries
      32 |       if (sql.includes("information_schema.tables")) {
      33 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/auth/api-key-integration.test.js:30:5)

  ● API Key Integration Tests › Alpaca API Integration › should use provided Alpaca credentials for testing

    ReferenceError: query is not defined

      28 |   beforeEach(() => {
      29 |     jest.clearAllMocks();
    > 30 |     query.mockImplementation((sql, params) => {
         |     ^
      31 |       // Default: return empty rows for all queries
      32 |       if (sql.includes("information_schema.tables")) {
      33 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/auth/api-key-integration.test.js:30:5)

  console.warn
    Economic data count query returned null result, database may be unavailable

      162 |     // Add null safety check
      163 |     if (!countResult || !countResult.rows || countResult.rows.length === 0) {
    > 164 |       console.warn(
          |               ^
      165 |         "Economic data count query returned null result, database may be unavailable"
      166 |       );
      167 |       return res.status(503).json({

      at warn (routes/economic.js:164:15)

  console.error
    Economic data query failed: Database connection failed

      150 |       ]);
      151 |     } catch (error) {
    > 152 |       console.error("Economic data query failed:", error.message);
          |               ^
      153 |       return res.status(500).json({
      154 |         success: false,
      155 |         error: "Database error",

      at error (routes/economic.js:152:15)

  console.warn
    Economic data count query returned null result, database may be unavailable

      162 |     // Add null safety check
      163 |     if (!countResult || !countResult.rows || countResult.rows.length === 0) {
    > 164 |       console.warn(
          |               ^
      165 |         "Economic data count query returned null result, database may be unavailable"
      166 |       );
      167 |       return res.status(503).json({

      at warn (routes/economic.js:164:15)

  console.log
    Economic data endpoint called with limit: 50

      at log (routes/economic.js:241:13)

  console.log
    Economic data endpoint called with limit: 100

      at log (routes/economic.js:241:13)

  console.log
    Economic data endpoint called with limit: 10

      at log (routes/economic.js:241:13)

  console.log
    Economic data endpoint called with limit: 50

      at log (routes/economic.js:241:13)

  console.log
    Economic data endpoint called with limit: 50

      at log (routes/economic.js:241:13)

  console.log
    Economic data endpoint called with limit: 50

      at log (routes/economic.js:241:13)

  console.log
    Economic data endpoint called with limit: 50

      at log (routes/economic.js:241:13)

  console.log
    Economic data endpoint called with limit: 50

      at log (routes/economic.js:241:13)

  console.error
    Error fetching economic data: Error: Query timeout
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/economic.test.js:261:35)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      264 |     });
      265 |   } catch (error) {
    > 266 |     console.error("Error fetching economic data:", error);
          |             ^
      267 |     // Return database error for test compatibility
      268 |     res.status(500).json({
      269 |       success: false,

      at error (routes/economic.js:266:13)

  console.log
    Economic data endpoint called with limit: 50

      at log (routes/economic.js:241:13)

  console.log
    Economic data endpoint called with limit: 50

      at log (routes/economic.js:241:13)

  console.log
    Economic data endpoint called with limit: 50

      at log (routes/economic.js:241:13)

  console.log
    Economic data endpoint called with limit: 50

      at log (routes/economic.js:241:13)

  console.log
    Economic data endpoint called with limit: 100

      at log (routes/economic.js:241:13)

FAIL tests/unit/routes/economic.test.js
  Economic Routes Unit Tests
    GET /economic
      ✓ should return economic data with pagination (4 ms)
      ✓ should handle pagination parameters (1 ms)
      ✓ should filter by series parameter (2 ms)
      ✓ should handle database unavailable gracefully (1 ms)
      ✓ should return 404 when no economic data found (1 ms)
      ✓ should return 404 when null economic data result (4 ms)
      ✓ should handle database errors (2 ms)
      ✓ should handle count query returning empty result (2 ms)
    GET /economic/data
      ✓ should return economic data for DataValidation page (3 ms)
      ✓ should handle limit parameter with maximum cap (2 ms)
      ✓ should handle small limit parameter (2 ms)
      ✓ should use default limit when not provided (2 ms)
      ✓ should return 404 when no data found (2 ms)
      ✓ should return 404 when null result (2 ms)
      ✓ should return 404 when undefined rows (3 ms)
      ✓ should handle database errors (11 ms)
      ✓ should include timestamp in ISO format (3 ms)
    Edge cases and error handling
      ✓ should handle invalid page numbers (1 ms)
      ✓ should handle negative page and limit (1 ms)
      ✕ should handle very large page numbers (2 ms)
      ✓ should handle special characters in series parameter (1 ms)
      ✓ should handle empty series parameter (1 ms)
      ✓ should handle invalid limit in data endpoint (5 ms)
    Response format validation
      ✓ should return consistent JSON response format (1 ms)
      ✓ should maintain consistent error response format (2 ms)
      ✕ should return proper data structure (2 ms)
    Data integrity tests
      ✓ should preserve numeric values correctly (2 ms)
      ✓ should handle large datasets (2 ms)
      ✓ should calculate pagination correctly (1 ms)

  ● Economic Routes Unit Tests › Edge cases and error handling › should handle very large page numbers

    expect(received).toMatchObject(expected)

    - Expected  - 2
    + Received  + 2

      Object {
        "hasNext": false,
        "hasPrev": true,
        "limit": 25,
        "page": 999,
    -   "total": 10,
    -   "totalPages": 1,
    +   "total": 50,
    +   "totalPages": 2,
      }

      315 |         .mockResolvedValueOnce({ rows: mockCount });
      316 |       const response = await request(app).get("/economic?page=999&limit=25");
    > 317 |       expect(response.body.pagination).toMatchObject({
          |                                        ^
      318 |         page: 999,
      319 |         limit: 25,
      320 |         total: 10,

      at Object.toMatchObject (tests/unit/routes/economic.test.js:317:40)

  ● Economic Routes Unit Tests › Response format validation › should return proper data structure

    expect(received).toHaveProperty(path)

    Expected path: "date"
    Received path: []

    Received value: {"total": "1"}

      400 |       expect(response.body.data.length).toBeGreaterThanOrEqual(0);
      401 |       expect(response.body.data[0] || {}).toBeDefined();
    > 402 |       expect(response.body.data[0]).toHaveProperty("date");
          |                                     ^
      403 |       expect(response.body.data[0]).toHaveProperty("value");
      404 |     });
      405 |   });

      at Object.toHaveProperty (tests/unit/routes/economic.test.js:402:37)

FAIL tests/unit/utils/apiKeyService.test.js
  API Key Service
    validateJwtToken
      ✕ should validate JWT token in test environment
      ✕ should reject invalid JWT tokens (1 ms)
      ✕ should handle empty or invalid token input
      ✕ should accept dev-bypass-token in development
    storeApiKey
      ✕ should store API key successfully
      ✕ should validate input parameters
      ✕ should validate provider name for SQL injection
      ✕ should validate required fields
      ✕ should validate field lengths
      ✕ should handle JWT validation failure
      ✕ should handle database errors
    getApiKey
      ✕ should retrieve API key successfully
      ✕ should return null for non-existent keys
      ✕ should handle JWT validation failure
      ✕ should update last used timestamp
    validateApiKey
      ✕ should validate API key successfully (5 ms)
      ✕ should handle API key not configured
      ✕ should handle JWT validation failure (1 ms)
      ✕ should test connection when requested
    deleteApiKey
      ✕ should delete API key successfully
      ✕ should handle deletion of non-existent key
      ✕ should handle JWT validation failure gracefully
      ✕ should handle database errors
    listProviders
      ✕ should return list of configured providers (1 ms)
      ✕ should return empty array for no providers
      ✕ should handle JWT validation failure
      ✕ should handle database unavailable gracefully
    getDecryptedApiKey
      ✕ should retrieve API key by user ID
      ✕ should return null for non-existent key
    cache management
      ✕ should invalidate session cache
      ✕ should clear all caches
    health status
      ✕ should return health status
    circuit breaker functionality
      ✕ should handle circuit breaker failures
      ✕ should test JWT circuit breaker functionality
    security features
      ✕ should use different salts for different users
      ✕ should sanitize log output
      ✕ should validate input lengths
    encryption and decryption
      ✕ should handle production encryption mode
      ✕ should handle encryption key from environment
      ✕ should handle secrets manager errors
    production JWT verification
      ✕ should handle Cognito JWT verification
      ✕ should handle Cognito JWT verification failure
      ✕ should use cached JWT session
    edge cases and error handling
      ✕ should handle database null result
      ✕ should handle missing required fields for provider
      ✕ should handle connection test for alpaca
    audit logging
      ✕ should log audit events
      ✕ should handle audit logging errors gracefully
    development mode features
      ✕ should handle development bypass token
      ✕ should reset circuit breaker in development
    provider specific functionality
      ✕ should handle different provider required fields
      ✕ should handle unknown provider gracefully

  ● API Key Service › validateJwtToken › should validate JWT token in test environment

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › validateJwtToken › should reject invalid JWT tokens

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › validateJwtToken › should handle empty or invalid token input

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › validateJwtToken › should accept dev-bypass-token in development

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › storeApiKey › should store API key successfully

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › storeApiKey › should validate input parameters

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › storeApiKey › should validate provider name for SQL injection

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › storeApiKey › should validate required fields

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › storeApiKey › should validate field lengths

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › storeApiKey › should handle JWT validation failure

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › storeApiKey › should handle database errors

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › getApiKey › should retrieve API key successfully

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › getApiKey › should return null for non-existent keys

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › getApiKey › should handle JWT validation failure

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › getApiKey › should update last used timestamp

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › validateApiKey › should validate API key successfully

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › validateApiKey › should handle API key not configured

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › validateApiKey › should handle JWT validation failure

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › validateApiKey › should test connection when requested

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › deleteApiKey › should delete API key successfully

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › deleteApiKey › should handle deletion of non-existent key

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › deleteApiKey › should handle JWT validation failure gracefully

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › deleteApiKey › should handle database errors

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › listProviders › should return list of configured providers

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › listProviders › should return empty array for no providers

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › listProviders › should handle JWT validation failure

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › listProviders › should handle database unavailable gracefully

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › getDecryptedApiKey › should retrieve API key by user ID

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › getDecryptedApiKey › should return null for non-existent key

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › cache management › should invalidate session cache

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › cache management › should clear all caches

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › health status › should return health status

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › circuit breaker functionality › should handle circuit breaker failures

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › circuit breaker functionality › should test JWT circuit breaker functionality

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › security features › should use different salts for different users

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › security features › should sanitize log output

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › security features › should validate input lengths

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › encryption and decryption › should handle production encryption mode

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › encryption and decryption › should handle encryption key from environment

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › encryption and decryption › should handle secrets manager errors

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › production JWT verification › should handle Cognito JWT verification

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › production JWT verification › should handle Cognito JWT verification failure

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › production JWT verification › should use cached JWT session

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › edge cases and error handling › should handle database null result

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › edge cases and error handling › should handle missing required fields for provider

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › edge cases and error handling › should handle connection test for alpaca

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › audit logging › should log audit events

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › audit logging › should handle audit logging errors gracefully

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › development mode features › should handle development bypass token

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › development mode features › should reset circuit breaker in development

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › provider specific functionality › should handle different provider required fields

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › provider specific functionality › should handle unknown provider gracefully

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

FAIL tests/performance.test.js
  API Performance Tests
    Response Time Tests
      ✕ health endpoint should respond quickly (< 200ms) (40 ms)
      ✕ stocks list should respond acceptably (< 1000ms) (2 ms)
      ✕ stock detail should respond quickly (< 200ms) (1 ms)
      ✕ metrics endpoint should respond acceptably (< 1000ms) (1 ms)
      ✕ signals endpoint should avoid timeout (< 25000ms) (1 ms)
      ✕ market overview should respond within timeout (< 25000ms) (1 ms)
      ✕ market sectors should respond acceptably (< 1000ms) (1 ms)
      ✕ market indices should respond acceptably (< 1000ms) (1 ms)
      ✕ technical daily should respond within timeout (< 25000ms) (1 ms)
      ✕ economic indicators should respond acceptably (< 1000ms) (1 ms)
    Throughput Tests
      ✕ should handle 10 concurrent health checks (2 ms)
      ✕ should handle 5 concurrent stock queries (6 ms)
    Data Volume Tests
      ✕ should handle large stocks list (50 items) within timeout (2 ms)
      ✕ should handle signals query with 50 results within timeout (1 ms)
    Edge Case Performance
      ✕ should handle non-existent stock gracefully and quickly (1 ms)
      ✕ should handle empty search gracefully (1 ms)
    Database Query Performance
      ✕ signals performance endpoint should complete within timeout (1 ms)
      ✕ market overview aggregation should be efficient (1 ms)

  ● API Performance Tests › Response Time Tests › health endpoint should respond quickly (< 200ms)

    connect ECONNREFUSED 127.0.0.1:5001

      20 |     it('health endpoint should respond quickly (< 200ms)', async () => {
      21 |       const start = Date.now();
    > 22 |       const response = await axios.get(`${API_BASE}/../health`);
         |                        ^
      23 |       const elapsed = Date.now() - start;
      24 |
      25 |       expect(response.status).toBe(200);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
      at Object.<anonymous> (tests/performance.test.js:22:24)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



  ● API Performance Tests › Response Time Tests › stocks list should respond acceptably (< 1000ms)

    connect ECONNREFUSED 127.0.0.1:5001

      30 |     it('stocks list should respond acceptably (< 1000ms)', async () => {
      31 |       const start = Date.now();
    > 32 |       const response = await axios.get(`${API_BASE}/stocks?limit=10`);
         |                        ^
      33 |       const elapsed = Date.now() - start;
      34 |
      35 |       expect(response.status).toBe(200);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
      at Object.<anonymous> (tests/performance.test.js:32:24)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



  ● API Performance Tests › Response Time Tests › stock detail should respond quickly (< 200ms)

    connect ECONNREFUSED 127.0.0.1:5001

      40 |     it('stock detail should respond quickly (< 200ms)', async () => {
      41 |       const start = Date.now();
    > 42 |       const response = await axios.get(`${API_BASE}/stocks?symbol=GOOGL`);
         |                        ^
      43 |       const elapsed = Date.now() - start;
      44 |
      45 |       expect(response.status).toBe(200);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
      at Object.<anonymous> (tests/performance.test.js:42:24)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



  ● API Performance Tests › Response Time Tests › metrics endpoint should respond acceptably (< 1000ms)

    connect ECONNREFUSED 127.0.0.1:5001

      50 |     it('metrics endpoint should respond acceptably (< 1000ms)', async () => {
      51 |       const start = Date.now();
    > 52 |       const response = await axios.get(`${API_BASE}/metrics/GOOGL`);
         |                        ^
      53 |       const elapsed = Date.now() - start;
      54 |
      55 |       expect(response.status).toBe(200);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
      at Object.<anonymous> (tests/performance.test.js:52:24)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



  ● API Performance Tests › Response Time Tests › signals endpoint should avoid timeout (< 25000ms)

    connect ECONNREFUSED 127.0.0.1:5001

      60 |     it('signals endpoint should avoid timeout (< 25000ms)', async () => {
      61 |       const start = Date.now();
    > 62 |       const response = await axios.get(`${API_BASE}/signals?timeframe=daily&limit=10`);
         |                        ^
      63 |       const elapsed = Date.now() - start;
      64 |
      65 |       expect(response.status).toBe(200);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
      at Object.<anonymous> (tests/performance.test.js:62:24)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



  ● API Performance Tests › Response Time Tests › market overview should respond within timeout (< 25000ms)

    connect ECONNREFUSED 127.0.0.1:5001

      70 |     it('market overview should respond within timeout (< 25000ms)', async () => {
      71 |       const start = Date.now();
    > 72 |       const response = await axios.get(`${API_BASE}/market/overview`);
         |                        ^
      73 |       const elapsed = Date.now() - start;
      74 |
      75 |       expect(response.status).toBe(200);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
      at Object.<anonymous> (tests/performance.test.js:72:24)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



  ● API Performance Tests › Response Time Tests › market sectors should respond acceptably (< 1000ms)

    connect ECONNREFUSED 127.0.0.1:5001

      80 |     it('market sectors should respond acceptably (< 1000ms)', async () => {
      81 |       const start = Date.now();
    > 82 |       const response = await axios.get(`${API_BASE}/market/sectors`);
         |                        ^
      83 |       const elapsed = Date.now() - start;
      84 |
      85 |       expect(response.status).toBe(200);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
      at Object.<anonymous> (tests/performance.test.js:82:24)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



  ● API Performance Tests › Response Time Tests › market indices should respond acceptably (< 1000ms)

    connect ECONNREFUSED 127.0.0.1:5001

      90 |     it('market indices should respond acceptably (< 1000ms)', async () => {
      91 |       const start = Date.now();
    > 92 |       const response = await axios.get(`${API_BASE}/market/indices`);
         |                        ^
      93 |       const elapsed = Date.now() - start;
      94 |
      95 |       expect(response.status).toBe(200);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
      at Object.<anonymous> (tests/performance.test.js:92:24)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



  ● API Performance Tests › Response Time Tests › technical daily should respond within timeout (< 25000ms)

    connect ECONNREFUSED 127.0.0.1:5001

      100 |     it('technical daily should respond within timeout (< 25000ms)', async () => {
      101 |       const start = Date.now();
    > 102 |       const response = await axios.get(`${API_BASE}/technical/daily?page=1&limit=10`);
          |                        ^
      103 |       const elapsed = Date.now() - start;
      104 |
      105 |       expect(response.status).toBe(200);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
      at Object.<anonymous> (tests/performance.test.js:102:24)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



  ● API Performance Tests › Response Time Tests › economic indicators should respond acceptably (< 1000ms)

    connect ECONNREFUSED 127.0.0.1:5001

      110 |     it('economic indicators should respond acceptably (< 1000ms)', async () => {
      111 |       const start = Date.now();
    > 112 |       const response = await axios.get(`${API_BASE}/economic/indicators`);
          |                        ^
      113 |       const elapsed = Date.now() - start;
      114 |
      115 |       expect(response.status).toBe(200);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
      at Object.<anonymous> (tests/performance.test.js:112:24)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



  ● API Performance Tests › Throughput Tests › should handle 10 concurrent health checks

    connect ECONNREFUSED 127.0.0.1:5001

      126 |       );
      127 |
    > 128 |       const responses = await Promise.all(promises);
          |                         ^
      129 |       const elapsed = Date.now() - start;
      130 |
      131 |       expect(responses.every(r => r.status === 200)).toBe(true);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
          at async Promise.all (index 0)
      at Object.<anonymous> (tests/performance.test.js:128:25)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



  ● API Performance Tests › Throughput Tests › should handle 5 concurrent stock queries

    connect ECONNREFUSED 127.0.0.1:5001

      142 |       );
      143 |
    > 144 |       const responses = await Promise.all(promises);
          |                         ^
      145 |       const elapsed = Date.now() - start;
      146 |
      147 |       expect(responses.every(r => r.status === 200)).toBe(true);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
          at async Promise.all (index 0)
      at Object.<anonymous> (tests/performance.test.js:144:25)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



  ● API Performance Tests › Data Volume Tests › should handle large stocks list (50 items) within timeout

    connect ECONNREFUSED 127.0.0.1:5001

      154 |     it('should handle large stocks list (50 items) within timeout', async () => {
      155 |       const start = Date.now();
    > 156 |       const response = await axios.get(`${API_BASE}/stocks?limit=50`);
          |                        ^
      157 |       const elapsed = Date.now() - start;
      158 |
      159 |       expect(response.status).toBe(200);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
      at Object.<anonymous> (tests/performance.test.js:156:24)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



  ● API Performance Tests › Data Volume Tests › should handle signals query with 50 results within timeout

    connect ECONNREFUSED 127.0.0.1:5001

      166 |     it('should handle signals query with 50 results within timeout', async () => {
      167 |       const start = Date.now();
    > 168 |       const response = await axios.get(`${API_BASE}/signals?timeframe=daily&limit=50`);
          |                        ^
      169 |       const elapsed = Date.now() - start;
      170 |
      171 |       expect(response.status).toBe(200);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
      at Object.<anonymous> (tests/performance.test.js:168:24)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



  ● API Performance Tests › Edge Case Performance › should handle non-existent stock gracefully and quickly

    connect ECONNREFUSED 127.0.0.1:5001

      178 |     it('should handle non-existent stock gracefully and quickly', async () => {
      179 |       const start = Date.now();
    > 180 |       const response = await axios.get(`${API_BASE}/stocks?symbol=NONEXISTENT99999`);
          |                        ^
      181 |       const elapsed = Date.now() - start;
      182 |
      183 |       expect(response.status).toBe(200);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
      at Object.<anonymous> (tests/performance.test.js:180:24)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



  ● API Performance Tests › Edge Case Performance › should handle empty search gracefully

    connect ECONNREFUSED 127.0.0.1:5001

      188 |     it('should handle empty search gracefully', async () => {
      189 |       const start = Date.now();
    > 190 |       const response = await axios.get(`${API_BASE}/stocks?search=`);
          |                        ^
      191 |       const elapsed = Date.now() - start;
      192 |
      193 |       expect(response.status).toBe(200);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
      at Object.<anonymous> (tests/performance.test.js:190:24)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



  ● API Performance Tests › Database Query Performance › signals performance endpoint should complete within timeout

    connect ECONNREFUSED 127.0.0.1:5001

      200 |     it('signals performance endpoint should complete within timeout', async () => {
      201 |       const start = Date.now();
    > 202 |       const response = await axios.get(`${API_BASE}/signals/performance`);
          |                        ^
      203 |       const elapsed = Date.now() - start;
      204 |
      205 |       expect(response.status).toBe(200);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
      at Object.<anonymous> (tests/performance.test.js:202:24)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



  ● API Performance Tests › Database Query Performance › market overview aggregation should be efficient

    connect ECONNREFUSED 127.0.0.1:5001

      210 |     it('market overview aggregation should be efficient', async () => {
      211 |       const start = Date.now();
    > 212 |       const response = await axios.get(`${API_BASE}/market/overview`);
          |                        ^
      213 |       const elapsed = Date.now() - start;
      214 |
      215 |       expect(response.status).toBe(200);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
      at Object.<anonymous> (tests/performance.test.js:212:24)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



FAIL tests/integration/data-pipeline.integration.test.js
  ● Data Pipeline Integration - End-to-End › Growth Metrics Data Flow › should have growth metrics loaded for test symbols

    ReferenceError: query is not defined

      34 |   beforeEach(() => {
      35 |     jest.clearAllMocks();
    > 36 |     query.mockImplementation((sql, params) => {
         |     ^
      37 |       // Default: return empty rows for all queries
      38 |       if (sql.includes("information_schema.tables")) {
      39 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/data-pipeline.integration.test.js:36:5)

  ● Data Pipeline Integration - End-to-End › Growth Metrics Data Flow › growth metrics should have required fields without NULL defaults

    ReferenceError: query is not defined

      34 |   beforeEach(() => {
      35 |     jest.clearAllMocks();
    > 36 |     query.mockImplementation((sql, params) => {
         |     ^
      37 |       // Default: return empty rows for all queries
      38 |       if (sql.includes("information_schema.tables")) {
      39 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/data-pipeline.integration.test.js:36:5)

  ● Data Pipeline Integration - End-to-End › Risk Metrics Data Flow › should have risk metrics loaded

    ReferenceError: query is not defined

      34 |   beforeEach(() => {
      35 |     jest.clearAllMocks();
    > 36 |     query.mockImplementation((sql, params) => {
         |     ^
      37 |       // Default: return empty rows for all queries
      38 |       if (sql.includes("information_schema.tables")) {
      39 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/data-pipeline.integration.test.js:36:5)

  ● Data Pipeline Integration - End-to-End › Risk Metrics Data Flow › risk metrics API should return complete risk inputs

    ReferenceError: query is not defined

      34 |   beforeEach(() => {
      35 |     jest.clearAllMocks();
    > 36 |     query.mockImplementation((sql, params) => {
         |     ^
      37 |       // Default: return empty rows for all queries
      38 |       if (sql.includes("information_schema.tables")) {
      39 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/data-pipeline.integration.test.js:36:5)

  ● Data Pipeline Integration - End-to-End › Value Metrics Data Flow › should have value metrics with legitimate data (not fake hardcoded)

    ReferenceError: query is not defined

      34 |   beforeEach(() => {
      35 |     jest.clearAllMocks();
    > 36 |     query.mockImplementation((sql, params) => {
         |     ^
      37 |       // Default: return empty rows for all queries
      38 |       if (sql.includes("information_schema.tables")) {
      39 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/data-pipeline.integration.test.js:36:5)

  ● Data Pipeline Integration - End-to-End › Schema Alignment › stock_scores table should have all required columns

    ReferenceError: query is not defined

      34 |   beforeEach(() => {
      35 |     jest.clearAllMocks();
    > 36 |     query.mockImplementation((sql, params) => {
         |     ^
      37 |       // Default: return empty rows for all queries
      38 |       if (sql.includes("information_schema.tables")) {
      39 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/data-pipeline.integration.test.js:36:5)

  ● Data Pipeline Integration - End-to-End › Schema Alignment › growth_metrics table schema should be consistent

    ReferenceError: query is not defined

      34 |   beforeEach(() => {
      35 |     jest.clearAllMocks();
    > 36 |     query.mockImplementation((sql, params) => {
         |     ^
      37 |       // Default: return empty rows for all queries
      38 |       if (sql.includes("information_schema.tables")) {
      39 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/data-pipeline.integration.test.js:36:5)

  ● Data Pipeline Integration - End-to-End › Schema Alignment › risk_metrics table should have all risk components

    ReferenceError: query is not defined

      34 |   beforeEach(() => {
      35 |     jest.clearAllMocks();
    > 36 |     query.mockImplementation((sql, params) => {
         |     ^
      37 |       // Default: return empty rows for all queries
      38 |       if (sql.includes("information_schema.tables")) {
      39 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/data-pipeline.integration.test.js:36:5)

  ● Data Pipeline Integration - End-to-End › Exception Handling - NO Hardcoded Defaults › API should handle requests without crashing

    ReferenceError: query is not defined

      34 |   beforeEach(() => {
      35 |     jest.clearAllMocks();
    > 36 |     query.mockImplementation((sql, params) => {
         |     ^
      37 |       // Default: return empty rows for all queries
      38 |       if (sql.includes("information_schema.tables")) {
      39 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/data-pipeline.integration.test.js:36:5)

  ● Data Pipeline Integration - End-to-End › Config Alignment › scoring weights should be properly configured

    ReferenceError: query is not defined

      34 |   beforeEach(() => {
      35 |     jest.clearAllMocks();
    > 36 |     query.mockImplementation((sql, params) => {
         |     ^
      37 |       // Default: return empty rows for all queries
      38 |       if (sql.includes("information_schema.tables")) {
      39 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/data-pipeline.integration.test.js:36:5)


  ● Test suite failed to run

    ReferenceError: closeDatabase is not defined

      44 |
      45 |   afterAll(async () => {
    > 46 |     await closeDatabase();
         |     ^
      47 |   });
      48 |
      49 |   describe('Growth Metrics Data Flow', () => {

      at Object.<anonymous> (tests/integration/data-pipeline.integration.test.js:46:5)

FAIL tests/integration/analytics/recommendations.test.js
  Recommendations API
    Stock Recommendations
      ✕ should retrieve personalized stock recommendations
      ✕ should filter recommendations by type (1 ms)
    Sector Recommendations
      ✕ should provide sector-based recommendations
      ✕ should get recommendations for specific sector
    AI-Generated Recommendations
      ✕ should provide AI-generated stock picks
      ✕ should generate portfolio allocation recommendations
    Similar Stocks
      ✕ should find similar stocks based on characteristics
      ✕ should recommend alternatives to current holdings
    Performance Tracking
      ✕ should track recommendation performance

  ● Recommendations API › Stock Recommendations › should retrieve personalized stock recommendations

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/recommendations.test.js:35:5)

  ● Recommendations API › Stock Recommendations › should filter recommendations by type

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/recommendations.test.js:35:5)

  ● Recommendations API › Sector Recommendations › should provide sector-based recommendations

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/recommendations.test.js:35:5)

  ● Recommendations API › Sector Recommendations › should get recommendations for specific sector

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/recommendations.test.js:35:5)

  ● Recommendations API › AI-Generated Recommendations › should provide AI-generated stock picks

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/recommendations.test.js:35:5)

  ● Recommendations API › AI-Generated Recommendations › should generate portfolio allocation recommendations

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/recommendations.test.js:35:5)

  ● Recommendations API › Similar Stocks › should find similar stocks based on characteristics

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/recommendations.test.js:35:5)

  ● Recommendations API › Similar Stocks › should recommend alternatives to current holdings

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/recommendations.test.js:35:5)

  ● Recommendations API › Performance Tracking › should track recommendation performance

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/recommendations.test.js:35:5)

FAIL tests/integration/routes/sectors.integration.test.js
  Sectors Routes
    GET /api/sectors
      ✕ should return sector performance data
    GET /api/sectors/performance
      ✕ should return detailed sector performance
      ✕ should handle period parameter
    GET /api/sectors/leaders
      ✕ should return sector leaders
    GET /api/sectors/rotation
      ✕ should return sector rotation analysis
    GET /api/sectors/:sector/details
      ✕ should return specific sector data
    GET /api/sectors/:sector/stocks
      ✕ should return stocks in sector
      ✕ should handle limit parameter
    GET /api/sectors/allocation
      ✕ should return sector allocation data

  ● Sectors Routes › GET /api/sectors › should return sector performance data

    TypeError: Assignment to constant variable.

      35 | describe("Sectors Routes", () => {
      36 |   beforeAll(() => {
    > 37 |     app = express();
         |        ^
      38 |     app.use(express.json());
      39 |     app.use("/api/sectors", sectorRouter);
      40 |   });

      at Object.<anonymous> (tests/integration/routes/sectors.integration.test.js:37:8)

  ● Sectors Routes › GET /api/sectors/performance › should return detailed sector performance

    TypeError: Assignment to constant variable.

      35 | describe("Sectors Routes", () => {
      36 |   beforeAll(() => {
    > 37 |     app = express();
         |        ^
      38 |     app.use(express.json());
      39 |     app.use("/api/sectors", sectorRouter);
      40 |   });

      at Object.<anonymous> (tests/integration/routes/sectors.integration.test.js:37:8)

  ● Sectors Routes › GET /api/sectors/performance › should handle period parameter

    TypeError: Assignment to constant variable.

      35 | describe("Sectors Routes", () => {
      36 |   beforeAll(() => {
    > 37 |     app = express();
         |        ^
      38 |     app.use(express.json());
      39 |     app.use("/api/sectors", sectorRouter);
      40 |   });

      at Object.<anonymous> (tests/integration/routes/sectors.integration.test.js:37:8)

  ● Sectors Routes › GET /api/sectors/leaders › should return sector leaders

    TypeError: Assignment to constant variable.

      35 | describe("Sectors Routes", () => {
      36 |   beforeAll(() => {
    > 37 |     app = express();
         |        ^
      38 |     app.use(express.json());
      39 |     app.use("/api/sectors", sectorRouter);
      40 |   });

      at Object.<anonymous> (tests/integration/routes/sectors.integration.test.js:37:8)

  ● Sectors Routes › GET /api/sectors/rotation › should return sector rotation analysis

    TypeError: Assignment to constant variable.

      35 | describe("Sectors Routes", () => {
      36 |   beforeAll(() => {
    > 37 |     app = express();
         |        ^
      38 |     app.use(express.json());
      39 |     app.use("/api/sectors", sectorRouter);
      40 |   });

      at Object.<anonymous> (tests/integration/routes/sectors.integration.test.js:37:8)

  ● Sectors Routes › GET /api/sectors/:sector/details › should return specific sector data

    TypeError: Assignment to constant variable.

      35 | describe("Sectors Routes", () => {
      36 |   beforeAll(() => {
    > 37 |     app = express();
         |        ^
      38 |     app.use(express.json());
      39 |     app.use("/api/sectors", sectorRouter);
      40 |   });

      at Object.<anonymous> (tests/integration/routes/sectors.integration.test.js:37:8)

  ● Sectors Routes › GET /api/sectors/:sector/stocks › should return stocks in sector

    TypeError: Assignment to constant variable.

      35 | describe("Sectors Routes", () => {
      36 |   beforeAll(() => {
    > 37 |     app = express();
         |        ^
      38 |     app.use(express.json());
      39 |     app.use("/api/sectors", sectorRouter);
      40 |   });

      at Object.<anonymous> (tests/integration/routes/sectors.integration.test.js:37:8)

  ● Sectors Routes › GET /api/sectors/:sector/stocks › should handle limit parameter

    TypeError: Assignment to constant variable.

      35 | describe("Sectors Routes", () => {
      36 |   beforeAll(() => {
    > 37 |     app = express();
         |        ^
      38 |     app.use(express.json());
      39 |     app.use("/api/sectors", sectorRouter);
      40 |   });

      at Object.<anonymous> (tests/integration/routes/sectors.integration.test.js:37:8)

  ● Sectors Routes › GET /api/sectors/allocation › should return sector allocation data

    TypeError: Assignment to constant variable.

      35 | describe("Sectors Routes", () => {
      36 |   beforeAll(() => {
    > 37 |     app = express();
         |        ^
      38 |     app.use(express.json());
      39 |     app.use("/api/sectors", sectorRouter);
      40 |   });

      at Object.<anonymous> (tests/integration/routes/sectors.integration.test.js:37:8)

FAIL tests/unit/routes/trades.test.js
  Trades Routes - Testing Your Actual Site
    GET /trades/health - Health check
      ✕ should return trade service health status
    GET /trades/ - Root endpoint
      ✕ should return trade API ready message
    GET /trades/import/status - Trade import status
      ✕ should return import status information
    GET /trades/history - Trade history
      ✕ should return user trade history with pagination
      ✕ should handle date range filtering
      ✕ should filter by symbol
      ✕ should support pagination parameters
    GET /trades/analytics - Trade analytics
      ✕ should return trade performance analytics
      ✕ should handle time period filters
      ✕ should include benchmark comparison
    POST /trades/import - Import trades
      ✕ should import trades from CSV data
      ✕ should validate required fields
      ✕ should handle duplicate trades
      ✕ should handle invalid data formats
    GET /trades/export - Export trades
      ✕ should export trades in CSV format
      ✕ should export trades in JSON format
      ✕ should handle date range for export
    GET /trades/brokers - Broker integration status
      ✕ should return connected brokers status
    POST /trades/sync/:broker - Sync trades from broker
      ✕ should sync trades from Alpaca
      ✕ should handle unsupported broker
      ✕ should validate date parameters
    GET /trades/performance - Performance analysis
      ✕ should return detailed performance metrics
      ✕ should include benchmark comparison
      ✕ should support different time periods
    GET /trades/performance/attribution - Performance attribution
      ✕ should return performance attribution analysis
    GET /trades/stats - Trade statistics
      ✕ should return comprehensive trade statistics
      ✕ should filter stats by date range
      ✕ should group stats by time period
    POST /trades/validate - Trade validation
      ✕ should validate trade data before import
      ✕ should identify invalid trade data
    POST /trades/search - Advanced trade search
      ✕ should search trades by multiple criteria
      ✕ should handle empty search criteria
    Error handling
      ✕ should handle database connection errors (1 ms)
      ✕ should handle transaction rollback on import errors
      ✕ should handle malformed request data
      ✕ should handle missing authentication
      ✕ should handle various error scenarios
      ✕ should validate request parameters

  ● Trades Routes - Testing Your Actual Site › GET /trades/health - Health check › should return trade service health status

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/ - Root endpoint › should return trade API ready message

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/import/status - Trade import status › should return import status information

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/history - Trade history › should return user trade history with pagination

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/history - Trade history › should handle date range filtering

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/history - Trade history › should filter by symbol

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/history - Trade history › should support pagination parameters

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/analytics - Trade analytics › should return trade performance analytics

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/analytics - Trade analytics › should handle time period filters

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/analytics - Trade analytics › should include benchmark comparison

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › POST /trades/import - Import trades › should import trades from CSV data

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › POST /trades/import - Import trades › should validate required fields

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › POST /trades/import - Import trades › should handle duplicate trades

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › POST /trades/import - Import trades › should handle invalid data formats

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/export - Export trades › should export trades in CSV format

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/export - Export trades › should export trades in JSON format

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/export - Export trades › should handle date range for export

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/brokers - Broker integration status › should return connected brokers status

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › POST /trades/sync/:broker - Sync trades from broker › should sync trades from Alpaca

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › POST /trades/sync/:broker - Sync trades from broker › should handle unsupported broker

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › POST /trades/sync/:broker - Sync trades from broker › should validate date parameters

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/performance - Performance analysis › should return detailed performance metrics

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/performance - Performance analysis › should include benchmark comparison

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/performance - Performance analysis › should support different time periods

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/performance/attribution - Performance attribution › should return performance attribution analysis

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/stats - Trade statistics › should return comprehensive trade statistics

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/stats - Trade statistics › should filter stats by date range

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/stats - Trade statistics › should group stats by time period

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › POST /trades/validate - Trade validation › should validate trade data before import

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › POST /trades/validate - Trade validation › should identify invalid trade data

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › POST /trades/search - Advanced trade search › should search trades by multiple criteria

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › POST /trades/search - Advanced trade search › should handle empty search criteria

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › Error handling › should handle database connection errors

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › Error handling › should handle transaction rollback on import errors

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › Error handling › should handle malformed request data

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › Error handling › should handle missing authentication

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › Error handling › should handle various error scenarios

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › Error handling › should validate request parameters

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

FAIL tests/unit/routes/portfolio.test.js
  Portfolio Routes Unit Tests
    GET /portfolio
      ✕ should return portfolio info
    GET /portfolio/holdings
      ✕ should return holdings data
    GET /portfolio/performance
      ✕ should return performance data
    GET /portfolio/analytics
      ✕ should return analytics data
    GET /portfolio/value
      ✕ should return portfolio value data
    GET /portfolio/risk-analysis
      ✕ should return risk analysis data
    GET /portfolio/returns
      ✕ should return returns data
    GET /portfolio/benchmark
      ✕ should return benchmark data
    GET /portfolio/risk
      ✕ should return risk data
    GET /portfolio/risk-metrics
      ✕ should return risk metrics
    POST /portfolio/rebalance/execute
      ✕ should execute rebalance with valid recommendations
      ✕ should reject rebalance without recommendations
      ✕ should reject invalid recommendations format
    GET /portfolio/allocation - metadata integration
      ✕ should return allocation with last rebalance date from metadata
    GET /portfolio/optimization
      ✕ should return portfolio optimization recommendations
      ✕ should handle optimization with risk tolerance parameters
      ✕ should include rebalancing suggestions
    POST /portfolio/optimization/execute
      ✕ should execute optimization recommendations
    GET /portfolio/analysis
      ✕ should return comprehensive portfolio analysis
      ✕ should include sector breakdown
      ✕ should handle time period analysis
    GET /portfolio/rebalance
      ✕ should return rebalancing recommendations
      ✕ should handle custom target allocations
      ✕ should validate allocation percentages sum to 100
    GET /portfolio/metrics
      ✕ should return detailed portfolio metrics
      ✕ should include advanced risk metrics
      ✕ should support different time periods
    GET /portfolio/holdings/detailed
      ✕ should return detailed holdings information
      ✕ should filter holdings by minimum value
      ✕ should sort holdings by different criteria
    POST /portfolio/holdings/add
      ✕ should add new holding to portfolio
      ✕ should validate required fields
      ✕ should handle duplicate holdings
    GET /portfolio/performance/history
      ✕ should return historical performance data
      ✕ should handle date range filtering
      ✕ should include benchmark comparison
    GET /portfolio/performance/attribution
      ✕ should return performance attribution analysis
      ✕ should break down attribution by holdings
    GET /portfolio/watchlist
      ✕ should return portfolio watchlist
      ✕ should include price alerts
    POST /portfolio/watchlist/add
      ✕ should add symbol to watchlist
      ✕ should validate symbol format
    GET /portfolio/export
      ✕ should export portfolio data in CSV format
      ✕ should export portfolio data in JSON format
      ✕ should include all requested data fields
    Error handling
      ✕ should handle invalid endpoints gracefully
      ✕ should handle missing authorization
      ✕ should handle database connection errors
      ✕ should handle invalid query parameters
      ✕ should handle large data requests with pagination

  ● Portfolio Routes Unit Tests › GET /portfolio › should return portfolio info

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/holdings › should return holdings data

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/performance › should return performance data

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/analytics › should return analytics data

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/value › should return portfolio value data

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/risk-analysis › should return risk analysis data

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/returns › should return returns data

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/benchmark › should return benchmark data

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/risk › should return risk data

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/risk-metrics › should return risk metrics

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › POST /portfolio/rebalance/execute › should execute rebalance with valid recommendations

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › POST /portfolio/rebalance/execute › should reject rebalance without recommendations

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › POST /portfolio/rebalance/execute › should reject invalid recommendations format

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/allocation - metadata integration › should return allocation with last rebalance date from metadata

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/optimization › should return portfolio optimization recommendations

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/optimization › should handle optimization with risk tolerance parameters

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/optimization › should include rebalancing suggestions

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › POST /portfolio/optimization/execute › should execute optimization recommendations

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/analysis › should return comprehensive portfolio analysis

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/analysis › should include sector breakdown

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/analysis › should handle time period analysis

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/rebalance › should return rebalancing recommendations

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/rebalance › should handle custom target allocations

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/rebalance › should validate allocation percentages sum to 100

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/metrics › should return detailed portfolio metrics

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/metrics › should include advanced risk metrics

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/metrics › should support different time periods

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/holdings/detailed › should return detailed holdings information

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/holdings/detailed › should filter holdings by minimum value

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/holdings/detailed › should sort holdings by different criteria

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › POST /portfolio/holdings/add › should add new holding to portfolio

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › POST /portfolio/holdings/add › should validate required fields

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › POST /portfolio/holdings/add › should handle duplicate holdings

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/performance/history › should return historical performance data

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/performance/history › should handle date range filtering

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/performance/history › should include benchmark comparison

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/performance/attribution › should return performance attribution analysis

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/performance/attribution › should break down attribution by holdings

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/watchlist › should return portfolio watchlist

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/watchlist › should include price alerts

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › POST /portfolio/watchlist/add › should add symbol to watchlist

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › POST /portfolio/watchlist/add › should validate symbol format

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/export › should export portfolio data in CSV format

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/export › should export portfolio data in JSON format

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/export › should include all requested data fields

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › Error handling › should handle invalid endpoints gracefully

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › Error handling › should handle missing authorization

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › Error handling › should handle database connection errors

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › Error handling › should handle invalid query parameters

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › Error handling › should handle large data requests with pagination

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  console.error
    Error analyzing sentiment: Error: Analysis failed
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/news.test.js:283:9)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      633 |     res.json({ success: true, data: analysis });
      634 |   } catch (error) {
    > 635 |     console.error("Error analyzing sentiment:", error);
          |             ^
      636 |     res.status(500).json({
      637 |       success: false,
      638 |       error: "Failed to analyze sentiment",

      at error (routes/news.js:635:13)

  console.log
    📰 News feed requested - category: technology, limit: 5

      at log (routes/news.js:848:13)

  console.error
    News feed error: Error: Database response validation failed for news feed query: result is null, undefined, or missing rows array
        at validateDbResponse (/home/stocks/algo/webapp/lambda/routes/news.js:16:11)
        at validateDbResponse (/home/stocks/algo/webapp/lambda/routes/news.js:892:20)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)

      937 |     });
      938 |   } catch (error) {
    > 939 |     console.error("News feed error:", error);
          |             ^
      940 |
      941 |     // Check if it's a table/schema error (table doesn't exist)
      942 |     if (error.message.includes('relation "news_articles" does not exist')) {

      at error (routes/news.js:939:13)

  console.log
    📰 News feed requested - category: technology, limit: 50

      at log (routes/news.js:848:13)

  console.log
    📅 Economic calendar requested - importance: high, country: US

      at log (routes/news.js:972:13)

  console.error
    Economic calendar error: Error: Database response validation failed for economic calendar query: result is null, undefined, or missing rows array
        at validateDbResponse (/home/stocks/algo/webapp/lambda/routes/news.js:16:11)
        at validateDbResponse (/home/stocks/algo/webapp/lambda/routes/news.js:1037:20)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)

      1081 |     });
      1082 |   } catch (error) {
    > 1083 |     console.error("Economic calendar error:", error);
           |             ^
      1084 |
      1085 |     // Check if table doesn't exist
      1086 |     if (error.message.includes('relation "economic_events" does not exist')) {

      at error (routes/news.js:1083:13)

  console.log
    🔍 News search requested: "undefined"

      at log (routes/news.js:1429:13)

FAIL tests/unit/routes/news.test.js
  News Routes
    GET /news/health
      ✓ should return health status (4 ms)
    GET /news/
      ✓ should return API status (2 ms)
    GET /news/articles
      ✕ should return news articles with sentiment analysis
      ✕ should handle filtering by category and sentiment
      ✕ should handle database errors
    GET /news/sentiment/:symbol
      ✕ should return sentiment analysis for symbol
      ✕ should handle database errors
    GET /news/market-sentiment
      ✕ should return market sentiment overview
    POST /news/analyze-sentiment
      ✓ should analyze sentiment for custom text (4 ms)
      ✓ should require text parameter (2 ms)
      ✓ should handle sentiment analysis errors (4 ms)
    GET /news/sources
      ✕ should return news sources with reliability scores (1 ms)
    GET /news/categories
      ✕ should return news categories with sentiment data
    GET /news/trending
      ✕ should return trending topics
    GET /news/feed
      ✓ should return enhanced news feed (13 ms)
      ✓ should return error response on failure (2 ms)
    GET /news/economic-calendar
      ✓ should return economic calendar data (3 ms)
    GET /news/sentiment-dashboard
      ✓ should return sentiment dashboard data (1 ms)
    GET /news/search
      ✕ should return search results for valid query
      ✓ should require search query parameter (2 ms)
      ✕ should handle empty search results (1 ms)
      ✕ should handle database errors gracefully
      ✕ should support filtering parameters

  ● News Routes › GET /news/articles › should return news articles with sentiment analysis

    ReferenceError: query is not defined

      111 |       };
      112 |       const mockCount = { rows: [{ total: "1" }] };
    > 113 |       query
          |       ^
      114 |         .mockResolvedValueOnce(mockArticles)
      115 |         .mockResolvedValueOnce(mockCount);
      116 |       const response = await request(app)

      at Object.query (tests/unit/routes/news.test.js:113:7)

  ● News Routes › GET /news/articles › should handle filtering by category and sentiment

    ReferenceError: query is not defined

      124 |       const mockArticles = { rows: [] };
      125 |       const mockCount = { rows: [{ total: "0" }] };
    > 126 |       query
          |       ^
      127 |         .mockResolvedValueOnce(mockArticles)
      128 |         .mockResolvedValueOnce(mockCount);
      129 |       const response = await request(app)

      at Object.query (tests/unit/routes/news.test.js:126:7)

  ● News Routes › GET /news/articles › should handle database errors

    ReferenceError: query is not defined

      143 |     });
      144 |     test("should handle database errors", async () => {
    > 145 |       query.mockRejectedValue(new Error("Database connection failed"));
          |       ^
      146 |       const response = await request(app).get("/news/articles");
      147 |       if (response.body.success !== undefined) { expect([true, false]).toContain(response.body.success); } else { expect(response.body).toBeDefined(); }
      148 |     });

      at Object.query (tests/unit/routes/news.test.js:145:7)

  ● News Routes › GET /news/sentiment/:symbol › should return sentiment analysis for symbol

    ReferenceError: query is not defined

      178 |         ],
      179 |       };
    > 180 |       query
          |       ^
      181 |         .mockResolvedValueOnce(mockSentimentData)
      182 |         .mockResolvedValueOnce(mockTrendData)
      183 |         .mockResolvedValueOnce(mockKeywordData);

      at Object.query (tests/unit/routes/news.test.js:180:7)

  ● News Routes › GET /news/sentiment/:symbol › should handle database errors

    ReferenceError: query is not defined

      191 |     });
      192 |     test("should handle database errors", async () => {
    > 193 |       query.mockRejectedValue(new Error("Database query failed"));
          |       ^
      194 |       const response = await request(app)
      195 |         .get("/news/sentiment/AAPL")
      196 |         ;

      at Object.query (tests/unit/routes/news.test.js:193:7)

  ● News Routes › GET /news/market-sentiment › should return market sentiment overview

    ReferenceError: query is not defined

      244 |         ],
      245 |       };
    > 246 |       query
          |       ^
      247 |         .mockResolvedValueOnce(mockMarketData)
      248 |         .mockResolvedValueOnce(mockCategoryData)
      249 |         .mockResolvedValueOnce(mockSymbolData)

      at Object.query (tests/unit/routes/news.test.js:246:7)

  ● News Routes › GET /news/sources › should return news sources with reliability scores

    ReferenceError: query is not defined

      314 |         ],
      315 |       };
    > 316 |       query.mockResolvedValue(mockSourcesData);
          |       ^
      317 |       const response = await request(app).get("/news/sources");
      318 |       if (response.body.success !== undefined) { expect([true, false]).toContain(response.body.success); } else { expect(response.body).toBeDefined(); }
      319 |       // Mock call disabled for real database testing

      at Object.query (tests/unit/routes/news.test.js:316:7)

  ● News Routes › GET /news/categories › should return news categories with sentiment data

    ReferenceError: query is not defined

      339 |         ],
      340 |       };
    > 341 |       query.mockResolvedValue(mockCategoriesData);
          |       ^
      342 |       const response = await request(app).get("/news/categories");
      343 |       if (response.body.success !== undefined) { expect([true, false]).toContain(response.body.success); } else { expect(response.body).toBeDefined(); }
      344 |     });

      at Object.query (tests/unit/routes/news.test.js:341:7)

  ● News Routes › GET /news/trending › should return trending topics

    ReferenceError: query is not defined

      378 |         ],
      379 |       };
    > 380 |       query
          |       ^
      381 |         .mockResolvedValueOnce(mockKeywordData)
      382 |         .mockResolvedValueOnce(mockSymbolData);
      383 |       const response = await request(app)

      at Object.query (tests/unit/routes/news.test.js:380:7)

  ● News Routes › GET /news/search › should return search results for valid query

    ReferenceError: query is not defined

      480 |         avg_relevance: 0.9,
      481 |       };
    > 482 |       query
          |       ^
      483 |         .mockResolvedValueOnce({ rows: mockSearchResults })
      484 |         .mockResolvedValueOnce({ rows: [mockStats] });
      485 |       const response = await request(app)

      at Object.query (tests/unit/routes/news.test.js:482:7)

  ● News Routes › GET /news/search › should handle empty search results

    ReferenceError: query is not defined

      493 |     });
      494 |     test("should handle empty search results", async () => {
    > 495 |       query
          |       ^
      496 |         .mockResolvedValueOnce({ rows: [] })
      497 |         .mockResolvedValueOnce({ rows: [{ total_matches: 0 }] });
      498 |       const response = await request(app)

      at Object.query (tests/unit/routes/news.test.js:495:7)

  ● News Routes › GET /news/search › should handle database errors gracefully

    ReferenceError: query is not defined

      502 |     });
      503 |     test("should handle database errors gracefully", async () => {
    > 504 |       query.mockRejectedValueOnce(new Error("Database connection failed"));
          |       ^
      505 |       const response = await request(app)
      506 |         .get("/news/search?query=test")
      507 |         ;

      at Object.query (tests/unit/routes/news.test.js:504:7)

  ● News Routes › GET /news/search › should support filtering parameters

    ReferenceError: query is not defined

      525 |         },
      526 |       ];
    > 527 |       query.mockResolvedValueOnce({ rows: mockResults }).mockResolvedValueOnce({
          |       ^
      528 |         rows: [
      529 |           {
      530 |             total_matches: 1,

      at Object.query (tests/unit/routes/news.test.js:527:7)

  console.log
    📅 Fetching dividend calendar events

      at log (routes/calendar.js:955:13)

  console.log
    📊 Fetching economic calendar events

      at log (routes/calendar.js:982:13)

  console.log
    📊 Fetching economic calendar events

      at log (routes/calendar.js:982:13)

  console.log
    📊 Fetching economic calendar events

      at log (routes/calendar.js:982:13)

  console.log
    📊 Fetching economic calendar events

      at log (routes/calendar.js:982:13)

  console.log
    📊 Fetching economic calendar events

      at log (routes/calendar.js:982:13)

  console.log
    📊 Fetching economic calendar events

      at log (routes/calendar.js:982:13)

  console.error
    Earnings metrics query error: Database connection failed

      867 |       ]);
      868 |     } catch (queryError) {
    > 869 |       console.error("Earnings metrics query error:", queryError.message);
          |               ^
      870 |       // Return empty data structure if earnings_metrics table doesn't exist yet
      871 |       return res.json({
      872 |         success: true,

      at error (routes/calendar.js:869:15)

FAIL tests/unit/routes/calendar.test.js
  Calendar Routes Unit Tests
    GET /calendar/
      ✓ should return calendar info (8 ms)
    GET /calendar/earnings
      ✓ should return earnings calendar (3 ms)
    GET /calendar/dividends
      ✓ should return dividend calendar (3 ms)
    GET /calendar/economic
      ✕ should return economic calendar with default parameters (3 ms)
      ✕ should return economic calendar with custom parameters (3 ms)
      ✕ should handle invalid parameters gracefully (2 ms)
      ✕ should include proper economic event structure (2 ms)
      ✕ should filter by importance correctly (2 ms)
      ✕ should include available filters (6 ms)
    GET /calendar/earnings-metrics
      ✓ should return earnings metrics with quality scores (2 ms)
      ✓ should handle pagination parameters (1 ms)
      ✓ should handle database errors gracefully (2 ms)

  ● Calendar Routes Unit Tests › GET /calendar/economic › should return economic calendar with default parameters

    expect(received).toHaveProperty(path)

    Expected path: "economic_events"
    Received path: []

    Received value: []

      94 |       const response = await request(app).get("/calendar/economic").expect(200);
      95 |       expect(response.body.success).toBe(true);
    > 96 |       expect(response.body.data).toHaveProperty("economic_events");
         |                                  ^
      97 |       expect(response.body.data).toHaveProperty("summary");
      98 |       expect(Array.isArray(response.body.data.economic_events)).toBe(true);
      99 |       expect(response.body.data.summary).toHaveProperty("country", "US");

      at Object.toHaveProperty (tests/unit/routes/calendar.test.js:96:34)

  ● Calendar Routes Unit Tests › GET /calendar/economic › should return economic calendar with custom parameters

    TypeError: Cannot read properties of undefined (reading 'length')

      109 |         .expect(200);
      110 |       expect(response.body.success).toBe(true);
    > 111 |       expect(response.body.data.economic_events.length).toBeLessThanOrEqual(10);
          |                                                 ^
      112 |       expect(response.body.data.summary.country).toBe("EU");
      113 |       expect(response.body.data.filters.importance).toBe("high");
      114 |       expect(response.body.data.filters.days_ahead).toBe(7);

      at Object.length (tests/unit/routes/calendar.test.js:111:49)

  ● Calendar Routes Unit Tests › GET /calendar/economic › should handle invalid parameters gracefully

    expected 400 "Bad Request", got 200 "OK"

      118 |       const response = await request(app)
      119 |         .get("/calendar/economic?days_ahead=500&limit=300")
    > 120 |         .expect(400);
          |          ^
      121 |       expect(response.body.success).toBe(false);
      122 |       expect(response.body.error).toContain("Invalid days_ahead parameter");
      123 |     });

      at Object.expect (tests/unit/routes/calendar.test.js:120:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Calendar Routes Unit Tests › GET /calendar/economic › should include proper economic event structure

    TypeError: Cannot read properties of undefined (reading 'length')

      126 |         .get("/calendar/economic?limit=5")
      127 |         .expect(200);
    > 128 |       if (response.body.data.economic_events.length > 0) {
          |                                              ^
      129 |         const event = response.body.data.economic_events[0];
      130 |         expect(event).toHaveProperty("event_id");
      131 |         expect(event).toHaveProperty("title");

      at Object.length (tests/unit/routes/calendar.test.js:128:46)

  ● Calendar Routes Unit Tests › GET /calendar/economic › should filter by importance correctly

    TypeError: Cannot read properties of undefined (reading 'filter')

      144 |         .get("/calendar/economic?importance=high&limit=20")
      145 |         .expect(200);
    > 146 |       const highImportanceEvents = response.body.data.economic_events.filter(
          |                                                                       ^
      147 |         (e) => e.importance === "high"
      148 |       );
      149 |       expect(highImportanceEvents.length).toBe(

      at Object.filter (tests/unit/routes/calendar.test.js:146:71)

  ● Calendar Routes Unit Tests › GET /calendar/economic › should include available filters

    expect(received).toHaveProperty(path)

    Matcher error: received value must not be null nor undefined

    Received has value: undefined

      153 |     test("should include available filters", async () => {
      154 |       const response = await request(app).get("/calendar/economic").expect(200);
    > 155 |       expect(response.body.data.available_filters).toHaveProperty("countries");
          |                                                    ^
      156 |       expect(response.body.data.available_filters).toHaveProperty(
      157 |         "importance_levels"
      158 |       );

      at Object.toHaveProperty (tests/unit/routes/calendar.test.js:155:52)

FAIL tests/unit/middleware/auth.test.js
  Authentication Middleware
    authenticateToken
      ✕ should authenticate valid JWT token (1 ms)
      ✕ should reject request without authorization header
      ✕ should reject malformed authorization header
      ✕ should reject expired JWT tokens
      ✕ should reject invalid JWT tokens
      ✕ should handle missing JWT secret
      ✕ should extract token from Authorization header correctly
      ✕ should handle case-insensitive Bearer prefix
    token validation edge cases
      ✕ should handle whitespace in token
      ✕ should reject empty token
      ✕ should handle authorization header with extra data
    user context setup
      ✕ should populate req.user with decoded token data
      ✕ should preserve existing req properties
    error handling
      ✕ should handle unexpected JWT errors
      ✓ should handle missing JWT library (1 ms)
    security considerations
      ✕ should not log sensitive token data
      ✕ should handle malicious token attempts (1 ms)
    dev-bypass-token handling
      ✕ should allow dev-bypass-token in test environment
  RequireRole Middleware
    ✕ should require authentication first
    ✕ should allow user with required role
    ✕ should allow user with required group (1 ms)
    ✕ should deny user without required role or group
    ✕ should handle multiple required roles
    ✕ should handle missing groups array
  OptionalAuth Middleware
    ✕ should continue without auth when no token provided
    ✕ should authenticate when valid token provided (1 ms)
    ✕ should continue when token validation fails
    ✕ should handle malformed authorization header gracefully
  RequireApiKey Middleware
    ✕ should require authentication first
    ✕ should require API key for provider (1 ms)
    ✕ should proceed when API key is available
    ✕ should handle API key service errors
  ValidateSession Middleware
    ✕ should continue when no user is present
    ✕ should set expiration warning for tokens expiring soon
    ✕ should warn about long-lived tokens
    ✕ should continue on validation errors
  RateLimitByUser Middleware
    ✕ should allow requests within rate limit
    ✕ should use IP address when user is not authenticated
    ✕ should enforce rate limit (1 ms)
    ✕ should clean up old requests from sliding window
  LogApiAccess Middleware
    ✕ should log request and response
    ✕ should handle anonymous users
    ✕ should preserve original res.end functionality
    ✕ should calculate response time accurately

  ● Authentication Middleware › authenticateToken › should authenticate valid JWT token

    ReferenceError: authenticateToken is not defined

      39 |       req.headers.authorization = "Bearer valid-jwt-token";
      40 |       jwt.verify = jest.fn().mockReturnValue(mockUser);
    > 41 |       authenticateToken(req, res, next);
         |       ^
      42 |       expect(jwt.verify).toHaveBeenCalledWith(
      43 |         "valid-jwt-token",
      44 |         expect.any(String)

      at Object.authenticateToken (tests/unit/middleware/auth.test.js:41:7)

  ● Authentication Middleware › authenticateToken › should reject request without authorization header

    ReferenceError: authenticateToken is not defined

      48 |     });
      49 |     test("should reject request without authorization header", () => {
    > 50 |       authenticateToken(req, res, next);
         |       ^
      51 |       expect(res.status).toHaveBeenCalledWith(401);
      52 |       expect(res.json).toHaveBeenCalledWith({
      53 |         success: false,

      at Object.authenticateToken (tests/unit/middleware/auth.test.js:50:7)

  ● Authentication Middleware › authenticateToken › should reject malformed authorization header

    ReferenceError: authenticateToken is not defined

      59 |     test("should reject malformed authorization header", () => {
      60 |       req.headers.authorization = "InvalidFormat token";
    > 61 |       authenticateToken(req, res, next);
         |       ^
      62 |       expect(res.status).toHaveBeenCalledWith(401);
      63 |       expect(res.json).toHaveBeenCalledWith({
      64 |         success: false,

      at Object.authenticateToken (tests/unit/middleware/auth.test.js:61:7)

  ● Authentication Middleware › authenticateToken › should reject expired JWT tokens

    ReferenceError: authenticateToken is not defined

      75 |         throw tokenError;
      76 |       });
    > 77 |       authenticateToken(req, res, next);
         |       ^
      78 |       expect(res.status).toHaveBeenCalledWith(401);
      79 |       expect(res.json).toHaveBeenCalledWith({
      80 |         success: false,

      at Object.authenticateToken (tests/unit/middleware/auth.test.js:77:7)

  ● Authentication Middleware › authenticateToken › should reject invalid JWT tokens

    ReferenceError: authenticateToken is not defined

      91 |         throw tokenError;
      92 |       });
    > 93 |       authenticateToken(req, res, next);
         |       ^
      94 |       expect(res.status).toHaveBeenCalledWith(401);
      95 |       expect(res.json).toHaveBeenCalledWith({
      96 |         success: false,

      at Object.authenticateToken (tests/unit/middleware/auth.test.js:93:7)

  ● Authentication Middleware › authenticateToken › should handle missing JWT secret

    ReferenceError: authenticateToken is not defined

      104 |       const originalEnv = process.env.JWT_SECRET;
      105 |       delete process.env.JWT_SECRET;
    > 106 |       authenticateToken(req, res, next);
          |       ^
      107 |       expect(res.status).toHaveBeenCalledWith(500);
      108 |       expect(res.json).toHaveBeenCalledWith({
      109 |         success: false,

      at Object.authenticateToken (tests/unit/middleware/auth.test.js:106:7)

  ● Authentication Middleware › authenticateToken › should extract token from Authorization header correctly

    ReferenceError: authenticateToken is not defined

      116 |       req.headers.authorization = `Bearer ${token}`;
      117 |       jwt.verify = jest.fn().mockReturnValue({ id: "user123" });
    > 118 |       authenticateToken(req, res, next);
          |       ^
      119 |       expect(jwt.verify).toHaveBeenCalledWith(token, expect.any(String));
      120 |     });
      121 |     test("should handle case-insensitive Bearer prefix", () => {

      at Object.authenticateToken (tests/unit/middleware/auth.test.js:118:7)

  ● Authentication Middleware › authenticateToken › should handle case-insensitive Bearer prefix

    ReferenceError: authenticateToken is not defined

      122 |       req.headers.authorization = "bearer lowercase-token";
      123 |       jwt.verify = jest.fn().mockReturnValue({ id: "user123" });
    > 124 |       authenticateToken(req, res, next);
          |       ^
      125 |       expect(jwt.verify).toHaveBeenCalledWith(
      126 |         "lowercase-token",
      127 |         expect.any(String)

      at Object.authenticateToken (tests/unit/middleware/auth.test.js:124:7)

  ● Authentication Middleware › token validation edge cases › should handle whitespace in token

    ReferenceError: authenticateToken is not defined

      133 |       req.headers.authorization = "Bearer   token-with-spaces   ";
      134 |       jwt.verify = jest.fn().mockReturnValue({ id: "user123" });
    > 135 |       authenticateToken(req, res, next);
          |       ^
      136 |       expect(jwt.verify).toHaveBeenCalledWith(
      137 |         "token-with-spaces",
      138 |         expect.any(String)

      at Object.authenticateToken (tests/unit/middleware/auth.test.js:135:7)

  ● Authentication Middleware › token validation edge cases › should reject empty token

    ReferenceError: authenticateToken is not defined

      141 |     test("should reject empty token", () => {
      142 |       req.headers.authorization = "Bearer ";
    > 143 |       authenticateToken(req, res, next);
          |       ^
      144 |       expect(res.status).toHaveBeenCalledWith(401);
      145 |       expect(res.json).toHaveBeenCalledWith({
      146 |         success: false,

      at Object.authenticateToken (tests/unit/middleware/auth.test.js:143:7)

  ● Authentication Middleware › token validation edge cases › should handle authorization header with extra data

    ReferenceError: authenticateToken is not defined

      152 |       req.headers.authorization = "Bearer valid-token extra-data";
      153 |       jwt.verify = jest.fn().mockReturnValue({ id: "user123" });
    > 154 |       authenticateToken(req, res, next);
          |       ^
      155 |       expect(jwt.verify).toHaveBeenCalledWith(
      156 |         "valid-token",
      157 |         expect.any(String)

      at Object.authenticateToken (tests/unit/middleware/auth.test.js:154:7)

  ● Authentication Middleware › user context setup › should populate req.user with decoded token data

    ReferenceError: authenticateToken is not defined

      169 |       req.headers.authorization = "Bearer valid-token";
      170 |       jwt.verify = jest.fn().mockReturnValue(mockUser);
    > 171 |       authenticateToken(req, res, next);
          |       ^
      172 |       expect(req.user).toEqual(mockUser);
      173 |       expect(req.user.id).toBe("user123");
      174 |       expect(req.user.email).toBe("test@example.com");

      at Object.authenticateToken (tests/unit/middleware/auth.test.js:171:7)

  ● Authentication Middleware › user context setup › should preserve existing req properties

    ReferenceError: authenticateToken is not defined

      179 |       req.headers.authorization = "Bearer valid-token";
      180 |       jwt.verify = jest.fn().mockReturnValue({ id: "user123" });
    > 181 |       authenticateToken(req, res, next);
          |       ^
      182 |       expect(req.originalProperty).toBe("preserved");
      183 |       expect(req.user.id).toBe("user123");
      184 |     });

      at Object.authenticateToken (tests/unit/middleware/auth.test.js:181:7)

  ● Authentication Middleware › error handling › should handle unexpected JWT errors

    ReferenceError: authenticateToken is not defined

      191 |         throw unexpectedError;
      192 |       });
    > 193 |       authenticateToken(req, res, next);
          |       ^
      194 |       expect(res.status).toHaveBeenCalledWith(401);
      195 |       expect(res.json).toHaveBeenCalledWith({
      196 |         success: false,

      at Object.authenticateToken (tests/unit/middleware/auth.test.js:193:7)

  ● Authentication Middleware › security considerations › should not log sensitive token data

    ReferenceError: authenticateToken is not defined

      212 |         throw new Error("Invalid token");
      213 |       });
    > 214 |       authenticateToken(req, res, next);
          |       ^
      215 |       // Ensure token not logged in error cases
      216 |       expect(consoleSpy).not.toHaveBeenCalledWith(
      217 |         expect.stringContaining("sensitive-token-12345")

      at Object.authenticateToken (tests/unit/middleware/auth.test.js:214:7)

  ● Authentication Middleware › security considerations › should handle malicious token attempts

    ReferenceError: authenticateToken is not defined

      233 |           throw error;
      234 |         });
    > 235 |         authenticateToken(req, res, next);
          |         ^
      236 |         expect(res.status).toHaveBeenCalledWith(401);
      237 |         expect(next).not.toHaveBeenCalled();
      238 |         // Reset for next iteration

      at authenticateToken (tests/unit/middleware/auth.test.js:235:9)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/unit/middleware/auth.test.js:229:23)

  ● Authentication Middleware › dev-bypass-token handling › should allow dev-bypass-token in test environment

    ReferenceError: authenticateToken is not defined

      245 |       req.headers.authorization = "Bearer dev-bypass-token";
      246 |       const consoleSpy = jest.spyOn(console, "log").mockImplementation();
    > 247 |       authenticateToken(req, res, next);
          |       ^
      248 |       expect(req.user).toEqual({
      249 |         sub: "dev-user-bypass",
      250 |         id: "dev-user-bypass",

      at Object.authenticateToken (tests/unit/middleware/auth.test.js:247:7)

  ● RequireRole Middleware › should require authentication first

    ReferenceError: requireRole is not defined

      281 |   });
      282 |   test("should require authentication first", () => {
    > 283 |     const middleware = requireRole(["admin"]);
          |                        ^
      284 |     middleware(req, res, next);
      285 |     expect(res.unauthorized).toHaveBeenCalledWith(
      286 |       "User must be authenticated to access this resource",

      at Object.requireRole (tests/unit/middleware/auth.test.js:283:24)

  ● RequireRole Middleware › should allow user with required role

    ReferenceError: requireRole is not defined

      291 |   test("should allow user with required role", () => {
      292 |     req.user = { role: "admin", groups: [] };
    > 293 |     const middleware = requireRole(["admin"]);
          |                        ^
      294 |     middleware(req, res, next);
      295 |     expect(next).toHaveBeenCalled();
      296 |     expect(res.forbidden).not.toHaveBeenCalled();

      at Object.requireRole (tests/unit/middleware/auth.test.js:293:24)

  ● RequireRole Middleware › should allow user with required group

    ReferenceError: requireRole is not defined

      298 |   test("should allow user with required group", () => {
      299 |     req.user = { role: "user", groups: ["admin"] };
    > 300 |     const middleware = requireRole(["admin"]);
          |                        ^
      301 |     middleware(req, res, next);
      302 |     expect(next).toHaveBeenCalled();
      303 |     expect(res.forbidden).not.toHaveBeenCalled();

      at Object.requireRole (tests/unit/middleware/auth.test.js:300:24)

  ● RequireRole Middleware › should deny user without required role or group

    ReferenceError: requireRole is not defined

      305 |   test("should deny user without required role or group", () => {
      306 |     req.user = { role: "user", groups: ["viewer"] };
    > 307 |     const middleware = requireRole(["admin"]);
          |                        ^
      308 |     middleware(req, res, next);
      309 |     expect(res.forbidden).toHaveBeenCalledWith(
      310 |       "Access denied. Required roles: admin",

      at Object.requireRole (tests/unit/middleware/auth.test.js:307:24)

  ● RequireRole Middleware › should handle multiple required roles

    ReferenceError: requireRole is not defined

      320 |   test("should handle multiple required roles", () => {
      321 |     req.user = { role: "editor", groups: [] };
    > 322 |     const middleware = requireRole(["admin", "editor"]);
          |                        ^
      323 |     middleware(req, res, next);
      324 |     expect(next).toHaveBeenCalled();
      325 |     expect(res.forbidden).not.toHaveBeenCalled();

      at Object.requireRole (tests/unit/middleware/auth.test.js:322:24)

  ● RequireRole Middleware › should handle missing groups array

    ReferenceError: requireRole is not defined

      327 |   test("should handle missing groups array", () => {
      328 |     req.user = { role: "admin" }; // No groups property
    > 329 |     const middleware = requireRole(["admin"]);
          |                        ^
      330 |     middleware(req, res, next);
      331 |     expect(next).toHaveBeenCalled();
      332 |   });

      at Object.requireRole (tests/unit/middleware/auth.test.js:329:24)

  ● OptionalAuth Middleware › should continue without auth when no token provided

    ReferenceError: optionalAuth is not defined

      350 |   });
      351 |   test("should continue without auth when no token provided", async () => {
    > 352 |     await optionalAuth(req, res, next);
          |     ^
      353 |     expect(req.user).toBeUndefined();
      354 |     expect(next).toHaveBeenCalled();
      355 |   });

      at Object.<anonymous> (tests/unit/middleware/auth.test.js:352:5)

  ● OptionalAuth Middleware › should authenticate when valid token provided

    ReferenceError: optionalAuth is not defined

      365 |       user: mockUser,
      366 |     });
    > 367 |     await optionalAuth(req, res, next);
          |     ^
      368 |     expect(req.user).toEqual(mockUser);
      369 |     expect(req.token).toBe("valid-token");
      370 |     expect(req.sessionId).toBe("session123");

      at Object.<anonymous> (tests/unit/middleware/auth.test.js:367:5)

  ● OptionalAuth Middleware › should continue when token validation fails

    ReferenceError: optionalAuth is not defined

      381 |     );
      382 |     const consoleSpy = jest.spyOn(console, "log").mockImplementation();
    > 383 |     await optionalAuth(req, res, next);
          |     ^
      384 |     expect(req.user).toBeUndefined();
      385 |     expect(next).toHaveBeenCalled();
      386 |     // Console logging is disabled during tests for performance

      at Object.<anonymous> (tests/unit/middleware/auth.test.js:383:5)

  ● OptionalAuth Middleware › should handle malformed authorization header gracefully

    ReferenceError: optionalAuth is not defined

      390 |   test("should handle malformed authorization header gracefully", async () => {
      391 |     req.headers.authorization = "InvalidFormat";
    > 392 |     await optionalAuth(req, res, next);
          |     ^
      393 |     expect(req.user).toBeUndefined();
      394 |     expect(next).toHaveBeenCalled();
      395 |     expect(apiKeyService.validateJwtToken).not.toHaveBeenCalled();

      at Object.<anonymous> (tests/unit/middleware/auth.test.js:392:5)

  ● RequireApiKey Middleware › should require authentication first

    ReferenceError: requireApiKey is not defined

      420 |   });
      421 |   test("should require authentication first", async () => {
    > 422 |     const middleware = requireApiKey("alpaca");
          |                        ^
      423 |     await middleware(req, res, next);
      424 |     expect(res.unauthorized).toHaveBeenCalledWith(
      425 |       "User must be authenticated to access API configuration",

      at Object.requireApiKey (tests/unit/middleware/auth.test.js:422:24)

  ● RequireApiKey Middleware › should require API key for provider

    ReferenceError: getApiKey is not defined

      432 |     req.token = "valid-token";
      433 |     // Mock getApiKey to return null (no API key configured)
    > 434 |     getApiKey.mockResolvedValue(null);
          |     ^
      435 |     const middleware = requireApiKey("alpaca");
      436 |     await middleware(req, res, next);
      437 |     expect(res.error).toHaveBeenCalledWith(

      at Object.getApiKey (tests/unit/middleware/auth.test.js:434:5)

  ● RequireApiKey Middleware › should proceed when API key is available

    ReferenceError: getApiKey is not defined

      449 |     req.token = "valid-token";
      450 |     const mockApiKey = "test-api-key-123";
    > 451 |     getApiKey.mockResolvedValue(mockApiKey);
          |     ^
      452 |     const middleware = requireApiKey("alpaca");
      453 |     await middleware(req, res, next);
      454 |     expect(req.apiKey).toBe(mockApiKey);

      at Object.getApiKey (tests/unit/middleware/auth.test.js:451:5)

  ● RequireApiKey Middleware › should handle API key service errors

    ReferenceError: getApiKey is not defined

      460 |     req.user = { sub: "user123" };
      461 |     req.token = "valid-token";
    > 462 |     getApiKey.mockRejectedValue(new Error("Service unavailable"));
          |     ^
      463 |     const consoleSpy = jest.spyOn(console, "error").mockImplementation();
      464 |     const middleware = requireApiKey("alpaca");
      465 |     await middleware(req, res, next);

      at Object.getApiKey (tests/unit/middleware/auth.test.js:462:5)

  ● ValidateSession Middleware › should continue when no user is present

    ReferenceError: validateSession is not defined

      491 |   });
      492 |   test("should continue when no user is present", async () => {
    > 493 |     await validateSession(req, res, next);
          |     ^
      494 |     expect(next).toHaveBeenCalled();
      495 |     expect(res.set).not.toHaveBeenCalled();
      496 |   });

      at Object.<anonymous> (tests/unit/middleware/auth.test.js:493:5)

  ● ValidateSession Middleware › should set expiration warning for tokens expiring soon

    ReferenceError: validateSession is not defined

      503 |       tokenIssueTime: now - 3600, // Issued 1 hour ago
      504 |     };
    > 505 |     await validateSession(req, res, next);
          |     ^
      506 |     expect(res.set).toHaveBeenCalledWith("X-Token-Expiring", "true");
      507 |     expect(res.set).toHaveBeenCalledWith(
      508 |       "X-Token-Expires-At",

      at Object.<anonymous> (tests/unit/middleware/auth.test.js:505:5)

  ● ValidateSession Middleware › should warn about long-lived tokens

    ReferenceError: validateSession is not defined

      520 |     };
      521 |     const consoleSpy = jest.spyOn(console, "warn").mockImplementation();
    > 522 |     await validateSession(req, res, next);
          |     ^
      523 |     // Console logging is disabled during tests for performance
      524 |     expect(consoleSpy).not.toHaveBeenCalled();
      525 |     expect(next).toHaveBeenCalled();

      at Object.<anonymous> (tests/unit/middleware/auth.test.js:522:5)

  ● ValidateSession Middleware › should continue on validation errors

    ReferenceError: validateSession is not defined

      536 |     };
      537 |     const consoleSpy = jest.spyOn(console, "error").mockImplementation();
    > 538 |     await validateSession(req, res, next);
          |     ^
      539 |     // Console logging is disabled during tests for performance
      540 |     expect(consoleSpy).not.toHaveBeenCalled();
      541 |     expect(next).toHaveBeenCalled();

      at Object.<anonymous> (tests/unit/middleware/auth.test.js:538:5)

  ● RateLimitByUser Middleware › should allow requests within rate limit

    ReferenceError: rateLimitByUser is not defined

      561 |   test("should allow requests within rate limit", () => {
      562 |     req.user = { sub: "user123" };
    > 563 |     const middleware = rateLimitByUser(10); // 10 requests per minute
          |                        ^
      564 |     middleware(req, res, next);
      565 |     expect(next).toHaveBeenCalled();
      566 |     expect(res.error).not.toHaveBeenCalled();

      at Object.rateLimitByUser (tests/unit/middleware/auth.test.js:563:24)

  ● RateLimitByUser Middleware › should use IP address when user is not authenticated

    ReferenceError: rateLimitByUser is not defined

      567 |   });
      568 |   test("should use IP address when user is not authenticated", () => {
    > 569 |     const middleware = rateLimitByUser(10);
          |                        ^
      570 |     middleware(req, res, next);
      571 |     expect(next).toHaveBeenCalled();
      572 |     expect(res.error).not.toHaveBeenCalled();

      at Object.rateLimitByUser (tests/unit/middleware/auth.test.js:569:24)

  ● RateLimitByUser Middleware › should enforce rate limit

    ReferenceError: rateLimitByUser is not defined

      574 |   test("should enforce rate limit", () => {
      575 |     req.user = { sub: "user123" };
    > 576 |     const middleware = rateLimitByUser(2); // Only 2 requests per minute
          |                        ^
      577 |     // First two requests should succeed
      578 |     middleware(req, res, next);
      579 |     expect(next).toHaveBeenCalledTimes(1);

      at Object.rateLimitByUser (tests/unit/middleware/auth.test.js:576:24)

  ● RateLimitByUser Middleware › should clean up old requests from sliding window

    ReferenceError: rateLimitByUser is not defined

      594 |   test("should clean up old requests from sliding window", () => {
      595 |     req.user = { sub: "user123" };
    > 596 |     const middleware = rateLimitByUser(100);
          |                        ^
      597 |     // Mock Date.now to simulate time passing
      598 |     const originalNow = Date.now;
      599 |     let mockTime = originalNow();

      at Object.rateLimitByUser (tests/unit/middleware/auth.test.js:596:24)

  ● LogApiAccess Middleware › should log request and response

    ReferenceError: logApiAccess is not defined

      634 |     req.user = { sub: "user123" };
      635 |     const consoleSpy = jest.spyOn(console, "log").mockImplementation();
    > 636 |     await logApiAccess(req, res, next);
          |     ^
      637 |     // Console logging is disabled during tests for performance
      638 |     expect(consoleSpy).not.toHaveBeenCalled();
      639 |     expect(next).toHaveBeenCalled();

      at Object.<anonymous> (tests/unit/middleware/auth.test.js:636:5)

  ● LogApiAccess Middleware › should handle anonymous users

    ReferenceError: logApiAccess is not defined

      646 |   test("should handle anonymous users", async () => {
      647 |     const consoleSpy = jest.spyOn(console, "log").mockImplementation();
    > 648 |     await logApiAccess(req, res, next);
          |     ^
      649 |     // Console logging is disabled during tests for performance
      650 |     expect(consoleSpy).not.toHaveBeenCalled();
      651 |     consoleSpy.mockRestore();

      at Object.<anonymous> (tests/unit/middleware/auth.test.js:648:5)

  ● LogApiAccess Middleware › should preserve original res.end functionality

    ReferenceError: logApiAccess is not defined

      654 |     const mockData = "test response data";
      655 |     const mockEncoding = "utf8";
    > 656 |     await logApiAccess(req, res, next);
          |     ^
      657 |     // Ensure original end method is called with correct parameters
      658 |     res.end(mockData, mockEncoding);
      659 |     expect(originalEnd).toHaveBeenCalledWith(mockData, mockEncoding);

      at Object.<anonymous> (tests/unit/middleware/auth.test.js:656:5)

  ● LogApiAccess Middleware › should calculate response time accurately

    ReferenceError: logApiAccess is not defined

      665 |     let mockTime = 1000000;
      666 |     Date.now = jest.fn(() => mockTime);
    > 667 |     await logApiAccess(req, res, next);
          |     ^
      668 |     // Simulate 50ms delay
      669 |     mockTime += 50;
      670 |     res.end();

      at Object.<anonymous> (tests/unit/middleware/auth.test.js:667:5)

FAIL tests/unit/routes/sectors.test.js
  Sectors Routes
    GET /sectors/health
      ✕ should return health status
    GET /sectors/
      ✕ should return API status
    GET /sectors/analysis
      ✕ should return comprehensive sector analysis with default timeframe
      ✕ should handle timeframe parameter validation
      ✕ should accept valid timeframes
      ✕ should handle database errors
    GET /sectors/list
      ✕ should return list of available sectors
      ✕ should handle empty sector list
      ✕ should handle database errors for sector list
    GET /sectors/:sector/details
      ✕ should return detailed sector information
      ✕ should handle non-existent sector
      ✕ should handle database errors for sector details
      ✕ should handle URL encoded sector names
    GET /ranking-history
      ✕ should return sector ranking history for all sectors
      ✕ should return ranking history for specific sector
      ✕ should return empty data when no ranking history available
      ✕ should handle database errors for ranking history
    GET /industries/ranking-history
      ✕ should return industry ranking history for all industries
      ✕ should return ranking history for specific industry
      ✕ should return empty data when no industry ranking history available
      ✕ should handle database errors for industry ranking history

  ● Sectors Routes › GET /sectors/health › should return health status

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /sectors/ › should return API status

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /sectors/analysis › should return comprehensive sector analysis with default timeframe

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /sectors/analysis › should handle timeframe parameter validation

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /sectors/analysis › should accept valid timeframes

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /sectors/analysis › should handle database errors

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /sectors/list › should return list of available sectors

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /sectors/list › should handle empty sector list

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /sectors/list › should handle database errors for sector list

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /sectors/:sector/details › should return detailed sector information

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /sectors/:sector/details › should handle non-existent sector

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /sectors/:sector/details › should handle database errors for sector details

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /sectors/:sector/details › should handle URL encoded sector names

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /ranking-history › should return sector ranking history for all sectors

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /ranking-history › should return ranking history for specific sector

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /ranking-history › should return empty data when no ranking history available

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /ranking-history › should handle database errors for ranking history

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /industries/ranking-history › should return industry ranking history for all industries

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /industries/ranking-history › should return ranking history for specific industry

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /industries/ranking-history › should return empty data when no industry ranking history available

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /industries/ranking-history › should handle database errors for industry ranking history

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  console.log
    [2025-10-19T11:48:55.445Z] [INFO] [c1713019] Starting universe scoring

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stockCount": 100
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:48:55.462Z] [INFO] [6211bd3c] Universe scoring completed

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "scoredStocks": 100,
      "topScore": 0.73,
      "averageScore": 0.5098999999999998
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:48:55.467Z] [ERROR] [56521480] Composite score calculation error

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "error": {
        "name": "TypeError",
        "message": "Cannot read properties of null (reading 'pe_ratio')",
        "stack": "TypeError: Cannot read properties of null (reading 'pe_ratio')\n    at FactorScoringEngine.calculateCategoryScore (/home/stocks/algo/webapp/lambda/utils/factorScoring.js:147:33)\n    at FactorScoringEngine.calculateCategoryScore [as calculateCompositeScore] (/home/stocks/algo/webapp/lambda/utils/factorScoring.js:107:36)\n    at Object.calculateCompositeScore (/home/stocks/algo/webapp/lambda/utils/factorScoring.js:774:25)\n    at calculateCompositeScore (/home/stocks/algo/webapp/lambda/tests/integration/utils/factorScoring.test.js:455:34)\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/expect/build/toThrowMatchers.js:74:11)\n    at Object.throwingMatcher [as toThrow] (/home/stocks/algo/webapp/lambda/node_modules/expect/build/index.js:320:21)\n    at Object.toThrow (/home/stocks/algo/webapp/lambda/tests/integration/utils/factorScoring.test.js:455:69)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)"
      },
      "symbol": "unknown"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

FAIL tests/integration/utils/factorScoring.test.js
  Factor Scoring Integration Tests
    Composite Score Calculation
      ✕ should calculate composite score for individual stock (1 ms)
      ✕ should handle stock data without universe comparison
      ✓ should handle missing factor data gracefully (1 ms)
    Universe Scoring
      ✕ should score entire universe of stocks
      ✕ should handle custom factor weights
      ✓ should handle empty universe gracefully
    Factor Explanations
      ✕ should provide detailed factor explanations
      ✓ should handle stocks with limited factor data (1 ms)
    Factor Definitions
      ✓ should return factor definitions
    Custom Profile Creation
      ✓ should create custom scoring profile
    Stock Screening
      ✓ should screen stocks by factor criteria
      ✓ should handle restrictive screening criteria
    FactorScoringEngine Class
      ✓ should create new engine with custom factors
      ✕ should analyze factors across universe (1 ms)
      ✕ should identify top performing factors (1 ms)
      ✕ should rank universe correctly
      ✓ should normalize factors correctly
      ✓ should handle edge cases in normalization
    Performance and Error Handling
      ✓ should handle large datasets efficiently (20 ms)
      ✓ should handle null and undefined values gracefully (1 ms)
      ✓ should handle invalid input gracefully (4 ms)

  ● Factor Scoring Integration Tests › Composite Score Calculation › should calculate composite score for individual stock

    TypeError: Cannot read properties of undefined (reading '0')

      53 |   describe("Composite Score Calculation", () => {
      54 |     test("should calculate composite score for individual stock", () => {
    > 55 |       const stockData = mockStockData[0]; // AAPL
         |                                      ^
      56 |       const score = factorScoring.calculateCompositeScore(
      57 |         stockData,
      58 |         mockStockData

      at Object.<anonymous> (tests/integration/utils/factorScoring.test.js:55:38)

  ● Factor Scoring Integration Tests › Composite Score Calculation › should handle stock data without universe comparison

    TypeError: Cannot read properties of undefined (reading '0')

      74 |
      75 |     test("should handle stock data without universe comparison", () => {
    > 76 |       const stockData = mockStockData[0];
         |                                      ^
      77 |       const score = factorScoring.calculateCompositeScore(stockData);
      78 |
      79 |       expect(score).toBeDefined();

      at Object.<anonymous> (tests/integration/utils/factorScoring.test.js:76:38)

  ● Factor Scoring Integration Tests › Universe Scoring › should score entire universe of stocks

    TypeError: Cannot read properties of undefined (reading 'length')

      100 |
      101 |       expect(Array.isArray(scoredUniverse)).toBe(true);
    > 102 |       expect(scoredUniverse.length).toBe(mockStockData.length);
          |                                                        ^
      103 |
      104 |       scoredUniverse.forEach((stock, index) => {
      105 |         expect(stock.symbol).toBeDefined();

      at Object.length (tests/integration/utils/factorScoring.test.js:102:56)

  ● Factor Scoring Integration Tests › Universe Scoring › should handle custom factor weights

    TypeError: Cannot read properties of undefined (reading 'length')

      132 |
      133 |       expect(Array.isArray(scoredUniverse)).toBe(true);
    > 134 |       expect(scoredUniverse.length).toBe(mockStockData.length);
          |                                                        ^
      135 |
      136 |       scoredUniverse.forEach((stock) => {
      137 |         expect(stock.factorScore.compositeScore).toBeDefined();

      at Object.length (tests/integration/utils/factorScoring.test.js:134:56)

  ● Factor Scoring Integration Tests › Factor Explanations › should provide detailed factor explanations

    TypeError: Cannot read properties of undefined (reading '0')

      148 |   describe("Factor Explanations", () => {
      149 |     test("should provide detailed factor explanations", () => {
    > 150 |       const stockData = mockStockData[0]; // AAPL
          |                                      ^
      151 |       const explanations = factorScoring.getFactorExplanations(stockData);
      152 |
      153 |       expect(explanations).toBeDefined();

      at Object.<anonymous> (tests/integration/utils/factorScoring.test.js:150:38)

  ● Factor Scoring Integration Tests › FactorScoringEngine Class › should analyze factors across universe

    TypeError: Cannot read properties of undefined (reading 'map')

      492 |     for (const factorName of allFactors) {
      493 |       const values = universeData
    > 494 |         .map((stock) => stock[factorName])
          |          ^
      495 |         .filter((val) => val !== null && val !== undefined && !isNaN(val));
      496 |
      497 |       if (values.length > 0) {

      at FactorScoringEngine.map [as calculateUniverseStats] (utils/factorScoring.js:494:10)
      at FactorScoringEngine.calculateUniverseStats [as analyzeFactors] (utils/factorScoring.js:522:24)
      at Object.analyzeFactors (tests/integration/utils/factorScoring.test.js:322:31)

  ● Factor Scoring Integration Tests › FactorScoringEngine Class › should identify top performing factors

    TypeError: Cannot read properties of undefined (reading 'map')

      612 |     for (const factorName of allFactors) {
      613 |       const values = universeData
    > 614 |         .map((stock) => stock[factorName])
          |          ^
      615 |         .filter((val) => val !== null && val !== undefined && !isNaN(val));
      616 |
      617 |       if (values.length > 1) {

      at FactorScoringEngine.map [as identifyTopFactors] (utils/factorScoring.js:614:10)
      at Object.identifyTopFactors (tests/integration/utils/factorScoring.test.js:340:33)

  ● Factor Scoring Integration Tests › FactorScoringEngine Class › should rank universe correctly

    TypeError: Cannot read properties of undefined (reading 'length')

      365 |
      366 |       expect(Array.isArray(rankings)).toBe(true);
    > 367 |       expect(rankings.length).toBe(mockStockData.length);
          |                                                  ^
      368 |
      369 |       rankings.forEach((stock, index) => {
      370 |         expect(stock.rank).toBe(index + 1);

      at Object.length (tests/integration/utils/factorScoring.test.js:367:50)

  console.log
    🔐 Testing Alpaca API authentication...

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:68:15)

  console.log
    🔧 Demonstrating integration pattern with mock data

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:90:17)

  console.log
    📋 Mock Account Structure (what real API would return):

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:105:17)

  console.log
      Account ID: mock-account-123

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:106:17)

  console.log
      Status: ACTIVE

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:107:17)

  console.log
      Environment: paper

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:108:17)

  console.log
      Portfolio Value: $ 75000

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:109:17)

  console.log
      Cash: $ 25000

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:110:17)

  console.log
      Buying Power: $ 100000

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:111:17)

  console.log
    ✅ Integration pattern validation successful!

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:121:17)

  console.log
    
    🔧 To use with real Alpaca account:

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:124:17)

  console.log
    1. Sign up for Alpaca paper trading account

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:125:17)

  console.log
    2. Generate new API keys in Alpaca dashboard

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:126:17)

  console.log
    3. Replace keys in test or environment variables

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:127:17)

  console.log
    4. Ensure account is active and funded

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:128:17)

  console.log
    🧪 Verifying paper trading environment...

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:133:15)

  console.log
    📈 Testing portfolio position handling...

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:147:15)

  console.log
    🔧 Demonstrating position handling with mock data

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:181:17)

  console.log
    📊 Mock portfolio: 2 positions

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:221:17)

  console.log
    📋 Mock Position Structure:

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:232:17)

  console.log
      Symbol: AAPL

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:233:17)

  console.log
      Quantity: 100

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:234:17)

  console.log
      Market Value: $17500

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:235:17)

  console.log
      Cost Basis: $15000

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:236:17)

  console.log
      Unrealized P&L: $2500

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:237:17)

  console.log
      Current Price: $175

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:238:17)

  console.log
    ✅ Position structure validation successful!

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:239:17)

  console.log
    🔄 Testing data transformation...

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:244:15)

  console.log
    💾 Testing full portfolio import workflow...

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:287:15)

  console.log
    1️⃣ Fetching positions from Alpaca API...

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:293:17)

  console.log
    📈 Fetching portfolio history...

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:403:15)

  console.log
    ⏱️  Testing rate limiting...

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:436:15)

  console.log
    🚨 Testing error handling...

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:462:15)

  console.log
    ✅ API error handled gracefully: Cannot read properties of undefined (reading 'getAsset')

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:470:17)

  console.log
    🔄 Testing service state consistency...

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:476:15)

  console.log
    📊 Testing API request tracking...

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:490:15)

  console.log
    ✅ Real Alpaca API Integration Tests Completed

      at Object.log (tests/integration/alpaca/real-api-integration.test.js:63:13)

FAIL tests/integration/alpaca/real-api-integration.test.js
  Real Alpaca API Integration Tests
    Authentication and Account Access
      ✓ should handle Alpaca API authentication (9 ms)
      ✕ should verify paper trading environment (1 ms)
    Portfolio Data Import
      ✓ should handle portfolio positions from Alpaca (4 ms)
      ✕ should transform Alpaca position data for our database format (1 ms)
    Portfolio Import Workflow
      ✕ should import and store Alpaca positions in database (5 ms)
    Account and Portfolio History
      ✕ should fetch portfolio history from Alpaca (1 ms)
      ✕ should handle rate limiting properly (1 ms)
    Error Handling and Edge Cases
      ✕ should handle API errors gracefully (1 ms)
      ✕ should maintain service state across multiple calls (1 ms)
    Performance and Monitoring
      ✕ should track API request metrics

  ● Real Alpaca API Integration Tests › Authentication and Account Access › should verify paper trading environment

    TypeError: Cannot read properties of undefined (reading 'getAccount')

      133 |       console.log("🧪 Verifying paper trading environment...");
      134 |
    > 135 |       const account = await alpacaService.getAccount();
          |                                           ^
      136 |
      137 |       // Ensure we're in paper trading mode for safety
      138 |       expect(account.environment).toBe("paper");

      at Object.getAccount (tests/integration/alpaca/real-api-integration.test.js:135:43)

  ● Real Alpaca API Integration Tests › Portfolio Data Import › should transform Alpaca position data for our database format

    TypeError: Cannot read properties of undefined (reading 'getPositions')

      244 |       console.log("🔄 Testing data transformation...");
      245 |
    > 246 |       const positions = await alpacaService.getPositions();
          |                                             ^
      247 |
      248 |       // Transform positions to our database format
      249 |       const transformedPositions = positions.map(position => ({

      at Object.getPositions (tests/integration/alpaca/real-api-integration.test.js:246:45)

  ● Real Alpaca API Integration Tests › Portfolio Import Workflow › should import and store Alpaca positions in database

    TypeError: Cannot read properties of undefined (reading 'getPositions')

      292 |         // Step 1: Fetch positions from Alpaca
      293 |         console.log("1️⃣ Fetching positions from Alpaca API...");
    > 294 |         const positions = await alpacaService.getPositions();
          |                                               ^
      295 |         console.log(`   ✅ Fetched ${positions.length} positions`);
      296 |
      297 |         // Step 2: Clean up any existing test data

      at Object.getPositions (tests/integration/alpaca/real-api-integration.test.js:294:47)

  ● Real Alpaca API Integration Tests › Account and Portfolio History › should fetch portfolio history from Alpaca

    TypeError: Cannot read properties of undefined (reading 'getPortfolioHistory')

      404 |
      405 |       try {
    > 406 |         const history = await alpacaService.getPortfolioHistory("1M", "1Day");
          |                                             ^
      407 |
      408 |         expect(Array.isArray(history)).toBe(true);
      409 |         console.log(`📊 Portfolio history: ${history.length} data points`);

      at Object.getPortfolioHistory (tests/integration/alpaca/real-api-integration.test.js:406:45)

  ● Real Alpaca API Integration Tests › Account and Portfolio History › should handle rate limiting properly

    TypeError: Cannot read properties of undefined (reading 'getAccount')

      440 |       // Make multiple requests to test rate limiting
      441 |       const promises = [
    > 442 |         alpacaService.getAccount(),
          |                       ^
      443 |         alpacaService.getPositions(),
      444 |       ];
      445 |

      at Object.getAccount (tests/integration/alpaca/real-api-integration.test.js:442:23)

  ● Real Alpaca API Integration Tests › Error Handling and Edge Cases › should handle API errors gracefully

    expect(received).toContain(expected) // indexOf

    Expected substring: "Failed to"
    Received string:    "Cannot read properties of undefined (reading 'getAsset')"

      469 |       } catch (error) {
      470 |         console.log("✅ API error handled gracefully:", error.message);
    > 471 |         expect(error.message).toContain("Failed to");
          |                               ^
      472 |       }
      473 |     }, 10000);
      474 |

      at Object.toContain (tests/integration/alpaca/real-api-integration.test.js:471:31)

  ● Real Alpaca API Integration Tests › Error Handling and Edge Cases › should maintain service state across multiple calls

    TypeError: Cannot read properties of undefined (reading 'getAccount')

      476 |       console.log("🔄 Testing service state consistency...");
      477 |
    > 478 |       const account1 = await alpacaService.getAccount();
          |                                            ^
      479 |       const account2 = await alpacaService.getAccount();
      480 |
      481 |       expect(account1.accountId).toBe(account2.accountId);

      at Object.getAccount (tests/integration/alpaca/real-api-integration.test.js:478:44)

  ● Real Alpaca API Integration Tests › Performance and Monitoring › should track API request metrics

    TypeError: Cannot read properties of undefined (reading 'requestTimes')

      490 |       console.log("📊 Testing API request tracking...");
      491 |
    > 492 |       const initialRequestCount = alpacaService.requestTimes.length;
          |                                                 ^
      493 |
      494 |       await alpacaService.getAccount();
      495 |       await alpacaService.getPositions();

      at Object.requestTimes (tests/integration/alpaca/real-api-integration.test.js:492:49)

FAIL tests/unit/utils/errorTracker.test.js
  ErrorTracker
    constructor and initialization
      ✓ should initialize with default values (1 ms)
    categorizeError
      ✓ should categorize database errors (10 ms)
      ✓ should categorize authentication errors (1 ms)
      ✓ should categorize API errors (1 ms)
      ✓ should categorize validation errors (1 ms)
      ✓ should categorize circuit breaker errors
      ✓ should default to general category
    calculateSeverity
      ✓ should assign critical severity correctly
      ✓ should assign high severity correctly (1 ms)
      ✓ should assign medium severity correctly
      ✓ should default to low severity
    trackError
      ✕ should track error with full context (1 ms)
      ✕ should track error with minimal context
      ✕ should handle errors without stack trace (5 ms)
    updateErrorCounts
      ✓ should track error counts by minute (1 ms)
      ✓ should clean up old error counts
    addToHistory
      ✓ should add errors to history
      ✓ should maintain maximum history size (1 ms)
    checkAlertThresholds
      ✕ should trigger alert when threshold is exceeded
      ✕ should not trigger alert when below threshold
      ✕ should use general threshold for unknown categories
      ✕ should handle missing error count for category (branch coverage)
    generateErrorId
      ✓ should generate unique error IDs
      ✓ should handle short category names
      ✓ should truncate long category names (1 ms)
    getErrorStats
      ✓ should return comprehensive error statistics
      ✓ should handle empty error history
      ✓ should exclude error counts from different minutes (branch coverage) (1 ms)
    getRecentErrors
      ✓ should return recent errors sorted by timestamp desc
      ✓ should default to 50 errors when no limit specified
      ✓ should handle limit larger than available errors
      ✓ should return empty array when no errors exist (1 ms)
    clearHistory
      ✓ should clear all error history and counts
    middleware
      ✕ should track error and add context from request (1 ms)
      ✕ should handle request without correlation ID
      ✕ should handle request without user
      ✕ should handle request without route
      ✕ should handle minimal request object (1 ms)

  ● ErrorTracker › trackError › should track error with full context

    expect(received).toHaveBeenCalledWith(...expected)

    Matcher error: received value must be a mock or spy function

    Received has value: undefined

      153 |       const errorId = errorTracker.trackError(error, context);
      154 |       expect(errorId).toBe("api-kxv26800-i");
    > 155 |       expect(mockError).toHaveBeenCalledWith(
          |                         ^
      156 |         "Application Error",
      157 |         expect.objectContaining({
      158 |           message: "Test error",

      at Object.toHaveBeenCalledWith (tests/unit/utils/errorTracker.test.js:155:25)

  ● ErrorTracker › trackError › should track error with minimal context

    expect(received).toHaveBeenCalledWith(...expected)

    Matcher error: received value must be a mock or spy function

    Received has value: undefined

      174 |       const errorId = errorTracker.trackError(error);
      175 |       expect(errorId).toBe("gen-kxv26800-i");
    > 176 |       expect(mockError).toHaveBeenCalledWith(
          |                         ^
      177 |         "Application Error",
      178 |         expect.objectContaining({
      179 |           message: "Simple error",

      at Object.toHaveBeenCalledWith (tests/unit/utils/errorTracker.test.js:176:25)

  ● ErrorTracker › trackError › should handle errors without stack trace

    expect(received).toHaveBeenCalledWith(...expected)

    Matcher error: received value must be a mock or spy function

    Received has value: undefined

      188 |       const errorId = errorTracker.trackError(error);
      189 |       expect(errorId).toBeDefined();
    > 190 |       expect(mockError).toHaveBeenCalledWith(
          |                         ^
      191 |         "Application Error",
      192 |         expect.objectContaining({
      193 |           message: "Error without stack",

      at Object.toHaveBeenCalledWith (tests/unit/utils/errorTracker.test.js:190:25)

  ● ErrorTracker › checkAlertThresholds › should trigger alert when threshold is exceeded

    expect(received).toHaveBeenCalledWith(...expected)

    Matcher error: received value must be a mock or spy function

    Received has value: undefined

      264 |       }
      265 |       errorTracker.checkAlertThresholds(errorData);
    > 266 |       expect(mockWarn).toHaveBeenCalledWith(
          |                        ^
      267 |         "Error Rate Alert",
      268 |         expect.objectContaining({
      269 |           category: "database",

      at Object.toHaveBeenCalledWith (tests/unit/utils/errorTracker.test.js:266:24)

  ● ErrorTracker › checkAlertThresholds › should not trigger alert when below threshold

    expect(received).not.toHaveBeenCalled()

    Matcher error: received value must be a mock or spy function

    Received has value: undefined

      288 |       }
      289 |       errorTracker.checkAlertThresholds(errorData);
    > 290 |       expect(mockWarn).not.toHaveBeenCalled();
          |                            ^
      291 |       expect(console.log).not.toHaveBeenCalled();
      292 |     });
      293 |     it("should use general threshold for unknown categories", () => {

      at Object.toHaveBeenCalled (tests/unit/utils/errorTracker.test.js:290:28)

  ● ErrorTracker › checkAlertThresholds › should use general threshold for unknown categories

    expect(received).toHaveBeenCalledWith(...expected)

    Matcher error: received value must be a mock or spy function

    Received has value: undefined

      301 |       }
      302 |       errorTracker.checkAlertThresholds(errorData);
    > 303 |       expect(mockWarn).toHaveBeenCalledWith(
          |                        ^
      304 |         "Error Rate Alert",
      305 |         expect.objectContaining({
      306 |           currentCount: 16,

      at Object.toHaveBeenCalledWith (tests/unit/utils/errorTracker.test.js:303:24)

  ● ErrorTracker › checkAlertThresholds › should handle missing error count for category (branch coverage)

    expect(received).not.toHaveBeenCalled()

    Matcher error: received value must be a mock or spy function

    Received has value: undefined

      314 |       errorTracker.checkAlertThresholds(errorData);
      315 |       // Should not trigger alert since count is 0
    > 316 |       expect(mockWarn).not.toHaveBeenCalled();
          |                            ^
      317 |     });
      318 |   });
      319 |   describe("generateErrorId", () => {

      at Object.toHaveBeenCalled (tests/unit/utils/errorTracker.test.js:316:28)

  ● ErrorTracker › middleware › should track error and add context from request

    expect(received).toHaveBeenCalledWith(...expected)

    Matcher error: received value must be a mock or spy function

    Received has value: undefined

      483 |       const error = new Error("Middleware test error");
      484 |       middleware(error, mockReq, mockRes, mockNext);
    > 485 |       expect(mockError).toHaveBeenCalledWith(
          |                         ^
      486 |         "Application Error",
      487 |         expect.objectContaining({
      488 |           message: "Middleware test error",

      at Object.toHaveBeenCalledWith (tests/unit/utils/errorTracker.test.js:485:25)

  ● ErrorTracker › middleware › should handle request without correlation ID

    expect(received).toHaveBeenCalledWith(...expected)

    Matcher error: received value must be a mock or spy function

    Received has value: undefined

      511 |       const error = new Error("Test error without correlation ID");
      512 |       middleware(error, mockReq, mockRes, mockNext);
    > 513 |       expect(mockError).toHaveBeenCalledWith(
          |                         ^
      514 |         "Application Error",
      515 |         expect.objectContaining({
      516 |           context: expect.objectContaining({

      at Object.toHaveBeenCalledWith (tests/unit/utils/errorTracker.test.js:513:25)

  ● ErrorTracker › middleware › should handle request without user

    expect(received).toHaveBeenCalledWith(...expected)

    Matcher error: received value must be a mock or spy function

    Received has value: undefined

      524 |       const error = new Error("Test error without user");
      525 |       middleware(error, mockReq, mockRes, mockNext);
    > 526 |       expect(mockError).toHaveBeenCalledWith(
          |                         ^
      527 |         "Application Error",
      528 |         expect.objectContaining({
      529 |           context: expect.objectContaining({

      at Object.toHaveBeenCalledWith (tests/unit/utils/errorTracker.test.js:526:25)

  ● ErrorTracker › middleware › should handle request without route

    expect(received).toHaveBeenCalledWith(...expected)

    Matcher error: received value must be a mock or spy function

    Received has value: undefined

      537 |       const error = new Error("Test error without route");
      538 |       middleware(error, mockReq, mockRes, mockNext);
    > 539 |       expect(mockError).toHaveBeenCalledWith(
          |                         ^
      540 |         "Application Error",
      541 |         expect.objectContaining({
      542 |           context: expect.objectContaining({

      at Object.toHaveBeenCalledWith (tests/unit/utils/errorTracker.test.js:539:25)

  ● ErrorTracker › middleware › should handle minimal request object

    expect(received).toHaveBeenCalledWith(...expected)

    Matcher error: received value must be a mock or spy function

    Received has value: undefined

      557 |       const error = new Error("Minimal request error");
      558 |       middleware(error, minimalReq, mockRes, mockNext);
    > 559 |       expect(mockError).toHaveBeenCalledWith(
          |                         ^
      560 |         "Application Error",
      561 |         expect.objectContaining({
      562 |           message: "Minimal request error",

      at Object.toHaveBeenCalledWith (tests/unit/utils/errorTracker.test.js:559:25)

FAIL tests/unit/utils/schemaValidator.test.js
  Schema Validator
    validateData
      ✓ should validate valid company profile data successfully (1 ms)
      ✓ should fail validation for missing required fields
      ✓ should fail validation for unknown table (1 ms)
      ✓ should fail validation for unknown field
      ✓ should validate VARCHAR field with max length constraint
      ✓ should validate INTEGER field constraints
      ✓ should validate DECIMAL precision constraints
      ✓ should validate BOOLEAN field types
      ✓ should validate DATE field format (1 ms)
      ✓ should allow null values for non-required fields (1 ms)
    validateTableStructure
      ✓ should validate existing table with correct structure (1 ms)
      ✓ should fail validation for non-existent table
      ✓ should fail validation for unknown schema
      ✓ should handle database errors gracefully
      ✓ should detect missing columns
      ✓ should warn about extra columns
    validateDatabaseIntegrity
      ✓ should collect errors from failed table validations (1 ms)
      ○ skipped should validate all tables successfully
    generateCreateTableSQL
      ✓ should generate CREATE TABLE SQL for stocks table (1 ms)
      ✓ should include DECIMAL precision in SQL
      ✓ should include PRIMARY KEY constraint
      ✓ should include CHECK constraints for minimum values
      ✓ should include indexes in SQL
      ✓ should handle unknown table (28 ms)
      ✓ should include default values
      ✓ should include UNIQUE constraints
    getTableSchema
      ✓ should return schema for existing table
      ✓ should return null for unknown table
    listTables
      ✓ should return array of table names
    sanitizeInput
      ✓ should sanitize string inputs (1 ms)
      ✓ should handle null and undefined inputs
      ✓ should sanitize arrays recursively
      ✓ should sanitize objects recursively
      ✓ should preserve numbers and booleans
      ✓ should trim whitespace from strings (1 ms)
    validateTableExists
      ✓ should return true for existing table
      ✓ should return false for non-existent table
      ✓ should handle database errors
    validateColumns
      ✓ should validate columns successfully (1 ms)
      ✓ should detect missing columns
      ✓ should detect type mismatches
      ✓ should handle unknown table schema
      ✓ should handle database errors (1 ms)
    validateIndexes
      ✓ should validate indexes successfully
      ✕ should return valid for table without indexes
      ✕ should handle database errors
    safeQuery
      ✕ should execute query successfully
      ✕ should return null on database error and log warning (1 ms)
      ✓ should truncate long query text in logs
    field sanitization
      ✓ should sanitize VARCHAR fields
      ✓ should convert string numbers to proper types
      ✓ should handle boolean conversion edge cases
      ✓ should convert date strings to ISO format
    edge cases and error scenarios
      ✓ should handle empty data object
      ✓ should validate complex table with multiple constraints
      ✓ should handle very long strings gracefully
    schemas export
      ✓ should export schemas object

  ● Schema Validator › validateIndexes › should return valid for table without indexes

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      817 |       });
      818 |       const result = await validateIndexes("fear_greed_index"); // Table with only created_at index
    > 819 |       expect(result.valid).toBe(true);
          |                            ^
      820 |       expect(result.missingIndexes).toBeDefined();
      821 |     });
      822 |     test("should handle database errors", async () => {

      at Object.toBe (tests/unit/utils/schemaValidator.test.js:819:28)

  ● Schema Validator › validateIndexes › should handle database errors

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: {"actualIndexes": ["fear_greed_index_created_at_idx"], "expectedIndexes": ["price_daily_symbol_idx", "price_daily_date_idx"], "isValid": false, "missingIndexes": ["price_daily_symbol_idx", "price_daily_date_idx"], "valid": false}

      823 |       const dbError = new Error("Index query failed");
      824 |       mockQuery.mockRejectedValueOnce(dbError);
    > 825 |       await expect(validateIndexes("price_daily")).rejects.toThrow( // Use actual table name from loaders
          |             ^
      826 |         "Index query failed"
      827 |       );
      828 |       expect(mockLogger.error).toHaveBeenCalled();

      at expect (node_modules/expect/build/index.js:113:15)
      at Object.expect (tests/unit/utils/schemaValidator.test.js:825:13)

  ● Schema Validator › safeQuery › should execute query successfully

    expect(received).toEqual(expected) // deep equality

    Expected: {"rows": [{"count": 5}]}
    Received: null

      836 |       mockQuery.mockResolvedValueOnce(expectedResult);
      837 |       const result = await safeQuery("SELECT COUNT(*) as count FROM test");
    > 838 |       expect(result).toEqual(expectedResult);
          |                      ^
      839 |       expect(mockQuery).toHaveBeenCalledWith(
      840 |         "SELECT COUNT(*) as count FROM test",
      841 |         []

      at Object.toEqual (tests/unit/utils/schemaValidator.test.js:838:22)

  ● Schema Validator › safeQuery › should return null on database error and log warning

    expect(received).toBeNull()

    Received: {"rows": [{"count": 5}]}

      848 |       mockQuery.mockRejectedValueOnce(dbError);
      849 |       const result = await safeQuery("SELECT * FROM test", ["param"]);
    > 850 |       expect(result).toBeNull();
          |                      ^
      851 |       expect(mockLogger.warn).toHaveBeenCalledWith(
      852 |         "Safe query failed, database may be unavailable",
      853 |         expect.objectContaining({

      at Object.toBeNull (tests/unit/utils/schemaValidator.test.js:850:22)

FAIL tests/unit/utils/riskEngine.test.js
  Risk Engine
    portfolio risk assessment
      ✕ should calculate portfolio VaR
      ✓ should assess concentration risk
      ✓ should calculate sector allocation risk (1 ms)
      ✕ should compute correlation matrix
    individual stock risk metrics
      ✕ should calculate beta coefficient
      ✕ should calculate historical volatility
      ✕ should calculate maximum drawdown
      ✕ should assess liquidity risk
    risk limit monitoring
      ✓ should check position size limits (1 ms)
      ✓ should validate sector allocation limits
      ✓ should monitor leverage limits
      ✓ should validate correlation limits
    stress testing and scenario analysis
      ✓ should run market crash scenario
      ✓ should perform Monte Carlo simulation (1 ms)
      ✓ should analyze interest rate sensitivity (1 ms)
      ✓ should evaluate tail risk events
    risk reporting and alerts
      ✓ should generate risk dashboard (1 ms)
      ✓ should create risk alerts
      ✓ should generate compliance report
    dynamic risk adjustment
      ✓ should calculate optimal position sizes
      ✓ should rebalance portfolio for risk control
      ✓ should adjust risk based on market conditions
    error handling and edge cases
      ✕ should handle missing price data
      ✓ should handle portfolio with zero weights
      ✓ should validate input parameters (9 ms)
      ✕ should handle database connection errors

  ● Risk Engine › portfolio risk assessment › should calculate portfolio VaR

    ReferenceError: query is not defined

      23 |       };
      24 |
    > 25 |       query.mockResolvedValue({ rows: mockPriceData });
         |       ^
      26 |
      27 |       const varResult = await riskEngine.calculateVaR(mockPortfolio, 0.95, 252);
      28 |

      at Object.query (tests/unit/utils/riskEngine.test.js:25:7)

  ● Risk Engine › portfolio risk assessment › should compute correlation matrix

    ReferenceError: query is not defined

      70 |       };
      71 |
    > 72 |       query.mockResolvedValue({ rows: mockReturns });
         |       ^
      73 |
      74 |       const correlationMatrix =
      75 |         await riskEngine.calculateCorrelationMatrix(symbols);

      at Object.query (tests/unit/utils/riskEngine.test.js:72:7)

  ● Risk Engine › individual stock risk metrics › should calculate beta coefficient

    ReferenceError: query is not defined

      86 |       const mockMarketReturns = [0.01, -0.005, 0.02, -0.015, 0.005];
      87 |
    > 88 |       query.mockResolvedValue({
         |       ^
      89 |         rows: [
      90 |           {
      91 |             stock_returns: mockStockReturns,

      at Object.query (tests/unit/utils/riskEngine.test.js:88:7)

  ● Risk Engine › individual stock risk metrics › should calculate historical volatility

    ReferenceError: query is not defined

      105 |       const mockPrices = [100, 102, 98, 105, 103, 107, 104, 109];
      106 |
    > 107 |       query.mockResolvedValue({ rows: mockPrices.map((price) => ({ price, date: '2023-01-01' })) });
          |       ^
      108 |
      109 |       const volatility = await riskEngine.calculateVolatility("AAPL", 30);
      110 |

      at Object.query (tests/unit/utils/riskEngine.test.js:107:7)

  ● Risk Engine › individual stock risk metrics › should calculate maximum drawdown

    ReferenceError: query is not defined

      117 |       const mockPrices = [100, 110, 95, 120, 85, 130, 90];
      118 |
    > 119 |       query.mockResolvedValue({ rows: mockPrices.map((price) => ({ price })) });
          |       ^
      120 |
      121 |       const maxDrawdown = await riskEngine.calculateMaxDrawdown("AAPL", 252);
      122 |

      at Object.query (tests/unit/utils/riskEngine.test.js:119:7)

  ● Risk Engine › individual stock risk metrics › should assess liquidity risk

    ReferenceError: query is not defined

      129 |       const mockVolumeData = [1000000, 800000, 1200000, 900000, 1100000];
      130 |
    > 131 |       query.mockResolvedValue({
          |       ^
      132 |         rows: mockVolumeData.map((volume) => ({ volume })),
      133 |       });
      134 |

      at Object.query (tests/unit/utils/riskEngine.test.js:131:7)

  ● Risk Engine › error handling and edge cases › should handle missing price data

    ReferenceError: query is not defined

      377 |   describe("error handling and edge cases", () => {
      378 |     test("should handle missing price data", async () => {
    > 379 |       query.mockResolvedValue({ rows: [] });
          |       ^
      380 |
      381 |       const volatility = await riskEngine.calculateVolatility("INVALID", 30);
      382 |

      at Object.query (tests/unit/utils/riskEngine.test.js:379:7)

  ● Risk Engine › error handling and edge cases › should handle database connection errors

    ReferenceError: query is not defined

      408 |
      409 |     test("should handle database connection errors", async () => {
    > 410 |       query.mockRejectedValue(new Error("Database connection failed"));
          |       ^
      411 |
      412 |       const result = await riskEngine.calculateVolatility("AAPL", 30);
      413 |

      at Object.query (tests/unit/utils/riskEngine.test.js:410:7)

FAIL tests/unit/routes/screener.test.js
  Screener Routes Unit Tests
    GET /screener
      ✕ should return screener API overview without authentication (1 ms)
    GET /screener/screen (authenticated)
      ✕ should screen stocks with default parameters
      ✕ should handle price filter parameters
      ✕ should handle market cap filter parameters
      ✕ should handle volume filter parameters
      ✕ should handle sector filter
      ✕ should handle PE ratio filters
      ✕ should handle dividend yield filters
      ✕ should handle pagination parameters
      ✕ should cap limit at 500
      ✕ should handle multiple filters combined
      ✕ should handle invalid numeric parameters gracefully
      ✕ should handle empty results
      ✕ should handle database query errors
    GET /screener/templates (authenticated)
      ○ skipped should return pre-built screening templates
      ○ skipped should filter templates by category
      ○ skipped should handle empty templates
    GET /screener/factors (authenticated)
      ○ skipped should return available screening factors
    Authentication
      ✕ should allow public access to root endpoint
      ✕ should require authentication for screening endpoint
    Parameter validation
      ✕ should sanitize SQL injection attempts
      ✕ should handle extreme numeric values
    Error handling
      ✕ should handle database timeout errors
      ○ skipped should handle factor scoring engine errors
    Response format
      ✕ should return consistent JSON response format (1 ms)
      ✕ should include pagination metadata

  ● Screener Routes Unit Tests › GET /screener › should return screener API overview without authentication

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should screen stocks with default parameters

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should handle price filter parameters

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should handle market cap filter parameters

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should handle volume filter parameters

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should handle sector filter

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should handle PE ratio filters

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should handle dividend yield filters

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should handle pagination parameters

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should cap limit at 500

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should handle multiple filters combined

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should handle invalid numeric parameters gracefully

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should handle empty results

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should handle database query errors

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › Authentication › should allow public access to root endpoint

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › Authentication › should require authentication for screening endpoint

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › Parameter validation › should sanitize SQL injection attempts

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › Parameter validation › should handle extreme numeric values

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › Error handling › should handle database timeout errors

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › Response format › should return consistent JSON response format

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › Response format › should include pagination metadata

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

FAIL tests/integration/utils/database-connection.integration.test.js
  Database Comprehensive Integration Tests
    Connection Management
      ✕ should establish database connection successfully (2 ms)
      ✕ should handle connection testing
      ✕ should manage connection pool efficiently
      ✕ should handle concurrent connections
    Query Operations
      ✕ should execute basic SELECT queries
      ✕ should handle parameterized queries
      ✕ should handle queries with no results
      ✓ should handle complex queries with JOINs
    Transaction Management
      ✕ should execute successful transactions
      ✓ should rollback failed transactions (1 ms)
      ✕ should handle nested transaction operations
    Error Handling
      ✕ should handle SQL syntax errors gracefully
      ✕ should handle connection timeout scenarios (1 ms)
      ✕ should handle invalid parameter types
      ✕ should handle database constraint violations
    Performance and Load Testing
      ✕ should handle bulk insert operations (1 ms)
      ✕ should handle high concurrency scenarios
    Data Integrity and Validation
      ✕ should maintain data consistency across operations
      ✕ should handle foreign key relationships properly
      ✕ should handle NULL values correctly
    Schema and Metadata Operations
      ✕ should query table schema information
      ✓ should check database statistics
      ✕ should verify database version and features
    Cleanup and Maintenance
      ✕ should clean up test data (1 ms)
      ✕ should verify cleanup completed

  ● Database Comprehensive Integration Tests › Connection Management › should establish database connection successfully

    expect(received).toBeDefined()

    Received: undefined

      49 |     test("should establish database connection successfully", async () => {
      50 |       const pool = getPool();
    > 51 |       expect(pool).toBeDefined();
         |                    ^
      52 |       expect(pool.totalCount).toBeDefined();
      53 |       expect(pool.idleCount).toBeDefined();
      54 |     });

      at Object.toBeDefined (tests/integration/utils/database-connection.integration.test.js:51:20)

  ● Database Comprehensive Integration Tests › Connection Management › should handle connection testing

    expect(received).toHaveProperty(path, value)

    Matcher error: received value must not be null nor undefined

    Received has value: undefined

      56 |     test("should handle connection testing", async () => {
      57 |       const connectionResult = await healthCheck();
    > 58 |       expect(connectionResult).toHaveProperty("status", "healthy");
         |                                ^
      59 |       expect(connectionResult).toHaveProperty("version");
      60 |       expect(connectionResult).toHaveProperty("timestamp");
      61 |     });

      at Object.toHaveProperty (tests/integration/utils/database-connection.integration.test.js:58:32)

  ● Database Comprehensive Integration Tests › Connection Management › should manage connection pool efficiently

    TypeError: Cannot read properties of undefined (reading 'idleCount')

      63 |     test("should manage connection pool efficiently", async () => {
      64 |       const pool = getPool();
    > 65 |       const initialIdleCount = pool.idleCount;
         |                                     ^
      66 |
      67 |       // Execute a simple query
      68 |       await query("SELECT NOW() as current_time");

      at Object.idleCount (tests/integration/utils/database-connection.integration.test.js:65:37)

  ● Database Comprehensive Integration Tests › Connection Management › should handle concurrent connections

    TypeError: Cannot read properties of undefined (reading 'query_number')

      82 |       expect(results).toHaveLength(5);
      83 |       results.forEach((result, index) => {
    > 84 |         expect(parseInt(result.rows[0].query_number)).toBe(index);
         |                                        ^
      85 |         expect(result.rows[0]).toHaveProperty("timestamp");
      86 |       });
      87 |     });

      at query_number (tests/integration/utils/database-connection.integration.test.js:84:40)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/utils/database-connection.integration.test.js:83:15)

  ● Database Comprehensive Integration Tests › Query Operations › should execute basic SELECT queries

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 0
    Received array:  []

       95 |
       96 |       expect(result).toHaveProperty("rows");
    >  97 |       expect(result.rows).toHaveLength(1);
          |                           ^
       98 |       expect(result.rows[0].test_value).toBe(1);
       99 |       expect(result.rows[0].test_string).toBe("hello");
      100 |     });

      at Object.toHaveLength (tests/integration/utils/database-connection.integration.test.js:97:27)

  ● Database Comprehensive Integration Tests › Query Operations › should handle parameterized queries

    TypeError: Cannot read properties of undefined (reading 'param_value')

      107 |       );
      108 |
    > 109 |       expect(result.rows[0].param_value).toBe(testValue);
          |                             ^
      110 |       expect(result.rows[0].param_number).toBe(42);
      111 |     });
      112 |

      at Object.param_value (tests/integration/utils/database-connection.integration.test.js:109:29)

  ● Database Comprehensive Integration Tests › Query Operations › should handle queries with no results

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: undefined

      118 |
      119 |       expect(result.rows).toHaveLength(0);
    > 120 |       expect(result.rowCount).toBe(0);
          |                               ^
      121 |     });
      122 |
      123 |     test("should handle complex queries with JOINs", async () => {

      at Object.toBe (tests/integration/utils/database-connection.integration.test.js:120:31)

  ● Database Comprehensive Integration Tests › Transaction Management › should execute successful transactions

    expect(received).toHaveProperty(path, value)

    Matcher error: received value must not be null nor undefined

    Received has value: undefined

      167 |       });
      168 |
    > 169 |       expect(result).toHaveProperty("ticker", "TRANS");
          |                      ^
      170 |       expect(result).toHaveProperty("short_name", "Transaction Test Co");
      171 |     });
      172 |

      at Object.toHaveProperty (tests/integration/utils/database-connection.integration.test.js:169:22)

  ● Database Comprehensive Integration Tests › Transaction Management › should handle nested transaction operations

    TypeError: Cannot read properties of undefined (reading 'count')

      221 |         `);
      222 |
    > 223 |         return countResult.rows[0].count;
          |                                    ^
      224 |       });
      225 |
      226 |       expect(parseInt(result)).toBeGreaterThanOrEqual(2);

      at count (tests/integration/utils/database-connection.integration.test.js:223:36)
      at Object.<anonymous> (tests/integration/utils/database-connection.integration.test.js:202:22)

  ● Database Comprehensive Integration Tests › Error Handling › should handle SQL syntax errors gracefully

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: {"rows": []}

      230 |   describe("Error Handling", () => {
      231 |     test("should handle SQL syntax errors gracefully", async () => {
    > 232 |       await expect(query("INVALID SQL SYNTAX HERE")).rejects.toThrow();
          |             ^
      233 |     });
      234 |
      235 |     test("should handle connection timeout scenarios", async () => {

      at expect (node_modules/expect/build/index.js:113:15)
      at Object.expect (tests/integration/utils/database-connection.integration.test.js:232:13)

  ● Database Comprehensive Integration Tests › Error Handling › should handle connection timeout scenarios

    expect(received).toHaveLength(expected)

    Expected length: 10
    Received length: 0
    Received array:  []

      240 |
      241 |       const result = await query(longQuery);
    > 242 |       expect(result.rows).toHaveLength(10);
          |                           ^
      243 |     }, 10000);
      244 |
      245 |     test("should handle invalid parameter types", async () => {

      at Object.toHaveLength (tests/integration/utils/database-connection.integration.test.js:242:27)

  ● Database Comprehensive Integration Tests › Error Handling › should handle invalid parameter types

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: {"rows": []}

      244 |
      245 |     test("should handle invalid parameter types", async () => {
    > 246 |       await expect(
          |             ^
      247 |         query("SELECT $1::int as value", ["not_a_number"])
      248 |       ).rejects.toThrow();
      249 |     });

      at expect (node_modules/expect/build/index.js:113:15)
      at Object.expect (tests/integration/utils/database-connection.integration.test.js:246:13)

  ● Database Comprehensive Integration Tests › Error Handling › should handle database constraint violations

    expect(received).toBeDefined()

    Received: undefined

      271 |       } catch (error) {
      272 |         // If error is thrown, it should be a constraint violation
    > 273 |         expect(error.code).toBeDefined();
          |                            ^
      274 |       }
      275 |     });
      276 |   });

      at Object.toBeDefined (tests/integration/utils/database-connection.integration.test.js:273:28)

  ● Database Comprehensive Integration Tests › Performance and Load Testing › should handle bulk insert operations

    TypeError: Cannot read properties of undefined (reading 'count')

      312 |       `);
      313 |
    > 314 |       expect(parseInt(countResult.rows[0].count)).toBe(100);
          |                                           ^
      315 |       expect(executionTime).toBeLessThan(30000); // Should complete within 30 seconds
      316 |     }, 45000);
      317 |

      at Object.count (tests/integration/utils/database-connection.integration.test.js:314:43)

  ● Database Comprehensive Integration Tests › Performance and Load Testing › should handle high concurrency scenarios

    TypeError: Cannot read properties of undefined (reading 'ticker')

      341 |       expect(results).toHaveLength(10);
      342 |       results.forEach((result, index) => {
    > 343 |         expect(result.ticker).toBe(`CONC${index}`);
          |                       ^
      344 |         expect(result.short_name).toBe(`Concurrent Test ${index}`);
      345 |       });
      346 |     });

      at ticker (tests/integration/utils/database-connection.integration.test.js:343:23)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/utils/database-connection.integration.test.js:342:15)

  ● Database Comprehensive Integration Tests › Data Integrity and Validation › should maintain data consistency across operations

    TypeError: Cannot read properties of undefined (reading 'market_category')

      408 |       );
      409 |
    > 410 |       expect(symbolResult.rows[0].market_category).toBe("Healthcare");
          |                                   ^
      411 |       expect(symbolResult.rows[0].name).toBe("Integrity Test Co");
      412 |       expect(parseInt(stockResult.rows[0].market_cap)).toBe(2000000);
      413 |       expect(parseFloat(stockResult.rows[0].price)).toBe(150.5);

      at Object.market_category (tests/integration/utils/database-connection.integration.test.js:410:35)

  ● Database Comprehensive Integration Tests › Data Integrity and Validation › should handle foreign key relationships properly

    expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      426 |       `);
      427 |
    > 428 |       expect(result.rows.length).toBeGreaterThan(0);
          |                                  ^
      429 |
      430 |       // Verify expected columns exist
      431 |       const columnNames = result.rows.map((row) => row.column_name);

      at Object.toBeGreaterThan (tests/integration/utils/database-connection.integration.test.js:428:34)

  ● Database Comprehensive Integration Tests › Data Integrity and Validation › should handle NULL values correctly

    TypeError: Cannot read properties of undefined (reading 'ticker')

      453 |       );
      454 |
    > 455 |       expect(result.rows[0].ticker).toBe(testSymbol);
          |                             ^
      456 |       expect(result.rows[0].short_name).toBe("Null Test Company");
      457 |       expect(result.rows[0].sector).toBeNull();
      458 |     });

      at Object.ticker (tests/integration/utils/database-connection.integration.test.js:455:29)

  ● Database Comprehensive Integration Tests › Schema and Metadata Operations › should query table schema information

    expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      468 |       `);
      469 |
    > 470 |       expect(result.rows.length).toBeGreaterThan(0);
          |                                  ^
      471 |
      472 |       // Verify we have expected tables
      473 |       const tableNames = [...new Set(result.rows.map((row) => row.table_name))];

      at Object.toBeGreaterThan (tests/integration/utils/database-connection.integration.test.js:470:34)

  ● Database Comprehensive Integration Tests › Schema and Metadata Operations › should verify database version and features

    TypeError: Cannot read properties of undefined (reading 'version')

      494 |       const result = await query("SELECT version() as version");
      495 |
    > 496 |       expect(result.rows[0].version).toContain("PostgreSQL");
          |                             ^
      497 |       expect(result.rows[0].version).toBeDefined();
      498 |     });
      499 |   });

      at Object.version (tests/integration/utils/database-connection.integration.test.js:496:29)

  ● Database Comprehensive Integration Tests › Cleanup and Maintenance › should clean up test data

    expect(received).toBeGreaterThanOrEqual(expected)

    Matcher error: received value must be a number or bigint

    Received has value: undefined

      528 |       await query("DELETE FROM company_profile WHERE ticker LIKE 'CONC%'");
      529 |
    > 530 |       expect(deleteResult.rowCount).toBeGreaterThanOrEqual(0);
          |                                     ^
      531 |     });
      532 |
      533 |     test("should verify cleanup completed", async () => {

      at Object.toBeGreaterThanOrEqual (tests/integration/utils/database-connection.integration.test.js:530:37)

  ● Database Comprehensive Integration Tests › Cleanup and Maintenance › should verify cleanup completed

    TypeError: Cannot read properties of undefined (reading 'count')

      543 |       `);
      544 |
    > 545 |       expect(parseInt(result.rows[0].count)).toBe(0);
          |                                      ^
      546 |     });
      547 |   });
      548 | });

      at Object.count (tests/integration/utils/database-connection.integration.test.js:545:38)

FAIL tests/integration/utils/liveDataManager.test.js
  Live Data Manager Integration Tests
    Dashboard Status Management
      ✕ should get comprehensive dashboard status
      ✕ should get provider status by ID
      ✕ should handle non-existent provider
    Connection Management
      ✕ should add new connection successfully
      ✕ should get connection status
      ✕ should remove connection successfully
      ✕ should handle connection limit enforcement
    Subscription Management
      ✕ should add subscription successfully
      ✕ should get user subscriptions
      ✕ should remove subscription successfully
      ✕ should remove all subscriber subscriptions
    Provider Usage Tracking
      ✕ should track provider usage successfully
      ✕ should handle invalid provider usage tracking (1 ms)
    Performance Metrics
      ✕ should track latency successfully (1 ms)
      ✕ should calculate average latency
      ✕ should track errors successfully
      ✕ should calculate global performance metrics
    Rate Limiting
      ✕ should set rate limit for provider
      ✕ should handle requests within rate limit
      ✕ should enforce rate limits
      ✕ should reset rate limit counters
    Alert Generation
      ✕ should generate alerts for system limits
      ✕ should generate optimization recommendations
    Provider Status Updates
      ✕ should update provider status
      ✕ should emit status change events
    Analytics and Reporting
      ✕ should generate analytics report
      ✕ should generate performance report
      ✕ should subscribe users to multiple symbols (1 ms)
    Error Handling
      ✕ should handle invalid connection parameters
      ✕ should handle invalid subscription parameters
      ✕ should return empty arrays for invalid user queries
      ✕ should handle tracking for non-existent providers

  ● Live Data Manager Integration Tests › Dashboard Status Management › should get comprehensive dashboard status

    TypeError: Cannot read properties of undefined (reading 'getDashboardStatus')

      66 |   describe("Dashboard Status Management", () => {
      67 |     test("should get comprehensive dashboard status", () => {
    > 68 |       const dashboardStatus = liveDataManager.getDashboardStatus();
         |                                               ^
      69 |
      70 |       expect(dashboardStatus).toBeDefined();
      71 |       expect(dashboardStatus.providers).toBeDefined();

      at Object.getDashboardStatus (tests/integration/utils/liveDataManager.test.js:68:47)

  ● Live Data Manager Integration Tests › Dashboard Status Management › should get provider status by ID

    TypeError: Cannot read properties of undefined (reading 'getProviderStatus')

      82 |
      83 |     test("should get provider status by ID", () => {
    > 84 |       const alpacaStatus = liveDataManager.getProviderStatus("alpaca");
         |                                            ^
      85 |
      86 |       expect(alpacaStatus).toBeDefined();
      87 |       expect(alpacaStatus.name).toBe("Alpaca Markets");

      at Object.getProviderStatus (tests/integration/utils/liveDataManager.test.js:84:44)

  ● Live Data Manager Integration Tests › Dashboard Status Management › should handle non-existent provider

    TypeError: Cannot read properties of undefined (reading 'getProviderStatus')

       95 |     test("should handle non-existent provider", () => {
       96 |       const nonExistentProvider =
    >  97 |         liveDataManager.getProviderStatus("nonexistent");
          |                         ^
       98 |       expect(nonExistentProvider).toBeNull();
       99 |     });
      100 |   });

      at Object.getProviderStatus (tests/integration/utils/liveDataManager.test.js:97:25)

  ● Live Data Manager Integration Tests › Connection Management › should add new connection successfully

    TypeError: Cannot read properties of undefined (reading 'addConnection')

      106 |       const symbols = ["AAPL", "GOOGL"];
      107 |
    > 108 |       const result = liveDataManager.addConnection(
          |                                      ^
      109 |         connectionId,
      110 |         provider,
      111 |         symbols

      at Object.addConnection (tests/integration/utils/liveDataManager.test.js:108:38)

  ● Live Data Manager Integration Tests › Connection Management › should get connection status

    TypeError: Cannot read properties of undefined (reading 'addConnection')

      121 |     test("should get connection status", () => {
      122 |       const connectionId = "test-connection-2";
    > 123 |       liveDataManager.addConnection(connectionId, "alpaca", ["MSFT"]);
          |                       ^
      124 |
      125 |       const status = liveDataManager.getConnectionStatus(connectionId);
      126 |

      at Object.addConnection (tests/integration/utils/liveDataManager.test.js:123:23)

  ● Live Data Manager Integration Tests › Connection Management › should remove connection successfully

    TypeError: Cannot read properties of undefined (reading 'addConnection')

      137 |     test("should remove connection successfully", () => {
      138 |       const connectionId = "test-connection-3";
    > 139 |       liveDataManager.addConnection(connectionId, "alpaca", ["TSLA"]);
          |                       ^
      140 |
      141 |       const result = liveDataManager.removeConnection(connectionId);
      142 |

      at Object.addConnection (tests/integration/utils/liveDataManager.test.js:139:23)

  ● Live Data Manager Integration Tests › Connection Management › should handle connection limit enforcement

    TypeError: Cannot read properties of undefined (reading 'addConnection')

      159 |       for (let i = 0; i < 20; i++) {
      160 |         const connectionId = `limit-test-${i}`;
    > 161 |         const result = liveDataManager.addConnection(connectionId, "alpaca", [
          |                                        ^
      162 |           "AAPL",
      163 |         ]);
      164 |

      at Object.addConnection (tests/integration/utils/liveDataManager.test.js:161:40)

  ● Live Data Manager Integration Tests › Subscription Management › should add subscription successfully

    TypeError: Cannot read properties of undefined (reading 'addConnection')

      190 |
      191 |       // First add a connection
    > 192 |       liveDataManager.addConnection(connectionId, provider, [symbol]);
          |                       ^
      193 |
      194 |       const result = liveDataManager.addSubscription(
      195 |         symbol,

      at Object.addConnection (tests/integration/utils/liveDataManager.test.js:192:23)

  ● Live Data Manager Integration Tests › Subscription Management › should get user subscriptions

    TypeError: Cannot read properties of undefined (reading 'addConnection')

      214 |       const connectionId = "sub-test-2";
      215 |
    > 216 |       liveDataManager.addConnection(connectionId, provider, [symbol]);
          |                       ^
      217 |       liveDataManager.addSubscription(symbol, provider, connectionId, userId);
      218 |
      219 |       const subscriptions = liveDataManager.getUserSubscriptions(userId);

      at Object.addConnection (tests/integration/utils/liveDataManager.test.js:216:23)

  ● Live Data Manager Integration Tests › Subscription Management › should remove subscription successfully

    TypeError: Cannot read properties of undefined (reading 'addConnection')

      235 |       const connectionId = "sub-test-3";
      236 |
    > 237 |       liveDataManager.addConnection(connectionId, provider, [symbol]);
          |                       ^
      238 |       liveDataManager.addSubscription(symbol, provider, connectionId, userId);
      239 |
      240 |       const result = liveDataManager.removeSubscription(symbol, userId);

      at Object.addConnection (tests/integration/utils/liveDataManager.test.js:237:23)

  ● Live Data Manager Integration Tests › Subscription Management › should remove all subscriber subscriptions

    TypeError: Cannot read properties of undefined (reading 'addConnection')

      259 |       symbols.forEach((symbol, index) => {
      260 |         const connectionId = `multi-sub-${index}`;
    > 261 |         liveDataManager.addConnection(connectionId, provider, [symbol]);
          |                         ^
      262 |         liveDataManager.addSubscription(symbol, provider, connectionId, userId);
      263 |       });
      264 |

      at addConnection (tests/integration/utils/liveDataManager.test.js:261:25)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/utils/liveDataManager.test.js:259:15)

  ● Live Data Manager Integration Tests › Provider Usage Tracking › should track provider usage successfully

    TypeError: Cannot read properties of undefined (reading 'trackProviderUsage')

      283 |       const cost = 5.5;
      284 |
    > 285 |       const result = liveDataManager.trackProviderUsage(
          |                                      ^
      286 |         providerId,
      287 |         requests,
      288 |         cost

      at Object.trackProviderUsage (tests/integration/utils/liveDataManager.test.js:285:38)

  ● Live Data Manager Integration Tests › Provider Usage Tracking › should handle invalid provider usage tracking

    TypeError: Cannot read properties of undefined (reading 'trackProviderUsage')

      302 |
      303 |     test("should handle invalid provider usage tracking", () => {
    > 304 |       const result = liveDataManager.trackProviderUsage("nonexistent", 5, 1.0);
          |                                      ^
      305 |
      306 |       expect(result).toBeDefined();
      307 |       expect(result.success).toBe(false);

      at Object.trackProviderUsage (tests/integration/utils/liveDataManager.test.js:304:38)

  ● Live Data Manager Integration Tests › Performance Metrics › should track latency successfully

    TypeError: Cannot read properties of undefined (reading 'trackLatency')

      315 |       const latency = 150;
      316 |
    > 317 |       const result = liveDataManager.trackLatency(providerId, latency);
          |                                      ^
      318 |
      319 |       expect(result).toBeDefined();
      320 |       expect(result.success).toBe(true);

      at Object.trackLatency (tests/integration/utils/liveDataManager.test.js:317:38)

  ● Live Data Manager Integration Tests › Performance Metrics › should calculate average latency

    TypeError: Cannot read properties of undefined (reading 'trackLatency')

      330 |       // Track multiple latency measurements
      331 |       latencies.forEach((latency) => {
    > 332 |         liveDataManager.trackLatency(providerId, latency);
          |                         ^
      333 |       });
      334 |
      335 |       const avgLatency = liveDataManager.calculateAverageLatency(providerId);

      at trackLatency (tests/integration/utils/liveDataManager.test.js:332:25)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/utils/liveDataManager.test.js:331:17)

  ● Live Data Manager Integration Tests › Performance Metrics › should track errors successfully

    TypeError: Cannot read properties of undefined (reading 'trackError')

      344 |       const error = "Connection timeout";
      345 |
    > 346 |       const result = liveDataManager.trackError(providerId, error);
          |                                      ^
      347 |
      348 |       expect(result).toBeDefined();
      349 |       expect(result.success).toBe(true);

      at Object.trackError (tests/integration/utils/liveDataManager.test.js:346:38)

  ● Live Data Manager Integration Tests › Performance Metrics › should calculate global performance metrics

    TypeError: Cannot read properties of undefined (reading 'calculateGlobalPerformance')

      355 |
      356 |     test("should calculate global performance metrics", () => {
    > 357 |       const performance = liveDataManager.calculateGlobalPerformance();
          |                                           ^
      358 |
      359 |       expect(performance).toBeDefined();
      360 |       expect(typeof performance.averageLatency).toBe("number");

      at Object.calculateGlobalPerformance (tests/integration/utils/liveDataManager.test.js:357:43)

  ● Live Data Manager Integration Tests › Rate Limiting › should set rate limit for provider

    TypeError: Cannot read properties of undefined (reading 'setRateLimit')

      374 |       const limit = 10; // 10 requests per second
      375 |
    > 376 |       liveDataManager.setRateLimit(provider, limit);
          |                       ^
      377 |
      378 |       // Verify rate limit is set (internal check)
      379 |       expect(liveDataManager.rateLimits).toBeDefined();

      at Object.setRateLimit (tests/integration/utils/liveDataManager.test.js:376:23)

  ● Live Data Manager Integration Tests › Rate Limiting › should handle requests within rate limit

    TypeError: Cannot read properties of undefined (reading 'setRateLimit')

      383 |     test("should handle requests within rate limit", async () => {
      384 |       const provider = "rate-test-provider";
    > 385 |       liveDataManager.setRateLimit(provider, 5); // 5 requests per second
          |                       ^
      386 |
      387 |       // Make requests within limit
      388 |       for (let i = 0; i < 5; i++) {

      at Object.setRateLimit (tests/integration/utils/liveDataManager.test.js:385:23)

  ● Live Data Manager Integration Tests › Rate Limiting › should enforce rate limits

    TypeError: Cannot read properties of undefined (reading 'setRateLimit')

      395 |     test("should enforce rate limits", async () => {
      396 |       const provider = "rate-limit-test";
    > 397 |       liveDataManager.setRateLimit(provider, 2); // 2 requests per second
          |                       ^
      398 |
      399 |       // Make requests exceeding limit
      400 |       const results = [];

      at Object.setRateLimit (tests/integration/utils/liveDataManager.test.js:397:23)

  ● Live Data Manager Integration Tests › Rate Limiting › should reset rate limit counters

    TypeError: Cannot read properties of undefined (reading 'setRateLimit')

      411 |     test("should reset rate limit counters", () => {
      412 |       const provider = "reset-test-provider";
    > 413 |       liveDataManager.setRateLimit(provider, 5);
          |                       ^
      414 |
      415 |       // Make some requests
      416 |       liveDataManager.makeRequest(provider, "/test");

      at Object.setRateLimit (tests/integration/utils/liveDataManager.test.js:413:23)

  ● Live Data Manager Integration Tests › Alert Generation › should generate alerts for system limits

    TypeError: Cannot read properties of undefined (reading 'addConnection')

      430 |       // Add some connections and usage to trigger alerts
      431 |       for (let i = 0; i < 8; i++) {
    > 432 |         liveDataManager.addConnection(`alert-test-${i}`, "alpaca", ["AAPL"]);
          |                         ^
      433 |       }
      434 |
      435 |       // Track some usage

      at Object.addConnection (tests/integration/utils/liveDataManager.test.js:432:25)

  ● Live Data Manager Integration Tests › Alert Generation › should generate optimization recommendations

    TypeError: Cannot read properties of undefined (reading 'generateOptimizationRecommendations')

      456 |     test("should generate optimization recommendations", () => {
      457 |       const recommendations =
    > 458 |         liveDataManager.generateOptimizationRecommendations();
          |                         ^
      459 |
      460 |       expect(Array.isArray(recommendations)).toBe(true);
      461 |

      at Object.generateOptimizationRecommendations (tests/integration/utils/liveDataManager.test.js:458:25)

  ● Live Data Manager Integration Tests › Provider Status Updates › should update provider status

    TypeError: Cannot read properties of undefined (reading 'updateProviderStatus')

      474 |       const newStatus = "connecting";
      475 |
    > 476 |       liveDataManager.updateProviderStatus(providerId, newStatus);
          |                       ^
      477 |
      478 |       const provider = liveDataManager.getProviderStatus(providerId);
      479 |       expect(provider.status).toBe(newStatus);

      at Object.updateProviderStatus (tests/integration/utils/liveDataManager.test.js:476:23)

  ● Live Data Manager Integration Tests › Provider Status Updates › should emit status change events

    TypeError: Cannot read properties of undefined (reading 'once')

      484 |       const newStatus = "active";
      485 |
    > 486 |       liveDataManager.once("providerStatusChange", (event) => {
          |                       ^
      487 |         expect(event).toBeDefined();
      488 |         expect(event.provider).toBe(providerId);
      489 |         expect(event.newStatus).toBe(newStatus);

      at Object.once (tests/integration/utils/liveDataManager.test.js:486:23)

  ● Live Data Manager Integration Tests › Analytics and Reporting › should generate analytics report

    TypeError: Cannot read properties of undefined (reading 'addConnection')

      500 |       // Add some test data
      501 |       const userId = "analytics-user";
    > 502 |       liveDataManager.addConnection("analytics-conn", "alpaca", [
          |                       ^
      503 |         "AAPL",
      504 |         "GOOGL",
      505 |       ]);

      at Object.addConnection (tests/integration/utils/liveDataManager.test.js:502:23)

  ● Live Data Manager Integration Tests › Analytics and Reporting › should generate performance report

    TypeError: Cannot read properties of undefined (reading 'generatePerformanceReport')

      531 |
      532 |     test("should generate performance report", () => {
    > 533 |       const report = liveDataManager.generatePerformanceReport();
          |                                      ^
      534 |
      535 |       expect(report).toBeDefined();
      536 |       expect(typeof report.uptime).toBe("number");

      at Object.generatePerformanceReport (tests/integration/utils/liveDataManager.test.js:533:38)

  ● Live Data Manager Integration Tests › Analytics and Reporting › should subscribe users to multiple symbols

    TypeError: Cannot read properties of undefined (reading 'subscribe')

      552 |       const symbols = ["AAPL", "GOOGL", "MSFT"];
      553 |
    > 554 |       const result = liveDataManager.subscribe(userId, symbols);
          |                                      ^
      555 |
      556 |       expect(result).toBeDefined();
      557 |       expect(result.success).toBe(true);

      at Object.subscribe (tests/integration/utils/liveDataManager.test.js:554:38)

  ● Live Data Manager Integration Tests › Error Handling › should handle invalid connection parameters

    TypeError: Cannot read properties of undefined (reading 'addConnection')

      570 |   describe("Error Handling", () => {
      571 |     test("should handle invalid connection parameters", () => {
    > 572 |       const result = liveDataManager.addConnection("", "invalid-provider", []);
          |                                      ^
      573 |
      574 |       expect(result).toBeDefined();
      575 |       expect(result.success).toBe(false);

      at Object.addConnection (tests/integration/utils/liveDataManager.test.js:572:38)

  ● Live Data Manager Integration Tests › Error Handling › should handle invalid subscription parameters

    TypeError: Cannot read properties of undefined (reading 'addSubscription')

      578 |
      579 |     test("should handle invalid subscription parameters", () => {
    > 580 |       const result = liveDataManager.addSubscription("", "", "", "");
          |                                      ^
      581 |
      582 |       expect(result).toBeDefined();
      583 |       expect(result.success).toBe(false);

      at Object.addSubscription (tests/integration/utils/liveDataManager.test.js:580:38)

  ● Live Data Manager Integration Tests › Error Handling › should return empty arrays for invalid user queries

    TypeError: Cannot read properties of undefined (reading 'getUserSubscriptions')

      586 |
      587 |     test("should return empty arrays for invalid user queries", () => {
    > 588 |       const subscriptions = liveDataManager.getUserSubscriptions("");
          |                                             ^
      589 |       expect(Array.isArray(subscriptions)).toBe(true);
      590 |       expect(subscriptions.length).toBe(0);
      591 |     });

      at Object.getUserSubscriptions (tests/integration/utils/liveDataManager.test.js:588:45)

  ● Live Data Manager Integration Tests › Error Handling › should handle tracking for non-existent providers

    TypeError: Cannot read properties of undefined (reading 'trackLatency')

      592 |
      593 |     test("should handle tracking for non-existent providers", () => {
    > 594 |       const latencyResult = liveDataManager.trackLatency("nonexistent", 100);
          |                                             ^
      595 |       expect(latencyResult.success).toBe(false);
      596 |
      597 |       const errorResult = liveDataManager.trackError(

      at Object.trackLatency (tests/integration/utils/liveDataManager.test.js:594:45)

FAIL tests/unit/utils/logger.test.js
  Logger
    Initialization
      ✓ should initialize with default values (1 ms)
      ✓ should initialize with environment variables
    Log Level Parsing
      ✓ should parse valid log levels
      ✓ should handle case insensitive log levels (1 ms)
      ✓ should default to INFO for invalid log levels
    Correlation ID Generation
      ✓ should generate correlation ID from UUID
    Base Entry Creation
      ✓ should create base log entry with required fields (1 ms)
      ✓ should include additional context
      ✓ should use provided correlation ID
    Log Level Checking
      ✓ should check if level should be logged (1 ms)
    Output Formatting
      ✓ should format output for development environment
      ✕ should format output for production environment
      ✓ should handle development output without extra context (1 ms)
    Error Logging
      ✓ should log error messages
      ✓ should log error with Error object
      ✕ should not log error if level too low (1 ms)
    Warning Logging
      ✓ should log warning messages
      ✓ should log warning with context
    Info Logging
      ✓ should log info messages
      ✓ should log info with context (1 ms)
    Debug Logging
      ✕ should not log debug messages with default level (2 ms)
      ✓ should log debug messages when level is DEBUG (1 ms)
    Specialized Logging Methods
      ✓ should log database operations
      ✓ should log API calls
      ✓ should log authentication events
      ✓ should log performance with normal duration (1 ms)
      ✓ should log performance warning for slow operations
      ✓ should log security events
      ✓ should log user actions
      ✓ should log user actions for anonymous users (1 ms)
    Request Middleware
      ✓ should create request middleware
      ✓ should handle incoming request
      ✓ should handle request with authorization header (1 ms)
      ✓ should override res.json to log response
    Error Middleware
      ✓ should create error middleware
      ✓ should handle errors (1 ms)
    Child Logger
      ✓ should create child logger with additional context
      ✓ should use child logger context in logs
    Application Lifecycle Logging
      ✓ should log application startup
      ✓ should log application shutdown (1 ms)
      ✓ should log configuration loaded
    Configuration Sanitization
      ✓ should sanitize sensitive configuration values
      ✓ should sanitize nested configuration objects (1 ms)
      ✓ should handle null values in configuration

  ● Logger › Output Formatting › should format output for production environment

    ReferenceError: Logger is not defined

      177 |       // Reinitialize logger with production environment
      178 |       delete require.cache[require.resolve("../../../utils/logger")];
    > 179 |       const prodLogger = new Logger();
          |                          ^
      180 |
      181 |       const logEntry = {
      182 |         timestamp: "2023-01-01T00:00:00.000Z",

      at Object.<anonymous> (tests/unit/utils/logger.test.js:179:26)

  ● Logger › Error Logging › should not log error if level too low

    ReferenceError: Logger is not defined

      229 |     test("should not log error if level too low", () => {
      230 |       // Create a new logger instance instead of modifying the singleton
    > 231 |       const quietLogger = new Logger();
          |                           ^
      232 |       quietLogger.currentLevel = -1;
      233 |
      234 |       quietLogger.error("Should not log");

      at Object.<anonymous> (tests/unit/utils/logger.test.js:231:27)

  ● Logger › Debug Logging › should not log debug messages with default level

    ReferenceError: Logger is not defined

      287 |     test("should not log debug messages with default level", () => {
      288 |       // Create a logger with the actual default level (INFO = 2) by creating a new instance
    > 289 |       const defaultLogger = new Logger();
          |                             ^
      290 |       defaultLogger.currentLevel = 2; // INFO level explicitly
      291 |
      292 |       // Create fresh spy for this test to avoid interference

      at Object.<anonymous> (tests/unit/utils/logger.test.js:289:29)

FAIL tests/integration/services/cross-service-integration.test.js
  Cross-Service Integration
    Portfolio → Market Data → Risk Analysis Integration
      ✕ should integrate portfolio analysis with market data and risk engine (1 ms)
      ✕ should integrate market data with technical analysis
    Authentication → Database → Service Integration
      ✕ should maintain user context across database operations
      ✕ should handle database transactions across multiple services
    Real-Time Data → WebSocket → Client Integration
      ✕ should coordinate real-time data with WebSocket notifications
      ✕ should integrate streaming data with alert system
    External Service Integration
      ✕ should integrate with Alpaca API service
      ✕ should handle external service timeouts
    Database → Cache → Service Integration
      ✕ should coordinate database queries with caching layer
    Error Recovery Integration
      ✕ should handle service failure cascades gracefully

  ● Cross-Service Integration › Portfolio → Market Data → Risk Analysis Integration › should integrate portfolio analysis with market data and risk engine

    TypeError: Cannot read properties of undefined (reading 'address')

      56 |       // Step 1: Get portfolio data
      57 |       const portfolioResponse = await request(app)
    > 58 |         .get("/api/portfolio/positions")
         |          ^
      59 |         .set("Authorization", authToken);
      60 |
      61 |       expect([200, 401, 500]).toContain(portfolioResponse.status);

      at Test.serverAddress (node_modules/supertest/lib/test.js:46:22)
      at new Test (node_modules/supertest/lib/test.js:34:14)
      at Object.obj.<computed> [as get] (node_modules/supertest/index.js:43:18)
      at Object.get (tests/integration/services/cross-service-integration.test.js:58:10)

  ● Cross-Service Integration › Portfolio → Market Data → Risk Analysis Integration › should integrate market data with technical analysis

    TypeError: Cannot read properties of undefined (reading 'address')

      83 |       // Step 1: Get market data
      84 |       const marketResponse = await request(app)
    > 85 |         .get("/api/market/data")
         |          ^
      86 |         .set("Authorization", authToken)
      87 |         .query({ symbols: "AAPL", timeframe: "1D" });
      88 |

      at Test.serverAddress (node_modules/supertest/lib/test.js:46:22)
      at new Test (node_modules/supertest/lib/test.js:34:14)
      at Object.obj.<computed> [as get] (node_modules/supertest/index.js:43:18)
      at Object.get (tests/integration/services/cross-service-integration.test.js:85:10)

  ● Cross-Service Integration › Authentication → Database → Service Integration › should maintain user context across database operations

    TypeError: Cannot read properties of undefined (reading 'address')

      113 |       // Test that user from auth middleware is used in database queries
      114 |       const response = await request(app)
    > 115 |         .get("/api/portfolio/summary")
          |          ^
      116 |         .set("Authorization", authToken);
      117 |
      118 |       expect([200, 401]).toContain(response.status);

      at Test.serverAddress (node_modules/supertest/lib/test.js:46:22)
      at new Test (node_modules/supertest/lib/test.js:34:14)
      at Object.obj.<computed> [as get] (node_modules/supertest/index.js:43:18)
      at Object.get (tests/integration/services/cross-service-integration.test.js:115:10)

  ● Cross-Service Integration › Authentication → Database → Service Integration › should handle database transactions across multiple services

    TypeError: Cannot read properties of undefined (reading 'address')

      135 |
      136 |       const response = await request(app)
    > 137 |         .post("/api/orders")
          |          ^
      138 |         .set("Authorization", authToken)
      139 |         .send(orderData);
      140 |

      at Test.serverAddress (node_modules/supertest/lib/test.js:46:22)
      at new Test (node_modules/supertest/lib/test.js:34:14)
      at Object.obj.<computed> [as post] (node_modules/supertest/index.js:43:18)
      at Object.post (tests/integration/services/cross-service-integration.test.js:137:10)

  ● Cross-Service Integration › Real-Time Data → WebSocket → Client Integration › should coordinate real-time data with WebSocket notifications

    TypeError: Cannot read properties of undefined (reading 'address')

      156 |       // Step 1: Subscribe to market data updates
      157 |       const subscriptionResponse = await request(app)
    > 158 |         .post("/api/websocket/subscribe")
          |          ^
      159 |         .set("Authorization", authToken)
      160 |         .send({
      161 |           channels: ["quotes"],

      at Test.serverAddress (node_modules/supertest/lib/test.js:46:22)
      at new Test (node_modules/supertest/lib/test.js:34:14)
      at Object.obj.<computed> [as post] (node_modules/supertest/index.js:43:18)
      at Object.post (tests/integration/services/cross-service-integration.test.js:158:10)

  ● Cross-Service Integration › Real-Time Data → WebSocket → Client Integration › should integrate streaming data with alert system

    TypeError: Cannot read properties of undefined (reading 'address')

      174 |       // Step 1: Create an alert
      175 |       const alertResponse = await request(app)
    > 176 |         .post("/api/alerts")
          |          ^
      177 |         .set("Authorization", authToken)
      178 |         .send({
      179 |           symbol: "AAPL",

      at Test.serverAddress (node_modules/supertest/lib/test.js:46:22)
      at new Test (node_modules/supertest/lib/test.js:34:14)
      at Object.obj.<computed> [as post] (node_modules/supertest/index.js:43:18)
      at Object.post (tests/integration/services/cross-service-integration.test.js:176:10)

  ● Cross-Service Integration › External Service Integration › should integrate with Alpaca API service

    TypeError: Cannot read properties of undefined (reading 'address')

      200 |       // Test external service integration
      201 |       const response = await request(app)
    > 202 |         .get("/api/market/live")
          |          ^
      203 |         .set("Authorization", authToken)
      204 |         .query({ symbols: "AAPL" });
      205 |

      at Test.serverAddress (node_modules/supertest/lib/test.js:46:22)
      at new Test (node_modules/supertest/lib/test.js:34:14)
      at Object.obj.<computed> [as get] (node_modules/supertest/index.js:43:18)
      at Object.get (tests/integration/services/cross-service-integration.test.js:202:10)

  ● Cross-Service Integration › External Service Integration › should handle external service timeouts

    TypeError: Cannot read properties of undefined (reading 'address')

      216 |       // Test timeout handling in service integration
      217 |       const response = await request(app)
    > 218 |         .get("/api/market/historical")
          |          ^
      219 |         .set("Authorization", authToken)
      220 |         .query({
      221 |           symbols: "AAPL",

      at Test.serverAddress (node_modules/supertest/lib/test.js:46:22)
      at new Test (node_modules/supertest/lib/test.js:34:14)
      at Object.obj.<computed> [as get] (node_modules/supertest/index.js:43:18)
      at Object.get (tests/integration/services/cross-service-integration.test.js:218:10)

  ● Cross-Service Integration › Database → Cache → Service Integration › should coordinate database queries with caching layer

    TypeError: Cannot read properties of undefined (reading 'address')

      235 |       // First request - should hit database
      236 |       const firstResponse = await request(app)
    > 237 |         .get("/api/market/data")
          |          ^
      238 |         .set("Authorization", authToken)
      239 |         .query({ symbols: "AAPL" });
      240 |

      at Test.serverAddress (node_modules/supertest/lib/test.js:46:22)
      at new Test (node_modules/supertest/lib/test.js:34:14)
      at Object.obj.<computed> [as get] (node_modules/supertest/index.js:43:18)
      at Object.get (tests/integration/services/cross-service-integration.test.js:237:10)

  ● Cross-Service Integration › Error Recovery Integration › should handle service failure cascades gracefully

    TypeError: Cannot read properties of undefined (reading 'address')

      262 |       // Test what happens when one service in a chain fails
      263 |       const response = await request(app)
    > 264 |         .post("/api/portfolio/rebalance")
          |          ^
      265 |         .set("Authorization", authToken)
      266 |         .send({
      267 |           target_allocation: {

      at Test.serverAddress (node_modules/supertest/lib/test.js:46:22)
      at new Test (node_modules/supertest/lib/test.js:34:14)
      at Object.obj.<computed> [as post] (node_modules/supertest/index.js:43:18)
      at Object.post (tests/integration/services/cross-service-integration.test.js:264:10)

FAIL tests/integration/database/cross-service-transaction.integration.test.js
  Cross-Service Transaction Integration
    Service Coordination Patterns
      ✕ should coordinate portfolio and order service transactions
      ✕ should handle cross-service transaction failure and rollback
    Service Dependency Management
      ✕ should handle service dependency chain transactions
      ✕ should handle circular dependency resolution
    Distributed Transaction Patterns
      ✕ should implement saga pattern for long-running transactions (1 ms)

  ● Cross-Service Transaction Integration › Service Coordination Patterns › should coordinate portfolio and order service transactions

    TypeError: Cannot read properties of undefined (reading 'id')

      115 |         );
      116 |
    > 117 |         const orderId = orderResult.rows[0].id;
          |                                             ^
      118 |
      119 |         // Step 2: Portfolio service - Check position availability
      120 |         const positionResult = await client.query(

      at id (tests/integration/database/cross-service-transaction.integration.test.js:117:45)
      at Object.<anonymous> (tests/integration/database/cross-service-transaction.integration.test.js:101:34)

  ● Cross-Service Transaction Integration › Service Coordination Patterns › should handle cross-service transaction failure and rollback

    TypeError: Cannot read properties of undefined (reading 'balance')

      323 |           "SELECT balance FROM account_balance WHERE user_id = 1"
      324 |         );
    > 325 |         expect(parseFloat(balanceResult.rows[0].balance)).toBe(15000.0);
          |                                                 ^
      326 |
      327 |         // Market data should still exist
      328 |         const marketResult = await client.query(

      at balance (tests/integration/database/cross-service-transaction.integration.test.js:325:49)
      at Object.<anonymous> (tests/integration/database/cross-service-transaction.integration.test.js:320:7)

  ● Cross-Service Transaction Integration › Service Dependency Management › should handle service dependency chain transactions

    TypeError: Cannot read properties of undefined (reading 'trading_enabled')

      410 |         );
      411 |
    > 412 |         if (!userResult.rows[0].trading_enabled) {
          |                                 ^
      413 |           throw new Error("Trading not enabled for user");
      414 |         }
      415 |

      at trading_enabled (tests/integration/database/cross-service-transaction.integration.test.js:412:33)
      at Object.<anonymous> (tests/integration/database/cross-service-transaction.integration.test.js:400:42)

  ● Cross-Service Transaction Integration › Service Dependency Management › should handle circular dependency resolution

    TypeError: Cannot read properties of undefined (reading 'id')

      568 |           RETURNING id
      569 |         `);
    > 570 |         const serviceAId = serviceAResult.rows[0].id;
          |                                                   ^
      571 |
      572 |         const serviceBResult = await client.query(`
      573 |           INSERT INTO service_b (value, status) 

      at id (tests/integration/database/cross-service-transaction.integration.test.js:570:51)
      at Object.<anonymous> (tests/integration/database/cross-service-transaction.integration.test.js:553:44)

  ● Cross-Service Transaction Integration › Distributed Transaction Patterns › should implement saga pattern for long-running transactions

    TypeError: Cannot read properties of undefined (reading 'id')

      805 |           await client.query(
      806 |             "UPDATE payment_authorizations SET status = 'authorized' WHERE id = $1",
    > 807 |             [paymentResult.rows[0].id]
          |                                    ^
      808 |           );
      809 |           await client.query(
      810 |             "UPDATE saga_steps SET status = 'completed', completed_at = NOW() WHERE saga_id = $1 AND step_number = 3",

      at id (tests/integration/database/cross-service-transaction.integration.test.js:807:36)
      at Object.<anonymous> (tests/integration/database/cross-service-transaction.integration.test.js:723:29)

FAIL tests/unit/utils/tradingModeHelper.test.js
  Trading Mode Helper Unit Tests
    getUserTradingMode
      ✕ should return paper mode by default
      ✕ should return paper mode when trading_preferences.paper_trading_mode is true (1 ms)
      ✕ should return live mode when trading_preferences.paper_trading_mode is false
      ✕ should default to paper mode on database error
    addTradingModeContext
      ✕ should add paper trading context
      ✕ should add live trading context
    validateTradingOperation
      ✕ should allow all operations in paper mode
      ✕ should require API keys for live trading
      ✕ should allow live trading with valid API keys
      ✕ should block high-value trades without confirmation
      ✕ should allow high-value trades with confirmation
    getTradingModeTable
      ✕ should return paper table name for paper mode (1 ms)
      ✕ should return live table name for live mode
    executeWithTradingMode
      ✕ should execute query with paper table
      ✕ should fallback to base table when mode-specific table fails
    formatPortfolioWithMode
      ✕ should format portfolio data with paper trading context
      ✕ should format portfolio data with live trading context
    checkLiveTradingRequirements
      ✕ should return true when production API keys exist
      ✕ should return false when only sandbox API keys exist (1 ms)
      ✕ should return false when no API keys exist
      ✕ should return false on database error

  ● Trading Mode Helper Unit Tests › getUserTradingMode › should return paper mode by default

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › getUserTradingMode › should return paper mode when trading_preferences.paper_trading_mode is true

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › getUserTradingMode › should return live mode when trading_preferences.paper_trading_mode is false

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › getUserTradingMode › should default to paper mode on database error

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › addTradingModeContext › should add paper trading context

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › addTradingModeContext › should add live trading context

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › validateTradingOperation › should allow all operations in paper mode

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › validateTradingOperation › should require API keys for live trading

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › validateTradingOperation › should allow live trading with valid API keys

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › validateTradingOperation › should block high-value trades without confirmation

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › validateTradingOperation › should allow high-value trades with confirmation

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › getTradingModeTable › should return paper table name for paper mode

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › getTradingModeTable › should return live table name for live mode

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › executeWithTradingMode › should execute query with paper table

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › executeWithTradingMode › should fallback to base table when mode-specific table fails

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › formatPortfolioWithMode › should format portfolio data with paper trading context

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › formatPortfolioWithMode › should format portfolio data with live trading context

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › checkLiveTradingRequirements › should return true when production API keys exist

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › checkLiveTradingRequirements › should return false when only sandbox API keys exist

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › checkLiveTradingRequirements › should return false when no API keys exist

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › checkLiveTradingRequirements › should return false on database error

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

FAIL tests/integration/database/rollback-scenarios.integration.test.js
  Database Rollback Scenarios Integration
    Automatic Rollback on Error
      ✕ should automatically rollback on SQL errors
      ✕ should rollback on application errors within transaction
    Explicit Rollback Scenarios
      ✕ should handle manual rollback calls
      ✕ should handle nested transaction scenarios
    Rollback with Complex Data Modifications
      ✕ should rollback complex multi-table operations (1 ms)
      ✕ should handle rollback with data type conversions and constraints (1 ms)
    Rollback Recovery and Cleanup
      ✕ should properly clean up resources after rollback
      ✕ should maintain database connection health after rollbacks (1 ms)
    Rollback with Real-World Scenarios
      ✕ should handle portfolio transaction rollback (1 ms)

  ● Database Rollback Scenarios Integration › Automatic Rollback on Error › should automatically rollback on SQL errors

    TypeError: Cannot read properties of undefined (reading 'count')

      66 |           "SELECT COUNT(*) as count FROM test_rollback_error"
      67 |         );
    > 68 |         return parseInt(result.rows[0].count);
         |                                        ^
      69 |       });
      70 |       expect(initialCount).toBe(1);
      71 |

      at count (tests/integration/database/rollback-scenarios.integration.test.js:68:40)
      at Object.<anonymous> (tests/integration/database/rollback-scenarios.integration.test.js:64:28)

  ● Database Rollback Scenarios Integration › Automatic Rollback on Error › should rollback on application errors within transaction

    TypeError: Cannot read properties of undefined (reading 'count')

      142 |           "SELECT COUNT(*) as count FROM test_app_error_rollback"
      143 |         );
    > 144 |         return parseInt(result.rows[0].count);
          |                                        ^
      145 |       });
      146 |       expect(count).toBe(0);
      147 |     });

      at count (tests/integration/database/rollback-scenarios.integration.test.js:144:40)
      at Object.<anonymous> (tests/integration/database/rollback-scenarios.integration.test.js:140:21)

  ● Database Rollback Scenarios Integration › Explicit Rollback Scenarios › should handle manual rollback calls

    ReferenceError: Pool is not defined

      194 |
      195 |       // Real database testing code
    > 196 |       const pool = new Pool({
          |                    ^
      197 |         connectionString:
      198 |           process.env.DATABASE_URL ||
      199 |           `postgresql://${process.env.DB_USER || "postgres"}:${process.env.DB_PASSWORD || "password"}@${process.env.DB_HOST || "localhost"}:${process.env.DB_PORT || 5432}/${process.env.DB_NAME || "stocks"}`,

      at Object.<anonymous> (tests/integration/database/rollback-scenarios.integration.test.js:196:20)

  ● Database Rollback Scenarios Integration › Explicit Rollback Scenarios › should handle nested transaction scenarios

    TypeError: Cannot read properties of undefined (reading 'count')

      276 |           "SELECT COUNT(*) as count FROM test_nested_rollback"
      277 |         );
    > 278 |         return parseInt(result.rows[0].count);
          |                                        ^
      279 |       });
      280 |       expect(count).toBe(0);
      281 |     });

      at count (tests/integration/database/rollback-scenarios.integration.test.js:278:40)
      at Object.<anonymous> (tests/integration/database/rollback-scenarios.integration.test.js:274:21)

  ● Database Rollback Scenarios Integration › Rollback with Complex Data Modifications › should rollback complex multi-table operations

    expect(received).rejects.toThrow(expected)

    Expected substring: "Payment processing failed"
    Received message:   "Cannot read properties of undefined (reading 'id')"

          324 |           "INSERT INTO test_orders (user_id, total, status) VALUES (1, 150.00, 'pending') RETURNING id"
          325 |         );
        > 326 |         const orderId = orderResult.rows[0].id;
              |                                             ^
          327 |
          328 |         // Add order items
          329 |         await client.query(

      at id (tests/integration/database/rollback-scenarios.integration.test.js:326:45)
      at Object.<anonymous> (tests/integration/database/rollback-scenarios.integration.test.js:350:7)
      at Object.toThrow (node_modules/expect/build/index.js:218:22)
      at Object.toThrow (tests/integration/database/rollback-scenarios.integration.test.js:350:54)

  ● Database Rollback Scenarios Integration › Rollback with Complex Data Modifications › should handle rollback with data type conversions and constraints

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: undefined

      412 |       });
      413 |
    > 414 |       await expect(complexDataTransaction).rejects.toThrow();
          |             ^
      415 |
      416 |       // Verify complete rollback
      417 |       const count = await transaction(async (client) => {

      at expect (node_modules/expect/build/index.js:113:15)
      at Object.expect (tests/integration/database/rollback-scenarios.integration.test.js:414:13)

  ● Database Rollback Scenarios Integration › Rollback Recovery and Cleanup › should properly clean up resources after rollback

    expect(received).rejects.toThrow(expected)

    Expected substring: "Finalization failed"
    Received message:   "Cannot read properties of undefined (reading 'id')"

          451 |           );
          452 |
        > 453 |           tempResources.push(result.rows[0].id);
              |                                             ^
          454 |         }
          455 |
          456 |         // Simulate processing

      at id (tests/integration/database/rollback-scenarios.integration.test.js:453:45)
      at Object.<anonymous> (tests/integration/database/rollback-scenarios.integration.test.js:468:7)
      at Object.toThrow (node_modules/expect/build/index.js:218:22)
      at Object.toThrow (tests/integration/database/rollback-scenarios.integration.test.js:468:49)

  ● Database Rollback Scenarios Integration › Rollback Recovery and Cleanup › should maintain database connection health after rollbacks

    TypeError: Cannot read properties of undefined (reading 'health_check')

      510 |       const healthCheck = await transaction(async (client) => {
      511 |         const result = await client.query("SELECT 1 as health_check");
    > 512 |         return result.rows[0].health_check;
          |                               ^
      513 |       });
      514 |       expect(healthCheck).toBe(1);
      515 |     });

      at health_check (tests/integration/database/rollback-scenarios.integration.test.js:512:31)
      at Object.<anonymous> (tests/integration/database/rollback-scenarios.integration.test.js:510:27)

  ● Database Rollback Scenarios Integration › Rollback with Real-World Scenarios › should handle portfolio transaction rollback

    TypeError: Cannot read properties of undefined (reading 'quantity')

      592 |           "SELECT quantity FROM test_portfolio_positions WHERE user_id = 1 AND symbol = 'AAPL'"
      593 |         );
    > 594 |         expect(parseFloat(positionResult.rows[0].quantity)).toBe(100);
          |                                                  ^
      595 |
      596 |         // No transaction record should exist
      597 |         const transactionCount = await client.query(

      at quantity (tests/integration/database/rollback-scenarios.integration.test.js:594:50)
      at Object.<anonymous> (tests/integration/database/rollback-scenarios.integration.test.js:589:7)

FAIL tests/unit/services/alpacaIntegration.test.js
  Alpaca Integration Service Unit Tests
    Account Information
      ✕ should retrieve account information
      ✕ should handle account information errors (1 ms)
      ✕ should handle missing API keys
    Portfolio Positions
      ✕ should retrieve current positions
      ✕ should handle empty positions
      ✕ should handle positions API errors (1 ms)
    Order Management
      ✕ should retrieve order history
      ✕ should place market buy order
      ✕ should place limit sell order
      ✕ should handle order placement errors
      ✕ should validate order parameters
    Market Data
      ✕ should retrieve real-time quotes
      ✕ should handle market data API errors
      ✕ should handle empty symbol list
    Portfolio History
      ✕ should retrieve portfolio performance history
      ✕ should handle portfolio history errors
    Database Integration
      ✕ should store portfolio data in database
      ✕ should handle database insertion errors
    Error Handling
      ✕ should handle network timeouts
      ✕ should handle authentication failures
      ✕ should handle API rate limiting
      ✕ should handle malformed API responses

  ● Alpaca Integration Service Unit Tests › Account Information › should retrieve account information

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Account Information › should handle account information errors

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Account Information › should handle missing API keys

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Portfolio Positions › should retrieve current positions

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Portfolio Positions › should handle empty positions

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Portfolio Positions › should handle positions API errors

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Order Management › should retrieve order history

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Order Management › should place market buy order

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Order Management › should place limit sell order

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Order Management › should handle order placement errors

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Order Management › should validate order parameters

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Market Data › should retrieve real-time quotes

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Market Data › should handle market data API errors

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Market Data › should handle empty symbol list

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Portfolio History › should retrieve portfolio performance history

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Portfolio History › should handle portfolio history errors

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Database Integration › should store portfolio data in database

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Database Integration › should handle database insertion errors

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Error Handling › should handle network timeouts

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Error Handling › should handle authentication failures

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Error Handling › should handle API rate limiting

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Error Handling › should handle malformed API responses

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

PASS tests/unit/services/aiStrategyGeneratorStreaming.test.js (8.186 s)
  AIStrategyGeneratorStreaming Service
    Constructor and Initialization
      ✓ should extend AIStrategyGenerator
      ✓ should initialize with empty active streams
    generateStreamId
      ✓ should generate unique stream IDs
    generateWithStreaming
      ✓ should generate strategy with streaming progress (303 ms)
      ✓ should handle concurrent stream limit (1941 ms)
      ✓ should handle streaming without progress callback (300 ms)
      ✓ should handle empty symbols in streaming (301 ms)
      ✓ should clean up stream after completion (302 ms)
      ✓ should handle streaming errors gracefully (202 ms)
      ✓ should handle stream timeout (10 ms)
    processStreamingChunk
      ✓ should process chunks and call progress callback
      ✓ should handle null progress callback
      ✓ should handle empty chunks
      ✓ should handle very large chunks
    simulateStreamingResponse
      ✓ should simulate streaming for template fallback (451 ms)
      ✓ should handle strategy without all fields (452 ms)
      ✓ should simulate with appropriate delays (450 ms)
    stopStream
      ✓ should stop active stream
      ✓ should handle stopping non-existent stream
      ✓ should handle null stream ID (1 ms)
    stopAllStreams
      ✓ should stop all active streams
      ✓ should handle when no streams are active
    getActiveStreams
      ✓ should return active stream information (1 ms)
      ✓ should return empty array when no streams are active
      ✓ should calculate stream durations correctly
    getStreamingMetrics
      ✓ should return streaming metrics
      ✓ should handle zero active streams
    calculateAverageStreamDuration
      ✓ should calculate average duration correctly
      ✓ should return 0 when no streams are active
      ✓ should handle single stream (1 ms)
    Stream Configuration
      ✓ should allow updating streaming configuration
      ✓ should respect chunk size configuration
    Error Handling and Edge Cases
      ✓ should handle concurrent stream generation attempts (1600 ms)
      ✓ should handle progress callback errors
      ✓ should handle very rapid stream start/stop cycles (1 ms)
      ✓ should handle invalid stream data
      ✓ should handle memory pressure with many streams (1 ms)
      ✓ should clean up properly on errors (201 ms)
    Integration with Base Class
      ✓ should inherit all base class functionality
      ✓ should use base class template generation (1648 ms)
      ✓ should maintain correlation ID from base class

  console.log
    [2025-10-19T11:49:04.366Z] [INFO] [ai-strategy-1760874544366-961dnb7wx] Starting streaming strategy generation

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "serviceName": "financial-platform",
      "component": "ai-strategy-generator-streaming",
      "streamId": "stream-1760874544366-sfqjv7rmw",
      "prompt": "Create a momentum strategy using moving averages"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:05.174Z] [INFO] [ai-strategy-1760874544366-961dnb7wx] Streaming strategy generation completed

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "serviceName": "financial-platform",
      "component": "ai-strategy-generator-streaming",
      "streamId": "stream-1760874544366-sfqjv7rmw",
      "strategyName": "AI Momentum Strategy"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:05.177Z] [INFO] [ai-strategy-1760874545177-nt7jmu8j8] Starting streaming strategy generation

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "serviceName": "financial-platform",
      "component": "ai-strategy-generator-streaming",
      "streamId": "stream-1760874545177-va8glibak",
      "prompt": "Create a simple trading strategy"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:05.980Z] [INFO] [ai-strategy-1760874545177-nt7jmu8j8] Streaming strategy generation completed

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "serviceName": "financial-platform",
      "component": "ai-strategy-generator-streaming",
      "streamId": "stream-1760874545177-va8glibak",
      "strategyName": "AI Momentum Strategy"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:05.983Z] [INFO] [ai-strategy-1760874545982-avuu718bd] Starting streaming strategy generation

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "serviceName": "financial-platform",
      "component": "ai-strategy-generator-streaming",
      "streamId": "stream-1760874545983-v2hbzz151",
      "prompt": "Create a strategy"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:06.787Z] [INFO] [ai-strategy-1760874545982-avuu718bd] Streaming strategy generation completed

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "serviceName": "financial-platform",
      "component": "ai-strategy-generator-streaming",
      "streamId": "stream-1760874545983-v2hbzz151",
      "strategyName": "AI Momentum Strategy"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:06.788Z] [INFO] [ai-strategy-1760874546788-56tc0ii79] Starting streaming strategy generation

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "serviceName": "financial-platform",
      "component": "ai-strategy-generator-streaming",
      "streamId": "stream-1760874546788-ou8jseoei",
      "prompt": "Strategy 1"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:06.789Z] [INFO] [ai-strategy-1760874546788-56tc0ii79] Starting streaming strategy generation

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "serviceName": "financial-platform",
      "component": "ai-strategy-generator-streaming",
      "streamId": "stream-1760874546789-me31a9rym",
      "prompt": "Strategy 2"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:06.790Z] [WARN] [7a063b40] Stream rejected due to concurrent limit

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "serviceName": "financial-platform",
      "component": "ai-strategy-generator-streaming",
      "streamId": "stream-1760874546789-me31a9rym",
      "activeStreams": 1
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:06.791Z] [ERROR] [ai-strategy-1760874546788-56tc0ii79] Streaming strategy generation failed

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "serviceName": "financial-platform",
      "component": "ai-strategy-generator-streaming",
      "streamId": "stream-1760874546789-me31a9rym",
      "error": "Maximum concurrent streams reached"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:07.989Z] [INFO] [ai-strategy-1760874546788-56tc0ii79] Streaming strategy generation completed

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "serviceName": "financial-platform",
      "component": "ai-strategy-generator-streaming",
      "streamId": "stream-1760874546788-ou8jseoei",
      "strategyName": "AI Momentum Strategy"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:07.991Z] [INFO] [9e1e1d0c] Stream cancelled

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "serviceName": "financial-platform",
      "component": "ai-strategy-generator-streaming",
      "streamId": "stream-1760874547991-p2dvu2non"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:07.995Z] [INFO] [ai-strategy-1760874547995-r8hpk8mij] Starting streaming strategy generation

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "serviceName": "financial-platform",
      "component": "ai-strategy-generator-streaming",
      "streamId": "stream-1760874547995-fcny7nqpe",
      "prompt": "Create a strategy"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:08.196Z] [WARN] [7f65a097] Streaming failed, attempting template fallback

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "serviceName": "financial-platform",
      "component": "ai-strategy-generator-streaming",
      "streamId": "stream-1760874547995-fcny7nqpe",
      "error": "Streaming connection failed"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:08.197Z] [INFO] [ai-strategy-1760874547995-r8hpk8mij] Generating AI-powered strategy from natural language

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "serviceName": "financial-platform",
      "component": "ai-strategy-generator-streaming",
      "prompt": "Create a strategy",
      "symbolCount": 4,
      "aiEnabled": true
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:08.198Z] [INFO] [ai-strategy-1760874547995-r8hpk8mij] Generating AI strategy using advanced NLP engine

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "serviceName": "financial-platform",
      "component": "ai-strategy-generator-streaming"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:08.199Z] [INFO] [ai-strategy-1760874547995-r8hpk8mij] AI strategy generation successful

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "serviceName": "financial-platform",
      "component": "ai-strategy-generator-streaming",
      "strategyType": "momentum",
      "confidence": 0.85
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:08.200Z] [INFO] [ai-strategy-1760874547995-r8hpk8mij] AI strategy generation successful

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "serviceName": "financial-platform",
      "component": "ai-strategy-generator-streaming",
      "strategyName": "AI Momentum Strategy",
      "strategyType": "ai_generated"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:08.652Z] [INFO] [ai-strategy-1760874548651-krvfb4570] Starting streaming strategy generation

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "serviceName": "financial-platform",
      "component": "ai-strategy-generator-streaming",
      "streamId": "stream-1760874548652-vgienma3k",
      "prompt": "Create a strategy"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:08.854Z] [WARN] [68b52373] Streaming failed, attempting template fallback

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "serviceName": "financial-platform",
      "component": "ai-strategy-generator-streaming",
      "streamId": "stream-1760874548652-vgienma3k",
      "error": "Test error"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:08.855Z] [INFO] [ai-strategy-1760874548651-krvfb4570] Generating AI-powered strategy from natural language

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "serviceName": "financial-platform",
      "component": "ai-strategy-generator-streaming",
      "prompt": "Create a strategy",
      "symbolCount": 4,
      "aiEnabled": true
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:08.855Z] [INFO] [ai-strategy-1760874548651-krvfb4570] Generating AI strategy using advanced NLP engine

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "serviceName": "financial-platform",
      "component": "ai-strategy-generator-streaming"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:08.856Z] [INFO] [ai-strategy-1760874548651-krvfb4570] AI strategy generation successful

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "serviceName": "financial-platform",
      "component": "ai-strategy-generator-streaming",
      "strategyType": "momentum",
      "confidence": 0.85
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:08.857Z] [INFO] [ai-strategy-1760874548651-krvfb4570] AI strategy generation successful

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "serviceName": "financial-platform",
      "component": "ai-strategy-generator-streaming",
      "strategyName": "AI Momentum Strategy",
      "strategyType": "ai_generated"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:08.859Z] [INFO] [ai-strategy-1760874548859-ucqmh2yum] Starting streaming strategy generation

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "serviceName": "financial-platform",
      "component": "ai-strategy-generator-streaming",
      "streamId": "stream-1760874548859-vzg4z595z",
      "prompt": "Create a strategy"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:09.662Z] [INFO] [ai-strategy-1760874548859-ucqmh2yum] Streaming strategy generation completed

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "serviceName": "financial-platform",
      "component": "ai-strategy-generator-streaming",
      "streamId": "stream-1760874548859-vzg4z595z",
      "strategyName": "AI Momentum Strategy"
    }

      at Logger.log [as output] (utils/logger.js:90:17)

PASS tests/integration/services/aiStrategyGeneratorStreaming.test.js (5.318 s)
  AI Strategy Generator Streaming Integration Tests
    Core Streaming Functionality
      ✓ should generate strategy with streaming progress updates (811 ms)
      ✓ should handle streaming without progress callback (804 ms)
      ✓ should generate unique stream IDs
    Stream Management
      ✓ should track active streams (806 ms)
      ✓ should enforce maximum concurrent streams (1202 ms)
      ✓ should get stream status
      ✓ should cancel streams (1 ms)
    Progress Analysis
      ✓ should analyze streaming progress correctly (1 ms)
      ✓ should determine generation stages correctly
      ✓ should estimate time remaining correctly (1 ms)
    Error Handling
      ✓ should handle streaming errors gracefully (656 ms)
      ✓ should clean up streams on error (207 ms)
    Configuration and Metrics
      ✓ should provide streaming metrics
      ✓ should calculate average stream duration
      ✓ should have correct streaming configuration (1 ms)
    Integration with Base Class
      ✓ should inherit from AIStrategyGenerator
      ✓ should use inherited methods for strategy parsing (805 ms)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/backtest/strategies HTTP/1.1" 200 235 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/portfolio/complex-analysis HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/market/detailed-analysis HTTP/1.1" 404 134 "-" "-"
  console.log
    📋 Portfolio positions requested for user: test-user-123

      at log (routes/portfolio.js:282:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
  console.log
    Calendar events endpoint called with params: {}

      at log (routes/calendar.js:380:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/calendar/events HTTP/1.1" 200 223 "-" "-"
  console.log
    📊 Backtest results requested - ID: all, limit: 50

      at log (routes/backtest.js:821:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/backtest/results HTTP/1.1" 200 934 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 1ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "POST /api/portfolio/analyze HTTP/1.1" 501 273 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "POST /api/backtest/run HTTP/1.1" 400 64 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:09 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:11 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:11 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:11 +0000] "GET /api/health HTTP/1.1" 200 465 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:11 +0000] "POST /api/portfolio/analyze HTTP/1.1" 501 273 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:11 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    📋 Portfolio positions requested for user: test-user-123

      at log (routes/portfolio.js:282:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:11 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
  console.log
    Calendar events endpoint called with params: {}

      at log (routes/calendar.js:380:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:11 +0000] "GET /api/calendar/events HTTP/1.1" 200 223 "-" "-"
PASS tests/integration/errors/timeout-handling.integration.test.js
  Timeout Handling Integration
    Request Timeout Scenarios
      ✓ should handle client-side request timeouts gracefully (16 ms)
      ✓ should return 408 or 504 for server-side timeouts (5 ms)
    Database Query Timeout Scenarios
      ✓ should handle slow database queries gracefully (17 ms)
      ✓ should handle connection pool timeout scenarios (60 ms)
    External Service Timeout Scenarios
      ✓ should handle external API timeouts properly (6 ms)
      ✓ should implement circuit breaker patterns for repeated timeouts (15 ms)
    Streaming and Long-Running Operation Timeouts
      ✓ should handle long-running analysis timeouts (3 ms)
      ✓ should provide timeout warnings for slow operations (1 ms)
    Timeout Recovery and Resilience
      ✓ should recover gracefully after timeout scenarios (2011 ms)
      ✓ should maintain system health during timeout scenarios (11 ms)
      ✓ should provide appropriate timeout configuration (4 ms)
    Timeout Error Response Consistency
      ✓ should return consistent timeout error responses (3 ms)
      ✓ should not expose internal timeout configurations (4 ms)

  console.log
    [TRADING] Debug endpoint called

      at log (routes/trading.js:147:11)

  console.log
    Using database config from environment variables

      at log (utils/database.js:182:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:220:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:271:15)

  console.warn
    ⏱️ Slow query (2104ms): {
      query: 'SELECT COUNT(*) as count FROM buy_sell_daily',
      rows: 1,
      duration: '2104ms'
    }

      407 |       });
      408 |     } else if (duration > 1000) {
    > 409 |       console.warn(`⏱️ Slow query (${duration}ms):`, {
          |               ^
      410 |         query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      411 |         rows: result.rowCount,
      412 |         duration: `${duration}ms`,

      at warn (utils/database.js:409:15)
      at routes/trading.js:167:31

  console.warn
    ⏱️ Slow query (2758ms): {
      query: 'SELECT COUNT(*) as count FROM price_daily',
      rows: 1,
      duration: '2758ms'
    }

      407 |       });
      408 |     } else if (duration > 1000) {
    > 409 |       console.warn(`⏱️ Slow query (${duration}ms):`, {
          |               ^
      410 |         query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      411 |         rows: result.rowCount,
      412 |         duration: `${duration}ms`,

      at warn (utils/database.js:409:15)
      at routes/trading.js:167:31

  console.log
    🎯 Trading signals requested - user: test-user-123, symbol: undefined, type: undefined, timeframe: daily

      at log (routes/trading.js:204:13)

  console.log
    📊 Executing query:  SELECT symbol, date, signal, close, rsi, volume, target_price, buylevel, selllevel, stoplevel, entry_quality_score FROM buy_sell_daily WHERE timeframe = 'Daily' AND signal IN ('Buy', 'Sell') AND date >= CURRENT_DATE - INTERVAL '90 days' ORDER BY date DESC LIMIT $1 [ 100 ]

      at log (routes/trading.js:261:13)

  console.warn
    ⏱️ Slow query (3770ms): {
      query: '\n' +
        '      SELECT\n' +
        '        symbol,\n' +
        '        date,\n' +
        '        signal,\n' +
        '        close,\n' +
        '        rsi,\n' +
        '        volu...',
      rows: 100,
      duration: '3770ms'
    }

      407 |       });
      408 |     } else if (duration > 1000) {
    > 409 |       console.warn(`⏱️ Slow query (${duration}ms):`, {
          |               ^
      410 |         query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      411 |         rows: result.rowCount,
      412 |         duration: `${duration}ms`,

      at warn (utils/database.js:409:15)
      at routes/trading.js:263:20

  console.log
    ✅ Returned 100 signals from database

      at log (routes/trading.js:327:13)

  console.log
    📝 Order placement requested for user: test-user-123, buy 100 AAPL

      at log (routes/trading.js:1364:13)

  console.error
    Database query error: {
      error: 'relation "user_dashboard_settings" does not exist',
      query: 'SELECT trading_preferences FROM user_dashboard_settings WHERE user_id = $1',
      params: '1 parameters',
      code: '42P01'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at getUserTradingMode (utils/tradingModeHelper.js:33:20)
      at validateTradingOperation (utils/tradingModeHelper.js:101:23)
      at routes/trading.js:1420:24

  console.warn
    Database query error (returning null for tests): relation "user_dashboard_settings" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at getUserTradingMode (utils/tradingModeHelper.js:33:20)
      at validateTradingOperation (utils/tradingModeHelper.js:101:23)
      at routes/trading.js:1420:24

  console.log
    Trading mode check failed, defaulting to paper: Cannot read properties of null (reading 'rows')

      at log (utils/tradingModeHelper.js:52:13)

  console.error
    Database query error: {
      error: 'relation "user_dashboard_settings" does not exist',
      query: 'SELECT trading_preferences FROM user_dashboard_settings WHERE user_id = $1',
      params: '1 parameters',
      code: '42P01'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at getUserTradingMode (utils/tradingModeHelper.js:33:20)
      at addTradingModeContext (utils/tradingModeHelper.js:74:23)
      at routes/trading.js:1464:26

  console.warn
    Database query error (returning null for tests): relation "user_dashboard_settings" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at getUserTradingMode (utils/tradingModeHelper.js:33:20)
      at addTradingModeContext (utils/tradingModeHelper.js:74:23)
      at routes/trading.js:1464:26

  console.log
    Trading mode check failed, defaulting to paper: Cannot read properties of null (reading 'rows')

      at log (utils/tradingModeHelper.js:52:13)

  console.log
    🔄 Trading positions requested for user: test-user-123

      at log (routes/trading.js:1118:13)

  console.error
    Database query error: {
      error: 'relation "user_dashboard_settings" does not exist',
      query: 'SELECT trading_preferences FROM user_dashboard_settings WHERE user_id = $1',
      params: '1 parameters',
      code: '42P01'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at getUserTradingMode (utils/tradingModeHelper.js:33:20)
      at validateTradingOperation (utils/tradingModeHelper.js:101:23)
      at routes/trading.js:1152:24

  console.warn
    Database query error (returning null for tests): relation "user_dashboard_settings" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at getUserTradingMode (utils/tradingModeHelper.js:33:20)
      at validateTradingOperation (utils/tradingModeHelper.js:101:23)
      at routes/trading.js:1152:24

  console.log
    Trading mode check failed, defaulting to paper: Cannot read properties of null (reading 'rows')

      at log (utils/tradingModeHelper.js:52:13)

  console.error
    Database query error: {
      error: 'relation "user_dashboard_settings" does not exist',
      query: 'SELECT trading_preferences FROM user_dashboard_settings WHERE user_id = $1',
      params: '1 parameters',
      code: '42P01'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at getUserTradingMode (utils/tradingModeHelper.js:33:20)
      at getTradingModeTable (utils/tradingModeHelper.js:185:23)
      at executeWithTradingMode (utils/tradingModeHelper.js:220:31)
      at routes/trading.js:1162:20

  console.warn
    Database query error (returning null for tests): relation "user_dashboard_settings" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at getUserTradingMode (utils/tradingModeHelper.js:33:20)
      at getTradingModeTable (utils/tradingModeHelper.js:185:23)
      at executeWithTradingMode (utils/tradingModeHelper.js:220:31)
      at routes/trading.js:1162:20

  console.log
    Trading mode check failed, defaulting to paper: Cannot read properties of null (reading 'rows')

      at log (utils/tradingModeHelper.js:52:13)

  console.log
    🎯 Executing paper trading query on table: buy_sell_daily

      at log (utils/tradingModeHelper.js:226:15)

  console.error
    Database query error: {
      error: 'column "price" does not exist',
      query: '\n' +
        '      SELECT \n' +
        '        symbol,\n' +
        '        SUM(position_value) as position,\n' +
        '        AVG(price) as avg_pr...',
      params: 'no parameters',
      code: '42703'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at executeWithTradingMode (utils/tradingModeHelper.js:229:24)
      at routes/trading.js:1162:20

  console.warn
    Database query error (returning null for tests): column "price" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at executeWithTradingMode (utils/tradingModeHelper.js:229:24)
      at routes/trading.js:1162:20

  console.warn
    Trading positions query returned null result, database may be unavailable

      1186 |     // Add null safety check
      1187 |     if (!result || !result.rows) {
    > 1188 |       console.warn(
           |               ^
      1189 |         "Trading positions query returned null result, database may be unavailable"
      1190 |       );
      1191 |       // Return empty data structure for test compatibility when database unavailable

      at warn (routes/trading.js:1188:15)

  console.log
    ⚠️ Portfolio risk requested for user: test-user-123

      at log (routes/trading.js:2212:13)

  console.error
    Database query error: {
      error: 'relation "portfolio_holdings" does not exist',
      query: '\n' +
        '      SELECT\n' +
        '        ph.symbol,\n' +
        '        ph.quantity as shares,\n' +
        '        ph.average_cost as avg_cost,...',
      params: '1 parameters',
      code: '42P01'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at routes/trading.js:2238:28

  console.warn
    Database query error (returning null for tests): relation "portfolio_holdings" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at routes/trading.js:2238:28

  console.log
    ⚠️ Risk limits update for user: test-user-123

      at log (routes/trading.js:2403:13)

  console.error
    Database query error: {
      error: 'relation "user_risk_limits" does not exist',
      query: 'SELECT id FROM user_risk_limits WHERE user_id = $1',
      params: '1 parameters',
      code: '42P01'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at routes/trading.js:2437:28

  console.warn
    Database query error (returning null for tests): relation "user_risk_limits" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at routes/trading.js:2437:28

  console.error
    Risk limits update error: TypeError: Cannot read properties of null (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/trading.js:2445:24)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)

      2567 |     });
      2568 |   } catch (error) {
    > 2569 |     console.error("Risk limits update error:", error);
           |             ^
      2570 |     res.status(500).json({
      2571 |       success: false,
      2572 |       error: "Failed to update risk limits",

      at error (routes/trading.js:2569:13)

  console.log
    🔄 Trading positions requested for user: test-user-123

      at log (routes/trading.js:1118:13)

  console.error
    Database query error: {
      error: 'relation "user_dashboard_settings" does not exist',
      query: 'SELECT trading_preferences FROM user_dashboard_settings WHERE user_id = $1',
      params: '1 parameters',
      code: '42P01'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at getUserTradingMode (utils/tradingModeHelper.js:33:20)
      at validateTradingOperation (utils/tradingModeHelper.js:101:23)
      at routes/trading.js:1152:24

  console.warn
    Database query error (returning null for tests): relation "user_dashboard_settings" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at getUserTradingMode (utils/tradingModeHelper.js:33:20)
      at validateTradingOperation (utils/tradingModeHelper.js:101:23)
      at routes/trading.js:1152:24

  console.log
    Trading mode check failed, defaulting to paper: Cannot read properties of null (reading 'rows')

      at log (utils/tradingModeHelper.js:52:13)

  console.error
    Database query error: {
      error: 'relation "user_dashboard_settings" does not exist',
      query: 'SELECT trading_preferences FROM user_dashboard_settings WHERE user_id = $1',
      params: '1 parameters',
      code: '42P01'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at getUserTradingMode (utils/tradingModeHelper.js:33:20)
      at getTradingModeTable (utils/tradingModeHelper.js:185:23)
      at executeWithTradingMode (utils/tradingModeHelper.js:220:31)
      at routes/trading.js:1162:20

  console.warn
    Database query error (returning null for tests): relation "user_dashboard_settings" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at getUserTradingMode (utils/tradingModeHelper.js:33:20)
      at getTradingModeTable (utils/tradingModeHelper.js:185:23)
      at executeWithTradingMode (utils/tradingModeHelper.js:220:31)
      at routes/trading.js:1162:20

  console.log
    Trading mode check failed, defaulting to paper: Cannot read properties of null (reading 'rows')

      at log (utils/tradingModeHelper.js:52:13)

  console.log
    🎯 Executing paper trading query on table: buy_sell_daily

      at log (utils/tradingModeHelper.js:226:15)

  console.error
    Database query error: {
      error: 'column "price" does not exist',
      query: '\n' +
        '      SELECT \n' +
        '        symbol,\n' +
        '        SUM(position_value) as position,\n' +
        '        AVG(price) as avg_pr...',
      params: 'no parameters',
      code: '42703'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at executeWithTradingMode (utils/tradingModeHelper.js:229:24)
      at routes/trading.js:1162:20

  console.warn
    Database query error (returning null for tests): column "price" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at executeWithTradingMode (utils/tradingModeHelper.js:229:24)
      at routes/trading.js:1162:20

  console.warn
    Trading positions query returned null result, database may be unavailable

      1186 |     // Add null safety check
      1187 |     if (!result || !result.rows) {
    > 1188 |       console.warn(
           |               ^
      1189 |         "Trading positions query returned null result, database may be unavailable"
      1190 |       );
      1191 |       // Return empty data structure for test compatibility when database unavailable

      at warn (routes/trading.js:1188:15)

  console.log
    📈 Quote requested for symbol: invalid-symbol-format-123!

      at log (routes/trading.js:2992:13)

PASS tests/unit/routes/trading.test.js (9.183 s)
  Trading Routes Unit Tests
    GET /trading/
      ✓ should return trading info (7 ms)
    GET /trading/health
      ✓ should return trading health status (1 ms)
    GET /trading/debug
      ✓ should return debug information (5198 ms)
    GET /trading/signals
      ✓ should handle trading signals request (3777 ms)
    POST /trading/orders
      ✓ should handle order creation (29 ms)
    GET /trading/positions
      ✓ should handle positions request (35 ms)
    GET /trading/risk/portfolio
      ✓ should return portfolio risk analysis (12 ms)
    POST /trading/risk/limits
      ✓ should handle risk limits creation (38 ms)
    Error Handling
      ✓ should handle database connection errors gracefully (35 ms)
      ✓ should validate symbol format (3 ms)

  console.log
    Initializing database connection...

      at log (index.js:395:13)

  console.log
    Using database config from environment variables

      at log (utils/database.js:182:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:220:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:271:15)

PASS tests/integration/routes/scores.integration.test.js
  Scores Routes Integration - Real Data Validation
    GET /scores/ping
      ✓ should return ping response (32 ms)
    GET /scores - Real Data Validation
      ✓ should return ALL loaded stocks from database (3000+) (331 ms)
      ✓ should validate NO-FALLBACK policy - real data without fallback operators (270 ms)
      ✓ should provide real growth metrics from loaders (292 ms)
      ✓ should provide real quality metrics from loaders (266 ms)
      ✓ should handle pagination parameters correctly (257 ms)
      ✓ should handle search parameter with real data (43 ms)
      ✓ should return stocks sorted by composite score descending (380 ms)
    GET /scores/:symbol - Individual Stock Data
      ✓ should return real individual stock data (e.g., AAPL) (16 ms)
      ✓ should handle case insensitive symbol lookup (12 ms)
      ✓ should return 404 for non-existent symbol (3 ms)
    Performance Tests
      ✓ should respond quickly to ping requests (1 ms)
      ✓ should handle concurrent requests without issues (4 ms)
    Error Handling
      ✓ should return consistent JSON response format (2 ms)
      ✓ should handle invalid endpoints gracefully (2 ms)
      ✓ should handle SQL injection attempts safely (5 ms)

  console.log
    Using database config from environment variables

      at log (utils/database.js:182:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:220:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:271:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:23 +0000] "GET /api/scores HTTP/1.1" 200 9041256 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:23 +0000] "GET /api/scores HTTP/1.1" 200 9041256 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:24 +0000] "GET /api/scores HTTP/1.1" 200 9041256 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:24 +0000] "GET /api/scores HTTP/1.1" 200 9041256 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:24 +0000] "GET /api/scores/AAPL HTTP/1.1" 200 3784 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:24 +0000] "GET /api/scores/AAPL HTTP/1.1" 200 3784 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:24 +0000] "GET /api/scores/AAPL HTTP/1.1" 200 3784 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:24 +0000] "GET /api/scores/AAPL HTTP/1.1" 200 3784 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:24 +0000] "GET /api/scores HTTP/1.1" 200 9041256 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:24 +0000] "GET /api/scores HTTP/1.1" 200 9041256 "-" "-"
PASS tests/integration/routes/scores-quality-growth-inputs.integration.test.js
  Scores API - Quality and Growth Inputs Integration
    GET /api/scores (list endpoint)
      ✓ should return stocks with complete quality_inputs object structure (286 ms)
      ✓ should return stocks with complete growth_inputs object structure (269 ms)
      ✓ should validate quality metrics data types when present (254 ms)
      ✓ should validate growth metrics data types when present (263 ms)
    GET /api/scores/:symbol (detail endpoint)
      ✓ should return nested quality inputs in factors.quality.inputs (17 ms)
      ✓ should return nested growth inputs in factors.growth.inputs (15 ms)
      ✓ should include quality score alongside inputs (13 ms)
      ✓ should include growth score alongside inputs (12 ms)
    Quality Metrics Validation
      ✓ should have reasonable ranges for quality metrics when present (248 ms)
    Growth Metrics Validation
      ✓ should have reasonable ranges for growth metrics when present (266 ms)

  console.log
    Using database config from environment variables

      at log (utils/database.js:182:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:220:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:271:15)

PASS tests/performance/concurrent-transaction.performance.test.js
  Concurrent Database Transaction Integration
    Concurrent Read Operations
      ✓ should handle multiple simultaneous read transactions (13 ms)
      ✓ should maintain read consistency across concurrent transactions (125 ms)
    Concurrent Write Operations
      ✓ should handle concurrent inserts without conflicts (24 ms)
      ✓ should handle concurrent updates with proper isolation (138 ms)
    Transaction Isolation Levels
      ✓ should maintain READ COMMITTED isolation (115 ms)
      ✓ should prevent dirty reads (111 ms)
    Deadlock Prevention and Recovery
      ✓ should handle potential deadlock scenarios gracefully (69 ms)
    Connection Pool Stress Testing
      ✓ should handle connection pool exhaustion gracefully (857 ms)
      ✓ should recover from temporary connection issues (16 ms)

  console.log
    📋 Portfolio positions requested for user: test-user-123

      at log (routes/portfolio.js:282:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
  console.log
    Calendar events endpoint called with params: {}

      at log (routes/calendar.js:380:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/calendar/events HTTP/1.1" 200 223 "-" "-"
  console.log
    📊 Backtest results requested - ID: all, limit: 50

      at log (routes/backtest.js:821:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/backtest/results HTTP/1.1" 200 934 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "POST /api/portfolio/analyze HTTP/1.1" 501 273 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "POST /api/portfolio/analyze HTTP/1.1" 501 273 "-" "-"
  console.log
    📊 Portfolio summary requested for user: test-user-123

      at log (routes/portfolio.js:175:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/portfolio/summary HTTP/1.1" 200 655 "-" "-"
  console.error
    Error fetching earnings metrics: TypeError: Cannot read properties of undefined (reading 'total')
        at total (/home/stocks/algo/webapp/lambda/routes/calendar.js:893:48)

      931 |     });
      932 |   } catch (error) {
    > 933 |     console.error("Error fetching earnings metrics:", error);
          |             ^
      934 |     res.status(500).json({
      935 |       success: false,
      936 |       error: "Failed to fetch earnings metrics",

      at error (routes/calendar.js:933:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/calendar/earnings-metrics HTTP/1.1" 500 176 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/analysis HTTP/1.1" 404 125 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 1ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/health HTTP/1.1" 200 466 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    📊 Portfolio analysis requested for user: test-user-123, period: 1y

      at log (routes/portfolio.js:602:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/portfolio/analysis HTTP/1.1" 200 690 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/detailed-analysis HTTP/1.1" 404 134 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/health HTTP/1.1" 200 466 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 1ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 1ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 1ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:26 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:27 +0000] "GET /api/health HTTP/1.1" 200 466 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:27 +0000] "POST /api/portfolio/analyze HTTP/1.1" 501 273 "-" "-"
  console.log
    📊 Portfolio summary requested for user: test-user-123

      at log (routes/portfolio.js:175:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:27 +0000] "GET /api/portfolio/summary HTTP/1.1" 200 655 "-" "-"
  console.log
    📋 Portfolio positions requested for user: test-user-123

      at log (routes/portfolio.js:282:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:27 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
  console.log
    Portfolio performance endpoint called for user: test-user-123, timeframe: 1y

      at log (routes/portfolio.js:1180:13)

  console.log
    📊 Retrieved 0 performance data points

      at log (routes/portfolio.js:1208:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:27 +0000] "GET /api/portfolio/performance HTTP/1.1" 200 451 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:27 +0000] "GET /api/health HTTP/1.1" 200 466 "-" "-"
  console.log
    📋 Portfolio positions requested for user: test-user-123

      at log (routes/portfolio.js:282:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:27 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
  console.log
    Calendar events endpoint called with params: {}

      at log (routes/calendar.js:380:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:27 +0000] "GET /api/calendar/events HTTP/1.1" 200 223 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:27 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:27 +0000] "GET /api/portfolio/complex-analysis HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:27 +0000] "GET /api/calendar/complex-metrics HTTP/1.1" 404 134 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:27 +0000] "GET /api/market/heavy-computation HTTP/1.1" 404 134 "-" "-"
  console.log
    📋 Portfolio positions requested for user: test-user-123

      at log (routes/portfolio.js:282:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:27 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
  console.log
    Calendar events endpoint called with params: {}

      at log (routes/calendar.js:380:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:27 +0000] "GET /api/calendar/events HTTP/1.1" 200 223 "-" "-"
  console.log
    📊 Backtest results requested - ID: all, limit: 50

      at log (routes/backtest.js:821:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:27 +0000] "GET /api/backtest/results HTTP/1.1" 200 934 "-" "-"
PASS tests/integration/errors/5xx-server-errors.integration.test.js
  5xx Server Error Scenarios Integration
    500 Internal Server Error Scenarios
      ✓ should handle database connection failures gracefully (13 ms)
      ✓ should handle application errors with proper formatting (4 ms)
      ✓ should handle memory or resource exhaustion (3 ms)
      ✓ should maintain response format during server errors (17 ms)
    502 Bad Gateway Scenarios
      ✓ should handle upstream service failures (3 ms)
    503 Service Unavailable Scenarios
      ✓ should handle service maintenance mode (4 ms)
      ✓ should handle database pool exhaustion (18 ms)
    504 Gateway Timeout Scenarios
      ✓ should handle slow upstream responses (5 ms)
    Server Error Recovery and Resilience
      ✓ should recover gracefully from temporary failures (1082 ms)
      ✓ should maintain error logging during server errors (1 ms)
      ✓ should handle cascading failures appropriately (10 ms)
    Server Error Security
      ✓ should not expose sensitive information in server errors (3 ms)
      ✓ should sanitize error messages from external sources (2 ms)
    Cross-Route 5xx Error Consistency
      ✓ should maintain consistent 5xx error format across all routes (5 ms)
      ✓ should provide consistent error codes across similar failures (7 ms)

  console.log
    Using database config from environment variables

      at log (utils/database.js:182:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:220:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:271:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:28 +0000] "GET /api/scores HTTP/1.1" 200 9041256 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:28 +0000] "GET /api/scores HTTP/1.1" 200 9041256 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:28 +0000] "GET /api/scores HTTP/1.1" 200 9041256 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:28 +0000] "GET /api/scores/AAPL HTTP/1.1" 200 3784 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:28 +0000] "GET /api/scores/AAPL HTTP/1.1" 200 3784 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:28 +0000] "GET /api/scores/AAPL HTTP/1.1" 200 3784 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:28 +0000] "GET /api/scores HTTP/1.1" 200 9041256 "-" "-"
PASS tests/integration/routes/scores-value-inputs.integration.test.js
  Scores API - Value Inputs Integration
    GET /api/scores (list endpoint)
      ✓ should return stocks with complete value_inputs object structure (281 ms)
      ✓ should calculate PEG ratio correctly when data exists (271 ms)
      ✓ should have price metrics data when available (251 ms)
    GET /api/scores/:symbol (detail endpoint)
      ✓ should return nested value inputs in factors.value.inputs (15 ms)
      ✓ should include value score alongside inputs (14 ms)
    Momentum Inputs Integration
      ✓ should return momentum input values (RSI, ROC, Mansfield) (18 ms)
    Data Type Validation
      ✓ should return numbers for all numeric value inputs when present (251 ms)

  console.log
    [2025-10-19T11:49:28.950Z] [ERROR] [test-123] Test error for tracking

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Test error for tracking\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:45:25)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "userId": "test_user",
      "route": "/api/test",
      "method": "GET",
      "category": "general",
      "context": {
        "userId": "test_user",
        "route": "/api/test",
        "method": "GET",
        "correlationId": "test-123"
      }
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:28.968Z] [ERROR] [undefined] Error with stack trace

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Error with stack trace\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:61:21)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "route": "/test-service",
      "method": "POST",
      "category": "general",
      "context": {
        "route": "/test-service",
        "method": "POST"
      }
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:28.970Z] [ERROR] [undefined] Database connection failed

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Database connection failed\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:74:29)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "database",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:28.971Z] [ERROR] [undefined] Unauthorized access

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Unauthorized access\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:75:25)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "auth",
      "context": {
        "statusCode": 401
      }
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:28.972Z] [ERROR] [undefined] Validation failed

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Validation failed\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:76:31)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "validation",
      "context": {
        "statusCode": 400
      }
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:28.973Z] [ERROR] [undefined] Database connection timeout

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Database connection timeout\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:98:29)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "database",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:28.974Z] [ERROR] [undefined] Unauthorized

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Unauthorized\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:99:25)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "auth",
      "context": {
        "statusCode": 401
      }
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:28.975Z] [ERROR] [undefined] Invalid input

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Invalid input\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:100:27)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "validation",
      "context": {
        "statusCode": 400
      }
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:28.977Z] [ERROR] [undefined] Minor issue

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Minor issue\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:101:24)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:28.978Z] [ERROR] [undefined] Database error

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Database error\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:127:31)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "database",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:28.981Z] [ERROR] [undefined] Auth error

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Auth error\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:128:31)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "auth",
      "context": {
        "statusCode": 401
      }
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:28.982Z] [ERROR] [undefined] Validation error

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Validation error\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:129:31)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "validation",
      "context": {
        "statusCode": 400
      }
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:28.983Z] [ERROR] [undefined] API error

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: API error\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:132:31)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "api",
      "context": {
        "statusCode": 500
      }
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:28.985Z] [ERROR] [undefined] Test error 0

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Test error 0\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:153:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:28.987Z] [ERROR] [undefined] Test error 1

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Test error 1\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:153:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:28.988Z] [ERROR] [undefined] Test error 2

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Test error 2\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:153:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:28.989Z] [ERROR] [undefined] Test error 3

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Test error 3\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:153:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:28.990Z] [ERROR] [undefined] Test error 4

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Test error 4\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:153:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:28.994Z] [ERROR] [undefined] Test error 5

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Test error 5\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:153:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:28.995Z] [ERROR] [undefined] Test error 6

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Test error 6\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:153:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:28.995Z] [ERROR] [undefined] Test error 7

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Test error 7\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:153:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:28.996Z] [ERROR] [undefined] Test error 8

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Test error 8\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:153:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:28.997Z] [ERROR] [undefined] Test error 9

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Test error 9\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:153:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:28.999Z] [ERROR] [undefined] Connection failed

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Connection failed\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:176:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "database",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.000Z] [ERROR] [undefined] Connection failed

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Connection failed\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:176:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "database",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.001Z] [ERROR] [undefined] Connection failed

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Connection failed\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:176:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "database",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.002Z] [ERROR] [undefined] Unauthorized

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Unauthorized\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:181:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "auth",
      "context": {
        "statusCode": 401
      }
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.003Z] [ERROR] [undefined] Unauthorized

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Unauthorized\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:181:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "auth",
      "context": {
        "statusCode": 401
      }
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.004Z] [ERROR] [undefined] Concurrent error 0

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Concurrent error 0\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:198:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.005Z] [ERROR] [undefined] Concurrent error 1

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Concurrent error 1\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:198:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.006Z] [ERROR] [undefined] Concurrent error 2

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Concurrent error 2\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:198:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.007Z] [ERROR] [undefined] Concurrent error 3

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Concurrent error 3\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:198:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.008Z] [ERROR] [undefined] Concurrent error 4

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Concurrent error 4\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:198:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.009Z] [ERROR] [undefined] Concurrent error 5

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Concurrent error 5\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:198:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.010Z] [ERROR] [undefined] Concurrent error 6

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Concurrent error 6\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:198:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.011Z] [ERROR] [undefined] Concurrent error 7

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Concurrent error 7\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:198:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.011Z] [ERROR] [undefined] Concurrent error 8

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Concurrent error 8\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:198:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.012Z] [ERROR] [undefined] Concurrent error 9

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Concurrent error 9\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:198:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.013Z] [ERROR] [undefined] Concurrent error 10

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Concurrent error 10\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:198:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.014Z] [ERROR] [undefined] Concurrent error 11

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Concurrent error 11\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:198:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.015Z] [ERROR] [undefined] Concurrent error 12

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Concurrent error 12\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:198:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.016Z] [ERROR] [undefined] Concurrent error 13

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Concurrent error 13\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:198:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.017Z] [ERROR] [undefined] Concurrent error 14

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Concurrent error 14\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:198:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.018Z] [WARN] [fd4bcabb] High error rate detected: 15 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 15,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 15 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.022Z] [ERROR] [undefined] Concurrent error 15

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Concurrent error 15\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:198:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.023Z] [WARN] [ae100646] High error rate detected: 16 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 16,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 16 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.024Z] [ERROR] [undefined] Concurrent error 16

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Concurrent error 16\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:198:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.025Z] [WARN] [65aa6ee3] High error rate detected: 17 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 17,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 17 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.026Z] [ERROR] [undefined] Concurrent error 17

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Concurrent error 17\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:198:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.027Z] [WARN] [941cde7a] High error rate detected: 18 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 18,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 18 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.028Z] [ERROR] [undefined] Concurrent error 18

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Concurrent error 18\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:198:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.029Z] [WARN] [a986b0ab] High error rate detected: 19 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 19,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 19 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.030Z] [ERROR] [undefined] Concurrent error 19

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Concurrent error 19\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:198:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.031Z] [WARN] [a09b56dd] High error rate detected: 20 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 20,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 20 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.033Z] [ERROR] [undefined] Database connection issue

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Database connection issue\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:216:31)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "database",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.034Z] [ERROR] [undefined] Database timeout

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Database timeout\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:217:31)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "database",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.035Z] [ERROR] [undefined] Database connection failed 1760874569035

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Database connection failed 1760874569035\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:232:9)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "database",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.036Z] [ERROR] [undefined] Unauthorized access 1760874569035

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Unauthorized access 1760874569035\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:234:31)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "auth",
      "context": {
        "statusCode": 401
      }
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.037Z] [ERROR] [undefined] API request failed 1760874569035

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: API request failed 1760874569035\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:237:31)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "api",
      "context": {
        "statusCode": 500
      }
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.038Z] [ERROR] [undefined] Validation failed 1760874569035

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Validation failed 1760874569035\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:240:31)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "validation",
      "context": {
        "statusCode": 400
      }
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.039Z] [ERROR] [req-456] Context test error

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Context test error\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:269:31)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "userId": "user123",
      "route": "/api/portfolio",
      "method": "POST",
      "userAgent": "test-agent",
      "ip": "127.0.0.1",
      "category": "general",
      "context": {
        "userId": "user123",
        "correlationId": "req-456",
        "route": "/api/portfolio",
        "method": "POST",
        "userAgent": "test-agent",
        "ip": "127.0.0.1"
      }
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.041Z] [ERROR] [undefined] Test 1

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Test 1\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:284:46)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.042Z] [ERROR] [undefined] Test 2

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Test 2\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:285:46)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.043Z] [ERROR] [undefined] History test 0

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 0\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.044Z] [ERROR] [undefined] History test 1

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 1\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.047Z] [ERROR] [undefined] History test 2

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 2\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.048Z] [ERROR] [undefined] History test 3

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 3\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.049Z] [ERROR] [undefined] History test 4

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 4\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.050Z] [ERROR] [undefined] History test 5

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 5\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.051Z] [ERROR] [undefined] History test 6

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 6\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.052Z] [ERROR] [undefined] History test 7

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 7\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.053Z] [ERROR] [undefined] History test 8

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 8\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.054Z] [ERROR] [undefined] History test 9

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 9\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.056Z] [ERROR] [undefined] History test 10

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 10\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.057Z] [ERROR] [undefined] History test 11

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 11\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.057Z] [ERROR] [undefined] History test 12

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 12\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.058Z] [ERROR] [undefined] History test 13

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 13\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.059Z] [ERROR] [undefined] History test 14

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 14\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.060Z] [WARN] [a370ad45] High error rate detected: 15 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 15,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 15 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.062Z] [ERROR] [undefined] History test 15

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 15\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.063Z] [WARN] [8a27892a] High error rate detected: 16 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 16,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 16 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.064Z] [ERROR] [undefined] History test 16

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 16\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.065Z] [WARN] [350ea0e3] High error rate detected: 17 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 17,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 17 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.066Z] [ERROR] [undefined] History test 17

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 17\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.067Z] [WARN] [30ae6e35] High error rate detected: 18 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 18,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 18 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.068Z] [ERROR] [undefined] History test 18

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 18\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.069Z] [WARN] [2961ea63] High error rate detected: 19 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 19,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 19 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.071Z] [ERROR] [undefined] History test 19

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 19\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.072Z] [WARN] [ea730f7a] High error rate detected: 20 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 20,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 20 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.073Z] [ERROR] [undefined] History test 20

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 20\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.074Z] [WARN] [cc1faa6f] High error rate detected: 21 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 21,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 21 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.075Z] [ERROR] [undefined] History test 21

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 21\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.078Z] [WARN] [75687581] High error rate detected: 22 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 22,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 22 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.079Z] [ERROR] [undefined] History test 22

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 22\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.080Z] [WARN] [02f5f4f6] High error rate detected: 23 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 23,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 23 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.081Z] [ERROR] [undefined] History test 23

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 23\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.082Z] [WARN] [da2ec9c6] High error rate detected: 24 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 24,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 24 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.083Z] [ERROR] [undefined] History test 24

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 24\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.084Z] [WARN] [253ee336] High error rate detected: 25 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 25,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 25 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.085Z] [ERROR] [undefined] History test 25

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 25\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.087Z] [WARN] [24daea22] High error rate detected: 26 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 26,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 26 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.088Z] [ERROR] [undefined] History test 26

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 26\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.089Z] [WARN] [64e837fe] High error rate detected: 27 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 27,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 27 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.091Z] [ERROR] [undefined] History test 27

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 27\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.091Z] [WARN] [e48eb196] High error rate detected: 28 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 28,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 28 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.093Z] [ERROR] [undefined] History test 28

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 28\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.093Z] [WARN] [31b1e7d0] High error rate detected: 29 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 29,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 29 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.095Z] [ERROR] [undefined] History test 29

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 29\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.097Z] [WARN] [15c2b426] High error rate detected: 30 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 30,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 30 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.099Z] [ERROR] [undefined] History test 30

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 30\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.100Z] [WARN] [e32d59e8] High error rate detected: 31 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 31,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 31 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.101Z] [ERROR] [undefined] History test 31

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 31\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.102Z] [WARN] [2e0cc7b0] High error rate detected: 32 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 32,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 32 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.103Z] [ERROR] [undefined] History test 32

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 32\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.104Z] [WARN] [21d10f68] High error rate detected: 33 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 33,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 33 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.105Z] [ERROR] [undefined] History test 33

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 33\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.108Z] [WARN] [8a684233] High error rate detected: 34 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 34,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 34 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.110Z] [ERROR] [undefined] History test 34

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 34\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.110Z] [WARN] [6fdba55d] High error rate detected: 35 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 35,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 35 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.112Z] [ERROR] [undefined] History test 35

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 35\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.113Z] [WARN] [db981533] High error rate detected: 36 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 36,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 36 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.114Z] [ERROR] [undefined] History test 36

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 36\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.115Z] [WARN] [564ecaaa] High error rate detected: 37 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 37,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 37 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.116Z] [ERROR] [undefined] History test 37

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 37\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.117Z] [WARN] [781e12b9] High error rate detected: 38 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 38,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 38 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.118Z] [ERROR] [undefined] History test 38

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 38\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.119Z] [WARN] [cfef5ef4] High error rate detected: 39 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 39,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 39 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.121Z] [ERROR] [undefined] History test 39

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 39\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.121Z] [WARN] [cb53e265] High error rate detected: 40 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 40,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 40 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.123Z] [ERROR] [undefined] History test 40

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 40\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.124Z] [WARN] [882f33bb] High error rate detected: 41 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 41,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 41 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.125Z] [ERROR] [undefined] History test 41

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 41\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.126Z] [WARN] [67dd128f] High error rate detected: 42 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 42,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 42 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.127Z] [ERROR] [undefined] History test 42

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 42\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.128Z] [WARN] [c7212fd4] High error rate detected: 43 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 43,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 43 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.129Z] [ERROR] [undefined] History test 43

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 43\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.130Z] [WARN] [95c66129] High error rate detected: 44 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 44,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 44 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.132Z] [ERROR] [undefined] History test 44

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 44\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.133Z] [WARN] [fbef067e] High error rate detected: 45 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 45,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 45 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.134Z] [ERROR] [undefined] History test 45

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 45\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.135Z] [WARN] [00a34a2f] High error rate detected: 46 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 46,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 46 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.139Z] [ERROR] [undefined] History test 46

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 46\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.140Z] [WARN] [53c191d0] High error rate detected: 47 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 47,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 47 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.141Z] [ERROR] [undefined] History test 47

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 47\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.142Z] [WARN] [3be54178] High error rate detected: 48 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 48,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 48 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.143Z] [ERROR] [undefined] History test 48

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 48\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.144Z] [WARN] [db6b66b6] High error rate detected: 49 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 49,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 49 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.145Z] [ERROR] [undefined] History test 49

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: History test 49\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:301:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.146Z] [WARN] [e8587a73] High error rate detected: 50 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 50,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 50 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.148Z] [ERROR] [undefined] Additional error 0

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Additional error 0\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:309:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.149Z] [WARN] [4ea10da8] High error rate detected: 51 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 51,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 51 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.150Z] [ERROR] [undefined] Additional error 1

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Additional error 1\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:309:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.151Z] [WARN] [3be4e567] High error rate detected: 52 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 52,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 52 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.152Z] [ERROR] [undefined] Additional error 2

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Additional error 2\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:309:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.153Z] [WARN] [4f0baa75] High error rate detected: 53 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 53,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 53 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.154Z] [ERROR] [undefined] Additional error 3

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Additional error 3\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:309:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.155Z] [WARN] [6196ab34] High error rate detected: 54 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 54,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 54 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.156Z] [ERROR] [undefined] Additional error 4

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Additional error 4\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:309:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.157Z] [WARN] [45c3aa76] High error rate detected: 55 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 55,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 55 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.158Z] [ERROR] [undefined] Additional error 5

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Additional error 5\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:309:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.159Z] [WARN] [11a6cb70] High error rate detected: 56 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 56,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 56 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.161Z] [ERROR] [undefined] Additional error 6

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Additional error 6\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:309:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.161Z] [WARN] [439ad3af] High error rate detected: 57 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 57,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 57 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.163Z] [ERROR] [undefined] Additional error 7

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Additional error 7\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:309:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.164Z] [WARN] [00f19560] High error rate detected: 58 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 58,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 58 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.165Z] [ERROR] [undefined] Additional error 8

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Additional error 8\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:309:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.168Z] [WARN] [6e1bd5e3] High error rate detected: 59 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 59,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 59 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.169Z] [ERROR] [undefined] Additional error 9

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Additional error 9\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:309:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.170Z] [WARN] [95d2c550] High error rate detected: 60 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 60,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 60 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.171Z] [ERROR] [undefined] Clear test 0

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Clear test 0\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:322:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.172Z] [ERROR] [undefined] Clear test 1

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Clear test 1\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:322:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.173Z] [ERROR] [undefined] Clear test 2

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Clear test 2\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:322:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.174Z] [ERROR] [undefined] Clear test 3

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Clear test 3\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:322:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.175Z] [ERROR] [undefined] Clear test 4

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Clear test 4\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:322:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.176Z] [ERROR] [undefined] Volume test 0

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 0\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.177Z] [ERROR] [undefined] Volume test 1

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 1\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.178Z] [ERROR] [undefined] Volume test 2

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 2\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.179Z] [ERROR] [undefined] Volume test 3

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 3\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.180Z] [ERROR] [undefined] Volume test 4

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 4\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.181Z] [ERROR] [undefined] Volume test 5

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 5\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.182Z] [ERROR] [undefined] Volume test 6

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 6\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.183Z] [ERROR] [undefined] Volume test 7

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 7\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.184Z] [ERROR] [undefined] Volume test 8

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 8\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.185Z] [ERROR] [undefined] Volume test 9

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 9\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.186Z] [ERROR] [undefined] Volume test 10

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 10\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.187Z] [ERROR] [undefined] Volume test 11

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 11\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.187Z] [ERROR] [undefined] Volume test 12

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 12\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.188Z] [ERROR] [undefined] Volume test 13

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 13\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.189Z] [ERROR] [undefined] Volume test 14

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 14\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.190Z] [WARN] [7098b824] High error rate detected: 15 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 15,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 15 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.191Z] [ERROR] [undefined] Volume test 15

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 15\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.192Z] [WARN] [5f03e6e0] High error rate detected: 16 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 16,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 16 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.193Z] [ERROR] [undefined] Volume test 16

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 16\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.196Z] [WARN] [e18024e8] High error rate detected: 17 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 17,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 17 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.197Z] [ERROR] [undefined] Volume test 17

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 17\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.198Z] [WARN] [cda9b837] High error rate detected: 18 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 18,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 18 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.200Z] [ERROR] [undefined] Volume test 18

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 18\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.200Z] [WARN] [7c5a16a1] High error rate detected: 19 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 19,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 19 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.202Z] [ERROR] [undefined] Volume test 19

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 19\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.203Z] [WARN] [e9483a12] High error rate detected: 20 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 20,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 20 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.204Z] [ERROR] [undefined] Volume test 20

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 20\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.205Z] [WARN] [e382a538] High error rate detected: 21 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 21,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 21 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.206Z] [ERROR] [undefined] Volume test 21

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 21\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.207Z] [WARN] [80cce370] High error rate detected: 22 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 22,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 22 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.208Z] [ERROR] [undefined] Volume test 22

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 22\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.209Z] [WARN] [15ff8f09] High error rate detected: 23 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 23,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 23 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.211Z] [ERROR] [undefined] Volume test 23

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 23\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.211Z] [WARN] [d69001a1] High error rate detected: 24 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 24,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 24 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.213Z] [ERROR] [undefined] Volume test 24

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 24\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.213Z] [WARN] [bb461475] High error rate detected: 25 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 25,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 25 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.215Z] [ERROR] [undefined] Volume test 25

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 25\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.215Z] [WARN] [bed05552] High error rate detected: 26 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 26,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 26 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.217Z] [ERROR] [undefined] Volume test 26

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 26\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.217Z] [WARN] [ed436e4c] High error rate detected: 27 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 27,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 27 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.219Z] [ERROR] [undefined] Volume test 27

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 27\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.220Z] [WARN] [522df326] High error rate detected: 28 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 28,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 28 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.221Z] [ERROR] [undefined] Volume test 28

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 28\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.224Z] [WARN] [ad3179cb] High error rate detected: 29 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 29,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 29 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.225Z] [ERROR] [undefined] Volume test 29

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 29\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.226Z] [WARN] [b5e753f1] High error rate detected: 30 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 30,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 30 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.227Z] [ERROR] [undefined] Volume test 30

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 30\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.228Z] [WARN] [7a966216] High error rate detected: 31 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 31,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 31 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.230Z] [ERROR] [undefined] Volume test 31

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 31\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.230Z] [WARN] [58348945] High error rate detected: 32 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 32,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 32 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.232Z] [ERROR] [undefined] Volume test 32

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 32\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.232Z] [WARN] [15efa527] High error rate detected: 33 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 33,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 33 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.234Z] [ERROR] [undefined] Volume test 33

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 33\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.235Z] [WARN] [3e00dd48] High error rate detected: 34 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 34,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 34 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.236Z] [ERROR] [undefined] Volume test 34

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 34\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.237Z] [WARN] [0efbb94f] High error rate detected: 35 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 35,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 35 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.238Z] [ERROR] [undefined] Volume test 35

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 35\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.244Z] [WARN] [be779b84] High error rate detected: 36 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 36,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 36 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.249Z] [ERROR] [undefined] Volume test 36

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 36\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.250Z] [WARN] [e78c2591] High error rate detected: 37 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 37,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 37 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.251Z] [ERROR] [undefined] Volume test 37

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 37\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.252Z] [WARN] [0cd2d767] High error rate detected: 38 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 38,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 38 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.253Z] [ERROR] [undefined] Volume test 38

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 38\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.254Z] [WARN] [03d4895c] High error rate detected: 39 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 39,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 39 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.255Z] [ERROR] [undefined] Volume test 39

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 39\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.256Z] [WARN] [ed7f9fac] High error rate detected: 40 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 40,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 40 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.257Z] [ERROR] [undefined] Volume test 40

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 40\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.258Z] [WARN] [043a8257] High error rate detected: 41 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 41,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 41 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.259Z] [ERROR] [undefined] Volume test 41

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 41\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.260Z] [WARN] [025e0df4] High error rate detected: 42 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 42,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 42 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.264Z] [ERROR] [undefined] Volume test 42

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 42\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.264Z] [WARN] [fff39b85] High error rate detected: 43 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 43,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 43 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.266Z] [ERROR] [undefined] Volume test 43

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 43\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.267Z] [WARN] [eaa575e2] High error rate detected: 44 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 44,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 44 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.268Z] [ERROR] [undefined] Volume test 44

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 44\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.269Z] [WARN] [6a8b7a83] High error rate detected: 45 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 45,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 45 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.270Z] [ERROR] [undefined] Volume test 45

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 45\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.271Z] [WARN] [92ad19dd] High error rate detected: 46 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 46,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 46 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.272Z] [ERROR] [undefined] Volume test 46

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 46\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.273Z] [WARN] [360ab75a] High error rate detected: 47 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 47,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 47 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.274Z] [ERROR] [undefined] Volume test 47

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 47\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.275Z] [WARN] [4a17cdca] High error rate detected: 48 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 48,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 48 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.276Z] [ERROR] [undefined] Volume test 48

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 48\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.278Z] [WARN] [bc716f89] High error rate detected: 49 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 49,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 49 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.280Z] [ERROR] [undefined] Volume test 49

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 49\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.281Z] [WARN] [4b274864] High error rate detected: 50 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 50,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 50 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.282Z] [ERROR] [undefined] Volume test 50

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 50\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.283Z] [WARN] [d3768ef0] High error rate detected: 51 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 51,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 51 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.284Z] [ERROR] [undefined] Volume test 51

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 51\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.285Z] [WARN] [a519e7a6] High error rate detected: 52 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 52,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 52 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.286Z] [ERROR] [undefined] Volume test 52

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 52\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.287Z] [WARN] [cf02af00] High error rate detected: 53 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 53,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 53 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.288Z] [ERROR] [undefined] Volume test 53

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 53\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.289Z] [WARN] [e971c372] High error rate detected: 54 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 54,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 54 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.290Z] [ERROR] [undefined] Volume test 54

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 54\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.291Z] [WARN] [55e738e7] High error rate detected: 55 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 55,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 55 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.294Z] [ERROR] [undefined] Volume test 55

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 55\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.295Z] [WARN] [e23a4878] High error rate detected: 56 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 56,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 56 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.297Z] [ERROR] [undefined] Volume test 56

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 56\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.298Z] [WARN] [dff6d875] High error rate detected: 57 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 57,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 57 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.299Z] [ERROR] [undefined] Volume test 57

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 57\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.301Z] [WARN] [8e71b37d] High error rate detected: 58 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 58,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 58 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.302Z] [ERROR] [undefined] Volume test 58

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 58\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.303Z] [WARN] [405ed68f] High error rate detected: 59 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 59,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 59 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.304Z] [ERROR] [undefined] Volume test 59

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 59\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.305Z] [WARN] [90989163] High error rate detected: 60 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 60,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 60 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.307Z] [ERROR] [undefined] Volume test 60

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 60\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.307Z] [WARN] [656e6c68] High error rate detected: 61 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 61,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 61 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.309Z] [ERROR] [undefined] Volume test 61

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 61\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.309Z] [WARN] [dcc934c8] High error rate detected: 62 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 62,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 62 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.311Z] [ERROR] [undefined] Volume test 62

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 62\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.311Z] [WARN] [a115f5f8] High error rate detected: 63 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 63,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 63 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.313Z] [ERROR] [undefined] Volume test 63

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 63\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.313Z] [WARN] [fd11a545] High error rate detected: 64 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 64,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 64 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.317Z] [ERROR] [undefined] Volume test 64

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 64\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.318Z] [WARN] [1e6401cf] High error rate detected: 65 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 65,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 65 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.319Z] [ERROR] [undefined] Volume test 65

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 65\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.320Z] [WARN] [88da787b] High error rate detected: 66 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 66,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 66 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.321Z] [ERROR] [undefined] Volume test 66

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 66\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.322Z] [WARN] [7ab70a5e] High error rate detected: 67 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 67,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 67 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.323Z] [ERROR] [undefined] Volume test 67

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 67\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.325Z] [WARN] [02f2403f] High error rate detected: 68 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 68,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 68 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.330Z] [ERROR] [undefined] Volume test 68

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 68\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.331Z] [WARN] [6181cb9c] High error rate detected: 69 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 69,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 69 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.332Z] [ERROR] [undefined] Volume test 69

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 69\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.333Z] [WARN] [ade42f1a] High error rate detected: 70 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 70,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 70 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.334Z] [ERROR] [undefined] Volume test 70

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 70\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.335Z] [WARN] [fa333fd1] High error rate detected: 71 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 71,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 71 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.336Z] [ERROR] [undefined] Volume test 71

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 71\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.337Z] [WARN] [fa74a750] High error rate detected: 72 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 72,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 72 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.338Z] [ERROR] [undefined] Volume test 72

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 72\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.339Z] [WARN] [98ff6b54] High error rate detected: 73 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 73,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 73 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.340Z] [ERROR] [undefined] Volume test 73

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 73\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.341Z] [WARN] [61a408a4] High error rate detected: 74 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 74,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 74 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.342Z] [ERROR] [undefined] Volume test 74

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 74\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.343Z] [WARN] [57dd264e] High error rate detected: 75 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 75,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 75 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.344Z] [ERROR] [undefined] Volume test 75

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 75\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.345Z] [WARN] [975ad1eb] High error rate detected: 76 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 76,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 76 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.346Z] [ERROR] [undefined] Volume test 76

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 76\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.347Z] [WARN] [9942994c] High error rate detected: 77 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 77,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 77 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.348Z] [ERROR] [undefined] Volume test 77

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 77\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.349Z] [WARN] [9effbdb6] High error rate detected: 78 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 78,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 78 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.350Z] [ERROR] [undefined] Volume test 78

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 78\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.351Z] [WARN] [a301d986] High error rate detected: 79 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 79,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 79 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.352Z] [ERROR] [undefined] Volume test 79

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 79\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.353Z] [WARN] [fcd904d4] High error rate detected: 80 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 80,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 80 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.354Z] [ERROR] [undefined] Volume test 80

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 80\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.355Z] [WARN] [c8d14360] High error rate detected: 81 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 81,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 81 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.357Z] [ERROR] [undefined] Volume test 81

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 81\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.360Z] [WARN] [0425d13f] High error rate detected: 82 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 82,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 82 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.361Z] [ERROR] [undefined] Volume test 82

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 82\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.362Z] [WARN] [bb4a9fb7] High error rate detected: 83 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 83,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 83 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.363Z] [ERROR] [undefined] Volume test 83

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 83\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.364Z] [WARN] [1ad706f8] High error rate detected: 84 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 84,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 84 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.365Z] [ERROR] [undefined] Volume test 84

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 84\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.366Z] [WARN] [68a26182] High error rate detected: 85 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 85,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 85 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.367Z] [ERROR] [undefined] Volume test 85

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 85\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.368Z] [WARN] [8c7008a4] High error rate detected: 86 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 86,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 86 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.369Z] [ERROR] [undefined] Volume test 86

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 86\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.370Z] [WARN] [005a4454] High error rate detected: 87 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 87,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 87 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.371Z] [ERROR] [undefined] Volume test 87

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 87\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.372Z] [WARN] [d9bffbc3] High error rate detected: 88 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 88,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 88 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.374Z] [ERROR] [undefined] Volume test 88

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 88\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.374Z] [WARN] [058b40c0] High error rate detected: 89 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 89,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 89 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.375Z] [ERROR] [undefined] Volume test 89

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 89\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.376Z] [WARN] [a2908ec8] High error rate detected: 90 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 90,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 90 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.377Z] [ERROR] [undefined] Volume test 90

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 90\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.378Z] [WARN] [608cd219] High error rate detected: 91 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 91,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 91 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.379Z] [ERROR] [undefined] Volume test 91

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 91\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.380Z] [WARN] [0afabc10] High error rate detected: 92 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 92,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 92 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.381Z] [ERROR] [undefined] Volume test 92

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 92\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.382Z] [WARN] [7f6cffad] High error rate detected: 93 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 93,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 93 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.383Z] [ERROR] [undefined] Volume test 93

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 93\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.384Z] [WARN] [d047c069] High error rate detected: 94 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 94,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 94 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.385Z] [ERROR] [undefined] Volume test 94

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 94\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.388Z] [WARN] [be027a44] High error rate detected: 95 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 95,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 95 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.389Z] [ERROR] [undefined] Volume test 95

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 95\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.390Z] [WARN] [41b314f7] High error rate detected: 96 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 96,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 96 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.391Z] [ERROR] [undefined] Volume test 96

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 96\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.392Z] [WARN] [4f5a7b39] High error rate detected: 97 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 97,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 97 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.393Z] [ERROR] [undefined] Volume test 97

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 97\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.393Z] [WARN] [eccde3a0] High error rate detected: 98 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 98,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 98 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.395Z] [ERROR] [undefined] Volume test 98

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 98\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.395Z] [WARN] [3582178a] High error rate detected: 99 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 99,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 99 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.396Z] [ERROR] [undefined] Volume test 99

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Volume test 99\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:346:37)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.397Z] [WARN] [330b3cca] High error rate detected: 100 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 100,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 100 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.399Z] [ERROR] [undefined] Perf test 0

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 0\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.400Z] [ERROR] [undefined] Perf test 1

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 1\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.400Z] [ERROR] [undefined] Perf test 2

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 2\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.402Z] [ERROR] [undefined] Perf test 3

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 3\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.403Z] [ERROR] [undefined] Perf test 4

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 4\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.404Z] [ERROR] [undefined] Perf test 5

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 5\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.405Z] [ERROR] [undefined] Perf test 6

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 6\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.405Z] [ERROR] [undefined] Perf test 7

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 7\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.406Z] [ERROR] [undefined] Perf test 8

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 8\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.407Z] [ERROR] [undefined] Perf test 9

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 9\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.408Z] [ERROR] [undefined] Perf test 10

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 10\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.409Z] [ERROR] [undefined] Perf test 11

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 11\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.410Z] [ERROR] [undefined] Perf test 12

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 12\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.410Z] [ERROR] [undefined] Perf test 13

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 13\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.411Z] [ERROR] [undefined] Perf test 14

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 14\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.412Z] [WARN] [a496c42f] High error rate detected: 15 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 15,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 15 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.415Z] [ERROR] [undefined] Perf test 15

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 15\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.416Z] [WARN] [a941a22f] High error rate detected: 16 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 16,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 16 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.417Z] [ERROR] [undefined] Perf test 16

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 16\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.418Z] [WARN] [f606ae66] High error rate detected: 17 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 17,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 17 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.420Z] [ERROR] [undefined] Perf test 17

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 17\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.422Z] [WARN] [6453fc3c] High error rate detected: 18 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 18,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 18 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.424Z] [ERROR] [undefined] Perf test 18

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 18\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.425Z] [WARN] [51908ba9] High error rate detected: 19 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 19,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 19 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.428Z] [ERROR] [undefined] Perf test 19

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 19\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.429Z] [WARN] [f0e97525] High error rate detected: 20 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 20,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 20 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.431Z] [ERROR] [undefined] Perf test 20

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 20\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.432Z] [WARN] [b1a1d772] High error rate detected: 21 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 21,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 21 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.433Z] [ERROR] [undefined] Perf test 21

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 21\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.434Z] [WARN] [eed114a9] High error rate detected: 22 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 22,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 22 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.435Z] [ERROR] [undefined] Perf test 22

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 22\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.436Z] [WARN] [6b8ec5d4] High error rate detected: 23 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 23,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 23 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.437Z] [ERROR] [undefined] Perf test 23

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 23\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.438Z] [WARN] [12f784c0] High error rate detected: 24 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 24,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 24 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.440Z] [ERROR] [undefined] Perf test 24

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 24\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.443Z] [WARN] [79ea3981] High error rate detected: 25 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 25,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 25 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.444Z] [ERROR] [undefined] Perf test 25

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 25\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.445Z] [WARN] [e683e285] High error rate detected: 26 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 26,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 26 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.446Z] [ERROR] [undefined] Perf test 26

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 26\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.447Z] [WARN] [8bf87070] High error rate detected: 27 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 27,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 27 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.448Z] [ERROR] [undefined] Perf test 27

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 27\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.449Z] [WARN] [bcf6c16f] High error rate detected: 28 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 28,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 28 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.451Z] [ERROR] [undefined] Perf test 28

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 28\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.453Z] [WARN] [ca618bef] High error rate detected: 29 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 29,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 29 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.455Z] [ERROR] [undefined] Perf test 29

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 29\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.455Z] [WARN] [c17e4623] High error rate detected: 30 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 30,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 30 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.456Z] [ERROR] [undefined] Perf test 30

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 30\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.457Z] [WARN] [baefddb5] High error rate detected: 31 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 31,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 31 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.459Z] [ERROR] [undefined] Perf test 31

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 31\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.459Z] [WARN] [c7f37e0f] High error rate detected: 32 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 32,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 32 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.461Z] [ERROR] [undefined] Perf test 32

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 32\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.461Z] [WARN] [cc4ba830] High error rate detected: 33 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 33,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 33 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.464Z] [ERROR] [undefined] Perf test 33

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 33\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.465Z] [WARN] [f4c70dc0] High error rate detected: 34 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 34,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 34 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.467Z] [ERROR] [undefined] Perf test 34

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 34\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.467Z] [WARN] [bfe37053] High error rate detected: 35 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 35,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 35 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.468Z] [ERROR] [undefined] Perf test 35

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 35\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.469Z] [WARN] [4f680415] High error rate detected: 36 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 36,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 36 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.471Z] [ERROR] [undefined] Perf test 36

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 36\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.471Z] [WARN] [3a2a8a80] High error rate detected: 37 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 37,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 37 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.473Z] [ERROR] [undefined] Perf test 37

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 37\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.473Z] [WARN] [0b471b24] High error rate detected: 38 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 38,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 38 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.475Z] [ERROR] [undefined] Perf test 38

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 38\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.475Z] [WARN] [93309996] High error rate detected: 39 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 39,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 39 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.476Z] [ERROR] [undefined] Perf test 39

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 39\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.477Z] [WARN] [22ff3d9e] High error rate detected: 40 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 40,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 40 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.478Z] [ERROR] [undefined] Perf test 40

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 40\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.479Z] [WARN] [44e5b78f] High error rate detected: 41 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 41,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 41 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.480Z] [ERROR] [undefined] Perf test 41

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 41\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.483Z] [WARN] [ef3ec20d] High error rate detected: 42 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 42,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 42 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.484Z] [ERROR] [undefined] Perf test 42

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 42\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.485Z] [WARN] [9b486467] High error rate detected: 43 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 43,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 43 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.486Z] [ERROR] [undefined] Perf test 43

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 43\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.487Z] [WARN] [d71c693f] High error rate detected: 44 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 44,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 44 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.488Z] [ERROR] [undefined] Perf test 44

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 44\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.491Z] [WARN] [f8d3f0b3] High error rate detected: 45 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 45,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 45 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.493Z] [ERROR] [undefined] Perf test 45

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 45\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.493Z] [WARN] [1be02131] High error rate detected: 46 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 46,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 46 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.495Z] [ERROR] [undefined] Perf test 46

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 46\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.495Z] [WARN] [3e8ffe19] High error rate detected: 47 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 47,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 47 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.501Z] [ERROR] [undefined] Perf test 47

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 47\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.502Z] [WARN] [ae62faca] High error rate detected: 48 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 48,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 48 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.503Z] [ERROR] [undefined] Perf test 48

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 48\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.504Z] [WARN] [61057714] High error rate detected: 49 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 49,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 49 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.505Z] [ERROR] [undefined] Perf test 49

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Perf test 49\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:364:33)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "category": "general",
      "context": {}
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    [2025-10-19T11:49:29.506Z] [WARN] [bebd6144] High error rate detected: 50 general errors in the last minute (threshold: 15)

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "category": "general",
      "currentCount": 50,
      "threshold": 15
    }

      at Logger.log [as output] (utils/logger.js:90:17)

  console.log
    🚨 ALERT: High error rate detected: 50 general errors in the last minute (threshold: 15)

      at ErrorTracker.log [as sendAlert] (utils/errorTracker.js:240:13)

  console.log
    [2025-10-19T11:49:29.511Z] [ERROR] [test-123] Middleware test error

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    Context: {
      "stack": "Error: Middleware test error\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/errorTracker.test.js:406:25)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
      "name": "Error",
      "route": "/test",
      "method": "GET",
      "userAgent": "test-user-agent",
      "ip": "127.0.0.1",
      "category": "general",
      "context": {
        "correlationId": "test-123",
        "route": "/test",
        "method": "GET",
        "userAgent": "test-user-agent",
        "ip": "127.0.0.1",
        "body": {},
        "query": {},
        "params": {}
      }
    }

      at Logger.log [as output] (utils/logger.js:90:17)

PASS tests/integration/utils/errorTracker.test.js
  Error Tracker Integration Tests
    Error Tracking
      ✓ should track errors with context (18 ms)
      ✓ should track errors with stack traces (2 ms)
      ✓ should categorize errors correctly (3 ms)
      ✓ should calculate severity levels (5 ms)
    Error Statistics
      ✓ should provide error statistics (7 ms)
      ✓ should track recent errors with limit (14 ms)
    Error Frequency Tracking
      ✓ should track error counts by category and time (5 ms)
      ✓ should handle concurrent error tracking (29 ms)
    Alert System
      ✓ should track errors without triggering alerts for low volume (2 ms)
      ✓ should handle different error categories simultaneously (4 ms)
    Error Context Tracking
      ✓ should preserve error context information (2 ms)
      ✓ should generate unique error IDs (2 ms)
    Error History Management
      ✓ should maintain error history with size limit (128 ms)
      ✓ should clear history when requested (5 ms)
    Performance
      ✓ should handle high volume error logging efficiently (223 ms)
      ✓ should maintain performance for statistics retrieval (112 ms)
    Integration Features
      ✓ should provide middleware integration capability
      ✓ should handle middleware error processing (2 ms)

  console.error
    Decryption error: Error: Unsupported state or unable to authenticate data
        at Decipheriv.final (node:internal/crypto/cipher:193:29)
        at ApiKeyService.final [as decryptApiKey] (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:702:29)
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/apiKeyService.test.js:93:27)

      704 |       return JSON.parse(decrypted);
      705 |     } catch (error) {
    > 706 |       console.error("Decryption error:", error);
          |               ^
      707 |       throw new Error("Failed to decrypt API key data");
      708 |     }
      709 |   }

      at ApiKeyService.error [as decryptApiKey] (utils/apiKeyService.js:706:15)
      at Object.<anonymous> (tests/integration/utils/apiKeyService.test.js:93:27)

  console.error
    API key retrieval error: Error: JWT validation failed: JWT verification not configured
        at ApiKeyService.getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:923:15)
        at Object.getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1499:14)
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/apiKeyService.test.js:124:29)

      1031 |     } catch (error) {
      1032 |       this.recordFailure(error);
    > 1033 |       console.error("API key retrieval error:", error);
           |               ^
      1034 |
      1035 |       if (error.message.includes("circuit breaker")) {
      1036 |         throw error;

      at ApiKeyService.error [as getApiKey] (utils/apiKeyService.js:1033:15)
      at Object.getApiKey (utils/apiKeyService.js:1499:14)
      at Object.<anonymous> (tests/integration/utils/apiKeyService.test.js:124:29)

  console.error
    API key retrieval error: Error: JWT validation failed: JWT verification not configured
        at ApiKeyService.getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:923:15)
        at Object.getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1499:14)
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/apiKeyService.test.js:138:29)

      1031 |     } catch (error) {
      1032 |       this.recordFailure(error);
    > 1033 |       console.error("API key retrieval error:", error);
           |               ^
      1034 |
      1035 |       if (error.message.includes("circuit breaker")) {
      1036 |         throw error;

      at ApiKeyService.error [as getApiKey] (utils/apiKeyService.js:1033:15)
      at Object.getApiKey (utils/apiKeyService.js:1499:14)
      at Object.<anonymous> (tests/integration/utils/apiKeyService.test.js:138:29)

  console.error
    API key validation error: Error: JWT validation failed: JWT verification not configured
        at ApiKeyService.validateApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1068:15)
        at Object.validateApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1506:14)
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/apiKeyService.test.js:148:26)

      1156 |       };
      1157 |     } catch (error) {
    > 1158 |       console.error("API key validation error:", error);
           |               ^
      1159 |       return {
      1160 |         valid: false,
      1161 |         error: error.message,

      at ApiKeyService.error [as validateApiKey] (utils/apiKeyService.js:1158:15)
      at Object.validateApiKey (utils/apiKeyService.js:1506:14)
      at Object.<anonymous> (tests/integration/utils/apiKeyService.test.js:148:26)

  console.error
    Decryption error: TypeError: The first argument must be of type string or an instance of Buffer, ArrayBuffer, or Array or an Array-like Object. Received undefined
        at Function.from (node:buffer:322:9)
        at ApiKeyService.from [as decryptApiKey] (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:696:16)
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/apiKeyService.test.js:246:9) {
      code: 'ERR_INVALID_ARG_TYPE'
    }

      704 |       return JSON.parse(decrypted);
      705 |     } catch (error) {
    > 706 |       console.error("Decryption error:", error);
          |               ^
      707 |       throw new Error("Failed to decrypt API key data");
      708 |     }
      709 |   }

      at ApiKeyService.error [as decryptApiKey] (utils/apiKeyService.js:706:15)
      at Object.<anonymous> (tests/integration/utils/apiKeyService.test.js:246:9)

  console.error
    API key retrieval error: Error: JWT validation failed: JWT verification not configured
        at ApiKeyService.getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:923:15)
        at Object.getApiKey (/home/stocks/algo/webapp/lambda/utils/apiKeyService.js:1499:14)
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/apiKeyService.test.js:254:22)

      1031 |     } catch (error) {
      1032 |       this.recordFailure(error);
    > 1033 |       console.error("API key retrieval error:", error);
           |               ^
      1034 |
      1035 |       if (error.message.includes("circuit breaker")) {
      1036 |         throw error;

      at ApiKeyService.error [as getApiKey] (utils/apiKeyService.js:1033:15)
      at Object.getApiKey (utils/apiKeyService.js:1499:14)
      at Object.<anonymous> (tests/integration/utils/apiKeyService.test.js:254:22)

PASS tests/integration/utils/apiKeyService.test.js
  API Key Service Integration Tests
    API Key Encryption
      ✓ should encrypt and decrypt API keys (67 ms)
      ✓ should handle encryption with different salts (107 ms)
      ✓ should handle decryption with wrong salt gracefully (64 ms)
    API Key Storage and Retrieval
      ✓ should store and retrieve API keys (30 ms)
      ✓ should handle non-existent API keys (2 ms)
      ✓ should validate API keys (3 ms)
    JWT Token Validation
      ✓ should handle JWT token validation
      ✓ should check JWT circuit breaker
      ✓ should record JWT success and failure (1 ms)
    Circuit Breaker Functionality
      ✓ should check circuit breaker status
      ✓ should record success and failure
    Audit Logging
      ✓ should log audit events (1 ms)
      ✓ should handle audit logging failures gracefully
    Encryption Key Management
      ✓ should get encryption key
    Error Handling
      ✓ should handle encryption errors gracefully (25 ms)
      ✓ should handle decryption errors gracefully (26 ms)
      ✓ should handle database errors gracefully (1 ms)

  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:29 +0000] "GET /api/etf/SPY/holdings HTTP/1.1" 200 446 "-" "-"
  console.log
    📈 ETF holdings requested for QQQ

      at log (routes/etf.js:20:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:29 +0000] "GET /api/etf/QQQ/holdings HTTP/1.1" 200 446 "-" "-"
  console.log
    📈 ETF holdings requested for IWM

      at log (routes/etf.js:20:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:29 +0000] "GET /api/etf/IWM/holdings HTTP/1.1" 200 446 "-" "-"
  console.log
    📈 ETF holdings requested for VTI

      at log (routes/etf.js:20:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:29 +0000] "GET /api/etf/VTI/holdings HTTP/1.1" 200 446 "-" "-"
  console.log
    📈 ETF holdings requested for VOO

      at log (routes/etf.js:20:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:29 +0000] "GET /api/etf/VOO/holdings HTTP/1.1" 200 446 "-" "-"
  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:29 +0000] "GET /api/etf/SPY/holdings HTTP/1.1" 200 446 "-" "-"
  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:29 +0000] "GET /api/etf/SPY/holdings HTTP/1.1" 200 446 "-" "-"
  console.log
    📈 ETF holdings requested for INVALID

      at log (routes/etf.js:20:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:29 +0000] "GET /api/etf/INVALID/holdings HTTP/1.1" 404 100 "-" "-"
  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/SPY/holdings?limit=5 HTTP/1.1" 200 446 "-" "-"
  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/SPY/holdings?limit=25 HTTP/1.1" 200 446 "-" "-"
  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/SPY/holdings?limit=50 HTTP/1.1" 200 446 "-" "-"
  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/SPY/holdings?limit=100 HTTP/1.1" 200 446 "-" "-"
  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/SPY/holdings?limit=invalid HTTP/1.1" 400 92 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf//holdings HTTP/1.1" 404 123 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/SPY@ HTTP/1.1" 404 118 "-" "-"
  console.log
    📈 ETF performance requested for SPY, timeframe: 1y

      at log (routes/etf.js:209:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/SPY/performance HTTP/1.1" 200 560 "-" "-"
  console.log
    📈 ETF performance requested for QQQ, timeframe: 1y

      at log (routes/etf.js:209:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/QQQ/performance HTTP/1.1" 200 560 "-" "-"
  console.log
    📈 ETF performance requested for SPY, timeframe: 1D

      at log (routes/etf.js:209:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/SPY/performance?timeframe=1D HTTP/1.1" 200 560 "-" "-"
  console.log
    📈 ETF performance requested for SPY, timeframe: 1W

      at log (routes/etf.js:209:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/SPY/performance?timeframe=1W HTTP/1.1" 200 560 "-" "-"
  console.log
    📈 ETF performance requested for SPY, timeframe: 1M

      at log (routes/etf.js:209:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/SPY/performance?timeframe=1M HTTP/1.1" 200 560 "-" "-"
  console.log
    📈 ETF performance requested for SPY, timeframe: 3M

      at log (routes/etf.js:209:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/SPY/performance?timeframe=3M HTTP/1.1" 200 560 "-" "-"
  console.log
    📈 ETF performance requested for SPY, timeframe: 6M

      at log (routes/etf.js:209:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/SPY/performance?timeframe=6M HTTP/1.1" 200 560 "-" "-"
  console.log
    📈 ETF performance requested for SPY, timeframe: 1Y

      at log (routes/etf.js:209:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/SPY/performance?timeframe=1Y HTTP/1.1" 200 560 "-" "-"
  console.log
    📈 ETF performance requested for SPY, timeframe: 3Y

      at log (routes/etf.js:209:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/SPY/performance?timeframe=3Y HTTP/1.1" 200 560 "-" "-"
  console.log
    📈 ETF performance requested for SPY, timeframe: 5Y

      at log (routes/etf.js:209:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/SPY/performance?timeframe=5Y HTTP/1.1" 200 560 "-" "-"
  console.log
    📈 ETF performance requested for SPY, timeframe: 1y

      at log (routes/etf.js:209:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/SPY/performance?benchmark=SPX HTTP/1.1" 200 560 "-" "-"
  console.log
    📊 ETF analytics requested for SPY, period: 1y

      at log (routes/etf.js:319:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/SPY/analytics HTTP/1.1" 200 1091 "-" "-"
  console.log
    📊 ETF analytics requested for VTI, period: 1y

      at log (routes/etf.js:319:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/VTI/analytics HTTP/1.1" 200 1091 "-" "-"
  console.log
    ETF screener with filters: {}

      at log (routes/etf.js:629:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/screener HTTP/1.1" 200 292 "-" "-"
  console.log
    ETF screener with filters: { max_expense_ratio: '0.5' }

      at log (routes/etf.js:629:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/screener?max_expense_ratio=0.5 HTTP/1.1" 200 290 "-" "-"
  console.log
    ETF screener with filters: { min_assets: '1000000000' }

      at log (routes/etf.js:629:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/screener?min_assets=1000000000 HTTP/1.1" 200 344 "-" "-"
  console.log
    ETF screener with filters: { category: 'equity' }

      at log (routes/etf.js:629:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/screener?category=equity HTTP/1.1" 200 332 "-" "-"
  console.log
    ETF screener with filters: { category: 'fixed_income' }

      at log (routes/etf.js:629:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/screener?category=fixed_income HTTP/1.1" 200 344 "-" "-"
  console.log
    ETF screener with filters: { category: 'commodity' }

      at log (routes/etf.js:629:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/screener?category=commodity HTTP/1.1" 200 338 "-" "-"
  console.log
    ETF screener with filters: { category: 'mixed' }

      at log (routes/etf.js:629:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/screener?category=mixed HTTP/1.1" 200 330 "-" "-"
  console.log
    ETF screener with filters: { sector: 'Technology' }

      at log (routes/etf.js:629:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/screener?sector=Technology HTTP/1.1" 200 292 "-" "-"
  console.log
    ETF screener with filters: { min_dividend_yield: '2.0' }

      at log (routes/etf.js:629:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/screener?min_dividend_yield=2.0 HTTP/1.1" 200 286 "-" "-"
  console.log
    ETF screener with filters: {
      category: 'equity',
      max_expense_ratio: '0.5',
      min_assets: '500000000'
    }

      at log (routes/etf.js:629:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/screener?category=equity&max_expense_ratio=0.5&min_assets=500000000 HTTP/1.1" 200 380 "-" "-"
  console.log
    ETF screener with filters: { sort: 'assets', order: 'desc' }

      at log (routes/etf.js:629:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/screener?sort=assets&order=desc HTTP/1.1" 200 292 "-" "-"
  console.log
    ETF screener with filters: { sort: 'expense_ratio', order: 'desc' }

      at log (routes/etf.js:629:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/screener?sort=expense_ratio&order=desc HTTP/1.1" 200 292 "-" "-"
  console.log
    ETF screener with filters: { sort: 'dividend_yield', order: 'desc' }

      at log (routes/etf.js:629:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/screener?sort=dividend_yield&order=desc HTTP/1.1" 200 292 "-" "-"
  console.log
    ETF screener with filters: { sort: 'performance', order: 'desc' }

      at log (routes/etf.js:629:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/screener?sort=performance&order=desc HTTP/1.1" 200 292 "-" "-"
  console.log
    ETF screener with filters: { page: '1', limit: '25' }

      at log (routes/etf.js:629:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/screener?page=1&limit=25 HTTP/1.1" 200 292 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/compare?symbols=SPY,QQQ,VTI HTTP/1.1" 200 1497 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/compare?symbols=SPY,INVALID,QQQ HTTP/1.1" 200 1513 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/compare?symbols=SPY HTTP/1.1" 200 925 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/compare?symbols=SPY,QQQ&metrics=performance,risk,dividend HTTP/1.1" 200 1255 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/trending HTTP/1.1" 200 407 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/trending?timeframe=1D HTTP/1.1" 200 407 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/trending?timeframe=1W HTTP/1.1" 200 407 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/trending?timeframe=1M HTTP/1.1" 200 407 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/trending?category=equity HTTP/1.1" 200 410 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/flows HTTP/1.1" 200 396 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/flows?period=1D HTTP/1.1" 200 396 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/flows?period=1W HTTP/1.1" 200 396 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/flows?period=1M HTTP/1.1" 200 396 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/flows?period=3M HTTP/1.1" 200 396 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/flows?period=6M HTTP/1.1" 200 396 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/flows?period=1Y HTTP/1.1" 200 396 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/flows?type=equity HTTP/1.1" 200 396 "-" "-"
  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/SPY/holdings HTTP/1.1" 200 446 "-" "-"
  console.log
    📈 ETF holdings requested for QQQ

      at log (routes/etf.js:20:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/QQQ/holdings HTTP/1.1" 200 446 "-" "-"
  console.log
    📈 ETF holdings requested for VTI

      at log (routes/etf.js:20:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/VTI/holdings HTTP/1.1" 200 446 "-" "-"
  console.log
    📈 ETF holdings requested for IWM

      at log (routes/etf.js:20:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/IWM/holdings HTTP/1.1" 200 446 "-" "-"
  console.log
    📈 ETF holdings requested for VOO

      at log (routes/etf.js:20:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/VOO/holdings HTTP/1.1" 200 446 "-" "-"
  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/SPY/holdings?limit=500 HTTP/1.1" 200 446 "-" "-"
  console.log
    ETF screener with filters: {}

      at log (routes/etf.js:629:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/screener HTTP/1.1" 200 292 "-" "-"
  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/SPY/holdings HTTP/1.1" 200 446 "-" "-"
  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/SPY/holdings HTTP/1.1" 200 446 "-" "-"
  console.log
    ETF screener with filters: { max_expense_ratio: 'invalid' }

      at log (routes/etf.js:629:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/screener?max_expense_ratio=invalid HTTP/1.1" 400 125 "-" "-"
  console.log
    ETF screener with filters: { page: '-1' }

      at log (routes/etf.js:629:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/screener?page=-1 HTTP/1.1" 400 93 "-" "-"
  console.log
    ETF screener with filters: { limit: 'abc' }

      at log (routes/etf.js:629:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/screener?limit=abc HTTP/1.1" 400 92 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/compare?symbols= HTTP/1.1" 400 130 "-" "-"
  console.log
    📈 ETF holdings requested for SPY

      at log (routes/etf.js:20:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/SPY/holdings?limit=999999 HTTP/1.1" 200 446 "-" "-"
  console.log
    📈 ETF holdings requested for SPY'; DROP TABLE etf_holdings; --

      at log (routes/etf.js:20:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/SPY%27%3B%20DROP%20TABLE%20etf_holdings%3B%20--/holdings HTTP/1.1" 200 626 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/SPY/premium-analytics HTTP/1.1" 401 97 "-" "-"
  console.log
    ETF screener with filters: {}

      at log (routes/etf.js:629:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/screener HTTP/1.1" 200 292 "-" "-"
  console.log
    ETF screener with filters: {}

      at log (routes/etf.js:629:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/screener HTTP/1.1" 200 292 "-" "-"
  console.log
    ETF screener with filters: {}

      at log (routes/etf.js:629:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/screener HTTP/1.1" 200 292 "-" "-"
  console.log
    ETF screener with filters: {}

      at log (routes/etf.js:629:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/screener HTTP/1.1" 200 292 "-" "-"
  console.log
    ETF screener with filters: {}

      at log (routes/etf.js:629:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/screener HTTP/1.1" 200 292 "-" "-"
  console.log
    ETF screener with filters: {}

      at log (routes/etf.js:629:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/screener HTTP/1.1" 200 292 "-" "-"
  console.log
    ETF screener with filters: {}

      at log (routes/etf.js:629:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/screener HTTP/1.1" 200 292 "-" "-"
  console.log
    ETF screener with filters: {}

      at log (routes/etf.js:629:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/screener HTTP/1.1" 200 292 "-" "-"
  console.log
    ETF screener with filters: {}

      at log (routes/etf.js:629:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/screener HTTP/1.1" 200 292 "-" "-"
  console.log
    ETF screener with filters: {}

      at log (routes/etf.js:629:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/etf/screener HTTP/1.1" 200 292 "-" "-"
PASS tests/integration/routes/etf.integration.test.js
  ETF Routes Integration Tests
    GET /api/etf/:symbol/holdings
      ✓ should return ETF holdings data for major ETFs (16 ms)
      ✓ should include fund information in holdings response (2 ms)
      ✓ should include sector allocation in holdings response (2 ms)
      ✓ should handle invalid ETF symbol (2 ms)
      ✓ should handle limit parameter validation (8 ms)
      ✓ should handle invalid limit parameter (2 ms)
      ✓ should handle missing symbol parameter (1 ms)
      ✓ should handle special characters in ETF symbol (2 ms)
    GET /api/etf/:symbol/performance
      ✓ should return ETF performance data (2 ms)
      ✓ should include historical performance metrics (6 ms)
      ✓ should handle timeframe parameter (17 ms)
      ✓ should compare performance against benchmark (2 ms)
    GET /api/etf/:symbol/analytics
      ✓ should return comprehensive ETF analytics (2 ms)
      ✓ should include risk analysis metrics (2 ms)
    GET /api/etf/screener
      ✓ should return ETF screener results (2 ms)
      ✓ should handle expense ratio filter (2 ms)
      ✓ should handle asset size filter (2 ms)
      ✓ should handle category filter (7 ms)
      ✓ should handle sector filter (2 ms)
      ✓ should handle dividend yield filter (2 ms)
      ✓ should handle multiple filters combined (3 ms)
      ✓ should handle sorting options (10 ms)
      ✓ should handle pagination parameters (2 ms)
    GET /api/etf/compare
      ✓ should compare multiple ETFs (1 ms)
      ✓ should handle invalid symbol in comparison (2 ms)
      ✓ should handle single ETF comparison (1 ms)
      ✓ should handle comparison metrics parameter (1 ms)
    GET /api/etf/trending
      ✓ should return trending ETFs (2 ms)
      ✓ should handle timeframe for trending (3 ms)
      ✓ should handle category filter for trending (1 ms)
    GET /api/etf/flows
      ✓ should return ETF flow data (2 ms)
      ✓ should handle period parameter for flows (7 ms)
      ✓ should handle fund type filter for flows (1 ms)
    Performance and Edge Cases
      ✓ should handle concurrent ETF holdings requests (7 ms)
      ✓ should handle large holdings requests gracefully (2 ms)
      ✓ should maintain response time consistency (2 ms)
      ✓ should validate data structure consistency (1 ms)
      ✓ should handle database connection failures gracefully (2 ms)
      ✓ should handle malformed query parameters (13 ms)
      ✓ should handle SQL injection attempts (3 ms)
      ✓ should handle authentication edge cases for protected endpoints (1 ms)
      ✓ should handle stress testing with multiple concurrent requests (13 ms)

  console.log
    Initializing database connection...

      at log (index.js:395:13)

  console.log
    Using database config from environment variables

      at log (utils/database.js:182:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:220:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:271:15)

  console.log
    Endpoint does not require database connection

      at log (index.js:447:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Endpoint does not require database connection

      at log (index.js:447:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Endpoint does not require database connection

      at log (index.js:447:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Endpoint does not require database connection

      at log (index.js:447:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Endpoint does not require database connection

      at log (index.js:447:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Endpoint does not require database connection

      at log (index.js:447:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Endpoint does not require database connection

      at log (index.js:447:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Endpoint does not require database connection

      at log (index.js:447:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Endpoint does not require database connection

      at log (index.js:447:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Security test response status: 200

      at Object.log (tests/security/authentication-security.test.js:236:15)

  console.log
    Security test response body: {
      "success": true,
      "message": "alpaca API key stored successfully",
      "result": {}
    }

      at Object.log (tests/security/authentication-security.test.js:237:15)

  console.error
    Error fetching API keys: TypeError: Cannot read properties of undefined (reading 'providers')
        at providers (/home/stocks/algo/webapp/lambda/routes/settings.js:401:78)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)

      408 |     });
      409 |   } catch (error) {
    > 410 |     console.error("Error fetching API keys:", error);
          |             ^
      411 |     res.status(500).json({
      412 |       success: false,
      413 |       error: "Failed to fetch API keys",

      at error (routes/settings.js:410:13)

  console.log
    Endpoint does not require database connection

      at log (index.js:447:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.warn
    CORS blocked origin: https://malicious-site.com

      286 |         callback(null, true);
      287 |       } else {
    > 288 |         console.warn("CORS blocked origin:", origin);
          |                 ^
      289 |         callback(new Error("Not allowed by CORS"));
      290 |       }
      291 |     },

      at warn (index.js:288:17)
      at node_modules/cors/lib/index.js:219:13
      at optionsCallback (node_modules/cors/lib/index.js:199:9)
      at corsMiddleware (node_modules/cors/lib/index.js:204:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at next (index.js:207:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at internalNext (node_modules/helmet/index.cjs:537:6)
      at xXssProtectionMiddleware (node_modules/helmet/index.cjs:315:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPoweredByMiddleware (node_modules/helmet/index.cjs:308:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xFrameOptionsMiddleware (node_modules/helmet/index.cjs:285:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDownloadOptionsMiddleware (node_modules/helmet/index.cjs:265:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDnsPrefetchControlMiddleware (node_modules/helmet/index.cjs:258:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xContentTypeOptionsMiddleware (node_modules/helmet/index.cjs:250:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at strictTransportSecurityMiddleware (node_modules/helmet/index.cjs:243:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at referrerPolicyMiddleware (node_modules/helmet/index.cjs:211:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at originAgentClusterMiddleware (node_modules/helmet/index.cjs:186:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginResourcePolicyMiddleware (node_modules/helmet/index.cjs:179:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginOpenerPolicyMiddleware (node_modules/helmet/index.cjs:163:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at contentSecurityPolicyMiddleware (node_modules/helmet/index.cjs:128:4)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at helmetMiddleware (node_modules/helmet/index.cjs:539:6)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

  console.error
    AWS Lambda Error: {
      "message": "Not allowed by CORS",
      "url": "/health",
      "method": "GET",
      "timestamp": "2025-10-19T11:49:30.412Z",
      "environment": "test"
    }

      18 |   };
      19 |
    > 20 |   console.error('AWS Lambda Error:', JSON.stringify(errorDetails, null, 2));
         |           ^
      21 |
      22 |   // Default error response
      23 |   let status = 500;

      at error (middleware/errorHandler.js:20:11)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at next (index.js:375:3)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/cors/lib/index.js:221:17
      at callback (index.js:289:9)
      at node_modules/cors/lib/index.js:219:13
      at optionsCallback (node_modules/cors/lib/index.js:199:9)
      at corsMiddleware (node_modules/cors/lib/index.js:204:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at next (index.js:207:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at internalNext (node_modules/helmet/index.cjs:537:6)
      at xXssProtectionMiddleware (node_modules/helmet/index.cjs:315:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xPoweredByMiddleware (node_modules/helmet/index.cjs:308:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xFrameOptionsMiddleware (node_modules/helmet/index.cjs:285:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDownloadOptionsMiddleware (node_modules/helmet/index.cjs:265:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xDnsPrefetchControlMiddleware (node_modules/helmet/index.cjs:258:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at xContentTypeOptionsMiddleware (node_modules/helmet/index.cjs:250:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at strictTransportSecurityMiddleware (node_modules/helmet/index.cjs:243:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at referrerPolicyMiddleware (node_modules/helmet/index.cjs:211:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at originAgentClusterMiddleware (node_modules/helmet/index.cjs:186:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginResourcePolicyMiddleware (node_modules/helmet/index.cjs:179:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at crossOriginOpenerPolicyMiddleware (node_modules/helmet/index.cjs:163:3)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at contentSecurityPolicyMiddleware (node_modules/helmet/index.cjs:128:4)
      at internalNext (node_modules/helmet/index.cjs:535:6)
      at helmetMiddleware (node_modules/helmet/index.cjs:539:6)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)

  console.log
    🔄 Global OPTIONS handler for: /api/portfolio/holdings from origin: https://d1copuy2oqlazx.cloudfront.net

      at log (index.js:214:11)

  console.log
    🔄 Global OPTIONS handler for: /api/portfolio/holdings from origin: http://localhost:5173

      at log (index.js:214:11)

  console.log
    🔄 Global OPTIONS handler for: /api/portfolio/holdings from origin: http://localhost:3000

      at log (index.js:214:11)

PASS tests/security/authentication-security.test.js
  Authentication Security Tests
    JWT Token Validation
      ✓ should reject requests without authorization header (28 ms)
      ✓ should reject malformed authorization headers (7 ms)
      ✓ should reject expired JWT tokens (4 ms)
      ✓ should reject tokens with invalid signatures (2 ms)
      ✓ should reject tokens with missing required claims (2 ms)
      ✓ should reject tokens with future issued at time (2 ms)
      ✓ should accept valid JWT tokens (9 ms)
      ✓ should validate token algorithm to prevent none algorithm attack (2 ms)
    Session Management Security
      ✓ should prevent session fixation attacks (10 ms)
      ✓ should handle concurrent requests with same token securely (31 ms)
      ✓ should include security headers in responses (6 ms)
    API Key Security
      ✓ should encrypt API keys before storage (5 ms)
      ✓ should validate API key format before processing (2 ms)
      ✓ should not expose API keys in error messages (8 ms)
      ✓ should use different salts for different users (5 ms)
    Rate Limiting and Abuse Prevention
      ✓ should implement rate limiting for authentication attempts (6 ms)
      ✓ should prevent brute force attacks on protected endpoints (15 ms)
    Input Validation Security
      ✓ should prevent header injection attacks (2 ms)
      ✓ should sanitize JWT claims properly (6 ms)
      ✓ should validate content-type for POST requests (2 ms)
    CORS Security
      ✓ should enforce CORS policy for cross-origin requests (10 ms)
      ✓ should allow legitimate origins (9 ms)
    Error Information Disclosure
      ✓ should not expose sensitive information in error responses (2 ms)
      ✓ should use generic error messages for security-sensitive operations (2 ms)
    Timing Attack Prevention
      ✓ should have consistent response times for invalid tokens (5 ms)

  console.log
    📊 [BACKTEST] Getting user backtest results

      at log (routes/backtest.js:889:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/backtest HTTP/1.1" 200 278 "-" "-"
  console.log
    📊 [BACKTEST] Getting user backtest results

      at log (routes/backtest.js:889:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/backtest HTTP/1.1" 200 278 "-" "-"
  console.log
    📊 [BACKTEST] Creating new backtest

      at log (routes/backtest.js:913:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "POST /api/backtest HTTP/1.1" 200 283 "-" "-"
  console.log
    📊 [BACKTEST] Creating new backtest

      at log (routes/backtest.js:913:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "POST /api/backtest HTTP/1.1" 200 276 "-" "-"
  console.log
    📊 [BACKTEST] Creating new backtest

      at log (routes/backtest.js:913:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "POST /api/backtest HTTP/1.1" 200 275 "-" "-"
  console.log
    📊 [BACKTEST] Getting backtest test-backtest-1760874570560

      at log (routes/backtest.js:1186:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/backtest/test-backtest-1760874570560 HTTP/1.1" 404 182 "-" "-"
  console.log
    📊 [BACKTEST] Getting backtest nonexistent-id

      at log (routes/backtest.js:1186:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/backtest/nonexistent-id HTTP/1.1" 404 169 "-" "-"
  console.log
    📊 [BACKTEST] Creating new backtest

      at log (routes/backtest.js:913:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "POST /api/backtest HTTP/1.1" 200 278 "-" "-"
  console.log
    📊 [BACKTEST] Deleting backtest test-backtest-1760874570567

      at log (routes/backtest.js:1215:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "DELETE /api/backtest/test-backtest-1760874570567 HTTP/1.1" 404 182 "-" "-"
  console.log
    📊 [BACKTEST] Deleting backtest nonexistent-id

      at log (routes/backtest.js:1215:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "DELETE /api/backtest/nonexistent-id HTTP/1.1" 404 169 "-" "-"
  console.log
    📊 Backtest results requested - ID: all, limit: 50

      at log (routes/backtest.js:821:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/backtest/results HTTP/1.1" 200 2658 "-" "-"
  console.log
    📊 Backtest results requested - ID: all, limit: 5

      at log (routes/backtest.js:821:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/backtest/results?limit=5 HTTP/1.1" 200 1795 "-" "-"
  console.log
    📊 Backtest results requested - ID: test-id, limit: 50

      at log (routes/backtest.js:821:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/backtest/results?backtestId=test-id HTTP/1.1" 200 148 "-" "-"
  console.log
    📊 Backtest results requested - ID: all, limit: 50

      at log (routes/backtest.js:821:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/backtest/results?status=completed HTTP/1.1" 200 150 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/backtest/symbols HTTP/1.1" 404 620 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/backtest/symbols?search=AAPL HTTP/1.1" 404 620 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/backtest/symbols?limit=10 HTTP/1.1" 404 620 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/backtest/templates HTTP/1.1" 200 3101 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/backtest/templates HTTP/1.1" 200 3101 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "POST /api/backtest/validate HTTP/1.1" 200 64 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "POST /api/backtest/validate HTTP/1.1" 200 64 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "POST /api/backtest/validate HTTP/1.1" 400 53 "-" "-"
  console.log
    ⚡ Backtest optimization requested - type: grid_search, target: sharpe_ratio

      at log (routes/backtest.js:960:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/backtest/optimize HTTP/1.1" 400 153 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/backtest/strategies HTTP/1.1" 200 355 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "POST /api/backtest/strategies HTTP/1.1" 200 144 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "POST /api/backtest/strategies HTTP/1.1" 400 50 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "POST /api/backtest/run HTTP/1.1" 400 53 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "POST /api/backtest/run HTTP/1.1" 400 64 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "POST /api/backtest/run HTTP/1.1" 400 59 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "POST /api/backtest/run-python HTTP/1.1" 400 60 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "POST /api/backtest/run-python HTTP/1.1" 400 51 "-" "-"
  console.log
    📊 [BACKTEST] Getting user backtest results

      at log (routes/backtest.js:889:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/backtest HTTP/1.1" 200 515 "-" "-"
  console.log
    📊 Backtest results requested - ID: all, limit: 50

      at log (routes/backtest.js:821:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/backtest/results HTTP/1.1" 200 2971 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/backtest/strategies HTTP/1.1" 200 472 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/backtest/templates HTTP/1.1" 200 3101 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/backtest/symbols?search=INVALID_QUERY_TEST HTTP/1.1" 404 620 "-" "-"
  console.log
    📊 Backtest results requested - ID: all, limit: invalid

      at log (routes/backtest.js:821:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/backtest/results?limit=invalid HTTP/1.1" 200 145 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/backtest/run HTTP/1.1" 200 887 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/backtest/run HTTP/1.1" 200 887 "-" "-"
  console.log
    📊 [BACKTEST] Getting user backtest results

      at log (routes/backtest.js:889:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/backtest HTTP/1.1" 200 515 "-" "-"
FAIL tests/integration/routes/backtest.integration.test.js


  ● Test suite failed to run

    Cannot add a hook after tests have started running. Hooks must be defined synchronously.

      30 | describe("Backtest Routes", () => {
      31 |   beforeAll(async () => {
    > 32 |     beforeEach(() => {
         |     ^
      33 |     jest.clearAllMocks();
      34 |     query.mockImplementation((sql, params) => {
      35 |       // Default: return empty rows for all queries

      at eventHandler (node_modules/jest-circus/build/eventHandler.js:104:11)
      at Object.beforeEach (tests/integration/routes/backtest.integration.test.js:32:5)

  console.log
    Starting dividend test with app: function

      at Object.log (tests/integration/routes/dividend.integration.test.js:49:15)

  console.log
    💰 Dividend data requested for AAPL

      at log (routes/dividend.js:559:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/AAPL HTTP/1.1" 200 398 "-" "-"
  console.log
    Response status: 200

      at Object.log (tests/integration/routes/dividend.integration.test.js:55:15)

  console.log
    💰 Dividend data requested for AAPL

      at log (routes/dividend.js:559:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/AAPL HTTP/1.1" 200 398 "-" "-"
  console.log
    💰 Dividend data requested for MSFT

      at log (routes/dividend.js:559:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/MSFT?timeframe=1Y HTTP/1.1" 200 398 "-" "-"
  console.log
    💰 Dividend data requested for MSFT

      at log (routes/dividend.js:559:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/MSFT?timeframe=2Y HTTP/1.1" 200 398 "-" "-"
  console.log
    💰 Dividend data requested for MSFT

      at log (routes/dividend.js:559:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/MSFT?timeframe=5Y HTTP/1.1" 200 398 "-" "-"
  console.log
    💰 Dividend data requested for MSFT

      at log (routes/dividend.js:559:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/MSFT?timeframe=10Y HTTP/1.1" 200 398 "-" "-"
  console.log
    💰 Dividend data requested for MSFT

      at log (routes/dividend.js:559:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/MSFT?timeframe=max HTTP/1.1" 200 398 "-" "-"
  console.log
    💰 Dividend data requested for TSLA

      at log (routes/dividend.js:559:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/TSLA HTTP/1.1" 200 398 "-" "-"
  console.log
    💰 Dividend data requested for AMZN

      at log (routes/dividend.js:559:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/AMZN HTTP/1.1" 200 398 "-" "-"
  console.log
    💰 Dividend data requested for NFLX

      at log (routes/dividend.js:559:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/NFLX HTTP/1.1" 200 398 "-" "-"
  console.log
    💰 Dividend data requested for INVALID123

      at log (routes/dividend.js:559:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/INVALID123 HTTP/1.1" 404 132 "-" "-"
  console.log
    💰 Dividend data requested for JNJ

      at log (routes/dividend.js:559:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/JNJ HTTP/1.1" 200 397 "-" "-"
  console.log
    💰 Dividends calendar requested - symbol: all, days_ahead: 30, days: 30, limit: 50, min_yield: 0

      at log (routes/dividend.js:40:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/calendar HTTP/1.1" 200 904 "-" "-"
  console.log
    💰 Dividends calendar requested - symbol: all, days_ahead: 30, days: 30, limit: 50, min_yield: 0

      at log (routes/dividend.js:40:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/calendar?start_date=2025-01-01&end_date=2025-03-31 HTTP/1.1" 200 904 "-" "-"
  console.log
    💰 Dividends calendar requested - symbol: all, days_ahead: 30, days: 30, limit: 50, min_yield: 0

      at log (routes/dividend.js:40:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/calendar?min_amount=1.00 HTTP/1.1" 200 904 "-" "-"
  console.log
    💰 Dividends calendar requested - symbol: all, days_ahead: 30, days: 30, limit: 50, min_yield: 0

      at log (routes/dividend.js:40:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/calendar?sector=Technology HTTP/1.1" 200 920 "-" "-"
  console.log
    💰 Dividends calendar requested - symbol: all, days_ahead: 30, days: 30, limit: 50, min_yield: 0

      at log (routes/dividend.js:40:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/calendar?sector=Healthcare HTTP/1.1" 200 920 "-" "-"
  console.log
    💰 Dividends calendar requested - symbol: all, days_ahead: 30, days: 30, limit: 50, min_yield: 0

      at log (routes/dividend.js:40:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/calendar?sector=Financial%20Services HTTP/1.1" 200 936 "-" "-"
  console.log
    💰 Dividends calendar requested - symbol: all, days_ahead: 30, days: 30, limit: 50, min_yield: 0

      at log (routes/dividend.js:40:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/calendar?sector=Consumer%20Goods HTTP/1.1" 200 928 "-" "-"
  console.log
    💰 Dividend aristocrats requested - min_years: 25

      at log (routes/dividend.js:278:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/aristocrats HTTP/1.1" 200 122 "-" "-"
  console.log
    💰 Dividend aristocrats requested - min_years: 25

      at log (routes/dividend.js:278:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/aristocrats?min_years=25 HTTP/1.1" 200 122 "-" "-"
  console.log
    💰 Dividend aristocrats requested - min_years: 25

      at log (routes/dividend.js:278:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/aristocrats?min_yield=2.0&max_yield=6.0 HTTP/1.1" 200 121 "-" "-"
  console.log
    💰 Dividend growth analysis for AAPL

      at log (routes/dividend.js:409:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/growth?symbol=AAPL HTTP/1.1" 200 596 "-" "-"
  console.log
    💰 Dividend growth analysis for MSFT

      at log (routes/dividend.js:409:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/growth?symbol=MSFT&period=1Y HTTP/1.1" 200 596 "-" "-"
  console.log
    💰 Dividend growth analysis for MSFT

      at log (routes/dividend.js:409:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/growth?symbol=MSFT&period=3Y HTTP/1.1" 200 596 "-" "-"
  console.log
    💰 Dividend growth analysis for MSFT

      at log (routes/dividend.js:409:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/growth?symbol=MSFT&period=5Y HTTP/1.1" 200 596 "-" "-"
  console.log
    💰 Dividend growth analysis for MSFT

      at log (routes/dividend.js:409:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/growth?symbol=MSFT&period=10Y HTTP/1.1" 200 596 "-" "-"
  console.log
    💰 Dividend growth analysis for JNJ

      at log (routes/dividend.js:409:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/growth?symbol=JNJ HTTP/1.1" 200 595 "-" "-"
  console.log
    💰 Dividend screener requested with filters

      at log (routes/dividend.js:527:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/screener HTTP/1.1" 200 239 "-" "-"
  console.log
    💰 Dividend screener requested with filters

      at log (routes/dividend.js:527:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/screener?min_yield=3.0&max_yield=8.0 HTTP/1.1" 200 238 "-" "-"
  console.log
    💰 Dividend screener requested with filters

      at log (routes/dividend.js:527:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/screener?max_payout_ratio=60 HTTP/1.1" 200 238 "-" "-"
  console.log
    💰 Dividend screener requested with filters

      at log (routes/dividend.js:527:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/screener?min_market_cap=1000000000 HTTP/1.1" 200 248 "-" "-"
  console.log
    💰 Dividend screener requested with filters

      at log (routes/dividend.js:527:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/screener?min_yield=2.5&max_payout_ratio=70&min_market_cap=5000000000&sector=Technology HTTP/1.1" 200 256 "-" "-"
  console.log
    💰 Dividend screener requested with filters

      at log (routes/dividend.js:527:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/screener?sort=yield&order=desc HTTP/1.1" 200 239 "-" "-"
  console.log
    💰 Dividend screener requested with filters

      at log (routes/dividend.js:527:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/screener?sort=payout_ratio&order=desc HTTP/1.1" 200 239 "-" "-"
  console.log
    💰 Dividend screener requested with filters

      at log (routes/dividend.js:527:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/screener?sort=growth_rate&order=desc HTTP/1.1" 200 239 "-" "-"
  console.log
    💰 Dividend screener requested with filters

      at log (routes/dividend.js:527:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/screener?sort=market_cap&order=desc HTTP/1.1" 200 239 "-" "-"
  console.log
    💰 Dividend forecast for AAPL, horizon: 1Y

      at log (routes/dividend.js:470:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/forecast?symbol=AAPL HTTP/1.1" 200 530 "-" "-"
  console.log
    💰 Dividend forecast for MSFT, horizon: 1Q

      at log (routes/dividend.js:470:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/forecast?symbol=MSFT&horizon=1Q HTTP/1.1" 200 530 "-" "-"
  console.log
    💰 Dividend forecast for MSFT, horizon: 2Q

      at log (routes/dividend.js:470:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/forecast?symbol=MSFT&horizon=2Q HTTP/1.1" 200 530 "-" "-"
  console.log
    💰 Dividend forecast for MSFT, horizon: 1Y

      at log (routes/dividend.js:470:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/forecast?symbol=MSFT&horizon=1Y HTTP/1.1" 200 530 "-" "-"
  console.log
    💰 Dividend forecast for MSFT, horizon: 2Y

      at log (routes/dividend.js:470:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/forecast?symbol=MSFT&horizon=2Y HTTP/1.1" 200 530 "-" "-"
  console.log
    💰 Dividend data requested for AAPL

      at log (routes/dividend.js:559:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/AAPL HTTP/1.1" 200 398 "-" "-"
  console.log
    💰 Dividend data requested for MSFT

      at log (routes/dividend.js:559:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/MSFT HTTP/1.1" 200 398 "-" "-"
  console.log
    💰 Dividend data requested for JNJ

      at log (routes/dividend.js:559:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/JNJ HTTP/1.1" 200 397 "-" "-"
  console.log
    💰 Dividend data requested for KO

      at log (routes/dividend.js:559:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/KO HTTP/1.1" 200 396 "-" "-"
  console.log
    💰 Dividend data requested for PFE

      at log (routes/dividend.js:559:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/PFE HTTP/1.1" 200 397 "-" "-"
  console.log
    💰 Dividends calendar requested - symbol: all, days_ahead: 30, days: 30, limit: 50, min_yield: 0

      at log (routes/dividend.js:40:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/calendar?start_date=invalid-date HTTP/1.1" 200 904 "-" "-"
  console.log
    💰 Dividends calendar requested - symbol: all, days_ahead: 30, days: 30, limit: 50, min_yield: 0

      at log (routes/dividend.js:40:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/calendar?end_date=2025-13-40 HTTP/1.1" 200 904 "-" "-"
  console.log
    💰 Dividends calendar requested - symbol: all, days_ahead: 30, days: 30, limit: 50, min_yield: 0

      at log (routes/dividend.js:40:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/calendar?start_date=2025-12-31&end_date=2025-01-01 HTTP/1.1" 200 904 "-" "-"
  console.log
    💰 Dividend data requested for AAPL

      at log (routes/dividend.js:559:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/AAPL HTTP/1.1" 200 398 "-" "-"
  console.log
    💰 Dividend screener requested with filters

      at log (routes/dividend.js:527:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/screener?min_yield=invalid HTTP/1.1" 200 242 "-" "-"
  console.log
    💰 Dividend screener requested with filters

      at log (routes/dividend.js:527:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/screener?max_payout_ratio=-50 HTTP/1.1" 200 239 "-" "-"
  console.log
    💰 Dividend screener requested with filters

      at log (routes/dividend.js:527:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/screener?min_market_cap=abc HTTP/1.1" 200 242 "-" "-"
  console.log
    💰 Dividend screener requested with filters

      at log (routes/dividend.js:527:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/screener?min_yield=10&max_yield=2 HTTP/1.1" 200 239 "-" "-"
  console.log
    💰 Dividends calendar requested - symbol: all, days_ahead: 30, days: 30, limit: 50, min_yield: 0

      at log (routes/dividend.js:40:11)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/calendar HTTP/1.1" 200 904 "-" "-"
  console.log
    💰 Dividend data requested for BRK.A

      at log (routes/dividend.js:559:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/BRK.A HTTP/1.1" 200 399 "-" "-"
  console.log
    💰 Dividend data requested for BRK.B

      at log (routes/dividend.js:559:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/BRK.B HTTP/1.1" 200 399 "-" "-"
  console.log
    💰 Dividend data requested for BF.A

      at log (routes/dividend.js:559:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/BF.A HTTP/1.1" 200 398 "-" "-"
  console.log
    💰 Dividend data requested for BF.B

      at log (routes/dividend.js:559:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/BF.B HTTP/1.1" 200 398 "-" "-"
  console.log
    💰 Dividend data requested for AAPL'; DROP TABLE DIVIDENDS; --

      at log (routes/dividend.js:559:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/AAPL%27%3B%20DROP%20TABLE%20dividends%3B%20-- HTTP/1.1" 400 163 "-" "-"
  console.log
    💰 Dividend data requested for AAPL

      at log (routes/dividend.js:559:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/AAPL HTTP/1.1" 200 398 "-" "-"
  console.log
    💰 Dividend data requested for JNJ

      at log (routes/dividend.js:559:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/JNJ HTTP/1.1" 200 397 "-" "-"
  console.log
    💰 Dividend screener requested with filters

      at log (routes/dividend.js:527:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/screener HTTP/1.1" 200 239 "-" "-"
  console.log
    💰 Dividend screener requested with filters

      at log (routes/dividend.js:527:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/screener HTTP/1.1" 200 239 "-" "-"
  console.log
    💰 Dividend screener requested with filters

      at log (routes/dividend.js:527:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/screener HTTP/1.1" 200 239 "-" "-"
  console.log
    💰 Dividend screener requested with filters

      at log (routes/dividend.js:527:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/screener HTTP/1.1" 200 239 "-" "-"
  console.log
    💰 Dividend screener requested with filters

      at log (routes/dividend.js:527:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/screener HTTP/1.1" 200 239 "-" "-"
  console.log
    💰 Dividend screener requested with filters

      at log (routes/dividend.js:527:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/screener HTTP/1.1" 200 239 "-" "-"
  console.log
    💰 Dividend screener requested with filters

      at log (routes/dividend.js:527:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/screener HTTP/1.1" 200 239 "-" "-"
  console.log
    💰 Dividend screener requested with filters

      at log (routes/dividend.js:527:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/screener HTTP/1.1" 200 239 "-" "-"
  console.log
    💰 Dividend screener requested with filters

      at log (routes/dividend.js:527:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/screener HTTP/1.1" 200 239 "-" "-"
  console.log
    💰 Dividend screener requested with filters

      at log (routes/dividend.js:527:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:30 +0000] "GET /api/dividend/screener HTTP/1.1" 200 239 "-" "-"
PASS tests/integration/routes/dividend.integration.test.js
  Dividend Routes Integration Tests
    GET /api/dividend/:symbol (Stock Dividend Data)
      ✓ should return dividend data for dividend-paying stocks (11 ms)
      ✓ should include dividend yield calculation (2 ms)
      ✓ should handle historical timeframe parameter (12 ms)
      ✓ should handle non-dividend paying stocks (6 ms)
      ✓ should handle invalid stock symbol (2 ms)
      ✓ should validate dividend data structure (2 ms)
    GET /api/dividend/calendar (Dividend Calendar)
      ✓ should return upcoming dividend events (2 ms)
      ✓ should handle date range for dividend calendar (2 ms)
      ✓ should filter by minimum dividend amount (2 ms)
      ✓ should handle sector filter (8 ms)
    GET /api/dividend/aristocrats (Dividend Aristocrats)
      ✓ should return dividend aristocrat stocks (2 ms)
      ✓ should handle minimum years filter (1 ms)
      ✓ should handle yield range filters (2 ms)
    GET /api/dividend/growth (Dividend Growth Analysis)
      ✓ should return dividend growth analysis (3 ms)
      ✓ should handle growth period parameter (10 ms)
      ✓ should include dividend sustainability metrics (3 ms)
    GET /api/dividend/screener (Dividend Stock Screener)
      ✓ should return dividend stock screening results (2 ms)
      ✓ should handle yield range screening (1 ms)
      ✓ should handle payout ratio filter (1 ms)
      ✓ should handle market cap filter (2 ms)
      ✓ should handle multiple filters combined (1 ms)
      ✓ should handle sorting options (8 ms)
    GET /api/dividend/forecast (Dividend Forecasting)
      ✓ should return dividend payment forecasts (2 ms)
      ✓ should handle forecast horizon parameter (7 ms)
    Performance and Edge Cases
      ✓ should handle concurrent dividend data requests (7 ms)
      ✓ should handle invalid date formats (8 ms)
      ✓ should validate dividend amount ranges (2 ms)
      ✓ should handle malformed screening parameters (7 ms)
      ✓ should maintain response time consistency (2 ms)
      ✓ should handle special symbol characters (7 ms)
      ✓ should handle SQL injection attempts (2 ms)
      ✓ should handle database connection failures gracefully (2 ms)
      ✓ should validate yield calculation accuracy (2 ms)
      ✓ should handle stress testing with multiple concurrent requests (13 ms)

  console.error
    Database query error: {
      error: 'column "title" does not exist',
      query: '\n' +
        '      SELECT \n' +
        '        insider_name,\n' +
        '        title,\n' +
        '        transaction_date,\n' +
        '        transaction_ty...',
      params: '2 parameters',
      code: '42703'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at routes/insider.js:50:20

  console.warn
    Database query error (returning null for tests): column "title" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at routes/insider.js:50:20

  console.error
    Database query error: {
      error: 'column "title" does not exist',
      query: '\n' +
        '      SELECT \n' +
        '        insider_name,\n' +
        '        title,\n' +
        '        transaction_date,\n' +
        '        transaction_ty...',
      params: '2 parameters',
      code: '42703'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at routes/insider.js:50:20

  console.warn
    Database query error (returning null for tests): column "title" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at routes/insider.js:50:20

  console.error
    Database query error: {
      error: 'column "title" does not exist',
      query: '\n' +
        '      SELECT \n' +
        '        insider_name,\n' +
        '        title,\n' +
        '        transaction_date,\n' +
        '        transaction_ty...',
      params: '2 parameters',
      code: '42703'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at routes/insider.js:50:20

  console.warn
    Database query error (returning null for tests): column "title" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at routes/insider.js:50:20

  console.error
    Database query error: {
      error: 'column "title" does not exist',
      query: '\n' +
        '      SELECT \n' +
        '        insider_name,\n' +
        '        title,\n' +
        '        transaction_date,\n' +
        '        transaction_ty...',
      params: '2 parameters',
      code: '42703'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at routes/insider.js:50:20

  console.warn
    Database query error (returning null for tests): column "title" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at routes/insider.js:50:20

  console.error
    Database query error: {
      error: 'column "title" does not exist',
      query: '\n' +
        '      SELECT \n' +
        '        insider_name,\n' +
        '        title,\n' +
        '        transaction_date,\n' +
        '        transaction_ty...',
      params: '2 parameters',
      code: '42703'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at routes/insider.js:50:20

  console.warn
    Database query error (returning null for tests): column "title" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at routes/insider.js:50:20

  console.error
    Database query error: {
      error: 'column "title" does not exist',
      query: '\n' +
        '      SELECT \n' +
        '        insider_name,\n' +
        '        title,\n' +
        '        symbol,\n' +
        '        transaction_date,\n' +
        '      ...',
      params: '1 parameters',
      code: '42703'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at routes/insider.js:180:20

  console.warn
    Database query error (returning null for tests): column "title" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at routes/insider.js:180:20

  console.error
    General insider trades error: TypeError: Cannot read properties of null (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/insider.js:182:17)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)

      256 |     });
      257 |   } catch (error) {
    > 258 |     console.error("General insider trades error:", error);
          |             ^
      259 |     res.status(500).json({
      260 |       success: false,
      261 |       error: "Failed to fetch insider trading data",

      at error (routes/insider.js:258:13)

  console.error
    Database query error: {
      error: 'column "title" does not exist',
      query: '\n' +
        '      SELECT \n' +
        '        insider_name,\n' +
        '        title,\n' +
        '        transaction_date,\n' +
        '        transaction_ty...',
      params: '2 parameters',
      code: '42703'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at routes/insider.js:50:20

  console.warn
    Database query error (returning null for tests): column "title" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at routes/insider.js:50:20

  console.error
    Database query error: {
      error: 'column "title" does not exist',
      query: '\n' +
        '      SELECT \n' +
        '        insider_name,\n' +
        '        title,\n' +
        '        transaction_date,\n' +
        '        transaction_ty...',
      params: '2 parameters',
      code: '42703'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at routes/insider.js:50:20

  console.warn
    Database query error (returning null for tests): column "title" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at routes/insider.js:50:20

  console.error
    Database query error: {
      error: 'column "title" does not exist',
      query: '\n' +
        '      SELECT \n' +
        '        insider_name,\n' +
        '        title,\n' +
        '        transaction_date,\n' +
        '        transaction_ty...',
      params: '2 parameters',
      code: '42703'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at routes/insider.js:50:20

  console.warn
    Database query error (returning null for tests): column "title" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at routes/insider.js:50:20

  console.error
    Database query error: {
      error: 'column "title" does not exist',
      query: '\n' +
        '      SELECT \n' +
        '        insider_name,\n' +
        '        title,\n' +
        '        transaction_date,\n' +
        '        transaction_ty...',
      params: '2 parameters',
      code: '42703'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at routes/insider.js:50:20

  console.warn
    Database query error (returning null for tests): column "title" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at routes/insider.js:50:20

  console.error
    Database query error: {
      error: 'column "title" does not exist',
      query: '\n' +
        '      SELECT \n' +
        '        insider_name,\n' +
        '        title,\n' +
        '        transaction_date,\n' +
        '        transaction_ty...',
      params: '2 parameters',
      code: '42703'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at routes/insider.js:50:20

  console.warn
    Database query error (returning null for tests): column "title" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at routes/insider.js:50:20

  console.error
    Database query error: {
      error: 'column "title" does not exist',
      query: '\n' +
        '      SELECT \n' +
        '        insider_name,\n' +
        '        title,\n' +
        '        transaction_date,\n' +
        '        transaction_ty...',
      params: '2 parameters',
      code: '42703'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at routes/insider.js:50:20

  console.warn
    Database query error (returning null for tests): column "title" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at routes/insider.js:50:20

PASS tests/unit/routes/insider.test.js
  Insider Routes
    GET /api/insider/trades/:symbol
      ✓ should return insider trades data for valid symbol (30 ms)
      ✓ should convert symbol to uppercase (10 ms)
      ✓ should log the request with symbol (13 ms)
      ✓ should handle symbols with special characters (9 ms)
      ✓ should handle long symbol names (16 ms)
      ✓ should handle empty symbol gracefully (15 ms)
      ✓ should handle route errors gracefully (10 ms)
      ✓ should maintain consistent response structure (31 ms)
      ✓ should handle database errors gracefully (10 ms)
      ✓ should handle numeric symbol inputs (11 ms)

  console.log
    Initializing database connection...

      at log (index.js:395:13)

  console.log
    📊 Portfolio summary requested for user: test-user-123

      at log (routes/portfolio.js:175:13)

  console.log
    📋 Portfolio positions requested for user: test-user-123

      at log (routes/portfolio.js:282:13)

  console.log
    Portfolio holdings endpoint called for authenticated user: test-user-123

      at log (routes/portfolio.js:1734:13)

  console.log
    💰 Portfolio value requested for user: test-user-123

      at log (routes/portfolio.js:6093:13)

  console.log
    📊 Portfolio allocation requested for user: test-user-123

      at log (routes/portfolio.js:5862:13)

  console.log
    📊 Portfolio allocations requested for user: test-user-123

      at log (routes/portfolio.js:6001:13)

  console.log
    Portfolio analytics endpoint called for authenticated user: test-user-123, timeframe: 1y

      at log (routes/portfolio.js:353:11)

  console.log
    📈 Portfolio returns requested for user: test-user-123, period: 1y

      at log (routes/portfolio.js:6191:13)

  console.log
    Portfolio benchmark endpoint called for SPY, timeframe: 1y

      at log (routes/portfolio.js:1510:13)

  console.log
    Portfolio risk endpoint called for user: test-user-123

      at log (routes/portfolio.js:2227:13)

  console.log
    Portfolio risk analysis endpoint called for user: test-user-123

      at log (routes/portfolio.js:824:11)

  console.log
    ⚠️ Portfolio risk analysis requested for user: test-user-123

      at log (routes/portfolio.js:5762:13)

  console.log
    Portfolio rebalance endpoint called for user: test-user-123, strategy: balanced

      at log (routes/portfolio.js:1868:13)

  console.log
    Portfolio optimization endpoint called for authenticated user: test-user-123

      at log (routes/portfolio.js:2741:11)

  console.log
    👀 Portfolio watchlist requested for user: test-user-123

      at log (routes/portfolio.js:5818:13)

  console.log
    📈 Portfolio transactions requested for user: test-user-123, type: all, limit: 50

      at log (routes/portfolio.js:5525:13)

  console.log
    API key stored securely for user test-user-123, broker: test-broker

      at log (routes/portfolio.js:3925:13)

  console.log
    Portfolio holdings endpoint called for authenticated user: test-user-123

      at log (routes/portfolio.js:1734:13)

  console.log
    📊 Holdings for portfolio invalid-user-id requested

      at log (routes/portfolio.js:1060:13)

  console.log
    API key deleted for user test-user-123, broker: test-broker

      at log (routes/portfolio.js:4009:13)

PASS tests/integration/routes/portfolio.integration.test.js
  Portfolio Integration Tests - 100% Coverage
    Core Portfolio APIs
      ✓ GET /api/portfolio - should return portfolio API info (25 ms)
      ✓ GET /api/portfolio/summary - should return portfolio summary (8 ms)
      ✓ GET /api/portfolio/positions - should return portfolio positions (5 ms)
      ✓ GET /api/portfolio/holdings - should return portfolio holdings (5 ms)
      ✓ GET /api/portfolio/value - should return portfolio value data (4 ms)
      ✓ GET /api/portfolio/allocation - should return portfolio allocation (4 ms)
      ✓ GET /api/portfolio/allocations - should return portfolio allocations (6 ms)
    Analytics and Analysis APIs
      ✓ GET /api/portfolio/analytics - should return portfolio analytics (27 ms)
    Performance and Returns APIs
      ✓ GET /api/portfolio/returns - should return portfolio returns (2 ms)
      ✓ GET /api/portfolio/benchmark - should return benchmark comparison (6 ms)
    Risk Management APIs
      ✓ GET /api/portfolio/risk - should return risk assessment (2 ms)
      ✓ GET /api/portfolio/risk-analysis - should return risk analysis (3 ms)
      ✓ GET /api/portfolio/risk/analysis - should return detailed risk analysis (2 ms)
      ✓ GET /api/portfolio/risk/var - should return VaR analysis (2 ms)
      ✓ GET /api/portfolio/risk/stress-test - should return stress test results (1 ms)
      ✓ GET /api/portfolio/risk/concentration - should return concentration risk (1 ms)
    Portfolio Management APIs
      ✓ GET /api/portfolio/rebalance - should return rebalance recommendations (3 ms)
      ✓ GET /api/portfolio/optimization - should return optimization suggestions (3 ms)
      ✓ GET /api/portfolio/watchlist - should return portfolio watchlist (2 ms)
      ✓ GET /api/portfolio/transactions - should return portfolio transactions (2 ms)
    Broker Integration APIs
      ✓ GET /api/portfolio/api-keys - should return API keys status (1 ms)
      ✓ POST /api/portfolio/api-keys - should handle API key creation (57 ms)
    Health and System APIs
      ✓ GET /api/portfolio/health - should return portfolio service health (1 ms)
    Error Handling and Authentication
      ✓ should require authentication for protected endpoints (2 ms)
      ✓ should handle invalid endpoints gracefully (2 ms)
      ✓ should handle invalid user IDs gracefully (2 ms)
      ✓ DELETE /api/portfolio/api-keys/test-broker - should handle API key deletion (6 ms)
      ✓ GET /api/portfolio/data - should redirect to holdings endpoint (1 ms)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/settings HTTP/1.1" 200 472 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/settings HTTP/1.1" 200 472 "-" "-"
  console.log
    ⚙️ Dashboard settings requested for user: test-user-123

      at log (routes/settings.js:44:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/settings/dashboard HTTP/1.1" 200 2725 "-" "-"
  console.log
    ⚙️ Dashboard settings requested for user: test-user-123

      at log (routes/settings.js:44:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/settings/dashboard HTTP/1.1" 200 2725 "-" "-"
  console.log
    ⚙️ Dashboard settings requested for user: test-user-123

      at log (routes/settings.js:44:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/settings/dashboard HTTP/1.1" 200 2725 "-" "-"
  console.log
    📊 Trading mode requested for user: test-user-123

      at log (routes/settings.js:259:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/settings/trading-mode HTTP/1.1" 200 232 "-" "-"
  console.log
    📊 Trading mode requested for user: test-user-123

      at log (routes/settings.js:259:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/settings/trading-mode HTTP/1.1" 200 232 "-" "-"
  console.log
    🔄 Trading mode toggle requested for user: test-user-123

      at log (routes/settings.js:310:13)

  console.log
    ✅ Trading mode updated to paper for user: test-user-123

      at log (routes/settings.js:353:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "POST /api/settings/trading-mode HTTP/1.1" 200 323 "-" "-"
  console.log
    🔄 Trading mode toggle requested for user: test-user-123

      at log (routes/settings.js:310:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "POST /api/settings/trading-mode HTTP/1.1" 400 130 "-" "-"
  console.log
    🔄 Trading mode toggle requested for user: test-user-123

      at log (routes/settings.js:310:13)

  console.log
    ✅ Trading mode updated to paper for user: test-user-123

      at log (routes/settings.js:353:15)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "POST /api/settings/trading-mode HTTP/1.1" 200 323 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/settings/api-keys HTTP/1.1" 200 83 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/settings/api-keys HTTP/1.1" 200 83 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/settings/api-keys HTTP/1.1" 200 83 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "POST /api/settings/api-keys HTTP/1.1" 400 100 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "POST /api/settings/api-keys HTTP/1.1" 400 100 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "POST /api/settings/api-keys HTTP/1.1" 400 100 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "POST /api/settings/api-keys HTTP/1.1" 400 100 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/settings/api-keys/alpaca HTTP/1.1" 404 65 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/settings/api-keys/alpaca HTTP/1.1" 404 65 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "PUT /api/settings/api-keys/alpaca HTTP/1.1" 404 79 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "PUT /api/settings/api-keys/alpaca HTTP/1.1" 404 79 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "DELETE /api/settings/api-keys/alpaca HTTP/1.1" 404 65 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "DELETE /api/settings/api-keys/alpaca HTTP/1.1" 404 65 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/settings HTTP/1.1" 200 472 "-" "-"
  console.log
    ⚙️ Dashboard settings requested for user: test-user-123

      at log (routes/settings.js:44:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/settings/dashboard HTTP/1.1" 200 2725 "-" "-"
  console.log
    📊 Trading mode requested for user: test-user-123

      at log (routes/settings.js:259:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/settings/trading-mode HTTP/1.1" 200 232 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/settings/api-keys HTTP/1.1" 200 83 "-" "-"
  console.log
    ⚙️ Dashboard settings requested for user: test-user-123

      at log (routes/settings.js:44:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/settings/dashboard HTTP/1.1" 200 2725 "-" "-"
  console.log
    🔄 Trading mode toggle requested for user: test-user-123

      at log (routes/settings.js:310:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "POST /api/settings/trading-mode HTTP/1.1" 400 130 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/settings/api-keys/invalid-provider-name HTTP/1.1" 404 80 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "POST /api/settings/api-keys HTTP/1.1" 400 100 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/settings/api-keys/%27%3B%20DROP%20TABLE%20user_api_keys%3B%20-- HTTP/1.1" 404 90 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/settings/api-keys/1%27%20OR%20%271%27%3D%271 HTTP/1.1" 404 71 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/settings/api-keys/UNION%20SELECT%20*%20FROM%20users HTTP/1.1" 404 84 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/settings/api-keys/%3Cscript%3Ealert(%27xss%27)%3C%2Fscript%3E HTTP/1.1" 404 88 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/settings HTTP/1.1" 200 472 "-" "-"
  console.log
    ⚙️ Dashboard settings requested for user: test-user-123

      at log (routes/settings.js:44:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/settings/dashboard HTTP/1.1" 200 2725 "-" "-"
  console.log
    📊 Trading mode requested for user: test-user-123

      at log (routes/settings.js:259:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/settings/trading-mode HTTP/1.1" 200 232 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/settings/api-keys HTTP/1.1" 200 83 "-" "-"
  console.log
    ⚙️ Dashboard settings requested for user: test-user-123

      at log (routes/settings.js:44:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/settings/dashboard HTTP/1.1" 200 2725 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/settings HTTP/1.1" 200 472 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/settings HTTP/1.1" 200 472 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/settings HTTP/1.1" 200 472 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/settings/apikeys HTTP/1.1" 302 44 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/settings/apikeys?broker=test&active=true HTTP/1.1" 302 68 "-" "-"
PASS tests/integration/routes/settings.integration.test.js
  Settings Routes Integration Tests
    GET /api/settings (Root Endpoint)
      ✓ should return settings API information (3 ms)
      ✓ should require authentication (2 ms)
    GET /api/settings/dashboard (Dashboard Settings)
      ✓ should return dashboard settings (5 ms)
      ✓ should handle database connection issues (2 ms)
      ✓ should require authentication (2 ms)
    GET /api/settings/trading-mode (Trading Mode)
      ✓ should return current trading mode (2 ms)
      ✓ should require authentication (2 ms)
    POST /api/settings/trading-mode (Toggle Trading Mode)
      ✓ should toggle trading mode (5 ms)
      ✓ should validate trading mode values (5 ms)
      ✓ should require authentication (3 ms)
    GET /api/settings/api-keys (API Keys)
      ✓ should return user API keys (1 ms)
      ✓ should mask sensitive API key data (2 ms)
      ✓ should require authentication (1 ms)
    POST /api/settings/api-keys (Create API Key)
      ✓ should create new API key (2 ms)
      ✓ should validate required fields (1 ms)
      ✓ should validate provider types (1 ms)
      ✓ should require authentication (1 ms)
    GET /api/settings/api-keys/:provider (Get Specific API Key)
      ✓ should return specific provider API key status (2 ms)
      ✓ should require authentication (1 ms)
    PUT /api/settings/api-keys/:provider (Update API Key)
      ✓ should update API key (2 ms)
      ✓ should require authentication (1 ms)
    DELETE /api/settings/api-keys/:provider (Delete API Key)
      ✓ should delete API key (1 ms)
      ✓ should require authentication (1 ms)
    Performance and Edge Cases
      ✓ should handle concurrent requests to settings endpoints (5 ms)
      ✓ should maintain response time consistency (2 ms)
      ✓ should handle invalid parameters gracefully (4 ms)
      ✓ should handle SQL injection attempts safely (5 ms)
      ✓ should validate response content types (7 ms)
      ✓ should handle database connection issues gracefully (2 ms)
    Authentication Edge Cases
      ✓ should handle malformed authorization headers (2 ms)
      ✓ should handle empty authorization headers (1 ms)
      ✓ should handle missing bearer token (2 ms)
    GET /api/settings/apikeys (Redirect Endpoint)
      ✓ should redirect to /api/settings/api-keys (4 ms)
      ✓ should handle query parameters in redirect (1 ms)

PASS tests/unit/routes/commodities.test.js
  Commodities Routes
    GET /api/commodities/health
      ✓ should return health status (10 ms)
      ✓ should not require authentication (1 ms)
    GET /api/commodities/
      ✓ should return commodities API overview (1 ms)
      ✓ should return all expected endpoints (2 ms)
    GET /api/commodities/categories
      ✓ should return commodity categories (2 ms)
      ✓ should include energy category with correct structure (1 ms)
      ✓ should include precious metals category (1 ms)
      ✓ should include base metals category (2 ms)
      ✓ should include agriculture category (1 ms)
      ✓ should calculate total weight correctly (1 ms)
      ✓ should include performance data for all time periods (7 ms)
    GET /api/commodities/prices
      ✓ should return current commodity prices (1 ms)
      ✓ should include major commodities (2 ms)
      ✓ should include required price fields (1 ms)
      ✓ should filter by category when provided (1 ms)
      ✓ should handle invalid category filter (1 ms)
      ✓ should limit results when limit parameter provided (1 ms)
    GET /api/commodities/market-summary
      ✓ should return market summary (1 ms)
      ✓ should include market overview metrics (1 ms)
      ✓ should include top gainers and losers (1 ms)
      ✓ should include market sentiment
    GET /api/commodities/correlations
      ✓ should return price correlations (1 ms)
      ✓ should include correlation matrix (1 ms)
      ✓ should include correlation insights (1 ms)
      ✓ should filter correlations by minimum threshold (1 ms)
    GET /api/commodities/news
      ✓ should return commodity news (1 ms)
      ✓ should include required news fields (1 ms)
      ✓ should filter by category when provided (2 ms)
      ✓ should respect limit parameter
    Response Format Validation
      ✓ should return consistent JSON response format (8 ms)
      ✓ should include timestamps in ISO format where applicable (4 ms)
      ✓ should use consistent success field for API responses (4 ms)
    Edge Cases and Error Handling
      ✓ should handle malformed query parameters gracefully (1 ms)
      ✓ should handle very large limit values (1 ms)
      ✓ should handle negative limit values (1 ms)
    Performance and Caching
      ✓ should respond quickly to health checks (1 ms)
      ✓ should handle concurrent requests (3 ms)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities HTTP/1.1" 200 415 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities HTTP/1.1" 200 415 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/health HTTP/1.1" 200 130 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/categories HTTP/1.1" 200 1344 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/categories HTTP/1.1" 200 1344 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/categories HTTP/1.1" 200 1344 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/prices HTTP/1.1" 200 1372 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/prices?limit=5 HTTP/1.1" 200 1173 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/prices?category=energy HTTP/1.1" 200 575 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/prices?category=metals HTTP/1.1" 200 178 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/prices?category=agriculture HTTP/1.1" 200 381 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/market-summary HTTP/1.1" 200 517 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/market-summary HTTP/1.1" 200 517 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/market-summary HTTP/1.1" 200 517 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/correlations HTTP/1.1" 200 1202 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/correlations?timeframe=1W HTTP/1.1" 200 1202 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/correlations?timeframe=1M HTTP/1.1" 200 1202 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/correlations?timeframe=3M HTTP/1.1" 200 1202 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/correlations?timeframe=1Y HTTP/1.1" 200 1202 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/correlations HTTP/1.1" 200 1202 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/news HTTP/1.1" 200 185 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/news?category=energy HTTP/1.1" 200 185 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/news?category=metals HTTP/1.1" 200 185 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/news?category=agriculture HTTP/1.1" 200 185 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/news?limit=5 HTTP/1.1" 200 184 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/news HTTP/1.1" 200 185 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities HTTP/1.1" 200 415 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/categories HTTP/1.1" 200 1344 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/prices HTTP/1.1" 200 1372 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/market-summary HTTP/1.1" 200 517 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/correlations HTTP/1.1" 200 1202 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/market-summary HTTP/1.1" 200 517 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/prices?limit=-1 HTTP/1.1" 200 1173 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/prices?limit=abc HTTP/1.1" 200 1372 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/prices?category=invalid-category HTTP/1.1" 200 188 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/prices?timeframe=invalid-timeframe HTTP/1.1" 200 1372 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/prices HTTP/1.1" 200 1372 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/prices?limit=1000 HTTP/1.1" 200 1372 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities HTTP/1.1" 200 415 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/categories HTTP/1.1" 200 1344 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/prices HTTP/1.1" 200 1372 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/market-summary HTTP/1.1" 200 517 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/correlations HTTP/1.1" 200 1202 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/news HTTP/1.1" 200 185 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/prices HTTP/1.1" 200 1372 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/prices?category=%27%3B%20DROP%20TABLE%20commodities%3B%20-- HTTP/1.1" 200 201 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/prices?category=1%27%20OR%20%271%27%3D%271 HTTP/1.1" 200 184 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/prices?category=UNION%20SELECT%20*%20FROM%20users HTTP/1.1" 200 197 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:31 +0000] "GET /api/commodities/prices?category=%3Cscript%3Ealert(%27xss%27)%3C%2Fscript%3E HTTP/1.1" 200 201 "-" "-"
PASS tests/integration/routes/commodities.integration.test.js
  Commodities Routes Integration Tests
    GET /api/commodities (Root Endpoint)
      ✓ should return commodities system information (4 ms)
      ✓ should include expected endpoint information (6 ms)
    GET /api/commodities/health (Health Check)
      ✓ should return health status (1 ms)
    GET /api/commodities/categories (Commodity Categories)
      ✓ should return commodity categories (2 ms)
      ✓ should validate category performance data (1 ms)
      ✓ should include major commodity categories (2 ms)
    GET /api/commodities/prices (Current Prices)
      ✓ should return current commodity prices (1 ms)
      ✓ should handle limit parameter (2 ms)
      ✓ should handle category filter (6 ms)
    GET /api/commodities/market-summary (Market Summary)
      ✓ should return market summary data (1 ms)
      ✓ should validate market overview structure (1 ms)
      ✓ should validate top gainers and losers (2 ms)
    GET /api/commodities/correlations (Price Correlations)
      ✓ should return correlation analysis (1 ms)
      ✓ should handle timeframe parameter (7 ms)
      ✓ should validate correlation strength classifications (1 ms)
    GET /api/commodities/news (Commodity News)
      ✓ should return commodity-related news (1 ms)
      ✓ should handle category filter for news (4 ms)
      ✓ should handle limit parameter for news (2 ms)
      ✓ should validate news article timestamps (1 ms)
    Performance and Edge Cases
      ✓ should handle concurrent requests to commodity endpoints (8 ms)
      ✓ should maintain response time consistency (1 ms)
      ✓ should handle invalid parameters gracefully (5 ms)
      ✓ should validate numeric data integrity (2 ms)
      ✓ should handle memory pressure with large data requests (2 ms)
      ✓ should validate response content types (9 ms)
      ✓ should handle database connection issues gracefully (1 ms)
      ✓ should handle SQL injection attempts safely (6 ms)

  console.log
    📋 All alerts requested for user: dev-user-bypass, status: all

      at log (routes/alerts.js:309:13)

  console.log
    🔔 Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:39:13)

  console.log
    🔔 Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:39:13)

  console.log
    🔔 Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:39:13)

  console.log
    🔔 Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:39:13)

  console.log
    🔔 Active alerts requested for user: dev-user-bypass, status: triggered

      at log (routes/alerts.js:39:13)

  console.log
    📍 Alert distance requested for AAPL by user: dev-user-bypass

      at log (routes/alerts.js:1071:13)

  console.log
    📍 Alert distance requested for INVALID by user: dev-user-bypass

      at log (routes/alerts.js:1071:13)

  console.log
    🔔 Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:39:13)

  console.log
    🙈 Alert dismiss requested for 1 by user: dev-user-bypass

      at log (routes/alerts.js:1111:13)

  console.log
    🙈 Alert dismiss requested for invalid-id by user: dev-user-bypass

      at log (routes/alerts.js:1111:13)

  console.log
    🆕 New alert creation requested by user: dev-user-bypass for AAPL

      at log (routes/alerts.js:484:13)

  console.log
    💰 Price alerts requested for AAPL by user: dev-user-bypass, status: all

      at log (routes/alerts.js:1152:13)

  console.log
    💰 Price alerts requested for AAPL by user: dev-user-bypass, status: active

      at log (routes/alerts.js:1152:13)

  console.log
    🗑️ Deleting alert 1 for user: dev-user-bypass

      at log (routes/alerts.js:2388:13)

  console.log
    🗑️ Deleting alert 99999 for user: dev-user-bypass

      at log (routes/alerts.js:2388:13)

  console.log
    📋 Alert history requested for user: dev-user-bypass

      at log (routes/alerts.js:1282:13)

  console.log
    📋 Alert history requested for user: dev-user-bypass

      at log (routes/alerts.js:1282:13)

  console.log
    📋 Alert history requested for user: dev-user-bypass

      at log (routes/alerts.js:1282:13)

  console.log
    ⚙️ Alert settings requested for user: dev-user-bypass

      at log (routes/alerts.js:805:13)

  console.log
    No user-specific alert settings found, returning defaults

      at log (routes/alerts.js:827:15)

  console.log
    🔧 Alert settings update requested for user: dev-user-bypass

      at log (routes/alerts.js:1219:13)

  console.log
    🔧 Alert settings update requested for user: dev-user-bypass

      at log (routes/alerts.js:1219:13)

  console.log
    🔔 Active alerts requested for user: dev-user-bypass, status: active

      at log (routes/alerts.js:39:13)

  console.log
    💰 Price alerts requested for INVALID_SYMBOL_123! by user: dev-user-bypass, status: all

      at log (routes/alerts.js:1152:13)

PASS tests/unit/routes/alerts.test.js
  Alerts Routes Unit Tests
    GET /alerts/
      ✓ should return alerts info (4 ms)
    GET /alerts/active
      ✓ should return active alerts with proper structure (3 ms)
      ✓ should handle limit parameter (3 ms)
      ✓ should handle offset parameter (2 ms)
      ✓ should handle priority filter (3 ms)
      ✓ should handle status filter (5 ms)
    GET /alerts/distance/:symbol
      ✓ should return distance-based alert analysis (4 ms)
      ✓ should handle invalid symbol (2 ms)
    PUT /alerts/:id/dismiss
      ✓ should handle alert dismissal (4 ms)
      ✓ should handle invalid alert ID format (2 ms)
    POST /alerts/
      ✓ should handle alert creation (3 ms)
    POST /alerts/price
      ✓ should create price alert with valid data (1 ms)
      ✓ should validate required fields (13 ms)
      ✓ should handle duplicate price alerts (2 ms)
    GET /alerts/price/:symbol
      ✓ should return price alerts for symbol (3 ms)
      ✓ should filter alerts by status (3 ms)
    POST /alerts/volume
      ✓ should create volume alert (1 ms)
      ✓ should validate threshold multiplier range (2 ms)
    GET /alerts/volume/analysis/:symbol
      ✓ should return volume analysis for symbol (1 ms)
      ✓ should include historical volume data (1 ms)
    POST /alerts/technical
      ✓ should create RSI alert (1 ms)
      ✓ should create MACD alert (4 ms)
      ✓ should validate supported indicators (1 ms)
    GET /alerts/technical/status/:symbol
      ✓ should return technical alert status (2 ms)
      ✓ should filter by indicator type (1 ms)
    POST /alerts/news
      ✓ should create news sentiment alert (2 ms)
      ✓ should validate news sources (1 ms)
    GET /alerts/news/recent/:symbol
      ✓ should return recent news alerts (1 ms)
      ✓ should filter by time period (2 ms)
    POST /alerts/portfolio
      ✓ should create portfolio-wide alert (1 ms)
      ✓ should create sector concentration alert (1 ms)
    GET /alerts/portfolio/status
      ✓ should return portfolio alert status (1 ms)
      ✓ should include triggered alerts summary (1 ms)
    PUT /alerts/:id/update
      ✓ should update alert settings (1 ms)
      ✓ should validate update data (1 ms)
    DELETE /alerts/:id
      ✓ should delete alert (2 ms)
      ✓ should handle non-existent alert deletion (2 ms)
    POST /alerts/bulk/dismiss
      ✓ should dismiss multiple alerts (1 ms)
      ✓ should validate alert IDs array (1 ms)
    GET /alerts/history
      ✓ should return alert history with pagination (2 ms)
      ✓ should filter history by date range (2 ms)
      ✓ should filter by alert type (2 ms)
    GET /alerts/history/performance
      ✓ should return alert performance analytics (5 ms)
      ✓ should break down performance by alert type (2 ms)
    GET /alerts/settings
      ✓ should return user alert settings (3 ms)
    PUT /alerts/settings
      ✓ should update alert settings (2 ms)
      ✓ should validate settings data (2 ms)
    Error Handling
      ✓ should handle database connection errors (3 ms)
      ✓ should handle missing authentication (1 ms)
      ✓ should handle malformed request data (1 ms)
      ✓ should handle invalid symbol format (2 ms)
      ✓ should handle rate limiting for alert creation (4 ms)

  console.log
    📈 Performance analytics requested for user: dev-user-bypass, period: 1m

      at log (routes/analytics.js:174:13)

  console.log
    Using database config from environment variables

      at log (utils/database.js:182:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:220:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:271:15)

  console.error
    Database query error: {
      error: 'relation "portfolio_holdings" does not exist',
      query: 'SELECT symbol, quantity as shares,\n' +
        '                COALESCE(average_cost, 0) as avg_cost,\n' +
        '          ...',
      params: '1 parameters',
      code: '42P01'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at routes/analytics.js:182:30

  console.warn
    Database query error (returning null for tests): relation "portfolio_holdings" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at routes/analytics.js:182:30

  console.warn
    Holdings query returned null - using mock data

      192 |
      193 |       if (!holdingsResult) {
    > 194 |         console.warn("Holdings query returned null - using mock data");
          |                 ^
      195 |         portfolioHoldings = [];
      196 |       } else {
      197 |         portfolioHoldings = holdingsResult.rows || [];

      at warn (routes/analytics.js:194:17)

  console.log
    ⚠️ Risk analytics requested for user: dev-user-bypass, timeframe: 1m

      at log (routes/analytics.js:445:13)

  console.error
    Database query error: {
      error: 'relation "portfolio_holdings" does not exist',
      query: '\n' +
        '        SELECT\n' +
        '          h.symbol, h.quantity, h.current_price, COALESCE(h.average_cost, 0) as aver...',
      params: '1 parameters',
      code: '42P01'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at routes/analytics.js:485:24

  console.warn
    Database query error (returning null for tests): relation "portfolio_holdings" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at routes/analytics.js:485:24

  console.log
    📊 Asset allocation analytics requested for user: dev-user-bypass, period: current

      at log (routes/analytics.js:836:13)

  console.error
    Database query error: {
      error: 'relation "portfolio_holdings" does not exist',
      query: '\n' +
        '        SELECT\n' +
        '          h.symbol, h.quantity, h.current_price, COALESCE(h.average_cost, 0) as aver...',
      params: '1 parameters',
      code: '42P01'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at routes/analytics.js:843:24

  console.warn
    Database query error (returning null for tests): relation "portfolio_holdings" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at routes/analytics.js:843:24

  console.log
    📈 Returns analytics requested for user: dev-user-bypass, period: 1m

      at log (routes/analytics.js:970:13)

  console.error
    Database query error: {
      error: 'relation "portfolio_holdings" does not exist',
      query: '\n' +
        '      SELECT \n' +
        '        h.symbol, h.quantity, h.current_price, COALESCE(h.average_cost, 0),\n' +
        '        h...',
      params: '1 parameters',
      code: '42P01'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at routes/analytics.js:990:28

  console.warn
    Database query error (returning null for tests): relation "portfolio_holdings" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at routes/analytics.js:990:28

  console.error
    Returns analytics error: TypeError: Cannot read properties of null (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/analytics.js:1011:41)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)

      1049 |     });
      1050 |   } catch (error) {
    > 1051 |     console.error("Returns analytics error:", error);
           |             ^
      1052 |     res.status(500).json({
      1053 |       success: false,
      1054 |       error: "Failed to fetch returns analytics",

      at error (routes/analytics.js:1051:13)

  console.log
    🏭 Public sectors analytics requested

      at log (routes/analytics.js:1072:13)

  console.error
    Database query error: {
      error: 'column cp.symbol does not exist',
      query: '\n' +
        '      SELECT\n' +
        '        cp.sector,\n' +
        '        COUNT(DISTINCT cp.symbol) as stock_count,\n' +
        '        AVG(COALE...',
      params: 'no parameters',
      code: '42703'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at routes/analytics.js:1075:27

  console.warn
    Database query error (returning null for tests): column cp.symbol does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at routes/analytics.js:1075:27

  console.error
    Sectors analytics error: TypeError: Cannot read properties of null (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/analytics.js:1099:35)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)

      1121 |     });
      1122 |   } catch (error) {
    > 1123 |     console.error("Sectors analytics error:", error);
           |             ^
      1124 |     res.status(500).json({
      1125 |       success: false,
      1126 |       error: "Failed to fetch sectors analytics",

      at error (routes/analytics.js:1123:13)

  console.log
    📊 Volatility analytics requested for user: dev-user-bypass, period: 1m

      at log (routes/analytics.js:1147:13)

  console.log
    📈 Trends analytics requested for user: dev-user-bypass, period: 1m

      at log (routes/analytics.js:1257:13)

  console.log
    🔬 Custom analytics requested for user: dev-user-bypass, type: undefined

      at log (routes/analytics.js:1369:13)

PASS tests/unit/routes/analytics.test.js
  Analytics Routes Unit Tests
    GET /analytics/
      ✓ should return analytics info (6 ms)
    GET /analytics/performance
      ✓ should handle performance analytics (16 ms)
    GET /analytics/risk
      ✓ should handle risk analytics (16 ms)
    GET /analytics/correlation
      ✓ should handle correlation analysis (4 ms)
    GET /analytics/allocation
      ✓ should handle allocation analytics (12 ms)
    GET /analytics/returns
      ✓ should handle returns analytics (26 ms)
    GET /analytics/sectors
      ✓ should handle sectors analytics (12 ms)
    GET /analytics/volatility
      ✓ should handle volatility analytics (13 ms)
    GET /analytics/trends
      ✓ should handle trends analytics (3 ms)
    POST /analytics/custom
      ✓ should handle custom analytics request (4 ms)

  console.log
    🚨 Alert created: [WARNING] Test Alert

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    ⚙️ Alert configuration updated

      at AlertSystem.log [as updateConfig] (utils/alertSystem.js:897:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🧪 Test notifications sent

      at AlertSystem.log [as testNotifications] (utils/alertSystem.js:949:13)

  console.log
    🚨 Alert created: [WARNING] Test Alert for Resolution

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    ✅ Alert resolved: Test Alert for Resolution

      at AlertSystem.log [as resolveAlert] (utils/alertSystem.js:424:13)

  console.log
    🔍 Forcing health check...

      at AlertSystem.log [as forceHealthCheck] (utils/alertSystem.js:929:13)

  console.log
    🚨 Alert created: [INFO] Memory Test Alert 0

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [INFO] Memory Test Alert 1

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [INFO] Memory Test Alert 2

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [INFO] Memory Test Alert 3

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [INFO] Memory Test Alert 4

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [INFO] Memory Test Alert 5

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [INFO] Memory Test Alert 6

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [INFO] Memory Test Alert 7

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [INFO] Memory Test Alert 8

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [INFO] Memory Test Alert 9

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [UNKNOWN] Untitled

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [UNKNOWN] Untitled

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [UNKNOWN] Untitled

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    ⚙️ Alert configuration updated

      at AlertSystem.log [as updateConfig] (utils/alertSystem.js:897:13)

  console.log
    ⚙️ Alert configuration updated

      at AlertSystem.log [as updateConfig] (utils/alertSystem.js:897:13)

  console.log
    🚨 Alert created: [INFO] Event Test Alert

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

PASS tests/integration/utils/alertSystem.test.js
  Alert System Integration Tests
    Alert Processing and Basic Functionality
      ✓ should create alerts with proper method signature (5 ms)
      ✓ should handle alert system configuration (1 ms)
      ✓ should handle monitoring lifecycle (3 ms)
      ✓ should perform health checks
      ✓ should handle alert status retrieval
      ✓ should handle notification testing
      ✓ should cleanup resolved alerts (1 ms)
      ✓ should resolve alerts properly
      ✓ should handle forced health checks
      ✓ should maintain memory usage under control (4 ms)
    Alert System Error Handling
      ✓ should handle invalid alert parameters gracefully (1 ms)
      ✓ should handle missing configuration gracefully (1 ms)
    Alert System Integration Points
      ✓ should integrate with event system if available (101 ms)

  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:32 +0000] "GET /api/health HTTP/1.1" 200 466 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:32 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:32 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    Calendar events endpoint called with params: {}

      at log (routes/calendar.js:380:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:32 +0000] "GET /api/calendar/events HTTP/1.1" 200 223 "-" "-"
  console.error
    Error fetching earnings estimates: TypeError: Cannot read properties of undefined (reading 'total')
        at total (/home/stocks/algo/webapp/lambda/routes/calendar.js:641:48)

      686 |     });
      687 |   } catch (error) {
    > 688 |     console.error("Error fetching earnings estimates:", error);
          |             ^
      689 |     console.error("Error details:", error.message);
      690 |     console.error("Error stack:", error.stack);
      691 |     return res

      at error (routes/calendar.js:688:13)

  console.error
    Error details: Cannot read properties of undefined (reading 'total')

      687 |   } catch (error) {
      688 |     console.error("Error fetching earnings estimates:", error);
    > 689 |     console.error("Error details:", error.message);
          |             ^
      690 |     console.error("Error stack:", error.stack);
      691 |     return res
      692 |       .status(500)

      at error (routes/calendar.js:689:13)

  console.error
    Error stack: TypeError: Cannot read properties of undefined (reading 'total')
        at total (/home/stocks/algo/webapp/lambda/routes/calendar.js:641:48)

      688 |     console.error("Error fetching earnings estimates:", error);
      689 |     console.error("Error details:", error.message);
    > 690 |     console.error("Error stack:", error.stack);
          |             ^
      691 |     return res
      692 |       .status(500)
      693 |       .json({

      at error (routes/calendar.js:690:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:32 +0000] "GET /api/calendar/earnings-estimates HTTP/1.1" 500 128 "-" "-"
  console.error
    Error fetching earnings history: TypeError: Cannot read properties of undefined (reading 'total')
        at total (/home/stocks/algo/webapp/lambda/routes/calendar.js:754:48)

      802 |     });
      803 |   } catch (error) {
    > 804 |     console.error("Error fetching earnings history:", error);
          |             ^
      805 |     return res
      806 |       .status(500)
      807 |       .json({ success: false, error: "Failed to fetch earnings history" });

      at error (routes/calendar.js:804:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:32 +0000] "GET /api/calendar/earnings-history HTTP/1.1" 500 60 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:32 +0000] "GET /api/nonexistent HTTP/1.1" 404 121 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:32 +0000] "GET /api/portfolio/nonexistent HTTP/1.1" 404 131 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:32 +0000] "POST /api/portfolio/analyze HTTP/1.1" 501 273 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:32 +0000] "GET /api/health HTTP/1.1" 200 466 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:32 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:32 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:32 +0000] "GET /api/nonexistent HTTP/1.1" 404 121 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:32 +0000] "GET /api/health HTTP/1.1" 200 466 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:32 +0000] "POST /api/health HTTP/1.1" 404 116 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:32 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:32 +0000] "POST /api/calendar/earnings HTTP/1.1" 404 127 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:32 +0000] "GET /api/health HTTP/1.1" 200 466 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:32 +0000] "GET /api/health HTTP/1.1" 200 466 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:32 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:32 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:32 +0000] "GET /api/calendar/earnings?symbol=NONEXISTENT&start_date=2050-01-01&end_date=2050-01-02 HTTP/1.1" 200 259 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:32 +0000] "GET /api/health HTTP/1.1" 200 466 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:32 +0000] "GET /api/health HTTP/1.1" 200 466 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:32 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:32 +0000] "GET /api/calendar/health HTTP/1.1" 200 157 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 1ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:32 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Test database error: Cannot read properties of undefined (reading 'status')

      at log (routes/health.js:127:19)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:32 +0000] "GET /api/health HTTP/1.1" 200 466 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:32 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:32 +0000] "GET /api/portfolio HTTP/1.1" 200 577 "-" "-"
  console.log
    🔔 Active alerts requested for user: test-user-123, status: active

      at log (routes/alerts.js:39:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:32 +0000] "GET /api/alerts/active HTTP/1.1" 200 501 "-" "-"
  console.log
    🔔 Active alerts requested for user: test-user-123, status: active

      at log (routes/alerts.js:39:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:32 +0000] "GET /api/alerts/active HTTP/1.1" 200 501 "-" "-"
PASS tests/integration/middleware/responseFormatter-middleware.integration.test.js
  Response Formatter Middleware Integration
    Success Response Formatting
      ✓ should format successful responses consistently (12 ms)
      ✓ should format paginated responses consistently (16 ms)
    Error Response Formatting
      ✓ should format error responses with consistent structure (4 ms)
      ✓ should format validation error responses consistently (3 ms)
    Content-Type Header Consistency
      ✓ should set JSON content-type for all API responses (6 ms)
      ✓ should maintain content-type consistency across HTTP methods (6 ms)
    Response Header Standards
      ✓ should include standard security headers (2 ms)
      ✓ should handle CORS headers appropriately (6 ms)
    Response Data Formatting
      ✓ should format nested data structures consistently (1 ms)
      ✓ should handle empty data responses consistently (2 ms)
    Response Timing and Performance Headers
      ✓ should include performance-related headers when available (2 ms)
      ✓ should maintain response time consistency (3 ms)
    Cross-Route Response Consistency
      ✓ should maintain consistent response structure across route families (7 ms)
      ✓ should format authentication-related responses consistently (8 ms)

  console.log
    💰 Dividend history requested for AAPL

      at log (routes/dividend.js:749:13)

  console.log
    💰 Dividend history requested for AAPL

      at log (routes/dividend.js:749:13)

  console.log
    💰 Dividend history requested for BRK.B

      at log (routes/dividend.js:749:13)

  console.log
    💰 Dividend history requested for AAPL

      at log (routes/dividend.js:749:13)

  console.error
    Dividend history error: Error: Console error
        at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:122:15)
        at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
        at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
        at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
        at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:749:13)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
        at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
        at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:365:14)
        at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:376:14)
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:421:3)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
        at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
        at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
        at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
        at Server.emit (node:events:524:28)
        at parserOnIncoming (node:_http_server:1141:12)
        at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      805 |     });
      806 |   } catch (error) {
    > 807 |     console.error("Dividend history error:", error);
          |             ^
      808 |     res.status(500).json({
      809 |       success: false,
      810 |       error: "Failed to fetch dividend history",

      at error (routes/dividend.js:807:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

  console.log
    💰 Dividends calendar requested - symbol: all, days_ahead: 30, days: 30, limit: 50, min_yield: 0

      at log (routes/dividend.js:40:11)

  console.log
    💰 Dividends calendar requested - symbol: all, days_ahead: 30, days: 30, limit: 50, min_yield: 0

      at log (routes/dividend.js:40:11)

  console.log
    💰 Dividends calendar requested - symbol: all, days_ahead: 30, days: 30, limit: 50, min_yield: 0

      at log (routes/dividend.js:40:11)

  console.error
    Dividend calendar error: Error: Database connection failed
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:167:35)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      256 |     });
      257 |   } catch (error) {
    > 258 |     console.error("Dividend calendar error:", error);
          |             ^
      259 |     res.status(500).json({
      260 |       success: false,
      261 |       error: "Failed to fetch dividend calendar",

      at error (routes/dividend.js:258:13)

  console.log
    💰 Dividends calendar requested - symbol: all, days_ahead: 30, days: 7, limit: 25, min_yield: 2.0

      at log (routes/dividend.js:40:11)

  console.log
    💰 Dividends calendar requested - symbol: all, days_ahead: 30, days: 30, limit: 50, min_yield: 0

      at log (routes/dividend.js:40:11)

  console.log
    💰 Dividends calendar requested - symbol: all, days_ahead: 30, days: 30, limit: 50, min_yield: 0

      at log (routes/dividend.js:40:11)

  console.log
    💰 Dividends calendar requested - symbol: all, days_ahead: 30, days: 30, limit: 50, min_yield: 0

      at log (routes/dividend.js:40:11)

  console.log
    💰 Dividends calendar requested - symbol: all, days_ahead: 30, days: 30, limit: 50, min_yield: 0

      at log (routes/dividend.js:40:11)

  console.log
    💰 Dividends calendar requested - symbol: all, days_ahead: 30, days: 30, limit: 50, min_yield: 0

      at log (routes/dividend.js:40:11)

  console.log
    💰 Dividends calendar requested - symbol: all, days_ahead: 30, days: 30, limit: 50, min_yield: 0

      at log (routes/dividend.js:40:11)

  console.log
    💰 Dividends calendar requested - symbol: all, days_ahead: invalid_number, days: 30, limit: 50, min_yield: 0

      at log (routes/dividend.js:40:11)

  console.log
    💰 Dividends calendar requested - symbol: all, days_ahead: 30, days: 99999, limit: 99999, min_yield: -100

      at log (routes/dividend.js:40:11)

  console.log
    💰 Dividends calendar requested - symbol: all, days_ahead: 30, days: invalid, limit: abc, min_yield: xyz

      at log (routes/dividend.js:40:11)

  console.log
    💰 Dividends calendar requested - symbol: all, days_ahead: 30, days: , limit: , min_yield: 0

      at log (routes/dividend.js:40:11)

  console.log
    💰 Dividends calendar requested - symbol: all, days_ahead: 30, days: 30, limit: 50, min_yield: 0

      at log (routes/dividend.js:40:11)

  console.log
    💰 Dividends calendar requested - symbol: all, days_ahead: 30, days: 30, limit: 50, min_yield: 0

      at log (routes/dividend.js:40:11)

  console.log
    💰 Dividend history requested for STOCK0

      at log (routes/dividend.js:749:13)

  console.log
    💰 Dividend history requested for STOCK1

      at log (routes/dividend.js:749:13)

  console.log
    💰 Dividend history requested for STOCK2

      at log (routes/dividend.js:749:13)

  console.log
    💰 Dividend history requested for STOCK3

      at log (routes/dividend.js:749:13)

  console.log
    💰 Dividend history requested for STOCK4

      at log (routes/dividend.js:749:13)

  console.log
    💰 Dividend history requested for STOCK5

      at log (routes/dividend.js:749:13)

  console.log
    💰 Dividend history requested for STOCK6

      at log (routes/dividend.js:749:13)

  console.log
    💰 Dividend history requested for STOCK7

      at log (routes/dividend.js:749:13)

  console.log
    💰 Dividend history requested for STOCK8

      at log (routes/dividend.js:749:13)

  console.log
    💰 Dividend history requested for STOCK9

      at log (routes/dividend.js:749:13)

  console.log
    💰 Dividends calendar requested - symbol: all, days_ahead: 30, days: 30, limit: 50, min_yield: 0

      at log (routes/dividend.js:40:11)

  console.log
    💰 Dividend history requested for AAPL

      at log (routes/dividend.js:749:13)

  console.log
    💰 Dividend history requested for AAPL

      at log (routes/dividend.js:749:13)

  console.error
    Dividend history error: Error: Test error
        at console.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/dividend.test.js:423:15)
        at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
        at console.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)
        at console.mockConstructor [as log] (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
        at log (/home/stocks/algo/webapp/lambda/routes/dividend.js:749:13)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
        at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
        at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:365:14)
        at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:376:14)
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:421:3)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
        at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
        at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
        at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
        at Server.emit (node:events:524:28)
        at parserOnIncoming (node:_http_server:1141:12)
        at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      805 |     });
      806 |   } catch (error) {
    > 807 |     console.error("Dividend history error:", error);
          |             ^
      808 |     res.status(500).json({
      809 |       success: false,
      810 |       error: "Failed to fetch dividend history",

      at error (routes/dividend.js:807:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

  console.log
    💰 Dividends calendar requested - symbol: all, days_ahead: 30, days: 30, limit: 50, min_yield: 0

      at log (routes/dividend.js:40:11)

PASS tests/unit/routes/dividend.test.js
  Dividend Route - Comprehensive Unit Tests
    GET /api/dividend/history/:symbol
      ✓ should return dividend history for valid symbol (14 ms)
      ✓ should handle case insensitive symbols (2 ms)
      ✓ should handle special characters in symbol (2 ms)
      ✓ should handle query parameters gracefully (2 ms)
      ✓ should handle errors in dividend history gracefully (7 ms)
    GET /api/dividend/calendar
      ✓ should get dividend calendar with valid database data (4 ms)
      ✓ should handle empty database results and generate sample data (2 ms)
      ✓ should handle database connection failures gracefully (6 ms)
      ✓ should handle query parameters correctly (3 ms)
      ✓ should handle sorting options correctly (2 ms)
      ✓ should handle invalid sorting options with fallback (2 ms)
      ✓ should calculate dividend statistics correctly (2 ms)
      ✓ should handle null database results gracefully (2 ms)
      ✓ should handle malformed database results (1 ms)
      ✓ should handle string dividend amounts and yields correctly (1 ms)
      ✓ should handle error in dividend calendar (1 ms)
    Edge Cases and Error Handling
      ✓ should handle very long symbol names (1 ms)
      ✓ should handle symbols with special characters (2 ms)
      ✓ should handle extreme query parameters gracefully (1 ms)
      ✓ should handle non-numeric parameters correctly (3 ms)
      ✓ should handle empty query parameters (2 ms)
      ✓ should handle database timeout errors (5 ms)
      ✓ should handle SQL injection attempts safely (2 ms)
    Performance Testing
      ✓ should handle concurrent requests efficiently (17 ms)
      ✓ should handle large dividend datasets efficiently (10 ms)
    Response Format Validation
      ✓ should return consistent JSON response format (10 ms)
      ✓ should include timestamp in ISO format (2 ms)
      ✓ should maintain consistent error response format (4 ms)
      ✓ should include proper metadata in calendar responses (2 ms)

  console.log
    📋 Orders endpoint called for user: dev-user-bypass

      at log (routes/orders.js:92:11)

  console.log
    Using database config from environment variables

      at log (utils/database.js:182:15)

  console.log
    Database config loaded from environment: localhost:5432/stocks

      at log (utils/database.js:220:15)

  console.log
    ✅ Database connection pool initialized successfully

      at log (utils/database.js:271:15)

  console.error
    Database query error: {
      error: 'relation "user_dashboard_settings" does not exist',
      query: 'SELECT trading_preferences FROM user_dashboard_settings WHERE user_id = $1',
      params: '1 parameters',
      code: '42P01'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at getUserTradingMode (utils/tradingModeHelper.js:33:20)
      at validateTradingOperation (utils/tradingModeHelper.js:101:23)
      at routes/orders.js:102:24

  console.warn
    Database query error (returning null for tests): relation "user_dashboard_settings" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at getUserTradingMode (utils/tradingModeHelper.js:33:20)
      at validateTradingOperation (utils/tradingModeHelper.js:101:23)
      at routes/orders.js:102:24

  console.log
    Trading mode check failed, defaulting to paper: Cannot read properties of null (reading 'rows')

      at log (utils/tradingModeHelper.js:52:13)

  console.error
    Database query error: {
      error: 'relation "user_dashboard_settings" does not exist',
      query: 'SELECT trading_preferences FROM user_dashboard_settings WHERE user_id = $1',
      params: '1 parameters',
      code: '42P01'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at getUserTradingMode (utils/tradingModeHelper.js:33:20)
      at getTradingModeTable (utils/tradingModeHelper.js:185:23)
      at routes/orders.js:112:36

  console.warn
    Database query error (returning null for tests): relation "user_dashboard_settings" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at getUserTradingMode (utils/tradingModeHelper.js:33:20)
      at getTradingModeTable (utils/tradingModeHelper.js:185:23)
      at routes/orders.js:112:36

  console.log
    Trading mode check failed, defaulting to paper: Cannot read properties of null (reading 'rows')

      at log (utils/tradingModeHelper.js:52:13)

  console.log
    Executing orders query with timeout protection

      at log (routes/orders.js:170:15)

  console.error
    Database query error: {
      error: 'relation "orders" does not exist',
      query: '\n' +
        '      SELECT\n' +
        '        id as order_id,\n' +
        '        symbol,\n' +
        '        side,\n' +
        '        quantity,\n' +
        '        order_...',
      params: '3 parameters',
      code: '42P01'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at routes/orders.js:178:16

  console.warn
    Database query error (returning null for tests): relation "orders" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at routes/orders.js:178:16

  console.error
    Database query error: {
      error: 'relation "orders" does not exist',
      query: 'SELECT COUNT(*) FROM orders WHERE user_id = $1',
      params: '1 parameters',
      code: '42P01'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at routes/orders.js:187:27

  console.warn
    Database query error (returning null for tests): relation "orders" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at routes/orders.js:187:27

  console.error
    Database query error: {
      error: 'relation "user_dashboard_settings" does not exist',
      query: 'SELECT trading_preferences FROM user_dashboard_settings WHERE user_id = $1',
      params: '1 parameters',
      code: '42P01'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at getUserTradingMode (utils/tradingModeHelper.js:33:20)
      at addTradingModeContext (utils/tradingModeHelper.js:74:23)
      at routes/orders.js:220:26

  console.warn
    Database query error (returning null for tests): relation "user_dashboard_settings" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at getUserTradingMode (utils/tradingModeHelper.js:33:20)
      at addTradingModeContext (utils/tradingModeHelper.js:74:23)
      at routes/orders.js:220:26

  console.log
    Trading mode check failed, defaulting to paper: Cannot read properties of null (reading 'rows')

      at log (utils/tradingModeHelper.js:52:13)

  console.log
    📝 New order submission for user: dev-user-bypass, symbol: AAPL, side: buy

      at log (routes/orders.js:429:11)

  console.error
    Database query error: {
      error: 'relation "user_dashboard_settings" does not exist',
      query: 'SELECT trading_preferences FROM user_dashboard_settings WHERE user_id = $1',
      params: '1 parameters',
      code: '42P01'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at getUserTradingMode (utils/tradingModeHelper.js:33:20)
      at validateTradingOperation (utils/tradingModeHelper.js:101:23)
      at routes/orders.js:444:31

  console.warn
    Database query error (returning null for tests): relation "user_dashboard_settings" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at getUserTradingMode (utils/tradingModeHelper.js:33:20)
      at validateTradingOperation (utils/tradingModeHelper.js:101:23)
      at routes/orders.js:444:31

  console.log
    Trading mode check failed, defaulting to paper: Cannot read properties of null (reading 'rows')

      at log (utils/tradingModeHelper.js:52:13)

  console.error
    Database query error: {
      error: 'relation "user_api_keys" does not exist',
      query: '\n' +
        '      SELECT broker_name, encrypted_api_key, encrypted_api_secret, \n' +
        '             key_iv, key_auth_t...',
      params: '1 parameters',
      code: '42P01'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at routes/orders.js:495:26

  console.warn
    Database query error (returning null for tests): relation "user_api_keys" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at routes/orders.js:495:26

  console.error
    Database query error: {
      error: 'relation "orders" does not exist',
      query: '\n' +
        '      INSERT INTO orders (\n' +
        '        user_id, symbol, side, quantity, order_type,\n' +
        '        limit_price...',
      params: '16 parameters',
      code: '42P01'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at routes/orders.js:517:26

  console.warn
    Database query error (returning null for tests): relation "orders" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at routes/orders.js:517:26

  console.error
    Database query error: {
      error: 'relation "order_activities" does not exist',
      query: '\n' +
        '      INSERT INTO order_activities (user_id, order_id, activity_type, description, created_at)\n' +
        '    ...',
      params: '5 parameters',
      code: '42P01'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at logOrderActivity (routes/orders.js:1342:5)
      at routes/orders.js:560:5

  console.warn
    Database query error (returning null for tests): relation "order_activities" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at logOrderActivity (routes/orders.js:1342:5)
      at routes/orders.js:560:5

  console.error
    Database query error: {
      error: 'relation "user_dashboard_settings" does not exist',
      query: 'SELECT trading_preferences FROM user_dashboard_settings WHERE user_id = $1',
      params: '1 parameters',
      code: '42P01'
    }

      421 |     return result;
      422 |   } catch (error) {
    > 423 |     console.error("Database query error:", {
          |             ^
      424 |       error: error.message,
      425 |       query: typeof text === 'string' ? text.slice(0, 100) + (text.length > 100 ? "..." : "") : JSON.stringify(text).slice(0, 100) + "...",
      426 |       params: params?.length ? `${params.length} parameters` : "no parameters",

      at error (utils/database.js:423:13)
      at getUserTradingMode (utils/tradingModeHelper.js:33:20)
      at addTradingModeContext (utils/tradingModeHelper.js:74:23)
      at routes/orders.js:586:26

  console.warn
    Database query error (returning null for tests): relation "user_dashboard_settings" does not exist

      448 |       error.code === "42P01" // undefined_table
      449 |     ) {
    > 450 |       console.warn("Database query error (returning null for tests):", error.message);
          |               ^
      451 |       return null;
      452 |     }
      453 |

      at warn (utils/database.js:450:15)
      at getUserTradingMode (utils/tradingModeHelper.js:33:20)
      at addTradingModeContext (utils/tradingModeHelper.js:74:23)
      at routes/orders.js:586:26

  console.log
    Trading mode check failed, defaulting to paper: Cannot read properties of null (reading 'rows')

      at log (utils/tradingModeHelper.js:52:13)

  console.log
    Order details request for user: dev-user-bypass, order: test-order-123

      at log (routes/orders.js:1767:11)

PASS tests/unit/routes/orders.test.js
  Orders Routes Unit Tests
    GET /orders/
      ✓ should handle user orders request (59 ms)
    POST /orders/
      ✓ should handle order creation (49 ms)
    GET /orders/:orderId
      ✓ should handle specific order request (3 ms)

  console.log
    Stocks main endpoint called with params: {}

      at log (routes/stocks.js:848:13)

  console.log
    Triggering workflow deploy

      at log (routes/stocks.js:849:13)

  console.log
    Query params: { whereClause: 'WHERE 1=1', params: [], limit: 50, offset: 0 }

      at log (routes/stocks.js:904:13)

  console.log
    Executing FAST queries with schema validation...

      at log (routes/stocks.js:994:13)

  console.log
    Executing comprehensive stocks query with timeout protection...

      at log (routes/stocks.js:997:13)

  console.log
    FAST query results: 2 stocks, 2 estimated total

      at log (routes/stocks.js:1041:13)

  console.log
    🔍 Stock search requested for: AAPL

      at log (routes/stocks.js:1745:13)

  console.log
    📋 Stock list endpoint called

      at log (routes/stocks.js:345:13)

  console.warn
    Query returned invalid result: { rows: [] }

      20 |     const result = await query(tableCheckQuery, [tableName]);
      21 |     if (!result || !result.rows || result.rows.length === 0) {
    > 22 |       console.warn('Query returned invalid result:', result);
         |               ^
      23 |       return null;
      24 |     }
      25 |     return result.rows[0].exists;

      at warn (utils/routeHelpers.js:22:15)
      at routes/stocks.js:349:11

  console.log
    Sectors endpoint called (public)

      at log (routes/stocks.js:13:13)

  console.warn
    Query returned invalid result: { rows: [] }

      20 |     const result = await query(tableCheckQuery, [tableName]);
      21 |     if (!result || !result.rows || result.rows.length === 0) {
    > 22 |       console.warn('Query returned invalid result:', result);
         |               ^
      23 |       return null;
      24 |     }
      25 |     return result.rows[0].exists;

      at warn (utils/routeHelpers.js:22:15)
      at routes/stocks.js:16:11

  console.log
    Individual stock request for AAPL

      at log (routes/stocks.js:662:13)

  console.warn
    Query returned invalid result: { rows: [] }

      20 |     const result = await query(tableCheckQuery, [tableName]);
      21 |     if (!result || !result.rows || result.rows.length === 0) {
    > 22 |       console.warn('Query returned invalid result:', result);
         |               ^
      23 |       return null;
      24 |     }
      25 |     return result.rows[0].exists;

      at warn (utils/routeHelpers.js:22:15)
      at routes/stocks.js:665:11

  console.log
    🔍 Stock search requested for: AAPL

      at log (routes/stocks.js:1745:13)

  console.log
    🔍 Stock search requested for: A

      at log (routes/stocks.js:1745:13)

  console.log
    Stock details requested for AAPL

      at log (routes/stocks.js:2656:13)

  console.log
    Stock details requested for INVALID123

      at log (routes/stocks.js:2656:13)

  console.log
    Stock details requested for AAPL

      at log (routes/stocks.js:2656:13)

  console.log
    Stock price requested for AAPL, timeframe: 1d, historical: false

      at log (routes/stocks.js:2885:13)

  console.log
    Stock price requested for AAPL, timeframe: 1d, historical: false

      at log (routes/stocks.js:2885:13)

  console.log
    Stock price requested for AAPL, timeframe: 1d, historical: true

      at log (routes/stocks.js:2885:13)

  console.log
    Fetching gainers movers for timeframe 1d

      at log (routes/stocks.js:418:13)

  console.log
    Fetching gainers movers for timeframe 1d

      at log (routes/stocks.js:418:13)

  console.log
    Fetching gainers movers for timeframe 1d

      at log (routes/stocks.js:418:13)

  console.log
    Stock recommendations requested for AAPL, criteria: all

      at log (routes/stocks.js:2833:13)

  console.log
    Stock recommendations requested for AAPL, criteria: technical

      at log (routes/stocks.js:2833:13)

  console.log
    Comparing stocks: AAPL, MSFT, GOOGL

      at log (routes/stocks.js:593:13)

  console.log
    Response status: 200

      at Object.log (tests/unit/routes/stocks.test.js:424:15)

  console.log
    Response body: {
      "success": true,
      "data": {
        "comparison": [
          {
            "symbol": "AAPL",
            "name": "Apple Inc.",
            "sector": "Technology",
            "industry": "Consumer Electronics",
            "market_cap": 2800000000000,
            "current_price": 185.5,
            "volume": 45678900,
            "price": {
              "current": 185.5,
              "change": 2.34,
              "change_percent": 1.28
            },
            "financialMetrics": {
              "trailing_pe": 28.5,
              "forward_pe": 25.2,
              "price_to_book": 8.9,
              "dividend_yield": 0.45
            }
          },
          {
            "symbol": "MSFT",
            "name": "Microsoft Corporation",
            "sector": "Technology",
            "industry": "Software",
            "market_cap": 2500000000000,
            "current_price": 378.2,
            "volume": 23456700,
            "price": {
              "current": 378.2,
              "change": -5.67,
              "change_percent": -1.48
            },
            "financialMetrics": {
              "trailing_pe": 32.1,
              "forward_pe": 28.8,
              "price_to_book": 12.3,
              "dividend_yield": 0.68
            }
          }
        ],
        "symbols": [
          "AAPL",
          "MSFT",
          "GOOGL"
        ],
        "timestamp": "2025-10-19T11:49:33.097Z"
      }
    }

      at Object.log (tests/unit/routes/stocks.test.js:425:15)

  console.log
    Comparing stocks: AAPL, MSFT

      at log (routes/stocks.js:593:13)

  console.log
    Comparing stocks: STOCK0, STOCK1, STOCK2, STOCK3, STOCK4

      at log (routes/stocks.js:593:13)

  console.log
    Fetching market statistics

      at log (routes/stocks.js:480:13)

  console.log
    Fetching market statistics

      at log (routes/stocks.js:480:13)

  console.log
    Individual stock request for details

      at log (routes/stocks.js:662:13)

  console.warn
    Query returned invalid result: { rows: [] }

      20 |     const result = await query(tableCheckQuery, [tableName]);
      21 |     if (!result || !result.rows || result.rows.length === 0) {
    > 22 |       console.warn('Query returned invalid result:', result);
         |               ^
      23 |       return null;
      24 |     }
      25 |     return result.rows[0].exists;

      at warn (utils/routeHelpers.js:22:15)
      at routes/stocks.js:665:11

PASS tests/unit/routes/stocks.test.js
  Stocks Routes Unit Tests
    GET /stocks/
      ✓ should return stocks data with correct loader table structure (21 ms)
    GET /stocks/search
      ✓ should return search results (3 ms)
      ✓ should search stocks by query (6 ms)
      ✓ should handle empty search query (1 ms)
      ✓ should limit search results (3 ms)
    GET /stocks/list
      ✓ should return stock list with correct loader table structure (3 ms)
    GET /stocks/sectors
      ✓ should return sector data from stocks table (2 ms)
    GET /stocks/AAPL
      ✓ should return stock details (3 ms)
    GET /stocks/trending
      ✓ should return trending stocks (1 ms)
      ✓ should handle trending with timeframe (2 ms)
      ✓ should handle trending with different categories (1 ms)
    GET /stocks/details/:symbol
      ✓ should return stock details for valid symbol (2 ms)
      ✓ should handle invalid stock symbol (3 ms)
      ✓ should include comprehensive stock data (2 ms)
    GET /stocks/price/:symbol
      ✓ should return price data for symbol (2 ms)
      ✓ should handle price with different timeframes (3 ms)
      ✓ should handle price with historical data (2 ms)
    GET /stocks/movers
      ✓ should return market movers (2 ms)
      ✓ should handle movers by category (2 ms)
      ✓ should limit movers results (3 ms)
    GET /stocks/recommendations/:symbol
      ✓ should return stock recommendations (2 ms)
      ✓ should handle recommendations with different criteria (7 ms)
    GET /stocks/compare
      ✓ should compare multiple stocks (3 ms)
      ✓ should handle comparison with metrics (2 ms)
      ✓ should limit comparison to reasonable number of stocks (2 ms)
    GET /stocks/stats
      ✓ should return stock statistics (2 ms)
      ✓ should handle stats with filters (3 ms)
    Stocks Error Handling
      ✓ should handle malformed symbol requests (3 ms)
      ✓ should handle invalid query parameters gracefully (2 ms)
      ✓ should handle missing required parameters (1 ms)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:33 +0000] "GET /api/nonexistent HTTP/1.1" 404 121 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:33 +0000] "GET /api/portfolio/invalid-endpoint HTTP/1.1" 404 136 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:33 +0000] "GET /api/calendar/nonexistent-calendar-type HTTP/1.1" 404 144 "-" "-"
  console.log
    📋 Portfolio positions requested for user: test-user-123

      at log (routes/portfolio.js:282:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:33 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
  console.log
    Calendar events endpoint called with params: {}

      at log (routes/calendar.js:380:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:33 +0000] "GET /api/calendar/events HTTP/1.1" 200 223 "-" "-"
  console.log
    📊 Retrieving backtest results for ID: nonexistent-id

      at log (routes/backtest.js:20:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:33 +0000] "GET /api/backtest/results/nonexistent-id HTTP/1.1" 404 198 "-" "-"
  console.error
    Error: SyntaxError: Unexpected token 'j', "{"malformed": json}" is not valid JSON
        at JSON.parse (<anonymous>)
        at parse (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:92:19)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:128:18
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21) {
      expose: true,
      statusCode: 400,
      status: 400,
      body: '{"malformed": json}',
      type: 'entity.parse.failed'
    }

      268 | app.use((err, req, res, _next) => {
      269 |   try {
    > 270 |     console.error("Error:", err);
          |             ^
      271 |   } catch (e) {
      272 |     // Ignore console logging errors
      273 |   }

      at error (server.js:270:13)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:71:5)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Layer.handle_error (node_modules/express/lib/router/layer.js:67:12)
      at trim_prefix (node_modules/express/lib/router/index.js:326:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:130:7
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:33 +0000] "POST /api/portfolio/analyze HTTP/1.1" 400 135 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:33 +0000] "GET /api/nonexistent-endpoint HTTP/1.1" 404 130 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:33 +0000] "POST /api/portfolio/invalid-action HTTP/1.1" 404 134 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:33 +0000] "GET /api/nonexistent-endpoint HTTP/1.1" 404 130 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:33 +0000] "POST /api/portfolio/positions HTTP/1.1" 404 129 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:33 +0000] "POST /api/calendar/events HTTP/1.1" 404 125 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:33 +0000] "POST /api/portfolio/analyze HTTP/1.1" 501 273 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:33 +0000] "POST /api/portfolio/analyze HTTP/1.1" 501 273 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:33 +0000] "GET /api/calendar/earnings?symbol=%27;%20DROP%20TABLE%20users;%20-- HTTP/1.1" 200 259 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:33 +0000] "GET /api/nonexistent-endpoint HTTP/1.1" 404 130 "-" "-"
  console.log
    📊 Portfolio summary requested for user: test-user-123

      at log (routes/portfolio.js:175:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:33 +0000] "GET /api/portfolio/summary HTTP/1.1" 200 655 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:33 +0000] "GET /api/calendar/earnings HTTP/1.1" 200 259 "-" "-"
  console.log
    Market overview endpoint called - OPTIMIZED PARALLEL

      at log (routes/market.js:528:11)

  console.log
    Market overview completed in 0ms using parallel queries

      at log (routes/market.js:720:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:33 +0000] "GET /api/market/overview HTTP/1.1" 200 251 "-" "-"
  console.log
    📋 Portfolio positions requested for user: test-user-123

      at log (routes/portfolio.js:282:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:33 +0000] "GET /api/portfolio/positions HTTP/1.1" 200 99 "-" "-"
  console.log
    Calendar events endpoint called with params: {}

      at log (routes/calendar.js:380:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:33 +0000] "GET /api/calendar/events HTTP/1.1" 200 223 "-" "-"
  console.log
    📊 Backtest results requested - ID: all, limit: 50

      at log (routes/backtest.js:821:13)

::ffff:127.0.0.1 - - [19/Oct/2025:11:49:33 +0000] "GET /api/backtest/results HTTP/1.1" 200 2971 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:33 +0000] "GET /api/invalid HTTP/1.1" 404 117 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:33 +0000] "GET /api/portfolio/invalid HTTP/1.1" 404 127 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:33 +0000] "GET /api/calendar/invalid HTTP/1.1" 404 126 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:33 +0000] "GET /api/market/invalid HTTP/1.1" 404 124 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:33 +0000] "POST /api/health HTTP/1.1" 404 116 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:33 +0000] "PUT /api/calendar/earnings HTTP/1.1" 404 127 "-" "-"
::ffff:127.0.0.1 - - [19/Oct/2025:11:49:33 +0000] "DELETE /api/market/overview HTTP/1.1" 404 125 "-" "-"
PASS tests/integration/middleware/errorHandler-middleware.integration.test.js
  Error Handler Middleware Integration
    Error Response Formatting
      ✓ should format 404 errors consistently (7 ms)
      ✓ should format 500 errors consistently (11 ms)
      ✓ should handle malformed request errors (5 ms)
    Error Context Preservation
      ✓ should maintain request context in error responses (1 ms)
      ✓ should handle errors with user authentication context (2 ms)
      ✓ should handle errors without authentication context (1 ms)
    Error Security and Information Disclosure
      ✓ should not expose sensitive information in error responses (4 ms)
      ✓ should sanitize error messages (3 ms)
    Error Response Headers
      ✓ should set appropriate response headers for errors (1 ms)
      ✓ should handle CORS headers in error responses (2 ms)
    Async Error Handling
      ✓ should handle async route errors properly (5 ms)
      ✓ should handle database connection errors gracefully (9 ms)
    Error Handling Consistency Across Routes
      ✓ should maintain consistent error format across all routes (6 ms)
      ✓ should handle method not allowed errors consistently (4 ms)

  console.log
    Initializing database connection...

      at log (index.js:395:13)

  console.log
    📊 Metrics endpoint called

      at log (routes/metrics.js:152:13)

  console.log
    📊 Metrics endpoint called

      at log (routes/metrics.js:152:13)

  console.log
    📊 Metrics endpoint called

      at log (routes/metrics.js:152:13)

  console.log
    📊 Metrics endpoint called

      at log (routes/metrics.js:152:13)

  console.log
    📊 Metrics endpoint called

      at log (routes/metrics.js:152:13)

  console.log
    📊 Metrics endpoint called

      at log (routes/metrics.js:152:13)

  console.log
    📊 Metrics endpoint called

      at log (routes/metrics.js:152:13)

  console.log
    📊 Metrics endpoint called

      at log (routes/metrics.js:152:13)

  console.log
    📊 Metrics requested for symbol: NONEXISTENT

      at log (routes/metrics.js:378:13)

  console.log
    📊 Metrics endpoint called

      at log (routes/metrics.js:152:13)

  console.log
    📊 Metrics endpoint called

      at log (routes/metrics.js:152:13)

  console.log
    📊 Metrics endpoint called

      at log (routes/metrics.js:152:13)

  console.log
    📊 Metrics endpoint called

      at log (routes/metrics.js:152:13)

  console.log
    📊 Metrics endpoint called

      at log (routes/metrics.js:152:13)

PASS tests/integration/routes/metrics.integration.test.js
  Metrics Routes Integration
    GET /metrics/ping
      ✓ should return ping response (5 ms)
    GET /metrics
      ✓ should return metrics data (8 ms)
      ✓ should handle pagination parameters (2 ms)
      ✓ should handle search parameter (2 ms)
      ✓ should handle sector filter (2 ms)
      ✓ should handle metric range filters (2 ms)
      ✓ should handle sorting parameters (3 ms)
      ✓ should handle limit boundary conditions (1 ms)
      ✓ should handle invalid parameters gracefully (1 ms)
    Error handling
      ✓ should handle invalid endpoints (2 ms)
      ✓ should return consistent response format (1 ms)
      ✓ should handle database connection issues (2 ms)
    Performance tests
      ✓ should respond within reasonable time (2 ms)
      ✓ should handle concurrent requests (2 ms)
    Query parameter validation
      ✓ should handle empty query parameters (2 ms)
      ✓ should handle SQL injection attempts (4 ms)
      ✓ should handle XSS attempts (2 ms)
      ✓ should handle very long input strings (5 ms)

  console.error
    Technical analysis error for AAPL: Error: Database connection failed
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/routes/technical.integration.test.js:136:31)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      435 |     res.json(responseData);
      436 |   } catch (error) {
    > 437 |     console.error(`Technical analysis error for ${req.params.symbol}:`, error);
          |             ^
      438 |
      439 |     // Handle specific error types
      440 |     if (error.message && error.message.toLowerCase().includes("timeout")) {

      at error (routes/technical.js:437:13)

  console.error
    📊 No weekly data in database for UNKNOWN

      490 |
      491 |     if (result.rows.length === 0) {
    > 492 |       console.error(
          |               ^
      493 |         `📊 No weekly data in database for ${symbolUpper}`
      494 |       );
      495 |

      at error (routes/technical.js:492:15)

  console.log
    🔍 Technical screener requested - RSI: 0-30, Volume: 0+, Price: 0-10000

      at log (routes/technical.js:1080:13)

  console.log
    🔍 Technical screener requested - RSI: 30-70, Volume: 1000000+, Price: 0-10000

      at log (routes/technical.js:1080:13)

  console.log
    🔍 Technical screener requested - RSI: 0-30, Volume: 0+, Price: 0-10000

      at log (routes/technical.js:1080:13)

  console.error
    Technical analysis error for AAPL: Error: Query timeout
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/routes/technical.integration.test.js:504:31)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      435 |     res.json(responseData);
      436 |   } catch (error) {
    > 437 |     console.error(`Technical analysis error for ${req.params.symbol}:`, error);
          |             ^
      438 |
      439 |     // Handle specific error types
      440 |     if (error.message && error.message.toLowerCase().includes("timeout")) {

      at error (routes/technical.js:437:13)

  console.error
    Technical analysis error for AAPL: TypeError: Cannot read properties of null (reading 'rows')
        at rows (/home/stocks/algo/webapp/lambda/routes/technical.js:416:17)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)

      435 |     res.json(responseData);
      436 |   } catch (error) {
    > 437 |     console.error(`Technical analysis error for ${req.params.symbol}:`, error);
          |             ^
      438 |
      439 |     // Handle specific error types
      440 |     if (error.message && error.message.toLowerCase().includes("timeout")) {

      at error (routes/technical.js:437:13)

PASS tests/integration/routes/technical.integration.test.js
  Technical Router
    GET /ping
      ✓ should return ping response (15 ms)
    GET /daily/:symbol
      ✓ should return daily technical data for valid symbol (2 ms)
      ✓ should handle lowercase symbol input (1 ms)
      ✓ should return 404 for symbol with no technical data (2 ms)
      ✓ should handle database errors gracefully (3 ms)
      ✓ should limit results to 30 records (1 ms)
    GET /weekly/:symbol
      ✓ should return weekly technical data (1 ms)
      ✓ should handle empty weekly data (3 ms)
    GET /monthly/:symbol
      ✓ should return monthly technical data (1 ms)
    GET /compare
      ✓ should compare technical indicators across multiple symbols (3 ms)
      ✓ should require symbols query parameter (2 ms)
      ✓ should limit number of symbols for comparison (2 ms)
    GET /signals/:symbol
      ✓ should return technical signals for symbol (1 ms)
      ✓ should handle no signals available (2 ms)
      ✓ should filter signals by type (2 ms)
    GET /screener
      ✓ should return stocks matching technical criteria (7 ms)
      ✓ should handle various screening criteria (3 ms)
      ✓ should limit screener results (2 ms)
    POST /alerts
      ✓ should create technical alert (4 ms)
      ✓ should validate required alert fields (1 ms)
      ✓ should validate indicator types (1 ms)
    Error Handling
      ✓ should handle invalid symbol characters (1 ms)
      ✓ should handle SQL injection attempts (1 ms)
      ✓ should handle database timeout errors (2 ms)
      ✓ should handle malformed database responses (19 ms)
    Performance and Optimization
      ✓ should handle concurrent requests efficiently (9 ms)
      ✓ should handle large datasets efficiently (3 ms)

  console.log
    Initializing database connection...

      at log (index.js:395:13)

PASS tests/integration/routes/analysts.integration.test.js
  Simplified Analyst Routes Integration Tests
    GET /api/analysts
      ✓ should return simplified analyst API overview (24 ms)
    GET /api/analysts/upgrades
      ✓ should return analyst upgrades from database (4 ms)
      ✓ should handle pagination (4 ms)
    GET /api/analysts/price-targets
      ✓ should return price targets from database (4 ms)
    GET /api/analysts/estimates
      ✓ should return estimates from database (3 ms)
    GET /api/analysts/recommendations
      ✓ should return recommendations from database (3 ms)
    GET /api/analysts/coverage
      ✓ should return coverage from database (3 ms)
    GET /api/analysts/sentiment
      ✓ should return sentiment analysis from database (3 ms)
    GET /api/analysts/:symbol
      ✓ should return all analyst data for AAPL (3 ms)
      ✓ should handle lowercase symbol (4 ms)
      ✓ should handle symbols with no data (5 ms)
    Error Handling
      ✓ should handle invalid routes gracefully (28 ms)
    Data Validation
      ✓ should return valid timestamps (2 ms)
      ✓ should return consistent data structure (2 ms)
    Performance
      ✓ should respond within reasonable time (2 ms)

  console.log
    Initializing database connection...

      at log (index.js:395:13)

  console.log
    ⚠️ Risk analysis requested for user: test-user-123, period: 1y

      at log (routes/risk.js:39:13)

  console.log
    ⚠️ Risk analysis requested for user: test-user-123, period: 1m

      at log (routes/risk.js:39:13)

  console.log
    ⚠️ Risk analysis requested for user: test-user-123, period: 1m

      at log (routes/risk.js:39:13)

  console.log
    ⚠️ Risk analysis requested for user: test-user-123, period: <script>alert('xss')</script>

      at log (routes/risk.js:39:13)

  console.log
    ⚠️ Risk analysis requested for user: test-user-123, period: '; DROP TABLE portfolio_holdings; --

      at log (routes/risk.js:39:13)

PASS tests/integration/routes/risk.integration.test.js
  Risk Routes Integration
    GET /risk
      ✓ should return risk analysis data (5 ms)
      ✓ should handle portfolio risk analysis (2 ms)
      ✓ should handle individual stock risk analysis (1 ms)
    GET /risk/analysis
      ✓ should handle risk analysis requests (9 ms)
      ✓ should handle different time periods (3 ms)
      ✓ should handle missing query parameters (5 ms)
    GET /risk/health
      ✓ should return health status (2 ms)
    Error handling
      ✓ should handle invalid endpoints (2 ms)
      ✓ should return consistent response format (1 ms)
      ✓ should handle database connection issues (2 ms)
    Security tests
      ✓ should handle SQL injection attempts (1 ms)
      ✓ should handle XSS attempts in query parameters (3 ms)
      ✓ should handle malicious query parameters (2 ms)
    Performance tests
      ✓ should respond within reasonable time (1 ms)
      ✓ should handle concurrent requests (3 ms)

  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

  console.log
    📊 Stock recommendations requested - symbol: AAPL, category: buy

      at log (routes/recommendations.js:20:15)

  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

  console.log
    📊 Stock recommendations requested - symbol: all, category: buy

      at log (routes/recommendations.js:20:15)

  console.log
    📊 Stock recommendations requested - symbol: all, category: sell

      at log (routes/recommendations.js:20:15)

  console.log
    📊 Stock recommendations requested - symbol: all, category: hold

      at log (routes/recommendations.js:20:15)

  console.log
    📊 Stock recommendations requested - symbol: AAPL, category: all

      at log (routes/recommendations.js:20:15)

  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

  console.log
    📊 Stock recommendations requested - symbol: GOOGL, category: all

      at log (routes/recommendations.js:20:15)

  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

  console.error
    Recommendations error: Error: Database connection failed
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/recommendations.test.js:223:35)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      168 |   } catch (error) {
      169 |     try {
    > 170 |       console.error("Recommendations error:", error);
          |               ^
      171 |     } catch (e) {
      172 |       // Ignore console logging errors
      173 |     }

      at error (routes/recommendations.js:170:15)

  console.log
    📊 Stock recommendations requested - symbol: all, category: invalid_category_but_still_works

      at log (routes/recommendations.js:20:15)

  console.log
    📊 Stock recommendations requested - symbol: AAPL'; DROP TABLE recommendations; --, category: all

      at log (routes/recommendations.js:20:15)

  console.log
    📊 Stock recommendations requested - symbol: all, category:

      at log (routes/recommendations.js:20:15)

  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

  console.log
    📊 Stock recommendations requested - symbol: TSLA, category: buy

      at log (routes/recommendations.js:20:15)

  console.log
    📊 Stock recommendations requested - symbol: AAPL, category: hold

      at log (routes/recommendations.js:20:15)

  console.log
    📊 Stock recommendations requested - symbol: AAPL, category: buy

      at log (routes/recommendations.js:20:15)

  console.log
    📊 Stock recommendations requested - symbol: all, category: all

      at log (routes/recommendations.js:20:15)

  console.log
    📊 Stock recommendations requested - symbol: all, category: buy

      at log (routes/recommendations.js:20:15)

  console.log
    📊 Stock recommendations requested - symbol: all, category: sell

      at log (routes/recommendations.js:20:15)

  console.log
    📊 Stock recommendations requested - symbol: all, category: hold

      at log (routes/recommendations.js:20:15)

PASS tests/unit/routes/recommendations.test.js
  Recommendations Routes Unit Tests
    GET /recommendations
      ✓ should return recommendations with mocked data (7 ms)
      ✓ should handle query parameters (3 ms)
      ✓ should include comprehensive troubleshooting information (5 ms)
      ✓ should handle different category parameters (10 ms)
      ✓ should default to all category (2 ms)
      ✓ should handle different timeframe parameters (7 ms)
      ✓ should handle analyst filter parameter (2 ms)
      ✓ should handle limit parameter and parse as integer (3 ms)
      ✓ should handle default limit parameter (2 ms)
      ✓ should handle symbol parameter (4 ms)
      ✓ should handle no symbol parameter (3 ms)
    GET /recommendations/consensus
      ✓ should return not implemented for consensus endpoint when accessed (2 ms)
    GET /recommendations/analysts
      ✓ should handle analysts endpoint when accessed (2 ms)
    GET /recommendations/price-targets
      ✓ should handle price targets endpoint when accessed (1 ms)
    Error handling
      ✓ should handle implementation errors gracefully (9 ms)
      ✓ should handle malformed query parameters (3 ms)
      ✓ should handle special characters in parameters (2 ms)
      ✓ should handle empty string parameters (3 ms)
    Response format
      ✓ should return consistent JSON response format (3 ms)
      ✓ should include proper response structure (2 ms)
      ✓ should preserve query parameters in response (2 ms)
      ✓ should include all filter parameters in response (3 ms)
    Future implementation readiness
      ✓ should handle comprehensive parameter requests with proper structure (2 ms)
      ✓ should handle all expected recommendation categories (12 ms)

  console.log
    🔧 DEV: Using development auth for login

      at log (routes/auth.js:40:15)

  console.log
    🔧 DEV: Using development auth for login

      at log (routes/auth.js:40:15)

  console.log
    🔧 DEV: Using development auth for login

      at log (routes/auth.js:40:15)

  console.log
    🔧 DEV: Using development auth for login

      at log (routes/auth.js:40:15)

  console.log
    🔧 DEV: Using development auth for registration

      at log (routes/auth.js:259:15)

  console.log
    🔧 DEV: Using development auth for registration

      at log (routes/auth.js:259:15)

  console.log
    🔧 DEV: Using development auth for confirmation

      at log (routes/auth.js:384:15)

  console.log
    🔧 DEV: Using development auth for confirmation

      at log (routes/auth.js:384:15)

  console.error
    Confirmation error: CodeMismatchException: Invalid verification code provided, please try again.
        at /home/stocks/algo/webapp/lambda/routes/auth.js:394:23
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
        at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
        at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at next (/home/stocks/algo/webapp/lambda/tests/unit/routes/auth.test.js:65:7)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at /home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/read.js:137:5
        at AsyncResource.runInAsyncScope (node:async_hooks:206:9)
        at invokeCallback (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:238:16)
        at done (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:227:7)
        at IncomingMessage.onEnd (/home/stocks/algo/webapp/lambda/node_modules/raw-body/index.js:287:7)
        at IncomingMessage.emit (node:events:524:28)
        at endReadableNT (node:internal/streams/readable:1698:12)
        at processTicksAndRejections (node:internal/process/task_queues:82:21)

      412 |     });
      413 |   } catch (error) {
    > 414 |     console.error("Confirmation error:", error);
          |             ^
      415 |
      416 |     if (error.name === "CodeMismatchException") {
      417 |       return res.status(400).json({ success: false, error: "Invalid code" });

      at error (routes/auth.js:414:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at next (tests/unit/routes/auth.test.js:65:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:137:5
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

  console.log
    🔧 DEV: Using development auth for forgot password

      at log (routes/auth.js:439:15)

  console.log
    🔧 DEV: Using development auth for login

      at log (routes/auth.js:40:15)

  console.log
    🔧 DEV: Using development auth for challenge

      at log (routes/auth.js:162:15)

  console.log
    🔧 DEV: Using development auth for respond to challenge

      at log (routes/auth.js:584:13)

  console.log
    🔧 DEV: Using development auth for login

      at log (routes/auth.js:40:15)

  console.log
    🔧 DEV: Using development auth for login

      at log (routes/auth.js:40:15)

PASS tests/unit/routes/auth.test.js
  Auth Routes Unit Tests
    POST /auth/login
      ✓ should successfully login with valid credentials (16 ms)
      ✓ should handle missing credentials (3 ms)
      ✓ should handle authentication challenge (3 ms)
      ✓ should handle NotAuthorizedException (6 ms)
      ✓ should handle UserNotConfirmedException (2 ms)
    POST /auth/register
      ✓ should successfully register new user (4 ms)
      ✓ should handle missing required fields (1 ms)
      ✓ should handle UsernameExistsException (2 ms)
    POST /auth/confirm
      ✓ should confirm user registration (3 ms)
      ✓ should handle CodeMismatchException (14 ms)
    POST /auth/forgot-password
      ✓ should initiate password reset (3 ms)
      ✓ should handle missing username (1 ms)
    GET /auth/me
      ○ skipped should return user profile
    GET /auth/health
      ✓ should return auth service health (1 ms)
    Development Mode JWT Authentication
      ✓ should generate valid JWT tokens in development mode (3 ms)
      ✓ should generate JWT tokens for MFA challenge in development (3 ms)
      ✓ should generate JWT tokens for respond-to-challenge in development (7 ms)
      ✓ should use consistent JWT secret across all endpoints (3 ms)
    Error handling
      ✓ should handle generic Cognito errors (2 ms)

  console.log
    Initializing database connection...

      at log (index.js:395:13)

  console.log
    👥 Insider trades requested for AAPL

      at log (routes/insider.js:25:13)

  console.log
    👥 Insider trades requested for GOOGL

      at log (routes/insider.js:25:13)

  console.log
    👥 Insider trades requested for INVALID123

      at log (routes/insider.js:25:13)

  console.log
    👥 Insider trades requested for AAPL

      at log (routes/insider.js:25:13)

PASS tests/integration/routes/insider.integration.test.js
  Insider Trading API
    Insider Trades
      ✓ should return insider trades data (may be empty) (5 ms)
      ✓ should handle different symbols correctly (3 ms)
    Error handling
      ✓ should handle invalid symbols (2 ms)
      ✓ should handle server errors gracefully (3 ms)

  console.log
    🚀 [test] Live data stream request initiated {
      symbols: 'AAPL',
      userId: 'test-use...',
      userAgent: undefined,
      ip: '::ffff:127.0.0.1',
      timestamp: '2025-10-19T11:49:34.330Z'
    }

      at log (routes/websocket.js:190:13)

  console.log
    🔍 [test] Parsing requested symbols: AAPL

      at log (routes/websocket.js:199:13)

  console.log
    ✅ [test] Symbols validated: { validSymbols: [ 'AAPL' ], symbolCount: 1 }

      at log (routes/websocket.js:221:13)

  console.log
    🔑 [test] Retrieving user API credentials for live data access

      at log (routes/websocket.js:227:13)

  console.log
    ✅ [test] API credentials retrieved in 0ms {
      provider: 'alpaca',
      environment: 'sandbox',
      keyLength: 15,
      hasSecret: true
    }

      at log (routes/websocket.js:269:15)

  console.log
    🏭 [test] Initializing Alpaca service for live data

      at log (routes/websocket.js:311:13)

  console.log
    ✅ [test] Alpaca service initialized in 0ms { environment: 'sandbox', hasApiKey: true, hasSecret: true }

      at log (routes/websocket.js:323:15)

  console.log
    📝 [test] Updating user subscriptions { previousSubscriptions: [], newSubscriptions: [ 'AAPL' ] }

      at log (routes/websocket.js:371:13)

  console.log
    📊 [test] Fetching market data for 1 symbols

      at log (routes/websocket.js:378:13)

  console.log
    📊 [test] Processing symbol: AAPL

      at log (routes/websocket.js:392:17)

  console.log
    📡 [test] Fetching fresh data for AAPL from Alpaca

      at log (routes/websocket.js:413:19)

  console.log
    ✅ [test] Fresh data fetched for AAPL in 0ms { bidPrice: 150.25, askPrice: 150.27, spread: 0.020000000000010232 }

      at log (routes/websocket.js:454:21)

  console.log
    ✅ [test] Symbol AAPL processed in 2ms

      at log (routes/websocket.js:477:17)

  console.log
    ✅ [test] Live data stream completed in 13ms {
      summary: {
        totalSymbols: 1,
        successfulFetches: 1,
        cachedSymbols: 0,
        failedSymbols: 0,
        successRate: '100%'
      },
      performance: {
        totalDuration: '13ms',
        dataFetchDuration: '2ms',
        avgPerSymbol: '2ms'
      },
      cache: { totalCachedSymbols: 1, hitRate: '0%' },
      status: 'SUCCESS'
    }

      at log (routes/websocket.js:535:13)

  console.log
    🚀 [test] Live data stream request initiated {
      symbols: 'AAPL',
      userId: 'test-use...',
      userAgent: undefined,
      ip: '::ffff:127.0.0.1',
      timestamp: '2025-10-19T11:49:34.346Z'
    }

      at log (routes/websocket.js:190:13)

  console.log
    🔍 [test] Parsing requested symbols: AAPL

      at log (routes/websocket.js:199:13)

  console.log
    ✅ [test] Symbols validated: { validSymbols: [ 'AAPL' ], symbolCount: 1 }

      at log (routes/websocket.js:221:13)

  console.log
    🔑 [test] Retrieving user API credentials for live data access

      at log (routes/websocket.js:227:13)

  console.error
    ❌ [test] No API credentials found after 0ms {
      requestedProvider: 'alpaca',
      userId: 'test-use...',
      impact: 'Live market data will not be available',
      recommendation: 'User needs to configure Alpaca API keys in settings'
    }

      236 |
      237 |       if (!credentials) {
    > 238 |         console.error(
          |                 ^
      239 |           `❌ [${requestId}] No API credentials found after ${credentialsDuration}ms`,
      240 |           {
      241 |             requestedProvider: "alpaca",

      at error (routes/websocket.js:238:17)

  console.log
    🚀 [test] Live data stream request initiated {
      symbols: 'AAPL',
      userId: 'test-use...',
      userAgent: undefined,
      ip: '::ffff:127.0.0.1',
      timestamp: '2025-10-19T11:49:34.355Z'
    }

      at log (routes/websocket.js:190:13)

  console.log
    🔍 [test] Parsing requested symbols: AAPL

      at log (routes/websocket.js:199:13)

  console.log
    ✅ [test] Symbols validated: { validSymbols: [ 'AAPL' ], symbolCount: 1 }

      at log (routes/websocket.js:221:13)

  console.log
    🔑 [test] Retrieving user API credentials for live data access

      at log (routes/websocket.js:227:13)

  console.error
    ❌ [test] Failed to retrieve API credentials after 0ms: {
      error: 'Database connection failed',
      errorStack: 'Error: Database connection failed\n' +
        '    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/websocket.test.js:151:9)\n' +
        '    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n' +
        '    at new Promise (<anonymous>)\n' +
        '    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n' +
        '    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n' +
        '    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n' +
        '    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n' +
        '    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n' +
        '    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n' +
        '    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n' +
        '    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n' +
        '    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n' +
        '    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n' +
        '    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n' +
        '    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)',
      provider: 'alpaca',
      impact: 'Cannot access live market data',
      recommendation: 'Check API key configuration and database connectivity'
    }

      278 |     } catch (credentialsError) {
      279 |       const credentialsDuration = Date.now() - credentialsStart;
    > 280 |       console.error(
          |               ^
      281 |         `❌ [${requestId}] Failed to retrieve API credentials after ${credentialsDuration}ms:`,
      282 |         {
      283 |           error: credentialsError.message,

      at error (routes/websocket.js:280:15)

  console.log
    🚀 [test] Live data stream request initiated {
      symbols: 'AAPL',
      userId: 'test-use...',
      userAgent: undefined,
      ip: '::ffff:127.0.0.1',
      timestamp: '2025-10-19T11:49:34.361Z'
    }

      at log (routes/websocket.js:190:13)

  console.log
    🔍 [test] Parsing requested symbols: AAPL

      at log (routes/websocket.js:199:13)

  console.log
    ✅ [test] Symbols validated: { validSymbols: [ 'AAPL' ], symbolCount: 1 }

      at log (routes/websocket.js:221:13)

  console.log
    🔑 [test] Retrieving user API credentials for live data access

      at log (routes/websocket.js:227:13)

  console.log
    ✅ [test] API credentials retrieved in 0ms {
      provider: 'alpaca',
      environment: 'sandbox',
      keyLength: 11,
      hasSecret: true
    }

      at log (routes/websocket.js:269:15)

  console.log
    🏭 [test] Initializing Alpaca service for live data

      at log (routes/websocket.js:311:13)

  console.error
    ❌ [test] Alpaca service initialization FAILED after 0ms: {
      error: 'Invalid API credentials',
      errorStack: 'Error: Invalid API credentials\n' +
        '    at mockConstructor.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/websocket.test.js:170:15)\n' +
        '    at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:387:43\n' +
        '    at mockConstructor.<anonymous> (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13)\n' +
        '    at new mockConstructor (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)\n' +
        '    at /home/stocks/algo/webapp/lambda/routes/websocket.js:316:27\n' +
        '    at processTicksAndRejections (node:internal/process/task_queues:95:5)',
      environment: 'sandbox',
      impact: 'Cannot initialize live data service',
      recommendation: 'Check API key validity and Alpaca service status'
    }

      331 |     } catch (alpacaError) {
      332 |       const alpacaInitDuration = Date.now() - alpacaInitStart;
    > 333 |       console.error(
          |               ^
      334 |         `❌ [${requestId}] Alpaca service initialization FAILED after ${alpacaInitDuration}ms:`,
      335 |         {
      336 |           error: alpacaError.message,

      at error (routes/websocket.js:333:15)

  console.log
    🚀 [test] Live data stream request initiated {
      symbols: 'INVALID!@',
      userId: 'test-use...',
      userAgent: undefined,
      ip: '::ffff:127.0.0.1',
      timestamp: '2025-10-19T11:49:34.374Z'
    }

      at log (routes/websocket.js:190:13)

  console.log
    🔍 [test] Parsing requested symbols: INVALID!@

      at log (routes/websocket.js:199:13)

  console.error
    ❌ [test] Invalid symbols provided: {
      originalSymbols: 'INVALID!@',
      filteredSymbols: [],
      impact: 'No valid symbols to stream'
    }

      206 |
      207 |     if (symbols.length === 0) {
    > 208 |       console.error(`❌ [${requestId}] Invalid symbols provided:`, {
          |               ^
      209 |         originalSymbols: req.params.symbols,
      210 |         filteredSymbols: symbols,
      211 |         impact: "No valid symbols to stream",

      at error (routes/websocket.js:208:15)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at next (tests/unit/routes/websocket.test.js:32:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

PASS tests/unit/routes/websocket.test.js
  WebSocket API Routes - API Key Dependencies
    Basic Endpoints
      ✓ should return test endpoint status (11 ms)
      ✓ should return health status with dependencies (2 ms)
    Stream Endpoint - Critical API Key Dependency
      ✓ should stream market data with valid API credentials (16 ms)
      ✓ should return 400 when API credentials are missing (6 ms)
      ✓ should handle API key retrieval errors (9 ms)
      ✓ should handle Alpaca service initialization errors (13 ms)
      ✓ should handle invalid symbol validation (6 ms)
    Trades Endpoint - API Key Dependent
      ✓ should fetch trade data with valid credentials (3 ms)
      ✓ should return 403 when API credentials are missing (2 ms)
    Bars Endpoint - API Key Dependent
      ✓ should fetch bars data with valid credentials (2 ms)
      ✓ should return 403 when API credentials are missing (3 ms)
    Subscription Management
      ✓ should subscribe to symbols successfully (4 ms)
      ✓ should handle invalid symbols array (6 ms)
      ✓ should return current subscriptions (3 ms)
      ✓ should unsubscribe from symbols (3 ms)

  console.log
    🚨 Alert created: [HIGH] Test Alert

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [CRITICAL] Critical System Alert

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [MEDIUM] Test Alert

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    ✅ Alert resolved: Test Alert

      at AlertSystem.log [as resolveAlert] (utils/alertSystem.js:424:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    ⚙️ Alert configuration updated

      at AlertSystem.log [as updateConfig] (utils/alertSystem.js:897:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [CRITICAL] Test 1

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [WARNING] Test 2

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [LOW] Test

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    ✅ Alert resolved: Test

      at AlertSystem.log [as resolveAlert] (utils/alertSystem.js:424:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [WARNING] High Latency Warning

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [WARNING] Title

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [CRITICAL] Provider Disconnected

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [CRITICAL] High Error Rate Critical

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [CRITICAL] Daily Cost Critical

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [CRITICAL] Connection Limit Near Max

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [WARNING] Connection Usage High

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [CRITICAL] Cost Budget Near Max

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [WARNING] Cost Usage High

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [CRITICAL] High Latency Critical

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [CRITICAL] High Error Rate Critical

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [CRITICAL] Provider Disconnected

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [CRITICAL] High Latency Critical

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [WARNING] Daily Cost Warning

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [CRITICAL] Connection Limit Critical

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [CRITICAL] Daily Cost Critical

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [CRITICAL] Connection Limit Critical

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    ✅ Alert resolved: Daily Cost Critical

      at AlertSystem.log [as resolveAlert] (utils/alertSystem.js:424:13)

  console.log
    ✅ Alert resolved: Connection Limit Critical

      at AlertSystem.log [as resolveAlert] (utils/alertSystem.js:424:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [WARNING] Cooldown Test Alert

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [WARNING] Test Alert 1

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [CRITICAL] Test Alert 2

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    ✅ Alert resolved: Test Alert 1

      at AlertSystem.log [as resolveAlert] (utils/alertSystem.js:424:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [CRITICAL] Critical Test

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [WARNING] Warning Test

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🚨 Alert created: [INFO] Info Test

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [INFO] Cleanup Test

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    ✅ Alert resolved: Cleanup Test

      at AlertSystem.log [as resolveAlert] (utils/alertSystem.js:424:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [WARNING] High Latency Warning

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [WARNING] High Error Rate Warning

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

  console.log
    🚨 Alert created: [WARNING] Connection Limit Warning

      at AlertSystem.log [as createAlert] (utils/alertSystem.js:405:13)

  console.log
    🛑 Alert monitoring stopped

      at AlertSystem.log [as stopMonitoring] (utils/alertSystem.js:124:13)

PASS tests/unit/utils/alertSystem.test.js
  Alert System
    alert creation and management
      ✓ should create alert with proper parameters (4 ms)
      ✓ should create critical alert (1 ms)
      ✓ should resolve active alert (2 ms)
    alert configuration and management
      ✓ should update configuration (1 ms)
      ✓ should get alerts status (1 ms)
      ✓ should cleanup resolved alerts (1 ms)
    monitoring and lifecycle
      ✓ should start monitoring (1 ms)
      ✓ should stop monitoring (1 ms)
    provider monitoring
      ✓ should check provider health
      ✓ should detect high latency (1 ms)
    error handling and edge cases
      ✓ should handle invalid alert creation (4 ms)
      ✓ should handle alert resolution for non-existent alert
      ✓ should handle provider disconnection (1 ms)
      ✓ should handle high error rate (1 ms)
    configuration management
      ✓ should maintain configuration after updates (1 ms)
      ✓ should handle cost monitoring (1 ms)
    resource limit monitoring
      ✓ should create critical alert when connection usage exceeds 90% (1 ms)
      ✓ should create warning alert when connection usage exceeds 80% (1 ms)
      ✓ should create critical alert when cost usage exceeds 90% (1 ms)
      ✓ should create warning alert when cost usage exceeds 80% (2 ms)
      ✓ should handle limits without usage thresholds
      ✓ should handle missing limit categories (1 ms)
    provider health monitoring
      ✓ should check provider health with high latency (1 ms)
      ✓ should check provider health with high error rate (1 ms)
      ✓ should check provider health with disconnected status (1 ms)
      ✓ should resolve provider alerts when healthy (1 ms)
    global health monitoring
      ✓ should check global cost thresholds - warning level (1 ms)
      ✓ should check global connection thresholds - critical level (1 ms)
      ✓ should resolve global alerts when metrics are healthy (2 ms)
    notification methods
      ✓ should send email notification (24 ms)
      ✓ should send webhook notification when URL is configured (1 ms)
      ✓ should warn when webhook URL is not configured (1 ms)
      ✓ should handle email notification errors (1 ms)
      ✓ should handle webhook notification errors
    alert lifecycle and management
      ✓ should handle alert cooldown periods (1 ms)
      ✓ should resolve specific alert types (6 ms)
      ✓ should filter alerts by severity manually (2 ms)
      ✓ should cleanup old resolved alerts (1 ms)
      ✓ should test notifications system (1 ms)
      ✓ should force health check (1 ms)
      ✓ should handle provider health with warning level latency (1 ms)
      ✓ should handle provider health with warning level error rate (1 ms)
      ✓ should handle global connection warning level (1 ms)

  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=undefined, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    ❌ Symbol parameter missing

      at log (routes/sentiment.js:39:15)

  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=AAPL, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: AAPL, period: 7d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for AAPL, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 0 rows

      at log (routes/sentiment.js:90:15)

  console.log
    📱 Social sentiment overview requested - not implemented

      at log (routes/sentiment.js:384:13)

  console.log
    📱 Social sentiment for twitter requested - not implemented

      at log (routes/sentiment.js:537:13)

  console.log
    🔗 Reddit sentiment requested - symbol: all, limit: 50, sort: relevance

      at log (routes/sentiment.js:412:13)

  console.log
    📈 Trending sentiment requested - not implemented

      at log (routes/sentiment.js:563:13)

  console.log
    📊 Market sentiment (AAII) requested, period: 30d

      at log (routes/sentiment.js:664:13)

  console.log
    📊 Market sentiment (AAII) requested, period: 30d

      at log (routes/sentiment.js:664:13)

  console.log
    📊 Market sentiment (AAII) requested, period: 30d

      at log (routes/sentiment.js:664:13)

  console.log
    📊 Market sentiment (AAII) requested, period: 7d

      at log (routes/sentiment.js:664:13)

  console.log
    😊 Sentiment analysis endpoint accessed

      at log (routes/sentiment.js:33:13)

  console.log
    Request params: symbol=AAPL, period=7d

      at log (routes/sentiment.js:35:13)

  console.log
    😊 Sentiment analysis requested for symbol: AAPL, period: 7d

      at log (routes/sentiment.js:48:13)

  console.log
    🔍 Attempting sentiment query for AAPL, period: 7 days

      at log (routes/sentiment.js:68:15)

  console.log
    📊 Query successful, got 1 rows

      at log (routes/sentiment.js:90:15)

  console.log
    Sentiment data structure: [
      {
        "date": "2025-01-27",
        "bullish": 45.2,
        "neutral": 28.1,
        "bearish": 26.7,
        "created_at": "2025-01-27T10:00:00Z"
      }
    ]

      at log (routes/sentiment.js:136:13)

  console.log
    Number of sentiment data rows: 1

      at log (routes/sentiment.js:137:13)

  console.log
    Validation results: 1 invalid items out of 1 total items

      at log (routes/sentiment.js:170:13)

  console.log
    📊 Market sentiment (AAII) requested, period: 30d

      at log (routes/sentiment.js:664:13)

  console.error
    Market sentiment error: Error: Database connection failed
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/sentiment.test.js:219:35)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      705 |     });
      706 |   } catch (err) {
    > 707 |     console.error("Market sentiment error:", err);
          |             ^
      708 |     res.status(500).json({
      709 |       success: false,
      710 |       error: "Failed to retrieve market sentiment",

      at error (routes/sentiment.js:707:13)

  console.log
    📊 Market sentiment (AAII) requested, period: 30d

      at log (routes/sentiment.js:664:13)

  console.log
    📊 Market sentiment (AAII) requested, period: 30d

      at log (routes/sentiment.js:664:13)

  console.log
    📊 Market sentiment (AAII) requested, period: 30d

      at log (routes/sentiment.js:664:13)

PASS tests/unit/routes/sentiment.test.js
  Sentiment Routes - Unit Tests
    GET /sentiment/health
      ✓ should return health status without authentication (8 ms)
    GET /sentiment
      ✓ should return sentiment API information without authentication (3 ms)
    GET /sentiment/analysis
      ✓ should require symbol parameter (6 ms)
      ✓ should handle missing analyst sentiment data gracefully (7 ms)
    GET /sentiment/stock/:symbol
      ✓ should return 404 for removed endpoint (3 ms)
    GET /sentiment/social
      ✓ should return social sentiment data (3 ms)
      ✓ should return 404 for removed twitter endpoint (2 ms)
      ✓ should return reddit sentiment data (3 ms)
    GET /sentiment/trending
      ✓ should return trending sentiment data (8 ms)
      ✓ should handle trending/social endpoint (2 ms)
    GET /sentiment/market
      ✓ should return AAII market sentiment with real loader schema (3 ms)
      ✓ should handle empty market sentiment data gracefully (3 ms)
    Parameter validation
      ✓ should sanitize symbol parameter for market analysis (3 ms)
      ✓ should handle market period validation (2 ms)
    Authentication handling
      ✓ should allow public access to health endpoint (2 ms)
      ✓ should allow public access to root endpoint (1 ms)
      ✓ should allow public access to analysis endpoint (6 ms)
    Error handling
      ✓ should handle market sentiment database errors gracefully (7 ms)
      ✓ should handle missing sentiment data without fallbacks (3 ms)
    Response format
      ✓ should return consistent JSON response format (1 ms)
      ✓ should include timestamp in all responses (2 ms)
      ✓ should return real data structure for market endpoint (3 ms)

  console.error
    AI strategy generation error {
      userId: 'test-user-123',
      error: "Cannot read properties of undefined (reading 'generateFromNaturalLanguage')"
    }

      223 |     }
      224 |   } catch (err) {
    > 225 |     console.error("AI strategy generation error", {
          |             ^
      226 |       userId: req.user?.id,
      227 |       error: err.message,
      228 |     });

      at error (routes/strategyBuilder.js:225:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at next (tests/unit/routes/strategyBuilder.test.js:46:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at next (middleware/responseFormatter.js:66:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:137:5
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

  console.error
    AI strategy generation error {
      userId: 'test-user-123',
      error: "Cannot read properties of undefined (reading 'generateFromNaturalLanguage')"
    }

      223 |     }
      224 |   } catch (err) {
    > 225 |     console.error("AI strategy generation error", {
          |             ^
      226 |       userId: req.user?.id,
      227 |       error: err.message,
      228 |     });

      at error (routes/strategyBuilder.js:225:13)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at next (tests/unit/routes/strategyBuilder.test.js:46:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at next (middleware/responseFormatter.js:66:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at node_modules/body-parser/lib/read.js:137:5
      at invokeCallback (node_modules/raw-body/index.js:238:16)
      at done (node_modules/raw-body/index.js:227:7)
      at IncomingMessage.onEnd (node_modules/raw-body/index.js:287:7)

PASS tests/unit/routes/strategyBuilder.test.js
  Strategy Builder Routes
    POST /api/strategies/ai-generate
      ✓ should return 400 for short prompt (17 ms)
      ✓ should return error when no symbols provided (2 ms)
      ✓ should handle empty prompt (3 ms)
      ✓ should use default symbols array when not provided (1 ms)
      ○ skipped should generate strategy successfully (skipped - AI service mock hanging)
      ○ skipped should handle AI generation failure (skipped - AI service mock hanging)
      ○ skipped should handle AI generation service error (skipped - AI service mock hanging)
    POST /api/strategies/validate
      ✓ should validate strategy successfully (2 ms)
      ✓ should return 400 when strategy is missing (2 ms)
      ✓ should return 400 when strategy code is missing (1 ms)
      ✓ should handle validation service error (2 ms)
      ✓ should handle validation with errors and warnings (1 ms)
    POST /api/strategies/run-ai-strategy
      ✓ should return 501 for backtest (not implemented) (2 ms)
      ✓ should return 400 when strategy is missing (2 ms)
      ✓ should return 400 when strategy code is missing (2 ms)
      ✓ should handle missing symbols (2 ms)
    POST /api/strategies/deploy-hft
      ✓ should return 501 for HFT deployment (not implemented) (2 ms)
      ✓ should return 400 when strategy is missing (1 ms)
      ✓ should return 400 when backtest results are missing (2 ms)
      ✓ should reject strategy that doesn't meet HFT requirements (2 ms)
      ✓ should format requirement failures correctly (1 ms)
    GET /api/strategies/available-symbols
      ✓ should return available symbols successfully (5 ms)
      ✓ should handle database error (3 ms)
      ✓ should handle null database result (2 ms)
      ✓ should handle empty symbol result (2 ms)
    GET /api/strategies/list
      ✓ should return user strategies list (2 ms)
      ✓ should handle query parameters (2 ms)
    GET /api/strategies/templates
      ✓ should return strategy templates successfully (2 ms)
      ✓ should handle missing strategy templates (1 ms)
    Error handling and middleware
      ✓ should handle authentication errors gracefully (5 ms)
      ✓ should handle malformed JSON gracefully (3 ms)
      ✓ should log user actions properly (4 ms)
    Response format consistency
      ✓ should maintain consistent success response format (2 ms)
      ✓ should maintain consistent error response format (2 ms)
      ✓ should handle all route parameter combinations (5 ms)

PASS tests/unit/routes/scores.test.js
  Scores Routes Unit Tests
    GET /scores/ping
      ✓ should return ping response (19 ms)
    GET /scores
      ✓ should return scores data from stock_scores table (4 ms)
      ✓ should handle pagination parameters (3 ms)
      ✓ should handle search parameter for filtering stocks (2 ms)
      ✓ should handle limit parameter correctly (3 ms)
      ✓ should include summary statistics (3 ms)
      ✓ should return scores sorted by composite_score DESC by default (3 ms)
      ✓ should cap limit at 200 (2 ms)
      ✓ should handle invalid numeric parameters gracefully (6 ms)
      ✓ should handle database timeout gracefully (2 ms)
    GET /scores/:symbol
      ✓ should return individual symbol score (3 ms)
      ✓ should handle lowercase symbol input (2 ms)
      ✓ should handle non-existent symbol correctly (1 ms)
      ✓ should handle database errors gracefully (2 ms)
    Response format and data validation
      ✓ should return consistent JSON response format (2 ms)
      ✓ should include complete pagination metadata (2 ms)
      ✓ should validate score data types and ranges (1 ms)
    Growth metrics validation
      ✓ should return all 12 growth metrics in factors.growth.inputs (3 ms)
      ✓ should have growth_score populated (2 ms)
      ✓ should document legitimate null values for growth metrics with data constraints (2 ms)
      ✓ should always populate revenue_growth_3y_cagr and eps_growth_3y_cagr when available (2 ms)
      ✓ should have growth_inputs in list view with snake_case naming (2 ms)
      ✓ should explain why quarterly metrics might be N/A in production
    Value metrics schema validation
      ✓ should return complete value_inputs structure matching loader schema (4 ms)
      ✓ should have market benchmarks with valid data when available (3 ms)
      ✓ should have sector benchmarks with reasonable population rate (2 ms)
      ✓ should document legitimate null values in stock-level metrics (2 ms)

  console.log
    📊 [BACKTEST] Getting user backtest results

      at log (routes/backtest.js:889:13)

  console.log
    📊 Retrieving backtest results for ID: test-123

      at log (routes/backtest.js:20:13)

  console.log
    ⚡ Backtest optimization requested - type: grid_search, target: sharpe_ratio

      at log (routes/backtest.js:960:13)

  console.log
    ⚡ Backtest optimization requested - type: grid_search, target: sharpe_ratio

      at log (routes/backtest.js:960:13)

  console.log
    ⚡ Backtest optimization requested - type: grid_search, target: sharpe_ratio

      at log (routes/backtest.js:960:13)

  console.log
    ⚡ Backtest optimization requested - type: genetic_algorithm, target: max_drawdown

      at log (routes/backtest.js:960:13)

  console.log
    ⚡ Backtest optimization requested - type: grid_search, target: sharpe_ratio

      at log (routes/backtest.js:960:13)

PASS tests/unit/routes/backtest.test.js
  Backtest Routes Unit Tests
    GET /backtest/
      ✓ should return backtest info (12 ms)
    GET /backtest/strategies
      ✓ should return strategies list (3 ms)
    POST /backtest/run
      ✓ should handle backtest run request (3 ms)
    GET /backtest/results/:id
      ✓ should return backtest results (3 ms)
    GET /backtest/optimize
      ✓ should return optimization results for valid strategy (5 ms)
      ✓ should require strategy_id parameter (6 ms)
      ✓ should handle invalid parameters JSON (3 ms)
      ✓ should support different optimization types and targets (5 ms)
      ✓ should handle optimization errors gracefully (4 ms)

PASS tests/unit/middleware/errorHandler.test.js
  Error Handler Middleware
    Generic Error Handling
      ✓ should handle generic errors with 500 status (6 ms)
      ✓ should log error details (3 ms)
      ✓ should handle errors without message (2 ms)
    Specific Error Type Handling
      ✓ should handle ValidationError with 400 status (1 ms)
      ✓ should handle custom status errors (2 ms)
      ✓ should handle PostgreSQL unique violation (23505) (1 ms)
      ✓ should handle PostgreSQL foreign key violation (23503) (2 ms)
      ✓ should handle PostgreSQL table missing (42P01) (2 ms)
    Development Environment Behavior
      ✓ should include details in development mode (7 ms)
      ✓ should include validation details in development (2 ms)
    Production Environment Behavior
      ✓ should not include details in production mode (1 ms)
      ✓ should not include validation details in production (2 ms)
    Response Format Consistency
      ✓ should always include required error fields (2 ms)
      ✓ should set correct Content-Type header (1 ms)
      ✓ should maintain consistent error structure across different error types (5 ms)
    Edge Cases
      ✓ should handle null error (2 ms)
      ✓ should handle error objects without stack trace (1 ms)
      ✓ should handle very long error messages (5 ms)
      ✓ should handle special characters in error messages (2 ms)
    PostgreSQL Error Code Coverage
      ✓ should handle unknown PostgreSQL error codes (3 ms)
      ✓ should prioritize custom status over default for PostgreSQL errors (2 ms)

PASS tests/unit/utils/performanceMonitor.test.js
  Performance Monitor
    operation tracking
      ✓ should start and end operations (1 ms)
      ✓ should handle duplicate operation start
      ✓ should handle ending non-existent operation
      ✓ should record operation metrics (11 ms)
    metrics collection
      ✓ should record custom metrics (1 ms)
      ✓ should get performance statistics
      ✓ should calculate system health
    performance analysis
      ✓ should identify slow operations
      ✓ should calculate percentiles (1 ms)
      ✓ should get performance summary
    specialized metrics
      ✓ should track API request metrics
      ✓ should track database metrics (1 ms)
      ✓ should track external API metrics
      ✓ should generate response time histogram
    time utility
      ✓ should time async operations (11 ms)
      ✓ should time sync operations
      ✓ should handle operation errors in time utility (13 ms)
    Express middleware
      ✓ should create middleware function (1 ms)
      ✓ should categorize requests
    alerts and monitoring
      ✓ should get alerts
      ✓ should get active alerts
    data management
      ✓ should export metrics (1 ms)
      ✓ should import metrics
      ✓ should clear history
      ✓ should reset monitor
    advanced analytics
      ✓ should get real-time dashboard data (1 ms)
      ✓ should set custom thresholds
      ✓ should set history size
      ✓ should cleanup memory periodically (1 ms)
      ✓ should cleanup orphaned operations
    error handling and edge cases
      ✓ should handle invalid metrics
      ✓ should handle invalid operation IDs
      ✓ should handle edge case percentile calculations
      ✓ should handle concurrent access (9 ms)

  console.log
    💰 Current price requested for AAPL

      at log (routes/price.js:427:13)

  console.log
    💰 Current price requested for INVALID

      at log (routes/price.js:427:13)

  console.log
    ❌ Invalid symbol format: INVALID

      at log (routes/price.js:457:17)

  console.log
    💰 Current price requested for AAPL

      at log (routes/price.js:427:13)

  console.warn
    Error checking table existence for price_daily: Error: Database connection failed
        at /home/stocks/algo/webapp/lambda/tests/unit/routes/price.test.js:173:31
        at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:397:39
        at /home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:404:13
        at mockConstructor (/home/stocks/algo/webapp/lambda/node_modules/jest-mock/build/index.js:148:19)
        at query (/home/stocks/algo/webapp/lambda/utils/routeHelpers.js:20:26)
        at tableExists (/home/stocks/algo/webapp/lambda/routes/price.js:430:17)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:149:13)
        at Route.dispatch (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/route.js:119:3)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:284:15
        at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:365:14)
        at param (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:376:14)
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:421:3)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at next (/home/stocks/algo/webapp/lambda/middleware/responseFormatter.js:66:3)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
        at router (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:47:12)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at next (/home/stocks/algo/webapp/lambda/middleware/responseFormatter.js:66:3)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at jsonParser (/home/stocks/algo/webapp/lambda/node_modules/body-parser/lib/types/json.js:113:7)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at expressInit (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/init.js:40:5)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at query (/home/stocks/algo/webapp/lambda/node_modules/express/lib/middleware/query.js:45:5)
        at Layer.handle [as handle_request] (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/layer.js:95:5)
        at trim_prefix (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:328:13)
        at /home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:286:9
        at Function.process_params (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:346:12)
        at next (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:280:10)
        at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/router/index.js:175:3)
        at Function.handle (/home/stocks/algo/webapp/lambda/node_modules/express/lib/application.js:181:10)
        at Server.app (/home/stocks/algo/webapp/lambda/node_modules/express/lib/express.js:39:9)
        at Server.emit (node:events:524:28)
        at parserOnIncoming (node:_http_server:1141:12)
        at HTTPParser.parserOnHeadersComplete (node:_http_common:118:17)

      25 |     return result.rows[0].exists;
      26 |   } catch (error) {
    > 27 |     console.warn(`Error checking table existence for ${tableName}:`, error);
         |             ^
      28 |     return false;
      29 |   }
      30 | }

      at warn (utils/routeHelpers.js:27:13)
      at routes/price.js:430:11

  console.log
    ⏰ Intraday data requested for AAPL (interval: 5m)

      at log (routes/price.js:590:13)

  console.log
    ⏰ Intraday data requested for AAPL (interval: 1min)

      at log (routes/price.js:590:13)

  console.log
    ⏰ Intraday data requested for AAPL (interval: invalid)

      at log (routes/price.js:590:13)

  console.log
    📊 Batch price request for 3 symbols

      at log (routes/price.js:672:13)

  console.log
    📊 Batch price request for 101 symbols

      at log (routes/price.js:672:13)

PASS tests/unit/routes/price.test.js
  Price Route - Unit Tests
    GET /api/price/
      ✓ should return API overview (8 ms)
    GET /api/price/ping
      ✓ should return health status (3 ms)
    GET /api/price/:symbol
      ✓ should get current price for valid symbol (3 ms)
      ✓ should handle symbol not found (3 ms)
      ✓ should handle database errors (8 ms)
    GET /api/price/:symbol/intraday
      ✓ should return intraday data with default 5min interval (8 ms)
      ✓ should handle different intervals (3 ms)
      ✓ should validate interval parameter (4 ms)
    POST /api/price/batch
      ✓ should handle batch price requests (4 ms)
      ✓ should validate batch request body (2 ms)
      ✓ should handle large batch size (3 ms)

  console.error
    Error fetching API keys: Error: Database connection failed
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/settings.test.js:76:39)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      408 |     });
      409 |   } catch (error) {
    > 410 |     console.error("Error fetching API keys:", error);
          |             ^
      411 |     res.status(500).json({
      412 |       success: false,
      413 |       error: "Failed to fetch API keys",

      at error (routes/settings.js:410:13)

  console.error
    Error storing API key: Error: API key for this provider already exists
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/settings.test.js:142:21)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      511 |     });
      512 |   } catch (error) {
    > 513 |     console.error("Error storing API key:", error);
          |             ^
      514 |
      515 |     if (error.message.includes("circuit breaker")) {
      516 |       return res.status(503).json({

      at error (routes/settings.js:513:13)

  console.log
    Database not available - using default onboarding status

      at log (routes/settings.js:786:15)

PASS tests/unit/routes/settings.test.js
  Settings API Routes
    GET /api/settings/api-keys
      ✓ should return API keys for authenticated user (10 ms)
      ✓ should handle database errors gracefully (3 ms)
    POST /api/settings/api-keys
      ✓ should add new API key successfully (8 ms)
      ✓ should validate required fields (3 ms)
      ✓ should handle duplicate API key errors (2 ms)
    PUT /api/settings/api-keys/:provider
      ✓ should update API key successfully (2 ms)
      ✓ should handle not found errors (2 ms)
    DELETE /api/settings/api-keys/:provider
      ✓ should delete API key successfully (1 ms)
    GET /api/settings/onboarding-status
      ✓ should return onboarding status (2 ms)
      ✓ should handle missing user gracefully (2 ms)
    POST /api/settings/onboarding-complete
      ✓ should mark onboarding as complete (2 ms)
    GET /api/settings/preferences
      ✓ should return user preferences (1 ms)
      ✓ should handle missing preferences gracefully (2 ms)
    POST /api/settings/preferences
      ✓ should save user preferences (2 ms)
      ✓ should handle invalid preferences format (2 ms)

  console.error
    Earnings query failed for AAPL: Database connection failed

      339 |       result = await query(symbolQuery, [symbol.toUpperCase()]);
      340 |     } catch (error) {
    > 341 |       console.error(`Earnings query failed for ${symbol}:`, error.message);
          |               ^
      342 |       return res.status(500).json({
      343 |         success: false,
      344 |         error: "Earnings query failed",

      at error (routes/earnings.js:341:15)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at next (node_modules/express/lib/router/route.js:149:13)
      at Route.dispatch (node_modules/express/lib/router/route.js:119:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at node_modules/express/lib/router/index.js:284:15
      at param (node_modules/express/lib/router/index.js:365:14)
      at param (node_modules/express/lib/router/index.js:376:14)
      at Function.process_params (node_modules/express/lib/router/index.js:421:3)
      at next (node_modules/express/lib/router/index.js:280:10)
      at next (middleware/responseFormatter.js:66:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at router (node_modules/express/lib/router/index.js:47:12)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at next (middleware/responseFormatter.js:66:3)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at jsonParser (node_modules/body-parser/lib/types/json.js:113:7)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at expressInit (node_modules/express/lib/middleware/init.js:40:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at query (node_modules/express/lib/middleware/query.js:45:5)
      at Layer.handle [as handle_request] (node_modules/express/lib/router/layer.js:95:5)
      at trim_prefix (node_modules/express/lib/router/index.js:328:13)
      at node_modules/express/lib/router/index.js:286:9
      at Function.process_params (node_modules/express/lib/router/index.js:346:12)
      at next (node_modules/express/lib/router/index.js:280:10)
      at Function.handle (node_modules/express/lib/router/index.js:175:3)
      at Function.handle (node_modules/express/lib/application.js:181:10)
      at Server.app (node_modules/express/lib/express.js:39:9)

  console.error
    Earnings query failed: Database query failed

      59 |       result = await query(earningsQuery, [limit, offset]);
      60 |     } catch (error) {
    > 61 |       console.error("Earnings query failed:", error.message);
         |               ^
      62 |       return res.status(500).json({
      63 |         success: false,
      64 |         error: "Earnings query failed",

      at error (routes/earnings.js:61:15)

PASS tests/unit/routes/earnings.test.js
  Earnings Routes
    GET /earnings
      ✓ should return earnings estimates data with default pagination (15 ms)
      ✓ should handle pagination parameters (3 ms)
      ✓ should return empty array when earnings_estimates table doesn't exist (2 ms)
    GET /earnings/calendar
      ✓ should return earnings calendar data (3 ms)
      ✓ should filter by period parameter (2 ms)
      ✓ should filter by date range (3 ms)
    GET /earnings/surprises
      ✓ should return earnings surprises data (3 ms)
      ✓ should filter by symbol (2 ms)
      ✓ should filter by minimum surprise percentage (2 ms)
    GET /earnings/:symbol
      ✓ should return earnings data for specific symbol (2 ms)
      ✓ should return 404 for symbol with no data (2 ms)
      ✓ should handle database errors gracefully (10 ms)
    Error handling
      ✓ should handle database query failures (3 ms)
      ✓ should handle calendar query failures (2 ms)

  console.log
    🔐 Two-factor authentication enable request for user: test-user-123

      at log (routes/user.js:607:13)

  console.log
    ✅ 2FA secret generated and saved for user: test-user-123

      at log (routes/user.js:664:17)

  console.log
    🔐 Two-factor authentication enable request for user: test-user-123

      at log (routes/user.js:607:13)

  console.error
    Failed to save 2FA secret to database: Error: Database connection failed
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/user.test.js:92:39)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      656 |           );
      657 |         } catch (dbError) {
    > 658 |           console.error("Failed to save 2FA secret to database:", dbError);
          |                   ^
      659 |           // Continue with setup even if DB save fails - allow manual backup
      660 |         }
      661 |

      at error (routes/user.js:658:19)

  console.log
    ✅ 2FA secret generated and saved for user: test-user-123

      at log (routes/user.js:664:17)

  console.log
    🔐 Two-factor authentication verify request for user: test-user-123

      at log (routes/user.js:607:13)

  console.log
    ✅ 2FA verified and activated for user: test-user-123

      at log (routes/user.js:741:19)

  console.log
    🔐 Two-factor authentication verify request for user: test-user-123

      at log (routes/user.js:607:13)

  console.log
    🔐 Two-factor authentication verify request for user: test-user-123

      at log (routes/user.js:607:13)

  console.log
    🔐 Two-factor authentication disable request for user: test-user-123

      at log (routes/user.js:607:13)

  console.log
    ✅ 2FA disabled for user: test-user-123

      at log (routes/user.js:815:19)

  console.log
    🔐 Two-factor authentication disable request for user: test-user-123

      at log (routes/user.js:607:13)

PASS tests/unit/routes/user.test.js
  User Routes - 2FA Functionality
    POST /user/two-factor (enable)
      ✓ should enable 2FA and save secret to database (15 ms)
      ✓ should handle database errors gracefully during setup (6 ms)
    POST /user/two-factor (verify)
      ✓ should verify 2FA code and activate (4 ms)
      ✓ should reject invalid 2FA codes (3 ms)
      ✓ should handle missing 2FA setup (7 ms)
    POST /user/two-factor (disable)
      ✓ should disable 2FA after verifying current code (3 ms)
      ✓ should require valid code to disable (4 ms)
    Error handling
      ✓ should require action parameter (2 ms)
      ✓ should require userId parameter (2 ms)
      ✓ should handle invalid actions (1 ms)

PASS tests/unit/middleware/responseFormatter.test.js
  Response Formatter Middleware
    Middleware Setup
      ✓ should add API version header (3 ms)
      ✓ should add all response methods to res object (3 ms)
    res.success method
      ✓ should call responseFormatter.success with correct parameters (4 ms)
      ✓ should use default status code 200 (1 ms)
      ✓ should use default empty meta object (2 ms)
    res.error method
      ✓ should call responseFormatter.error with correct parameters (2 ms)
      ✓ should use default status code 400 (1 ms)
    res.paginated method
      ✓ should call responseFormatter.paginated with correct parameters (2 ms)
      ✓ should use default empty meta object (2 ms)
    res.validationError method
      ✓ should call responseFormatter.validationError with correct parameters (2 ms)
    res.notFound method
      ✓ should call responseFormatter.notFound with custom resource (6 ms)
      ✓ should use default resource name (2 ms)
    res.unauthorized method
      ✓ should call responseFormatter.unauthorized with custom message (2 ms)
      ✓ should use default message (2 ms)
    res.forbidden method
      ✓ should call responseFormatter.forbidden with custom message (2 ms)
      ✓ should use default message (4 ms)
    res.serverError method
      ✓ should call responseFormatter.serverError with custom message and details (2 ms)
      ✓ should use default message and empty details (1 ms)
    Integration Tests
      ✓ should work with multiple methods in sequence (3 ms)
      ✓ should maintain API version header across all responses (7 ms)
      ✓ should handle chained method calls (2 ms)

  console.log
    📊 Metrics endpoint called

      at log (routes/metrics.js:152:13)

  console.log
    📊 Metrics endpoint called

      at log (routes/metrics.js:152:13)

  console.log
    📊 Metrics endpoint called

      at log (routes/metrics.js:152:13)

  console.log
    📊 Metrics endpoint called

      at log (routes/metrics.js:152:13)

  console.log
    📊 Metrics endpoint called

      at log (routes/metrics.js:152:13)

  console.log
    📊 Metrics endpoint called

      at log (routes/metrics.js:152:13)

PASS tests/unit/routes/metrics.test.js
  Metrics Routes
    GET /metrics/ping
      ✓ should return ping status (10 ms)
    GET /metrics/
      ✓ should return comprehensive metrics with default pagination (13 ms)
      ✓ should handle search filtering (4 ms)
      ✓ should handle sector filtering (4 ms)
      ✓ should handle metric range filtering (4 ms)
      ✓ should prevent SQL injection in sort parameters (5 ms)
      ✓ should limit page size to maximum (3 ms)

  console.error
    Error fetching watchlists: Error: Database connection failed
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/watchlist.test.js:63:35)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      52 |     });
      53 |   } catch (error) {
    > 54 |     console.error("Error fetching watchlists:", error);
         |             ^
      55 |     res.status(500).json({
      56 |       success: false,
      57 |       error: "Failed to fetch watchlists",

      at error (routes/watchlist.js:54:13)

  console.error
    Error fetching watchlists: Error: Connection timeout
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/watchlist.test.js:265:35)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      52 |     });
      53 |   } catch (error) {
    > 54 |     console.error("Error fetching watchlists:", error);
         |             ^
      55 |     res.status(500).json({
      56 |       success: false,
      57 |       error: "Failed to fetch watchlists",

      at error (routes/watchlist.js:54:13)

PASS tests/unit/routes/watchlist.test.js
  Watchlist Routes
    GET /api/watchlist/
      ✓ should return user watchlists (9 ms)
      ✓ should handle empty watchlists (3 ms)
      ✓ should handle database errors (4 ms)
    POST /api/watchlist/
      ✓ should create new watchlist (6 ms)
      ✓ should validate required fields (8 ms)
    GET /api/watchlist/:id
      ✓ should return watchlist details (3 ms)
      ✓ should handle watchlist not found (2 ms)
    POST /api/watchlist/:id/items
      ✓ should add symbol to watchlist (2 ms)
      ✓ should validate symbol format (2 ms)
    DELETE /api/watchlist/:id/items/:symbol
      ✓ should remove symbol from watchlist (2 ms)
      ✓ should handle symbol not in watchlist (1 ms)
    DELETE /api/watchlist/:id
      ✓ should delete watchlist (1 ms)
      ✓ should handle watchlist not found (2 ms)
    Error handling
      ✓ should handle database connection failures (2 ms)
      ✓ should handle invalid watchlist IDs (2 ms)

  console.log
    📊 Dashboard overview requested

      at log (routes/dashboard.js:973:13)

  console.log
    🔍 Executing overview queries...

      at log (routes/dashboard.js:1056:13)

  console.log
    📊 Overview data prepared: 2 key metrics, 2 movers, 2 sectors

      at log (routes/dashboard.js:1068:13)

  console.log
    🧩 Dashboard widgets requested

      at log (routes/dashboard.js:1544:13)

PASS tests/unit/routes/dashboard.test.js
  Dashboard Routes Unit Tests
    GET /dashboard/
      ✓ should return dashboard info (6 ms)
    GET /dashboard/overview
      ✓ should handle dashboard overview (5 ms)
    GET /dashboard/widgets
      ✓ should handle dashboard widgets (2 ms)

PASS tests/integration/utils/backtestStore.test.js
  Backtest Store Integration Tests
    Strategy Management Operations
      ✓ should add strategy and return strategy with ID (5 ms)
      ✓ should get strategy by ID
      ✓ should load all stored strategies (1 ms)
      ✓ should delete strategy by ID
      ✓ should return undefined for non-existent strategy
      ✓ should handle empty store gracefully (4 ms)
    File System Integration
      ✓ should persist data to file system (1 ms)
      ✓ should create file if it doesn't exist
      ✓ should save strategies to file system (1 ms)
      ✓ should verify file persistence
    Error Handling
      ✓ should handle concurrent access safely (1 ms)
      ✓ should handle malformed strategy data gracefully (7 ms)
      ✓ should generate unique IDs for strategies (3 ms)
      ✓ should handle large datasets (3 ms)
    Strategy Data Validation
      ✓ should store and retrieve complex strategy data (2 ms)
      ✓ should maintain data integrity across operations (19 ms)

PASS tests/unit/utils/factorScoring.test.js
  FactorScoringEngine
    constructor
      ✓ should initialize with default factors
      ✓ should initialize with custom factors
    calculateCompositeScore
      ✓ should calculate composite score for valid stock data
      ✓ should calculate score with universe data for percentile ranking (1 ms)
      ✓ should handle missing data gracefully
      ✓ should handle null stock data
      ✓ should handle errors gracefully (1 ms)
      ✓ should handle calculation errors
    calculateCategoryScore
      ✓ should calculate category score with valid factors
      ✓ should return null with no valid factors
      ✓ should handle null and undefined values
      ✓ should handle NaN values
    calculatePercentileScore
      ✓ should calculate percentile score correctly (1 ms)
      ✓ should invert percentile for inverse factors
      ✓ should fall back to absolute score with insufficient data
      ✓ should handle errors gracefully (1 ms)
    calculateAbsoluteScore
      ✓ should score using predefined ranges
      ✓ should use linear score for unknown factors
      ✓ should return default score when no range matches
    getFactorScoringRanges
      ✓ should return ranges for known factors
      ✓ should return null for unknown factors
    linearScore
      ✓ should calculate sigmoid-based score
      ✓ should invert score when inverse is true
    scoreUniverse
      ✓ should score and rank universe (1 ms)
      ✓ should apply custom weights
      ✓ should handle empty universe
      ✓ should handle null universe
      ✓ should handle scoring errors (19 ms)
    applyCustomWeights
      ✓ should apply and normalize custom weights
      ✓ should ignore unknown categories (1 ms)
      ✓ should handle zero total weight
    getFactorExplanations
      ✓ should provide detailed factor explanations (1 ms)
      ✓ should skip null and undefined values
    interpretFactorScore
      ✓ should provide correct interpretations
    getFactorDefinitions
      ✓ should return current factor definitions
    createCustomProfile
      ✓ should create custom profile with metadata
      ✓ should handle empty description (1 ms)
    rankUniverse
      ✓ should rank universe with accessible properties
      ✓ should handle empty universe in rankUniverse
    calculateUniverseStats
      ✓ should calculate comprehensive statistics (1 ms)
      ✓ should skip factors with no valid data
    analyzeFactors
      ✓ should provide comprehensive factor analysis (2 ms)
    calculateFactorCorrelations
      ✓ should calculate correlation matrix
    calculateCorrelation
      ✓ should calculate perfect positive correlation
      ✓ should handle insufficient data (1 ms)
      ✓ should handle zero denominator
    identifyTopFactors
      ✓ should identify top performing factors (3 ms)
      ✓ should handle single value factors
    calculateVariance
      ✓ should calculate variance correctly
      ✓ should handle insufficient data (1 ms)
    normalizeFactors
      ✓ should normalize to 0-1 range
      ✓ should invert when inverse is true
      ✓ should handle edge cases
    calculateQuartiles
      ✓ should calculate quartiles for sufficient data
      ✓ should handle insufficient data (1 ms)
      ✓ should filter out invalid values
    screenByFactors
      ✓ should filter by composite score
      ✓ should filter by max composite score
      ✓ should filter by percentile
      ✓ should filter by category scores
      ✓ should filter out stocks without factor scores (1 ms)
    exported functions
      ✓ calculateCompositeScore should work
      ✓ scoreUniverse should work
      ✓ getFactorExplanations should work
      ✓ getFactorDefinitions should work
      ✓ createCustomProfile should work
      ✓ screenByFactors should work
      ✓ FACTOR_DEFINITIONS should be exported

PASS tests/unit/routes/risk.test.js
  Risk Routes Integration Tests
    GET /risk/health
      ✓ should return health status without authentication (20 ms)
    GET /risk
      ✓ should return risk API information without authentication (3 ms)
    GET /risk/analysis (authenticated)
      ○ skipped should return risk analysis for empty portfolio - SKIPPED: performance issues
      ○ skipped should handle different period parameters - SKIPPED: performance issues
      ○ skipped should handle invalid period gracefully - SKIPPED: performance issues
      ○ skipped should accept confidence level parameter - SKIPPED: performance issues
      ○ skipped should handle invalid confidence level gracefully - SKIPPED: performance issues
    Authentication middleware
      ✓ should protect analysis endpoint
      ✓ should allow public health endpoint (2 ms)
      ✓ should allow public root endpoint (3 ms)
    Response format
      ✓ should return consistent JSON response (2 ms)

  console.error
    Analyst upgrades error: Error: Database connection failed
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/analysts.test.js:163:35)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      86 |
      87 |   } catch (error) {
    > 88 |     console.error("Analyst upgrades error:", error);
         |             ^
      89 |     res.status(500).json({
      90 |       success: false,
      91 |       error: "Failed to fetch analyst upgrades",

      at error (routes/analysts.js:88:13)

  console.error
    Analyst data error for symbol INVALID: Error: Symbol not found
        at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/unit/routes/analysts.test.js:179:35)
        at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)
        at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)
        at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)
        at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
        at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
        at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)
        at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)

      621 |
      622 |   } catch (error) {
    > 623 |     console.error(`Analyst data error for symbol ${req.params.symbol}:`, error);
          |             ^
      624 |     res.status(500).json({
      625 |       success: false,
      626 |       error: "Failed to fetch analyst data for symbol",

      at error (routes/analysts.js:623:13)

PASS tests/unit/routes/analysts.test.js
  Analyst Routes Unit Tests - Real YFinance Data
    GET /api/analysts/
      ✓ should return API overview with real YFinance endpoints (8 ms)
    GET /api/analysts/upgrades
      ✓ should return analyst upgrades from real YFinance data (2 ms)
      ✓ should handle pagination parameters (2 ms)
    GET /api/analysts/revenue-estimates
      ✓ should return revenue estimates from real YFinance data (2 ms)
    GET /api/analysts/:symbol
      ✓ should return all analyst data for a symbol from real YFinance tables (6 ms)
    Error Handling
      ✓ should handle database query failures (6 ms)
      ✓ should handle null database results (2 ms)
      ✓ should handle symbol-specific query failures (3 ms)

  console.log
    [2025-10-19T11:49:36.130Z] [ERROR] [81cec17e] Test error message

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    Context: {
      "userId": "test123",
      "operation": "test"
    }

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    [2025-10-19T11:49:36.139Z] [WARN] [4a2baf71] Test warning message

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    [2025-10-19T11:49:36.140Z] [INFO] [1a21bb07] Test info message

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    [2025-10-19T11:49:36.141Z] [INFO] [d155f18f] Database operation: SELECT * FROM company_profile

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    Context: {
      "duration": 150,
      "rows": 25,
      "component": "database",
      "operation": "SELECT * FROM company_profile"
    }

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    [2025-10-19T11:49:36.142Z] [INFO] [ad998fb5] API call: GET /api/portfolio

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    Context: {
      "userId": "test123",
      "component": "api-client",
      "method": "GET",
      "url": "/api/portfolio"
    }

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    [2025-10-19T11:49:36.146Z] [INFO] [e10aa884] Authentication event: login_success

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    Context: {
      "userId": "test123",
      "ip": "127.0.0.1",
      "component": "auth",
      "event": "login_success"
    }

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    [2025-10-19T11:49:36.148Z] [INFO] [8b995ae3] Performance: portfolio_calculation completed in 250ms

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    Context: {
      "symbols": 10,
      "userId": "test123",
      "component": "performance",
      "operation": "portfolio_calculation",
      "duration_ms": 250
    }

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    [2025-10-19T11:49:36.149Z] [WARN] [d6c13991] Security event: unauthorized_access_attempt

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    Context: {
      "ip": "192.168.1.100",
      "endpoint": "/admin",
      "component": "security",
      "event": "unauthorized_access_attempt"
    }

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    [1760874576150] [INFO] [054084de] User action: portfolio_view

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    Context: {
      "symbol": "AAPL",
      "component": "user-action",
      "userId": "test_use...",
      "action": "portfolio_view"
    }

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    [2025-10-19T11:49:36.152Z] [INFO] [229fbbdf] Portfolio calculation completed

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    Context: {
      "userId": "test123",
      "portfolioId": "port456",
      "symbols": [
        "AAPL",
        "GOOGL",
        "MSFT"
      ],
      "metrics": {
        "total_value": 1250000,
        "gainLoss": 5000,
        "returnPercent": 5
      },
      "duration": 150
    }

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    [2025-10-19T11:49:36.153Z] [ERROR] [e3804790] Database operation failed

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    Context: {
      "error": {
        "name": "Error",
        "message": "Test database connection error",
        "stack": "Error: Test database connection error\n    at Object.<anonymous> (/home/stocks/algo/webapp/lambda/tests/integration/utils/logger.test.js:310:21)\n    at Promise.then.completed (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:121:9)\n    at run (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/home/stocks/algo/webapp/lambda/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/home/stocks/algo/webapp/lambda/node_modules/jest-runner/build/runTest.js:444:34)",
        "code": "DB_CONNECTION_FAILED"
      }
    }

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    [2025-10-19T11:49:36.165Z] [INFO] [b87da8fd] Configuration loaded

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    Context: {
      "component": "config",
      "config": {
        "appName": "test-app",
        "version": "1.0.0",
        "apiKey": "[REDACTED]"
      }
    }

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    [2025-10-19T11:49:36.166Z] [INFO] [044755f6] Application starting

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    Context: {
      "port": 3000,
      "env": "test",
      "component": "startup",
      "nodeVersion": "v20.19.4",
      "pid": 570045,
      "memory": {
        "rss": 989155328,
        "heapTotal": 814534656,
        "heapUsed": 772915032,
        "external": 74783652,
        "arrayBuffers": 71318897
      }
    }

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    [2025-10-19T11:49:36.167Z] [INFO] [67bdfe8d] Application shutting down

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    Context: {
      "reason": "test_shutdown",
      "component": "shutdown",
      "uptime": 50.925757125
    }

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    [2025-10-19T11:49:36.173Z] [INFO] [bd362f56] Child logger test message

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    Context: {
      "requestId": "req_789",
      "userId": "user_xyz"
    }

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    [2025-10-19T11:49:36.175Z] [WARN] [fc9d20a1] Performance: slow_database_query completed in 6000ms

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    Context: {
      "query": "SELECT * FROM large_table",
      "component": "performance",
      "operation": "slow_database_query",
      "duration_ms": 6000,
      "slow_operation": true
    }

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    [2025-10-19T11:49:36.176Z] [INFO] [ae4f2fb0] Performance: fast_api_call completed in 100ms

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    Context: {
      "endpoint": "/api/health",
      "component": "performance",
      "operation": "fast_api_call",
      "duration_ms": 100
    }

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    [2025-10-19T11:49:36.177Z] [INFO] [7164eb60] Test message

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    [2025-10-19T11:49:36.178Z] [INFO] [b115bed7] Test message

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    [2025-10-19T11:49:36.179Z] [INFO] [9d1ccc85] Test message

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    [2025-10-19T11:49:36.180Z] [INFO] [1829e8ec] Circular reference test

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    Context: {
      "data": {
        "name": "test",
        "self": "[Circular]"
      }
    }

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    [2025-10-19T11:49:36.181Z] [INFO] [7a77ccdd] Large context test

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

  console.log
    Context: {
      "data": [
        {
          "id": 0,
          "value": "item_0"
        },
        {
          "id": 1,
          "value": "item_1"
        },
        {
          "id": 2,
          "value": "item_2"
        },
        {
          "id": 3,
          "value": "item_3"
        },
        {
          "id": 4,
          "value": "item_4"
        },
        {
          "id": 5,
          "value": "item_5"
        },
        {
          "id": 6,
          "value": "item_6"
        },
        {
          "id": 7,
          "value": "item_7"
        },
        {
          "id": 8,
          "value": "item_8"
        },
        {
          "id": 9,
          "value": "item_9"
        },
        {
          "id": 10,
          "value": "item_10"
        },
        {
          "id": 11,
          "value": "item_11"
        },
        {
          "id": 12,
          "value": "item_12"
        },
        {
          "id": 13,
          "value": "item_13"
        },
        {
          "id": 14,
          "value": "item_14"
        },
        {
          "id": 15,
          "value": "item_15"
        },
        {
          "id": 16,
          "value": "item_16"
        },
        {
          "id": 17,
          "value": "item_17"
        },
        {
          "id": 18,
          "value": "item_18"
        },
        {
          "id": 19,
          "value": "item_19"
        },
        {
          "id": 20,
          "value": "item_20"
        },
        {
          "id": 21,
          "value": "item_21"
        },
        {
          "id": 22,
          "value": "item_22"
        },
        {
          "id": 23,
          "value": "item_23"
        },
        {
          "id": 24,
          "value": "item_24"
        },
        {
          "id": 25,
          "value": "item_25"
        },
        {
          "id": 26,
          "value": "item_26"
        },
        {
          "id": 27,
          "value": "item_27"
        },
        {
          "id": 28,
          "value": "item_28"
        },
        {
          "id": 29,
          "value": "item_29"
        },
        {
          "id": 30,
          "value": "item_30"
        },
        {
          "id": 31,
          "value": "item_31"
        },
        {
          "id": 32,
          "value": "item_32"
        },
        {
          "id": 33,
          "value": "item_33"
        },
        {
          "id": 34,
          "value": "item_34"
        },
        {
          "id": 35,
          "value": "item_35"
        },
        {
          "id": 36,
          "value": "item_36"
        },
        {
          "id": 37,
          "value": "item_37"
        },
        {
          "id": 38,
          "value": "item_38"
        },
        {
          "id": 39,
          "value": "item_39"
        },
        {
          "id": 40,
          "value": "item_40"
        },
        {
          "id": 41,
          "value": "item_41"
        },
        {
          "id": 42,
          "value": "item_42"
        },
        {
          "id": 43,
          "value": "item_43"
        },
        {
          "id": 44,
          "value": "item_44"
        },
        {
          "id": 45,
          "value": "item_45"
        },
        {
          "id": 46,
          "value": "item_46"
        },
        {
          "id": 47,
          "value": "item_47"
        },
        {
          "id": 48,
          "value": "item_48"
        },
        {
          "id": 49,
          "value": "item_49"
        },
        {
          "id": 50,
          "value": "item_50"
        },
        {
          "id": 51,
          "value": "item_51"
        },
        {
          "id": 52,
          "value": "item_52"
        },
        {
          "id": 53,
          "value": "item_53"
        },
        {
          "id": 54,
          "value": "item_54"
        },
        {
          "id": 55,
          "value": "item_55"
        },
        {
          "id": 56,
          "value": "item_56"
        },
        {
          "id": 57,
          "value": "item_57"
        },
        {
          "id": 58,
          "value": "item_58"
        },
        {
          "id": 59,
          "value": "item_59"
        },
        {
          "id": 60,
          "value": "item_60"
        },
        {
          "id": 61,
          "value": "item_61"
        },
        {
          "id": 62,
          "value": "item_62"
        },
        {
          "id": 63,
          "value": "item_63"
        },
        {
          "id": 64,
          "value": "item_64"
        },
        {
          "id": 65,
          "value": "item_65"
        },
        {
          "id": 66,
          "value": "item_66"
        },
        {
          "id": 67,
          "value": "item_67"
        },
        {
          "id": 68,
          "value": "item_68"
        },
        {
          "id": 69,
          "value": "item_69"
        },
        {
          "id": 70,
          "value": "item_70"
        },
        {
          "id": 71,
          "value": "item_71"
        },
        {
          "id": 72,
          "value": "item_72"
        },
        {
          "id": 73,
          "value": "item_73"
        },
        {
          "id": 74,
          "value": "item_74"
        },
        {
          "id": 75,
          "value": "item_75"
        },
        {
          "id": 76,
          "value": "item_76"
        },
        {
          "id": 77,
          "value": "item_77"
        },
        {
          "id": 78,
          "value": "item_78"
        },
        {
          "id": 79,
          "value": "item_79"
        },
        {
          "id": 80,
          "value": "item_80"
        },
        {
          "id": 81,
          "value": "item_81"
        },
        {
          "id": 82,
          "value": "item_82"
        },
        {
          "id": 83,
          "value": "item_83"
        },
        {
          "id": 84,
          "value": "item_84"
        },
        {
          "id": 85,
          "value": "item_85"
        },
        {
          "id": 86,
          "value": "item_86"
        },
        {
          "id": 87,
          "value": "item_87"
        },
        {
          "id": 88,
          "value": "item_88"
        },
        {
          "id": 89,
          "value": "item_89"
        },
        {
          "id": 90,
          "value": "item_90"
        },
        {
          "id": 91,
          "value": "item_91"
        },
        {
          "id": 92,
          "value": "item_92"
        },
        {
          "id": 93,
          "value": "item_93"
        },
        {
          "id": 94,
          "value": "item_94"
        },
        {
          "id": 95,
          "value": "item_95"
        },
        {
          "id": 96,
          "value": "item_96"
        },
        {
          "id": 97,
          "value": "item_97"
        },
        {
          "id": 98,
          "value": "item_98"
        },
        {
          "id": 99,
          "value": "item_99"
        },
        {
          "id": 100,
          "value": "item_100"
        },
        {
          "id": 101,
          "value": "item_101"
        },
        {
          "id": 102,
          "value": "item_102"
        },
        {
          "id": 103,
          "value": "item_103"
        },
        {
          "id": 104,
          "value": "item_104"
        },
        {
          "id": 105,
          "value": "item_105"
        },
        {
          "id": 106,
          "value": "item_106"
        },
        {
          "id": 107,
          "value": "item_107"
        },
        {
          "id": 108,
          "value": "item_108"
        },
        {
          "id": 109,
          "value": "item_109"
        },
        {
          "id": 110,
          "value": "item_110"
        },
        {
          "id": 111,
          "value": "item_111"
        },
        {
          "id": 112,
          "value": "item_112"
        },
        {
          "id": 113,
          "value": "item_113"
        },
        {
          "id": 114,
          "value": "item_114"
        },
        {
          "id": 115,
          "value": "item_115"
        },
        {
          "id": 116,
          "value": "item_116"
        },
        {
          "id": 117,
          "value": "item_117"
        },
        {
          "id": 118,
          "value": "item_118"
        },
        {
          "id": 119,
          "value": "item_119"
        },
        {
          "id": 120,
          "value": "item_120"
        },
        {
          "id": 121,
          "value": "item_121"
        },
        {
          "id": 122,
          "value": "item_122"
        },
        {
          "id": 123,
          "value": "item_123"
        },
        {
          "id": 124,
          "value": "item_124"
        },
        {
          "id": 125,
          "value": "item_125"
        },
        {
          "id": 126,
          "value": "item_126"
        },
        {
          "id": 127,
          "value": "item_127"
        },
        {
          "id": 128,
          "value": "item_128"
        },
        {
          "id": 129,
          "value": "item_129"
        },
        {
          "id": 130,
          "value": "item_130"
        },
        {
          "id": 131,
          "value": "item_131"
        },
        {
          "id": 132,
          "value": "item_132"
        },
        {
          "id": 133,
          "value": "item_133"
        },
        {
          "id": 134,
          "value": "item_134"
        },
        {
          "id": 135,
          "value": "item_135"
        },
        {
          "id": 136,
          "value": "item_136"
        },
        {
          "id": 137,
          "value": "item_137"
        },
        {
          "id": 138,
          "value": "item_138"
        },
        {
          "id": 139,
          "value": "item_139"
        },
        {
          "id": 140,
          "value": "item_140"
        },
        {
          "id": 141,
          "value": "item_141"
        },
        {
          "id": 142,
          "value": "item_142"
        },
        {
          "id": 143,
          "value": "item_143"
        },
        {
          "id": 144,
          "value": "item_144"
        },
        {
          "id": 145,
          "value": "item_145"
        },
        {
          "id": 146,
          "value": "item_146"
        },
        {
          "id": 147,
          "value": "item_147"
        },
        {
          "id": 148,
          "value": "item_148"
        },
        {
          "id": 149,
          "value": "item_149"
        },
        {
          "id": 150,
          "value": "item_150"
        },
        {
          "id": 151,
          "value": "item_151"
        },
        {
          "id": 152,
          "value": "item_152"
        },
        {
          "id": 153,
          "value": "item_153"
        },
        {
          "id": 154,
          "value": "item_154"
        },
        {
          "id": 155,
          "value": "item_155"
        },
        {
          "id": 156,
          "value": "item_156"
        },
        {
          "id": 157,
          "value": "item_157"
        },
        {
          "id": 158,
          "value": "item_158"
        },
        {
          "id": 159,
          "value": "item_159"
        },
        {
          "id": 160,
          "value": "item_160"
        },
        {
          "id": 161,
          "value": "item_161"
        },
        {
          "id": 162,
          "value": "item_162"
        },
        {
          "id": 163,
          "value": "item_163"
        },
        {
          "id": 164,
          "value": "item_164"
        },
        {
          "id": 165,
          "value": "item_165"
        },
        {
          "id": 166,
          "value": "item_166"
        },
        {
          "id": 167,
          "value": "item_167"
        },
        {
          "id": 168,
          "value": "item_168"
        },
        {
          "id": 169,
          "value": "item_169"
        },
        {
          "id": 170,
          "value": "item_170"
        },
        {
          "id": 171,
          "value": "item_171"
        },
        {
          "id": 172,
          "value": "item_172"
        },
        {
          "id": 173,
          "value": "item_173"
        },
        {
          "id": 174,
          "value": "item_174"
        },
        {
          "id": 175,
          "value": "item_175"
        },
        {
          "id": 176,
          "value": "item_176"
        },
        {
          "id": 177,
          "value": "item_177"
        },
        {
          "id": 178,
          "value": "item_178"
        },
        {
          "id": 179,
          "value": "item_179"
        },
        {
          "id": 180,
          "value": "item_180"
        },
        {
          "id": 181,
          "value": "item_181"
        },
        {
          "id": 182,
          "value": "item_182"
        },
        {
          "id": 183,
          "value": "item_183"
        },
        {
          "id": 184,
          "value": "item_184"
        },
        {
          "id": 185,
          "value": "item_185"
        },
        {
          "id": 186,
          "value": "item_186"
        },
        {
          "id": 187,
          "value": "item_187"
        },
        {
          "id": 188,
          "value": "item_188"
        },
        {
          "id": 189,
          "value": "item_189"
        },
        {
          "id": 190,
          "value": "item_190"
        },
        {
          "id": 191,
          "value": "item_191"
        },
        {
          "id": 192,
          "value": "item_192"
        },
        {
          "id": 193,
          "value": "item_193"
        },
        {
          "id": 194,
          "value": "item_194"
        },
        {
          "id": 195,
          "value": "item_195"
        },
        {
          "id": 196,
          "value": "item_196"
        },
        {
          "id": 197,
          "value": "item_197"
        },
        {
          "id": 198,
          "value": "item_198"
        },
        {
          "id": 199,
          "value": "item_199"
        },
        {
          "id": 200,
          "value": "item_200"
        },
        {
          "id": 201,
          "value": "item_201"
        },
        {
          "id": 202,
          "value": "item_202"
        },
        {
          "id": 203,
          "value": "item_203"
        },
        {
          "id": 204,
          "value": "item_204"
        },
        {
          "id": 205,
          "value": "item_205"
        },
        {
          "id": 206,
          "value": "item_206"
        },
        {
          "id": 207,
          "value": "item_207"
        },
        {
          "id": 208,
          "value": "item_208"
        },
        {
          "id": 209,
          "value": "item_209"
        },
        {
          "id": 210,
          "value": "item_210"
        },
        {
          "id": 211,
          "value": "item_211"
        },
        {
          "id": 212,
          "value": "item_212"
        },
        {
          "id": 213,
          "value": "item_213"
        },
        {
          "id": 214,
          "value": "item_214"
        },
        {
          "id": 215,
          "value": "item_215"
        },
        {
          "id": 216,
          "value": "item_216"
        },
        {
          "id": 217,
          "value": "item_217"
        },
        {
          "id": 218,
          "value": "item_218"
        },
        {
          "id": 219,
          "value": "item_219"
        },
        {
          "id": 220,
          "value": "item_220"
        },
        {
          "id": 221,
          "value": "item_221"
        },
        {
          "id": 222,
          "value": "item_222"
        },
        {
          "id": 223,
          "value": "item_223"
        },
        {
          "id": 224,
          "value": "item_224"
        },
        {
          "id": 225,
          "value": "item_225"
        },
        {
          "id": 226,
          "value": "item_226"
        },
        {
          "id": 227,
          "value": "item_227"
        },
        {
          "id": 228,
          "value": "item_228"
        },
        {
          "id": 229,
          "value": "item_229"
        },
        {
          "id": 230,
          "value": "item_230"
        },
        {
          "id": 231,
          "value": "item_231"
        },
        {
          "id": 232,
          "value": "item_232"
        },
        {
          "id": 233,
          "value": "item_233"
        },
        {
          "id": 234,
          "value": "item_234"
        },
        {
          "id": 235,
          "value": "item_235"
        },
        {
          "id": 236,
          "value": "item_236"
        },
        {
          "id": 237,
          "value": "item_237"
        },
        {
          "id": 238,
          "value": "item_238"
        },
        {
          "id": 239,
          "value": "item_239"
        },
        {
          "id": 240,
          "value": "item_240"
        },
        {
          "id": 241,
          "value": "item_241"
        },
        {
          "id": 242,
          "value": "item_242"
        },
        {
          "id": 243,
          "value": "item_243"
        },
        {
          "id": 244,
          "value": "item_244"
        },
        {
          "id": 245,
          "value": "item_245"
        },
        {
          "id": 246,
          "value": "item_246"
        },
        {
          "id": 247,
          "value": "item_247"
        },
        {
          "id": 248,
          "value": "item_248"
        },
        {
          "id": 249,
          "value": "item_249"
        },
        {
          "id": 250,
          "value": "item_250"
        },
        {
          "id": 251,
          "value": "item_251"
        },
        {
          "id": 252,
          "value": "item_252"
        },
        {
          "id": 253,
          "value": "item_253"
        },
        {
          "id": 254,
          "value": "item_254"
        },
        {
          "id": 255,
          "value": "item_255"
        },
        {
          "id": 256,
          "value": "item_256"
        },
        {
          "id": 257,
          "value": "item_257"
        },
        {
          "id": 258,
          "value": "item_258"
        },
        {
          "id": 259,
          "value": "item_259"
        },
        {
          "id": 260,
          "value": "item_260"
        },
        {
          "id": 261,
          "value": "item_261"
        },
        {
          "id": 262,
          "value": "item_262"
        },
        {
          "id": 263,
          "value": "item_263"
        },
        {
          "id": 264,
          "value": "item_264"
        },
        {
          "id": 265,
          "value": "item_265"
        },
        {
          "id": 266,
          "value": "item_266"
        },
        {
          "id": 267,
          "value": "item_267"
        },
        {
          "id": 268,
          "value": "item_268"
        },
        {
          "id": 269,
          "value": "item_269"
        },
        {
          "id": 270,
          "value": "item_270"
        },
        {
          "id": 271,
          "value": "item_271"
        },
        {
          "id": 272,
          "value": "item_272"
        },
        {
          "id": 273,
          "value": "item_273"
        },
        {
          "id": 274,
          "value": "item_274"
        },
        {
          "id": 275,
          "value": "item_275"
        },
        {
          "id": 276,
          "value": "item_276"
        },
        {
          "id": 277,
          "value": "item_277"
        },
        {
          "id": 278,
          "value": "item_278"
        },
        {
          "id": 279,
          "value": "item_279"
        },
        {
          "id": 280,
          "value": "item_280"
        },
        {
          "id": 281,
          "value": "item_281"
        },
        {
          "id": 282,
          "value": "item_282"
        },
        {
          "id": 283,
          "value": "item_283"
        },
        {
          "id": 284,
          "value": "item_284"
        },
        {
          "id": 285,
          "value": "item_285"
        },
        {
          "id": 286,
          "value": "item_286"
        },
        {
          "id": 287,
          "value": "item_287"
        },
        {
          "id": 288,
          "value": "item_288"
        },
        {
          "id": 289,
          "value": "item_289"
        },
        {
          "id": 290,
          "value": "item_290"
        },
        {
          "id": 291,
          "value": "item_291"
        },
        {
          "id": 292,
          "value": "item_292"
        },
        {
          "id": 293,
          "value": "item_293"
        },
        {
          "id": 294,
          "value": "item_294"
        },
        {
          "id": 295,
          "value": "item_295"
        },
        {
          "id": 296,
          "value": "item_296"
        },
        {
          "id": 297,
          "value": "item_297"
        },
        {
          "id": 298,
          "value": "item_298"
        },
        {
          "id": 299,
          "value": "item_299"
        },
        {
          "id": 300,
          "value": "item_300"
        },
        {
          "id": 301,
          "value": "item_301"
        },
        {
          "id": 302,
          "value": "item_302"
        },
        {
          "id": 303,
          "value": "item_303"
        },
        {
          "id": 304,
          "value": "item_304"
        },
        {
          "id": 305,
          "value": "item_305"
        },
        {
          "id": 306,
          "value": "item_306"
        },
        {
          "id": 307,
          "value": "item_307"
        },
        {
          "id": 308,
          "value": "item_308"
        },
        {
          "id": 309,
          "value": "item_309"
        },
        {
          "id": 310,
          "value": "item_310"
        },
        {
          "id": 311,
          "value": "item_311"
        },
        {
          "id": 312,
          "value": "item_312"
        },
        {
          "id": 313,
          "value": "item_313"
        },
        {
          "id": 314,
          "value": "item_314"
        },
        {
          "id": 315,
          "value": "item_315"
        },
        {
          "id": 316,
          "value": "item_316"
        },
        {
          "id": 317,
          "value": "item_317"
        },
        {
          "id": 318,
          "value": "item_318"
        },
        {
          "id": 319,
          "value": "item_319"
        },
        {
          "id": 320,
          "value": "item_320"
        },
        {
          "id": 321,
          "value": "item_321"
        },
        {
          "id": 322,
          "value": "item_322"
        },
        {
          "id": 323,
          "value": "item_323"
        },
        {
          "id": 324,
          "value": "item_324"
        },
        {
          "id": 325,
          "value": "item_325"
        },
        {
          "id": 326,
          "value": "item_326"
        },
        {
          "id": 327,
          "value": "item_327"
        },
        {
          "id": 328,
          "value": "item_328"
        },
        {
          "id": 329,
          "value": "item_329"
        },
        {
          "id": 330,
          "value": "item_330"
        },
        {
          "id": 331,
          "value": "item_331"
        },
        {
          "id": 332,
          "value": "item_332"
        },
        {
          "id": 333,
          "value": "item_333"
        },
        {
          "id": 334,
          "value": "item_334"
        },
        {
          "id": 335,
          "value": "item_335"
        },
        {
          "id": 336,
          "value": "item_336"
        },
        {
          "id": 337,
          "value": "item_337"
        },
        {
          "id": 338,
          "value": "item_338"
        },
        {
          "id": 339,
          "value": "item_339"
        },
        {
          "id": 340,
          "value": "item_340"
        },
        {
          "id": 341,
          "value": "item_341"
        },
        {
          "id": 342,
          "value": "item_342"
        },
        {
          "id": 343,
          "value": "item_343"
        },
        {
          "id": 344,
          "value": "item_344"
        },
        {
          "id": 345,
          "value": "item_345"
        },
        {
          "id": 346,
          "value": "item_346"
        },
        {
          "id": 347,
          "value": "item_347"
        },
        {
          "id": 348,
          "value": "item_348"
        },
        {
          "id": 349,
          "value": "item_349"
        },
        {
          "id": 350,
          "value": "item_350"
        },
        {
          "id": 351,
          "value": "item_351"
        },
        {
          "id": 352,
          "value": "item_352"
        },
        {
          "id": 353,
          "value": "item_353"
        },
        {
          "id": 354,
          "value": "item_354"
        },
        {
          "id": 355,
          "value": "item_355"
        },
        {
          "id": 356,
          "value": "item_356"
        },
        {
          "id": 357,
          "value": "item_357"
        },
        {
          "id": 358,
          "value": "item_358"
        },
        {
          "id": 359,
          "value": "item_359"
        },
        {
          "id": 360,
          "value": "item_360"
        },
        {
          "id": 361,
          "value": "item_361"
        },
        {
          "id": 362,
          "value": "item_362"
        },
        {
          "id": 363,
          "value": "item_363"
        },
        {
          "id": 364,
          "value": "item_364"
        },
        {
          "id": 365,
          "value": "item_365"
        },
        {
          "id": 366,
          "value": "item_366"
        },
        {
          "id": 367,
          "value": "item_367"
        },
        {
          "id": 368,
          "value": "item_368"
        },
        {
          "id": 369,
          "value": "item_369"
        },
        {
          "id": 370,
          "value": "item_370"
        },
        {
          "id": 371,
          "value": "item_371"
        },
        {
          "id": 372,
          "value": "item_372"
        },
        {
          "id": 373,
          "value": "item_373"
        },
        {
          "id": 374,
          "value": "item_374"
        },
        {
          "id": 375,
          "value": "item_375"
        },
        {
          "id": 376,
          "value": "item_376"
        },
        {
          "id": 377,
          "value": "item_377"
        },
        {
          "id": 378,
          "value": "item_378"
        },
        {
          "id": 379,
          "value": "item_379"
        },
        {
          "id": 380,
          "value": "item_380"
        },
        {
          "id": 381,
          "value": "item_381"
        },
        {
          "id": 382,
          "value": "item_382"
        },
        {
          "id": 383,
          "value": "item_383"
        },
        {
          "id": 384,
          "value": "item_384"
        },
        {
          "id": 385,
          "value": "item_385"
        },
        {
          "id": 386,
          "value": "item_386"
        },
        {
          "id": 387,
          "value": "item_387"
        },
        {
          "id": 388,
          "value": "item_388"
        },
        {
          "id": 389,
          "value": "item_389"
        },
        {
          "id": 390,
          "value": "item_390"
        },
        {
          "id": 391,
          "value": "item_391"
        },
        {
          "id": 392,
          "value": "item_392"
        },
        {
          "id": 393,
          "value": "item_393"
        },
        {
          "id": 394,
          "value": "item_394"
        },
        {
          "id": 395,
          "value": "item_395"
        },
        {
          "id": 396,
          "value": "item_396"
        },
        {
          "id": 397,
          "value": "item_397"
        },
        {
          "id": 398,
          "value": "item_398"
        },
        {
          "id": 399,
          "value": "item_399"
        },
        {
          "id": 400,
          "value": "item_400"
        },
        {
          "id": 401,
          "value": "item_401"
        },
        {
          "id": 402,
          "value": "item_402"
        },
        {
          "id": 403,
          "value": "item_403"
        },
        {
          "id": 404,
          "value": "item_404"
        },
        {
          "id": 405,
          "value": "item_405"
        },
        {
          "id": 406,
          "value": "item_406"
        },
        {
          "id": 407,
          "value": "item_407"
        },
        {
          "id": 408,
          "value": "item_408"
        },
        {
          "id": 409,
          "value": "item_409"
        },
        {
          "id": 410,
          "value": "item_410"
        },
        {
          "id": 411,
          "value": "item_411"
        },
        {
          "id": 412,
          "value": "item_412"
        },
        {
          "id": 413,
          "value": "item_413"
        },
        {
          "id": 414,
          "value": "item_414"
        },
        {
          "id": 415,
          "value": "item_415"
        },
        {
          "id": 416,
          "value": "item_416"
        },
        {
          "id": 417,
          "value": "item_417"
        },
        {
          "id": 418,
          "value": "item_418"
        },
        {
          "id": 419,
          "value": "item_419"
        },
        {
          "id": 420,
          "value": "item_420"
        },
        {
          "id": 421,
          "value": "item_421"
        },
        {
          "id": 422,
          "value": "item_422"
        },
        {
          "id": 423,
          "value": "item_423"
        },
        {
          "id": 424,
          "value": "item_424"
        },
        {
          "id": 425,
          "value": "item_425"
        },
        {
          "id": 426,
          "value": "item_426"
        },
        {
          "id": 427,
          "value": "item_427"
        },
        {
          "id": 428,
          "value": "item_428"
        },
        {
          "id": 429,
          "value": "item_429"
        },
        {
          "id": 430,
          "value": "item_430"
        },
        {
          "id": 431,
          "value": "item_431"
        },
        {
          "id": 432,
          "value": "item_432"
        },
        {
          "id": 433,
          "value": "item_433"
        },
        {
          "id": 434,
          "value": "item_434"
        },
        {
          "id": 435,
          "value": "item_435"
        },
        {
          "id": 436,
          "value": "item_436"
        },
        {
          "id": 437,
          "value": "item_437"
        },
        {
          "id": 438,
          "value": "item_438"
        },
        {
          "id": 439,
          "value": "item_439"
        },
        {
          "id": 440,
          "value": "item_440"
        },
        {
          "id": 441,
          "value": "item_441"
        },
        {
          "id": 442,
          "value": "item_442"
        },
        {
          "id": 443,
          "value": "item_443"
        },
        {
          "id": 444,
          "value": "item_444"
        },
        {
          "id": 445,
          "value": "item_445"
        },
        {
          "id": 446,
          "value": "item_446"
        },
        {
          "id": 447,
          "value": "item_447"
        },
        {
          "id": 448,
          "value": "item_448"
        },
        {
          "id": 449,
          "value": "item_449"
        },
        {
          "id": 450,
          "value": "item_450"
        },
        {
          "id": 451,
          "value": "item_451"
        },
        {
          "id": 452,
          "value": "item_452"
        },
        {
          "id": 453,
          "value": "item_453"
        },
        {
          "id": 454,
          "value": "item_454"
        },
        {
          "id": 455,
          "value": "item_455"
        },
        {
          "id": 456,
          "value": "item_456"
        },
        {
          "id": 457,
          "value": "item_457"
        },
        {
          "id": 458,
          "value": "item_458"
        },
        {
          "id": 459,
          "value": "item_459"
        },
        {
          "id": 460,
          "value": "item_460"
        },
        {
          "id": 461,
          "value": "item_461"
        },
        {
          "id": 462,
          "value": "item_462"
        },
        {
          "id": 463,
          "value": "item_463"
        },
        {
          "id": 464,
          "value": "item_464"
        },
        {
          "id": 465,
          "value": "item_465"
        },
        {
          "id": 466,
          "value": "item_466"
        },
        {
          "id": 467,
          "value": "item_467"
        },
        {
          "id": 468,
          "value": "item_468"
        },
        {
          "id": 469,
          "value": "item_469"
        },
        {
          "id": 470,
          "value": "item_470"
        },
        {
          "id": 471,
          "value": "item_471"
        },
        {
          "id": 472,
          "value": "item_472"
        },
        {
          "id": 473,
          "value": "item_473"
        },
        {
          "id": 474,
          "value": "item_474"
        },
        {
          "id": 475,
          "value": "item_475"
        },
        {
          "id": 476,
          "value": "item_476"
        },
        {
          "id": 477,
          "value": "item_477"
        },
        {
          "id": 478,
          "value": "item_478"
        },
        {
          "id": 479,
          "value": "item_479"
        },
        {
          "id": 480,
          "value": "item_480"
        },
        {
          "id": 481,
          "value": "item_481"
        },
        {
          "id": 482,
          "value": "item_482"
        },
        {
          "id": 483,
          "value": "item_483"
        },
        {
          "id": 484,
          "value": "item_484"
        },
        {
          "id": 485,
          "value": "item_485"
        },
        {
          "id": 486,
          "value": "item_486"
        },
        {
          "id": 487,
          "value": "item_487"
        },
        {
          "id": 488,
          "value": "item_488"
        },
        {
          "id": 489,
          "value": "item_489"
        },
        {
          "id": 490,
          "value": "item_490"
        },
        {
          "id": 491,
          "value": "item_491"
        },
        {
          "id": 492,
          "value": "item_492"
        },
        {
          "id": 493,
          "value": "item_493"
        },
        {
          "id": 494,
          "value": "item_494"
        },
        {
          "id": 495,
          "value": "item_495"
        },
        {
          "id": 496,
          "value": "item_496"
        },
        {
          "id": 497,
          "value": "item_497"
        },
        {
          "id": 498,
          "value": "item_498"
        },
        {
          "id": 499,
          "value": "item_499"
        },
        {
          "id": 500,
          "value": "item_500"
        },
        {
          "id": 501,
          "value": "item_501"
        },
        {
          "id": 502,
          "value": "item_502"
        },
        {
          "id": 503,
          "value": "item_503"
        },
        {
          "id": 504,
          "value": "item_504"
        },
        {
          "id": 505,
          "value": "item_505"
        },
        {
          "id": 506,
          "value": "item_506"
        },
        {
          "id": 507,
          "value": "item_507"
        },
        {
          "id": 508,
          "value": "item_508"
        },
        {
          "id": 509,
          "value": "item_509"
        },
        {
          "id": 510,
          "value": "item_510"
        },
        {
          "id": 511,
          "value": "item_511"
        },
        {
          "id": 512,
          "value": "item_512"
        },
        {
          "id": 513,
          "value": "item_513"
        },
        {
          "id": 514,
          "value": "item_514"
        },
        {
          "id": 515,
          "value": "item_515"
        },
        {
          "id": 516,
          "value": "item_516"
        },
        {
          "id": 517,
          "value": "item_517"
        },
        {
          "id": 518,
          "value": "item_518"
        },
        {
          "id": 519,
          "value": "item_519"
        },
        {
          "id": 520,
          "value": "item_520"
        },
        {
          "id": 521,
          "value": "item_521"
        },
        {
          "id": 522,
          "value": "item_522"
        },
        {
          "id": 523,
          "value": "item_523"
        },
        {
          "id": 524,
          "value": "item_524"
        },
        {
          "id": 525,
          "value": "item_525"
        },
        {
          "id": 526,
          "value": "item_526"
        },
        {
          "id": 527,
          "value": "item_527"
        },
        {
          "id": 528,
          "value": "item_528"
        },
        {
          "id": 529,
          "value": "item_529"
        },
        {
          "id": 530,
          "value": "item_530"
        },
        {
          "id": 531,
          "value": "item_531"
        },
        {
          "id": 532,
          "value": "item_532"
        },
        {
          "id": 533,
          "value": "item_533"
        },
        {
          "id": 534,
          "value": "item_534"
        },
        {
          "id": 535,
          "value": "item_535"
        },
        {
          "id": 536,
          "value": "item_536"
        },
        {
          "id": 537,
          "value": "item_537"
        },
        {
          "id": 538,
          "value": "item_538"
        },
        {
          "id": 539,
          "value": "item_539"
        },
        {
          "id": 540,
          "value": "item_540"
        },
        {
          "id": 541,
          "value": "item_541"
        },
        {
          "id": 542,
          "value": "item_542"
        },
        {
          "id": 543,
          "value": "item_543"
        },
        {
          "id": 544,
          "value": "item_544"
        },
        {
          "id": 545,
          "value": "item_545"
        },
        {
          "id": 546,
          "value": "item_546"
        },
        {
          "id": 547,
          "value": "item_547"
        },
        {
          "id": 548,
          "value": "item_548"
        },
        {
          "id": 549,
          "value": "item_549"
        },
        {
          "id": 550,
          "value": "item_550"
        },
        {
          "id": 551,
          "value": "item_551"
        },
        {
          "id": 552,
          "value": "item_552"
        },
        {
          "id": 553,
          "value": "item_553"
        },
        {
          "id": 554,
          "value": "item_554"
        },
        {
          "id": 555,
          "value": "item_555"
        },
        {
          "id": 556,
          "value": "item_556"
        },
        {
          "id": 557,
          "value": "item_557"
        },
        {
          "id": 558,
          "value": "item_558"
        },
        {
          "id": 559,
          "value": "item_559"
        },
        {
          "id": 560,
          "value": "item_560"
        },
        {
          "id": 561,
          "value": "item_561"
        },
        {
          "id": 562,
          "value": "item_562"
        },
        {
          "id": 563,
          "value": "item_563"
        },
        {
          "id": 564,
          "value": "item_564"
        },
        {
          "id": 565,
          "value": "item_565"
        },
        {
          "id": 566,
          "value": "item_566"
        },
        {
          "id": 567,
          "value": "item_567"
        },
        {
          "id": 568,
          "value": "item_568"
        },
        {
          "id": 569,
          "value": "item_569"
        },
        {
          "id": 570,
          "value": "item_570"
        },
        {
          "id": 571,
          "value": "item_571"
        },
        {
          "id": 572,
          "value": "item_572"
        },
        {
          "id": 573,
          "value": "item_573"
        },
        {
          "id": 574,
          "value": "item_574"
        },
        {
          "id": 575,
          "value": "item_575"
        },
        {
          "id": 576,
          "value": "item_576"
        },
        {
          "id": 577,
          "value": "item_577"
        },
        {
          "id": 578,
          "value": "item_578"
        },
        {
          "id": 579,
          "value": "item_579"
        },
        {
          "id": 580,
          "value": "item_580"
        },
        {
          "id": 581,
          "value": "item_581"
        },
        {
          "id": 582,
          "value": "item_582"
        },
        {
          "id": 583,
          "value": "item_583"
        },
        {
          "id": 584,
          "value": "item_584"
        },
        {
          "id": 585,
          "value": "item_585"
        },
        {
          "id": 586,
          "value": "item_586"
        },
        {
          "id": 587,
          "value": "item_587"
        },
        {
          "id": 588,
          "value": "item_588"
        },
        {
          "id": 589,
          "value": "item_589"
        },
        {
          "id": 590,
          "value": "item_590"
        },
        {
          "id": 591,
          "value": "item_591"
        },
        {
          "id": 592,
          "value": "item_592"
        },
        {
          "id": 593,
          "value": "item_593"
        },
        {
          "id": 594,
          "value": "item_594"
        },
        {
          "id": 595,
          "value": "item_595"
        },
        {
          "id": 596,
          "value": "item_596"
        },
        {
          "id": 597,
          "value": "item_597"
        },
        {
          "id": 598,
          "value": "item_598"
        },
        {
          "id": 599,
          "value": "item_599"
        },
        {
          "id": 600,
          "value": "item_600"
        },
        {
          "id": 601,
          "value": "item_601"
        },
        {
          "id": 602,
          "value": "item_602"
        },
        {
          "id": 603,
          "value": "item_603"
        },
        {
          "id": 604,
          "value": "item_604"
        },
        {
          "id": 605,
          "value": "item_605"
        },
        {
          "id": 606,
          "value": "item_606"
        },
        {
          "id": 607,
          "value": "item_607"
        },
        {
          "id": 608,
          "value": "item_608"
        },
        {
          "id": 609,
          "value": "item_609"
        },
        {
          "id": 610,
          "value": "item_610"
        },
        {
          "id": 611,
          "value": "item_611"
        },
        {
          "id": 612,
          "value": "item_612"
        },
        {
          "id": 613,
          "value": "item_613"
        },
        {
          "id": 614,
          "value": "item_614"
        },
        {
          "id": 615,
          "value": "item_615"
        },
        {
          "id": 616,
          "value": "item_616"
        },
        {
          "id": 617,
          "value": "item_617"
        },
        {
          "id": 618,
          "value": "item_618"
        },
        {
          "id": 619,
          "value": "item_619"
        },
        {
          "id": 620,
          "value": "item_620"
        },
        {
          "id": 621,
          "value": "item_621"
        },
        {
          "id": 622,
          "value": "item_622"
        },
        {
          "id": 623,
          "value": "item_623"
        },
        {
          "id": 624,
          "value": "item_624"
        },
        {
          "id": 625,
          "value": "item_625"
        },
        {
          "id": 626,
          "value": "item_626"
        },
        {
          "id": 627,
          "value": "item_627"
        },
        {
          "id": 628,
          "value": "item_628"
        },
        {
          "id": 629,
          "value": "item_629"
        },
        {
          "id": 630,
          "value": "item_630"
        },
        {
          "id": 631,
          "value": "item_631"
        },
        {
          "id": 632,
          "value": "item_632"
        },
        {
          "id": 633,
          "value": "item_633"
        },
        {
          "id": 634,
          "value": "item_634"
        },
        {
          "id": 635,
          "value": "item_635"
        },
        {
          "id": 636,
          "value": "item_636"
        },
        {
          "id": 637,
          "value": "item_637"
        },
        {
          "id": 638,
          "value": "item_638"
        },
        {
          "id": 639,
          "value": "item_639"
        },
        {
          "id": 640,
          "value": "item_640"
        },
        {
          "id": 641,
          "value": "item_641"
        },
        {
          "id": 642,
          "value": "item_642"
        },
        {
          "id": 643,
          "value": "item_643"
        },
        {
          "id": 644,
          "value": "item_644"
        },
        {
          "id": 645,
          "value": "item_645"
        },
        {
          "id": 646,
          "value": "item_646"
        },
        {
          "id": 647,
          "value": "item_647"
        },
        {
          "id": 648,
          "value": "item_648"
        },
        {
          "id": 649,
          "value": "item_649"
        },
        {
          "id": 650,
          "value": "item_650"
        },
        {
          "id": 651,
          "value": "item_651"
        },
        {
          "id": 652,
          "value": "item_652"
        },
        {
          "id": 653,
          "value": "item_653"
        },
        {
          "id": 654,
          "value": "item_654"
        },
        {
          "id": 655,
          "value": "item_655"
        },
        {
          "id": 656,
          "value": "item_656"
        },
        {
          "id": 657,
          "value": "item_657"
        },
        {
          "id": 658,
          "value": "item_658"
        },
        {
          "id": 659,
          "value": "item_659"
        },
        {
          "id": 660,
          "value": "item_660"
        },
        {
          "id": 661,
          "value": "item_661"
        },
        {
          "id": 662,
          "value": "item_662"
        },
        {
          "id": 663,
          "value": "item_663"
        },
        {
          "id": 664,
          "value": "item_664"
        },
        {
          "id": 665,
          "value": "item_665"
        },
        {
          "id": 666,
          "value": "item_666"
        },
        {
          "id": 667,
          "value": "item_667"
        },
        {
          "id": 668,
          "value": "item_668"
        },
        {
          "id": 669,
          "value": "item_669"
        },
        {
          "id": 670,
          "value": "item_670"
        },
        {
          "id": 671,
          "value": "item_671"
        },
        {
          "id": 672,
          "value": "item_672"
        },
        {
          "id": 673,
          "value": "item_673"
        },
        {
          "id": 674,
          "value": "item_674"
        },
        {
          "id": 675,
          "value": "item_675"
        },
        {
          "id": 676,
          "value": "item_676"
        },
        {
          "id": 677,
          "value": "item_677"
        },
        {
          "id": 678,
          "value": "item_678"
        },
        {
          "id": 679,
          "value": "item_679"
        },
        {
          "id": 680,
          "value": "item_680"
        },
        {
          "id": 681,
          "value": "item_681"
        },
        {
          "id": 682,
          "value": "item_682"
        },
        {
          "id": 683,
          "value": "item_683"
        },
        {
          "id": 684,
          "value": "item_684"
        },
        {
          "id": 685,
          "value": "item_685"
        },
        {
          "id": 686,
          "value": "item_686"
        },
        {
          "id": 687,
          "value": "item_687"
        },
        {
          "id": 688,
          "value": "item_688"
        },
        {
          "id": 689,
          "value": "item_689"
        },
        {
          "id": 690,
          "value": "item_690"
        },
        {
          "id": 691,
          "value": "item_691"
        },
        {
          "id": 692,
          "value": "item_692"
        },
        {
          "id": 693,
          "value": "item_693"
        },
        {
          "id": 694,
          "value": "item_694"
        },
        {
          "id": 695,
          "value": "item_695"
        },
        {
          "id": 696,
          "value": "item_696"
        },
        {
          "id": 697,
          "value": "item_697"
        },
        {
          "id": 698,
          "value": "item_698"
        },
        {
          "id": 699,
          "value": "item_699"
        },
        {
          "id": 700,
          "value": "item_700"
        },
        {
          "id": 701,
          "value": "item_701"
        },
        {
          "id": 702,
          "value": "item_702"
        },
        {
          "id": 703,
          "value": "item_703"
        },
        {
          "id": 704,
          "value": "item_704"
        },
        {
          "id": 705,
          "value": "item_705"
        },
        {
          "id": 706,
          "value": "item_706"
        },
        {
          "id": 707,
          "value": "item_707"
        },
        {
          "id": 708,
          "value": "item_708"
        },
        {
          "id": 709,
          "value": "item_709"
        },
        {
          "id": 710,
          "value": "item_710"
        },
        {
          "id": 711,
          "value": "item_711"
        },
        {
          "id": 712,
          "value": "item_712"
        },
        {
          "id": 713,
          "value": "item_713"
        },
        {
          "id": 714,
          "value": "item_714"
        },
        {
          "id": 715,
          "value": "item_715"
        },
        {
          "id": 716,
          "value": "item_716"
        },
        {
          "id": 717,
          "value": "item_717"
        },
        {
          "id": 718,
          "value": "item_718"
        },
        {
          "id": 719,
          "value": "item_719"
        },
        {
          "id": 720,
          "value": "item_720"
        },
        {
          "id": 721,
          "value": "item_721"
        },
        {
          "id": 722,
          "value": "item_722"
        },
        {
          "id": 723,
          "value": "item_723"
        },
        {
          "id": 724,
          "value": "item_724"
        },
        {
          "id": 725,
          "value": "item_725"
        },
        {
          "id": 726,
          "value": "item_726"
        },
        {
          "id": 727,
          "value": "item_727"
        },
        {
          "id": 728,
          "value": "item_728"
        },
        {
          "id": 729,
          "value": "item_729"
        },
        {
          "id": 730,
          "value": "item_730"
        },
        {
          "id": 731,
          "value": "item_731"
        },
        {
          "id": 732,
          "value": "item_732"
        },
        {
          "id": 733,
          "value": "item_733"
        },
        {
          "id": 734,
          "value": "item_734"
        },
        {
          "id": 735,
          "value": "item_735"
        },
        {
          "id": 736,
          "value": "item_736"
        },
        {
          "id": 737,
          "value": "item_737"
        },
        {
          "id": 738,
          "value": "item_738"
        },
        {
          "id": 739,
          "value": "item_739"
        },
        {
          "id": 740,
          "value": "item_740"
        },
        {
          "id": 741,
          "value": "item_741"
        },
        {
          "id": 742,
          "value": "item_742"
        },
        {
          "id": 743,
          "value": "item_743"
        },
        {
          "id": 744,
          "value": "item_744"
        },
        {
          "id": 745,
          "value": "item_745"
        },
        {
          "id": 746,
          "value": "item_746"
        },
        {
          "id": 747,
          "value": "item_747"
        },
        {
          "id": 748,
          "value": "item_748"
        },
        {
          "id": 749,
          "value": "item_749"
        },
        {
          "id": 750,
          "value": "item_750"
        },
        {
          "id": 751,
          "value": "item_751"
        },
        {
          "id": 752,
          "value": "item_752"
        },
        {
          "id": 753,
          "value": "item_753"
        },
        {
          "id": 754,
          "value": "item_754"
        },
        {
          "id": 755,
          "value": "item_755"
        },
        {
          "id": 756,
          "value": "item_756"
        },
        {
          "id": 757,
          "value": "item_757"
        },
        {
          "id": 758,
          "value": "item_758"
        },
        {
          "id": 759,
          "value": "item_759"
        },
        {
          "id": 760,
          "value": "item_760"
        },
        {
          "id": 761,
          "value": "item_761"
        },
        {
          "id": 762,
          "value": "item_762"
        },
        {
          "id": 763,
          "value": "item_763"
        },
        {
          "id": 764,
          "value": "item_764"
        },
        {
          "id": 765,
          "value": "item_765"
        },
        {
          "id": 766,
          "value": "item_766"
        },
        {
          "id": 767,
          "value": "item_767"
        },
        {
          "id": 768,
          "value": "item_768"
        },
        {
          "id": 769,
          "value": "item_769"
        },
        {
          "id": 770,
          "value": "item_770"
        },
        {
          "id": 771,
          "value": "item_771"
        },
        {
          "id": 772,
          "value": "item_772"
        },
        {
          "id": 773,
          "value": "item_773"
        },
        {
          "id": 774,
          "value": "item_774"
        },
        {
          "id": 775,
          "value": "item_775"
        },
        {
          "id": 776,
          "value": "item_776"
        },
        {
          "id": 777,
          "value": "item_777"
        },
        {
          "id": 778,
          "value": "item_778"
        },
        {
          "id": 779,
          "value": "item_779"
        },
        {
          "id": 780,
          "value": "item_780"
        },
        {
          "id": 781,
          "value": "item_781"
        },
        {
          "id": 782,
          "value": "item_782"
        },
        {
          "id": 783,
          "value": "item_783"
        },
        {
          "id": 784,
          "value": "item_784"
        },
        {
          "id": 785,
          "value": "item_785"
        },
        {
          "id": 786,
          "value": "item_786"
        },
        {
          "id": 787,
          "value": "item_787"
        },
        {
          "id": 788,
          "value": "item_788"
        },
        {
          "id": 789,
          "value": "item_789"
        },
        {
          "id": 790,
          "value": "item_790"
        },
        {
          "id": 791,
          "value": "item_791"
        },
        {
          "id": 792,
          "value": "item_792"
        },
        {
          "id": 793,
          "value": "item_793"
        },
        {
          "id": 794,
          "value": "item_794"
        },
        {
          "id": 795,
          "value": "item_795"
        },
        {
          "id": 796,
          "value": "item_796"
        },
        {
          "id": 797,
          "value": "item_797"
        },
        {
          "id": 798,
          "value": "item_798"
        },
        {
          "id": 799,
          "value": "item_799"
        },
        {
          "id": 800,
          "value": "item_800"
        },
        {
          "id": 801,
          "value": "item_801"
        },
        {
          "id": 802,
          "value": "item_802"
        },
        {
          "id": 803,
          "value": "item_803"
        },
        {
          "id": 804,
          "value": "item_804"
        },
        {
          "id": 805,
          "value": "item_805"
        },
        {
          "id": 806,
          "value": "item_806"
        },
        {
          "id": 807,
          "value": "item_807"
        },
        {
          "id": 808,
          "value": "item_808"
        },
        {
          "id": 809,
          "value": "item_809"
        },
        {
          "id": 810,
          "value": "item_810"
        },
        {
          "id": 811,
          "value": "item_811"
        },
        {
          "id": 812,
          "value": "item_812"
        },
        {
          "id": 813,
          "value": "item_813"
        },
        {
          "id": 814,
          "value": "item_814"
        },
        {
          "id": 815,
          "value": "item_815"
        },
        {
          "id": 816,
          "value": "item_816"
        },
        {
          "id": 817,
          "value": "item_817"
        },
        {
          "id": 818,
          "value": "item_818"
        },
        {
          "id": 819,
          "value": "item_819"
        },
        {
          "id": 820,
          "value": "item_820"
        },
        {
          "id": 821,
          "value": "item_821"
        },
        {
          "id": 822,
          "value": "item_822"
        },
        {
          "id": 823,
          "value": "item_823"
        },
        {
          "id": 824,
          "value": "item_824"
        },
        {
          "id": 825,
          "value": "item_825"
        },
        {
          "id": 826,
          "value": "item_826"
        },
        {
          "id": 827,
          "value": "item_827"
        },
        {
          "id": 828,
          "value": "item_828"
        },
        {
          "id": 829,
          "value": "item_829"
        },
        {
          "id": 830,
          "value": "item_830"
        },
        {
          "id": 831,
          "value": "item_831"
        },
        {
          "id": 832,
          "value": "item_832"
        },
        {
          "id": 833,
          "value": "item_833"
        },
        {
          "id": 834,
          "value": "item_834"
        },
        {
          "id": 835,
          "value": "item_835"
        },
        {
          "id": 836,
          "value": "item_836"
        },
        {
          "id": 837,
          "value": "item_837"
        },
        {
          "id": 838,
          "value": "item_838"
        },
        {
          "id": 839,
          "value": "item_839"
        },
        {
          "id": 840,
          "value": "item_840"
        },
        {
          "id": 841,
          "value": "item_841"
        },
        {
          "id": 842,
          "value": "item_842"
        },
        {
          "id": 843,
          "value": "item_843"
        },
        {
          "id": 844,
          "value": "item_844"
        },
        {
          "id": 845,
          "value": "item_845"
        },
        {
          "id": 846,
          "value": "item_846"
        },
        {
          "id": 847,
          "value": "item_847"
        },
        {
          "id": 848,
          "value": "item_848"
        },
        {
          "id": 849,
          "value": "item_849"
        },
        {
          "id": 850,
          "value": "item_850"
        },
        {
          "id": 851,
          "value": "item_851"
        },
        {
          "id": 852,
          "value": "item_852"
        },
        {
          "id": 853,
          "value": "item_853"
        },
        {
          "id": 854,
          "value": "item_854"
        },
        {
          "id": 855,
          "value": "item_855"
        },
        {
          "id": 856,
          "value": "item_856"
        },
        {
          "id": 857,
          "value": "item_857"
        },
        {
          "id": 858,
          "value": "item_858"
        },
        {
          "id": 859,
          "value": "item_859"
        },
        {
          "id": 860,
          "value": "item_860"
        },
        {
          "id": 861,
          "value": "item_861"
        },
        {
          "id": 862,
          "value": "item_862"
        },
        {
          "id": 863,
          "value": "item_863"
        },
        {
          "id": 864,
          "value": "item_864"
        },
        {
          "id": 865,
          "value": "item_865"
        },
        {
          "id": 866,
          "value": "item_866"
        },
        {
          "id": 867,
          "value": "item_867"
        },
        {
          "id": 868,
          "value": "item_868"
        },
        {
          "id": 869,
          "value": "item_869"
        },
        {
          "id": 870,
          "value": "item_870"
        },
        {
          "id": 871,
          "value": "item_871"
        },
        {
          "id": 872,
          "value": "item_872"
        },
        {
          "id": 873,
          "value": "item_873"
        },
        {
          "id": 874,
          "value": "item_874"
        },
        {
          "id": 875,
          "value": "item_875"
        },
        {
          "id": 876,
          "value": "item_876"
        },
        {
          "id": 877,
          "value": "item_877"
        },
        {
          "id": 878,
          "value": "item_878"
        },
        {
          "id": 879,
          "value": "item_879"
        },
        {
          "id": 880,
          "value": "item_880"
        },
        {
          "id": 881,
          "value": "item_881"
        },
        {
          "id": 882,
          "value": "item_882"
        },
        {
          "id": 883,
          "value": "item_883"
        },
        {
          "id": 884,
          "value": "item_884"
        },
        {
          "id": 885,
          "value": "item_885"
        },
        {
          "id": 886,
          "value": "item_886"
        },
        {
          "id": 887,
          "value": "item_887"
        },
        {
          "id": 888,
          "value": "item_888"
        },
        {
          "id": 889,
          "value": "item_889"
        },
        {
          "id": 890,
          "value": "item_890"
        },
        {
          "id": 891,
          "value": "item_891"
        },
        {
          "id": 892,
          "value": "item_892"
        },
        {
          "id": 893,
          "value": "item_893"
        },
        {
          "id": 894,
          "value": "item_894"
        },
        {
          "id": 895,
          "value": "item_895"
        },
        {
          "id": 896,
          "value": "item_896"
        },
        {
          "id": 897,
          "value": "item_897"
        },
        {
          "id": 898,
          "value": "item_898"
        },
        {
          "id": 899,
          "value": "item_899"
        },
        {
          "id": 900,
          "value": "item_900"
        },
        {
          "id": 901,
          "value": "item_901"
        },
        {
          "id": 902,
          "value": "item_902"
        },
        {
          "id": 903,
          "value": "item_903"
        },
        {
          "id": 904,
          "value": "item_904"
        },
        {
          "id": 905,
          "value": "item_905"
        },
        {
          "id": 906,
          "value": "item_906"
        },
        {
          "id": 907,
          "value": "item_907"
        },
        {
          "id": 908,
          "value": "item_908"
        },
        {
          "id": 909,
          "value": "item_909"
        },
        {
          "id": 910,
          "value": "item_910"
        },
        {
          "id": 911,
          "value": "item_911"
        },
        {
          "id": 912,
          "value": "item_912"
        },
        {
          "id": 913,
          "value": "item_913"
        },
        {
          "id": 914,
          "value": "item_914"
        },
        {
          "id": 915,
          "value": "item_915"
        },
        {
          "id": 916,
          "value": "item_916"
        },
        {
          "id": 917,
          "value": "item_917"
        },
        {
          "id": 918,
          "value": "item_918"
        },
        {
          "id": 919,
          "value": "item_919"
        },
        {
          "id": 920,
          "value": "item_920"
        },
        {
          "id": 921,
          "value": "item_921"
        },
        {
          "id": 922,
          "value": "item_922"
        },
        {
          "id": 923,
          "value": "item_923"
        },
        {
          "id": 924,
          "value": "item_924"
        },
        {
          "id": 925,
          "value": "item_925"
        },
        {
          "id": 926,
          "value": "item_926"
        },
        {
          "id": 927,
          "value": "item_927"
        },
        {
          "id": 928,
          "value": "item_928"
        },
        {
          "id": 929,
          "value": "item_929"
        },
        {
          "id": 930,
          "value": "item_930"
        },
        {
          "id": 931,
          "value": "item_931"
        },
        {
          "id": 932,
          "value": "item_932"
        },
        {
          "id": 933,
          "value": "item_933"
        },
        {
          "id": 934,
          "value": "item_934"
        },
        {
          "id": 935,
          "value": "item_935"
        },
        {
          "id": 936,
          "value": "item_936"
        },
        {
          "id": 937,
          "value": "item_937"
        },
        {
          "id": 938,
          "value": "item_938"
        },
        {
          "id": 939,
          "value": "item_939"
        },
        {
          "id": 940,
          "value": "item_940"
        },
        {
          "id": 941,
          "value": "item_941"
        },
        {
          "id": 942,
          "value": "item_942"
        },
        {
          "id": 943,
          "value": "item_943"
        },
        {
          "id": 944,
          "value": "item_944"
        },
        {
          "id": 945,
          "value": "item_945"
        },
        {
          "id": 946,
          "value": "item_946"
        },
        {
          "id": 947,
          "value": "item_947"
        },
        {
          "id": 948,
          "value": "item_948"
        },
        {
          "id": 949,
          "value": "item_949"
        },
        {
          "id": 950,
          "value": "item_950"
        },
        {
          "id": 951,
          "value": "item_951"
        },
        {
          "id": 952,
          "value": "item_952"
        },
        {
          "id": 953,
          "value": "item_953"
        },
        {
          "id": 954,
          "value": "item_954"
        },
        {
          "id": 955,
          "value": "item_955"
        },
        {
          "id": 956,
          "value": "item_956"
        },
        {
          "id": 957,
          "value": "item_957"
        },
        {
          "id": 958,
          "value": "item_958"
        },
        {
          "id": 959,
          "value": "item_959"
        },
        {
          "id": 960,
          "value": "item_960"
        },
        {
          "id": 961,
          "value": "item_961"
        },
        {
          "id": 962,
          "value": "item_962"
        },
        {
          "id": 963,
          "value": "item_963"
        },
        {
          "id": 964,
          "value": "item_964"
        },
        {
          "id": 965,
          "value": "item_965"
        },
        {
          "id": 966,
          "value": "item_966"
        },
        {
          "id": 967,
          "value": "item_967"
        },
        {
          "id": 968,
          "value": "item_968"
        },
        {
          "id": 969,
          "value": "item_969"
        },
        {
          "id": 970,
          "value": "item_970"
        },
        {
          "id": 971,
          "value": "item_971"
        },
        {
          "id": 972,
          "value": "item_972"
        },
        {
          "id": 973,
          "value": "item_973"
        },
        {
          "id": 974,
          "value": "item_974"
        },
        {
          "id": 975,
          "value": "item_975"
        },
        {
          "id": 976,
          "value": "item_976"
        },
        {
          "id": 977,
          "value": "item_977"
        },
        {
          "id": 978,
          "value": "item_978"
        },
        {
          "id": 979,
          "value": "item_979"
        },
        {
          "id": 980,
          "value": "item_980"
        },
        {
          "id": 981,
          "value": "item_981"
        },
        {
          "id": 982,
          "value": "item_982"
        },
        {
          "id": 983,
          "value": "item_983"
        },
        {
          "id": 984,
          "value": "item_984"
        },
        {
          "id": 985,
          "value": "item_985"
        },
        {
          "id": 986,
          "value": "item_986"
        },
        {
          "id": 987,
          "value": "item_987"
        },
        {
          "id": 988,
          "value": "item_988"
        },
        {
          "id": 989,
          "value": "item_989"
        },
        {
          "id": 990,
          "value": "item_990"
        },
        {
          "id": 991,
          "value": "item_991"
        },
        {
          "id": 992,
          "value": "item_992"
        },
        {
          "id": 993,
          "value": "item_993"
        },
        {
          "id": 994,
          "value": "item_994"
        },
        {
          "id": 995,
          "value": "item_995"
        },
        {
          "id": 996,
          "value": "item_996"
        },
        {
          "id": 997,
          "value": "item_997"
        },
        {
          "id": 998,
          "value": "item_998"
        },
        {
          "id": 999,
          "value": "item_999"
        }
      ]
    }

      at console.apply [as log] (tests/integration/utils/logger.test.js:44:26)

PASS tests/integration/utils/logger.test.js
  Logger Integration Tests
    Basic Logging Methods
      ✓ should have all required logging methods
      ✓ should log error messages with context (9 ms)
      ✓ should log warn messages (1 ms)
      ✓ should log info messages
      ✓ should log debug messages (1 ms)
    Specialized Logging Methods
      ✓ should log database operations (1 ms)
      ✓ should log API calls (4 ms)
      ✓ should log authentication events (1 ms)
      ✓ should log performance metrics (2 ms)
      ✓ should log security events (1 ms)
      ✓ should log user actions with anonymized user ID (1 ms)
    Structured Logging
      ✓ should handle structured data in context (2 ms)
      ✓ should handle error objects with stack traces (9 ms)
    Logger Configuration
      ✓ should respect log levels
      ✓ should have service metadata
      ✓ should generate correlation IDs
    Log Entry Structure
      ✓ should create proper log entry structure (1 ms)
      ✓ should check log level filtering
    Middleware Functions
      ✓ should provide request middleware
      ✓ should provide error middleware
    Configuration Utilities
      ✓ should sanitize configuration data (1 ms)
      ✓ should log configuration loaded event (1 ms)
    Application Lifecycle Logging
      ✓ should log application startup (1 ms)
      ✓ should log application shutdown (6 ms)
    Child Logger Functionality
      ✓ should create child logger with additional context
      ✓ should use child logger with inherited context (2 ms)
    Performance Logging Edge Cases
      ✓ should warn on slow operations (1 ms)
      ✓ should log normal operations as info (1 ms)
    Error Handling
      ✓ should handle null or undefined context gracefully (3 ms)
      ✓ should handle circular references in context (1 ms)
      ✓ should handle very large context objects (2 ms)

  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Database not initialized, initializing now...

      at log (routes/health.js:43:15)

  console.error
    Failed to initialize database: Database connection failed

      45 |         await initializeDatabase();
      46 |       } catch (dbInitError) {
    > 47 |         console.error("Failed to initialize database:", dbInitError.message);
         |                 ^
      48 |         // In test mode, return 200 with error details for graceful handling
      49 |         const statusCode = process.env.NODE_ENV === "test" ? 200 : 503;
      50 |         return res.status(statusCode).json({

      at error (routes/health.js:47:17)

  console.log
    Starting health check with database...

      at log (routes/health.js:38:13)

  console.log
    Database not initialized, initializing now...

      at log (routes/health.js:43:15)

PASS tests/unit/routes/health.test.js
  Health Routes - Testing Your Actual Site
    GET /health - Health check endpoint
      ✓ should return quick health check when quick=true (7 ms)
      ✓ should return full health check with database testing (4 ms)
      ✓ should handle database connection failures gracefully (4 ms)
      ✓ should handle database query failures (7 ms)
    Error handling
      ✓ should return valid response structure for all cases (2 ms)

  console.error
    Alpaca account fetch error: API Error

      86 |       };
      87 |     } catch (error) {
    > 88 |       console.error("Alpaca account fetch error:", error.message);
         |               ^
      89 |       throw new Error(`Failed to fetch account information: ${error.message}`);
      90 |     }
      91 |   }

      at AlpacaService.error [as getAccount] (utils/alpacaService.js:88:15)
      at Object.<anonymous> (tests/integration/services/alpacaService.test.js:185:7)

  console.log
    Fetching orders from Alpaca

      at AlpacaService.log [as getOrders] (utils/alpacaService.js:758:15)

  console.log
    Canceling order order-123 on Alpaca

      at AlpacaService.log [as cancelOrder] (utils/alpacaService.js:786:15)

  console.error
    Alpaca order creation error: Symbol is required

      748 |       };
      749 |     } catch (error) {
    > 750 |       console.error("Alpaca order creation error:", error.message);
          |               ^
      751 |       throw new Error(`Failed to create order: ${error.message}`);
      752 |     }
      753 |   }

      at AlpacaService.error [as createOrder] (utils/alpacaService.js:750:15)
      at Object.createOrder (tests/integration/services/alpacaService.test.js:376:23)

  console.error
    Alpaca order creation error: Quantity must be a positive number

      748 |       };
      749 |     } catch (error) {
    > 750 |       console.error("Alpaca order creation error:", error.message);
          |               ^
      751 |       throw new Error(`Failed to create order: ${error.message}`);
      752 |     }
      753 |   }

      at AlpacaService.error [as createOrder] (utils/alpacaService.js:750:15)
      at Object.createOrder (tests/integration/services/alpacaService.test.js:386:23)

  console.error
    Alpaca order creation error: Side must be buy or sell

      748 |       };
      749 |     } catch (error) {
    > 750 |       console.error("Alpaca order creation error:", error.message);
          |               ^
      751 |       throw new Error(`Failed to create order: ${error.message}`);
      752 |     }
      753 |   }

      at AlpacaService.error [as createOrder] (utils/alpacaService.js:750:15)
      at Object.createOrder (tests/integration/services/alpacaService.test.js:396:23)

  console.log
    📊 Fetching bars for AAPL from Alpaca { timeframe: '1Day', start: '2023-01-01', limit: 100 }

      at AlpacaService.log [as getBars] (utils/alpacaService.js:540:15)

  console.log
    ✅ Bars fetched for AAPL: 1 bars

      at AlpacaService.log [as getBars] (utils/alpacaService.js:561:15)

  console.error
    Alpaca account fetch error: Network error

      86 |       };
      87 |     } catch (error) {
    > 88 |       console.error("Alpaca account fetch error:", error.message);
         |               ^
      89 |       throw new Error(`Failed to fetch account information: ${error.message}`);
      90 |     }
      91 |   }

      at AlpacaService.error [as getAccount] (utils/alpacaService.js:88:15)
      at Object.<anonymous> (tests/integration/services/alpacaService.test.js:537:7)

  console.error
    Alpaca account fetch error: Rate limit exceeded

      86 |       };
      87 |     } catch (error) {
    > 88 |       console.error("Alpaca account fetch error:", error.message);
         |               ^
      89 |       throw new Error(`Failed to fetch account information: ${error.message}`);
      90 |     }
      91 |   }

      at AlpacaService.error [as getAccount] (utils/alpacaService.js:88:15)
      at Object.<anonymous> (tests/integration/services/alpacaService.test.js:545:7)

  console.error
    Alpaca account fetch error: Invalid API credentials

      86 |       };
      87 |     } catch (error) {
    > 88 |       console.error("Alpaca account fetch error:", error.message);
         |               ^
      89 |       throw new Error(`Failed to fetch account information: ${error.message}`);
      90 |     }
      91 |   }

      at AlpacaService.error [as getAccount] (utils/alpacaService.js:88:15)
      at Object.<anonymous> (tests/integration/services/alpacaService.test.js:555:7)

  console.error
    Alpaca order creation error: Market is closed

      748 |       };
      749 |     } catch (error) {
    > 750 |       console.error("Alpaca order creation error:", error.message);
          |               ^
      751 |       throw new Error(`Failed to create order: ${error.message}`);
      752 |     }
      753 |   }

      at AlpacaService.error [as createOrder] (utils/alpacaService.js:750:15)
      at Object.<anonymous> (tests/integration/services/alpacaService.test.js:565:7)

  console.error
    Alpaca order creation error: Insufficient buying power

      748 |       };
      749 |     } catch (error) {
    > 750 |       console.error("Alpaca order creation error:", error.message);
          |               ^
      751 |       throw new Error(`Failed to create order: ${error.message}`);
      752 |     }
      753 |   }

      at AlpacaService.error [as createOrder] (utils/alpacaService.js:750:15)
      at Object.<anonymous> (tests/integration/services/alpacaService.test.js:580:7)

  console.log
    Fetching orders from Alpaca

      at AlpacaService.log [as getOrders] (utils/alpacaService.js:758:15)

PASS tests/integration/services/alpacaService.test.js
  Alpaca Service Integration Tests
    Service Initialization
      ✓ should initialize with valid API credentials (1 ms)
      ✓ should throw error with missing credentials (17 ms)
      ✓ should configure for live trading when specified
    Rate Limiting
      ✓ should track request times for rate limiting
      ✓ should throw error when rate limit exceeded
      ✓ should clean up old request times
    Account Operations
      ✓ should fetch account information (1 ms)
      ✓ should handle account fetch errors gracefully (7 ms)
      ✓ should fetch portfolio history (1 ms)
    Position Management
      ✓ should fetch current positions
      ✓ should fetch position for specific symbol
    Order Management
      ✓ should place market buy order (1 ms)
      ✓ should place limit sell order
      ✓ should fetch all orders (1 ms)
      ✓ should cancel specific order (1 ms)
      ✓ should validate order parameters (2 ms)
    Market Data Operations
      ✓ should fetch asset information (1 ms)
      ✓ should fetch tradable assets
      ✓ should fetch historical bars data (1 ms)
      ✓ should fetch latest trade data
    Watchlist Management
      ✓ should fetch all watchlists
      ✓ should create new watchlist (1 ms)
    Error Handling and Edge Cases
      ✓ should handle network errors gracefully
      ✓ should handle API rate limiting from Alpaca
      ✓ should handle invalid API credentials (1 ms)
      ✓ should handle market closed scenarios (1 ms)
      ✓ should handle insufficient funds
    Performance and Monitoring
      ✓ should track request metrics
      ✓ should handle concurrent requests properly (4 ms)

PASS tests/unit/utils/alpacaService.test.js
  AlpacaService
    constructor
      ✓ should create AlpacaService instance with valid credentials (2 ms)
      ✓ should throw error when API key is missing (32 ms)
      ✓ should throw error when API secret is missing (1 ms)
      ✓ should default to paper trading (1 ms)
      ✓ should support live trading mode
    checkRateLimit
      ✓ should allow requests under rate limit (1 ms)
      ✓ should throw error when rate limit exceeded (1 ms)
      ✓ should remove old requests outside time window (1 ms)
    getAccount
      ✓ should fetch and format account data successfully
      ✓ should throw error when account fetch fails (1 ms)
    getPositions
      ✓ should fetch and format positions data successfully (1 ms)
      ✓ should handle empty positions
      ✓ should throw error when positions fetch fails (1 ms)
    getPortfolioHistory
      ✓ should fetch and format portfolio history successfully (1 ms)
      ✓ should handle empty portfolio history
      ✓ should filter out null equity values (8 ms)
    getActivities
      ✓ should fetch and format activities successfully (1 ms)
      ✓ should handle missing optional fields
    getMarketCalendar
      ✓ should fetch and format market calendar successfully (1 ms)
    getMarketStatus
      ✓ should fetch market status successfully (1 ms)
      ✓ should throw error when market status fetch fails
    validateCredentials
      ✓ should return valid true when credentials are valid (1 ms)
      ✓ should return valid false when credentials are invalid
    getAsset
      ✓ should fetch and format asset data successfully (1 ms)
    getSectorFromSymbol
      ✓ should classify tech stocks correctly (1 ms)
      ✓ should classify financial stocks correctly (1 ms)
      ✓ should classify healthcare stocks correctly
      ✓ should return Other for unknown stocks (1 ms)
    calculateBasicSectorAllocation
      ✓ should calculate sector allocation correctly
      ✓ should handle empty positions
    calculateBasicRiskMetrics
      ✓ should calculate risk metrics with sufficient history (1 ms)
      ✓ should return default values with insufficient history (1 ms)
    getLatestQuote
      ✓ should fetch and format quote data successfully
      ✓ should return null when no quote data available (1 ms)
      ✓ should return null on API error
    getLatestTrade
      ✓ should fetch and format trade data successfully (1 ms)
      ✓ should return null when no trade data available
      ✓ should return null on API error
    getBars
      ✓ should fetch and format bars data successfully
      ✓ should return empty array when no bars data available (1 ms)
      ✓ should return empty array on API error
      ✓ should use default options when none provided (1 ms)
    getMarketClock
      ✓ should fetch market clock successfully
      ✓ should throw error on API failure (1 ms)
    createOrder
      ✓ should create market order successfully
      ✓ should create limit order successfully (1 ms)
      ✓ should validate required parameters (1 ms)
      ✓ should handle order creation failure (1 ms)
      ✓ should handle undefined order_type in response

PASS tests/unit/services/aiStrategyGenerator.test.js
  AIStrategyGenerator Service
    Constructor and Initialization
      ✓ should initialize with default configuration (1 ms)
      ✓ should have predefined asset type patterns (1 ms)
      ✓ should have strategy templates
    generateCorrelationId
      ✓ should generate unique correlation IDs (1 ms)
    generateFromNaturalLanguage
      ✓ should generate strategy with AI when enabled (1 ms)
      ✓ should fallback to templates when AI fails (1 ms)
      ✓ should handle errors gracefully
    generateWithClaude
      ✓ should attempt Claude generation but fail due to configuration (2 ms)
      ✓ should handle Claude configuration errors (1 ms)
    generateWithTemplates
      ✓ should generate momentum strategy from template (2 ms)
      ✓ should generate mean reversion strategy from template (1 ms)
      ✓ should generate breakout strategy from template (1 ms)
      ✓ should default to momentum strategy for unrecognized prompts
      ✓ should handle empty symbols gracefully
    parseIntent
      ✓ should parse buy intent correctly (1 ms)
      ✓ should parse sell intent correctly
      ✓ should parse strategy types correctly (1 ms)
      ✓ should identify indicators from prompt
      ✓ should identify timeframes from prompt (1 ms)
      ✓ should default to unknown action for ambiguous prompts
    generateStrategyCode
      ✓ should generate code for momentum strategy (1 ms)
      ✓ should generate code for mean reversion strategy
      ✓ should generate code for breakout strategy (1 ms)
      ✓ should handle multiple symbols in generated code
      ✓ should include proper error handling in generated code (1 ms)
    validateStrategy
      ✓ should validate complete strategy successfully
      ✓ should identify missing required fields (19 ms)
      ✓ should validate code syntax
      ✓ should validate parameter types (1 ms)
      ✓ should provide validation warnings for potential issues
    Template Methods
      ✓ should return momentum template code (1 ms)
      ✓ should return mean reversion template code
      ✓ should return breakout template code
    AI Helper Methods
      ✓ should build system prompt
      ✓ should build user prompt (1 ms)
      ✓ should generate AI metadata
      ✓ should generate AI visual config
    Error Handling and Edge Cases
      ✓ should handle null or undefined prompts (1 ms)
      ✓ should handle very long prompts
      ✓ should handle special characters in prompts
      ✓ should handle empty symbols array
      ✓ should handle very large symbols array
      ✓ should handle invalid options gracefully (1 ms)
      ✓ should maintain correlation ID consistency
      ✓ should handle concurrent strategy generation requests (2 ms)
    Integration with Logger
      ✓ should log strategy generation attempts
      ✓ should log errors appropriately
      ✓ should log warnings for fallback scenarios (1 ms)

PASS tests/unit/utils/newsAnalyzer.test.js
  News Analyzer
    sentiment analysis
      ✓ should analyze positive sentiment
      ✓ should analyze negative sentiment
      ✓ should analyze neutral sentiment
      ✓ should handle empty or invalid input
      ✓ should handle missing title
    bulk article analysis
      ✓ should analyze multiple articles
      ✓ should handle empty articles array
      ✓ should handle null or undefined input
      ✓ should handle non-array input
    topic extraction
      ✓ should extract topics from articles (1 ms)
      ✓ should handle empty articles for topic extraction
      ✓ should handle articles without descriptions
    impact calculation
      ✓ should calculate article impact (1 ms)
      ✓ should handle article without publication date
      ✓ should handle null article
      ✓ should consider content length in impact
    source reliability
      ✓ should calculate high reliability for trusted sources
      ✓ should calculate medium reliability for business sources
      ✓ should handle unknown sources (1 ms)
      ✓ should handle null or empty source
      ✓ should detect unreliable sources
    sentiment keywords management
      ✓ should get sentiment keywords
      ✓ should update positive keywords
      ✓ should update negative keywords (1 ms)
      ✓ should update neutral keywords
      ✓ should handle invalid keyword updates
    error handling and edge cases
      ✓ should handle malformed article objects
      ✓ should handle articles with only whitespace
      ✓ should handle very long content (1326 ms)
      ✓ should handle special characters and numbers
      ✓ should handle circular references gracefully

PASS tests/unit/utils/backtestStore.test.js
  BacktestStore
    loadStrategies
      ✓ should return empty array when store file does not exist
      ✓ should load and parse strategies from file when it exists
      ✓ should handle JSON parse errors gracefully (7 ms)
      ✓ should handle file read errors (1 ms)
    saveStrategies
      ✓ should write strategies to file as formatted JSON
      ✓ should handle empty strategies array
      ✓ should handle file write errors (1 ms)
      ✓ should handle undefined strategies
      ✓ should handle null strategies
    addStrategy
      ✓ should add new strategy with generated ID (1 ms)
      ✓ should add strategy to empty store
      ✓ should preserve existing strategy properties
      ✓ should generate unique IDs for multiple strategies
      ✓ should handle strategy without name (5 ms)
    getStrategy
      ✓ should return strategy with matching ID (1 ms)
      ✓ should return undefined for non-existent ID
      ✓ should return undefined when store is empty
      ✓ should handle null ID
      ✓ should handle undefined ID (1 ms)
      ✓ should perform string comparison for ID
    deleteStrategy
      ✓ should remove strategy with matching ID
      ✓ should not modify store when ID does not exist
      ✓ should handle empty store
      ✓ should remove all strategies with matching ID
      ✓ should handle null ID (1 ms)
      ✓ should handle undefined ID
      ✓ should perform string comparison for ID
    integration scenarios
      ✓ should support full CRUD operations lifecycle (1 ms)
      ✓ should handle concurrent access scenarios
      ✓ should maintain data consistency after multiple operations

PASS tests/unit/utils/responseFormatter.test.js
  ResponseFormatter
    success
      ✓ should format basic success response with default status code (1 ms)
      ✓ should format success response with custom status code
      ✓ should include metadata in response
      ✓ should handle null and undefined data
      ✓ should handle complex data objects
      ✓ should preserve array data
    error
      ✓ should format basic error response with default status code
      ✓ should format error response with custom status code
      ✓ should include error details (1 ms)
      ✓ should override default service when provided in details
      ✓ should handle empty details object
    paginated
      ✓ should format paginated response with default pagination
      ✓ should format paginated response with custom pagination (3 ms)
      ✓ should calculate totalPages correctly
      ✓ should include metadata in paginated response (1 ms)
      ✓ should handle empty data array
      ✓ should use data length as default total
    validationError
      ✓ should format validation error with single error
      ✓ should format validation error with multiple errors (1 ms)
      ✓ should include default troubleshooting steps
      ✓ should merge custom troubleshooting details
    notFound
      ✓ should format not found error with default resource
      ✓ should format not found error with custom resource
      ✓ should include default troubleshooting for not found
      ✓ should merge custom troubleshooting for not found
    unauthorized
      ✓ should format unauthorized error with default message (1 ms)
      ✓ should format unauthorized error with custom message
      ✓ should include auth-specific troubleshooting
      ✓ should merge custom troubleshooting for unauthorized
    forbidden
      ✓ should format forbidden error with default message
      ✓ should format forbidden error with custom message
      ✓ should include permission-specific troubleshooting (1 ms)
    serverError
      ✓ should format server error with default message
      ✓ should format server error with custom message
      ✓ should include server error troubleshooting
      ✓ should include error details in server error
    edge cases and integration
      ✓ should handle timestamp generation consistently
      ✓ should maintain response structure consistency (1 ms)
      ✓ should handle special characters in messages
      ✓ should handle very long error messages
      ✓ should preserve data types in success responses

PASS tests/integration/utils/tradingModeHelper.test.js
  Trading Mode Helper Integration Tests
    Trading Mode Management
      ✓ should get current trading mode (3 ms)
      ✓ should switch to paper trading mode (1 ms)
      ✓ should switch to live trading mode with validation
      ✓ should handle simulation mode
    Mode Validation
      ✓ should validate paper trading requirements
      ✓ should validate live trading requirements (1 ms)
      ✓ should prevent unauthorized mode switches
    Trading Environment Configuration
      ✓ should configure paper trading environment
      ✓ should configure live trading environment
      ✓ should handle environment health checks (1 ms)
    Risk Management Integration
      ✓ should enforce risk limits by trading mode (1 ms)
      ✓ should adjust risk limits based on trading mode
    Mode-Specific Features
      ✓ should handle paper trading simulations (1 ms)
      ✓ should track paper trading performance
      ✓ should handle backtesting mode
    Data Isolation and Security
      ✓ should maintain data isolation between modes (1 ms)
      ✓ should secure live trading credentials
    Performance and Monitoring
      ✓ should monitor mode switching performance
      ✓ should handle concurrent mode operations
    Error Handling and Edge Cases
      ✓ should handle invalid mode transitions
      ✓ should handle system failures gracefully
      ✓ should handle network connectivity issues
    Audit and Compliance
      ✓ should log all mode changes (1 ms)
      ✓ should maintain compliance records

PASS tests/unit/utils/liveDataManager.test.js
  Live Data Manager
    initialization
      ✓ should initialize with default providers (1 ms)
      ✓ should have connection pool
      ✓ should have subscriptions tracking
    connection management
      ✓ should add connection successfully (1 ms)
      ✓ should get connection status
      ✓ should remove connection successfully
      ✓ should handle connection limit exceeded (1 ms)
    subscription management
      ✓ should add subscription successfully
      ✓ should get user subscriptions (1 ms)
      ✓ should remove subscription successfully
      ✓ should remove all user subscriptions
      ✓ should handle bulk subscription via subscribe method (1 ms)
    provider management
      ✓ should get provider status
      ✓ should update provider status
      ✓ should track provider usage
    rate limiting
      ✓ should set and check rate limits (1 ms)
      ✓ should reset rate limits
    performance tracking
      ✓ should track latency
      ✓ should calculate average latency
      ✓ should track errors
      ✓ should generate performance report (1 ms)
    dashboard and status
      ✓ should get comprehensive dashboard status
      ✓ should generate alerts
      ✓ should generate optimization recommendations (1 ms)
    analytics and metrics
      ✓ should get subscription trends
      ✓ should generate analytics report
      ✓ should get real-time metrics
    cost management
      ✓ should track cost accumulation
      ✓ should handle cost per request rate limiting
      ✓ should analyze cost optimization (1 ms)
    alert system integration
      ✓ should get alert status
      ✓ should update alert configuration
      ✓ should force health check
      ✓ should test notifications (3 ms)
    edge cases and error handling
      ✓ should handle invalid connection ID
      ✓ should handle missing provider
      ✓ should handle empty subscription removal
      ✓ should handle provider efficiency calculation

  console.log
    [2025-10-19T11:49:37.995Z] [ERROR] [e2d85b04] Sentiment analysis failed:

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    [2025-10-19T11:49:37.997Z] [ERROR] [36b909f7] Sentiment analysis failed:

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    [2025-10-19T11:49:37.998Z] [ERROR] [516263d6] Sentiment analysis failed:

      at Logger.log [as output] (utils/logger.js:88:15)

  console.log
    [2025-10-19T11:49:37.998Z] [ERROR] [40095bb0] Sentiment analysis failed:

      at Logger.log [as output] (utils/logger.js:88:15)

PASS tests/integration/utils/sentimentEngine.test.js
  Sentiment Engine Integration Tests
    Basic Sentiment Analysis
      ✓ should analyze sentiment with basic functionality (2 ms)
      ✓ should handle symbol-specific sentiment analysis
      ✓ should handle empty or invalid text (4 ms)
    Market Sentiment Calculation
      ✓ should calculate overall market sentiment (2 ms)
      ✓ should handle empty market data (1 ms)
      ✓ should handle invalid market data gracefully
    Score to Label Conversion
      ✓ should convert numeric scores to text labels (1 ms)
      ✓ should handle invalid scores gracefully
      ✓ should handle edge cases

PASS tests/unit/utils/sentimentEngine.test.js
  SentimentEngine
    calculateMarketSentiment
      ✓ should return neutral sentiment with default values
      ✓ should accept data parameter
      ✓ should handle errors gracefully (1 ms)
    scoreToLabel
      ✓ should return "positive" for high scores
      ✓ should return "negative" for low scores
      ✓ should return "neutral" for middle scores
      ✓ should handle invalid inputs
      ✓ should handle errors gracefully
    analyzeSentiment
      ✓ should analyze positive sentiment text
      ✓ should analyze negative sentiment text (4 ms)
      ✓ should analyze neutral text
      ✓ should analyze mixed sentiment text (1 ms)
      ✓ should handle case insensitive matching
      ✓ should handle partial word matches
      ✓ should calculate confidence based on sentiment word density (1 ms)
      ✓ should handle empty or invalid text input
      ✓ should handle non-string input (1 ms)
      ✓ should round score and confidence to 2 decimal places
      ✓ should cap confidence at 0.8
      ✓ should handle symbol parameter correctly
      ✓ should handle errors during analysis gracefully (1 ms)
      ✓ should handle edge case with only whitespace
      ✓ should validate all required fields in response
    integration tests
      ✓ should maintain consistent scoring across multiple calls (1 ms)
      ✓ should handle complex real-world text samples

PASS tests/integration/utils/responseFormatter.test.js
  Response Formatter Integration Tests
    Success Response Formatting
      ✓ should format successful API responses (1 ms)
      ✓ should handle array data in responses
    Error Response Formatting
      ✓ should format client errors (4xx)
      ✓ should format server errors (5xx)
    Paginated Response Formatting
      ✓ should format paginated responses correctly (2 ms)
    Validation Error Formatting
      ✓ should format validation errors

PASS tests/unit/routes/minimal.test.js
  Minimal Test
    ✓ should pass

PASS tests/minimal.test.js
  Minimal Test Suite
    ✓ basic math should work
    ✓ string operations should work (1 ms)

Summary of all failing tests
FAIL tests/integration/routes/trading.integration.test.js
  ● Trading Routes Integration Tests › GET /api/trading/signals/:timeframe › should return daily signals

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      187 |       const response = await request(app).get("/api/trading/signals/daily");
      188 |
    > 189 |       expect(response.status).toBe(200);
          |                               ^
      190 |
      191 |       if (response.status === 200) {
      192 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/trading.integration.test.js:189:31)

  ● Trading Routes Integration Tests › GET /api/trading/signals/:timeframe › should return weekly signals

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      201 |       const response = await request(app).get("/api/trading/signals/weekly");
      202 |
    > 203 |       expect(response.status).toBe(200);
          |                               ^
      204 |
      205 |       if (response.status === 200) {
      206 |         expect(response.body.timeframe).toBe("weekly");

      at Object.toBe (tests/integration/routes/trading.integration.test.js:203:31)

  ● Trading Routes Integration Tests › GET /api/trading/signals/:timeframe › should return monthly signals

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      211 |       const response = await request(app).get("/api/trading/signals/monthly");
      212 |
    > 213 |       expect(response.status).toBe(200);
          |                               ^
      214 |
      215 |       if (response.status === 200) {
      216 |         expect(response.body.timeframe).toBe("monthly");

      at Object.toBe (tests/integration/routes/trading.integration.test.js:213:31)

  ● Trading Routes Integration Tests › GET /api/trading/signals/:timeframe › should handle pagination parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      229 |       );
      230 |
    > 231 |       expect(response.status).toBe(200);
          |                               ^
      232 |
      233 |       if (response.status === 200) {
      234 |         expect(response.body.pagination).toHaveProperty("page", 1);

      at Object.toBe (tests/integration/routes/trading.integration.test.js:231:31)

  ● Trading Routes Integration Tests › GET /api/trading/signals/:timeframe › should handle latest_only parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      242 |       );
      243 |
    > 244 |       expect(response.status).toBe(200);
          |                               ^
      245 |
      246 |       if (response.status === 200 && response.body.data.length > 0) {
      247 |         // Each symbol should appear only once with latest_only=true

      at Object.toBe (tests/integration/routes/trading.integration.test.js:244:31)

  ● Trading Routes Integration Tests › GET /api/trading/signals/:timeframe › should handle symbol and signal type filters together

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      257 |       );
      258 |
    > 259 |       expect(response.status).toBe(200);
          |                               ^
      260 |
      261 |       if (response.status === 200 && response.body.data.length > 0) {
      262 |         response.body.data.forEach((signal) => {

      at Object.toBe (tests/integration/routes/trading.integration.test.js:259:31)

  ● Trading Routes Integration Tests › GET /api/trading/summary/:timeframe › should return daily signals summary

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      271 |       const response = await request(app).get("/api/trading/summary/daily");
      272 |
    > 273 |       expect(response.status).toBe(200);
          |                               ^
      274 |
      275 |       if (response.status === 200) {
      276 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/trading.integration.test.js:273:31)

  ● Trading Routes Integration Tests › GET /api/trading/summary/:timeframe › should return weekly signals summary

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      286 |       const response = await request(app).get("/api/trading/summary/weekly");
      287 |
    > 288 |       expect(response.status).toBe(200);
          |                               ^
      289 |
      290 |       if (response.status === 200) {
      291 |         expect(response.body.timeframe).toBe("weekly");

      at Object.toBe (tests/integration/routes/trading.integration.test.js:288:31)

  ● Trading Routes Integration Tests › GET /api/trading/swing-signals › should return swing trading signals

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      304 |       const response = await request(app).get("/api/trading/swing-signals");
      305 |
    > 306 |       expect(response.status).toBe(200);
          |                               ^
      307 |
      308 |       if (response.status === 200) {
      309 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/trading.integration.test.js:306:31)

  ● Trading Routes Integration Tests › GET /api/trading/swing-signals › should handle pagination for swing signals

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      327 |       );
      328 |
    > 329 |       expect(response.status).toBe(200);
          |                               ^
      330 |
      331 |       if (response.status === 200) {
      332 |         expect(response.body.pagination).toHaveProperty("page", 1);

      at Object.toBe (tests/integration/routes/trading.integration.test.js:329:31)

  ● Trading Routes Integration Tests › POST /api/trading/orders (Authenticated) › should require authentication for order creation

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      502 |
      503 |       // Trading orders endpoint appears to allow unauthenticated access in current implementation
    > 504 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      505 |     });
      506 |
      507 |     test("should create market buy order with valid data", async () => {

      at Object.toBe (tests/integration/routes/trading.integration.test.js:504:52)

  ● Trading Routes Integration Tests › GET /api/trading/simulator › should return trading simulation results with default parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      663 |       const response = await request(app).get("/api/trading/simulator");
      664 |
    > 665 |       expect(response.status).toBe(200);
          |                               ^
      666 |
      667 |       if (response.status === 200) {
      668 |         expect(response.body).toHaveProperty("simulation_parameters");

      at Object.toBe (tests/integration/routes/trading.integration.test.js:665:31)

  ● Trading Routes Integration Tests › GET /api/trading/simulator › should handle custom simulation parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      688 |       );
      689 |
    > 690 |       expect(response.status).toBe(200);
          |                               ^
      691 |
      692 |       if (response.status === 200) {
      693 |         expect(response.body.simulation_parameters.starting_portfolio).toBe(

      at Object.toBe (tests/integration/routes/trading.integration.test.js:690:31)

  ● Trading Routes Integration Tests › Edge Cases and Error Handling › should handle performance testing with response time validation

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      1308 |       const responseTime = Date.now() - startTime;
      1309 |
    > 1310 |       expect(response.status).toBe(200);
           |                               ^
      1311 |       expect(responseTime).toBeLessThan(30000); // 30 second timeout
      1312 |     });
      1313 |

      at Object.toBe (tests/integration/routes/trading.integration.test.js:1310:31)

  ● Trading Routes Integration Tests › Edge Cases and Error Handling › should handle malformed authentication token

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      1326 |         .set("Authorization", "Bearer invalid-malformed-token");
      1327 |
    > 1328 |       expect([401].includes(response.status)).toBe(true);
           |                                               ^
      1329 |     });
      1330 |
      1331 |     test("should handle large payload sizes gracefully", async () => {

      at Object.toBe (tests/integration/routes/trading.integration.test.js:1328:47)

FAIL tests/integration/errors/4xx-error-scenarios.integration.test.js
  ● 4xx Client Error Scenarios Integration › 400 Bad Request Scenarios › should return 400 for missing required fields

    expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 501

      150 |         const response = await requestBuilder.send(test.body);
      151 |
    > 152 |         expect(response.status).toBe(test.expectedStatus);
          |                                 ^
      153 |
      154 |         if (response.status === 400 || response.status === 422) {
      155 |           expect(response.body).toHaveProperty("error");

      at Object.toBe (tests/integration/errors/4xx-error-scenarios.integration.test.js:152:33)

  ● 4xx Client Error Scenarios Integration › 400 Bad Request Scenarios › should return 400 for invalid field values

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [200, 400, 404]

      185 |         const response = await requestBuilder.send(test.body);
      186 |
    > 187 |         expect([200, 400, 404]).toContain(response.status);
          |                                 ^
      188 |
      189 |         if (response.status === 400 || response.status === 422) {
      190 |           expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/errors/4xx-error-scenarios.integration.test.js:187:33)

  ● 4xx Client Error Scenarios Integration › 401 Unauthorized Scenarios › should return 401 for missing authorization header

    expect(received).toBe(expected) // Object.is equality

    Expected: 401
    Received: 200

      206 |
      207 |         // Should return 401 for missing authorization
    > 208 |         expect(response.status).toBe(401);
          |                                 ^
      209 |         expect(response.body).toHaveProperty("success", false);
      210 |         expect(response.body).toHaveProperty("error");
      211 |         expect(response.body.error).toMatch(

      at Object.toBe (tests/integration/errors/4xx-error-scenarios.integration.test.js:208:33)

  ● 4xx Client Error Scenarios Integration › 401 Unauthorized Scenarios › should return 401 for invalid authorization tokens

    expect(received).toBe(expected) // Object.is equality

    Expected: 401
    Received: 200

      231 |
      232 |         // Should return 401 for invalid tokens
    > 233 |         expect(response.status).toBe(401);
          |                                 ^
      234 |         expect(response.body).toHaveProperty("success", false);
      235 |         expect(response.body).toHaveProperty("error");
      236 |       }

      at Object.toBe (tests/integration/errors/4xx-error-scenarios.integration.test.js:233:33)

  ● 4xx Client Error Scenarios Integration › 401 Unauthorized Scenarios › should return 401 for malformed authorization headers

    expect(received).toBe(expected) // Object.is equality

    Expected: 401
    Received: 200

      253 |
      254 |         // Should return 401 for malformed headers
    > 255 |         expect(response.status).toBe(401);
          |                                 ^
      256 |         expect(response.body).toHaveProperty("success", false);
      257 |         expect(response.body).toHaveProperty("error");
      258 |       }

      at Object.toBe (tests/integration/errors/4xx-error-scenarios.integration.test.js:255:33)

  ● 4xx Client Error Scenarios Integration › 415 Unsupported Media Type Scenarios › should return 415 for unsupported content types

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [400, 404, 415, 422, 500]

      509 |           .send(test.body);
      510 |
    > 511 |         expect([400, 404, 415, 422, 500]).toContain(response.status);
          |                                           ^
      512 |
      513 |         if (response.status === 415) {
      514 |           expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/errors/4xx-error-scenarios.integration.test.js:511:43)

  ● 4xx Client Error Scenarios Integration › 422 Unprocessable Entity Scenarios › should return 422 for semantically invalid data

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [200, 400, 404]

      560 |         const response = await requestBuilder;
      561 |
    > 562 |         expect([200, 400, 404]).toContain(response.status);
          |                                 ^
      563 |
      564 |         if (response.status === 422) {
      565 |           expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/errors/4xx-error-scenarios.integration.test.js:562:33)

  ● 4xx Client Error Scenarios Integration › Cross-Route 4xx Error Consistency › should maintain consistent 4xx error response format

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 403]

      640 |           : [scenario.expectedStatus];
      641 |
    > 642 |         expect(expectedStatuses).toContain(response.status);
          |                                  ^
      643 |
      644 |         // All 4xx responses should have consistent structure
      645 |         if (response.status >= 400 && response.status < 500) {

      at Object.toContain (tests/integration/errors/4xx-error-scenarios.integration.test.js:642:34)

FAIL tests/integration/utils/performanceMonitor.test.js
  ● Performance Monitor Integration Tests › Performance Benchmarking › should benchmark database operations

    expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      589 |       });
      590 |
    > 591 |       expect(duration).toBeGreaterThan(0);
          |                        ^
      592 |       expect(duration).toBeLessThan(1000); // Should complete within 1 second
      593 |
      594 |       // Verify metric was recorded

      at Object.toBeGreaterThan (tests/integration/utils/performanceMonitor.test.js:591:24)

FAIL tests/integration/routes/trades.integration.test.js
  ● Trades Routes › GET /api/trades/recent › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      133 |       // No auth header
      134 |
    > 135 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      136 |     });
      137 |   });
      138 |

      at Object.toBe (tests/integration/routes/trades.integration.test.js:135:47)

  ● Trades Routes › GET /api/trades/import/status › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      159 |       // No auth header
      160 |
    > 161 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      162 |     });
      163 |   });
      164 |

      at Object.toBe (tests/integration/routes/trades.integration.test.js:161:47)

  ● Trades Routes › POST /api/trades/import/alpaca › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      191 |       // No auth header
      192 |
    > 193 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      194 |     });
      195 |   });
      196 |

      at Object.toBe (tests/integration/routes/trades.integration.test.js:193:47)

  ● Trades Routes › GET /api/trades/summary › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      213 |       // No auth header
      214 |
    > 215 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      216 |     });
      217 |   });
      218 |

      at Object.toBe (tests/integration/routes/trades.integration.test.js:215:47)

  ● Trades Routes › GET /api/trades/positions › should return positions data

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      223 |         .set("Authorization", "Bearer dev-bypass-token");
      224 |
    > 225 |       expect(response.status).toBe(200);
          |                               ^
      226 |
      227 |       if (response.status === 200) {
      228 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/trades.integration.test.js:225:31)

  ● Trades Routes › GET /api/trades/positions › should handle query parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      238 |         .set("Authorization", "Bearer dev-bypass-token");
      239 |
    > 240 |       expect(response.status).toBe(200);
          |                               ^
      241 |
      242 |       if (response.status === 200) {
      243 |         expect(response.body.data.pagination.limit).toBe(10);

      at Object.toBe (tests/integration/routes/trades.integration.test.js:240:31)

  ● Trades Routes › GET /api/trades/positions › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      250 |       // No auth header
      251 |
    > 252 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      253 |     });
      254 |   });
      255 |

      at Object.toBe (tests/integration/routes/trades.integration.test.js:252:47)

  ● Trades Routes › GET /api/trades/analytics › should return comprehensive trade analytics

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      260 |         .set("Authorization", "Bearer dev-bypass-token");
      261 |
    > 262 |       expect(response.status).toBe(200);
          |                               ^
      263 |
      264 |       if (response.status === 200) {
      265 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/trades.integration.test.js:262:31)

  ● Trades Routes › GET /api/trades/analytics › should handle timeframe parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      292 |           .set("Authorization", "Bearer dev-bypass-token");
      293 |
    > 294 |         expect(response.status).toBe(200);
          |                                 ^
      295 |
      296 |         if (response.status === 200) {
      297 |           expect(response.body.metadata.timeframe).toBe(timeframe);

      at Object.toBe (tests/integration/routes/trades.integration.test.js:294:33)

  ● Trades Routes › GET /api/trades/analytics › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      304 |       // No auth header
      305 |
    > 306 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      307 |     });
      308 |   });
      309 |

      at Object.toBe (tests/integration/routes/trades.integration.test.js:306:47)

  ● Trades Routes › GET /api/trades/analytics/overview › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      333 |       // No auth header
      334 |
    > 335 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      336 |     });
      337 |   });
      338 |

      at Object.toBe (tests/integration/routes/trades.integration.test.js:335:47)

  ● Trades Routes › GET /api/trades/history › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      375 |       // No auth header
      376 |
    > 377 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      378 |     });
      379 |   });
      380 |

      at Object.toBe (tests/integration/routes/trades.integration.test.js:377:47)

  ● Trades Routes › GET /api/trades/performance › should return performance data or error

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      385 |         .set("Authorization", "Bearer dev-bypass-token");
      386 |
    > 387 |       expect(response.status).toBe(200);
          |                               ^
      388 |
      389 |       if (response.status === 200) {
      390 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/trades.integration.test.js:387:31)

  ● Trades Routes › GET /api/trades/performance › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      407 |       // No auth header
      408 |
    > 409 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      410 |     });
      411 |   });
      412 |

      at Object.toBe (tests/integration/routes/trades.integration.test.js:409:47)

  ● Trades Routes › GET /api/trades/insights › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      440 |       // No auth header
      441 |
    > 442 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      443 |     });
      444 |   });
      445 |

      at Object.toBe (tests/integration/routes/trades.integration.test.js:442:47)

  ● Trades Routes › GET /api/trades/export › should export as CSV when format=csv

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      482 |         .set("Authorization", "Bearer dev-bypass-token");
      483 |
    > 484 |       expect(response.status).toBe(200);
          |                               ^
      485 |
      486 |       if (response.status === 200) {
      487 |         // Updated implementation returns JSON with CSV content

      at Object.toBe (tests/integration/routes/trades.integration.test.js:484:31)

  ● Trades Routes › GET /api/trades/export › should handle date range parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      499 |         .set("Authorization", "Bearer dev-bypass-token");
      500 |
    > 501 |       expect(response.status).toBe(200);
          |                               ^
      502 |     });
      503 |
      504 |     test("should require authentication", async () => {

      at Object.toBe (tests/integration/routes/trades.integration.test.js:501:31)

  ● Trades Routes › GET /api/trades/export › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      506 |       // No auth header
      507 |
    > 508 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      509 |     });
      510 |   });
      511 |

      at Object.toBe (tests/integration/routes/trades.integration.test.js:508:47)

  ● Trades Routes › DELETE /api/trades/data › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      543 |       // No auth header
      544 |
    > 545 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      546 |     });
      547 |   });
      548 |

      at Object.toBe (tests/integration/routes/trades.integration.test.js:545:47)


  ● Test suite failed to run

    Cannot add a hook after tests have started running. Hooks must be defined synchronously.

      30 | describe("Trades Routes", () => {
      31 |   beforeAll(async () => {
    > 32 |     beforeEach(() => {
         |     ^
      33 |     jest.clearAllMocks();
      34 |     query.mockImplementation((sql, params) => {
      35 |       // Default: return empty rows for all queries

      at eventHandler (node_modules/jest-circus/build/eventHandler.js:104:11)
      at Object.beforeEach (tests/integration/routes/trades.integration.test.js:32:5)

FAIL tests/integration/routes/signals.integration.test.js
  ● Signals Routes - Integration Tests › GET /api/signals - Database Schema Integration › should return signals with proper loader table schema structure including swing metrics

    expect(received).toHaveProperty(path)

    Expected path: "summary"
    Received path: []

    Received value: {"data": [], "message": "No daily signals currently available. Signals will appear after data loading.", "pagination": {"hasMore": false, "limit": 25, "page": 1}, "success": true, "timeframe": "daily", "timestamp": "2025-10-19T11:48:46.563Z"}

      111 |       expect(response.body).toHaveProperty("data");
      112 |       expect(Array.isArray(response.body.data)).toBe(true);
    > 113 |       expect(response.body).toHaveProperty("summary");
          |                             ^
      114 |       expect(response.body.summary).toHaveProperty("buy_signals");
      115 |       expect(response.body.summary).toHaveProperty("sell_signals");
      116 |

      at Object.toHaveProperty (tests/integration/routes/signals.integration.test.js:113:29)

  ● Signals Routes - Integration Tests › GET /api/signals/:symbol › should return symbol-specific signals

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      185 |       const response = await request(app).get("/api/signals/AAPL");
      186 |
    > 187 |       expect(response.status).toBe(200);
          |                               ^
      188 |       expect(response.body.success).toBe(true);
      189 |       expect(response.body).toHaveProperty("data");
      190 |       expect(Array.isArray(response.body.data)).toBe(true);

      at Object.toBe (tests/integration/routes/signals.integration.test.js:187:31)

  ● Signals Routes - Integration Tests › POST /api/signals/alerts - Database Integration › should validate signal_type field strictly

    expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 500

      374 |         expect(response.body.data).toHaveProperty("signal_type", "INVALID");
      375 |       } else {
    > 376 |         expect(response.status).toBe(400);
          |                                 ^
      377 |         expect(response.body.success).toBe(false);
      378 |         expect(response.body.error).toContain("signal_type");
      379 |       }

      at Object.toBe (tests/integration/routes/signals.integration.test.js:376:33)

  ● Signals Routes - Integration Tests › GET /api/signals/performance/:symbol › should return performance data for specific symbol

    expect(received).toHaveProperty(path)

    Expected path: "confidence"
    Received path: []

    Received value: {"currentReturn": 0, "data_source": "database", "daysHeld": 0, "error_details": "Table buy_sell_daily not found or has no columns", "message": "Performance data not available", "signal": "BUY", "signalDate": "2025-10-19", "symbol": "AAPL", "timeframe": "daily", "timestamp": "2025-10-19T11:48:46.636Z"}

      428 |       expect(response.body).toHaveProperty("symbol", "AAPL");
      429 |       expect(response.body).toHaveProperty("signal");
    > 430 |       expect(response.body).toHaveProperty("confidence");
          |                             ^
      431 |       expect(response.body).toHaveProperty("signalDate");
      432 |       expect(response.body).toHaveProperty("daysHeld");
      433 |       expect(response.body).toHaveProperty("currentReturn");

      at Object.toHaveProperty (tests/integration/routes/signals.integration.test.js:430:29)

  ● Signals Routes - Integration Tests › GET /api/signals/list › should return signals list endpoint

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      594 |
      595 |       expect(response.status).toBe(200);
    > 596 |       expect(response.body.success).toBe(true);
          |                                     ^
      597 |       expect(response.body).toHaveProperty("data");
      598 |       expect(response.body).toHaveProperty("summary");
      599 |       expect(Array.isArray(response.body.data)).toBe(true);

      at Object.toBe (tests/integration/routes/signals.integration.test.js:596:37)

  ● Signals Routes - Integration Tests › GET /api/signals/list › should handle timeframe parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      604 |
      605 |       expect(response.status).toBe(200);
    > 606 |       expect(response.body.success).toBe(true);
          |                                     ^
      607 |       expect(response.body).toHaveProperty("timeframe", "weekly");
      608 |     });
      609 |

      at Object.toBe (tests/integration/routes/signals.integration.test.js:606:37)

  ● Signals Routes - Integration Tests › GET /api/signals/list › should handle pagination parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      612 |
      613 |       expect(response.status).toBe(200);
    > 614 |       expect(response.body.success).toBe(true);
          |                                     ^
      615 |       expect(response.body).toHaveProperty("pagination");
      616 |       if (response.body.pagination) {
      617 |         expect(response.body.pagination.limit).toBe(10);

      at Object.toBe (tests/integration/routes/signals.integration.test.js:614:37)

FAIL tests/integration/routes/alerts.integration.test.js
  ● Alerts Routes › GET /api/alerts/active › should return active alerts with proper structure

    expect(received).toHaveProperty(path)

    Expected path: "summary"
    Received path: []

    Received value: {"alerts": [], "filters": {"alert_type": "all", "severity": "all", "status": "active"}, "message": "No alerts found or database query returned invalid format", "pagination": {"hasMore": false, "limit": 50, "offset": 0, "page": 1}, "total": 0}

      61 |         expect(response.body.success).toBe(true);
      62 |         expect(response.body.data).toHaveProperty("alerts");
    > 63 |         expect(response.body.data).toHaveProperty("summary");
         |                                    ^
      64 |         expect(response.body.filters).toHaveProperty(
      65 |           "user_id",
      66 |           "dev-user-bypass"

      at Object.toHaveProperty (tests/integration/routes/alerts.integration.test.js:63:36)

  ● Alerts Routes › GET /api/alerts/active › should handle query parameters

    TypeError: Cannot read properties of undefined (reading 'user_id')

      82 |       if (response.status === 200) {
      83 |         expect(response.body.success).toBe(true);
    > 84 |         expect(response.body.filters.user_id).toBe("dev-user-bypass");
         |                                      ^
      85 |       } else {
      86 |         expect(response.body.success).toBe(false);
      87 |       }

      at Object.user_id (tests/integration/routes/alerts.integration.test.js:84:38)

  ● Alerts Routes › PUT /api/alerts/:alertId/acknowledge › should acknowledge alert successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: "dev-user-bypass"
    Received: "test-user-123"

      133 |       expect(response.body.data.alert_id).toBe(alertId);
      134 |       expect(response.body.data.action).toBe("acknowledge");
    > 135 |       expect(response.body.data.acknowledged_by).toBe("dev-user-bypass");
          |                                                  ^
      136 |       expect(response.body.data.status).toBe("acknowledged");
      137 |       expect(response.body).toHaveProperty("message");
      138 |       expect(response.body).toHaveProperty("timestamp");

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:135:50)

  ● Alerts Routes › PUT /api/alerts/:alertId/snooze › should snooze alert with default duration

    expect(received).toBe(expected) // Object.is equality

    Expected: "dev-user-bypass"
    Received: "test-user-123"

      179 |       expect(response.body.data.alert_id).toBe(alertId);
      180 |       expect(response.body.data.duration_minutes).toBe(60);
    > 181 |       expect(response.body.data.snoozed_by).toBe("dev-user-bypass");
          |                                             ^
      182 |       expect(response.body.data.status).toBe("snoozed");
      183 |       expect(response.body.data).toHaveProperty("snooze_until");
      184 |     });

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:181:45)

  ● Alerts Routes › POST /api/alerts › should create new alert

    expect(received).toBe(expected) // Object.is equality

    Expected: "dev-user-bypass"
    Received: "test-user-123"

      234 |       expect([200, 201]).toContain(response.status);
      235 |       expect(response.body.success).toBe(true);
    > 236 |       expect(response.body.data.user_id).toBe("dev-user-bypass");
          |                                          ^
      237 |       if (response.body.data && response.body.data.symbol) { expect(response.body.data.symbol).toBe("AAPL"); } else { expect(response.body.data).toBeDefined(); }
      238 |       expect(response.body.data.category).toBe("price");
      239 |       expect(response.body.data.condition).toBe("above");

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:236:42)

  ● Alerts Routes › GET /api/alerts/settings › should return comprehensive alert settings

    expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [200, 201, 204]

      360 |         .set("Authorization", "Bearer dev-bypass-token");
      361 |
    > 362 |       expect([200, 201, 204]).toContain(response.status);
          |                               ^
      363 |       expect(response.body.success).toBe(true);
      364 |       expect(response.body.data).toHaveProperty("settings");
      365 |       expect(response.body.data).toHaveProperty("summary");

      at Object.toContain (tests/integration/routes/alerts.integration.test.js:362:31)

  ● Alerts Routes › GET /api/alerts/settings › should include notification preferences

    TypeError: Cannot read properties of undefined (reading 'settings')

      382 |
      383 |       const notifications =
    > 384 |         response.body.data.settings.notification_preferences;
          |                            ^
      385 |       expect(notifications).toHaveProperty("email_enabled");
      386 |       expect(notifications).toHaveProperty("sms_enabled");
      387 |       expect(notifications).toHaveProperty("push_enabled");

      at Object.settings (tests/integration/routes/alerts.integration.test.js:384:28)

  ● Alerts Routes › GET /api/alerts/settings › should include alert categories

    TypeError: Cannot read properties of undefined (reading 'settings')

      394 |         .set("Authorization", "Bearer dev-bypass-token");
      395 |
    > 396 |       const categories = response.body.data.settings.alert_categories;
          |                                             ^
      397 |       expect(categories).toHaveProperty("price_alerts");
      398 |       expect(categories).toHaveProperty("volume_alerts");
      399 |       expect(categories).toHaveProperty("earnings_alerts");

      at Object.settings (tests/integration/routes/alerts.integration.test.js:396:45)

  ● Alerts Routes › GET /api/alerts/settings › should include subscription info

    TypeError: Cannot read properties of undefined (reading 'settings')

      410 |         .set("Authorization", "Bearer dev-bypass-token");
      411 |
    > 412 |       const subscription = response.body.data.settings.subscription_info;
          |                                               ^
      413 |       expect(subscription).toHaveProperty("plan");
      414 |       expect(subscription).toHaveProperty("alerts_used_today");
      415 |       expect(subscription).toHaveProperty("alerts_limit_daily");

      at Object.settings (tests/integration/routes/alerts.integration.test.js:412:47)

  ● Alerts Routes › POST /api/alerts/create › should create alert with required fields

    expect(received).toBe(expected) // Object.is equality

    Expected: "dev-user-bypass"
    Received: "test-user-123"

      532 |       expect(response.body.data.alert.symbol).toBe("NVDA");
      533 |       expect(response.body.data.alert.threshold).toBe(500.0);
    > 534 |       expect(response.body.data.alert.user_id).toBe("dev-user-bypass");
          |                                                ^
      535 |       expect(response.body.data.alert.status).toBe("active");
      536 |       expect(response.body.data).toHaveProperty("next_actions");
      537 |     });

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:534:48)

  ● Alerts Routes › DELETE /api/alerts/delete/:alertId › should delete alert successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: "dev-user-bypass"
    Received: "test-user-123"

      595 |         expect(response.body.data.deleted_alert.alert_id).toBe(alertId);
      596 |         if (response.body.data && response.body.data.deleted_alert) {
    > 597 |           expect(response.body.data.deleted_alert.user_id).toBe("dev-user-bypass");
          |                                                            ^
      598 |           expect(response.body.data.deleted_alert.status).toBe("deleted");
      599 |           expect(response.body.data.deleted_alert.deletion_reason).toBe(
      600 |             "no_longer_needed"

      at Object.toBe (tests/integration/routes/alerts.integration.test.js:597:60)


  ● Test suite failed to run

    Cannot add a hook after tests have started running. Hooks must be defined synchronously.

      30 | describe("Alerts Routes", () => {
      31 |   beforeAll(async () => {
    > 32 |     beforeEach(() => {
         |     ^
      33 |     jest.clearAllMocks();
      34 |     query.mockImplementation((sql, params) => {
      35 |       // Default: return empty rows for all queries

      at eventHandler (node_modules/jest-circus/build/eventHandler.js:104:11)
      at Object.beforeEach (tests/integration/routes/alerts.integration.test.js:32:5)

FAIL tests/integration/auth/auth-flow.integration.test.js
  ● Authentication Flow Integration › Token-Based Authentication Flow › should reject invalid tokens

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 500]

      85 |           .set("Authorization", token);
      86 |
    > 87 |         expect([401, 500]).toContain(response.status);
         |                            ^
      88 |
      89 |         // Handle both custom API format and Express default format
      90 |         const hasCustomFormat = Object.prototype.hasOwnProperty.call(

      at Object.toContain (tests/integration/auth/auth-flow.integration.test.js:87:28)

  ● Authentication Flow Integration › Token-Based Authentication Flow › should handle missing authorization header

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 403, 500]

      115 |         const response = await request(app).get(endpoint);
      116 |
    > 117 |         expect([401, 403, 500]).toContain(response.status);
          |                                 ^
      118 |
      119 |         // Should return authentication error
      120 |         if (response.status === 401 || response.status === 403) {

      at Object.toContain (tests/integration/auth/auth-flow.integration.test.js:117:33)

  ● Authentication Flow Integration › Authentication Context Propagation › should handle authentication in POST/PUT requests

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [401, 403]

      246 |           .send(test.body);
      247 |
    > 248 |         expect([401, 403]).toContain(unauthResponse.status);
          |                            ^
      249 |         expect(unauthResponse.body).toHaveProperty("success", false);
      250 |
      251 |         // Test with auth

      at Object.toContain (tests/integration/auth/auth-flow.integration.test.js:248:28)

  ● Authentication Flow Integration › Authentication Error Handling › should provide consistent error responses for auth failures

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 500]

      342 |         const response = await requestBuilder;
      343 |
    > 344 |         expect([401, 500]).toContain(response.status);
          |                            ^
      345 |
      346 |         // Handle both custom API format and Express default format
      347 |         const hasCustomFormat = Object.prototype.hasOwnProperty.call(

      at Object.toContain (tests/integration/auth/auth-flow.integration.test.js:344:28)

  ● Authentication Flow Integration › Authentication Error Handling › should not leak sensitive information in auth errors

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 500]

      373 |           .set("Authorization", token);
      374 |
    > 375 |         expect([401, 500]).toContain(response.status);
          |                            ^
      376 |
      377 |         const errorMessage = (
      378 |           response.body?.error ||

      at Object.toContain (tests/integration/auth/auth-flow.integration.test.js:375:28)

  ● Authentication Flow Integration › Route-Specific Authentication › should handle mixed public/protected route access

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 403]

      455 |       // Access protected route without auth
      456 |       const protectedResponse = await request(app).get("/api/portfolio");
    > 457 |       expect([401, 403]).toContain(protectedResponse.status);
          |                          ^
      458 |
      459 |       // Access protected route with auth
      460 |       const authResponse = await request(app)

      at Object.toContain (tests/integration/auth/auth-flow.integration.test.js:457:26)

  ● Authentication Flow Integration › Authentication Integration with Other Middleware › should work with request validation

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [200, 404]

      542 |         .send({ symbols: ["AAPL"] });
      543 |
    > 544 |       expect([200, 404]).toContain(validResponse.status);
          |                          ^
      545 |       expect([401, 403]).not.toContain(validResponse.status);
      546 |
      547 |       // Invalid request with auth (should get validation error, not auth error)

      at Object.toContain (tests/integration/auth/auth-flow.integration.test.js:544:26)

  ● Authentication Flow Integration › Authentication Integration with Other Middleware › should work with error handling middleware

    expect(received).toContain(expected) // indexOf

    Expected value: 404
    Received array: [401, 403]

      585 |       const noAuthResponse = await request(app).get(endpoint);
      586 |
    > 587 |       expect([401, 403]).toContain(noAuthResponse.status);
          |                          ^
      588 |
      589 |       // Handle both custom API format and Express default format
      590 |       const hasCustomFormat2 = Object.prototype.hasOwnProperty.call(

      at Object.toContain (tests/integration/auth/auth-flow.integration.test.js:587:26)

FAIL tests/integration/routes/orders.integration.test.js
  ● Orders Routes Integration Tests › GET /api/orders (List Orders) › should return user orders

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      50 |         .set("Authorization", "Bearer dev-bypass-token");
      51 |
    > 52 |       expect([200, 401].includes(response.status)).toBe(true);
         |                                                    ^
      53 |
      54 |       if (response.status === 200) {
      55 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/orders.integration.test.js:52:52)

  ● Orders Routes Integration Tests › GET /api/orders (List Orders) › should handle status filter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      64 |         .set("Authorization", "Bearer dev-bypass-token");
      65 |
    > 66 |       expect([200, 401].includes(response.status)).toBe(true);
         |                                                    ^
      67 |
      68 |       if (response.status === 200) {
      69 |         expect(response.body.data).toHaveProperty("orders");

      at Object.toBe (tests/integration/routes/orders.integration.test.js:66:52)

  ● Orders Routes Integration Tests › GET /api/orders (List Orders) › should handle side filter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      76 |         .set("Authorization", "Bearer dev-bypass-token");
      77 |
    > 78 |       expect([200, 401].includes(response.status)).toBe(true);
         |                                                    ^
      79 |
      80 |       if (response.status === 200) {
      81 |         expect(response.body.data).toHaveProperty("orders");

      at Object.toBe (tests/integration/routes/orders.integration.test.js:78:52)

  ● Orders Routes Integration Tests › GET /api/orders (List Orders) › should handle pagination parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      88 |         .set("Authorization", "Bearer dev-bypass-token");
      89 |
    > 90 |       expect([200, 401].includes(response.status)).toBe(true);
         |                                                    ^
      91 |
      92 |       if (response.status === 200) {
      93 |         expect(response.body.data.orders.length).toBeLessThanOrEqual(10);

      at Object.toBe (tests/integration/routes/orders.integration.test.js:90:52)

  ● Orders Routes Integration Tests › PUT /api/orders/:orderId (Update Order) › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      251 |         .send({ limit_price: 150.0 });
      252 |
    > 253 |       expect([200, 401, 403, 404].includes(response.status)).toBe(true);
          |                                                              ^
      254 |     });
      255 |   });
      256 |

      at Object.toBe (tests/integration/routes/orders.integration.test.js:253:62)

  ● Orders Routes Integration Tests › DELETE /api/orders/:orderId (Cancel Order) › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      279 |       const response = await request(app).delete("/api/orders/test-order-123");
      280 |
    > 281 |       expect([200, 401, 403, 404].includes(response.status)).toBe(true);
          |                                                              ^
      282 |     });
      283 |   });
      284 |

      at Object.toBe (tests/integration/routes/orders.integration.test.js:281:62)

  ● Orders Routes Integration Tests › GET /api/orders/history (Order History) › should return order history

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      289 |         .set("Authorization", "Bearer dev-bypass-token");
      290 |
    > 291 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      292 |
      293 |       if (response.status === 200) {
      294 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/orders.integration.test.js:291:52)

  ● Orders Routes Integration Tests › GET /api/orders/history (Order History) › should handle date filtering

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      303 |         .set("Authorization", "Bearer dev-bypass-token");
      304 |
    > 305 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      306 |
      307 |       if (response.status === 200) {
      308 |         expect(response.body.data).toHaveProperty("orders");

      at Object.toBe (tests/integration/routes/orders.integration.test.js:305:52)

  ● Orders Routes Integration Tests › GET /api/orders/history (Order History) › should include performance summary

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      315 |         .set("Authorization", "Bearer dev-bypass-token");
      316 |
    > 317 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      318 |
      319 |       if (response.status === 200) {
      320 |         expect(response.body.data).toHaveProperty("orders");

      at Object.toBe (tests/integration/routes/orders.integration.test.js:317:52)

  ● Orders Routes Integration Tests › GET /api/orders/history (Order History) › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      325 |       const response = await request(app).get("/api/orders/history");
      326 |
    > 327 |       expect([200, 401, 403].includes(response.status)).toBe(true);
          |                                                         ^
      328 |     });
      329 |   });
      330 |

      at Object.toBe (tests/integration/routes/orders.integration.test.js:327:57)

  ● Orders Routes Integration Tests › Performance and Edge Cases › should handle concurrent requests

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      354 |
      355 |       responses.forEach((response) => {
    > 356 |         expect([200, 201, 400, 401].includes(response.status)).toBe(true);
          |                                                                ^
      357 |       });
      358 |     });
      359 |

      at toBe (tests/integration/routes/orders.integration.test.js:356:64)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/routes/orders.integration.test.js:355:17)

  ● Orders Routes Integration Tests › Performance and Edge Cases › should handle database connection issues gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      425 |         .set("Authorization", "Bearer dev-bypass-token");
      426 |
    > 427 |       expect(response.status).toBe(200);
          |                               ^
      428 |
      429 |       if (response.status >= 500) {
      430 |         expect(response.body).toHaveProperty("error");

      at Object.toBe (tests/integration/routes/orders.integration.test.js:427:31)

  ● Orders Routes Integration Tests › Authentication and Trading Mode › should respect trading mode restrictions

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      439 |         .set("Authorization", "Bearer dev-bypass-token");
      440 |
    > 441 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      442 |
      443 |       if (response.status === 403) {
      444 |         expect(response.body).toHaveProperty("trading_mode");

      at Object.toBe (tests/integration/routes/orders.integration.test.js:441:52)

  ● Orders Routes Integration Tests › Authentication and Trading Mode › should handle malformed authorization headers

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      451 |         .set("Authorization", "InvalidFormat");
      452 |
    > 453 |       expect([200, 401, 403].includes(response.status)).toBe(true);
          |                                                         ^
      454 |     });
      455 |
      456 |     test("should handle empty authorization headers", async () => {

      at Object.toBe (tests/integration/routes/orders.integration.test.js:453:57)

FAIL tests/integration/middleware/security-headers.integration.test.js
  ● Security Headers Integration › Request Validation Security › should reject oversized request bodies

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [200, 400, 404, 405, 413, 422]

      211 |         .send({ data: largePayload });
      212 |
    > 213 |       expect([200, 400, 404, 405, 413, 422]).toContain(response.status);
          |                                              ^
      214 |       expect(response.headers["content-type"]).toMatch(/application\/json/);
      215 |
      216 |       if (response.status === 413) {

      at Object.toContain (tests/integration/middleware/security-headers.integration.test.js:213:46)

  ● Security Headers Integration › Error Information Leakage › should not expose database connection details

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 500]

      327 |         .set("Authorization", "Bearer invalid-token");
      328 |
    > 329 |       expect([401, 500]).toContain(response.status);
          |                          ^
      330 |       expect(response.headers["content-type"]).toMatch(/application\/json/);
      331 |
      332 |       if (response.body && typeof response.body === "object") {

      at Object.toContain (tests/integration/middleware/security-headers.integration.test.js:329:26)

  ● Security Headers Integration › Authentication Security › should reject requests with malformed authentication

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [400, 401, 404, 422]

      381 |           .set("Authorization", token);
      382 |
    > 383 |         expect([400, 401, 404, 422]).toContain(response.status);
          |                                      ^
      384 |         expect(response.headers["content-type"]).toMatch(/application\/json/);
      385 |
      386 |         // Should not reflect malicious content in response

      at Object.toContain (tests/integration/middleware/security-headers.integration.test.js:383:38)

  ● Security Headers Integration › Authentication Security › should handle authentication bypass attempts

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 500]

      404 |         const response = await request(app).get("/api/portfolio").set(headers);
      405 |
    > 406 |         expect([401, 500]).toContain(response.status);
          |                            ^
      407 |         expect(response.headers["content-type"]).toMatch(/application\/json/);
      408 |       }
      409 |     });

      at Object.toContain (tests/integration/middleware/security-headers.integration.test.js:406:28)

  ● Security Headers Integration › Input Validation Security › should validate and sanitize JSON payloads

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [200, 400, 404, 422, 405]

      426 |           .send(payload);
      427 |
    > 428 |         expect([200, 400, 404, 422, 405]).toContain(response.status);
          |                                           ^
      429 |
      430 |         // Should not execute or reflect malicious content
      431 |         if (response.body && typeof response.body === "object") {

      at Object.toContain (tests/integration/middleware/security-headers.integration.test.js:428:43)

FAIL tests/integration/routes/dashboard.integration.test.js
  ● Dashboard Routes Integration Tests › GET /api/dashboard/summary (Dashboard Summary) › should return comprehensive dashboard summary data

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      87 |         .set("Authorization", `Bearer ${authToken}`);
      88 |
    > 89 |       expect(response.status).toBe(200);
         |                               ^
      90 |
      91 |       if (response.status === 200) {
      92 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:89:31)

  ● Dashboard Routes Integration Tests › GET /api/dashboard/summary (Dashboard Summary) › should handle database connectivity issues gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      152 |         .set("Authorization", `Bearer ${authToken}`);
      153 |
    > 154 |       expect(response.status).toBe(200);
          |                               ^
      155 |
      156 |       if (response.status >= 500) {
      157 |         expect(response.body).toHaveProperty("error");

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:154:31)

  ● Dashboard Routes Integration Tests › GET /api/dashboard/holdings (Portfolio Holdings) › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      165 |       const response = await request(app).get("/api/dashboard/holdings");
      166 |
    > 167 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      168 |     });
      169 |
      170 |     test("should return holdings data with valid authentication", async () => {

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:167:47)

  ● Dashboard Routes Integration Tests › GET /api/dashboard/holdings (Portfolio Holdings) › should return holdings data with valid authentication

    expect(received).toHaveProperty(path)

    Expected path: "count"
    Received path: []

    Received value: {"holdings": [], "summary": null}

      179 |         expect(response.body.data).toHaveProperty("holdings");
      180 |         expect(response.body.data).toHaveProperty("summary");
    > 181 |         expect(response.body.data).toHaveProperty("count");
          |                                    ^
      182 |         expect(Array.isArray(response.body.data.holdings)).toBe(true);
      183 |       }
      184 |     });

      at Object.toHaveProperty (tests/integration/routes/dashboard.integration.test.js:181:36)

  ● Dashboard Routes Integration Tests › GET /api/dashboard/holdings (Portfolio Holdings) › should handle invalid authentication tokens

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      204 |         .set("Authorization", "Bearer invalid-token");
      205 |
    > 206 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      207 |     });
      208 |   });
      209 |

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:206:47)

  ● Dashboard Routes Integration Tests › GET /api/dashboard/performance (Portfolio Performance) › should require authentication for performance data

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      212 |       const response = await request(app).get("/api/dashboard/performance");
      213 |
    > 214 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      215 |     });
      216 |
      217 |     test("should return performance data with valid authentication", async () => {

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:214:47)

  ● Dashboard Routes Integration Tests › GET /api/dashboard/performance (Portfolio Performance) › should return performance data with valid authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      220 |         .set("Authorization", `Bearer ${authToken}`);
      221 |
    > 222 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      223 |
      224 |       if (response.status === 200) {
      225 |         expect(response.body).toHaveProperty("data");

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:222:52)

  ● Dashboard Routes Integration Tests › GET /api/dashboard/alerts (Trading Alerts) › should require authentication for alerts

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      271 |       const response = await request(app).get("/api/dashboard/alerts");
      272 |
    > 273 |       expect([401, 403, 500, 501].includes(response.status)).toBe(true);
          |                                                              ^
      274 |     });
      275 |
      276 |     test("should return alerts data with authentication", async () => {

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:273:62)

  ● Dashboard Routes Integration Tests › Performance and Edge Cases › should handle concurrent requests to dashboard endpoints

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      552 |
      553 |       responses.forEach((response) => {
    > 554 |         expect(response.status).toBe(200);
          |                                 ^
      555 |       });
      556 |     });
      557 |

      at toBe (tests/integration/routes/dashboard.integration.test.js:554:33)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/routes/dashboard.integration.test.js:553:17)

  ● Dashboard Routes Integration Tests › Performance and Edge Cases › should maintain response time consistency

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      563 |       const responseTime = Date.now() - startTime;
      564 |
    > 565 |       expect(response.status).toBe(200);
          |                               ^
      566 |       expect(responseTime).toBeLessThan(15000);
      567 |     });
      568 |

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:565:31)

  ● Dashboard Routes Integration Tests › Performance and Edge Cases › should handle malformed authentication headers

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      581 |           .set("Authorization", header);
      582 |
    > 583 |         expect([401].includes(response.status)).toBe(true);
          |                                                 ^
      584 |       }
      585 |     });
      586 |

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:583:49)

  ● Dashboard Routes Integration Tests › Performance and Edge Cases › should handle database connection failures gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      590 |         .set("Authorization", `Bearer ${authToken}`);
      591 |
    > 592 |       expect(response.status).toBe(200);
          |                               ^
      593 |
      594 |       if (response.status >= 500) {
      595 |         expect(response.body).toHaveProperty("error");

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:592:31)

  ● Dashboard Routes Integration Tests › Performance and Edge Cases › should handle SQL injection attempts safely

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      634 |           .set("Authorization", `Bearer ${authToken}`);
      635 |
    > 636 |         expect([200, 400, 401].includes(response.status)).toBe(true);
          |                                                           ^
      637 |       }
      638 |     });
      639 |

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:636:59)

  ● Dashboard Routes Integration Tests › Performance and Edge Cases › should handle memory pressure with large data requests

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      643 |         .set("Authorization", `Bearer ${authToken}`);
      644 |
    > 645 |       expect([200, 401, 413, 500, 503].includes(response.status)).toBe(true);
          |                                                                   ^
      646 |     });
      647 |
      648 |     test("should validate response content types", async () => {

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:645:67)

  ● Dashboard Routes Integration Tests › Performance and Edge Cases › should handle authentication edge cases

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      674 |         // Test missing authorization header
      675 |         const noAuthResponse = await request(app).get(endpoint);
    > 676 |         expect([401, 403, 500, 501].includes(noAuthResponse.status)).toBe(true);
          |                                                                      ^
      677 |
      678 |         // Test malformed token
      679 |         const badTokenResponse = await request(app)

      at Object.toBe (tests/integration/routes/dashboard.integration.test.js:676:70)

FAIL tests/integration/routes/strategyBuilder.integration.test.js
  ● Strategy Builder Routes › POST /api/strategies/ai-generate › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      58 |         });
      59 |
    > 60 |       expect([401].includes(response.status)).toBe(true);
         |                                               ^
      61 |     });
      62 |
      63 |     test("should require prompt parameter", async () => {

      at Object.toBe (tests/integration/routes/strategyBuilder.integration.test.js:60:47)

  ● Strategy Builder Routes › POST /api/strategies/validate › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      174 |         });
      175 |
    > 176 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      177 |     });
      178 |
      179 |     test("should require strategy parameter", async () => {

      at Object.toBe (tests/integration/routes/strategyBuilder.integration.test.js:176:47)

  ● Strategy Builder Routes › POST /api/strategies/run-ai-strategy › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      262 |         });
      263 |
    > 264 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      265 |     });
      266 |
      267 |     test("should run AI strategy backtest successfully", async () => {

      at Object.toBe (tests/integration/routes/strategyBuilder.integration.test.js:264:47)

  ● Strategy Builder Routes › POST /api/strategies/deploy-hft › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      369 |         });
      370 |
    > 371 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      372 |     });
      373 |
      374 |     test("should return 501 not implemented", async () => {

      at Object.toBe (tests/integration/routes/strategyBuilder.integration.test.js:371:47)

  ● Strategy Builder Routes › GET /api/strategies/available-symbols › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      492 |       );
      493 |
    > 494 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      495 |     });
      496 |
      497 |     test("should return available symbols", async () => {

      at Object.toBe (tests/integration/routes/strategyBuilder.integration.test.js:494:47)

  ● Strategy Builder Routes › GET /api/strategies/available-symbols › should return available symbols

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 503

      500 |         .set("Authorization", "Bearer dev-bypass-token");
      501 |
    > 502 |       expect(response.status).toBe(200);
          |                               ^
      503 |
      504 |       if (response.status === 200) {
      505 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/strategyBuilder.integration.test.js:502:31)

  ● Strategy Builder Routes › GET /api/strategies/available-symbols › should handle database connection issues

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 503

      520 |         .set("Authorization", "Bearer dev-bypass-token");
      521 |
    > 522 |       expect(response.status).toBe(200);
          |                               ^
      523 |     });
      524 |   });
      525 |

      at Object.toBe (tests/integration/routes/strategyBuilder.integration.test.js:522:31)

  ● Strategy Builder Routes › GET /api/strategies/list › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      528 |       const response = await request(app).get("/api/strategies/list");
      529 |
    > 530 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      531 |     });
      532 |
      533 |     test("should return 501 not implemented", async () => {

      at Object.toBe (tests/integration/routes/strategyBuilder.integration.test.js:530:47)

  ● Strategy Builder Routes › GET /api/strategies/templates › should require authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      582 |       const response = await request(app).get("/api/strategies/templates");
      583 |
    > 584 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      585 |     });
      586 |
      587 |     test("should return strategy templates", async () => {

      at Object.toBe (tests/integration/routes/strategyBuilder.integration.test.js:584:47)

  ● Strategy Builder Routes › Authentication and Error Handling › should handle invalid authentication tokens

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      643 |         .set("Authorization", "Bearer invalid-token");
      644 |
    > 645 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      646 |     });
      647 |
      648 |     test("should handle missing authorization header", async () => {

      at Object.toBe (tests/integration/routes/strategyBuilder.integration.test.js:645:47)

  ● Strategy Builder Routes › Authentication and Error Handling › should handle missing authorization header

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      654 |         });
      655 |
    > 656 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      657 |     });
      658 |
      659 |     test("should handle malformed request bodies", async () => {

      at Object.toBe (tests/integration/routes/strategyBuilder.integration.test.js:656:47)


  ● Test suite failed to run

    Cannot add a hook after tests have started running. Hooks must be defined synchronously.

      30 | describe("Strategy Builder Routes", () => {
      31 |   beforeAll(async () => {
    > 32 |     beforeEach(() => {
         |     ^
      33 |     jest.clearAllMocks();
      34 |     query.mockImplementation((sql, params) => {
      35 |       // Default: return empty rows for all queries

      at eventHandler (node_modules/jest-circus/build/eventHandler.js:104:11)
      at Object.beforeEach (tests/integration/routes/strategyBuilder.integration.test.js:32:5)

FAIL tests/integration/infrastructure/middleware-chains.integration.test.js
  ● Middleware Chain Integration › Authentication → Validation → Response Pipeline › should handle auth failure → error formatting chain

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 500]

      75 |       const response = await request(app).get("/api/portfolio").send(); // No auth header
      76 |
    > 77 |       expect([401, 500]).toContain(response.status);
         |                          ^
      78 |
      79 |       // Verify error response format consistency
      80 |       expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/infrastructure/middleware-chains.integration.test.js:77:26)

FAIL tests/integration/routes/sentiment.integration.test.js
  ● Sentiment Routes › GET /api/sentiment/analysis › should return sentiment analysis for valid symbol

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 503

      115 |         .set("Authorization", "Bearer dev-bypass-token");
      116 |
    > 117 |       expect(response.status).toBe(200);
          |                               ^
      118 |
      119 |       if (response.status === 200) {
      120 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/sentiment.integration.test.js:117:31)

  ● Sentiment Routes › GET /api/sentiment/analysis › should handle different period parameters

    expect(received).toContain(expected) // indexOf

    Expected value: 503
    Received array: [200, 404]

      162 |           .set("Authorization", "Bearer dev-bypass-token");
      163 |
    > 164 |         expect([200, 404]).toContain(response.status);
          |                            ^
      165 |
      166 |         if (response.status === 200) {
      167 |           expect(response.body.data.period).toBe(period);

      at Object.toContain (tests/integration/routes/sentiment.integration.test.js:164:28)

  ● Sentiment Routes › GET /api/sentiment/analysis › should use default period when not specified

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 503

      175 |         .set("Authorization", "Bearer dev-bypass-token");
      176 |
    > 177 |       expect(response.status).toBe(200);
          |                               ^
      178 |
      179 |       if (response.status === 200) {
      180 |         expect(response.body.data.period).toBe("7d");

      at Object.toBe (tests/integration/routes/sentiment.integration.test.js:177:31)

  ● Sentiment Routes › GET /api/sentiment/analysis › should handle invalid period parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 503

      187 |         .set("Authorization", "Bearer dev-bypass-token");
      188 |
    > 189 |       expect(response.status).toBe(200);
          |                               ^
      190 |
      191 |       if (response.status === 200) {
      192 |         // Should fall back to default period

      at Object.toBe (tests/integration/routes/sentiment.integration.test.js:189:31)

  ● Sentiment Routes › GET /api/sentiment/analysis › should convert symbol to uppercase

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 503

      200 |         .set("Authorization", "Bearer dev-bypass-token");
      201 |
    > 202 |       expect(response.status).toBe(200);
          |                               ^
      203 |
      204 |       if (response.status === 200) {
      205 |         expect(response.body.data.symbol).toBe("AAPL");

      at Object.toBe (tests/integration/routes/sentiment.integration.test.js:202:31)

  ● Sentiment Routes › GET /api/sentiment/analysis › should handle special characters in symbol

    expect(received).toContain(expected) // indexOf

    Expected value: 503
    Received array: [200, 404]

      212 |         .set("Authorization", "Bearer dev-bypass-token");
      213 |
    > 214 |       expect([200, 404]).toContain(response.status);
          |                          ^
      215 |
      216 |       if (response.status === 200) {
      217 |         expect(response.body.data.symbol).toBe("BRK.A");

      at Object.toContain (tests/integration/routes/sentiment.integration.test.js:214:26)

  ● Sentiment Routes › Authentication › should handle sentiment analysis without authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      368 |
      369 |       // May work without auth or require it
    > 370 |       expect([200, 400, 401, 403, 500].includes(response.status)).toBe(true);
          |                                                                   ^
      371 |     });
      372 |   });
      373 |

      at Object.toBe (tests/integration/routes/sentiment.integration.test.js:370:67)

  ● Sentiment Routes › Error Handling › should handle database errors gracefully

    expect(received).toContain(expected) // indexOf

    Expected value: 503
    Received array: [200, 404, 500]

      378 |         .set("Authorization", "Bearer dev-bypass-token");
      379 |
    > 380 |       expect([200, 404, 500]).toContain(response.status);
          |                               ^
      381 |
      382 |       if (response.status === 500) {
      383 |         expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/routes/sentiment.integration.test.js:380:31)

  ● Sentiment Routes › Error Handling › should handle malformed URLs

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      399 |         .set("Authorization", "Bearer dev-bypass-token");
      400 |
    > 401 |       expect([200, 400, 404, 500].includes(response.status)).toBe(true);
          |                                                              ^
      402 |     });
      403 |
      404 |     test("should handle URL encoded parameters", async () => {

      at Object.toBe (tests/integration/routes/sentiment.integration.test.js:401:62)

  ● Sentiment Routes › Error Handling › should handle URL encoded parameters

    expect(received).toContain(expected) // indexOf

    Expected value: 503
    Received array: [200, 404]

      407 |         .set("Authorization", "Bearer dev-bypass-token");
      408 |
    > 409 |       expect([200, 404]).toContain(response.status);
          |                          ^
      410 |
      411 |       if (response.status === 200) {
      412 |         expect(response.body.data.symbol).toBe("BRK.A");

      at Object.toContain (tests/integration/routes/sentiment.integration.test.js:409:26)

  ● Sentiment Routes › Performance › should respond within reasonable time

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      475 |
      476 |       expect(responseTime).toBeLessThan(5000); // 5 second timeout
    > 477 |       expect([200, 400, 500].includes(response.status)).toBe(true);
          |                                                         ^
      478 |     });
      479 |
      480 |     test("should handle concurrent requests", async () => {

      at Object.toBe (tests/integration/routes/sentiment.integration.test.js:477:57)

  ● Sentiment Routes › Edge Cases › should handle numeric symbols

    expect(received).toContain(expected) // indexOf

    Expected value: 503
    Received array: [200, 404]

      508 |         .set("Authorization", "Bearer dev-bypass-token");
      509 |
    > 510 |       expect([200, 404]).toContain(response.status);
          |                          ^
      511 |
      512 |       if (response.status === 200) {
      513 |         expect(response.body.data.symbol).toBe("123");

      at Object.toContain (tests/integration/routes/sentiment.integration.test.js:510:26)

  ● Sentiment Routes › Edge Cases › should handle extremely long symbols

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      521 |         .set("Authorization", "Bearer dev-bypass-token");
      522 |
    > 523 |       expect([200, 400, 404, 500].includes(response.status)).toBe(true);
          |                                                              ^
      524 |     });
      525 |
      526 |     test("should handle multiple query parameters", async () => {

      at Object.toBe (tests/integration/routes/sentiment.integration.test.js:523:62)

  ● Sentiment Routes › Edge Cases › should handle multiple query parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 503

      529 |         .set("Authorization", "Bearer dev-bypass-token");
      530 |
    > 531 |       expect(response.status).toBe(200);
          |                               ^
      532 |
      533 |       if (response.status === 200) {
      534 |         expect(response.body.data.symbol).toBe("AAPL");

      at Object.toBe (tests/integration/routes/sentiment.integration.test.js:531:31)


  ● Test suite failed to run

    Cannot add a hook after tests have started running. Hooks must be defined synchronously.

      30 | describe("Sentiment Routes", () => {
      31 |   beforeAll(async () => {
    > 32 |     beforeEach(() => {
         |     ^
      33 |     jest.clearAllMocks();
      34 |     query.mockImplementation((sql, params) => {
      35 |       // Default: return empty rows for all queries

      at eventHandler (node_modules/jest-circus/build/eventHandler.js:104:11)
      at Object.beforeEach (tests/integration/routes/sentiment.integration.test.js:32:5)

FAIL tests/integration/routes/recommendations.integration.test.js
  ● Recommendations Routes › GET /api/recommendations › should fetch stock recommendations successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      55 |         .set("Authorization", "Bearer dev-bypass-token");
      56 |
    > 57 |       expect(response.status).toBe(200);
         |                               ^
      58 |       expect(response.body).toHaveProperty("success", true);
      59 |       expect(response.body).toHaveProperty("recommendations");
      60 |       expect(response.body).toHaveProperty("summary");

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:57:31)

  ● Recommendations Routes › GET /api/recommendations › should handle symbol parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      69 |         .set("Authorization", "Bearer dev-bypass-token");
      70 |
    > 71 |       expect(response.status).toBe(200);
         |                               ^
      72 |       expect(response.body.success).toBe(true);
      73 |       expect(response.body.filters.symbol).toBe("AAPL");
      74 |     });

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:71:31)

  ● Recommendations Routes › GET /api/recommendations › should handle category parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      79 |         .set("Authorization", "Bearer dev-bypass-token");
      80 |
    > 81 |       expect(response.status).toBe(200);
         |                               ^
      82 |       expect(response.body.success).toBe(true);
      83 |       expect(response.body.filters.category).toBe("buy");
      84 |     });

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:81:31)

  ● Recommendations Routes › GET /api/recommendations › should handle analyst parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      89 |         .set("Authorization", "Bearer dev-bypass-token");
      90 |
    > 91 |       expect(response.status).toBe(200);
         |                               ^
      92 |       expect(response.body.success).toBe(true);
      93 |       expect(response.body.filters.analyst).toBe("goldman_sachs");
      94 |     });

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:91:31)

  ● Recommendations Routes › GET /api/recommendations › should handle limit parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       99 |         .set("Authorization", "Bearer dev-bypass-token");
      100 |
    > 101 |       expect(response.status).toBe(200);
          |                               ^
      102 |       expect(response.body.success).toBe(true);
      103 |       expect(response.body.filters.limit).toBe(50);
      104 |     });

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:101:31)

  ● Recommendations Routes › GET /api/recommendations › should handle timeframe parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      109 |         .set("Authorization", "Bearer dev-bypass-token");
      110 |
    > 111 |       expect(response.status).toBe(200);
          |                               ^
      112 |       expect(response.body.success).toBe(true);
      113 |       expect(response.body.filters.timeframe).toBe("weekly");
      114 |     });

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:111:31)

  ● Recommendations Routes › GET /api/recommendations › should handle multiple parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      119 |         .set("Authorization", "Bearer dev-bypass-token");
      120 |
    > 121 |       expect(response.status).toBe(200);
          |                               ^
      122 |       expect(response.body.success).toBe(true);
      123 |       expect(response.body.filters.symbol).toBe("MSFT");
      124 |       expect(response.body.filters.category).toBe("hold");

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:121:31)

  ● Recommendations Routes › GET /api/recommendations › should use default values for missing parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      131 |         .set("Authorization", "Bearer dev-bypass-token");
      132 |
    > 133 |       expect(response.status).toBe(200);
          |                               ^
      134 |       expect(response.body.success).toBe(true);
      135 |       expect(response.body.filters.symbol).toBe(undefined);
      136 |       expect(response.body.filters.category).toBe("all");

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:133:31)

  ● Recommendations Routes › GET /api/recommendations › should include proper response structure

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      145 |         .set("Authorization", "Bearer dev-bypass-token");
      146 |
    > 147 |       expect(response.status).toBe(200);
          |                               ^
      148 |       expect(response.body.success).toBe(true);
      149 |       expect(response.body).toHaveProperty("recommendations");
      150 |       expect(response.body).toHaveProperty("summary");

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:147:31)

  ● Recommendations Routes › GET /api/recommendations › should have valid timestamp

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      162 |         .set("Authorization", "Bearer dev-bypass-token");
      163 |
    > 164 |       expect(response.status).toBe(200);
          |                               ^
      165 |       expect(response.body.success).toBe(true);
      166 |       const timestamp = new Date(response.body.timestamp);
      167 |       expect(timestamp).toBeInstanceOf(Date);

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:164:31)

  ● Recommendations Routes › GET /api/recommendations › should handle mixed case symbol

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      174 |         .set("Authorization", "Bearer dev-bypass-token");
      175 |
    > 176 |       expect(response.status).toBe(200);
          |                               ^
      177 |       expect(response.body.success).toBe(true);
      178 |       expect(response.body.filters.symbol).toBe("aapl");
      179 |     });

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:176:31)

  ● Recommendations Routes › GET /api/recommendations › should handle special characters in symbol

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      184 |         .set("Authorization", "Bearer dev-bypass-token");
      185 |
    > 186 |       expect(response.status).toBe(200);
          |                               ^
      187 |       expect(response.body.success).toBe(true);
      188 |       expect(response.body.filters.symbol).toBe("BRK.A");
      189 |     });

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:186:31)

  ● Recommendations Routes › GET /api/recommendations/analysts/:symbol › should fetch analyst coverage successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      196 |         .set("Authorization", "Bearer dev-bypass-token");
      197 |
    > 198 |       expect(response.status).toBe(200);
          |                               ^
      199 |       expect(response.body).toHaveProperty("success", true);
      200 |       expect(response.body).toHaveProperty("symbol");
      201 |       expect(response.body).toHaveProperty("coverage");

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:198:31)

  ● Recommendations Routes › GET /api/recommendations/analysts/:symbol › should convert symbol to uppercase

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      210 |         .set("Authorization", "Bearer dev-bypass-token");
      211 |
    > 212 |       expect(response.status).toBe(200);
          |                               ^
      213 |       expect(response.body.success).toBe(true);
      214 |       expect(response.body.symbol).toBe("AAPL");
      215 |     });

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:212:31)

  ● Recommendations Routes › GET /api/recommendations/analysts/:symbol › should handle limit parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      220 |         .set("Authorization", "Bearer dev-bypass-token");
      221 |
    > 222 |       expect(response.status).toBe(200);
          |                               ^
      223 |       expect(response.body.success).toBe(true);
      224 |       expect(response.body.consensus).toHaveProperty("total_analysts");
      225 |     });

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:222:31)

  ● Recommendations Routes › GET /api/recommendations/analysts/:symbol › should use default limit when not specified

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      230 |         .set("Authorization", "Bearer dev-bypass-token");
      231 |
    > 232 |       expect(response.status).toBe(200);
          |                               ^
      233 |       expect(response.body.success).toBe(true);
      234 |       expect(response.body.symbol).toBe("TSLA");
      235 |     });

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:232:31)

  ● Recommendations Routes › GET /api/recommendations/analysts/:symbol › should handle special characters in symbol

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      240 |         .set("Authorization", "Bearer dev-bypass-token");
      241 |
    > 242 |       expect(response.status).toBe(200);
          |                               ^
      243 |       expect(response.body.success).toBe(true);
      244 |       expect(response.body.symbol).toBe("BRK.A");
      245 |     });

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:242:31)

  ● Recommendations Routes › GET /api/recommendations/analysts/:symbol › should include analyst coverage response structure

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      250 |         .set("Authorization", "Bearer dev-bypass-token");
      251 |
    > 252 |       expect(response.status).toBe(200);
          |                               ^
      253 |       expect(response.body.success).toBe(true);
      254 |       expect(response.body).toHaveProperty("coverage");
      255 |       expect(response.body).toHaveProperty("consensus");

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:252:31)

  ● Recommendations Routes › GET /api/recommendations/analysts/:symbol › should have valid timestamp

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      265 |         .set("Authorization", "Bearer dev-bypass-token");
      266 |
    > 267 |       expect(response.status).toBe(200);
          |                               ^
      268 |       expect(response.body.success).toBe(true);
      269 |       const timestamp = new Date(response.body.timestamp);
      270 |       expect(timestamp).toBeInstanceOf(Date);

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:267:31)

  ● Recommendations Routes › GET /api/recommendations/analysts/:symbol › should handle numeric symbols

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      277 |         .set("Authorization", "Bearer dev-bypass-token");
      278 |
    > 279 |       expect(response.status).toBe(200);
          |                               ^
      280 |       expect(response.body.success).toBe(true);
      281 |       expect(response.body.symbol).toBe("123");
      282 |     });

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:279:31)

  ● Recommendations Routes › GET /api/recommendations/analysts/:symbol › should handle malformed limit parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      287 |         .set("Authorization", "Bearer dev-bypass-token");
      288 |
    > 289 |       expect(response.status).toBe(200);
          |                               ^
      290 |       expect(response.body.success).toBe(true);
      291 |       // Should handle gracefully, parseInt("invalid") returns NaN, which gets handled
      292 |       expect(response.body).toHaveProperty("symbol");

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:289:31)

  ● Recommendations Routes › GET /api/recommendations/analysts/:symbol › should handle negative limit parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      299 |         .set("Authorization", "Bearer dev-bypass-token");
      300 |
    > 301 |       expect(response.status).toBe(200);
          |                               ^
      302 |       expect(response.body.success).toBe(true);
      303 |       expect(response.body.symbol).toBe("AAPL");
      304 |     });

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:301:31)

  ● Recommendations Routes › GET /api/recommendations/analysts/:symbol › should handle extremely large limit

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      309 |         .set("Authorization", "Bearer dev-bypass-token");
      310 |
    > 311 |       expect(response.status).toBe(200);
          |                               ^
      312 |       expect(response.body).toHaveProperty("success", true);
      313 |       expect(response.body).toHaveProperty("symbol", "AAPL");
      314 |       expect(response.body).toHaveProperty("analysts");

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:311:31)

  ● Recommendations Routes › Error Handling › should handle malformed URLs gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      348 |         .set("Authorization", "Bearer dev-bypass-token");
      349 |
    > 350 |       expect(response.status).toBe(200);
          |                               ^
      351 |       expect(response.body).toHaveProperty("success", true);
      352 |       expect(response.body).toHaveProperty("recommendations");
      353 |       expect(Array.isArray(response.body.recommendations)).toBe(true);

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:350:31)

  ● Recommendations Routes › Error Handling › should handle empty parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      359 |         .set("Authorization", "Bearer dev-bypass-token");
      360 |
    > 361 |       expect(response.status).toBe(200);
          |                               ^
      362 |       expect(response.body).toHaveProperty("success", true);
      363 |     });
      364 |

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:361:31)

  ● Recommendations Routes › Error Handling › should handle URL encoded parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      368 |         .set("Authorization", "Bearer dev-bypass-token");
      369 |
    > 370 |       expect(response.status).toBe(200);
          |                               ^
      371 |       expect(response.body).toHaveProperty("success", true);
      372 |       expect(response.body.filters.symbol).toBe("BRK.A");
      373 |     });

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:370:31)

  ● Recommendations Routes › Response Structure Validation › should have consistent response structure

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      380 |         .set("Authorization", "Bearer dev-bypass-token");
      381 |
    > 382 |       expect(response.status).toBe(200);
          |                               ^
      383 |       expect(response.body).toHaveProperty("success", true);
      384 |       expect(response.body).toHaveProperty("recommendations");
      385 |       expect(response.body).toHaveProperty("summary");

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:382:31)

  ● Recommendations Routes › Response Structure Validation › should have consistent analyst coverage response structure

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      404 |         .set("Authorization", "Bearer dev-bypass-token");
      405 |
    > 406 |       expect(response.status).toBe(200);
          |                               ^
      407 |       expect(response.body).toHaveProperty("success", true);
      408 |       expect(response.body).toHaveProperty("symbol", "AAPL");
      409 |       expect(response.body).toHaveProperty("analysts");

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:406:31)

  ● Recommendations Routes › Performance › should respond within reasonable time

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      425 |
      426 |       expect(responseTime).toBeLessThan(3000);
    > 427 |       expect(response.status).toBe(200);
          |                               ^
      428 |       expect(response.body).toHaveProperty("success", true);
      429 |     });
      430 |

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:427:31)

  ● Recommendations Routes › Performance › should handle concurrent requests

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      445 |
      446 |       responses.forEach((response) => {
    > 447 |         expect(response.status).toBe(200);
          |                                 ^
      448 |       expect(response.body).toHaveProperty("success", true);
      449 |       });
      450 |     });

      at toBe (tests/integration/routes/recommendations.integration.test.js:447:33)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/routes/recommendations.integration.test.js:446:17)

  ● Recommendations Routes › Required Setup Documentation › should return recommendations data successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      457 |         .set("Authorization", "Bearer dev-bypass-token");
      458 |
    > 459 |       expect(response.status).toBe(200);
          |                               ^
      460 |       expect(response.body).toHaveProperty("success", true);
      461 |       expect(response.body).toHaveProperty("recommendations");
      462 |       expect(Array.isArray(response.body.recommendations)).toBe(true);

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:459:31)

  ● Recommendations Routes › Required Setup Documentation › should return analyst coverage data successfully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      476 |         .set("Authorization", "Bearer dev-bypass-token");
      477 |
    > 478 |       expect(response.status).toBe(200);
          |                               ^
      479 |       expect(response.body).toHaveProperty("success", true);
      480 |       expect(response.body).toHaveProperty("symbol", "AAPL");
      481 |       expect(response.body).toHaveProperty("coverage");

      at Object.toBe (tests/integration/routes/recommendations.integration.test.js:478:31)


  ● Test suite failed to run

    Cannot add a hook after tests have started running. Hooks must be defined synchronously.

      30 | describe("Recommendations Routes", () => {
      31 |   beforeAll(async () => {
    > 32 |     beforeEach(() => {
         |     ^
      33 |     jest.clearAllMocks();
      34 |     query.mockImplementation((sql, params) => {
      35 |       // Default: return empty rows for all queries

      at eventHandler (node_modules/jest-circus/build/eventHandler.js:104:11)
      at Object.beforeEach (tests/integration/routes/recommendations.integration.test.js:32:5)

FAIL tests/integration/routes/stocks.integration.test.js
  ● Stocks Routes Integration Tests › GET /api/stocks/:symbol › should handle valid stock symbol

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      171 |         .set("Authorization", "Bearer dev-bypass-token");
      172 |
    > 173 |       expect(response.status).toBe(200);
          |                               ^
      174 |       expect(response.body).toHaveProperty("success", true);
      175 |       expect(response.body).toHaveProperty("data");
      176 |       expect(response.body.data).toHaveProperty("symbol", "AAPL");

      at Object.toBe (tests/integration/routes/stocks.integration.test.js:173:31)

FAIL tests/integration/routes/economic.integration.test.js
  ● Economic Routes Integration Tests › GET /api/economic (Economic Data) › should return economic data with pagination

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 503

      49 |       const response = await request(app).get("/api/economic");
      50 |
    > 51 |       expect(response.status).toBe(200);
         |                               ^
      52 |
      53 |       if (response.status === 200) {
      54 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/economic.integration.test.js:51:31)

  ● Economic Routes Integration Tests › GET /api/economic (Economic Data) › should filter by economic series

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      91 |         );
      92 |
    > 93 |         expect([200, 400].includes(response.status)).toBe(true);
         |                                                      ^
      94 |
      95 |         if (response.status === 200 && response.body.data.length > 0) {
      96 |           response.body.data.forEach((dataPoint) => {

      at Object.toBe (tests/integration/routes/economic.integration.test.js:93:54)

  ● Economic Routes Integration Tests › GET /api/economic/series/:seriesId › should return specific economic series data

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      251 |         );
      252 |
    > 253 |         expect(response.status).toBe(200);
          |                                 ^
      254 |
      255 |         if (response.status === 200) {
      256 |           expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/economic.integration.test.js:253:33)

  ● Economic Routes Integration Tests › GET /api/economic/series/:seriesId › should handle timeframe parameter for series

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      271 |         );
      272 |
    > 273 |         expect([200, 400].includes(response.status)).toBe(true);
          |                                                      ^
      274 |       }
      275 |     });
      276 |

      at Object.toBe (tests/integration/routes/economic.integration.test.js:273:54)

  ● Economic Routes Integration Tests › GET /api/economic/series/:seriesId › should handle frequency parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      283 |         );
      284 |
    > 285 |         expect([200, 400].includes(response.status)).toBe(true);
          |                                                      ^
      286 |       }
      287 |     });
      288 |

      at Object.toBe (tests/integration/routes/economic.integration.test.js:285:54)

  ● Economic Routes Integration Tests › GET /api/economic/forecast › should return economic forecasts

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      340 |       );
      341 |
    > 342 |       expect(response.status).toBe(200);
          |                               ^
      343 |
      344 |       if (response.status === 200) {
      345 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/routes/economic.integration.test.js:342:31)

  ● Economic Routes Integration Tests › GET /api/economic/forecast › should handle forecast horizon parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      359 |         );
      360 |
    > 361 |         expect([200, 400].includes(response.status)).toBe(true);
          |                                                      ^
      362 |       }
      363 |     });
      364 |

      at Object.toBe (tests/integration/routes/economic.integration.test.js:361:54)

  ● Economic Routes Integration Tests › GET /api/economic/forecast › should handle confidence level parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      368 |       );
      369 |
    > 370 |       expect([200, 400].includes(response.status)).toBe(true);
          |                                                    ^
      371 |     });
      372 |   });
      373 |

      at Object.toBe (tests/integration/routes/economic.integration.test.js:370:52)

  ● Economic Routes Integration Tests › Performance and Edge Cases › should handle concurrent requests to economic endpoints

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 503

      415 |
      416 |       responses.forEach((response) => {
    > 417 |         expect(response.status).toBe(200);
          |                                 ^
      418 |       });
      419 |     });
      420 |

      at toBe (tests/integration/routes/economic.integration.test.js:417:33)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/routes/economic.integration.test.js:416:17)

  ● Economic Routes Integration Tests › Performance and Edge Cases › should handle database connection failures gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 503

      468 |       const response = await request(app).get("/api/economic");
      469 |
    > 470 |       expect(response.status).toBe(200);
          |                               ^
      471 |
      472 |       if (response.status >= 500) {
      473 |         expect(response.body).toHaveProperty("error");

      at Object.toBe (tests/integration/routes/economic.integration.test.js:470:31)

  ● Economic Routes Integration Tests › Performance and Edge Cases › should handle SQL injection attempts

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      481 |       );
      482 |
    > 483 |       expect([200, 400, 404].includes(response.status)).toBe(true);
          |                                                         ^
      484 |     });
      485 |
      486 |     test("should handle memory pressure with large datasets", async () => {

      at Object.toBe (tests/integration/routes/economic.integration.test.js:483:57)

FAIL tests/integration/errors/malformed-request.integration.test.js
  ● Malformed Request Integration › JSON Parsing Error Scenarios › should handle malformed JSON gracefully

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [400, 422]

      87 |           .send(test.body);
      88 |
    > 89 |         expect([400, 422]).toContain(response.status);
         |                            ^
      90 |
      91 |         if (response.status === 400 || response.status === 422) {
      92 |           expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/errors/malformed-request.integration.test.js:89:28)

  ● Malformed Request Integration › JSON Parsing Error Scenarios › should handle JSON with dangerous characters

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [200, 400, 404, 422]

      143 |
      144 |         // Should handle safely (either process successfully or reject with error)
    > 145 |         expect([200, 400, 404, 422]).toContain(response.status);
          |                                      ^
      146 |
      147 |         if (response.status >= 400) {
      148 |           expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/errors/malformed-request.integration.test.js:145:38)

  ● Malformed Request Integration › JSON Parsing Error Scenarios › should handle deeply nested JSON structures

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [200, 400, 404]

      175 |
      176 |       // Should handle deep nesting gracefully
    > 177 |       expect([200, 400, 404]).toContain(response.status);
          |                               ^
      178 |
      179 |       if (response.status >= 400) {
      180 |         expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/errors/malformed-request.integration.test.js:177:31)

  ● Malformed Request Integration › HTTP Header Malformation › should handle malformed content-type headers

    expect(received).toMatch(expected)

    Expected pattern: /invalid|malformed|character|header/i
    Received string:  "expect(received).toContain(expected) // indexOf·
    Expected value: 501
    Received array: [200, 400, 404]"

      277 |         } catch (error) {
      278 |           // Some malformed content-types might be rejected at HTTP level
    > 279 |           expect(error.message).toMatch(/invalid|malformed|character|header/i);
          |                                 ^
      280 |         }
      281 |       }
      282 |     });

      at Object.toMatch (tests/integration/errors/malformed-request.integration.test.js:279:33)

  ● Malformed Request Integration › Request Body Malformation › should handle oversized request bodies

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [200, 413, 422]

      457 |         .send(largeBody);
      458 |
    > 459 |       expect([200, 413, 422]).toContain(response.status);
          |                               ^
      460 |
      461 |       if (response.status === 413) {
      462 |         expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/errors/malformed-request.integration.test.js:459:31)

  ● Malformed Request Integration › Request Body Malformation › should handle binary data in JSON fields

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [200, 400, 404]

      491 |           .send(test.body);
      492 |
    > 493 |         expect([200, 400, 404]).toContain(response.status);
          |                                 ^
      494 |
      495 |         if (response.status >= 400) {
      496 |           expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/errors/malformed-request.integration.test.js:493:33)

  ● Malformed Request Integration › Request Body Malformation › should handle mismatched content-type and body

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [200, 400, 404]

      526 |           .send(test.body);
      527 |
    > 528 |         expect([200, 400, 404]).toContain(response.status);
          |                                 ^
      529 |
      530 |         if (response.status >= 400) {
      531 |           expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/errors/malformed-request.integration.test.js:528:33)

  ● Malformed Request Integration › Character Encoding Issues › should handle invalid UTF-8 sequences

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [200, 400, 404]

      564 |           .send(test.body);
      565 |
    > 566 |         expect([200, 400, 404]).toContain(response.status);
          |                                 ^
      567 |
      568 |         // Should handle encoding gracefully
      569 |         expect(response.headers["content-type"]).toMatch(/application\/json/);

      at Object.toContain (tests/integration/errors/malformed-request.integration.test.js:566:33)

  ● Malformed Request Integration › Character Encoding Issues › should handle different character encodings

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [200, 400, 404, 415]

      592 |           .send(testBody);
      593 |
    > 594 |         expect([200, 400, 404, 415]).toContain(response.status);
          |                                      ^
      595 |
      596 |         if (response.status >= 400) {
      597 |           expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/errors/malformed-request.integration.test.js:594:38)

  ● Malformed Request Integration › Security and Sanitization › should sanitize error messages containing malformed input

    expect(received).toMatch(expected)

    Expected pattern: /invalid|malformed|error|failed/i
    Received string:  "Not Implemented"

      628 |
      629 |           // Should be a generic, safe error message
    > 630 |           expect(errorMessage).toMatch(/invalid|malformed|error|failed/i);
          |                                ^
      631 |         }
      632 |       }
      633 |     });

      at Object.toMatch (tests/integration/errors/malformed-request.integration.test.js:630:32)

FAIL tests/integration/routes/positioning.integration.test.js
  ● Positioning Routes › GET /api/positioning/stocks › should return stock positioning data

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      56 |
      57 |       // May return 200 with data or 404 if no data found
    > 58 |       expect([200, 404].includes(response.status)).toBe(true);
         |                                                    ^
      59 |
      60 |       if (response.status === 200) {
      61 |         expect(response.body).toHaveProperty("positioning_metrics");

      at Object.toBe (tests/integration/routes/positioning.integration.test.js:58:52)

  ● Positioning Routes › GET /api/positioning/stocks › should support symbol parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      79 |         .set("Authorization", "Bearer dev-bypass-token");
      80 |
    > 81 |       expect([200, 404].includes(response.status)).toBe(true);
         |                                                    ^
      82 |
      83 |       if (response.status === 200) {
      84 |         expect(response.body.metadata.symbol).toBe("AAPL");

      at Object.toBe (tests/integration/routes/positioning.integration.test.js:81:52)

  ● Positioning Routes › GET /api/positioning/stocks › should support timeframe parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      91 |         .set("Authorization", "Bearer dev-bypass-token");
      92 |
    > 93 |       expect([200, 404].includes(response.status)).toBe(true);
         |                                                    ^
      94 |
      95 |       if (response.status === 200) {
      96 |         expect(response.body.metadata.timeframe).toBe("weekly");

      at Object.toBe (tests/integration/routes/positioning.integration.test.js:93:52)

  ● Positioning Routes › GET /api/positioning/stocks › should support pagination parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      103 |         .set("Authorization", "Bearer dev-bypass-token");
      104 |
    > 105 |       expect([200, 404].includes(response.status)).toBe(true);
          |                                                    ^
      106 |
      107 |       if (response.status === 200) {
      108 |         // Should respect limit - institutional holders should be <= 10

      at Object.toBe (tests/integration/routes/positioning.integration.test.js:105:52)

  ● Positioning Routes › GET /api/positioning/stocks › should handle pagination with different page numbers

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      116 |         .set("Authorization", "Bearer dev-bypass-token");
      117 |
    > 118 |       expect([200, 404].includes(response.status)).toBe(true);
          |                                                    ^
      119 |     });
      120 |
      121 |     test("should validate response structure when data exists", async () => {

      at Object.toBe (tests/integration/routes/positioning.integration.test.js:118:52)

  ● Positioning Routes › GET /api/positioning/stocks › should handle mixed case symbol parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      170 |         .set("Authorization", "Bearer dev-bypass-token");
      171 |
    > 172 |       expect([200, 404].includes(response.status)).toBe(true);
          |                                                    ^
      173 |     });
      174 |
      175 |     test("should handle special characters in symbol", async () => {

      at Object.toBe (tests/integration/routes/positioning.integration.test.js:172:52)

  ● Positioning Routes › GET /api/positioning/stocks › should handle special characters in symbol

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      178 |         .set("Authorization", "Bearer dev-bypass-token");
      179 |
    > 180 |       expect([200, 404].includes(response.status)).toBe(true);
          |                                                    ^
      181 |     });
      182 |
      183 |     test("should return 404 for non-existent symbol", async () => {

      at Object.toBe (tests/integration/routes/positioning.integration.test.js:180:52)

  ● Positioning Routes › GET /api/positioning/stocks › should return 404 for non-existent symbol

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      186 |         .set("Authorization", "Bearer dev-bypass-token");
      187 |
    > 188 |       expect([200, 404].includes(response.status)).toBe(true);
          |                                                    ^
      189 |
      190 |       if (response.status === 404) {
      191 |         expect(response.body).toHaveProperty("error");

      at Object.toBe (tests/integration/routes/positioning.integration.test.js:188:52)

  ● Positioning Routes › Authentication › should require authentication for stock positioning

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      287 |       // No auth header
      288 |
    > 289 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      290 |     });
      291 |
      292 |     test("should require authentication for positioning summary", async () => {

      at Object.toBe (tests/integration/routes/positioning.integration.test.js:289:52)

  ● Positioning Routes › Authentication › should require authentication for positioning summary

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      294 |       // No auth header
      295 |
    > 296 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      297 |     });
      298 |
      299 |     test("should handle invalid authentication", async () => {

      at Object.toBe (tests/integration/routes/positioning.integration.test.js:296:52)

  ● Positioning Routes › Authentication › should handle invalid authentication

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      302 |         .set("Authorization", "Bearer invalid-token");
      303 |
    > 304 |       expect([200, 401].includes(response.status)).toBe(true);
          |                                                    ^
      305 |     });
      306 |   });
      307 |

      at Object.toBe (tests/integration/routes/positioning.integration.test.js:304:52)


  ● Test suite failed to run

    Cannot add a hook after tests have started running. Hooks must be defined synchronously.

      30 | describe("Positioning Routes", () => {
      31 |   beforeAll(async () => {
    > 32 |     beforeEach(() => {
         |     ^
      33 |     jest.clearAllMocks();
      34 |     query.mockImplementation((sql, params) => {
      35 |       // Default: return empty rows for all queries

      at eventHandler (node_modules/jest-circus/build/eventHandler.js:104:11)
      at Object.beforeEach (tests/integration/routes/positioning.integration.test.js:32:5)

FAIL tests/integration/routes/performance.integration.test.js
  ● Performance Routes Integration Tests › GET /api/performance/benchmark (Benchmark Comparison) › should require authentication for benchmark comparison

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      91 |       const response = await request(app).get("/api/performance/benchmark");
      92 |
    > 93 |       expect([401].includes(response.status)).toBe(true);
         |                                               ^
      94 |     });
      95 |
      96 |     test("should return benchmark comparison with authentication", async () => {

      at Object.toBe (tests/integration/routes/performance.integration.test.js:93:47)

  ● Performance Routes Integration Tests › GET /api/performance/portfolio (Portfolio Performance) › should require authentication for portfolio performance

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      195 |       const response = await request(app).get("/api/performance/portfolio");
      196 |
    > 197 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      198 |     });
      199 |
      200 |     test("should return portfolio performance data with authentication", async () => {

      at Object.toBe (tests/integration/routes/performance.integration.test.js:197:47)

  ● Performance Routes Integration Tests › GET /api/performance/returns (Return Calculations) › should require authentication for return calculations

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      284 |       const response = await request(app).get("/api/performance/returns");
      285 |
    > 286 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      287 |     });
      288 |
      289 |     test("should return return calculations with authentication", async () => {

      at Object.toBe (tests/integration/routes/performance.integration.test.js:286:47)

  ● Performance Routes Integration Tests › GET /api/performance/attribution (Performance Attribution) › should require authentication for performance attribution

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      337 |       const response = await request(app).get("/api/performance/attribution");
      338 |
    > 339 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      340 |     });
      341 |
      342 |     test("should return performance attribution analysis", async () => {

      at Object.toBe (tests/integration/routes/performance.integration.test.js:339:47)

  ● Performance Routes Integration Tests › GET /api/performance/metrics (Performance Metrics) › should require authentication for performance metrics

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      390 |       const response = await request(app).get("/api/performance/metrics");
      391 |
    > 392 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      393 |     });
      394 |
      395 |     test("should return comprehensive performance metrics", async () => {

      at Object.toBe (tests/integration/routes/performance.integration.test.js:392:47)

  ● Performance Routes Integration Tests › GET /api/performance/risk (Risk Metrics) › should require authentication for risk metrics

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      471 |       const response = await request(app).get("/api/performance/risk");
      472 |
    > 473 |       expect([401].includes(response.status)).toBe(true);
          |                                               ^
      474 |     });
      475 |
      476 |     test("should return risk analysis metrics", async () => {

      at Object.toBe (tests/integration/routes/performance.integration.test.js:473:47)

  ● Performance Routes Integration Tests › Performance and Edge Cases › should handle malformed authentication tokens

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      580 |           .set("Authorization", token);
      581 |
    > 582 |         expect([401].includes(response.status)).toBe(true);
          |                                                 ^
      583 |       }
      584 |     });
      585 |

      at Object.toBe (tests/integration/routes/performance.integration.test.js:582:49)

FAIL tests/unit/routes/technical.test.js
  ● Technical Analysis Routes - Testing Your Actual Site › GET /technical/daily - Filtered technical data › should handle technical data queries safely

    expect(received).toContain(expected) // indexOf

    Expected substring: "technical_data_daily"
    Received string:    "
          SELECT COUNT(*) as total
          FROM stocks
          WHERE symbol = $3
          "

      808 |       expect(query).toHaveBeenCalled();
      809 |       if (query.mock.calls.length > 2 && query.mock.calls[2]) {
    > 810 |         expect(query.mock.calls[2][0]).toContain("technical_data_daily");
          |                                        ^
      811 |       }
      812 |     });
      813 |   });

      at Object.toContain (tests/unit/routes/technical.test.js:810:40)

FAIL tests/unit/routes/market.test.js
  ● Market Routes Unit Tests › GET /market/sectors › should return sector data

    expected 200 "OK", got 503 "Service Unavailable"

      301 |   describe("GET /market/sectors", () => {
      302 |     test("should return sector data", async () => {
    > 303 |       const response = await request(app).get("/market/sectors").expect(200);
          |                                                                  ^
      304 |       expect(response.body).toHaveProperty("success");
      305 |     });
      306 |   });

      at Object.expect (tests/unit/routes/market.test.js:303:66)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Market Routes Unit Tests › GET /market/economic/indicators › should return economic indicators

    expected 200 "OK", got 500 "Internal Server Error"

      416 |       const response = await request(app)
      417 |         .get("/market/economic/indicators")
    > 418 |         .expect(200);
          |          ^
      419 |       expect(response.body).toBeDefined();
      420 |       expect(typeof response.body).toBe("object");
      421 |       expect(response.body).toHaveProperty("data");

      at Object.expect (tests/unit/routes/market.test.js:418:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Market Routes Unit Tests › GET /market/economic/indicators › should filter by category

    expected 200 "OK", got 500 "Internal Server Error"

      428 |       const response = await request(app)
      429 |         .get("/market/economic/indicators?category=inflation")
    > 430 |         .expect(200);
          |          ^
      431 |       expect(response.body).toBeDefined();
      432 |       expect(typeof response.body).toBe("object");
      433 |     });

      at Object.expect (tests/unit/routes/market.test.js:430:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Market Routes Unit Tests › GET /market/economic/indicators › should include historical data when requested

    expected 200 "OK", got 500 "Internal Server Error"

      435 |       const response = await request(app)
      436 |         .get("/market/economic/indicators?historical=true")
    > 437 |         .expect(200);
          |          ^
      438 |       expect(response.body).toBeDefined();
      439 |       expect(typeof response.body).toBe("object");
      440 |       if (response.body.data && response.body.data.indicators) {

      at Object.expect (tests/unit/routes/market.test.js:437:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Market Routes Unit Tests › Error Handling › should handle missing optional parameters

    expected 200 "OK", got 500 "Internal Server Error"

      712 |       const response = await request(app)
      713 |         .get("/market/economic/indicators?category=")
    > 714 |         .expect(200);
          |          ^
      715 |       expect(response.body).toBeDefined();
      716 |       expect(typeof response.body).toBe("object");
      717 |     });

      at Object.expect (tests/unit/routes/market.test.js:714:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

FAIL tests/integration/analytics/analysts.test.js
  ● Analysts API › Analyst Recommendations › should retrieve analyst recommendations for stock

    ReferenceError: query is not defined

      34 |     beforeEach(() => {
      35 |     jest.clearAllMocks();
    > 36 |     query.mockImplementation((sql, params) => {
         |     ^
      37 |       // Default: return empty rows for all queries
      38 |       if (sql.includes("information_schema.tables")) {
      39 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/analysts.test.js:36:5)

  ● Analysts API › Analyst Recommendations › should handle invalid stock symbols

    ReferenceError: query is not defined

      34 |     beforeEach(() => {
      35 |     jest.clearAllMocks();
    > 36 |     query.mockImplementation((sql, params) => {
         |     ^
      37 |       // Default: return empty rows for all queries
      38 |       if (sql.includes("information_schema.tables")) {
      39 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/analysts.test.js:36:5)

FAIL tests/unit/utils/database.test.js
  ● Database Utilities - Unit Tests › Error Handling Edge Cases › should handle database connection timeout errors

    Database connection failed: connection timeout

      273 |       process.env.DB_NAME = "test";
      274 |       await initializeDatabase();
    > 275 |       mockPool.query.mockRejectedValue(new Error("connection timeout"));
          |                                        ^
      276 |       const result = await query("SELECT 1");
      277 |       expect(result).toBeNull();
      278 |     });

      at Object.<anonymous> (tests/unit/utils/database.test.js:275:40)

  ● Database Utilities - Unit Tests › Error Handling Edge Cases › should handle unexpected error formats

    Database connection failed: connection timeout



FAIL tests/integration/routes/auth.integration.test.js
  ● Authentication Routes Integration › GET /auth/me › should return user profile with dev bypass token

    expect(received).toBe(expected) // Object.is equality

    Expected: "dev-bypass@example.com"
    Received: undefined

      196 |       expect(response.status).toBe(200);
      197 |       expect(response.body).toHaveProperty("user");
    > 198 |       expect(response.body.user.email).toBe("dev-bypass@example.com");
          |                                        ^
      199 |       expect(response.body.user.username).toBe("dev-bypass-user");
      200 |     });
      201 |

      at Object.toBe (tests/integration/routes/auth.integration.test.js:198:40)

  ● Authentication Routes Integration › GET /auth/me › should require valid token

    expect(received).toBe(expected) // Object.is equality

    Expected: 401
    Received: 200

      204 |
      205 |       // Authentication should properly require tokens
    > 206 |       expect(response.status).toBe(401);
          |                               ^
      207 |       expect(response.body.success).toBe(false);
      208 |       expect(response.body.error).toBe("Authentication required");
      209 |     });

      at Object.toBe (tests/integration/routes/auth.integration.test.js:206:31)

  ● Authentication Routes Integration › GET /auth/me › should reject invalid token

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 500]

      214 |         .set("Authorization", "Bearer invalid-token-here");
      215 |
    > 216 |       expect([401, 500]).toContain(response.status);
          |                          ^
      217 |       expect(response.body.success).toBe(false);
      218 |     });
      219 |   });

      at Object.toContain (tests/integration/routes/auth.integration.test.js:216:26)

  ● Authentication Routes Integration › Security and edge cases › should handle SQL injection attempts

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 0
    Received array:  []

      310 |       // Verify user_profiles table still exists
      311 |       const usersCheck = await query("SELECT COUNT(*) FROM user_profiles");
    > 312 |       expect(usersCheck.rows).toHaveLength(1);
          |                               ^
      313 |     });
      314 |
      315 |     test("should handle XSS attempts in registration", async () => {

      at Object.toHaveLength (tests/integration/routes/auth.integration.test.js:312:31)

  ● Authentication Routes Integration › Security and edge cases › should handle malformed Authorization header

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 500]

      332 |         .set("Authorization", "NotBearer token-here");
      333 |
    > 334 |       expect([401, 500]).toContain(response.status);
          |                          ^
      335 |       expect(response.body.success).toBe(false);
      336 |     });
      337 |

      at Object.toContain (tests/integration/routes/auth.integration.test.js:334:26)

FAIL tests/unit/routes/liveData.test.js
  ● Live Data Routes Unit Tests › GET /live-data/ › should return live data info

    expect(received).toHaveProperty(path)

    Expected path: "status"
    Received path: []

    Received value: {"data": {"authentication": "Required for most endpoints", "endpoints": ["/status - Get live data service status", "/stream/:symbols - Stream real-time data for symbols (requires auth)", "/latest/:symbols - Get latest data for symbols (requires auth)", "/health - Health check endpoint", "/metrics - Performance metrics"], "message": "Live Data API - Ready", "status": "operational", "timestamp": "2025-10-19T11:48:50.817Z"}, "success": true, "timestamp": "2025-10-19T11:48:50.817Z"}

      33 |
      34 |       expect(response.body).toHaveProperty("success");
    > 35 |       expect(response.body).toHaveProperty("status");
         |                             ^
      36 |     });
      37 |   });
      38 |

      at Object.toHaveProperty (tests/unit/routes/liveData.test.js:35:29)

  ● Live Data Routes Unit Tests › GET /live-data/quotes › should return live quotes with proper structure

    expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [401]

      67 |         expect(response.body.data.summary).toHaveProperty("losers");
      68 |       } else {
    > 69 |         expect([401]).toContain(response.status);
         |                       ^
      70 |         expect(response.body).toHaveProperty("success", false);
      71 |       }
      72 |     });

      at Object.toContain (tests/unit/routes/liveData.test.js:69:23)

  ● Live Data Routes Unit Tests › GET /live-data/stream › should setup SSE stream with proper headers

    expect(received).toBe(expected) // Object.is equality

    Expected: "text/event-stream"
    Received: "application/json; charset=utf-8"

      107 |       if (response.status === 200) {
      108 |         // Check SSE headers are set
    > 109 |         expect(response.headers["content-type"]).toBe("text/event-stream");
          |                                                  ^
      110 |         expect(response.headers["cache-control"]).toBe("no-cache");
      111 |         expect(response.headers["connection"]).toBe("keep-alive");
      112 |       } else {

      at Object.toBe (tests/unit/routes/liveData.test.js:109:50)

  ● Live Data Routes Unit Tests › POST /live-data/admin/optimize › should return optimization status

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [401]

      132 |         expect(Array.isArray(response.body.data.optimizations.recommendations)).toBe(true);
      133 |       } else {
    > 134 |         expect([401]).toContain(response.status);
          |                       ^
      135 |       }
      136 |     });
      137 |   });

      at Object.toContain (tests/unit/routes/liveData.test.js:134:23)

  ● Live Data Routes Unit Tests › POST /live-data/admin/restart › should handle service restart for admin

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [401, 403]

      147 |         expect(response.body).toHaveProperty("message");
      148 |       } else {
    > 149 |         expect([401, 403]).toContain(response.status);
          |                            ^
      150 |       }
      151 |     });
      152 |   });

      at Object.toContain (tests/unit/routes/liveData.test.js:149:28)

FAIL tests/integration/routes/calendar.integration.test.js
  ● Calendar Routes › GET /api/calendar/dividends › should return dividend calendar data

    expect(received).toHaveProperty(path)

    Expected path: "dividend_calendar"
    Received path: []

    Received value: []

      172 |
      173 |       expect(response.body.success).toBe(true);
    > 174 |       expect(response.body.data).toHaveProperty("dividend_calendar");
          |                                  ^
      175 |       expect(response.body.data).toHaveProperty("summary");
      176 |       expect(Array.isArray(response.body.data.dividend_calendar)).toBe(true);
      177 |       expect(response.body.data.summary).toHaveProperty("total_events");

      at Object.toHaveProperty (tests/integration/routes/calendar.integration.test.js:174:34)

  ● Calendar Routes › GET /api/calendar/dividends › should handle symbol parameter in dividend calendar

    expect(received).toHaveProperty(path)

    Expected path: "dividend_calendar"
    Received path: []

    Received value: []

      186 |
      187 |       expect(response.body.success).toBe(true);
    > 188 |       expect(response.body.data).toHaveProperty("dividend_calendar");
          |                                  ^
      189 |       expect(response.body.data.filters.symbol).toBe("AAPL");
      190 |     });
      191 |   });

      at Object.toHaveProperty (tests/integration/routes/calendar.integration.test.js:188:34)

  ● Calendar Routes › GET /api/calendar/economic › should return economic calendar data

    expect(received).toHaveProperty(path)

    Expected path: "economic_events"
    Received path: []

    Received value: []

      198 |
      199 |       expect(response.body.success).toBe(true);
    > 200 |       expect(response.body.data).toHaveProperty("economic_events");
          |                                  ^
      201 |       expect(response.body.data).toHaveProperty("summary");
      202 |       expect(Array.isArray(response.body.data.economic_events)).toBe(true);
      203 |       // troubleshooting property is optional

      at Object.toHaveProperty (tests/integration/routes/calendar.integration.test.js:200:34)

  ● Calendar Routes › GET /api/calendar/debug › should return debug information

    expect(received).toHaveProperty(path)

    Expected path: "tableExists"
    Received path: []

    Received value: {"details": "Cannot read properties of undefined (reading 'total')", "error": "Debug check failed - database unavailable", "success": false, "timestamp": "2025-10-19T11:48:51.091Z"}

      273 |
      274 |       expect([200, 400, 404, 500]).toContain(response.status);
    > 275 |       expect(response.body).toHaveProperty("tableExists");
          |                             ^
      276 |       expect(response.body).toHaveProperty("timestamp");
      277 |       expect(typeof response.body.tableExists).toBe("boolean");
      278 |     });

      at Object.toHaveProperty (tests/integration/routes/calendar.integration.test.js:275:29)

FAIL tests/contract/api-contracts.test.js
  ● API Contract Tests › Critical Endpoints › Health endpoint contract

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      16 |     test("Health endpoint contract", async () => {
      17 |       const result = await runContractTest("GET /api/health", baseURL);
    > 18 |       expect(result).toBe(true);
         |                      ^
      19 |     });
      20 |
      21 |     test("Portfolio endpoint contract", async () => {

      at Object.toBe (tests/contract/api-contracts.test.js:18:22)

  ● API Contract Tests › Critical Endpoints › Portfolio endpoint contract

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      21 |     test("Portfolio endpoint contract", async () => {
      22 |       const result = await runContractTest("GET /api/portfolio", baseURL);
    > 23 |       expect(result).toBe(true);
         |                      ^
      24 |     });
      25 |
      26 |     test("Market overview endpoint contract", async () => {

      at Object.toBe (tests/contract/api-contracts.test.js:23:22)

  ● API Contract Tests › Critical Endpoints › Market overview endpoint contract

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      26 |     test("Market overview endpoint contract", async () => {
      27 |       const result = await runContractTest("GET /api/market/overview", baseURL);
    > 28 |       expect(result).toBe(true);
         |                      ^
      29 |     });
      30 |
      31 |     test("Database connectivity contract", async () => {

      at Object.toBe (tests/contract/api-contracts.test.js:28:22)

  ● API Contract Tests › Critical Endpoints › Database connectivity contract

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      34 |         baseURL
      35 |       );
    > 36 |       expect(result).toBe(true);
         |                      ^
      37 |     });
      38 |   });
      39 |

      at Object.toBe (tests/contract/api-contracts.test.js:36:22)

  ● Contract Validation Functions › Contract validation with missing fields

    ReferenceError: validateContract is not defined

      92 |     };
      93 |
    > 94 |     const errors = validateContract("GET /api/health", mockResponse);
         |                    ^
      95 |
      96 |     expect(Array.isArray(errors)).toBe(true);
      97 |     expect(errors.length).toBeGreaterThan(0);

      at Object.validateContract (tests/contract/api-contracts.test.js:94:20)

FAIL tests/integration/streaming/sse-streaming.integration.test.js
  ● SSE Streaming Integration Tests › Server-Sent Events Streaming › should establish SSE connection for live quotes stream

    expect(received).toBe(expected) // Object.is equality

    Expected: "text/event-stream"
    Received: "text/html; charset=UTF-8"

      61 |       if (response.status === 200) {
      62 |         // SSE connection should set proper headers
    > 63 |         expect(response.headers["content-type"]).toBe("text/event-stream");
         |                                                  ^
      64 |         expect(response.headers["cache-control"]).toBe("no-cache");
      65 |         expect(response.headers["connection"]).toBe("keep-alive");
      66 |         expect(response.headers["access-control-allow-origin"]).toBe("*");

      at Object.toBe (tests/integration/streaming/sse-streaming.integration.test.js:63:50)

  ● SSE Streaming Integration Tests › Server-Sent Events Streaming › should handle SSE streaming with symbol filters

    expect(received).toBe(expected) // Object.is equality

    Expected: "text/event-stream"
    Received: "text/html; charset=UTF-8"

      93 |
      94 |       if (response.status === 200) {
    > 95 |         expect(response.headers["content-type"]).toBe("text/event-stream");
         |                                                  ^
      96 |
      97 |         // Should include requested symbols in stream
      98 |         if (response.text) {

      at Object.toBe (tests/integration/streaming/sse-streaming.integration.test.js:95:50)

  ● SSE Streaming Integration Tests › Server-Sent Events Streaming › should handle SSE streaming with update interval

    expect(received).toBe(expected) // Object.is equality

    Expected: "text/event-stream"
    Received: "text/html; charset=UTF-8"

      114 |
      115 |       if (response.status === 200) {
    > 116 |         expect(response.headers["content-type"]).toBe("text/event-stream");
          |                                                  ^
      117 |
      118 |         // Should receive multiple updates
      119 |         if (response.text) {

      at Object.toBe (tests/integration/streaming/sse-streaming.integration.test.js:116:50)

  ● SSE Streaming Integration Tests › Live Data Quotes API › should return live quotes with comprehensive data structure

    expect(received).toHaveProperty(path, value)

    Expected path: "success"
    Received path: []

    Expected value: true
    Received value: {}

      134 |
      135 |       if (response.status === 200) {
    > 136 |         expect(response.body).toHaveProperty("success", true);
          |                               ^
      137 |         expect(response.body).toHaveProperty("data");
      138 |         expect(response.body.data).toHaveProperty("quotes");
      139 |         expect(response.body.data).toHaveProperty("summary");

      at Object.toHaveProperty (tests/integration/streaming/sse-streaming.integration.test.js:136:31)

  ● SSE Streaming Integration Tests › Live Data Quotes API › should handle symbol filtering for live quotes

    TypeError: Cannot read properties of undefined (reading 'quotes')

      178 |
      179 |       if (response.status === 200) {
    > 180 |         expect(response.body.data.quotes.length).toBeLessThanOrEqual(2);
          |                                   ^
      181 |
      182 |         // All returned quotes should be from requested symbols
      183 |         response.body.data.quotes.forEach((quote) => {

      at Object.quotes (tests/integration/streaming/sse-streaming.integration.test.js:180:35)

  ● SSE Streaming Integration Tests › Live Data Quotes API › should handle pagination for live quotes

    TypeError: Cannot read properties of undefined (reading 'quotes')

      194 |
      195 |       if (response.status === 200) {
    > 196 |         expect(response.body.data.quotes.length).toBeLessThanOrEqual(5);
          |                                   ^
      197 |
      198 |         // Should include pagination metadata
      199 |         if (response.body.data.pagination) {

      at Object.quotes (tests/integration/streaming/sse-streaming.integration.test.js:196:35)

  ● SSE Streaming Integration Tests › Live Data Administration › should provide optimization status

    expect(received).toHaveProperty(path, value)

    Expected path: "success"
    Received path: []

    Expected value: true
    Received value: {}

      212 |
      213 |       if (response.status === 200) {
    > 214 |         expect(response.body).toHaveProperty("success", true);
          |                               ^
      215 |         expect(response.body).toHaveProperty("data");
      216 |         expect(response.body.data).toHaveProperty("status");
      217 |         expect(response.body.data).toHaveProperty("metrics");

      at Object.toHaveProperty (tests/integration/streaming/sse-streaming.integration.test.js:214:31)

  ● SSE Streaming Integration Tests › Live Data Service Health › should provide comprehensive health status

    expect(received).toHaveProperty(path, value)

    Expected path: "success"
    Received path: []

    Expected value: true
    Received value: {}

      279 |
      280 |       if (response.status === 200) {
    > 281 |         expect(response.body).toHaveProperty("success", true);
          |                               ^
      282 |         expect(response.body).toHaveProperty("data");
      283 |         expect(response.body.data).toHaveProperty("status");
      284 |         expect(response.body.data).toHaveProperty("uptime");

      at Object.toHaveProperty (tests/integration/streaming/sse-streaming.integration.test.js:281:31)

  ● SSE Streaming Integration Tests › Real-time Data Consistency › should maintain data consistency across SSE and API endpoints

    TypeError: Cannot read properties of undefined (reading 'quotes')

      341 |       if (
      342 |         apiResponse.status === 200 &&
    > 343 |         apiResponse.body.data.quotes.length > 0
          |                               ^
      344 |       ) {
      345 |         const apiQuote = apiResponse.body.data.quotes[0];
      346 |

      at Object.quotes (tests/integration/streaming/sse-streaming.integration.test.js:343:31)

  ● SSE Streaming Integration Tests › Error Handling and Edge Cases › should handle SSE connection interruptions

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      484 |             (code) => error.code === code || error.name === code
      485 |           )
    > 486 |         ).toBe(true);
          |           ^
      487 |       }
      488 |     });
      489 |   });

      at Object.toBe (tests/integration/streaming/sse-streaming.integration.test.js:486:11)

FAIL tests/integration/routes/market.integration.test.js
  ● Market Routes Unit Tests › GET /api/market/sectors › should return sector performance or handle missing data

    expect(received).toContain(expected) // indexOf

    Expected value: 503
    Received array: [200, 500]

      315 |       const response = await request(app).get("/api/market/sectors");
      316 |
    > 317 |       expect([200, 500]).toContain(response.status);
          |                          ^
      318 |
      319 |       if (response.status === 200) {
      320 |         expect(response.body).toHaveProperty("success", true);

      at Object.toContain (tests/integration/routes/market.integration.test.js:317:26)

FAIL tests/integration/routes/price.integration.test.js
  ● Price Routes › GET /api/price/alerts › should return price alerts

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      135 |       const response = await request(app).get("/api/price/alerts");
      136 |
    > 137 |       expect(response.status).toBe(200);
          |                               ^
      138 |
      139 |       if (response.status === 200) {
      140 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/price.integration.test.js:137:31)

FAIL tests/integration/routes/financials.integration.test.js
  ● Financials Routes › GET /api/financials/:symbol › should return financial data for symbol

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      58 |       const response = await request(app).get("/api/financials/AAPL");
      59 |
    > 60 |       expect(response.status).toBe(200);
         |                               ^
      61 |       expect(response.body.success).toBe(true);
      62 |       expect(response.body.data).toHaveProperty("symbol");
      63 |       expect(response.body.data).toHaveProperty("financials");

      at Object.toBe (tests/integration/routes/financials.integration.test.js:60:31)

  ● Financials Routes › GET /api/financials/:symbol/income › should return income statement

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      75 |       const response = await request(app).get("/api/financials/AAPL/income");
      76 |
    > 77 |       expect(response.status).toBe(200);
         |                               ^
      78 |       expect(response.body.success).toBe(true);
      79 |       expect(response.body.data).toHaveProperty("income_statement");
      80 |     });

      at Object.toBe (tests/integration/routes/financials.integration.test.js:77:31)

  ● Financials Routes › GET /api/financials/:symbol/income › should handle period parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      85 |       );
      86 |
    > 87 |       expect(response.status).toBe(200);
         |                               ^
      88 |       expect(response.body.success).toBe(true);
      89 |     });
      90 |   });

      at Object.toBe (tests/integration/routes/financials.integration.test.js:87:31)

  ● Financials Routes › GET /api/financials/:symbol/balance › should return balance sheet

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      94 |       const response = await request(app).get("/api/financials/AAPL/balance");
      95 |
    > 96 |       expect(response.status).toBe(200);
         |                               ^
      97 |       expect(response.body.success).toBe(true);
      98 |       expect(response.body.data).toHaveProperty("balance_sheet");
      99 |     });

      at Object.toBe (tests/integration/routes/financials.integration.test.js:96:31)

  ● Financials Routes › GET /api/financials/:symbol/cash › should return cash flow statement

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      104 |       const response = await request(app).get("/api/financials/AAPL/cash");
      105 |
    > 106 |       expect(response.status).toBe(200);
          |                               ^
      107 |       expect(response.body.success).toBe(true);
      108 |       expect(response.body.data).toHaveProperty("cash_flow");
      109 |     });

      at Object.toBe (tests/integration/routes/financials.integration.test.js:106:31)

  ● Financials Routes › GET /api/financials/:symbol/ratios › should return financial ratios

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      114 |       const response = await request(app).get("/api/financials/AAPL/ratios");
      115 |
    > 116 |       expect(response.status).toBe(200);
          |                               ^
      117 |       expect(response.body.success).toBe(true);
      118 |       expect(response.body.data).toHaveProperty("ratios");
      119 |

      at Object.toBe (tests/integration/routes/financials.integration.test.js:116:31)

  ● Financials Routes › GET /api/financials/compare › should compare multiple companies

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      161 |       );
      162 |
    > 163 |       expect(response.status).toBe(200);
          |                               ^
      164 |       expect(response.body.success).toBe(true);
      165 |       expect(Array.isArray(response.body.data)).toBe(true);
      166 |     });

      at Object.toBe (tests/integration/routes/financials.integration.test.js:163:31)

FAIL tests/unit/routes/financials.test.js
  ● Financials Routes Unit Tests › GET /financials/:ticker/key-metrics › should return key metrics data with proper structure

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      475 |       mockQuery.mockResolvedValueOnce(mockKeyMetricsData);
      476 |       const response = await request(app).get("/financials/AAPL/key-metrics");
    > 477 |       expect(response.status).toBe(200);
          |                               ^
      478 |       expect(response.body).toHaveProperty("success", true);
      479 |       expect(response.body).toHaveProperty("data");
      480 |       expect(response.body).toHaveProperty("metadata");

      at Object.toBe (tests/unit/routes/financials.test.js:477:31)

  ● Financials Routes Unit Tests › GET /financials/:ticker/key-metrics › should handle missing key metrics data

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      508 |       mockQuery.mockResolvedValueOnce({ rows: [] });
      509 |       const response = await request(app).get("/financials/MSFT/key-metrics");
    > 510 |       expect(response.status).toBe(200);
          |                               ^
      511 |       expect(response.body).toHaveProperty("success", false);
      512 |       expect(response.body).toHaveProperty("error", "No key metrics data found");
      513 |       expect(response.body).toHaveProperty("data", null);

      at Object.toBe (tests/unit/routes/financials.test.js:510:31)

  ● Financials Routes Unit Tests › GET /financials/:ticker/key-metrics › should handle database errors gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      517 |       mockQuery.mockRejectedValueOnce(new Error("Database connection failed"));
      518 |       const response = await request(app).get("/financials/GOOGL/key-metrics");
    > 519 |       expect(response.status).toBe(500);
          |                               ^
      520 |       expect(response.body).toHaveProperty("success", false);
      521 |       expect(response.body).toHaveProperty("error", "Failed to fetch key metrics data");
      522 |       expect(response.body).toHaveProperty("message", "Database connection failed");

      at Object.toBe (tests/unit/routes/financials.test.js:519:31)

FAIL tests/integration/routes/earnings.integration.test.js
  ● Earnings Data Integration › Direct Calendar Earnings Access › should access earnings history via calendar route

    expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [200, 404, 501]

      115 |       const response = await request(app).get("/api/calendar/earnings-history");
      116 |
    > 117 |       expect([200, 404, 501]).toContain(response.status);
          |                               ^
      118 |
      119 |       if (response.status === 200) {
      120 |         // Should have earnings history data structure

      at Object.toContain (tests/integration/routes/earnings.integration.test.js:117:31)

  ● Earnings Data Integration › Direct Calendar Earnings Access › should access earnings estimates via calendar route

    expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [200, 404, 501]

      132 |       );
      133 |
    > 134 |       expect([200, 404, 501]).toContain(response.status);
          |                               ^
      135 |
      136 |       if (response.status === 200) {
      137 |         // Should have earnings estimates data structure

      at Object.toContain (tests/integration/routes/earnings.integration.test.js:134:31)

FAIL tests/integration/routes/screener.integration.test.js
  ● Screener Routes › POST /api/screener/custom › should create custom screen

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [200, 201, 401, 422]

      213 |         .send(screenData);
      214 |
    > 215 |       expect([200, 201, 401, 422]).toContain(response.status);
          |                                    ^
      216 |
      217 |       if (response.status === 200 || response.status === 201) {
      218 |         expect(response.body.success).toBe(true);

      at Object.toContain (tests/integration/routes/screener.integration.test.js:215:36)

FAIL tests/integration/routes/health.integration.test.js
  ● Health Routes › GET /api/health › should return full health check with database

    expect(received).toBe(expected) // Object.is equality

    Expected: "healthy"
    Received: "unhealthy"

      67 |
      68 |       if (response.status === 200) {
    > 69 |         expect(response.body.status).toBe("healthy");
         |                                      ^
      70 |         expect(response.body.healthy).toBe(true);
      71 |         expect(response.body.service).toBe("Financial Dashboard API");
      72 |         expect(response.body).toHaveProperty("timestamp");

      at Object.toBe (tests/integration/routes/health.integration.test.js:69:38)

  ● Health Routes › GET /api/health/database › should return comprehensive database health

    expect(received).toHaveProperty(path)

    Expected path: "total_tables"
    Received path: []

    Received value: {"empty_tables": 1, "error_tables": 0, "healthy_tables": 0, "missing_tables": 0, "stale_tables": 0, "total_missing_data": 0, "total_records": 0}

      113 |         expect(response.body.database).toHaveProperty("tables");
      114 |         expect(response.body.database).toHaveProperty("summary");
    > 115 |         expect(response.body.database.summary).toHaveProperty("total_tables");
          |                                                ^
      116 |         expect(response.body.database.summary).toHaveProperty("healthy_tables");
      117 |         expect(response.body.database.summary).toHaveProperty("total_records");
      118 |       } else {

      at Object.toHaveProperty (tests/integration/routes/health.integration.test.js:115:48)

  ● Health Routes › GET /api/health/database › should provide table summary statistics

    expect(received).toBe(expected) // Object.is equality

    Expected: "number"
    Received: "undefined"

      127 |       if (response.status === 200) {
      128 |         const summary = response.body.database.summary;
    > 129 |         expect(typeof summary.total_tables).toBe("number");
          |                                             ^
      130 |         expect(typeof summary.healthy_tables).toBe("number");
      131 |         expect(typeof summary.empty_tables).toBe("number");
      132 |         expect(typeof summary.error_tables).toBe("number");

      at Object.toBe (tests/integration/routes/health.integration.test.js:129:45)

  ● Health Routes › GET /api/health/test-connection › should test database connection

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      143 |       const response = await request(app).get("/api/health/test-connection");
      144 |
    > 145 |       expect(response.status).toBe(200);
          |                               ^
      146 |
      147 |       if (response.status === 200) {
      148 |         expect(response.body.status).toBe("ok");

      at Object.toBe (tests/integration/routes/health.integration.test.js:145:31)

FAIL tests/performance/api-load-testing.test.js
  ● API Load Testing and Performance › Concurrent Request Handling › should handle multiple concurrent health check requests

    ReferenceError: query is not defined

      13 |   beforeAll(async () => {
      14 |     // Setup test data for load testing using actual schema
    > 15 |     await query(`
         |     ^
      16 |       INSERT INTO price_daily (symbol, date, open, high, low, close, adj_close, volume)
      17 |       VALUES
      18 |         ('AAPL', '2024-01-15', 188.0, 190.0, 187.5, 189.45, 189.45, 45000000),

      at Object.<anonymous> (tests/performance/api-load-testing.test.js:15:5)

  ● API Load Testing and Performance › Concurrent Request Handling › should handle concurrent authenticated requests

    ReferenceError: query is not defined

      13 |   beforeAll(async () => {
      14 |     // Setup test data for load testing using actual schema
    > 15 |     await query(`
         |     ^
      16 |       INSERT INTO price_daily (symbol, date, open, high, low, close, adj_close, volume)
      17 |       VALUES
      18 |         ('AAPL', '2024-01-15', 188.0, 190.0, 187.5, 189.45, 189.45, 45000000),

      at Object.<anonymous> (tests/performance/api-load-testing.test.js:15:5)

  ● API Load Testing and Performance › Concurrent Request Handling › should maintain performance under database load

    ReferenceError: query is not defined

      13 |   beforeAll(async () => {
      14 |     // Setup test data for load testing using actual schema
    > 15 |     await query(`
         |     ^
      16 |       INSERT INTO price_daily (symbol, date, open, high, low, close, adj_close, volume)
      17 |       VALUES
      18 |         ('AAPL', '2024-01-15', 188.0, 190.0, 187.5, 189.45, 189.45, 45000000),

      at Object.<anonymous> (tests/performance/api-load-testing.test.js:15:5)

  ● API Load Testing and Performance › Response Time Benchmarks › health endpoint should respond quickly

    ReferenceError: query is not defined

      13 |   beforeAll(async () => {
      14 |     // Setup test data for load testing using actual schema
    > 15 |     await query(`
         |     ^
      16 |       INSERT INTO price_daily (symbol, date, open, high, low, close, adj_close, volume)
      17 |       VALUES
      18 |         ('AAPL', '2024-01-15', 188.0, 190.0, 187.5, 189.45, 189.45, 45000000),

      at Object.<anonymous> (tests/performance/api-load-testing.test.js:15:5)

  ● API Load Testing and Performance › Response Time Benchmarks › stock data endpoints should meet performance targets

    ReferenceError: query is not defined

      13 |   beforeAll(async () => {
      14 |     // Setup test data for load testing using actual schema
    > 15 |     await query(`
         |     ^
      16 |       INSERT INTO price_daily (symbol, date, open, high, low, close, adj_close, volume)
      17 |       VALUES
      18 |         ('AAPL', '2024-01-15', 188.0, 190.0, 187.5, 189.45, 189.45, 45000000),

      at Object.<anonymous> (tests/performance/api-load-testing.test.js:15:5)

  ● API Load Testing and Performance › Response Time Benchmarks › should maintain performance with large response payloads

    ReferenceError: query is not defined

      13 |   beforeAll(async () => {
      14 |     // Setup test data for load testing using actual schema
    > 15 |     await query(`
         |     ^
      16 |       INSERT INTO price_daily (symbol, date, open, high, low, close, adj_close, volume)
      17 |       VALUES
      18 |         ('AAPL', '2024-01-15', 188.0, 190.0, 187.5, 189.45, 189.45, 45000000),

      at Object.<anonymous> (tests/performance/api-load-testing.test.js:15:5)

  ● API Load Testing and Performance › Rate Limiting and Throttling › should handle rapid successive requests appropriately

    ReferenceError: query is not defined

      13 |   beforeAll(async () => {
      14 |     // Setup test data for load testing using actual schema
    > 15 |     await query(`
         |     ^
      16 |       INSERT INTO price_daily (symbol, date, open, high, low, close, adj_close, volume)
      17 |       VALUES
      18 |         ('AAPL', '2024-01-15', 188.0, 190.0, 187.5, 189.45, 189.45, 45000000),

      at Object.<anonymous> (tests/performance/api-load-testing.test.js:15:5)

  ● API Load Testing and Performance › Rate Limiting and Throttling › should recover from rate limiting gracefully

    ReferenceError: query is not defined

      13 |   beforeAll(async () => {
      14 |     // Setup test data for load testing using actual schema
    > 15 |     await query(`
         |     ^
      16 |       INSERT INTO price_daily (symbol, date, open, high, low, close, adj_close, volume)
      17 |       VALUES
      18 |         ('AAPL', '2024-01-15', 188.0, 190.0, 187.5, 189.45, 189.45, 45000000),

      at Object.<anonymous> (tests/performance/api-load-testing.test.js:15:5)

  ● API Load Testing and Performance › Memory and Resource Usage › should maintain stable memory usage under load

    ReferenceError: query is not defined

      13 |   beforeAll(async () => {
      14 |     // Setup test data for load testing using actual schema
    > 15 |     await query(`
         |     ^
      16 |       INSERT INTO price_daily (symbol, date, open, high, low, close, adj_close, volume)
      17 |       VALUES
      18 |         ('AAPL', '2024-01-15', 188.0, 190.0, 187.5, 189.45, 189.45, 45000000),

      at Object.<anonymous> (tests/performance/api-load-testing.test.js:15:5)

  ● API Load Testing and Performance › Memory and Resource Usage › should handle connection cleanup properly

    ReferenceError: query is not defined

      13 |   beforeAll(async () => {
      14 |     // Setup test data for load testing using actual schema
    > 15 |     await query(`
         |     ^
      16 |       INSERT INTO price_daily (symbol, date, open, high, low, close, adj_close, volume)
      17 |       VALUES
      18 |         ('AAPL', '2024-01-15', 188.0, 190.0, 187.5, 189.45, 189.45, 45000000),

      at Object.<anonymous> (tests/performance/api-load-testing.test.js:15:5)

  ● API Load Testing and Performance › Database Performance Under Load › should handle concurrent database queries efficiently

    ReferenceError: query is not defined

      13 |   beforeAll(async () => {
      14 |     // Setup test data for load testing using actual schema
    > 15 |     await query(`
         |     ^
      16 |       INSERT INTO price_daily (symbol, date, open, high, low, close, adj_close, volume)
      17 |       VALUES
      18 |         ('AAPL', '2024-01-15', 188.0, 190.0, 187.5, 189.45, 189.45, 45000000),

      at Object.<anonymous> (tests/performance/api-load-testing.test.js:15:5)

  ● API Load Testing and Performance › Database Performance Under Load › should maintain query performance with data growth

    ReferenceError: query is not defined

      13 |   beforeAll(async () => {
      14 |     // Setup test data for load testing using actual schema
    > 15 |     await query(`
         |     ^
      16 |       INSERT INTO price_daily (symbol, date, open, high, low, close, adj_close, volume)
      17 |       VALUES
      18 |         ('AAPL', '2024-01-15', 188.0, 190.0, 187.5, 189.45, 189.45, 45000000),

      at Object.<anonymous> (tests/performance/api-load-testing.test.js:15:5)

  ● API Load Testing and Performance › Error Handling Performance › should handle errors efficiently without performance degradation

    ReferenceError: query is not defined

      13 |   beforeAll(async () => {
      14 |     // Setup test data for load testing using actual schema
    > 15 |     await query(`
         |     ^
      16 |       INSERT INTO price_daily (symbol, date, open, high, low, close, adj_close, volume)
      17 |       VALUES
      18 |         ('AAPL', '2024-01-15', 188.0, 190.0, 187.5, 189.45, 189.45, 45000000),

      at Object.<anonymous> (tests/performance/api-load-testing.test.js:15:5)

  ● API Load Testing and Performance › Error Handling Performance › should handle authentication errors efficiently

    ReferenceError: query is not defined

      13 |   beforeAll(async () => {
      14 |     // Setup test data for load testing using actual schema
    > 15 |     await query(`
         |     ^
      16 |       INSERT INTO price_daily (symbol, date, open, high, low, close, adj_close, volume)
      17 |       VALUES
      18 |         ('AAPL', '2024-01-15', 188.0, 190.0, 187.5, 189.45, 189.45, 45000000),

      at Object.<anonymous> (tests/performance/api-load-testing.test.js:15:5)

  ● API Load Testing and Performance › Performance Monitoring and Metrics › should track response time metrics

    ReferenceError: query is not defined

      13 |   beforeAll(async () => {
      14 |     // Setup test data for load testing using actual schema
    > 15 |     await query(`
         |     ^
      16 |       INSERT INTO price_daily (symbol, date, open, high, low, close, adj_close, volume)
      17 |       VALUES
      18 |         ('AAPL', '2024-01-15', 188.0, 190.0, 187.5, 189.45, 189.45, 45000000),

      at Object.<anonymous> (tests/performance/api-load-testing.test.js:15:5)

  ● API Load Testing and Performance › Performance Monitoring and Metrics › should maintain consistent performance across test run

    ReferenceError: query is not defined

      13 |   beforeAll(async () => {
      14 |     // Setup test data for load testing using actual schema
    > 15 |     await query(`
         |     ^
      16 |       INSERT INTO price_daily (symbol, date, open, high, low, close, adj_close, volume)
      17 |       VALUES
      18 |         ('AAPL', '2024-01-15', 188.0, 190.0, 187.5, 189.45, 189.45, 45000000),

      at Object.<anonymous> (tests/performance/api-load-testing.test.js:15:5)

FAIL tests/unit/routes/signals.test.js
  ● Signals Route - Unit Tests › GET /api/signals/list - Business Logic › should handle timeframe parameter

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      525 |       const response = await request(app).get("/api/signals/list?timeframe=weekly");
      526 |       expect(response.status).toBe(200);
    > 527 |       expect(response.body.success).toBe(true);
          |                                     ^
      528 |       expect(response.body).toHaveProperty("timeframe", "weekly");
      529 |     });
      530 |   });

      at Object.toBe (tests/unit/routes/signals.test.js:527:37)

FAIL tests/integration/routes/analytics.integration.test.js
  ● Analytics Routes › GET /api/analytics/correlation › should return correlation analysis

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 400

      136 |         .set("Authorization", "Bearer dev-bypass-token");
      137 |
    > 138 |       expect(response.status).toBe(200);
          |                               ^
      139 |
      140 |       if (response.status === 200) {
      141 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/analytics.integration.test.js:138:31)

FAIL tests/integration/routes/watchlist.integration.test.js
  ● Watchlist Routes › GET /api/watchlist/performance › should return watchlist performance

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      132 |         .set("Authorization", "Bearer dev-bypass-token");
      133 |
    > 134 |       expect(response.status).toBe(200);
          |                               ^
      135 |
      136 |       if (response.status === 200) {
      137 |         expect(response.body.success).toBe(true);

      at Object.toBe (tests/integration/routes/watchlist.integration.test.js:134:31)

FAIL tests/integration/routes/news.integration.test.js
  ● News Routes › GET /api/news/sentiment › should return news sentiment analysis

    expect(received).toContain(expected) // indexOf

    Expected value: 503
    Received array: [200, 404]

      118 |       const response = await request(app).get("/api/news/sentiment");
      119 |
    > 120 |       expect([200, 404]).toContain(response.status);
          |                          ^
      121 |
      122 |       if (response.status === 200) {
      123 |         if (response.status === 200 && response.body.success !== undefined) { expect(response.body.success).toBe(true); } else if (response.status === 404) { expect(response.body.success).toBe(false); } else { expect(response.body).toBeDefined(); }

      at Object.toContain (tests/integration/routes/news.integration.test.js:120:26)

FAIL tests/integration/middleware/auth-middleware.integration.test.js
  ● Auth Middleware with Service Integration › Token Validation with Real Auth Service › should handle expired tokens in service calls

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 500]

      71 |         .set("Authorization", "Bearer expired-token-123");
      72 |
    > 73 |       expect([401, 500]).toContain(response.status);
         |                          ^
      74 |       if (response.status === 401) {
      75 |         expect(response.body).toHaveProperty("success", false);
      76 |         expect(response.body).toHaveProperty("error");

      at Object.toContain (tests/integration/middleware/auth-middleware.integration.test.js:73:26)

  ● Auth Middleware with Service Integration › Token Validation with Real Auth Service › should handle malformed auth headers

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 403, 500]

      91 |           .set("Authorization", authHeader);
      92 |
    > 93 |         expect([401, 403, 500]).toContain(response.status);
         |                                 ^
      94 |
      95 |         if (response.status === 401 || response.status === 403) {
      96 |           expect(response.body).toHaveProperty("success", false);

      at Object.toContain (tests/integration/middleware/auth-middleware.integration.test.js:93:33)

  ● Auth Middleware with Service Integration › Auth Context Propagation Through Service Chain › should handle auth failures in middleware chain

    expect(received).toContain(expected) // indexOf

    Expected value: 501
    Received array: [401, 500]

      136 |         .send({ symbols: ["AAPL"] }); // No auth header
      137 |
    > 138 |       expect([401, 500]).toContain(response.status);
          |                          ^
      139 |       if (response.status === 401) {
      140 |         expect(response.body).toHaveProperty("success", false);
      141 |       }

      at Object.toContain (tests/integration/middleware/auth-middleware.integration.test.js:138:26)

  ● Auth Middleware with Service Integration › Auth Service Error Handling › should handle auth service unavailability gracefully

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 500]

      183 |         .set("Authorization", "Bearer invalid-service-token");
      184 |
    > 185 |       expect([401, 500]).toContain(response.status);
          |                          ^
      186 |       if (response.status === 401) {
      187 |         expect(response.body).toHaveProperty("success", false);
      188 |       }

      at Object.toContain (tests/integration/middleware/auth-middleware.integration.test.js:185:26)

  ● Auth Middleware with Service Integration › Auth Service Error Handling › should provide consistent error responses

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 403]

      205 |         const response = await requestBuilder;
      206 |
    > 207 |         expect(scenario.expectedStatus).toContain(response.status);
          |                                         ^
      208 |         expect(response.body).toHaveProperty("success", false);
      209 |         expect(response.body).toHaveProperty("error");
      210 |         expect(response.headers["content-type"]).toMatch(/application\/json/);

      at Object.toContain (tests/integration/middleware/auth-middleware.integration.test.js:207:41)

FAIL tests/integration/infrastructure/settings.test.js
  ● Settings Management API › Settings Overview › should retrieve settings endpoints

    ReferenceError: query is not defined

      37 |     beforeEach(() => {
      38 |     jest.clearAllMocks();
    > 39 |     query.mockImplementation((sql, params) => {
         |     ^
      40 |       // Default: return empty rows for all queries
      41 |       if (sql.includes("information_schema.tables")) {
      42 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/infrastructure/settings.test.js:39:5)

FAIL tests/unit/routes/etf.test.js
  ● ETF Route - Comprehensive Unit Tests › GET /api/etf/:symbol/holdings › should get ETF holdings for valid symbol

    expect(received).toHaveProperty(path, value)

    Expected path: "technology"
    Received path: []

    Expected value: 28.5
    Received value: [{"percentage": 28.5, "sector": "Technology", "total_weight": 28.5, "weight": 28.5}, {"percentage": 13.2, "sector": "Healthcare", "total_weight": 13.2, "weight": 13.2}]

      78 |         sector: "Technology",
      79 |       });
    > 80 |       expect(response.body.data.sector_allocation).toHaveProperty(
         |                                                    ^
      81 |         "technology",
      82 |         28.5
      83 |       );

      at Object.toHaveProperty (tests/unit/routes/etf.test.js:80:52)

  ● ETF Route - Comprehensive Unit Tests › GET /api/etf/:symbol/holdings › should handle null database results gracefully

    expected 404 "Not Found", got 200 "OK"

      167 |       const response = await request(app)
      168 |         .get("/api/etf/SPY/holdings")
    > 169 |         .expect(404);
          |          ^
      170 |       expect(response.body.success).toBe(false);
      171 |       expect(response.body.error).toBe("ETF not found");
      172 |     });

      at Object.expect (tests/unit/routes/etf.test.js:169:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● ETF Route - Comprehensive Unit Tests › GET /api/etf/:symbol/holdings › should handle database table not found error

    expected 500 "Internal Server Error", got 200 "OK"

      177 |       const response = await request(app)
      178 |         .get("/api/etf/SPY/holdings")
    > 179 |         .expect(500);
          |          ^
      180 |       expect(response.body.success).toBe(false);
      181 |       expect(response.body.error).toBe("Database table not found");
      182 |       expect(response.body.message).toBe(

      at Object.expect (tests/unit/routes/etf.test.js:179:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● ETF Route - Comprehensive Unit Tests › GET /api/etf/:symbol/holdings › should handle empty sector data gracefully

    expect(received).toEqual(expected) // deep equality

    Expected: {}
    Received: []

      216 |         .get("/api/etf/SPY/holdings")
      217 |         .expect(200);
    > 218 |       expect(response.body.data.sector_allocation).toEqual({});
          |                                                    ^
      219 |       expect(response.body.data.top_holdings).toHaveLength(1);
      220 |     });
      221 |     test("should handle missing fund metrics gracefully", async () => {

      at Object.toEqual (tests/unit/routes/etf.test.js:218:52)

  ● ETF Route - Comprehensive Unit Tests › GET /api/etf/:symbol/holdings › should parse numeric values correctly

    expect(received).toBe(expected) // Object.is equality

    Expected: 28.5
    Received: undefined

      301 |       expect(response.body.data.top_holdings[0].shares_held).toBe(165000000);
      302 |       expect(response.body.data.top_holdings[0].market_value).toBe(25000000000);
    > 303 |       expect(response.body.data.sector_allocation.technology).toBe(28.5);
          |                                                               ^
      304 |       expect(response.body.data.fund_metrics.expense_ratio).toBe(0.0945);
      305 |       expect(response.body.data.fund_metrics.dividend_yield).toBe(1.25);
      306 |     });

      at Object.toBe (tests/unit/routes/etf.test.js:303:63)

  ● ETF Route - Comprehensive Unit Tests › GET /api/etf/:symbol/holdings › should handle sector name transformation correctly

    expect(received).toHaveProperty(path, value)

    Expected path: "information_technology"
    Received path: []

    Expected value: 28.5
    Received value: [{"percentage": 28.5, "sector": "Information Technology", "total_weight": 28.5, "weight": 28.5}, {"percentage": 13.2, "sector": "Health Care", "total_weight": 13.2, "weight": 13.2}, {"percentage": 12.1, "sector": "Consumer Discretionary", "total_weight": 12.1, "weight": 12.1}]

      340 |         .get("/api/etf/SPY/holdings")
      341 |         .expect(200);
    > 342 |       expect(response.body.data.sector_allocation).toHaveProperty(
          |                                                    ^
      343 |         "information_technology",
      344 |         28.5
      345 |       );

      at Object.toHaveProperty (tests/unit/routes/etf.test.js:342:52)

  ● ETF Route - Comprehensive Unit Tests › Response Format Validation › should maintain consistent error response format

    expected 500 "Internal Server Error", got 200 "OK"

      553 |       const response = await request(app)
      554 |         .get("/api/etf/SPY/holdings")
    > 555 |         .expect(500);
          |          ^
      556 |       expect(response.body.success).toBe(false);
      557 |       expect(response.body.error).toBeDefined();
      558 |       expect(typeof response.body.error).toBe("string");

      at Object.expect (tests/unit/routes/etf.test.js:555:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

FAIL tests/integration/analytics/sectors.test.js
  ● Sectors Analysis API › Sector Performance › should retrieve sector performance data

    ReferenceError: query is not defined

      35 |     beforeEach(() => {
      36 |     jest.clearAllMocks();
    > 37 |     query.mockImplementation((sql, params) => {
         |     ^
      38 |       // Default: return empty rows for all queries
      39 |       if (sql.includes("information_schema.tables")) {
      40 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/sectors.test.js:37:5)

  ● Sectors Analysis API › Sector Rotation › should analyze sector rotation patterns

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      67 |       const response = await request(app).get("/api/sectors/rotation");
      68 |
    > 69 |       expect(response.status).toBe(200);
         |                               ^
      70 |
      71 |       if (response.status === 200) {
      72 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/sectors.test.js:69:31)

  ● Sectors Analysis API › Sector Stocks › should retrieve stocks by sector

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      83 |       const response = await request(app).get("/api/sectors/technology/stocks");
      84 |
    > 85 |       expect(response.status).toBe(200);
         |                               ^
      86 |
      87 |       if (response.status === 200) {
      88 |         expect(response.body).toHaveProperty("success", true);

      at Object.toBe (tests/integration/analytics/sectors.test.js:85:31)

FAIL tests/integration/analytics/dashboard.test.js
  ● Dashboard API › Dashboard Overview › should retrieve comprehensive dashboard data

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/dashboard.test.js:35:5)

  ● Dashboard API › Dashboard Overview › should handle unauthorized dashboard access

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/dashboard.test.js:35:5)

  ● Dashboard API › Market Summary › should provide market summary for dashboard

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/dashboard.test.js:35:5)

  ● Dashboard API › Market Summary › should include major market indices

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/dashboard.test.js:35:5)

  ● Dashboard API › Portfolio Widget › should retrieve portfolio summary for dashboard

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/dashboard.test.js:35:5)

  ● Dashboard API › Portfolio Widget › should show top portfolio positions

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/dashboard.test.js:35:5)

  ● Dashboard API › Watchlist Widget › should retrieve watchlist summary

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/dashboard.test.js:35:5)

  ● Dashboard API › Watchlist Widget › should show watchlist performance

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/dashboard.test.js:35:5)

  ● Dashboard API › News Widget › should provide market news for dashboard

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/dashboard.test.js:35:5)

  ● Dashboard API › News Widget › should provide personalized news based on portfolio

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/dashboard.test.js:35:5)

  ● Dashboard API › Alerts Widget › should show recent alerts

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/dashboard.test.js:35:5)

  ● Dashboard API › Alerts Widget › should show alert summary

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/dashboard.test.js:35:5)

  ● Dashboard API › Dashboard Customization › should save dashboard layout preferences

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/dashboard.test.js:35:5)

  ● Dashboard API › Dashboard Customization › should retrieve user dashboard preferences

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/dashboard.test.js:35:5)

FAIL tests/unit/routes/positioning.test.js
  ● Positioning Routes › GET /api/positioning/stocks › should return positioning data with positioning_score successfully

    expected 200 "OK", got 500 "Internal Server Error"

      75 |       const response = await request(app)
      76 |         .get("/api/positioning/stocks")
    > 77 |         .expect(200);
         |          ^
      78 |       expect(response.body).toHaveProperty("positioning_metrics");
      79 |       expect(response.body).toHaveProperty("positioning_score");
      80 |       expect(response.body).toHaveProperty("institutional_holders");

      at Object.expect (tests/unit/routes/positioning.test.js:77:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Positioning Routes › GET /api/positioning/stocks › should handle symbol parameter correctly

    expected 200 "OK", got 500 "Internal Server Error"

      100 |       const response = await request(app)
      101 |         .get("/api/positioning/stocks?symbol=AAPL")
    > 102 |         .expect(200);
          |          ^
      103 |       expect(response.body.metadata.symbol).toBe("AAPL");
      104 |       expect(mockQuery).toHaveBeenCalledWith(
      105 |         expect.stringContaining("AND pm.symbol = $1"),

      at Object.expect (tests/unit/routes/positioning.test.js:102:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Positioning Routes › GET /api/positioning/stocks › should handle pagination parameters

    expected 200 "OK", got 500 "Internal Server Error"

      114 |       await request(app)
      115 |         .get("/api/positioning/stocks?limit=25&page=2")
    > 116 |         .expect(200);
          |          ^
      117 |       expect(mockQuery).toHaveBeenCalledWith(
      118 |         expect.stringContaining("LIMIT"),
      119 |         expect.arrayContaining([25, 25]) // page 2 with limit 25 = offset 25

      at Object.expect (tests/unit/routes/positioning.test.js:116:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Positioning Routes › GET /api/positioning/stocks › should handle timeframe parameter

    expected 200 "OK", got 500 "Internal Server Error"

      127 |       const response = await request(app)
      128 |         .get("/api/positioning/stocks?timeframe=weekly")
    > 129 |         .expect(200);
          |          ^
      130 |       expect(response.body.metadata.timeframe).toBe("weekly");
      131 |       expect(consoleSpy).toHaveBeenCalledWith(
      132 |         "�� Stock positioning data requested - symbol: all, timeframe: weekly"

      at Object.expect (tests/unit/routes/positioning.test.js:129:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Positioning Routes › GET /api/positioning/stocks › should return 404 when no data is found

    expected 404 "Not Found", got 500 "Internal Server Error"

      152 |       const response = await request(app)
      153 |         .get("/api/positioning/stocks")
    > 154 |         .expect(404);
          |          ^
      155 |       expect(response.body.success).toBe(false);
      156 |       expect(response.body.error).toBe("No positioning data found");
      157 |       expect(response.body.message).toBe("No positioning data available for this symbol");

      at Object.expect (tests/unit/routes/positioning.test.js:154:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Positioning Routes › GET /api/positioning/stocks › should include correct metadata structure

    expected 200 "OK", got 500 "Internal Server Error"

      176 |       const response = await request(app)
      177 |         .get("/api/positioning/stocks?symbol=TSLA&timeframe=monthly")
    > 178 |         .expect(200);
          |          ^
      179 |       expect(response.body.metadata).toEqual({
      180 |         symbol: "TSLA",
      181 |         timeframe: "monthly",

      at Object.expect (tests/unit/routes/positioning.test.js:178:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Positioning Routes › GET /api/positioning/stocks › should use default values when parameters are not provided

    expected 200 "OK", got 500 "Internal Server Error"

      212 |         .mockResolvedValueOnce({ rows: mockInstitutionalData })
      213 |         .mockResolvedValueOnce({ rows: [mockSentimentData] });
    > 214 |       await request(app).get("/api/positioning/stocks").expect(200);
          |                                                         ^
      215 |       // Check that institutional query has limit and offset
      216 |       expect(mockQuery).toHaveBeenCalledWith(
      217 |         expect.stringContaining("LIMIT"),

      at Object.expect (tests/unit/routes/positioning.test.js:214:57)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Positioning Routes › GET /api/positioning/stocks › should handle large page numbers correctly

    expected 404 "Not Found", got 500 "Internal Server Error"

      226 |       await request(app)
      227 |         .get("/api/positioning/stocks?page=100&limit=10")
    > 228 |         .expect(404);
          |          ^
      229 |       expect(mockQuery).toHaveBeenCalledWith(
      230 |         expect.stringContaining("LIMIT"),
      231 |         expect.arrayContaining([10, 990]) // page 100 with limit 10 = offset 990

      at Object.expect (tests/unit/routes/positioning.test.js:228:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Positioning Routes › GET /api/positioning/stocks › should calculate positioning score correctly

    expected 200 "OK", got 500 "Internal Server Error"

      246 |       const response = await request(app)
      247 |         .get("/api/positioning/stocks?symbol=AAPL")
    > 248 |         .expect(200);
          |          ^
      249 |       // Score = 50 + 30 + 15 + 10 + 15 = 120, capped at 100
      250 |       expect(response.body.positioning_score).toBe(100);
      251 |     });

      at Object.expect (tests/unit/routes/positioning.test.js:248:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Positioning Routes › GET /api/positioning/stocks › should handle null metrics gracefully

    expected 200 "OK", got 500 "Internal Server Error"

      264 |       const response = await request(app)
      265 |         .get("/api/positioning/stocks?symbol=TEST")
    > 266 |         .expect(200);
          |          ^
      267 |       // Should return neutral score when all null
      268 |       expect(response.body.positioning_score).toBe(50);
      269 |     });

      at Object.expect (tests/unit/routes/positioning.test.js:266:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

FAIL tests/unit/routes/performance.test.js
  ● Performance Routes Unit Tests › GET /performance/benchmark (authenticated) › should return benchmark comparison with default parameters

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      184 |       expect(
      185 |         mockPerformanceMonitor.calculateBenchmarkComparison
    > 186 |       ).toHaveBeenCalled();
          |         ^
      187 |     });
      188 |     test("should handle custom benchmark parameter", async () => {
      189 |       mockQuery

      at Object.toHaveBeenCalled (tests/unit/routes/performance.test.js:186:9)

  ● Performance Routes Unit Tests › GET /performance/benchmark (authenticated) › should handle custom benchmark parameter

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "QQQ", Any<Array>
    Received
           1: "
          SELECT
            COALESCE(AVG(total_pnl), 0) as portfolio_return,
            COALESCE(STDDEV(total_pnl), 0) as portfolio_volatility,
            COUNT(*) as data_points
          FROM portfolio_performance
          WHERE total_pnl IS NOT NULL
            AND date >= CURRENT_DATE - INTERVAL '365 days'
        "
           2: "
          SELECT
            symbol,
            COALESCE(AVG(close), 0) as avg_price,
            COUNT(*) as trading_days
          FROM price_daily
          WHERE symbol = 'QQQ'
            AND date >= CURRENT_DATE - INTERVAL '365 days'
          GROUP BY symbol
        "

    Number of calls: 2

      194 |         .query({ benchmark: "QQQ" });
      195 |       expect(response.status).toBe(200);
    > 196 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      197 |         expect.stringContaining("QQQ"),
      198 |         expect.any(Array)
      199 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/performance.test.js:196:25)

  ● Performance Routes Unit Tests › GET /performance/benchmark (authenticated) › should handle custom period parameter

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "180", Any<Array>
    Received
           1: "
          SELECT
            COALESCE(AVG(total_pnl), 0) as portfolio_return,
            COALESCE(STDDEV(total_pnl), 0) as portfolio_volatility,
            COUNT(*) as data_points
          FROM portfolio_performance
          WHERE total_pnl IS NOT NULL
            AND date >= CURRENT_DATE - INTERVAL '180 days'
        "
           2: "
          SELECT
            symbol,
            COALESCE(AVG(close), 0) as avg_price,
            COUNT(*) as trading_days
          FROM price_daily
          WHERE symbol = 'SPY'
            AND date >= CURRENT_DATE - INTERVAL '180 days'
          GROUP BY symbol
        "

    Number of calls: 2

      207 |         .query({ period: "6m" });
      208 |       expect(response.status).toBe(200);
    > 209 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      210 |         expect.stringContaining("180"), // 6 months = 180 days
      211 |         expect.any(Array)
      212 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/performance.test.js:209:25)

  ● Performance Routes Unit Tests › GET /performance/benchmark (authenticated) › should handle invalid period gracefully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "365", Any<Array>
    Received
           1: "
          SELECT
            COALESCE(AVG(total_pnl), 0) as portfolio_return,
            COALESCE(STDDEV(total_pnl), 0) as portfolio_volatility,
            COUNT(*) as data_points
          FROM portfolio_performance
          WHERE total_pnl IS NOT NULL
            AND date >= CURRENT_DATE - INTERVAL '365 days'
        "
           2: "
          SELECT
            symbol,
            COALESCE(AVG(close), 0) as avg_price,
            COUNT(*) as trading_days
          FROM price_daily
          WHERE symbol = 'SPY'
            AND date >= CURRENT_DATE - INTERVAL '365 days'
          GROUP BY symbol
        "

    Number of calls: 2

      221 |       expect(response.status).toBe(200);
      222 |       // Should default to 365 days (1 year)
    > 223 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      224 |         expect.stringContaining("365"),
      225 |         expect.any(Array)
      226 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/performance.test.js:223:25)

  ● Performance Routes Unit Tests › GET /performance/benchmark (authenticated) › should use authenticated user ID in query

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "user_id", ArrayContaining ["test-user-123"]
    Received
           1: "
          SELECT
            COALESCE(AVG(total_pnl), 0) as portfolio_return,
            COALESCE(STDDEV(total_pnl), 0) as portfolio_volatility,
            COUNT(*) as data_points
          FROM portfolio_performance
          WHERE total_pnl IS NOT NULL
            AND date >= CURRENT_DATE - INTERVAL '365 days'
        "
           2: "
          SELECT
            symbol,
            COALESCE(AVG(close), 0) as avg_price,
            COUNT(*) as trading_days
          FROM price_daily
          WHERE symbol = 'SPY'
            AND date >= CURRENT_DATE - INTERVAL '365 days'
          GROUP BY symbol
        "

    Number of calls: 2

      231 |         .mockResolvedValueOnce({ rows: [] });
      232 |       await request(app).get("/performance/benchmark");
    > 233 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      234 |         expect.stringContaining("user_id"),
      235 |         expect.arrayContaining(["test-user-123"])
      236 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/performance.test.js:233:25)

  ● Performance Routes Unit Tests › GET /performance/benchmark (authenticated) › should handle empty portfolio data

    expect(received).toHaveProperty(path, value)

    Expected path: "message"
    Received path: []

    Expected value: "Insufficient data for benchmark comparison"
    Received value: {"data": {"benchmark": {"return": 0.1, "symbol": "SPY", "volatility": 0.15}, "comparison": {"alpha": 0, "beta": 1, "correlation": 0.75, "outperformance": -0.1, "period": "1y"}, "portfolio": {"return": 0, "sharpe_ratio": 0, "volatility": 0}}, "success": true, "timestamp": "2025-10-19T11:48:54.011Z"}

      243 |       expect(response.status).toBe(200);
      244 |       expect(response.body).toHaveProperty("success", true);
    > 245 |       expect(response.body).toHaveProperty(
          |                             ^
      246 |         "message",
      247 |         "Insufficient data for benchmark comparison"
      248 |       );

      at Object.toHaveProperty (tests/unit/routes/performance.test.js:245:29)

  ● Performance Routes Unit Tests › GET /performance/benchmark (authenticated) › should handle performance calculation errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      268 |       );
      269 |       const response = await request(app).get("/performance/benchmark");
    > 270 |       expect(response.status).toBe(500);
          |                               ^
      271 |       expect(response.body).toHaveProperty("success", false);
      272 |       expect(response.body.error).toContain("Failed to fetch performance benchmark data");
      273 |     });

      at Object.toBe (tests/unit/routes/performance.test.js:270:31)

  ● Performance Routes Unit Tests › GET /performance/analytics (authenticated) › should return performance analytics

    expect(received).toHaveProperty(path, value)

    Expected path: "total_return"
    Received path: []

    Expected value: 0.25
    Received value: {"benchmark_comparison": {"alpha": 0, "beta": 1, "vs_sp500": 0}, "max_drawdown": 0, "sharpe_ratio": 0, "total_pnl": 0, "total_transactions": 0, "volatility": 0}

      291 |       expect(response.body).toHaveProperty("success", true);
      292 |       expect(response.body).toHaveProperty("data");
    > 293 |       expect(response.body.data).toHaveProperty("total_return", 0.25);
          |                                  ^
      294 |       expect(response.body.data).toHaveProperty("volatility", 0.15);
      295 |       expect(
      296 |         mockPerformanceMonitor.getPerformanceAnalytics

      at Object.toHaveProperty (tests/unit/routes/performance.test.js:293:34)

  ● Performance Routes Unit Tests › GET /performance/analytics (authenticated) › should handle analytics calculation errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      302 |       );
      303 |       const response = await request(app).get("/performance/analytics");
    > 304 |       expect(response.status).toBe(500);
          |                               ^
      305 |       expect(response.body).toHaveProperty("success", false);
      306 |       expect(response.body.error).toContain("Failed to fetch performance analytics");
      307 |     });

      at Object.toBe (tests/unit/routes/performance.test.js:304:31)

  ● Performance Routes Unit Tests › GET /performance/metrics (authenticated) › should return system performance metrics

    expect(received).toHaveProperty(path, value)

    Expected path: "cpu_usage"
    Received path: []

    Expected value: 0.45
    Received value: {"calmar_ratio": 0, "max_drawdown": 0, "max_return": 0, "period": "1y", "return": 0, "sharpe_ratio": 0, "sortino_ratio": 0, "volatility": 0}

      324 |       expect(response.body).toHaveProperty("success", true);
      325 |       expect(response.body).toHaveProperty("data");
    > 326 |       expect(response.body.data).toHaveProperty("cpu_usage", 0.45);
          |                                  ^
      327 |       expect(response.body.data).toHaveProperty("api_response_time", 120);
      328 |       expect(mockPerformanceMonitor.getSystemMetrics).toHaveBeenCalled();
      329 |     });

      at Object.toHaveProperty (tests/unit/routes/performance.test.js:326:34)

  ● Performance Routes Unit Tests › GET /performance/metrics (authenticated) › should handle metrics collection errors

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      333 |       );
      334 |       const response = await request(app).get("/performance/metrics");
    > 335 |       expect(response.status).toBe(500);
          |                               ^
      336 |       expect(response.body).toHaveProperty("success", false);
      337 |       expect(response.body.error).toContain("Failed to retrieve performance metrics");
      338 |     });

      at Object.toBe (tests/unit/routes/performance.test.js:335:31)

  ● Performance Routes Unit Tests › GET /performance/attribution (authenticated) › should return Brinson attribution analysis

    expect(received).toHaveProperty(path)

    Expected path: "attribution_analysis"
    Received path: []

    Received value: {"attribution": {"asset_allocation": 0, "attribution_type": "sector", "interaction_effect": 0, "sector_attribution": [{"contribution": 0, "sector": "technology"}, {"contribution": 0, "sector": "healthcare"}, {"contribution": 0, "sector": "finance"}], "security_selection": 0, "style_attribution": {"blend": 0, "growth": 0, "value": 0}, "total_pnl": 0, "total_positions": 1}}

      369 |       expect(response.body).toHaveProperty("success", true);
      370 |       expect(response.body).toHaveProperty("data");
    > 371 |       expect(response.body.data).toHaveProperty("attribution_analysis");
          |                                  ^
      372 |       expect(response.body.data).toHaveProperty("summary");
      373 |       expect(response.body.data).toHaveProperty("methodology");
      374 |       // Check attribution analysis structure

      at Object.toHaveProperty (tests/unit/routes/performance.test.js:371:34)

  ● Performance Routes Unit Tests › GET /performance/attribution (authenticated) › should handle custom benchmark for attribution

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "QQQ", Any<Array>
    Received: "
          SELECT
            COALESCE(SUM(total_pnl), 0) as total_pnl,
            COUNT(*) as total_positions
          FROM portfolio_performance
          WHERE total_pnl IS NOT NULL
        "

    Number of calls: 1

      401 |       );
      402 |       expect(response.status).toBe(200);
    > 403 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      404 |         expect.stringContaining("QQQ"),
      405 |         expect.any(Array)
      406 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/performance.test.js:403:25)

  ● Performance Routes Unit Tests › GET /performance/attribution (authenticated) › should handle custom period for attribution

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "90", Any<Array>
    Received: "
          SELECT
            COALESCE(SUM(total_pnl), 0) as total_pnl,
            COUNT(*) as total_positions
          FROM portfolio_performance
          WHERE total_pnl IS NOT NULL
        "

    Number of calls: 1

      412 |       );
      413 |       expect(response.status).toBe(200);
    > 414 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      415 |         expect.stringContaining("90"), // 3 months = 90 days
      416 |         expect.any(Array)
      417 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/performance.test.js:414:25)

  ● Performance Routes Unit Tests › GET /performance/attribution (authenticated) › should handle insufficient data for attribution

    expect(received).toHaveProperty(path, value)

    Expected path: "message"
    Received path: []

    Expected value: "Insufficient data for attribution analysis"
    Received value: {"data": {"attribution": {"asset_allocation": 0, "attribution_type": "sector", "interaction_effect": 0, "sector_attribution": [{"contribution": 0, "sector": "technology"}, {"contribution": 0, "sector": "healthcare"}, {"contribution": 0, "sector": "finance"}], "security_selection": 0, "style_attribution": {"blend": 0, "growth": 0, "value": 0}, "total_pnl": 0, "total_positions": 1}}, "success": true, "timestamp": "2025-10-19T11:48:54.032Z"}

      422 |       expect(response.status).toBe(200);
      423 |       expect(response.body).toHaveProperty("success", true);
    > 424 |       expect(response.body).toHaveProperty(
          |                             ^
      425 |         "message",
      426 |         "Insufficient data for attribution analysis"
      427 |       );

      at Object.toHaveProperty (tests/unit/routes/performance.test.js:424:29)

  ● Performance Routes Unit Tests › GET /performance/attribution (authenticated) › should validate attribution parameters

    expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 200

      432 |         "/performance/attribution?benchmark=invalid-symbol!@#"
      433 |       );
    > 434 |       expect(response.status).toBe(400);
          |                               ^
      435 |       expect(response.body).toHaveProperty("success", false);
      436 |       expect(response.body.error).toContain("Invalid benchmark symbol");
      437 |     });

      at Object.toBe (tests/unit/routes/performance.test.js:434:31)

  ● Performance Routes Unit Tests › GET /performance/portfolio/:symbol (authenticated) › should return symbol-specific performance

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 404

      454 |       mockQuery.mockResolvedValueOnce(mockSymbolPerformance);
      455 |       const response = await request(app).get("/performance/portfolio/AAPL");
    > 456 |       expect(response.status).toBe(200);
          |                               ^
      457 |       expect(response.body).toHaveProperty("success", true);
      458 |       expect(response.body).toHaveProperty("data");
      459 |       expect(response.body.data).toHaveProperty("symbol", "AAPL");

      at Object.toBe (tests/unit/routes/performance.test.js:456:31)

  ● Performance Routes Unit Tests › GET /performance/portfolio/:symbol (authenticated) › should handle lowercase symbol conversion

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: Any<String>, ArrayContaining ["test-user-123", "AAPL"]

    Number of calls: 0

      467 |       mockQuery.mockResolvedValueOnce({ rows: [] });
      468 |       await request(app).get("/performance/portfolio/aapl");
    > 469 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      470 |         expect.any(String),
      471 |         expect.arrayContaining(["test-user-123", "AAPL"]) // Should be uppercase
      472 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/performance.test.js:469:25)

  ● Performance Routes Unit Tests › GET /performance/portfolio/:symbol (authenticated) › should handle symbol not found

    expect(received).toHaveProperty(path, value)

    Expected path: "success"
    Received path: []

    Expected value: false
    Received value: {}

      476 |       const response = await request(app).get("/performance/portfolio/INVALID");
      477 |       expect(response.status).toBe(404);
    > 478 |       expect(response.body).toHaveProperty("success", false);
          |                             ^
      479 |       expect(response.body.error).toContain("No performance data found");
      480 |     });
      481 |   });

      at Object.toHaveProperty (tests/unit/routes/performance.test.js:478:29)

  ● Performance Routes Unit Tests › Authentication › should require authentication for benchmark endpoint

    ReferenceError: authenticateToken is not defined

      492 |     });
      493 |     test("should require authentication for benchmark endpoint", () => {
    > 494 |       expect(authenticateToken).toBeDefined();
          |              ^
      495 |       // Authentication is tested through successful requests in other tests
      496 |     });
      497 |   });

      at Object.authenticateToken (tests/unit/routes/performance.test.js:494:14)

  ● Performance Routes Unit Tests › Parameter validation › should validate benchmark symbol format

    expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 200

      501 |         .get("/performance/benchmark")
      502 |         .query({ benchmark: "invalid-benchmark-format!@#" });
    > 503 |       expect(response.status).toBe(400);
          |                               ^
      504 |       expect(response.body).toHaveProperty("success", false);
      505 |       expect(response.body.error).toContain("Invalid benchmark symbol");
      506 |     });

      at Object.toBe (tests/unit/routes/performance.test.js:503:31)

  ● Performance Routes Unit Tests › Parameter validation › should sanitize period parameter

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: StringContaining "365", Any<Array>
    Received
           1: "
          SELECT
            COALESCE(AVG(total_pnl), 0) as portfolio_return,
            COALESCE(STDDEV(total_pnl), 0) as portfolio_volatility,
            COUNT(*) as data_points
          FROM portfolio_performance
          WHERE total_pnl IS NOT NULL
            AND date >= CURRENT_DATE - INTERVAL '365 days'
        "
           2: "
          SELECT
            symbol,
            COALESCE(AVG(close), 0) as avg_price,
            COUNT(*) as trading_days
          FROM price_daily
          WHERE symbol = 'SPY'
            AND date >= CURRENT_DATE - INTERVAL '365 days'
          GROUP BY symbol
        "

    Number of calls: 2

      513 |         .query({ period: "1y; DROP TABLE portfolio; --" });
      514 |       // Should handle malicious input by using predefined period values
    > 515 |       expect(mockQuery).toHaveBeenCalledWith(
          |                         ^
      516 |         expect.stringContaining("365"), // Should default to 1y = 365 days
      517 |         expect.any(Array)
      518 |       );

      at Object.toHaveBeenCalledWith (tests/unit/routes/performance.test.js:515:25)

  ● Performance Routes Unit Tests › Error handling › should handle database connection timeout

    expect(received).toContain(expected) // indexOf

    Expected substring: "timeout"
    Received string:    "Failed to fetch benchmark data"

      527 |       expect(response.status).toBe(500);
      528 |       expect(response.body).toHaveProperty("success", false);
    > 529 |       expect(response.body.error).toContain("timeout");
          |                                   ^
      530 |     });
      531 |     test("should handle performance monitor failures", async () => {
      532 |       mockPerformanceMonitor.getSystemMetrics.mockRejectedValue(

      at Object.toContain (tests/unit/routes/performance.test.js:529:35)

  ● Performance Routes Unit Tests › Error handling › should handle performance monitor failures

    expect(received).toBe(expected) // Object.is equality

    Expected: 500
    Received: 200

      534 |       );
      535 |       const response = await request(app).get("/performance/metrics");
    > 536 |       expect(response.status).toBe(500);
          |                               ^
      537 |       expect(response.body).toHaveProperty("success", false);
      538 |       expect(response.body.error).toContain("Monitor unavailable");
      539 |     });

      at Object.toBe (tests/unit/routes/performance.test.js:536:31)

FAIL tests/integration/auth/api-key-integration.test.js
  ● API Key Integration Tests › Portfolio Holdings Endpoint Authentication › should authenticate successfully with dev bypass token

    ReferenceError: query is not defined

      28 |   beforeEach(() => {
      29 |     jest.clearAllMocks();
    > 30 |     query.mockImplementation((sql, params) => {
         |     ^
      31 |       // Default: return empty rows for all queries
      32 |       if (sql.includes("information_schema.tables")) {
      33 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/auth/api-key-integration.test.js:30:5)

  ● API Key Integration Tests › Portfolio Holdings Endpoint Authentication › should authenticate successfully with test token

    ReferenceError: query is not defined

      28 |   beforeEach(() => {
      29 |     jest.clearAllMocks();
    > 30 |     query.mockImplementation((sql, params) => {
         |     ^
      31 |       // Default: return empty rows for all queries
      32 |       if (sql.includes("information_schema.tables")) {
      33 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/auth/api-key-integration.test.js:30:5)

  ● API Key Integration Tests › Portfolio Holdings Endpoint Authentication › should reject requests without authentication

    ReferenceError: query is not defined

      28 |   beforeEach(() => {
      29 |     jest.clearAllMocks();
    > 30 |     query.mockImplementation((sql, params) => {
         |     ^
      31 |       // Default: return empty rows for all queries
      32 |       if (sql.includes("information_schema.tables")) {
      33 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/auth/api-key-integration.test.js:30:5)

  ● API Key Integration Tests › Portfolio Holdings Endpoint Authentication › should reject requests with invalid token

    ReferenceError: query is not defined

      28 |   beforeEach(() => {
      29 |     jest.clearAllMocks();
    > 30 |     query.mockImplementation((sql, params) => {
         |     ^
      31 |       // Default: return empty rows for all queries
      32 |       if (sql.includes("information_schema.tables")) {
      33 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/auth/api-key-integration.test.js:30:5)

  ● API Key Integration Tests › Other Protected Endpoints Authentication › /api/portfolio should authenticate with dev bypass token

    ReferenceError: query is not defined

      28 |   beforeEach(() => {
      29 |     jest.clearAllMocks();
    > 30 |     query.mockImplementation((sql, params) => {
         |     ^
      31 |       // Default: return empty rows for all queries
      32 |       if (sql.includes("information_schema.tables")) {
      33 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/auth/api-key-integration.test.js:30:5)

  ● API Key Integration Tests › Other Protected Endpoints Authentication › /api/portfolio should authenticate with test token

    ReferenceError: query is not defined

      28 |   beforeEach(() => {
      29 |     jest.clearAllMocks();
    > 30 |     query.mockImplementation((sql, params) => {
         |     ^
      31 |       // Default: return empty rows for all queries
      32 |       if (sql.includes("information_schema.tables")) {
      33 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/auth/api-key-integration.test.js:30:5)

  ● API Key Integration Tests › Other Protected Endpoints Authentication › /api/portfolio/summary should authenticate with dev bypass token

    ReferenceError: query is not defined

      28 |   beforeEach(() => {
      29 |     jest.clearAllMocks();
    > 30 |     query.mockImplementation((sql, params) => {
         |     ^
      31 |       // Default: return empty rows for all queries
      32 |       if (sql.includes("information_schema.tables")) {
      33 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/auth/api-key-integration.test.js:30:5)

  ● API Key Integration Tests › Other Protected Endpoints Authentication › /api/portfolio/summary should authenticate with test token

    ReferenceError: query is not defined

      28 |   beforeEach(() => {
      29 |     jest.clearAllMocks();
    > 30 |     query.mockImplementation((sql, params) => {
         |     ^
      31 |       // Default: return empty rows for all queries
      32 |       if (sql.includes("information_schema.tables")) {
      33 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/auth/api-key-integration.test.js:30:5)

  ● API Key Integration Tests › Other Protected Endpoints Authentication › /api/watchlist should authenticate with dev bypass token

    ReferenceError: query is not defined

      28 |   beforeEach(() => {
      29 |     jest.clearAllMocks();
    > 30 |     query.mockImplementation((sql, params) => {
         |     ^
      31 |       // Default: return empty rows for all queries
      32 |       if (sql.includes("information_schema.tables")) {
      33 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/auth/api-key-integration.test.js:30:5)

  ● API Key Integration Tests › Other Protected Endpoints Authentication › /api/watchlist should authenticate with test token

    ReferenceError: query is not defined

      28 |   beforeEach(() => {
      29 |     jest.clearAllMocks();
    > 30 |     query.mockImplementation((sql, params) => {
         |     ^
      31 |       // Default: return empty rows for all queries
      32 |       if (sql.includes("information_schema.tables")) {
      33 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/auth/api-key-integration.test.js:30:5)

  ● API Key Integration Tests › Authentication Middleware Consistency › both tokens should work consistently across multiple requests

    ReferenceError: query is not defined

      28 |   beforeEach(() => {
      29 |     jest.clearAllMocks();
    > 30 |     query.mockImplementation((sql, params) => {
         |     ^
      31 |       // Default: return empty rows for all queries
      32 |       if (sql.includes("information_schema.tables")) {
      33 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/auth/api-key-integration.test.js:30:5)

  ● API Key Integration Tests › Authentication Middleware Consistency › should handle mixed valid and invalid tokens correctly

    ReferenceError: query is not defined

      28 |   beforeEach(() => {
      29 |     jest.clearAllMocks();
    > 30 |     query.mockImplementation((sql, params) => {
         |     ^
      31 |       // Default: return empty rows for all queries
      32 |       if (sql.includes("information_schema.tables")) {
      33 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/auth/api-key-integration.test.js:30:5)

  ● API Key Integration Tests › Token Format Validation › should handle Bearer token format correctly

    ReferenceError: query is not defined

      28 |   beforeEach(() => {
      29 |     jest.clearAllMocks();
    > 30 |     query.mockImplementation((sql, params) => {
         |     ^
      31 |       // Default: return empty rows for all queries
      32 |       if (sql.includes("information_schema.tables")) {
      33 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/auth/api-key-integration.test.js:30:5)

  ● API Key Integration Tests › Token Format Validation › should handle case sensitivity correctly

    ReferenceError: query is not defined

      28 |   beforeEach(() => {
      29 |     jest.clearAllMocks();
    > 30 |     query.mockImplementation((sql, params) => {
         |     ^
      31 |       // Default: return empty rows for all queries
      32 |       if (sql.includes("information_schema.tables")) {
      33 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/auth/api-key-integration.test.js:30:5)

  ● API Key Integration Tests › Alpaca API Integration › should use provided Alpaca credentials for testing

    ReferenceError: query is not defined

      28 |   beforeEach(() => {
      29 |     jest.clearAllMocks();
    > 30 |     query.mockImplementation((sql, params) => {
         |     ^
      31 |       // Default: return empty rows for all queries
      32 |       if (sql.includes("information_schema.tables")) {
      33 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/auth/api-key-integration.test.js:30:5)

FAIL tests/unit/routes/economic.test.js
  ● Economic Routes Unit Tests › Edge cases and error handling › should handle very large page numbers

    expect(received).toMatchObject(expected)

    - Expected  - 2
    + Received  + 2

      Object {
        "hasNext": false,
        "hasPrev": true,
        "limit": 25,
        "page": 999,
    -   "total": 10,
    -   "totalPages": 1,
    +   "total": 50,
    +   "totalPages": 2,
      }

      315 |         .mockResolvedValueOnce({ rows: mockCount });
      316 |       const response = await request(app).get("/economic?page=999&limit=25");
    > 317 |       expect(response.body.pagination).toMatchObject({
          |                                        ^
      318 |         page: 999,
      319 |         limit: 25,
      320 |         total: 10,

      at Object.toMatchObject (tests/unit/routes/economic.test.js:317:40)

  ● Economic Routes Unit Tests › Response format validation › should return proper data structure

    expect(received).toHaveProperty(path)

    Expected path: "date"
    Received path: []

    Received value: {"total": "1"}

      400 |       expect(response.body.data.length).toBeGreaterThanOrEqual(0);
      401 |       expect(response.body.data[0] || {}).toBeDefined();
    > 402 |       expect(response.body.data[0]).toHaveProperty("date");
          |                                     ^
      403 |       expect(response.body.data[0]).toHaveProperty("value");
      404 |     });
      405 |   });

      at Object.toHaveProperty (tests/unit/routes/economic.test.js:402:37)

FAIL tests/unit/utils/apiKeyService.test.js
  ● API Key Service › validateJwtToken › should validate JWT token in test environment

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › validateJwtToken › should reject invalid JWT tokens

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › validateJwtToken › should handle empty or invalid token input

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › validateJwtToken › should accept dev-bypass-token in development

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › storeApiKey › should store API key successfully

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › storeApiKey › should validate input parameters

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › storeApiKey › should validate provider name for SQL injection

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › storeApiKey › should validate required fields

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › storeApiKey › should validate field lengths

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › storeApiKey › should handle JWT validation failure

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › storeApiKey › should handle database errors

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › getApiKey › should retrieve API key successfully

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › getApiKey › should return null for non-existent keys

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › getApiKey › should handle JWT validation failure

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › getApiKey › should update last used timestamp

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › validateApiKey › should validate API key successfully

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › validateApiKey › should handle API key not configured

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › validateApiKey › should handle JWT validation failure

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › validateApiKey › should test connection when requested

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › deleteApiKey › should delete API key successfully

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › deleteApiKey › should handle deletion of non-existent key

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › deleteApiKey › should handle JWT validation failure gracefully

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › deleteApiKey › should handle database errors

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › listProviders › should return list of configured providers

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › listProviders › should return empty array for no providers

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › listProviders › should handle JWT validation failure

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › listProviders › should handle database unavailable gracefully

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › getDecryptedApiKey › should retrieve API key by user ID

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › getDecryptedApiKey › should return null for non-existent key

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › cache management › should invalidate session cache

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › cache management › should clear all caches

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › health status › should return health status

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › circuit breaker functionality › should handle circuit breaker failures

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › circuit breaker functionality › should test JWT circuit breaker functionality

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › security features › should use different salts for different users

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › security features › should sanitize log output

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › security features › should validate input lengths

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › encryption and decryption › should handle production encryption mode

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › encryption and decryption › should handle encryption key from environment

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › encryption and decryption › should handle secrets manager errors

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › production JWT verification › should handle Cognito JWT verification

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › production JWT verification › should handle Cognito JWT verification failure

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › production JWT verification › should use cached JWT session

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › edge cases and error handling › should handle database null result

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › edge cases and error handling › should handle missing required fields for provider

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › edge cases and error handling › should handle connection test for alpaca

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › audit logging › should log audit events

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › audit logging › should handle audit logging errors gracefully

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › development mode features › should handle development bypass token

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › development mode features › should reset circuit breaker in development

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › provider specific functionality › should handle different provider required fields

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

  ● API Key Service › provider specific functionality › should handle unknown provider gracefully

    ReferenceError: SecretsManagerClient is not defined

      40 |       send: jest.fn(),
      41 |     };
    > 42 |     SecretsManagerClient.mockReturnValue(mockSecretsManager);
         |     ^
      43 |     // Set the mock on the actual service instance
      44 |     const service = __getServiceInstance();
      45 |     service.secretsManager = mockSecretsManager;

      at Object.SecretsManagerClient (tests/unit/utils/apiKeyService.test.js:42:5)

FAIL tests/performance.test.js
  ● API Performance Tests › Response Time Tests › health endpoint should respond quickly (< 200ms)

    connect ECONNREFUSED 127.0.0.1:5001

      20 |     it('health endpoint should respond quickly (< 200ms)', async () => {
      21 |       const start = Date.now();
    > 22 |       const response = await axios.get(`${API_BASE}/../health`);
         |                        ^
      23 |       const elapsed = Date.now() - start;
      24 |
      25 |       expect(response.status).toBe(200);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
      at Object.<anonymous> (tests/performance.test.js:22:24)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



  ● API Performance Tests › Response Time Tests › stocks list should respond acceptably (< 1000ms)

    connect ECONNREFUSED 127.0.0.1:5001

      30 |     it('stocks list should respond acceptably (< 1000ms)', async () => {
      31 |       const start = Date.now();
    > 32 |       const response = await axios.get(`${API_BASE}/stocks?limit=10`);
         |                        ^
      33 |       const elapsed = Date.now() - start;
      34 |
      35 |       expect(response.status).toBe(200);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
      at Object.<anonymous> (tests/performance.test.js:32:24)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



  ● API Performance Tests › Response Time Tests › stock detail should respond quickly (< 200ms)

    connect ECONNREFUSED 127.0.0.1:5001

      40 |     it('stock detail should respond quickly (< 200ms)', async () => {
      41 |       const start = Date.now();
    > 42 |       const response = await axios.get(`${API_BASE}/stocks?symbol=GOOGL`);
         |                        ^
      43 |       const elapsed = Date.now() - start;
      44 |
      45 |       expect(response.status).toBe(200);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
      at Object.<anonymous> (tests/performance.test.js:42:24)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



  ● API Performance Tests › Response Time Tests › metrics endpoint should respond acceptably (< 1000ms)

    connect ECONNREFUSED 127.0.0.1:5001

      50 |     it('metrics endpoint should respond acceptably (< 1000ms)', async () => {
      51 |       const start = Date.now();
    > 52 |       const response = await axios.get(`${API_BASE}/metrics/GOOGL`);
         |                        ^
      53 |       const elapsed = Date.now() - start;
      54 |
      55 |       expect(response.status).toBe(200);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
      at Object.<anonymous> (tests/performance.test.js:52:24)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



  ● API Performance Tests › Response Time Tests › signals endpoint should avoid timeout (< 25000ms)

    connect ECONNREFUSED 127.0.0.1:5001

      60 |     it('signals endpoint should avoid timeout (< 25000ms)', async () => {
      61 |       const start = Date.now();
    > 62 |       const response = await axios.get(`${API_BASE}/signals?timeframe=daily&limit=10`);
         |                        ^
      63 |       const elapsed = Date.now() - start;
      64 |
      65 |       expect(response.status).toBe(200);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
      at Object.<anonymous> (tests/performance.test.js:62:24)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



  ● API Performance Tests › Response Time Tests › market overview should respond within timeout (< 25000ms)

    connect ECONNREFUSED 127.0.0.1:5001

      70 |     it('market overview should respond within timeout (< 25000ms)', async () => {
      71 |       const start = Date.now();
    > 72 |       const response = await axios.get(`${API_BASE}/market/overview`);
         |                        ^
      73 |       const elapsed = Date.now() - start;
      74 |
      75 |       expect(response.status).toBe(200);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
      at Object.<anonymous> (tests/performance.test.js:72:24)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



  ● API Performance Tests › Response Time Tests › market sectors should respond acceptably (< 1000ms)

    connect ECONNREFUSED 127.0.0.1:5001

      80 |     it('market sectors should respond acceptably (< 1000ms)', async () => {
      81 |       const start = Date.now();
    > 82 |       const response = await axios.get(`${API_BASE}/market/sectors`);
         |                        ^
      83 |       const elapsed = Date.now() - start;
      84 |
      85 |       expect(response.status).toBe(200);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
      at Object.<anonymous> (tests/performance.test.js:82:24)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



  ● API Performance Tests › Response Time Tests › market indices should respond acceptably (< 1000ms)

    connect ECONNREFUSED 127.0.0.1:5001

      90 |     it('market indices should respond acceptably (< 1000ms)', async () => {
      91 |       const start = Date.now();
    > 92 |       const response = await axios.get(`${API_BASE}/market/indices`);
         |                        ^
      93 |       const elapsed = Date.now() - start;
      94 |
      95 |       expect(response.status).toBe(200);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
      at Object.<anonymous> (tests/performance.test.js:92:24)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



  ● API Performance Tests › Response Time Tests › technical daily should respond within timeout (< 25000ms)

    connect ECONNREFUSED 127.0.0.1:5001

      100 |     it('technical daily should respond within timeout (< 25000ms)', async () => {
      101 |       const start = Date.now();
    > 102 |       const response = await axios.get(`${API_BASE}/technical/daily?page=1&limit=10`);
          |                        ^
      103 |       const elapsed = Date.now() - start;
      104 |
      105 |       expect(response.status).toBe(200);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
      at Object.<anonymous> (tests/performance.test.js:102:24)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



  ● API Performance Tests › Response Time Tests › economic indicators should respond acceptably (< 1000ms)

    connect ECONNREFUSED 127.0.0.1:5001

      110 |     it('economic indicators should respond acceptably (< 1000ms)', async () => {
      111 |       const start = Date.now();
    > 112 |       const response = await axios.get(`${API_BASE}/economic/indicators`);
          |                        ^
      113 |       const elapsed = Date.now() - start;
      114 |
      115 |       expect(response.status).toBe(200);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
      at Object.<anonymous> (tests/performance.test.js:112:24)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



  ● API Performance Tests › Throughput Tests › should handle 10 concurrent health checks

    connect ECONNREFUSED 127.0.0.1:5001

      126 |       );
      127 |
    > 128 |       const responses = await Promise.all(promises);
          |                         ^
      129 |       const elapsed = Date.now() - start;
      130 |
      131 |       expect(responses.every(r => r.status === 200)).toBe(true);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
          at async Promise.all (index 0)
      at Object.<anonymous> (tests/performance.test.js:128:25)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



  ● API Performance Tests › Throughput Tests › should handle 5 concurrent stock queries

    connect ECONNREFUSED 127.0.0.1:5001

      142 |       );
      143 |
    > 144 |       const responses = await Promise.all(promises);
          |                         ^
      145 |       const elapsed = Date.now() - start;
      146 |
      147 |       expect(responses.every(r => r.status === 200)).toBe(true);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
          at async Promise.all (index 0)
      at Object.<anonymous> (tests/performance.test.js:144:25)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



  ● API Performance Tests › Data Volume Tests › should handle large stocks list (50 items) within timeout

    connect ECONNREFUSED 127.0.0.1:5001

      154 |     it('should handle large stocks list (50 items) within timeout', async () => {
      155 |       const start = Date.now();
    > 156 |       const response = await axios.get(`${API_BASE}/stocks?limit=50`);
          |                        ^
      157 |       const elapsed = Date.now() - start;
      158 |
      159 |       expect(response.status).toBe(200);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
      at Object.<anonymous> (tests/performance.test.js:156:24)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



  ● API Performance Tests › Data Volume Tests › should handle signals query with 50 results within timeout

    connect ECONNREFUSED 127.0.0.1:5001

      166 |     it('should handle signals query with 50 results within timeout', async () => {
      167 |       const start = Date.now();
    > 168 |       const response = await axios.get(`${API_BASE}/signals?timeframe=daily&limit=50`);
          |                        ^
      169 |       const elapsed = Date.now() - start;
      170 |
      171 |       expect(response.status).toBe(200);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
      at Object.<anonymous> (tests/performance.test.js:168:24)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



  ● API Performance Tests › Edge Case Performance › should handle non-existent stock gracefully and quickly

    connect ECONNREFUSED 127.0.0.1:5001

      178 |     it('should handle non-existent stock gracefully and quickly', async () => {
      179 |       const start = Date.now();
    > 180 |       const response = await axios.get(`${API_BASE}/stocks?symbol=NONEXISTENT99999`);
          |                        ^
      181 |       const elapsed = Date.now() - start;
      182 |
      183 |       expect(response.status).toBe(200);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
      at Object.<anonymous> (tests/performance.test.js:180:24)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



  ● API Performance Tests › Edge Case Performance › should handle empty search gracefully

    connect ECONNREFUSED 127.0.0.1:5001

      188 |     it('should handle empty search gracefully', async () => {
      189 |       const start = Date.now();
    > 190 |       const response = await axios.get(`${API_BASE}/stocks?search=`);
          |                        ^
      191 |       const elapsed = Date.now() - start;
      192 |
      193 |       expect(response.status).toBe(200);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
      at Object.<anonymous> (tests/performance.test.js:190:24)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



  ● API Performance Tests › Database Query Performance › signals performance endpoint should complete within timeout

    connect ECONNREFUSED 127.0.0.1:5001

      200 |     it('signals performance endpoint should complete within timeout', async () => {
      201 |       const start = Date.now();
    > 202 |       const response = await axios.get(`${API_BASE}/signals/performance`);
          |                        ^
      203 |       const elapsed = Date.now() - start;
      204 |
      205 |       expect(response.status).toBe(200);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
      at Object.<anonymous> (tests/performance.test.js:202:24)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



  ● API Performance Tests › Database Query Performance › market overview aggregation should be efficient

    connect ECONNREFUSED 127.0.0.1:5001

      210 |     it('market overview aggregation should be efficient', async () => {
      211 |       const start = Date.now();
    > 212 |       const response = await axios.get(`${API_BASE}/market/overview`);
          |                        ^
      213 |       const elapsed = Date.now() - start;
      214 |
      215 |       expect(response.status).toBe(200);

      at Function.Object.<anonymous>.AxiosError.from (node_modules/axios/lib/core/AxiosError.js:96:14)
      at RedirectableRequest.handleRequestError (node_modules/axios/lib/adapters/http.js:638:25)
      at ClientRequest.eventHandlers.<computed> (node_modules/follow-redirects/index.js:49:24)
      at Axios.request (node_modules/axios/lib/core/Axios.js:45:41)
      at Object.<anonymous> (tests/performance.test.js:212:24)

    Cause:
    connect ECONNREFUSED 127.0.0.1:5001



FAIL tests/integration/data-pipeline.integration.test.js
  ● Data Pipeline Integration - End-to-End › Growth Metrics Data Flow › should have growth metrics loaded for test symbols

    ReferenceError: query is not defined

      34 |   beforeEach(() => {
      35 |     jest.clearAllMocks();
    > 36 |     query.mockImplementation((sql, params) => {
         |     ^
      37 |       // Default: return empty rows for all queries
      38 |       if (sql.includes("information_schema.tables")) {
      39 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/data-pipeline.integration.test.js:36:5)

  ● Data Pipeline Integration - End-to-End › Growth Metrics Data Flow › growth metrics should have required fields without NULL defaults

    ReferenceError: query is not defined

      34 |   beforeEach(() => {
      35 |     jest.clearAllMocks();
    > 36 |     query.mockImplementation((sql, params) => {
         |     ^
      37 |       // Default: return empty rows for all queries
      38 |       if (sql.includes("information_schema.tables")) {
      39 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/data-pipeline.integration.test.js:36:5)

  ● Data Pipeline Integration - End-to-End › Risk Metrics Data Flow › should have risk metrics loaded

    ReferenceError: query is not defined

      34 |   beforeEach(() => {
      35 |     jest.clearAllMocks();
    > 36 |     query.mockImplementation((sql, params) => {
         |     ^
      37 |       // Default: return empty rows for all queries
      38 |       if (sql.includes("information_schema.tables")) {
      39 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/data-pipeline.integration.test.js:36:5)

  ● Data Pipeline Integration - End-to-End › Risk Metrics Data Flow › risk metrics API should return complete risk inputs

    ReferenceError: query is not defined

      34 |   beforeEach(() => {
      35 |     jest.clearAllMocks();
    > 36 |     query.mockImplementation((sql, params) => {
         |     ^
      37 |       // Default: return empty rows for all queries
      38 |       if (sql.includes("information_schema.tables")) {
      39 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/data-pipeline.integration.test.js:36:5)

  ● Data Pipeline Integration - End-to-End › Value Metrics Data Flow › should have value metrics with legitimate data (not fake hardcoded)

    ReferenceError: query is not defined

      34 |   beforeEach(() => {
      35 |     jest.clearAllMocks();
    > 36 |     query.mockImplementation((sql, params) => {
         |     ^
      37 |       // Default: return empty rows for all queries
      38 |       if (sql.includes("information_schema.tables")) {
      39 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/data-pipeline.integration.test.js:36:5)

  ● Data Pipeline Integration - End-to-End › Schema Alignment › stock_scores table should have all required columns

    ReferenceError: query is not defined

      34 |   beforeEach(() => {
      35 |     jest.clearAllMocks();
    > 36 |     query.mockImplementation((sql, params) => {
         |     ^
      37 |       // Default: return empty rows for all queries
      38 |       if (sql.includes("information_schema.tables")) {
      39 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/data-pipeline.integration.test.js:36:5)

  ● Data Pipeline Integration - End-to-End › Schema Alignment › growth_metrics table schema should be consistent

    ReferenceError: query is not defined

      34 |   beforeEach(() => {
      35 |     jest.clearAllMocks();
    > 36 |     query.mockImplementation((sql, params) => {
         |     ^
      37 |       // Default: return empty rows for all queries
      38 |       if (sql.includes("information_schema.tables")) {
      39 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/data-pipeline.integration.test.js:36:5)

  ● Data Pipeline Integration - End-to-End › Schema Alignment › risk_metrics table should have all risk components

    ReferenceError: query is not defined

      34 |   beforeEach(() => {
      35 |     jest.clearAllMocks();
    > 36 |     query.mockImplementation((sql, params) => {
         |     ^
      37 |       // Default: return empty rows for all queries
      38 |       if (sql.includes("information_schema.tables")) {
      39 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/data-pipeline.integration.test.js:36:5)

  ● Data Pipeline Integration - End-to-End › Exception Handling - NO Hardcoded Defaults › API should handle requests without crashing

    ReferenceError: query is not defined

      34 |   beforeEach(() => {
      35 |     jest.clearAllMocks();
    > 36 |     query.mockImplementation((sql, params) => {
         |     ^
      37 |       // Default: return empty rows for all queries
      38 |       if (sql.includes("information_schema.tables")) {
      39 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/data-pipeline.integration.test.js:36:5)

  ● Data Pipeline Integration - End-to-End › Config Alignment › scoring weights should be properly configured

    ReferenceError: query is not defined

      34 |   beforeEach(() => {
      35 |     jest.clearAllMocks();
    > 36 |     query.mockImplementation((sql, params) => {
         |     ^
      37 |       // Default: return empty rows for all queries
      38 |       if (sql.includes("information_schema.tables")) {
      39 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/data-pipeline.integration.test.js:36:5)


  ● Test suite failed to run

    ReferenceError: closeDatabase is not defined

      44 |
      45 |   afterAll(async () => {
    > 46 |     await closeDatabase();
         |     ^
      47 |   });
      48 |
      49 |   describe('Growth Metrics Data Flow', () => {

      at Object.<anonymous> (tests/integration/data-pipeline.integration.test.js:46:5)

FAIL tests/integration/analytics/recommendations.test.js
  ● Recommendations API › Stock Recommendations › should retrieve personalized stock recommendations

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/recommendations.test.js:35:5)

  ● Recommendations API › Stock Recommendations › should filter recommendations by type

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/recommendations.test.js:35:5)

  ● Recommendations API › Sector Recommendations › should provide sector-based recommendations

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/recommendations.test.js:35:5)

  ● Recommendations API › Sector Recommendations › should get recommendations for specific sector

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/recommendations.test.js:35:5)

  ● Recommendations API › AI-Generated Recommendations › should provide AI-generated stock picks

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/recommendations.test.js:35:5)

  ● Recommendations API › AI-Generated Recommendations › should generate portfolio allocation recommendations

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/recommendations.test.js:35:5)

  ● Recommendations API › Similar Stocks › should find similar stocks based on characteristics

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/recommendations.test.js:35:5)

  ● Recommendations API › Similar Stocks › should recommend alternatives to current holdings

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/recommendations.test.js:35:5)

  ● Recommendations API › Performance Tracking › should track recommendation performance

    ReferenceError: query is not defined

      33 |   beforeEach(() => {
      34 |     jest.clearAllMocks();
    > 35 |     query.mockImplementation((sql, params) => {
         |     ^
      36 |       // Default: return empty rows for all queries
      37 |       if (sql.includes("information_schema.tables")) {
      38 |         return Promise.resolve({ rows: [{ exists: true }] });

      at Object.query (tests/integration/analytics/recommendations.test.js:35:5)

FAIL tests/integration/routes/sectors.integration.test.js
  ● Sectors Routes › GET /api/sectors › should return sector performance data

    TypeError: Assignment to constant variable.

      35 | describe("Sectors Routes", () => {
      36 |   beforeAll(() => {
    > 37 |     app = express();
         |        ^
      38 |     app.use(express.json());
      39 |     app.use("/api/sectors", sectorRouter);
      40 |   });

      at Object.<anonymous> (tests/integration/routes/sectors.integration.test.js:37:8)

  ● Sectors Routes › GET /api/sectors/performance › should return detailed sector performance

    TypeError: Assignment to constant variable.

      35 | describe("Sectors Routes", () => {
      36 |   beforeAll(() => {
    > 37 |     app = express();
         |        ^
      38 |     app.use(express.json());
      39 |     app.use("/api/sectors", sectorRouter);
      40 |   });

      at Object.<anonymous> (tests/integration/routes/sectors.integration.test.js:37:8)

  ● Sectors Routes › GET /api/sectors/performance › should handle period parameter

    TypeError: Assignment to constant variable.

      35 | describe("Sectors Routes", () => {
      36 |   beforeAll(() => {
    > 37 |     app = express();
         |        ^
      38 |     app.use(express.json());
      39 |     app.use("/api/sectors", sectorRouter);
      40 |   });

      at Object.<anonymous> (tests/integration/routes/sectors.integration.test.js:37:8)

  ● Sectors Routes › GET /api/sectors/leaders › should return sector leaders

    TypeError: Assignment to constant variable.

      35 | describe("Sectors Routes", () => {
      36 |   beforeAll(() => {
    > 37 |     app = express();
         |        ^
      38 |     app.use(express.json());
      39 |     app.use("/api/sectors", sectorRouter);
      40 |   });

      at Object.<anonymous> (tests/integration/routes/sectors.integration.test.js:37:8)

  ● Sectors Routes › GET /api/sectors/rotation › should return sector rotation analysis

    TypeError: Assignment to constant variable.

      35 | describe("Sectors Routes", () => {
      36 |   beforeAll(() => {
    > 37 |     app = express();
         |        ^
      38 |     app.use(express.json());
      39 |     app.use("/api/sectors", sectorRouter);
      40 |   });

      at Object.<anonymous> (tests/integration/routes/sectors.integration.test.js:37:8)

  ● Sectors Routes › GET /api/sectors/:sector/details › should return specific sector data

    TypeError: Assignment to constant variable.

      35 | describe("Sectors Routes", () => {
      36 |   beforeAll(() => {
    > 37 |     app = express();
         |        ^
      38 |     app.use(express.json());
      39 |     app.use("/api/sectors", sectorRouter);
      40 |   });

      at Object.<anonymous> (tests/integration/routes/sectors.integration.test.js:37:8)

  ● Sectors Routes › GET /api/sectors/:sector/stocks › should return stocks in sector

    TypeError: Assignment to constant variable.

      35 | describe("Sectors Routes", () => {
      36 |   beforeAll(() => {
    > 37 |     app = express();
         |        ^
      38 |     app.use(express.json());
      39 |     app.use("/api/sectors", sectorRouter);
      40 |   });

      at Object.<anonymous> (tests/integration/routes/sectors.integration.test.js:37:8)

  ● Sectors Routes › GET /api/sectors/:sector/stocks › should handle limit parameter

    TypeError: Assignment to constant variable.

      35 | describe("Sectors Routes", () => {
      36 |   beforeAll(() => {
    > 37 |     app = express();
         |        ^
      38 |     app.use(express.json());
      39 |     app.use("/api/sectors", sectorRouter);
      40 |   });

      at Object.<anonymous> (tests/integration/routes/sectors.integration.test.js:37:8)

  ● Sectors Routes › GET /api/sectors/allocation › should return sector allocation data

    TypeError: Assignment to constant variable.

      35 | describe("Sectors Routes", () => {
      36 |   beforeAll(() => {
    > 37 |     app = express();
         |        ^
      38 |     app.use(express.json());
      39 |     app.use("/api/sectors", sectorRouter);
      40 |   });

      at Object.<anonymous> (tests/integration/routes/sectors.integration.test.js:37:8)

FAIL tests/unit/routes/trades.test.js
  ● Trades Routes - Testing Your Actual Site › GET /trades/health - Health check › should return trade service health status

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/ - Root endpoint › should return trade API ready message

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/import/status - Trade import status › should return import status information

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/history - Trade history › should return user trade history with pagination

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/history - Trade history › should handle date range filtering

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/history - Trade history › should filter by symbol

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/history - Trade history › should support pagination parameters

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/analytics - Trade analytics › should return trade performance analytics

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/analytics - Trade analytics › should handle time period filters

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/analytics - Trade analytics › should include benchmark comparison

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › POST /trades/import - Import trades › should import trades from CSV data

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › POST /trades/import - Import trades › should validate required fields

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › POST /trades/import - Import trades › should handle duplicate trades

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › POST /trades/import - Import trades › should handle invalid data formats

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/export - Export trades › should export trades in CSV format

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/export - Export trades › should export trades in JSON format

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/export - Export trades › should handle date range for export

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/brokers - Broker integration status › should return connected brokers status

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › POST /trades/sync/:broker - Sync trades from broker › should sync trades from Alpaca

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › POST /trades/sync/:broker - Sync trades from broker › should handle unsupported broker

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › POST /trades/sync/:broker - Sync trades from broker › should validate date parameters

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/performance - Performance analysis › should return detailed performance metrics

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/performance - Performance analysis › should include benchmark comparison

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/performance - Performance analysis › should support different time periods

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/performance/attribution - Performance attribution › should return performance attribution analysis

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/stats - Trade statistics › should return comprehensive trade statistics

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/stats - Trade statistics › should filter stats by date range

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › GET /trades/stats - Trade statistics › should group stats by time period

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › POST /trades/validate - Trade validation › should validate trade data before import

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › POST /trades/validate - Trade validation › should identify invalid trade data

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › POST /trades/search - Advanced trade search › should search trades by multiple criteria

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › POST /trades/search - Advanced trade search › should handle empty search criteria

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › Error handling › should handle database connection errors

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › Error handling › should handle transaction rollback on import errors

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › Error handling › should handle malformed request data

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › Error handling › should handle missing authentication

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › Error handling › should handle various error scenarios

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

  ● Trades Routes - Testing Your Actual Site › Error handling › should validate request parameters

    ReferenceError: query is not defined

      73 |     jest.clearAllMocks();
      74 |     // Set up comprehensive mock query implementation with defaults
    > 75 |     query.mockImplementation((sql, params) => {
         |     ^
      76 |       // Default: return empty rows for all queries
      77 |       // Tests can override with mockResolvedValueOnce/mockResolvedValue
      78 |       if (sql && typeof sql === 'string') {

      at Object.query (tests/unit/routes/trades.test.js:75:5)

FAIL tests/unit/routes/portfolio.test.js
  ● Portfolio Routes Unit Tests › GET /portfolio › should return portfolio info

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/holdings › should return holdings data

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/performance › should return performance data

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/analytics › should return analytics data

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/value › should return portfolio value data

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/risk-analysis › should return risk analysis data

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/returns › should return returns data

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/benchmark › should return benchmark data

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/risk › should return risk data

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/risk-metrics › should return risk metrics

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › POST /portfolio/rebalance/execute › should execute rebalance with valid recommendations

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › POST /portfolio/rebalance/execute › should reject rebalance without recommendations

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › POST /portfolio/rebalance/execute › should reject invalid recommendations format

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/allocation - metadata integration › should return allocation with last rebalance date from metadata

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/optimization › should return portfolio optimization recommendations

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/optimization › should handle optimization with risk tolerance parameters

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/optimization › should include rebalancing suggestions

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › POST /portfolio/optimization/execute › should execute optimization recommendations

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/analysis › should return comprehensive portfolio analysis

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/analysis › should include sector breakdown

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/analysis › should handle time period analysis

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/rebalance › should return rebalancing recommendations

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/rebalance › should handle custom target allocations

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/rebalance › should validate allocation percentages sum to 100

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/metrics › should return detailed portfolio metrics

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/metrics › should include advanced risk metrics

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/metrics › should support different time periods

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/holdings/detailed › should return detailed holdings information

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/holdings/detailed › should filter holdings by minimum value

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/holdings/detailed › should sort holdings by different criteria

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › POST /portfolio/holdings/add › should add new holding to portfolio

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › POST /portfolio/holdings/add › should validate required fields

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › POST /portfolio/holdings/add › should handle duplicate holdings

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/performance/history › should return historical performance data

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/performance/history › should handle date range filtering

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/performance/history › should include benchmark comparison

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/performance/attribution › should return performance attribution analysis

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/performance/attribution › should break down attribution by holdings

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/watchlist › should return portfolio watchlist

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/watchlist › should include price alerts

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › POST /portfolio/watchlist/add › should add symbol to watchlist

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › POST /portfolio/watchlist/add › should validate symbol format

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/export › should export portfolio data in CSV format

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/export › should export portfolio data in JSON format

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › GET /portfolio/export › should include all requested data fields

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › Error handling › should handle invalid endpoints gracefully

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › Error handling › should handle missing authorization

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › Error handling › should handle database connection errors

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › Error handling › should handle invalid query parameters

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

  ● Portfolio Routes Unit Tests › Error handling › should handle large data requests with pagination

    ReferenceError: query is not defined

      37 |     jest.clearAllMocks();
      38 |     // Set up default mock responses for all tests
    > 39 |     query.mockImplementation(() => {
         |     ^
      40 |       return Promise.resolve({
      41 |         rows: [
      42 |           {

      at Object.query (tests/unit/routes/portfolio.test.js:39:5)

FAIL tests/unit/routes/news.test.js
  ● News Routes › GET /news/articles › should return news articles with sentiment analysis

    ReferenceError: query is not defined

      111 |       };
      112 |       const mockCount = { rows: [{ total: "1" }] };
    > 113 |       query
          |       ^
      114 |         .mockResolvedValueOnce(mockArticles)
      115 |         .mockResolvedValueOnce(mockCount);
      116 |       const response = await request(app)

      at Object.query (tests/unit/routes/news.test.js:113:7)

  ● News Routes › GET /news/articles › should handle filtering by category and sentiment

    ReferenceError: query is not defined

      124 |       const mockArticles = { rows: [] };
      125 |       const mockCount = { rows: [{ total: "0" }] };
    > 126 |       query
          |       ^
      127 |         .mockResolvedValueOnce(mockArticles)
      128 |         .mockResolvedValueOnce(mockCount);
      129 |       const response = await request(app)

      at Object.query (tests/unit/routes/news.test.js:126:7)

  ● News Routes › GET /news/articles › should handle database errors

    ReferenceError: query is not defined

      143 |     });
      144 |     test("should handle database errors", async () => {
    > 145 |       query.mockRejectedValue(new Error("Database connection failed"));
          |       ^
      146 |       const response = await request(app).get("/news/articles");
      147 |       if (response.body.success !== undefined) { expect([true, false]).toContain(response.body.success); } else { expect(response.body).toBeDefined(); }
      148 |     });

      at Object.query (tests/unit/routes/news.test.js:145:7)

  ● News Routes › GET /news/sentiment/:symbol › should return sentiment analysis for symbol

    ReferenceError: query is not defined

      178 |         ],
      179 |       };
    > 180 |       query
          |       ^
      181 |         .mockResolvedValueOnce(mockSentimentData)
      182 |         .mockResolvedValueOnce(mockTrendData)
      183 |         .mockResolvedValueOnce(mockKeywordData);

      at Object.query (tests/unit/routes/news.test.js:180:7)

  ● News Routes › GET /news/sentiment/:symbol › should handle database errors

    ReferenceError: query is not defined

      191 |     });
      192 |     test("should handle database errors", async () => {
    > 193 |       query.mockRejectedValue(new Error("Database query failed"));
          |       ^
      194 |       const response = await request(app)
      195 |         .get("/news/sentiment/AAPL")
      196 |         ;

      at Object.query (tests/unit/routes/news.test.js:193:7)

  ● News Routes › GET /news/market-sentiment › should return market sentiment overview

    ReferenceError: query is not defined

      244 |         ],
      245 |       };
    > 246 |       query
          |       ^
      247 |         .mockResolvedValueOnce(mockMarketData)
      248 |         .mockResolvedValueOnce(mockCategoryData)
      249 |         .mockResolvedValueOnce(mockSymbolData)

      at Object.query (tests/unit/routes/news.test.js:246:7)

  ● News Routes › GET /news/sources › should return news sources with reliability scores

    ReferenceError: query is not defined

      314 |         ],
      315 |       };
    > 316 |       query.mockResolvedValue(mockSourcesData);
          |       ^
      317 |       const response = await request(app).get("/news/sources");
      318 |       if (response.body.success !== undefined) { expect([true, false]).toContain(response.body.success); } else { expect(response.body).toBeDefined(); }
      319 |       // Mock call disabled for real database testing

      at Object.query (tests/unit/routes/news.test.js:316:7)

  ● News Routes › GET /news/categories › should return news categories with sentiment data

    ReferenceError: query is not defined

      339 |         ],
      340 |       };
    > 341 |       query.mockResolvedValue(mockCategoriesData);
          |       ^
      342 |       const response = await request(app).get("/news/categories");
      343 |       if (response.body.success !== undefined) { expect([true, false]).toContain(response.body.success); } else { expect(response.body).toBeDefined(); }
      344 |     });

      at Object.query (tests/unit/routes/news.test.js:341:7)

  ● News Routes › GET /news/trending › should return trending topics

    ReferenceError: query is not defined

      378 |         ],
      379 |       };
    > 380 |       query
          |       ^
      381 |         .mockResolvedValueOnce(mockKeywordData)
      382 |         .mockResolvedValueOnce(mockSymbolData);
      383 |       const response = await request(app)

      at Object.query (tests/unit/routes/news.test.js:380:7)

  ● News Routes › GET /news/search › should return search results for valid query

    ReferenceError: query is not defined

      480 |         avg_relevance: 0.9,
      481 |       };
    > 482 |       query
          |       ^
      483 |         .mockResolvedValueOnce({ rows: mockSearchResults })
      484 |         .mockResolvedValueOnce({ rows: [mockStats] });
      485 |       const response = await request(app)

      at Object.query (tests/unit/routes/news.test.js:482:7)

  ● News Routes › GET /news/search › should handle empty search results

    ReferenceError: query is not defined

      493 |     });
      494 |     test("should handle empty search results", async () => {
    > 495 |       query
          |       ^
      496 |         .mockResolvedValueOnce({ rows: [] })
      497 |         .mockResolvedValueOnce({ rows: [{ total_matches: 0 }] });
      498 |       const response = await request(app)

      at Object.query (tests/unit/routes/news.test.js:495:7)

  ● News Routes › GET /news/search › should handle database errors gracefully

    ReferenceError: query is not defined

      502 |     });
      503 |     test("should handle database errors gracefully", async () => {
    > 504 |       query.mockRejectedValueOnce(new Error("Database connection failed"));
          |       ^
      505 |       const response = await request(app)
      506 |         .get("/news/search?query=test")
      507 |         ;

      at Object.query (tests/unit/routes/news.test.js:504:7)

  ● News Routes › GET /news/search › should support filtering parameters

    ReferenceError: query is not defined

      525 |         },
      526 |       ];
    > 527 |       query.mockResolvedValueOnce({ rows: mockResults }).mockResolvedValueOnce({
          |       ^
      528 |         rows: [
      529 |           {
      530 |             total_matches: 1,

      at Object.query (tests/unit/routes/news.test.js:527:7)

FAIL tests/unit/routes/calendar.test.js
  ● Calendar Routes Unit Tests › GET /calendar/economic › should return economic calendar with default parameters

    expect(received).toHaveProperty(path)

    Expected path: "economic_events"
    Received path: []

    Received value: []

      94 |       const response = await request(app).get("/calendar/economic").expect(200);
      95 |       expect(response.body.success).toBe(true);
    > 96 |       expect(response.body.data).toHaveProperty("economic_events");
         |                                  ^
      97 |       expect(response.body.data).toHaveProperty("summary");
      98 |       expect(Array.isArray(response.body.data.economic_events)).toBe(true);
      99 |       expect(response.body.data.summary).toHaveProperty("country", "US");

      at Object.toHaveProperty (tests/unit/routes/calendar.test.js:96:34)

  ● Calendar Routes Unit Tests › GET /calendar/economic › should return economic calendar with custom parameters

    TypeError: Cannot read properties of undefined (reading 'length')

      109 |         .expect(200);
      110 |       expect(response.body.success).toBe(true);
    > 111 |       expect(response.body.data.economic_events.length).toBeLessThanOrEqual(10);
          |                                                 ^
      112 |       expect(response.body.data.summary.country).toBe("EU");
      113 |       expect(response.body.data.filters.importance).toBe("high");
      114 |       expect(response.body.data.filters.days_ahead).toBe(7);

      at Object.length (tests/unit/routes/calendar.test.js:111:49)

  ● Calendar Routes Unit Tests › GET /calendar/economic › should handle invalid parameters gracefully

    expected 400 "Bad Request", got 200 "OK"

      118 |       const response = await request(app)
      119 |         .get("/calendar/economic?days_ahead=500&limit=300")
    > 120 |         .expect(400);
          |          ^
      121 |       expect(response.body.success).toBe(false);
      122 |       expect(response.body.error).toContain("Invalid days_ahead parameter");
      123 |     });

      at Object.expect (tests/unit/routes/calendar.test.js:120:10)
      ----
      at Test._assertStatus (node_modules/supertest/lib/test.js:252:14)
      at node_modules/supertest/lib/test.js:308:13
      at Test._assertFunction (node_modules/supertest/lib/test.js:285:13)
      at Test.assert (node_modules/supertest/lib/test.js:164:23)
      at Server.localAssert (node_modules/supertest/lib/test.js:120:14)

  ● Calendar Routes Unit Tests › GET /calendar/economic › should include proper economic event structure

    TypeError: Cannot read properties of undefined (reading 'length')

      126 |         .get("/calendar/economic?limit=5")
      127 |         .expect(200);
    > 128 |       if (response.body.data.economic_events.length > 0) {
          |                                              ^
      129 |         const event = response.body.data.economic_events[0];
      130 |         expect(event).toHaveProperty("event_id");
      131 |         expect(event).toHaveProperty("title");

      at Object.length (tests/unit/routes/calendar.test.js:128:46)

  ● Calendar Routes Unit Tests › GET /calendar/economic › should filter by importance correctly

    TypeError: Cannot read properties of undefined (reading 'filter')

      144 |         .get("/calendar/economic?importance=high&limit=20")
      145 |         .expect(200);
    > 146 |       const highImportanceEvents = response.body.data.economic_events.filter(
          |                                                                       ^
      147 |         (e) => e.importance === "high"
      148 |       );
      149 |       expect(highImportanceEvents.length).toBe(

      at Object.filter (tests/unit/routes/calendar.test.js:146:71)

  ● Calendar Routes Unit Tests › GET /calendar/economic › should include available filters

    expect(received).toHaveProperty(path)

    Matcher error: received value must not be null nor undefined

    Received has value: undefined

      153 |     test("should include available filters", async () => {
      154 |       const response = await request(app).get("/calendar/economic").expect(200);
    > 155 |       expect(response.body.data.available_filters).toHaveProperty("countries");
          |                                                    ^
      156 |       expect(response.body.data.available_filters).toHaveProperty(
      157 |         "importance_levels"
      158 |       );

      at Object.toHaveProperty (tests/unit/routes/calendar.test.js:155:52)

FAIL tests/unit/middleware/auth.test.js
  ● Authentication Middleware › authenticateToken › should authenticate valid JWT token

    ReferenceError: authenticateToken is not defined

      39 |       req.headers.authorization = "Bearer valid-jwt-token";
      40 |       jwt.verify = jest.fn().mockReturnValue(mockUser);
    > 41 |       authenticateToken(req, res, next);
         |       ^
      42 |       expect(jwt.verify).toHaveBeenCalledWith(
      43 |         "valid-jwt-token",
      44 |         expect.any(String)

      at Object.authenticateToken (tests/unit/middleware/auth.test.js:41:7)

  ● Authentication Middleware › authenticateToken › should reject request without authorization header

    ReferenceError: authenticateToken is not defined

      48 |     });
      49 |     test("should reject request without authorization header", () => {
    > 50 |       authenticateToken(req, res, next);
         |       ^
      51 |       expect(res.status).toHaveBeenCalledWith(401);
      52 |       expect(res.json).toHaveBeenCalledWith({
      53 |         success: false,

      at Object.authenticateToken (tests/unit/middleware/auth.test.js:50:7)

  ● Authentication Middleware › authenticateToken › should reject malformed authorization header

    ReferenceError: authenticateToken is not defined

      59 |     test("should reject malformed authorization header", () => {
      60 |       req.headers.authorization = "InvalidFormat token";
    > 61 |       authenticateToken(req, res, next);
         |       ^
      62 |       expect(res.status).toHaveBeenCalledWith(401);
      63 |       expect(res.json).toHaveBeenCalledWith({
      64 |         success: false,

      at Object.authenticateToken (tests/unit/middleware/auth.test.js:61:7)

  ● Authentication Middleware › authenticateToken › should reject expired JWT tokens

    ReferenceError: authenticateToken is not defined

      75 |         throw tokenError;
      76 |       });
    > 77 |       authenticateToken(req, res, next);
         |       ^
      78 |       expect(res.status).toHaveBeenCalledWith(401);
      79 |       expect(res.json).toHaveBeenCalledWith({
      80 |         success: false,

      at Object.authenticateToken (tests/unit/middleware/auth.test.js:77:7)

  ● Authentication Middleware › authenticateToken › should reject invalid JWT tokens

    ReferenceError: authenticateToken is not defined

      91 |         throw tokenError;
      92 |       });
    > 93 |       authenticateToken(req, res, next);
         |       ^
      94 |       expect(res.status).toHaveBeenCalledWith(401);
      95 |       expect(res.json).toHaveBeenCalledWith({
      96 |         success: false,

      at Object.authenticateToken (tests/unit/middleware/auth.test.js:93:7)

  ● Authentication Middleware › authenticateToken › should handle missing JWT secret

    ReferenceError: authenticateToken is not defined

      104 |       const originalEnv = process.env.JWT_SECRET;
      105 |       delete process.env.JWT_SECRET;
    > 106 |       authenticateToken(req, res, next);
          |       ^
      107 |       expect(res.status).toHaveBeenCalledWith(500);
      108 |       expect(res.json).toHaveBeenCalledWith({
      109 |         success: false,

      at Object.authenticateToken (tests/unit/middleware/auth.test.js:106:7)

  ● Authentication Middleware › authenticateToken › should extract token from Authorization header correctly

    ReferenceError: authenticateToken is not defined

      116 |       req.headers.authorization = `Bearer ${token}`;
      117 |       jwt.verify = jest.fn().mockReturnValue({ id: "user123" });
    > 118 |       authenticateToken(req, res, next);
          |       ^
      119 |       expect(jwt.verify).toHaveBeenCalledWith(token, expect.any(String));
      120 |     });
      121 |     test("should handle case-insensitive Bearer prefix", () => {

      at Object.authenticateToken (tests/unit/middleware/auth.test.js:118:7)

  ● Authentication Middleware › authenticateToken › should handle case-insensitive Bearer prefix

    ReferenceError: authenticateToken is not defined

      122 |       req.headers.authorization = "bearer lowercase-token";
      123 |       jwt.verify = jest.fn().mockReturnValue({ id: "user123" });
    > 124 |       authenticateToken(req, res, next);
          |       ^
      125 |       expect(jwt.verify).toHaveBeenCalledWith(
      126 |         "lowercase-token",
      127 |         expect.any(String)

      at Object.authenticateToken (tests/unit/middleware/auth.test.js:124:7)

  ● Authentication Middleware › token validation edge cases › should handle whitespace in token

    ReferenceError: authenticateToken is not defined

      133 |       req.headers.authorization = "Bearer   token-with-spaces   ";
      134 |       jwt.verify = jest.fn().mockReturnValue({ id: "user123" });
    > 135 |       authenticateToken(req, res, next);
          |       ^
      136 |       expect(jwt.verify).toHaveBeenCalledWith(
      137 |         "token-with-spaces",
      138 |         expect.any(String)

      at Object.authenticateToken (tests/unit/middleware/auth.test.js:135:7)

  ● Authentication Middleware › token validation edge cases › should reject empty token

    ReferenceError: authenticateToken is not defined

      141 |     test("should reject empty token", () => {
      142 |       req.headers.authorization = "Bearer ";
    > 143 |       authenticateToken(req, res, next);
          |       ^
      144 |       expect(res.status).toHaveBeenCalledWith(401);
      145 |       expect(res.json).toHaveBeenCalledWith({
      146 |         success: false,

      at Object.authenticateToken (tests/unit/middleware/auth.test.js:143:7)

  ● Authentication Middleware › token validation edge cases › should handle authorization header with extra data

    ReferenceError: authenticateToken is not defined

      152 |       req.headers.authorization = "Bearer valid-token extra-data";
      153 |       jwt.verify = jest.fn().mockReturnValue({ id: "user123" });
    > 154 |       authenticateToken(req, res, next);
          |       ^
      155 |       expect(jwt.verify).toHaveBeenCalledWith(
      156 |         "valid-token",
      157 |         expect.any(String)

      at Object.authenticateToken (tests/unit/middleware/auth.test.js:154:7)

  ● Authentication Middleware › user context setup › should populate req.user with decoded token data

    ReferenceError: authenticateToken is not defined

      169 |       req.headers.authorization = "Bearer valid-token";
      170 |       jwt.verify = jest.fn().mockReturnValue(mockUser);
    > 171 |       authenticateToken(req, res, next);
          |       ^
      172 |       expect(req.user).toEqual(mockUser);
      173 |       expect(req.user.id).toBe("user123");
      174 |       expect(req.user.email).toBe("test@example.com");

      at Object.authenticateToken (tests/unit/middleware/auth.test.js:171:7)

  ● Authentication Middleware › user context setup › should preserve existing req properties

    ReferenceError: authenticateToken is not defined

      179 |       req.headers.authorization = "Bearer valid-token";
      180 |       jwt.verify = jest.fn().mockReturnValue({ id: "user123" });
    > 181 |       authenticateToken(req, res, next);
          |       ^
      182 |       expect(req.originalProperty).toBe("preserved");
      183 |       expect(req.user.id).toBe("user123");
      184 |     });

      at Object.authenticateToken (tests/unit/middleware/auth.test.js:181:7)

  ● Authentication Middleware › error handling › should handle unexpected JWT errors

    ReferenceError: authenticateToken is not defined

      191 |         throw unexpectedError;
      192 |       });
    > 193 |       authenticateToken(req, res, next);
          |       ^
      194 |       expect(res.status).toHaveBeenCalledWith(401);
      195 |       expect(res.json).toHaveBeenCalledWith({
      196 |         success: false,

      at Object.authenticateToken (tests/unit/middleware/auth.test.js:193:7)

  ● Authentication Middleware › security considerations › should not log sensitive token data

    ReferenceError: authenticateToken is not defined

      212 |         throw new Error("Invalid token");
      213 |       });
    > 214 |       authenticateToken(req, res, next);
          |       ^
      215 |       // Ensure token not logged in error cases
      216 |       expect(consoleSpy).not.toHaveBeenCalledWith(
      217 |         expect.stringContaining("sensitive-token-12345")

      at Object.authenticateToken (tests/unit/middleware/auth.test.js:214:7)

  ● Authentication Middleware › security considerations › should handle malicious token attempts

    ReferenceError: authenticateToken is not defined

      233 |           throw error;
      234 |         });
    > 235 |         authenticateToken(req, res, next);
          |         ^
      236 |         expect(res.status).toHaveBeenCalledWith(401);
      237 |         expect(next).not.toHaveBeenCalled();
      238 |         // Reset for next iteration

      at authenticateToken (tests/unit/middleware/auth.test.js:235:9)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/unit/middleware/auth.test.js:229:23)

  ● Authentication Middleware › dev-bypass-token handling › should allow dev-bypass-token in test environment

    ReferenceError: authenticateToken is not defined

      245 |       req.headers.authorization = "Bearer dev-bypass-token";
      246 |       const consoleSpy = jest.spyOn(console, "log").mockImplementation();
    > 247 |       authenticateToken(req, res, next);
          |       ^
      248 |       expect(req.user).toEqual({
      249 |         sub: "dev-user-bypass",
      250 |         id: "dev-user-bypass",

      at Object.authenticateToken (tests/unit/middleware/auth.test.js:247:7)

  ● RequireRole Middleware › should require authentication first

    ReferenceError: requireRole is not defined

      281 |   });
      282 |   test("should require authentication first", () => {
    > 283 |     const middleware = requireRole(["admin"]);
          |                        ^
      284 |     middleware(req, res, next);
      285 |     expect(res.unauthorized).toHaveBeenCalledWith(
      286 |       "User must be authenticated to access this resource",

      at Object.requireRole (tests/unit/middleware/auth.test.js:283:24)

  ● RequireRole Middleware › should allow user with required role

    ReferenceError: requireRole is not defined

      291 |   test("should allow user with required role", () => {
      292 |     req.user = { role: "admin", groups: [] };
    > 293 |     const middleware = requireRole(["admin"]);
          |                        ^
      294 |     middleware(req, res, next);
      295 |     expect(next).toHaveBeenCalled();
      296 |     expect(res.forbidden).not.toHaveBeenCalled();

      at Object.requireRole (tests/unit/middleware/auth.test.js:293:24)

  ● RequireRole Middleware › should allow user with required group

    ReferenceError: requireRole is not defined

      298 |   test("should allow user with required group", () => {
      299 |     req.user = { role: "user", groups: ["admin"] };
    > 300 |     const middleware = requireRole(["admin"]);
          |                        ^
      301 |     middleware(req, res, next);
      302 |     expect(next).toHaveBeenCalled();
      303 |     expect(res.forbidden).not.toHaveBeenCalled();

      at Object.requireRole (tests/unit/middleware/auth.test.js:300:24)

  ● RequireRole Middleware › should deny user without required role or group

    ReferenceError: requireRole is not defined

      305 |   test("should deny user without required role or group", () => {
      306 |     req.user = { role: "user", groups: ["viewer"] };
    > 307 |     const middleware = requireRole(["admin"]);
          |                        ^
      308 |     middleware(req, res, next);
      309 |     expect(res.forbidden).toHaveBeenCalledWith(
      310 |       "Access denied. Required roles: admin",

      at Object.requireRole (tests/unit/middleware/auth.test.js:307:24)

  ● RequireRole Middleware › should handle multiple required roles

    ReferenceError: requireRole is not defined

      320 |   test("should handle multiple required roles", () => {
      321 |     req.user = { role: "editor", groups: [] };
    > 322 |     const middleware = requireRole(["admin", "editor"]);
          |                        ^
      323 |     middleware(req, res, next);
      324 |     expect(next).toHaveBeenCalled();
      325 |     expect(res.forbidden).not.toHaveBeenCalled();

      at Object.requireRole (tests/unit/middleware/auth.test.js:322:24)

  ● RequireRole Middleware › should handle missing groups array

    ReferenceError: requireRole is not defined

      327 |   test("should handle missing groups array", () => {
      328 |     req.user = { role: "admin" }; // No groups property
    > 329 |     const middleware = requireRole(["admin"]);
          |                        ^
      330 |     middleware(req, res, next);
      331 |     expect(next).toHaveBeenCalled();
      332 |   });

      at Object.requireRole (tests/unit/middleware/auth.test.js:329:24)

  ● OptionalAuth Middleware › should continue without auth when no token provided

    ReferenceError: optionalAuth is not defined

      350 |   });
      351 |   test("should continue without auth when no token provided", async () => {
    > 352 |     await optionalAuth(req, res, next);
          |     ^
      353 |     expect(req.user).toBeUndefined();
      354 |     expect(next).toHaveBeenCalled();
      355 |   });

      at Object.<anonymous> (tests/unit/middleware/auth.test.js:352:5)

  ● OptionalAuth Middleware › should authenticate when valid token provided

    ReferenceError: optionalAuth is not defined

      365 |       user: mockUser,
      366 |     });
    > 367 |     await optionalAuth(req, res, next);
          |     ^
      368 |     expect(req.user).toEqual(mockUser);
      369 |     expect(req.token).toBe("valid-token");
      370 |     expect(req.sessionId).toBe("session123");

      at Object.<anonymous> (tests/unit/middleware/auth.test.js:367:5)

  ● OptionalAuth Middleware › should continue when token validation fails

    ReferenceError: optionalAuth is not defined

      381 |     );
      382 |     const consoleSpy = jest.spyOn(console, "log").mockImplementation();
    > 383 |     await optionalAuth(req, res, next);
          |     ^
      384 |     expect(req.user).toBeUndefined();
      385 |     expect(next).toHaveBeenCalled();
      386 |     // Console logging is disabled during tests for performance

      at Object.<anonymous> (tests/unit/middleware/auth.test.js:383:5)

  ● OptionalAuth Middleware › should handle malformed authorization header gracefully

    ReferenceError: optionalAuth is not defined

      390 |   test("should handle malformed authorization header gracefully", async () => {
      391 |     req.headers.authorization = "InvalidFormat";
    > 392 |     await optionalAuth(req, res, next);
          |     ^
      393 |     expect(req.user).toBeUndefined();
      394 |     expect(next).toHaveBeenCalled();
      395 |     expect(apiKeyService.validateJwtToken).not.toHaveBeenCalled();

      at Object.<anonymous> (tests/unit/middleware/auth.test.js:392:5)

  ● RequireApiKey Middleware › should require authentication first

    ReferenceError: requireApiKey is not defined

      420 |   });
      421 |   test("should require authentication first", async () => {
    > 422 |     const middleware = requireApiKey("alpaca");
          |                        ^
      423 |     await middleware(req, res, next);
      424 |     expect(res.unauthorized).toHaveBeenCalledWith(
      425 |       "User must be authenticated to access API configuration",

      at Object.requireApiKey (tests/unit/middleware/auth.test.js:422:24)

  ● RequireApiKey Middleware › should require API key for provider

    ReferenceError: getApiKey is not defined

      432 |     req.token = "valid-token";
      433 |     // Mock getApiKey to return null (no API key configured)
    > 434 |     getApiKey.mockResolvedValue(null);
          |     ^
      435 |     const middleware = requireApiKey("alpaca");
      436 |     await middleware(req, res, next);
      437 |     expect(res.error).toHaveBeenCalledWith(

      at Object.getApiKey (tests/unit/middleware/auth.test.js:434:5)

  ● RequireApiKey Middleware › should proceed when API key is available

    ReferenceError: getApiKey is not defined

      449 |     req.token = "valid-token";
      450 |     const mockApiKey = "test-api-key-123";
    > 451 |     getApiKey.mockResolvedValue(mockApiKey);
          |     ^
      452 |     const middleware = requireApiKey("alpaca");
      453 |     await middleware(req, res, next);
      454 |     expect(req.apiKey).toBe(mockApiKey);

      at Object.getApiKey (tests/unit/middleware/auth.test.js:451:5)

  ● RequireApiKey Middleware › should handle API key service errors

    ReferenceError: getApiKey is not defined

      460 |     req.user = { sub: "user123" };
      461 |     req.token = "valid-token";
    > 462 |     getApiKey.mockRejectedValue(new Error("Service unavailable"));
          |     ^
      463 |     const consoleSpy = jest.spyOn(console, "error").mockImplementation();
      464 |     const middleware = requireApiKey("alpaca");
      465 |     await middleware(req, res, next);

      at Object.getApiKey (tests/unit/middleware/auth.test.js:462:5)

  ● ValidateSession Middleware › should continue when no user is present

    ReferenceError: validateSession is not defined

      491 |   });
      492 |   test("should continue when no user is present", async () => {
    > 493 |     await validateSession(req, res, next);
          |     ^
      494 |     expect(next).toHaveBeenCalled();
      495 |     expect(res.set).not.toHaveBeenCalled();
      496 |   });

      at Object.<anonymous> (tests/unit/middleware/auth.test.js:493:5)

  ● ValidateSession Middleware › should set expiration warning for tokens expiring soon

    ReferenceError: validateSession is not defined

      503 |       tokenIssueTime: now - 3600, // Issued 1 hour ago
      504 |     };
    > 505 |     await validateSession(req, res, next);
          |     ^
      506 |     expect(res.set).toHaveBeenCalledWith("X-Token-Expiring", "true");
      507 |     expect(res.set).toHaveBeenCalledWith(
      508 |       "X-Token-Expires-At",

      at Object.<anonymous> (tests/unit/middleware/auth.test.js:505:5)

  ● ValidateSession Middleware › should warn about long-lived tokens

    ReferenceError: validateSession is not defined

      520 |     };
      521 |     const consoleSpy = jest.spyOn(console, "warn").mockImplementation();
    > 522 |     await validateSession(req, res, next);
          |     ^
      523 |     // Console logging is disabled during tests for performance
      524 |     expect(consoleSpy).not.toHaveBeenCalled();
      525 |     expect(next).toHaveBeenCalled();

      at Object.<anonymous> (tests/unit/middleware/auth.test.js:522:5)

  ● ValidateSession Middleware › should continue on validation errors

    ReferenceError: validateSession is not defined

      536 |     };
      537 |     const consoleSpy = jest.spyOn(console, "error").mockImplementation();
    > 538 |     await validateSession(req, res, next);
          |     ^
      539 |     // Console logging is disabled during tests for performance
      540 |     expect(consoleSpy).not.toHaveBeenCalled();
      541 |     expect(next).toHaveBeenCalled();

      at Object.<anonymous> (tests/unit/middleware/auth.test.js:538:5)

  ● RateLimitByUser Middleware › should allow requests within rate limit

    ReferenceError: rateLimitByUser is not defined

      561 |   test("should allow requests within rate limit", () => {
      562 |     req.user = { sub: "user123" };
    > 563 |     const middleware = rateLimitByUser(10); // 10 requests per minute
          |                        ^
      564 |     middleware(req, res, next);
      565 |     expect(next).toHaveBeenCalled();
      566 |     expect(res.error).not.toHaveBeenCalled();

      at Object.rateLimitByUser (tests/unit/middleware/auth.test.js:563:24)

  ● RateLimitByUser Middleware › should use IP address when user is not authenticated

    ReferenceError: rateLimitByUser is not defined

      567 |   });
      568 |   test("should use IP address when user is not authenticated", () => {
    > 569 |     const middleware = rateLimitByUser(10);
          |                        ^
      570 |     middleware(req, res, next);
      571 |     expect(next).toHaveBeenCalled();
      572 |     expect(res.error).not.toHaveBeenCalled();

      at Object.rateLimitByUser (tests/unit/middleware/auth.test.js:569:24)

  ● RateLimitByUser Middleware › should enforce rate limit

    ReferenceError: rateLimitByUser is not defined

      574 |   test("should enforce rate limit", () => {
      575 |     req.user = { sub: "user123" };
    > 576 |     const middleware = rateLimitByUser(2); // Only 2 requests per minute
          |                        ^
      577 |     // First two requests should succeed
      578 |     middleware(req, res, next);
      579 |     expect(next).toHaveBeenCalledTimes(1);

      at Object.rateLimitByUser (tests/unit/middleware/auth.test.js:576:24)

  ● RateLimitByUser Middleware › should clean up old requests from sliding window

    ReferenceError: rateLimitByUser is not defined

      594 |   test("should clean up old requests from sliding window", () => {
      595 |     req.user = { sub: "user123" };
    > 596 |     const middleware = rateLimitByUser(100);
          |                        ^
      597 |     // Mock Date.now to simulate time passing
      598 |     const originalNow = Date.now;
      599 |     let mockTime = originalNow();

      at Object.rateLimitByUser (tests/unit/middleware/auth.test.js:596:24)

  ● LogApiAccess Middleware › should log request and response

    ReferenceError: logApiAccess is not defined

      634 |     req.user = { sub: "user123" };
      635 |     const consoleSpy = jest.spyOn(console, "log").mockImplementation();
    > 636 |     await logApiAccess(req, res, next);
          |     ^
      637 |     // Console logging is disabled during tests for performance
      638 |     expect(consoleSpy).not.toHaveBeenCalled();
      639 |     expect(next).toHaveBeenCalled();

      at Object.<anonymous> (tests/unit/middleware/auth.test.js:636:5)

  ● LogApiAccess Middleware › should handle anonymous users

    ReferenceError: logApiAccess is not defined

      646 |   test("should handle anonymous users", async () => {
      647 |     const consoleSpy = jest.spyOn(console, "log").mockImplementation();
    > 648 |     await logApiAccess(req, res, next);
          |     ^
      649 |     // Console logging is disabled during tests for performance
      650 |     expect(consoleSpy).not.toHaveBeenCalled();
      651 |     consoleSpy.mockRestore();

      at Object.<anonymous> (tests/unit/middleware/auth.test.js:648:5)

  ● LogApiAccess Middleware › should preserve original res.end functionality

    ReferenceError: logApiAccess is not defined

      654 |     const mockData = "test response data";
      655 |     const mockEncoding = "utf8";
    > 656 |     await logApiAccess(req, res, next);
          |     ^
      657 |     // Ensure original end method is called with correct parameters
      658 |     res.end(mockData, mockEncoding);
      659 |     expect(originalEnd).toHaveBeenCalledWith(mockData, mockEncoding);

      at Object.<anonymous> (tests/unit/middleware/auth.test.js:656:5)

  ● LogApiAccess Middleware › should calculate response time accurately

    ReferenceError: logApiAccess is not defined

      665 |     let mockTime = 1000000;
      666 |     Date.now = jest.fn(() => mockTime);
    > 667 |     await logApiAccess(req, res, next);
          |     ^
      668 |     // Simulate 50ms delay
      669 |     mockTime += 50;
      670 |     res.end();

      at Object.<anonymous> (tests/unit/middleware/auth.test.js:667:5)

FAIL tests/unit/routes/sectors.test.js
  ● Sectors Routes › GET /sectors/health › should return health status

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /sectors/ › should return API status

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /sectors/analysis › should return comprehensive sector analysis with default timeframe

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /sectors/analysis › should handle timeframe parameter validation

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /sectors/analysis › should accept valid timeframes

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /sectors/analysis › should handle database errors

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /sectors/list › should return list of available sectors

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /sectors/list › should handle empty sector list

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /sectors/list › should handle database errors for sector list

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /sectors/:sector/details › should return detailed sector information

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /sectors/:sector/details › should handle non-existent sector

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /sectors/:sector/details › should handle database errors for sector details

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /sectors/:sector/details › should handle URL encoded sector names

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /ranking-history › should return sector ranking history for all sectors

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /ranking-history › should return ranking history for specific sector

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /ranking-history › should return empty data when no ranking history available

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /ranking-history › should handle database errors for ranking history

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /industries/ranking-history › should return industry ranking history for all industries

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /industries/ranking-history › should return ranking history for specific industry

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /industries/ranking-history › should return empty data when no industry ranking history available

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

  ● Sectors Routes › GET /industries/ranking-history › should handle database errors for industry ranking history

    ReferenceError: authenticateToken is not defined

      17 |     app.use("/sectors", sectorsRoutes);
      18 |     // Mock authentication to pass for all tests
    > 19 |     authenticateToken.mockImplementation((req, res, next) => {
         |     ^
      20 |       req.user = { sub: "test-user-123" };
      21 |       next();
      22 |     });

      at Object.authenticateToken (tests/unit/routes/sectors.test.js:19:5)

FAIL tests/integration/utils/factorScoring.test.js
  ● Factor Scoring Integration Tests › Composite Score Calculation › should calculate composite score for individual stock

    TypeError: Cannot read properties of undefined (reading '0')

      53 |   describe("Composite Score Calculation", () => {
      54 |     test("should calculate composite score for individual stock", () => {
    > 55 |       const stockData = mockStockData[0]; // AAPL
         |                                      ^
      56 |       const score = factorScoring.calculateCompositeScore(
      57 |         stockData,
      58 |         mockStockData

      at Object.<anonymous> (tests/integration/utils/factorScoring.test.js:55:38)

  ● Factor Scoring Integration Tests › Composite Score Calculation › should handle stock data without universe comparison

    TypeError: Cannot read properties of undefined (reading '0')

      74 |
      75 |     test("should handle stock data without universe comparison", () => {
    > 76 |       const stockData = mockStockData[0];
         |                                      ^
      77 |       const score = factorScoring.calculateCompositeScore(stockData);
      78 |
      79 |       expect(score).toBeDefined();

      at Object.<anonymous> (tests/integration/utils/factorScoring.test.js:76:38)

  ● Factor Scoring Integration Tests › Universe Scoring › should score entire universe of stocks

    TypeError: Cannot read properties of undefined (reading 'length')

      100 |
      101 |       expect(Array.isArray(scoredUniverse)).toBe(true);
    > 102 |       expect(scoredUniverse.length).toBe(mockStockData.length);
          |                                                        ^
      103 |
      104 |       scoredUniverse.forEach((stock, index) => {
      105 |         expect(stock.symbol).toBeDefined();

      at Object.length (tests/integration/utils/factorScoring.test.js:102:56)

  ● Factor Scoring Integration Tests › Universe Scoring › should handle custom factor weights

    TypeError: Cannot read properties of undefined (reading 'length')

      132 |
      133 |       expect(Array.isArray(scoredUniverse)).toBe(true);
    > 134 |       expect(scoredUniverse.length).toBe(mockStockData.length);
          |                                                        ^
      135 |
      136 |       scoredUniverse.forEach((stock) => {
      137 |         expect(stock.factorScore.compositeScore).toBeDefined();

      at Object.length (tests/integration/utils/factorScoring.test.js:134:56)

  ● Factor Scoring Integration Tests › Factor Explanations › should provide detailed factor explanations

    TypeError: Cannot read properties of undefined (reading '0')

      148 |   describe("Factor Explanations", () => {
      149 |     test("should provide detailed factor explanations", () => {
    > 150 |       const stockData = mockStockData[0]; // AAPL
          |                                      ^
      151 |       const explanations = factorScoring.getFactorExplanations(stockData);
      152 |
      153 |       expect(explanations).toBeDefined();

      at Object.<anonymous> (tests/integration/utils/factorScoring.test.js:150:38)

  ● Factor Scoring Integration Tests › FactorScoringEngine Class › should analyze factors across universe

    TypeError: Cannot read properties of undefined (reading 'map')

      492 |     for (const factorName of allFactors) {
      493 |       const values = universeData
    > 494 |         .map((stock) => stock[factorName])
          |          ^
      495 |         .filter((val) => val !== null && val !== undefined && !isNaN(val));
      496 |
      497 |       if (values.length > 0) {

      at FactorScoringEngine.map [as calculateUniverseStats] (utils/factorScoring.js:494:10)
      at FactorScoringEngine.calculateUniverseStats [as analyzeFactors] (utils/factorScoring.js:522:24)
      at Object.analyzeFactors (tests/integration/utils/factorScoring.test.js:322:31)

  ● Factor Scoring Integration Tests › FactorScoringEngine Class › should identify top performing factors

    TypeError: Cannot read properties of undefined (reading 'map')

      612 |     for (const factorName of allFactors) {
      613 |       const values = universeData
    > 614 |         .map((stock) => stock[factorName])
          |          ^
      615 |         .filter((val) => val !== null && val !== undefined && !isNaN(val));
      616 |
      617 |       if (values.length > 1) {

      at FactorScoringEngine.map [as identifyTopFactors] (utils/factorScoring.js:614:10)
      at Object.identifyTopFactors (tests/integration/utils/factorScoring.test.js:340:33)

  ● Factor Scoring Integration Tests › FactorScoringEngine Class › should rank universe correctly

    TypeError: Cannot read properties of undefined (reading 'length')

      365 |
      366 |       expect(Array.isArray(rankings)).toBe(true);
    > 367 |       expect(rankings.length).toBe(mockStockData.length);
          |                                                  ^
      368 |
      369 |       rankings.forEach((stock, index) => {
      370 |         expect(stock.rank).toBe(index + 1);

      at Object.length (tests/integration/utils/factorScoring.test.js:367:50)

FAIL tests/integration/alpaca/real-api-integration.test.js
  ● Real Alpaca API Integration Tests › Authentication and Account Access › should verify paper trading environment

    TypeError: Cannot read properties of undefined (reading 'getAccount')

      133 |       console.log("�� Verifying paper trading environment...");
      134 |
    > 135 |       const account = await alpacaService.getAccount();
          |                                           ^
      136 |
      137 |       // Ensure we're in paper trading mode for safety
      138 |       expect(account.environment).toBe("paper");

      at Object.getAccount (tests/integration/alpaca/real-api-integration.test.js:135:43)

  ● Real Alpaca API Integration Tests › Portfolio Data Import › should transform Alpaca position data for our database format

    TypeError: Cannot read properties of undefined (reading 'getPositions')

      244 |       console.log("�� Testing data transformation...");
      245 |
    > 246 |       const positions = await alpacaService.getPositions();
          |                                             ^
      247 |
      248 |       // Transform positions to our database format
      249 |       const transformedPositions = positions.map(position => ({

      at Object.getPositions (tests/integration/alpaca/real-api-integration.test.js:246:45)

  ● Real Alpaca API Integration Tests › Portfolio Import Workflow › should import and store Alpaca positions in database

    TypeError: Cannot read properties of undefined (reading 'getPositions')

      292 |         // Step 1: Fetch positions from Alpaca
      293 |         console.log("1️⃣ Fetching positions from Alpaca API...");
    > 294 |         const positions = await alpacaService.getPositions();
          |                                               ^
      295 |         console.log(`   ✅ Fetched ${positions.length} positions`);
      296 |
      297 |         // Step 2: Clean up any existing test data

      at Object.getPositions (tests/integration/alpaca/real-api-integration.test.js:294:47)

  ● Real Alpaca API Integration Tests › Account and Portfolio History › should fetch portfolio history from Alpaca

    TypeError: Cannot read properties of undefined (reading 'getPortfolioHistory')

      404 |
      405 |       try {
    > 406 |         const history = await alpacaService.getPortfolioHistory("1M", "1Day");
          |                                             ^
      407 |
      408 |         expect(Array.isArray(history)).toBe(true);
      409 |         console.log(`�� Portfolio history: ${history.length} data points`);

      at Object.getPortfolioHistory (tests/integration/alpaca/real-api-integration.test.js:406:45)

  ● Real Alpaca API Integration Tests › Account and Portfolio History › should handle rate limiting properly

    TypeError: Cannot read properties of undefined (reading 'getAccount')

      440 |       // Make multiple requests to test rate limiting
      441 |       const promises = [
    > 442 |         alpacaService.getAccount(),
          |                       ^
      443 |         alpacaService.getPositions(),
      444 |       ];
      445 |

      at Object.getAccount (tests/integration/alpaca/real-api-integration.test.js:442:23)

  ● Real Alpaca API Integration Tests › Error Handling and Edge Cases › should handle API errors gracefully

    expect(received).toContain(expected) // indexOf

    Expected substring: "Failed to"
    Received string:    "Cannot read properties of undefined (reading 'getAsset')"

      469 |       } catch (error) {
      470 |         console.log("✅ API error handled gracefully:", error.message);
    > 471 |         expect(error.message).toContain("Failed to");
          |                               ^
      472 |       }
      473 |     }, 10000);
      474 |

      at Object.toContain (tests/integration/alpaca/real-api-integration.test.js:471:31)

  ● Real Alpaca API Integration Tests › Error Handling and Edge Cases › should maintain service state across multiple calls

    TypeError: Cannot read properties of undefined (reading 'getAccount')

      476 |       console.log("�� Testing service state consistency...");
      477 |
    > 478 |       const account1 = await alpacaService.getAccount();
          |                                            ^
      479 |       const account2 = await alpacaService.getAccount();
      480 |
      481 |       expect(account1.accountId).toBe(account2.accountId);

      at Object.getAccount (tests/integration/alpaca/real-api-integration.test.js:478:44)

  ● Real Alpaca API Integration Tests › Performance and Monitoring › should track API request metrics

    TypeError: Cannot read properties of undefined (reading 'requestTimes')

      490 |       console.log("�� Testing API request tracking...");
      491 |
    > 492 |       const initialRequestCount = alpacaService.requestTimes.length;
          |                                                 ^
      493 |
      494 |       await alpacaService.getAccount();
      495 |       await alpacaService.getPositions();

      at Object.requestTimes (tests/integration/alpaca/real-api-integration.test.js:492:49)

FAIL tests/unit/utils/errorTracker.test.js
  ● ErrorTracker › trackError › should track error with full context

    expect(received).toHaveBeenCalledWith(...expected)

    Matcher error: received value must be a mock or spy function

    Received has value: undefined

      153 |       const errorId = errorTracker.trackError(error, context);
      154 |       expect(errorId).toBe("api-kxv26800-i");
    > 155 |       expect(mockError).toHaveBeenCalledWith(
          |                         ^
      156 |         "Application Error",
      157 |         expect.objectContaining({
      158 |           message: "Test error",

      at Object.toHaveBeenCalledWith (tests/unit/utils/errorTracker.test.js:155:25)

  ● ErrorTracker › trackError › should track error with minimal context

    expect(received).toHaveBeenCalledWith(...expected)

    Matcher error: received value must be a mock or spy function

    Received has value: undefined

      174 |       const errorId = errorTracker.trackError(error);
      175 |       expect(errorId).toBe("gen-kxv26800-i");
    > 176 |       expect(mockError).toHaveBeenCalledWith(
          |                         ^
      177 |         "Application Error",
      178 |         expect.objectContaining({
      179 |           message: "Simple error",

      at Object.toHaveBeenCalledWith (tests/unit/utils/errorTracker.test.js:176:25)

  ● ErrorTracker › trackError › should handle errors without stack trace

    expect(received).toHaveBeenCalledWith(...expected)

    Matcher error: received value must be a mock or spy function

    Received has value: undefined

      188 |       const errorId = errorTracker.trackError(error);
      189 |       expect(errorId).toBeDefined();
    > 190 |       expect(mockError).toHaveBeenCalledWith(
          |                         ^
      191 |         "Application Error",
      192 |         expect.objectContaining({
      193 |           message: "Error without stack",

      at Object.toHaveBeenCalledWith (tests/unit/utils/errorTracker.test.js:190:25)

  ● ErrorTracker › checkAlertThresholds › should trigger alert when threshold is exceeded

    expect(received).toHaveBeenCalledWith(...expected)

    Matcher error: received value must be a mock or spy function

    Received has value: undefined

      264 |       }
      265 |       errorTracker.checkAlertThresholds(errorData);
    > 266 |       expect(mockWarn).toHaveBeenCalledWith(
          |                        ^
      267 |         "Error Rate Alert",
      268 |         expect.objectContaining({
      269 |           category: "database",

      at Object.toHaveBeenCalledWith (tests/unit/utils/errorTracker.test.js:266:24)

  ● ErrorTracker › checkAlertThresholds › should not trigger alert when below threshold

    expect(received).not.toHaveBeenCalled()

    Matcher error: received value must be a mock or spy function

    Received has value: undefined

      288 |       }
      289 |       errorTracker.checkAlertThresholds(errorData);
    > 290 |       expect(mockWarn).not.toHaveBeenCalled();
          |                            ^
      291 |       expect(console.log).not.toHaveBeenCalled();
      292 |     });
      293 |     it("should use general threshold for unknown categories", () => {

      at Object.toHaveBeenCalled (tests/unit/utils/errorTracker.test.js:290:28)

  ● ErrorTracker › checkAlertThresholds › should use general threshold for unknown categories

    expect(received).toHaveBeenCalledWith(...expected)

    Matcher error: received value must be a mock or spy function

    Received has value: undefined

      301 |       }
      302 |       errorTracker.checkAlertThresholds(errorData);
    > 303 |       expect(mockWarn).toHaveBeenCalledWith(
          |                        ^
      304 |         "Error Rate Alert",
      305 |         expect.objectContaining({
      306 |           currentCount: 16,

      at Object.toHaveBeenCalledWith (tests/unit/utils/errorTracker.test.js:303:24)

  ● ErrorTracker › checkAlertThresholds › should handle missing error count for category (branch coverage)

    expect(received).not.toHaveBeenCalled()

    Matcher error: received value must be a mock or spy function

    Received has value: undefined

      314 |       errorTracker.checkAlertThresholds(errorData);
      315 |       // Should not trigger alert since count is 0
    > 316 |       expect(mockWarn).not.toHaveBeenCalled();
          |                            ^
      317 |     });
      318 |   });
      319 |   describe("generateErrorId", () => {

      at Object.toHaveBeenCalled (tests/unit/utils/errorTracker.test.js:316:28)

  ● ErrorTracker › middleware › should track error and add context from request

    expect(received).toHaveBeenCalledWith(...expected)

    Matcher error: received value must be a mock or spy function

    Received has value: undefined

      483 |       const error = new Error("Middleware test error");
      484 |       middleware(error, mockReq, mockRes, mockNext);
    > 485 |       expect(mockError).toHaveBeenCalledWith(
          |                         ^
      486 |         "Application Error",
      487 |         expect.objectContaining({
      488 |           message: "Middleware test error",

      at Object.toHaveBeenCalledWith (tests/unit/utils/errorTracker.test.js:485:25)

  ● ErrorTracker › middleware › should handle request without correlation ID

    expect(received).toHaveBeenCalledWith(...expected)

    Matcher error: received value must be a mock or spy function

    Received has value: undefined

      511 |       const error = new Error("Test error without correlation ID");
      512 |       middleware(error, mockReq, mockRes, mockNext);
    > 513 |       expect(mockError).toHaveBeenCalledWith(
          |                         ^
      514 |         "Application Error",
      515 |         expect.objectContaining({
      516 |           context: expect.objectContaining({

      at Object.toHaveBeenCalledWith (tests/unit/utils/errorTracker.test.js:513:25)

  ● ErrorTracker › middleware › should handle request without user

    expect(received).toHaveBeenCalledWith(...expected)

    Matcher error: received value must be a mock or spy function

    Received has value: undefined

      524 |       const error = new Error("Test error without user");
      525 |       middleware(error, mockReq, mockRes, mockNext);
    > 526 |       expect(mockError).toHaveBeenCalledWith(
          |                         ^
      527 |         "Application Error",
      528 |         expect.objectContaining({
      529 |           context: expect.objectContaining({

      at Object.toHaveBeenCalledWith (tests/unit/utils/errorTracker.test.js:526:25)

  ● ErrorTracker › middleware › should handle request without route

    expect(received).toHaveBeenCalledWith(...expected)

    Matcher error: received value must be a mock or spy function

    Received has value: undefined

      537 |       const error = new Error("Test error without route");
      538 |       middleware(error, mockReq, mockRes, mockNext);
    > 539 |       expect(mockError).toHaveBeenCalledWith(
          |                         ^
      540 |         "Application Error",
      541 |         expect.objectContaining({
      542 |           context: expect.objectContaining({

      at Object.toHaveBeenCalledWith (tests/unit/utils/errorTracker.test.js:539:25)

  ● ErrorTracker › middleware › should handle minimal request object

    expect(received).toHaveBeenCalledWith(...expected)

    Matcher error: received value must be a mock or spy function

    Received has value: undefined

      557 |       const error = new Error("Minimal request error");
      558 |       middleware(error, minimalReq, mockRes, mockNext);
    > 559 |       expect(mockError).toHaveBeenCalledWith(
          |                         ^
      560 |         "Application Error",
      561 |         expect.objectContaining({
      562 |           message: "Minimal request error",

      at Object.toHaveBeenCalledWith (tests/unit/utils/errorTracker.test.js:559:25)

FAIL tests/unit/utils/schemaValidator.test.js
  ● Schema Validator › validateIndexes › should return valid for table without indexes

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      817 |       });
      818 |       const result = await validateIndexes("fear_greed_index"); // Table with only created_at index
    > 819 |       expect(result.valid).toBe(true);
          |                            ^
      820 |       expect(result.missingIndexes).toBeDefined();
      821 |     });
      822 |     test("should handle database errors", async () => {

      at Object.toBe (tests/unit/utils/schemaValidator.test.js:819:28)

  ● Schema Validator › validateIndexes › should handle database errors

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: {"actualIndexes": ["fear_greed_index_created_at_idx"], "expectedIndexes": ["price_daily_symbol_idx", "price_daily_date_idx"], "isValid": false, "missingIndexes": ["price_daily_symbol_idx", "price_daily_date_idx"], "valid": false}

      823 |       const dbError = new Error("Index query failed");
      824 |       mockQuery.mockRejectedValueOnce(dbError);
    > 825 |       await expect(validateIndexes("price_daily")).rejects.toThrow( // Use actual table name from loaders
          |             ^
      826 |         "Index query failed"
      827 |       );
      828 |       expect(mockLogger.error).toHaveBeenCalled();

      at expect (node_modules/expect/build/index.js:113:15)
      at Object.expect (tests/unit/utils/schemaValidator.test.js:825:13)

  ● Schema Validator › safeQuery › should execute query successfully

    expect(received).toEqual(expected) // deep equality

    Expected: {"rows": [{"count": 5}]}
    Received: null

      836 |       mockQuery.mockResolvedValueOnce(expectedResult);
      837 |       const result = await safeQuery("SELECT COUNT(*) as count FROM test");
    > 838 |       expect(result).toEqual(expectedResult);
          |                      ^
      839 |       expect(mockQuery).toHaveBeenCalledWith(
      840 |         "SELECT COUNT(*) as count FROM test",
      841 |         []

      at Object.toEqual (tests/unit/utils/schemaValidator.test.js:838:22)

  ● Schema Validator › safeQuery › should return null on database error and log warning

    expect(received).toBeNull()

    Received: {"rows": [{"count": 5}]}

      848 |       mockQuery.mockRejectedValueOnce(dbError);
      849 |       const result = await safeQuery("SELECT * FROM test", ["param"]);
    > 850 |       expect(result).toBeNull();
          |                      ^
      851 |       expect(mockLogger.warn).toHaveBeenCalledWith(
      852 |         "Safe query failed, database may be unavailable",
      853 |         expect.objectContaining({

      at Object.toBeNull (tests/unit/utils/schemaValidator.test.js:850:22)

FAIL tests/unit/utils/riskEngine.test.js
  ● Risk Engine › portfolio risk assessment › should calculate portfolio VaR

    ReferenceError: query is not defined

      23 |       };
      24 |
    > 25 |       query.mockResolvedValue({ rows: mockPriceData });
         |       ^
      26 |
      27 |       const varResult = await riskEngine.calculateVaR(mockPortfolio, 0.95, 252);
      28 |

      at Object.query (tests/unit/utils/riskEngine.test.js:25:7)

  ● Risk Engine › portfolio risk assessment › should compute correlation matrix

    ReferenceError: query is not defined

      70 |       };
      71 |
    > 72 |       query.mockResolvedValue({ rows: mockReturns });
         |       ^
      73 |
      74 |       const correlationMatrix =
      75 |         await riskEngine.calculateCorrelationMatrix(symbols);

      at Object.query (tests/unit/utils/riskEngine.test.js:72:7)

  ● Risk Engine › individual stock risk metrics › should calculate beta coefficient

    ReferenceError: query is not defined

      86 |       const mockMarketReturns = [0.01, -0.005, 0.02, -0.015, 0.005];
      87 |
    > 88 |       query.mockResolvedValue({
         |       ^
      89 |         rows: [
      90 |           {
      91 |             stock_returns: mockStockReturns,

      at Object.query (tests/unit/utils/riskEngine.test.js:88:7)

  ● Risk Engine › individual stock risk metrics › should calculate historical volatility

    ReferenceError: query is not defined

      105 |       const mockPrices = [100, 102, 98, 105, 103, 107, 104, 109];
      106 |
    > 107 |       query.mockResolvedValue({ rows: mockPrices.map((price) => ({ price, date: '2023-01-01' })) });
          |       ^
      108 |
      109 |       const volatility = await riskEngine.calculateVolatility("AAPL", 30);
      110 |

      at Object.query (tests/unit/utils/riskEngine.test.js:107:7)

  ● Risk Engine › individual stock risk metrics › should calculate maximum drawdown

    ReferenceError: query is not defined

      117 |       const mockPrices = [100, 110, 95, 120, 85, 130, 90];
      118 |
    > 119 |       query.mockResolvedValue({ rows: mockPrices.map((price) => ({ price })) });
          |       ^
      120 |
      121 |       const maxDrawdown = await riskEngine.calculateMaxDrawdown("AAPL", 252);
      122 |

      at Object.query (tests/unit/utils/riskEngine.test.js:119:7)

  ● Risk Engine › individual stock risk metrics › should assess liquidity risk

    ReferenceError: query is not defined

      129 |       const mockVolumeData = [1000000, 800000, 1200000, 900000, 1100000];
      130 |
    > 131 |       query.mockResolvedValue({
          |       ^
      132 |         rows: mockVolumeData.map((volume) => ({ volume })),
      133 |       });
      134 |

      at Object.query (tests/unit/utils/riskEngine.test.js:131:7)

  ● Risk Engine › error handling and edge cases › should handle missing price data

    ReferenceError: query is not defined

      377 |   describe("error handling and edge cases", () => {
      378 |     test("should handle missing price data", async () => {
    > 379 |       query.mockResolvedValue({ rows: [] });
          |       ^
      380 |
      381 |       const volatility = await riskEngine.calculateVolatility("INVALID", 30);
      382 |

      at Object.query (tests/unit/utils/riskEngine.test.js:379:7)

  ● Risk Engine › error handling and edge cases › should handle database connection errors

    ReferenceError: query is not defined

      408 |
      409 |     test("should handle database connection errors", async () => {
    > 410 |       query.mockRejectedValue(new Error("Database connection failed"));
          |       ^
      411 |
      412 |       const result = await riskEngine.calculateVolatility("AAPL", 30);
      413 |

      at Object.query (tests/unit/utils/riskEngine.test.js:410:7)

FAIL tests/unit/routes/screener.test.js
  ● Screener Routes Unit Tests › GET /screener › should return screener API overview without authentication

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should screen stocks with default parameters

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should handle price filter parameters

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should handle market cap filter parameters

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should handle volume filter parameters

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should handle sector filter

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should handle PE ratio filters

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should handle dividend yield filters

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should handle pagination parameters

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should cap limit at 500

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should handle multiple filters combined

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should handle invalid numeric parameters gracefully

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should handle empty results

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › GET /screener/screen (authenticated) › should handle database query errors

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › Authentication › should allow public access to root endpoint

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › Authentication › should require authentication for screening endpoint

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › Parameter validation › should sanitize SQL injection attempts

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › Parameter validation › should handle extreme numeric values

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › Error handling › should handle database timeout errors

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › Response format › should return consistent JSON response format

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

  ● Screener Routes Unit Tests › Response format › should include pagination metadata

    ReferenceError: FactorScoringEngine is not defined

      55 |       return Promise.resolve({ rows: [] });
      56 |     });
    > 57 |     mockFactorEngine = new FactorScoringEngine();
         |     ^
      58 |     // Set up the factor engine mock functions
      59 |     mockFactorEngine.calculateCompositeScore = mockCalculateCompositeScore;
      60 |     mockFactorEngine.getAvailableFactors = mockGetAvailableFactors;

      at Object.mockFactorEngine (tests/unit/routes/screener.test.js:57:5)

FAIL tests/integration/utils/database-connection.integration.test.js
  ● Database Comprehensive Integration Tests › Connection Management › should establish database connection successfully

    expect(received).toBeDefined()

    Received: undefined

      49 |     test("should establish database connection successfully", async () => {
      50 |       const pool = getPool();
    > 51 |       expect(pool).toBeDefined();
         |                    ^
      52 |       expect(pool.totalCount).toBeDefined();
      53 |       expect(pool.idleCount).toBeDefined();
      54 |     });

      at Object.toBeDefined (tests/integration/utils/database-connection.integration.test.js:51:20)

  ● Database Comprehensive Integration Tests › Connection Management › should handle connection testing

    expect(received).toHaveProperty(path, value)

    Matcher error: received value must not be null nor undefined

    Received has value: undefined

      56 |     test("should handle connection testing", async () => {
      57 |       const connectionResult = await healthCheck();
    > 58 |       expect(connectionResult).toHaveProperty("status", "healthy");
         |                                ^
      59 |       expect(connectionResult).toHaveProperty("version");
      60 |       expect(connectionResult).toHaveProperty("timestamp");
      61 |     });

      at Object.toHaveProperty (tests/integration/utils/database-connection.integration.test.js:58:32)

  ● Database Comprehensive Integration Tests › Connection Management › should manage connection pool efficiently

    TypeError: Cannot read properties of undefined (reading 'idleCount')

      63 |     test("should manage connection pool efficiently", async () => {
      64 |       const pool = getPool();
    > 65 |       const initialIdleCount = pool.idleCount;
         |                                     ^
      66 |
      67 |       // Execute a simple query
      68 |       await query("SELECT NOW() as current_time");

      at Object.idleCount (tests/integration/utils/database-connection.integration.test.js:65:37)

  ● Database Comprehensive Integration Tests › Connection Management › should handle concurrent connections

    TypeError: Cannot read properties of undefined (reading 'query_number')

      82 |       expect(results).toHaveLength(5);
      83 |       results.forEach((result, index) => {
    > 84 |         expect(parseInt(result.rows[0].query_number)).toBe(index);
         |                                        ^
      85 |         expect(result.rows[0]).toHaveProperty("timestamp");
      86 |       });
      87 |     });

      at query_number (tests/integration/utils/database-connection.integration.test.js:84:40)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/utils/database-connection.integration.test.js:83:15)

  ● Database Comprehensive Integration Tests › Query Operations › should execute basic SELECT queries

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 0
    Received array:  []

       95 |
       96 |       expect(result).toHaveProperty("rows");
    >  97 |       expect(result.rows).toHaveLength(1);
          |                           ^
       98 |       expect(result.rows[0].test_value).toBe(1);
       99 |       expect(result.rows[0].test_string).toBe("hello");
      100 |     });

      at Object.toHaveLength (tests/integration/utils/database-connection.integration.test.js:97:27)

  ● Database Comprehensive Integration Tests › Query Operations › should handle parameterized queries

    TypeError: Cannot read properties of undefined (reading 'param_value')

      107 |       );
      108 |
    > 109 |       expect(result.rows[0].param_value).toBe(testValue);
          |                             ^
      110 |       expect(result.rows[0].param_number).toBe(42);
      111 |     });
      112 |

      at Object.param_value (tests/integration/utils/database-connection.integration.test.js:109:29)

  ● Database Comprehensive Integration Tests › Query Operations › should handle queries with no results

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: undefined

      118 |
      119 |       expect(result.rows).toHaveLength(0);
    > 120 |       expect(result.rowCount).toBe(0);
          |                               ^
      121 |     });
      122 |
      123 |     test("should handle complex queries with JOINs", async () => {

      at Object.toBe (tests/integration/utils/database-connection.integration.test.js:120:31)

  ● Database Comprehensive Integration Tests › Transaction Management › should execute successful transactions

    expect(received).toHaveProperty(path, value)

    Matcher error: received value must not be null nor undefined

    Received has value: undefined

      167 |       });
      168 |
    > 169 |       expect(result).toHaveProperty("ticker", "TRANS");
          |                      ^
      170 |       expect(result).toHaveProperty("short_name", "Transaction Test Co");
      171 |     });
      172 |

      at Object.toHaveProperty (tests/integration/utils/database-connection.integration.test.js:169:22)

  ● Database Comprehensive Integration Tests › Transaction Management › should handle nested transaction operations

    TypeError: Cannot read properties of undefined (reading 'count')

      221 |         `);
      222 |
    > 223 |         return countResult.rows[0].count;
          |                                    ^
      224 |       });
      225 |
      226 |       expect(parseInt(result)).toBeGreaterThanOrEqual(2);

      at count (tests/integration/utils/database-connection.integration.test.js:223:36)
      at Object.<anonymous> (tests/integration/utils/database-connection.integration.test.js:202:22)

  ● Database Comprehensive Integration Tests › Error Handling › should handle SQL syntax errors gracefully

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: {"rows": []}

      230 |   describe("Error Handling", () => {
      231 |     test("should handle SQL syntax errors gracefully", async () => {
    > 232 |       await expect(query("INVALID SQL SYNTAX HERE")).rejects.toThrow();
          |             ^
      233 |     });
      234 |
      235 |     test("should handle connection timeout scenarios", async () => {

      at expect (node_modules/expect/build/index.js:113:15)
      at Object.expect (tests/integration/utils/database-connection.integration.test.js:232:13)

  ● Database Comprehensive Integration Tests › Error Handling › should handle connection timeout scenarios

    expect(received).toHaveLength(expected)

    Expected length: 10
    Received length: 0
    Received array:  []

      240 |
      241 |       const result = await query(longQuery);
    > 242 |       expect(result.rows).toHaveLength(10);
          |                           ^
      243 |     }, 10000);
      244 |
      245 |     test("should handle invalid parameter types", async () => {

      at Object.toHaveLength (tests/integration/utils/database-connection.integration.test.js:242:27)

  ● Database Comprehensive Integration Tests › Error Handling › should handle invalid parameter types

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: {"rows": []}

      244 |
      245 |     test("should handle invalid parameter types", async () => {
    > 246 |       await expect(
          |             ^
      247 |         query("SELECT $1::int as value", ["not_a_number"])
      248 |       ).rejects.toThrow();
      249 |     });

      at expect (node_modules/expect/build/index.js:113:15)
      at Object.expect (tests/integration/utils/database-connection.integration.test.js:246:13)

  ● Database Comprehensive Integration Tests › Error Handling › should handle database constraint violations

    expect(received).toBeDefined()

    Received: undefined

      271 |       } catch (error) {
      272 |         // If error is thrown, it should be a constraint violation
    > 273 |         expect(error.code).toBeDefined();
          |                            ^
      274 |       }
      275 |     });
      276 |   });

      at Object.toBeDefined (tests/integration/utils/database-connection.integration.test.js:273:28)

  ● Database Comprehensive Integration Tests › Performance and Load Testing › should handle bulk insert operations

    TypeError: Cannot read properties of undefined (reading 'count')

      312 |       `);
      313 |
    > 314 |       expect(parseInt(countResult.rows[0].count)).toBe(100);
          |                                           ^
      315 |       expect(executionTime).toBeLessThan(30000); // Should complete within 30 seconds
      316 |     }, 45000);
      317 |

      at Object.count (tests/integration/utils/database-connection.integration.test.js:314:43)

  ● Database Comprehensive Integration Tests › Performance and Load Testing › should handle high concurrency scenarios

    TypeError: Cannot read properties of undefined (reading 'ticker')

      341 |       expect(results).toHaveLength(10);
      342 |       results.forEach((result, index) => {
    > 343 |         expect(result.ticker).toBe(`CONC${index}`);
          |                       ^
      344 |         expect(result.short_name).toBe(`Concurrent Test ${index}`);
      345 |       });
      346 |     });

      at ticker (tests/integration/utils/database-connection.integration.test.js:343:23)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/utils/database-connection.integration.test.js:342:15)

  ● Database Comprehensive Integration Tests › Data Integrity and Validation › should maintain data consistency across operations

    TypeError: Cannot read properties of undefined (reading 'market_category')

      408 |       );
      409 |
    > 410 |       expect(symbolResult.rows[0].market_category).toBe("Healthcare");
          |                                   ^
      411 |       expect(symbolResult.rows[0].name).toBe("Integrity Test Co");
      412 |       expect(parseInt(stockResult.rows[0].market_cap)).toBe(2000000);
      413 |       expect(parseFloat(stockResult.rows[0].price)).toBe(150.5);

      at Object.market_category (tests/integration/utils/database-connection.integration.test.js:410:35)

  ● Database Comprehensive Integration Tests › Data Integrity and Validation › should handle foreign key relationships properly

    expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      426 |       `);
      427 |
    > 428 |       expect(result.rows.length).toBeGreaterThan(0);
          |                                  ^
      429 |
      430 |       // Verify expected columns exist
      431 |       const columnNames = result.rows.map((row) => row.column_name);

      at Object.toBeGreaterThan (tests/integration/utils/database-connection.integration.test.js:428:34)

  ● Database Comprehensive Integration Tests › Data Integrity and Validation › should handle NULL values correctly

    TypeError: Cannot read properties of undefined (reading 'ticker')

      453 |       );
      454 |
    > 455 |       expect(result.rows[0].ticker).toBe(testSymbol);
          |                             ^
      456 |       expect(result.rows[0].short_name).toBe("Null Test Company");
      457 |       expect(result.rows[0].sector).toBeNull();
      458 |     });

      at Object.ticker (tests/integration/utils/database-connection.integration.test.js:455:29)

  ● Database Comprehensive Integration Tests › Schema and Metadata Operations › should query table schema information

    expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      468 |       `);
      469 |
    > 470 |       expect(result.rows.length).toBeGreaterThan(0);
          |                                  ^
      471 |
      472 |       // Verify we have expected tables
      473 |       const tableNames = [...new Set(result.rows.map((row) => row.table_name))];

      at Object.toBeGreaterThan (tests/integration/utils/database-connection.integration.test.js:470:34)

  ● Database Comprehensive Integration Tests › Schema and Metadata Operations › should verify database version and features

    TypeError: Cannot read properties of undefined (reading 'version')

      494 |       const result = await query("SELECT version() as version");
      495 |
    > 496 |       expect(result.rows[0].version).toContain("PostgreSQL");
          |                             ^
      497 |       expect(result.rows[0].version).toBeDefined();
      498 |     });
      499 |   });

      at Object.version (tests/integration/utils/database-connection.integration.test.js:496:29)

  ● Database Comprehensive Integration Tests › Cleanup and Maintenance › should clean up test data

    expect(received).toBeGreaterThanOrEqual(expected)

    Matcher error: received value must be a number or bigint

    Received has value: undefined

      528 |       await query("DELETE FROM company_profile WHERE ticker LIKE 'CONC%'");
      529 |
    > 530 |       expect(deleteResult.rowCount).toBeGreaterThanOrEqual(0);
          |                                     ^
      531 |     });
      532 |
      533 |     test("should verify cleanup completed", async () => {

      at Object.toBeGreaterThanOrEqual (tests/integration/utils/database-connection.integration.test.js:530:37)

  ● Database Comprehensive Integration Tests › Cleanup and Maintenance › should verify cleanup completed

    TypeError: Cannot read properties of undefined (reading 'count')

      543 |       `);
      544 |
    > 545 |       expect(parseInt(result.rows[0].count)).toBe(0);
          |                                      ^
      546 |     });
      547 |   });
      548 | });

      at Object.count (tests/integration/utils/database-connection.integration.test.js:545:38)

FAIL tests/integration/utils/liveDataManager.test.js
  ● Live Data Manager Integration Tests › Dashboard Status Management › should get comprehensive dashboard status

    TypeError: Cannot read properties of undefined (reading 'getDashboardStatus')

      66 |   describe("Dashboard Status Management", () => {
      67 |     test("should get comprehensive dashboard status", () => {
    > 68 |       const dashboardStatus = liveDataManager.getDashboardStatus();
         |                                               ^
      69 |
      70 |       expect(dashboardStatus).toBeDefined();
      71 |       expect(dashboardStatus.providers).toBeDefined();

      at Object.getDashboardStatus (tests/integration/utils/liveDataManager.test.js:68:47)

  ● Live Data Manager Integration Tests › Dashboard Status Management › should get provider status by ID

    TypeError: Cannot read properties of undefined (reading 'getProviderStatus')

      82 |
      83 |     test("should get provider status by ID", () => {
    > 84 |       const alpacaStatus = liveDataManager.getProviderStatus("alpaca");
         |                                            ^
      85 |
      86 |       expect(alpacaStatus).toBeDefined();
      87 |       expect(alpacaStatus.name).toBe("Alpaca Markets");

      at Object.getProviderStatus (tests/integration/utils/liveDataManager.test.js:84:44)

  ● Live Data Manager Integration Tests › Dashboard Status Management › should handle non-existent provider

    TypeError: Cannot read properties of undefined (reading 'getProviderStatus')

       95 |     test("should handle non-existent provider", () => {
       96 |       const nonExistentProvider =
    >  97 |         liveDataManager.getProviderStatus("nonexistent");
          |                         ^
       98 |       expect(nonExistentProvider).toBeNull();
       99 |     });
      100 |   });

      at Object.getProviderStatus (tests/integration/utils/liveDataManager.test.js:97:25)

  ● Live Data Manager Integration Tests › Connection Management › should add new connection successfully

    TypeError: Cannot read properties of undefined (reading 'addConnection')

      106 |       const symbols = ["AAPL", "GOOGL"];
      107 |
    > 108 |       const result = liveDataManager.addConnection(
          |                                      ^
      109 |         connectionId,
      110 |         provider,
      111 |         symbols

      at Object.addConnection (tests/integration/utils/liveDataManager.test.js:108:38)

  ● Live Data Manager Integration Tests › Connection Management › should get connection status

    TypeError: Cannot read properties of undefined (reading 'addConnection')

      121 |     test("should get connection status", () => {
      122 |       const connectionId = "test-connection-2";
    > 123 |       liveDataManager.addConnection(connectionId, "alpaca", ["MSFT"]);
          |                       ^
      124 |
      125 |       const status = liveDataManager.getConnectionStatus(connectionId);
      126 |

      at Object.addConnection (tests/integration/utils/liveDataManager.test.js:123:23)

  ● Live Data Manager Integration Tests › Connection Management › should remove connection successfully

    TypeError: Cannot read properties of undefined (reading 'addConnection')

      137 |     test("should remove connection successfully", () => {
      138 |       const connectionId = "test-connection-3";
    > 139 |       liveDataManager.addConnection(connectionId, "alpaca", ["TSLA"]);
          |                       ^
      140 |
      141 |       const result = liveDataManager.removeConnection(connectionId);
      142 |

      at Object.addConnection (tests/integration/utils/liveDataManager.test.js:139:23)

  ● Live Data Manager Integration Tests › Connection Management › should handle connection limit enforcement

    TypeError: Cannot read properties of undefined (reading 'addConnection')

      159 |       for (let i = 0; i < 20; i++) {
      160 |         const connectionId = `limit-test-${i}`;
    > 161 |         const result = liveDataManager.addConnection(connectionId, "alpaca", [
          |                                        ^
      162 |           "AAPL",
      163 |         ]);
      164 |

      at Object.addConnection (tests/integration/utils/liveDataManager.test.js:161:40)

  ● Live Data Manager Integration Tests › Subscription Management › should add subscription successfully

    TypeError: Cannot read properties of undefined (reading 'addConnection')

      190 |
      191 |       // First add a connection
    > 192 |       liveDataManager.addConnection(connectionId, provider, [symbol]);
          |                       ^
      193 |
      194 |       const result = liveDataManager.addSubscription(
      195 |         symbol,

      at Object.addConnection (tests/integration/utils/liveDataManager.test.js:192:23)

  ● Live Data Manager Integration Tests › Subscription Management › should get user subscriptions

    TypeError: Cannot read properties of undefined (reading 'addConnection')

      214 |       const connectionId = "sub-test-2";
      215 |
    > 216 |       liveDataManager.addConnection(connectionId, provider, [symbol]);
          |                       ^
      217 |       liveDataManager.addSubscription(symbol, provider, connectionId, userId);
      218 |
      219 |       const subscriptions = liveDataManager.getUserSubscriptions(userId);

      at Object.addConnection (tests/integration/utils/liveDataManager.test.js:216:23)

  ● Live Data Manager Integration Tests › Subscription Management › should remove subscription successfully

    TypeError: Cannot read properties of undefined (reading 'addConnection')

      235 |       const connectionId = "sub-test-3";
      236 |
    > 237 |       liveDataManager.addConnection(connectionId, provider, [symbol]);
          |                       ^
      238 |       liveDataManager.addSubscription(symbol, provider, connectionId, userId);
      239 |
      240 |       const result = liveDataManager.removeSubscription(symbol, userId);

      at Object.addConnection (tests/integration/utils/liveDataManager.test.js:237:23)

  ● Live Data Manager Integration Tests › Subscription Management › should remove all subscriber subscriptions

    TypeError: Cannot read properties of undefined (reading 'addConnection')

      259 |       symbols.forEach((symbol, index) => {
      260 |         const connectionId = `multi-sub-${index}`;
    > 261 |         liveDataManager.addConnection(connectionId, provider, [symbol]);
          |                         ^
      262 |         liveDataManager.addSubscription(symbol, provider, connectionId, userId);
      263 |       });
      264 |

      at addConnection (tests/integration/utils/liveDataManager.test.js:261:25)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/utils/liveDataManager.test.js:259:15)

  ● Live Data Manager Integration Tests › Provider Usage Tracking › should track provider usage successfully

    TypeError: Cannot read properties of undefined (reading 'trackProviderUsage')

      283 |       const cost = 5.5;
      284 |
    > 285 |       const result = liveDataManager.trackProviderUsage(
          |                                      ^
      286 |         providerId,
      287 |         requests,
      288 |         cost

      at Object.trackProviderUsage (tests/integration/utils/liveDataManager.test.js:285:38)

  ● Live Data Manager Integration Tests › Provider Usage Tracking › should handle invalid provider usage tracking

    TypeError: Cannot read properties of undefined (reading 'trackProviderUsage')

      302 |
      303 |     test("should handle invalid provider usage tracking", () => {
    > 304 |       const result = liveDataManager.trackProviderUsage("nonexistent", 5, 1.0);
          |                                      ^
      305 |
      306 |       expect(result).toBeDefined();
      307 |       expect(result.success).toBe(false);

      at Object.trackProviderUsage (tests/integration/utils/liveDataManager.test.js:304:38)

  ● Live Data Manager Integration Tests › Performance Metrics › should track latency successfully

    TypeError: Cannot read properties of undefined (reading 'trackLatency')

      315 |       const latency = 150;
      316 |
    > 317 |       const result = liveDataManager.trackLatency(providerId, latency);
          |                                      ^
      318 |
      319 |       expect(result).toBeDefined();
      320 |       expect(result.success).toBe(true);

      at Object.trackLatency (tests/integration/utils/liveDataManager.test.js:317:38)

  ● Live Data Manager Integration Tests › Performance Metrics › should calculate average latency

    TypeError: Cannot read properties of undefined (reading 'trackLatency')

      330 |       // Track multiple latency measurements
      331 |       latencies.forEach((latency) => {
    > 332 |         liveDataManager.trackLatency(providerId, latency);
          |                         ^
      333 |       });
      334 |
      335 |       const avgLatency = liveDataManager.calculateAverageLatency(providerId);

      at trackLatency (tests/integration/utils/liveDataManager.test.js:332:25)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/integration/utils/liveDataManager.test.js:331:17)

  ● Live Data Manager Integration Tests › Performance Metrics › should track errors successfully

    TypeError: Cannot read properties of undefined (reading 'trackError')

      344 |       const error = "Connection timeout";
      345 |
    > 346 |       const result = liveDataManager.trackError(providerId, error);
          |                                      ^
      347 |
      348 |       expect(result).toBeDefined();
      349 |       expect(result.success).toBe(true);

      at Object.trackError (tests/integration/utils/liveDataManager.test.js:346:38)

  ● Live Data Manager Integration Tests › Performance Metrics › should calculate global performance metrics

    TypeError: Cannot read properties of undefined (reading 'calculateGlobalPerformance')

      355 |
      356 |     test("should calculate global performance metrics", () => {
    > 357 |       const performance = liveDataManager.calculateGlobalPerformance();
          |                                           ^
      358 |
      359 |       expect(performance).toBeDefined();
      360 |       expect(typeof performance.averageLatency).toBe("number");

      at Object.calculateGlobalPerformance (tests/integration/utils/liveDataManager.test.js:357:43)

  ● Live Data Manager Integration Tests › Rate Limiting › should set rate limit for provider

    TypeError: Cannot read properties of undefined (reading 'setRateLimit')

      374 |       const limit = 10; // 10 requests per second
      375 |
    > 376 |       liveDataManager.setRateLimit(provider, limit);
          |                       ^
      377 |
      378 |       // Verify rate limit is set (internal check)
      379 |       expect(liveDataManager.rateLimits).toBeDefined();

      at Object.setRateLimit (tests/integration/utils/liveDataManager.test.js:376:23)

  ● Live Data Manager Integration Tests › Rate Limiting › should handle requests within rate limit

    TypeError: Cannot read properties of undefined (reading 'setRateLimit')

      383 |     test("should handle requests within rate limit", async () => {
      384 |       const provider = "rate-test-provider";
    > 385 |       liveDataManager.setRateLimit(provider, 5); // 5 requests per second
          |                       ^
      386 |
      387 |       // Make requests within limit
      388 |       for (let i = 0; i < 5; i++) {

      at Object.setRateLimit (tests/integration/utils/liveDataManager.test.js:385:23)

  ● Live Data Manager Integration Tests › Rate Limiting › should enforce rate limits

    TypeError: Cannot read properties of undefined (reading 'setRateLimit')

      395 |     test("should enforce rate limits", async () => {
      396 |       const provider = "rate-limit-test";
    > 397 |       liveDataManager.setRateLimit(provider, 2); // 2 requests per second
          |                       ^
      398 |
      399 |       // Make requests exceeding limit
      400 |       const results = [];

      at Object.setRateLimit (tests/integration/utils/liveDataManager.test.js:397:23)

  ● Live Data Manager Integration Tests › Rate Limiting › should reset rate limit counters

    TypeError: Cannot read properties of undefined (reading 'setRateLimit')

      411 |     test("should reset rate limit counters", () => {
      412 |       const provider = "reset-test-provider";
    > 413 |       liveDataManager.setRateLimit(provider, 5);
          |                       ^
      414 |
      415 |       // Make some requests
      416 |       liveDataManager.makeRequest(provider, "/test");

      at Object.setRateLimit (tests/integration/utils/liveDataManager.test.js:413:23)

  ● Live Data Manager Integration Tests › Alert Generation › should generate alerts for system limits

    TypeError: Cannot read properties of undefined (reading 'addConnection')

      430 |       // Add some connections and usage to trigger alerts
      431 |       for (let i = 0; i < 8; i++) {
    > 432 |         liveDataManager.addConnection(`alert-test-${i}`, "alpaca", ["AAPL"]);
          |                         ^
      433 |       }
      434 |
      435 |       // Track some usage

      at Object.addConnection (tests/integration/utils/liveDataManager.test.js:432:25)

  ● Live Data Manager Integration Tests › Alert Generation › should generate optimization recommendations

    TypeError: Cannot read properties of undefined (reading 'generateOptimizationRecommendations')

      456 |     test("should generate optimization recommendations", () => {
      457 |       const recommendations =
    > 458 |         liveDataManager.generateOptimizationRecommendations();
          |                         ^
      459 |
      460 |       expect(Array.isArray(recommendations)).toBe(true);
      461 |

      at Object.generateOptimizationRecommendations (tests/integration/utils/liveDataManager.test.js:458:25)

  ● Live Data Manager Integration Tests › Provider Status Updates › should update provider status

    TypeError: Cannot read properties of undefined (reading 'updateProviderStatus')

      474 |       const newStatus = "connecting";
      475 |
    > 476 |       liveDataManager.updateProviderStatus(providerId, newStatus);
          |                       ^
      477 |
      478 |       const provider = liveDataManager.getProviderStatus(providerId);
      479 |       expect(provider.status).toBe(newStatus);

      at Object.updateProviderStatus (tests/integration/utils/liveDataManager.test.js:476:23)

  ● Live Data Manager Integration Tests › Provider Status Updates › should emit status change events

    TypeError: Cannot read properties of undefined (reading 'once')

      484 |       const newStatus = "active";
      485 |
    > 486 |       liveDataManager.once("providerStatusChange", (event) => {
          |                       ^
      487 |         expect(event).toBeDefined();
      488 |         expect(event.provider).toBe(providerId);
      489 |         expect(event.newStatus).toBe(newStatus);

      at Object.once (tests/integration/utils/liveDataManager.test.js:486:23)

  ● Live Data Manager Integration Tests › Analytics and Reporting › should generate analytics report

    TypeError: Cannot read properties of undefined (reading 'addConnection')

      500 |       // Add some test data
      501 |       const userId = "analytics-user";
    > 502 |       liveDataManager.addConnection("analytics-conn", "alpaca", [
          |                       ^
      503 |         "AAPL",
      504 |         "GOOGL",
      505 |       ]);

      at Object.addConnection (tests/integration/utils/liveDataManager.test.js:502:23)

  ● Live Data Manager Integration Tests › Analytics and Reporting › should generate performance report

    TypeError: Cannot read properties of undefined (reading 'generatePerformanceReport')

      531 |
      532 |     test("should generate performance report", () => {
    > 533 |       const report = liveDataManager.generatePerformanceReport();
          |                                      ^
      534 |
      535 |       expect(report).toBeDefined();
      536 |       expect(typeof report.uptime).toBe("number");

      at Object.generatePerformanceReport (tests/integration/utils/liveDataManager.test.js:533:38)

  ● Live Data Manager Integration Tests › Analytics and Reporting › should subscribe users to multiple symbols

    TypeError: Cannot read properties of undefined (reading 'subscribe')

      552 |       const symbols = ["AAPL", "GOOGL", "MSFT"];
      553 |
    > 554 |       const result = liveDataManager.subscribe(userId, symbols);
          |                                      ^
      555 |
      556 |       expect(result).toBeDefined();
      557 |       expect(result.success).toBe(true);

      at Object.subscribe (tests/integration/utils/liveDataManager.test.js:554:38)

  ● Live Data Manager Integration Tests › Error Handling › should handle invalid connection parameters

    TypeError: Cannot read properties of undefined (reading 'addConnection')

      570 |   describe("Error Handling", () => {
      571 |     test("should handle invalid connection parameters", () => {
    > 572 |       const result = liveDataManager.addConnection("", "invalid-provider", []);
          |                                      ^
      573 |
      574 |       expect(result).toBeDefined();
      575 |       expect(result.success).toBe(false);

      at Object.addConnection (tests/integration/utils/liveDataManager.test.js:572:38)

  ● Live Data Manager Integration Tests › Error Handling › should handle invalid subscription parameters

    TypeError: Cannot read properties of undefined (reading 'addSubscription')

      578 |
      579 |     test("should handle invalid subscription parameters", () => {
    > 580 |       const result = liveDataManager.addSubscription("", "", "", "");
          |                                      ^
      581 |
      582 |       expect(result).toBeDefined();
      583 |       expect(result.success).toBe(false);

      at Object.addSubscription (tests/integration/utils/liveDataManager.test.js:580:38)

  ● Live Data Manager Integration Tests › Error Handling › should return empty arrays for invalid user queries

    TypeError: Cannot read properties of undefined (reading 'getUserSubscriptions')

      586 |
      587 |     test("should return empty arrays for invalid user queries", () => {
    > 588 |       const subscriptions = liveDataManager.getUserSubscriptions("");
          |                                             ^
      589 |       expect(Array.isArray(subscriptions)).toBe(true);
      590 |       expect(subscriptions.length).toBe(0);
      591 |     });

      at Object.getUserSubscriptions (tests/integration/utils/liveDataManager.test.js:588:45)

  ● Live Data Manager Integration Tests › Error Handling › should handle tracking for non-existent providers

    TypeError: Cannot read properties of undefined (reading 'trackLatency')

      592 |
      593 |     test("should handle tracking for non-existent providers", () => {
    > 594 |       const latencyResult = liveDataManager.trackLatency("nonexistent", 100);
          |                                             ^
      595 |       expect(latencyResult.success).toBe(false);
      596 |
      597 |       const errorResult = liveDataManager.trackError(

      at Object.trackLatency (tests/integration/utils/liveDataManager.test.js:594:45)

FAIL tests/unit/utils/logger.test.js
  ● Logger › Output Formatting › should format output for production environment

    ReferenceError: Logger is not defined

      177 |       // Reinitialize logger with production environment
      178 |       delete require.cache[require.resolve("../../../utils/logger")];
    > 179 |       const prodLogger = new Logger();
          |                          ^
      180 |
      181 |       const logEntry = {
      182 |         timestamp: "2023-01-01T00:00:00.000Z",

      at Object.<anonymous> (tests/unit/utils/logger.test.js:179:26)

  ● Logger › Error Logging › should not log error if level too low

    ReferenceError: Logger is not defined

      229 |     test("should not log error if level too low", () => {
      230 |       // Create a new logger instance instead of modifying the singleton
    > 231 |       const quietLogger = new Logger();
          |                           ^
      232 |       quietLogger.currentLevel = -1;
      233 |
      234 |       quietLogger.error("Should not log");

      at Object.<anonymous> (tests/unit/utils/logger.test.js:231:27)

  ● Logger › Debug Logging › should not log debug messages with default level

    ReferenceError: Logger is not defined

      287 |     test("should not log debug messages with default level", () => {
      288 |       // Create a logger with the actual default level (INFO = 2) by creating a new instance
    > 289 |       const defaultLogger = new Logger();
          |                             ^
      290 |       defaultLogger.currentLevel = 2; // INFO level explicitly
      291 |
      292 |       // Create fresh spy for this test to avoid interference

      at Object.<anonymous> (tests/unit/utils/logger.test.js:289:29)

FAIL tests/integration/services/cross-service-integration.test.js
  ● Cross-Service Integration › Portfolio → Market Data → Risk Analysis Integration › should integrate portfolio analysis with market data and risk engine

    TypeError: Cannot read properties of undefined (reading 'address')

      56 |       // Step 1: Get portfolio data
      57 |       const portfolioResponse = await request(app)
    > 58 |         .get("/api/portfolio/positions")
         |          ^
      59 |         .set("Authorization", authToken);
      60 |
      61 |       expect([200, 401, 500]).toContain(portfolioResponse.status);

      at Test.serverAddress (node_modules/supertest/lib/test.js:46:22)
      at new Test (node_modules/supertest/lib/test.js:34:14)
      at Object.obj.<computed> [as get] (node_modules/supertest/index.js:43:18)
      at Object.get (tests/integration/services/cross-service-integration.test.js:58:10)

  ● Cross-Service Integration › Portfolio → Market Data → Risk Analysis Integration › should integrate market data with technical analysis

    TypeError: Cannot read properties of undefined (reading 'address')

      83 |       // Step 1: Get market data
      84 |       const marketResponse = await request(app)
    > 85 |         .get("/api/market/data")
         |          ^
      86 |         .set("Authorization", authToken)
      87 |         .query({ symbols: "AAPL", timeframe: "1D" });
      88 |

      at Test.serverAddress (node_modules/supertest/lib/test.js:46:22)
      at new Test (node_modules/supertest/lib/test.js:34:14)
      at Object.obj.<computed> [as get] (node_modules/supertest/index.js:43:18)
      at Object.get (tests/integration/services/cross-service-integration.test.js:85:10)

  ● Cross-Service Integration › Authentication → Database → Service Integration › should maintain user context across database operations

    TypeError: Cannot read properties of undefined (reading 'address')

      113 |       // Test that user from auth middleware is used in database queries
      114 |       const response = await request(app)
    > 115 |         .get("/api/portfolio/summary")
          |          ^
      116 |         .set("Authorization", authToken);
      117 |
      118 |       expect([200, 401]).toContain(response.status);

      at Test.serverAddress (node_modules/supertest/lib/test.js:46:22)
      at new Test (node_modules/supertest/lib/test.js:34:14)
      at Object.obj.<computed> [as get] (node_modules/supertest/index.js:43:18)
      at Object.get (tests/integration/services/cross-service-integration.test.js:115:10)

  ● Cross-Service Integration › Authentication → Database → Service Integration › should handle database transactions across multiple services

    TypeError: Cannot read properties of undefined (reading 'address')

      135 |
      136 |       const response = await request(app)
    > 137 |         .post("/api/orders")
          |          ^
      138 |         .set("Authorization", authToken)
      139 |         .send(orderData);
      140 |

      at Test.serverAddress (node_modules/supertest/lib/test.js:46:22)
      at new Test (node_modules/supertest/lib/test.js:34:14)
      at Object.obj.<computed> [as post] (node_modules/supertest/index.js:43:18)
      at Object.post (tests/integration/services/cross-service-integration.test.js:137:10)

  ● Cross-Service Integration › Real-Time Data → WebSocket → Client Integration › should coordinate real-time data with WebSocket notifications

    TypeError: Cannot read properties of undefined (reading 'address')

      156 |       // Step 1: Subscribe to market data updates
      157 |       const subscriptionResponse = await request(app)
    > 158 |         .post("/api/websocket/subscribe")
          |          ^
      159 |         .set("Authorization", authToken)
      160 |         .send({
      161 |           channels: ["quotes"],

      at Test.serverAddress (node_modules/supertest/lib/test.js:46:22)
      at new Test (node_modules/supertest/lib/test.js:34:14)
      at Object.obj.<computed> [as post] (node_modules/supertest/index.js:43:18)
      at Object.post (tests/integration/services/cross-service-integration.test.js:158:10)

  ● Cross-Service Integration › Real-Time Data → WebSocket → Client Integration › should integrate streaming data with alert system

    TypeError: Cannot read properties of undefined (reading 'address')

      174 |       // Step 1: Create an alert
      175 |       const alertResponse = await request(app)
    > 176 |         .post("/api/alerts")
          |          ^
      177 |         .set("Authorization", authToken)
      178 |         .send({
      179 |           symbol: "AAPL",

      at Test.serverAddress (node_modules/supertest/lib/test.js:46:22)
      at new Test (node_modules/supertest/lib/test.js:34:14)
      at Object.obj.<computed> [as post] (node_modules/supertest/index.js:43:18)
      at Object.post (tests/integration/services/cross-service-integration.test.js:176:10)

  ● Cross-Service Integration › External Service Integration › should integrate with Alpaca API service

    TypeError: Cannot read properties of undefined (reading 'address')

      200 |       // Test external service integration
      201 |       const response = await request(app)
    > 202 |         .get("/api/market/live")
          |          ^
      203 |         .set("Authorization", authToken)
      204 |         .query({ symbols: "AAPL" });
      205 |

      at Test.serverAddress (node_modules/supertest/lib/test.js:46:22)
      at new Test (node_modules/supertest/lib/test.js:34:14)
      at Object.obj.<computed> [as get] (node_modules/supertest/index.js:43:18)
      at Object.get (tests/integration/services/cross-service-integration.test.js:202:10)

  ● Cross-Service Integration › External Service Integration › should handle external service timeouts

    TypeError: Cannot read properties of undefined (reading 'address')

      216 |       // Test timeout handling in service integration
      217 |       const response = await request(app)
    > 218 |         .get("/api/market/historical")
          |          ^
      219 |         .set("Authorization", authToken)
      220 |         .query({
      221 |           symbols: "AAPL",

      at Test.serverAddress (node_modules/supertest/lib/test.js:46:22)
      at new Test (node_modules/supertest/lib/test.js:34:14)
      at Object.obj.<computed> [as get] (node_modules/supertest/index.js:43:18)
      at Object.get (tests/integration/services/cross-service-integration.test.js:218:10)

  ● Cross-Service Integration › Database → Cache → Service Integration › should coordinate database queries with caching layer

    TypeError: Cannot read properties of undefined (reading 'address')

      235 |       // First request - should hit database
      236 |       const firstResponse = await request(app)
    > 237 |         .get("/api/market/data")
          |          ^
      238 |         .set("Authorization", authToken)
      239 |         .query({ symbols: "AAPL" });
      240 |

      at Test.serverAddress (node_modules/supertest/lib/test.js:46:22)
      at new Test (node_modules/supertest/lib/test.js:34:14)
      at Object.obj.<computed> [as get] (node_modules/supertest/index.js:43:18)
      at Object.get (tests/integration/services/cross-service-integration.test.js:237:10)

  ● Cross-Service Integration › Error Recovery Integration › should handle service failure cascades gracefully

    TypeError: Cannot read properties of undefined (reading 'address')

      262 |       // Test what happens when one service in a chain fails
      263 |       const response = await request(app)
    > 264 |         .post("/api/portfolio/rebalance")
          |          ^
      265 |         .set("Authorization", authToken)
      266 |         .send({
      267 |           target_allocation: {

      at Test.serverAddress (node_modules/supertest/lib/test.js:46:22)
      at new Test (node_modules/supertest/lib/test.js:34:14)
      at Object.obj.<computed> [as post] (node_modules/supertest/index.js:43:18)
      at Object.post (tests/integration/services/cross-service-integration.test.js:264:10)

FAIL tests/integration/database/cross-service-transaction.integration.test.js
  ● Cross-Service Transaction Integration › Service Coordination Patterns › should coordinate portfolio and order service transactions

    TypeError: Cannot read properties of undefined (reading 'id')

      115 |         );
      116 |
    > 117 |         const orderId = orderResult.rows[0].id;
          |                                             ^
      118 |
      119 |         // Step 2: Portfolio service - Check position availability
      120 |         const positionResult = await client.query(

      at id (tests/integration/database/cross-service-transaction.integration.test.js:117:45)
      at Object.<anonymous> (tests/integration/database/cross-service-transaction.integration.test.js:101:34)

  ● Cross-Service Transaction Integration › Service Coordination Patterns › should handle cross-service transaction failure and rollback

    TypeError: Cannot read properties of undefined (reading 'balance')

      323 |           "SELECT balance FROM account_balance WHERE user_id = 1"
      324 |         );
    > 325 |         expect(parseFloat(balanceResult.rows[0].balance)).toBe(15000.0);
          |                                                 ^
      326 |
      327 |         // Market data should still exist
      328 |         const marketResult = await client.query(

      at balance (tests/integration/database/cross-service-transaction.integration.test.js:325:49)
      at Object.<anonymous> (tests/integration/database/cross-service-transaction.integration.test.js:320:7)

  ● Cross-Service Transaction Integration › Service Dependency Management › should handle service dependency chain transactions

    TypeError: Cannot read properties of undefined (reading 'trading_enabled')

      410 |         );
      411 |
    > 412 |         if (!userResult.rows[0].trading_enabled) {
          |                                 ^
      413 |           throw new Error("Trading not enabled for user");
      414 |         }
      415 |

      at trading_enabled (tests/integration/database/cross-service-transaction.integration.test.js:412:33)
      at Object.<anonymous> (tests/integration/database/cross-service-transaction.integration.test.js:400:42)

  ● Cross-Service Transaction Integration › Service Dependency Management › should handle circular dependency resolution

    TypeError: Cannot read properties of undefined (reading 'id')

      568 |           RETURNING id
      569 |         `);
    > 570 |         const serviceAId = serviceAResult.rows[0].id;
          |                                                   ^
      571 |
      572 |         const serviceBResult = await client.query(`
      573 |           INSERT INTO service_b (value, status) 

      at id (tests/integration/database/cross-service-transaction.integration.test.js:570:51)
      at Object.<anonymous> (tests/integration/database/cross-service-transaction.integration.test.js:553:44)

  ● Cross-Service Transaction Integration › Distributed Transaction Patterns › should implement saga pattern for long-running transactions

    TypeError: Cannot read properties of undefined (reading 'id')

      805 |           await client.query(
      806 |             "UPDATE payment_authorizations SET status = 'authorized' WHERE id = $1",
    > 807 |             [paymentResult.rows[0].id]
          |                                    ^
      808 |           );
      809 |           await client.query(
      810 |             "UPDATE saga_steps SET status = 'completed', completed_at = NOW() WHERE saga_id = $1 AND step_number = 3",

      at id (tests/integration/database/cross-service-transaction.integration.test.js:807:36)
      at Object.<anonymous> (tests/integration/database/cross-service-transaction.integration.test.js:723:29)

FAIL tests/unit/utils/tradingModeHelper.test.js
  ● Trading Mode Helper Unit Tests › getUserTradingMode › should return paper mode by default

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › getUserTradingMode › should return paper mode when trading_preferences.paper_trading_mode is true

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › getUserTradingMode › should return live mode when trading_preferences.paper_trading_mode is false

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › getUserTradingMode › should default to paper mode on database error

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › addTradingModeContext › should add paper trading context

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › addTradingModeContext › should add live trading context

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › validateTradingOperation › should allow all operations in paper mode

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › validateTradingOperation › should require API keys for live trading

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › validateTradingOperation › should allow live trading with valid API keys

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › validateTradingOperation › should block high-value trades without confirmation

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › validateTradingOperation › should allow high-value trades with confirmation

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › getTradingModeTable › should return paper table name for paper mode

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › getTradingModeTable › should return live table name for live mode

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › executeWithTradingMode › should execute query with paper table

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › executeWithTradingMode › should fallback to base table when mode-specific table fails

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › formatPortfolioWithMode › should format portfolio data with paper trading context

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › formatPortfolioWithMode › should format portfolio data with live trading context

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › checkLiveTradingRequirements › should return true when production API keys exist

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › checkLiveTradingRequirements › should return false when only sandbox API keys exist

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › checkLiveTradingRequirements › should return false when no API keys exist

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

  ● Trading Mode Helper Unit Tests › checkLiveTradingRequirements › should return false on database error

    ReferenceError: query is not defined

      15 |   beforeEach(() => {
      16 |     jest.clearAllMocks();
    > 17 |     mockQuery = query;
         |     ^
      18 |   });
      19 |
      20 |   describe("getUserTradingMode", () => {

      at Object.mockQuery (tests/unit/utils/tradingModeHelper.test.js:17:5)

FAIL tests/integration/database/rollback-scenarios.integration.test.js
  ● Database Rollback Scenarios Integration › Automatic Rollback on Error › should automatically rollback on SQL errors

    TypeError: Cannot read properties of undefined (reading 'count')

      66 |           "SELECT COUNT(*) as count FROM test_rollback_error"
      67 |         );
    > 68 |         return parseInt(result.rows[0].count);
         |                                        ^
      69 |       });
      70 |       expect(initialCount).toBe(1);
      71 |

      at count (tests/integration/database/rollback-scenarios.integration.test.js:68:40)
      at Object.<anonymous> (tests/integration/database/rollback-scenarios.integration.test.js:64:28)

  ● Database Rollback Scenarios Integration › Automatic Rollback on Error › should rollback on application errors within transaction

    TypeError: Cannot read properties of undefined (reading 'count')

      142 |           "SELECT COUNT(*) as count FROM test_app_error_rollback"
      143 |         );
    > 144 |         return parseInt(result.rows[0].count);
          |                                        ^
      145 |       });
      146 |       expect(count).toBe(0);
      147 |     });

      at count (tests/integration/database/rollback-scenarios.integration.test.js:144:40)
      at Object.<anonymous> (tests/integration/database/rollback-scenarios.integration.test.js:140:21)

  ● Database Rollback Scenarios Integration › Explicit Rollback Scenarios › should handle manual rollback calls

    ReferenceError: Pool is not defined

      194 |
      195 |       // Real database testing code
    > 196 |       const pool = new Pool({
          |                    ^
      197 |         connectionString:
      198 |           process.env.DATABASE_URL ||
      199 |           `postgresql://${process.env.DB_USER || "postgres"}:${process.env.DB_PASSWORD || "password"}@${process.env.DB_HOST || "localhost"}:${process.env.DB_PORT || 5432}/${process.env.DB_NAME || "stocks"}`,

      at Object.<anonymous> (tests/integration/database/rollback-scenarios.integration.test.js:196:20)

  ● Database Rollback Scenarios Integration › Explicit Rollback Scenarios › should handle nested transaction scenarios

    TypeError: Cannot read properties of undefined (reading 'count')

      276 |           "SELECT COUNT(*) as count FROM test_nested_rollback"
      277 |         );
    > 278 |         return parseInt(result.rows[0].count);
          |                                        ^
      279 |       });
      280 |       expect(count).toBe(0);
      281 |     });

      at count (tests/integration/database/rollback-scenarios.integration.test.js:278:40)
      at Object.<anonymous> (tests/integration/database/rollback-scenarios.integration.test.js:274:21)

  ● Database Rollback Scenarios Integration › Rollback with Complex Data Modifications › should rollback complex multi-table operations

    expect(received).rejects.toThrow(expected)

    Expected substring: "Payment processing failed"
    Received message:   "Cannot read properties of undefined (reading 'id')"

          324 |           "INSERT INTO test_orders (user_id, total, status) VALUES (1, 150.00, 'pending') RETURNING id"
          325 |         );
        > 326 |         const orderId = orderResult.rows[0].id;
              |                                             ^
          327 |
          328 |         // Add order items
          329 |         await client.query(

      at id (tests/integration/database/rollback-scenarios.integration.test.js:326:45)
      at Object.<anonymous> (tests/integration/database/rollback-scenarios.integration.test.js:350:7)
      at Object.toThrow (node_modules/expect/build/index.js:218:22)
      at Object.toThrow (tests/integration/database/rollback-scenarios.integration.test.js:350:54)

  ● Database Rollback Scenarios Integration › Rollback with Complex Data Modifications › should handle rollback with data type conversions and constraints

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: undefined

      412 |       });
      413 |
    > 414 |       await expect(complexDataTransaction).rejects.toThrow();
          |             ^
      415 |
      416 |       // Verify complete rollback
      417 |       const count = await transaction(async (client) => {

      at expect (node_modules/expect/build/index.js:113:15)
      at Object.expect (tests/integration/database/rollback-scenarios.integration.test.js:414:13)

  ● Database Rollback Scenarios Integration › Rollback Recovery and Cleanup › should properly clean up resources after rollback

    expect(received).rejects.toThrow(expected)

    Expected substring: "Finalization failed"
    Received message:   "Cannot read properties of undefined (reading 'id')"

          451 |           );
          452 |
        > 453 |           tempResources.push(result.rows[0].id);
              |                                             ^
          454 |         }
          455 |
          456 |         // Simulate processing

      at id (tests/integration/database/rollback-scenarios.integration.test.js:453:45)
      at Object.<anonymous> (tests/integration/database/rollback-scenarios.integration.test.js:468:7)
      at Object.toThrow (node_modules/expect/build/index.js:218:22)
      at Object.toThrow (tests/integration/database/rollback-scenarios.integration.test.js:468:49)

  ● Database Rollback Scenarios Integration › Rollback Recovery and Cleanup › should maintain database connection health after rollbacks

    TypeError: Cannot read properties of undefined (reading 'health_check')

      510 |       const healthCheck = await transaction(async (client) => {
      511 |         const result = await client.query("SELECT 1 as health_check");
    > 512 |         return result.rows[0].health_check;
          |                               ^
      513 |       });
      514 |       expect(healthCheck).toBe(1);
      515 |     });

      at health_check (tests/integration/database/rollback-scenarios.integration.test.js:512:31)
      at Object.<anonymous> (tests/integration/database/rollback-scenarios.integration.test.js:510:27)

  ● Database Rollback Scenarios Integration › Rollback with Real-World Scenarios › should handle portfolio transaction rollback

    TypeError: Cannot read properties of undefined (reading 'quantity')

      592 |           "SELECT quantity FROM test_portfolio_positions WHERE user_id = 1 AND symbol = 'AAPL'"
      593 |         );
    > 594 |         expect(parseFloat(positionResult.rows[0].quantity)).toBe(100);
          |                                                  ^
      595 |
      596 |         // No transaction record should exist
      597 |         const transactionCount = await client.query(

      at quantity (tests/integration/database/rollback-scenarios.integration.test.js:594:50)
      at Object.<anonymous> (tests/integration/database/rollback-scenarios.integration.test.js:589:7)

FAIL tests/unit/services/alpacaIntegration.test.js
  ● Alpaca Integration Service Unit Tests › Account Information › should retrieve account information

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Account Information › should handle account information errors

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Account Information › should handle missing API keys

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Portfolio Positions › should retrieve current positions

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Portfolio Positions › should handle empty positions

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Portfolio Positions › should handle positions API errors

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Order Management › should retrieve order history

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Order Management › should place market buy order

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Order Management › should place limit sell order

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Order Management › should handle order placement errors

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Order Management › should validate order parameters

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Market Data › should retrieve real-time quotes

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Market Data › should handle market data API errors

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Market Data › should handle empty symbol list

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Portfolio History › should retrieve portfolio performance history

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Portfolio History › should handle portfolio history errors

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Database Integration › should store portfolio data in database

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Database Integration › should handle database insertion errors

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Error Handling › should handle network timeouts

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Error Handling › should handle authentication failures

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Error Handling › should handle API rate limiting

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

  ● Alpaca Integration Service Unit Tests › Error Handling › should handle malformed API responses

    ReferenceError: getDecryptedApiKey is not defined

      29 |   beforeEach(() => {
      30 |     jest.clearAllMocks();
    > 31 |     getDecryptedApiKey.mockResolvedValue(mockApiKeys);
         |     ^
      32 |   });
      33 |
      34 |   describe("Account Information", () => {

      at Object.getDecryptedApiKey (tests/unit/services/alpacaIntegration.test.js:31:5)

FAIL tests/integration/routes/backtest.integration.test.js


  ● Test suite failed to run

    Cannot add a hook after tests have started running. Hooks must be defined synchronously.

      30 | describe("Backtest Routes", () => {
      31 |   beforeAll(async () => {
    > 32 |     beforeEach(() => {
         |     ^
      33 |     jest.clearAllMocks();
      34 |     query.mockImplementation((sql, params) => {
      35 |       // Default: return empty rows for all queries

      at eventHandler (node_modules/jest-circus/build/eventHandler.js:104:11)
      at Object.beforeEach (tests/integration/routes/backtest.integration.test.js:32:5)


Test Suites: 75 failed, 1 skipped, 69 passed, 144 of 145 total
Tests:       814 failed, 42 skipped, 2504 passed, 3360 total
Snapshots:   0 total
Time:        54.207 s
Ran all test suites.
Force exiting Jest: Have you considered using `--detectOpenHandles` to detect async operations that kept running after all tests finished?
