b65e6579452d13ecfb1b075113019ef0
/* istanbul ignore next */
function cov_auk92v9qg() {
  var path = "/home/stocks/algo/webapp/lambda/utils/database.js";
  var hash = "455eb7ff664ead02f646944dfd2ec9b0373b76f0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/stocks/algo/webapp/lambda/utils/database.js",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 27
        }
      },
      "1": {
        start: {
          line: 5,
          column: 24
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "2": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 8,
          column: 30
        }
      },
      "3": {
        start: {
          line: 9,
          column: 56
        },
        end: {
          line: 9,
          column: 98
        }
      },
      "4": {
        start: {
          line: 10,
          column: 44
        },
        end: {
          line: 10,
          column: 71
        }
      },
      "5": {
        start: {
          line: 11,
          column: 24
        },
        end: {
          line: 11,
          column: 52
        }
      },
      "6": {
        start: {
          line: 14,
          column: 11
        },
        end: {
          line: 14,
          column: 15
        }
      },
      "7": {
        start: {
          line: 15,
          column: 20
        },
        end: {
          line: 15,
          column: 25
        }
      },
      "8": {
        start: {
          line: 16,
          column: 15
        },
        end: {
          line: 16,
          column: 19
        }
      },
      "9": {
        start: {
          line: 19,
          column: 24
        },
        end: {
          line: 24,
          column: 2
        }
      },
      "10": {
        start: {
          line: 27,
          column: 23
        },
        end: {
          line: 29,
          column: 2
        }
      },
      "11": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "12": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 54
        }
      },
      "13": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 24
        }
      },
      "14": {
        start: {
          line: 40,
          column: 24
        },
        end: {
          line: 40,
          column: 34
        }
      },
      "15": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 179,
          column: 5
        }
      },
      "16": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "17": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 83
        }
      },
      "18": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 56,
          column: 14
        }
      },
      "19": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 88
        }
      },
      "20": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 79
        }
      },
      "21": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 59
        }
      },
      "22": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 74
        }
      },
      "23": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 64
        }
      },
      "24": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 56
        }
      },
      "25": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 28
        }
      },
      "26": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 106,
          column: 9
        }
      },
      "27": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 84
        }
      },
      "28": {
        start: {
          line: 72,
          column: 30
        },
        end: {
          line: 72,
          column: 55
        }
      },
      "29": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 82
        }
      },
      "30": {
        start: {
          line: 76,
          column: 45
        },
        end: {
          line: 76,
          column: 82
        }
      },
      "31": {
        start: {
          line: 77,
          column: 31
        },
        end: {
          line: 77,
          column: 61
        }
      },
      "32": {
        start: {
          line: 79,
          column: 30
        },
        end: {
          line: 79,
          column: 72
        }
      },
      "33": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 82,
          column: 13
        }
      },
      "34": {
        start: {
          line: 81,
          column: 16
        },
        end: {
          line: 81,
          column: 99
        }
      },
      "35": {
        start: {
          line: 84,
          column: 27
        },
        end: {
          line: 84,
          column: 43
        }
      },
      "36": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 96,
          column: 14
        }
      },
      "37": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 82
        }
      },
      "38": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 79
        }
      },
      "39": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 59
        }
      },
      "40": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 74
        }
      },
      "41": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 64
        }
      },
      "42": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 56
        }
      },
      "43": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 28
        }
      },
      "44": {
        start: {
          line: 109,
          column: 26
        },
        end: {
          line: 109,
          column: 51
        }
      },
      "45": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "46": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 281
        }
      },
      "47": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 84
        }
      },
      "48": {
        start: {
          line: 115,
          column: 28
        },
        end: {
          line: 115,
          column: 38
        }
      },
      "49": {
        start: {
          line: 118,
          column: 41
        },
        end: {
          line: 118,
          column: 78
        }
      },
      "50": {
        start: {
          line: 119,
          column: 27
        },
        end: {
          line: 119,
          column: 57
        }
      },
      "51": {
        start: {
          line: 121,
          column: 26
        },
        end: {
          line: 121,
          column: 68
        }
      },
      "52": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 118
        }
      },
      "53": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 126,
          column: 9
        }
      },
      "54": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 84
        }
      },
      "55": {
        start: {
          line: 128,
          column: 23
        },
        end: {
          line: 128,
          column: 39
        }
      },
      "56": {
        start: {
          line: 131,
          column: 31
        },
        end: {
          line: 131,
          column: 73
        }
      },
      "57": {
        start: {
          line: 132,
          column: 30
        },
        end: {
          line: 132,
          column: 76
        }
      },
      "58": {
        start: {
          line: 132,
          column: 61
        },
        end: {
          line: 132,
          column: 75
        }
      },
      "59": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "60": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 80
        }
      },
      "61": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 70
        }
      },
      "62": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 107
        }
      },
      "63": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 150,
          column: 10
        }
      },
      "64": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 82
        }
      },
      "65": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 153,
          column: 85
        }
      },
      "66": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 55
        }
      },
      "67": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 155,
          column: 70
        }
      },
      "68": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 60
        }
      },
      "69": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 52
        }
      },
      "70": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 24
        }
      },
      "71": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 73
        }
      },
      "72": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 165,
          column: 11
        }
      },
      "73": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 168,
          column: 67
        }
      },
      "74": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 169,
          column: 84
        }
      },
      "75": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 176,
          column: 11
        }
      },
      "76": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 20
        }
      },
      "77": {
        start: {
          line: 187,
          column: 21
        },
        end: {
          line: 187,
          column: 59
        }
      },
      "78": {
        start: {
          line: 188,
          column: 20
        },
        end: {
          line: 188,
          column: 57
        }
      },
      "79": {
        start: {
          line: 189,
          column: 25
        },
        end: {
          line: 189,
          column: 49
        }
      },
      "80": {
        start: {
          line: 192,
          column: 30
        },
        end: {
          line: 192,
          column: 86
        }
      },
      "81": {
        start: {
          line: 193,
          column: 26
        },
        end: {
          line: 193,
          column: 79
        }
      },
      "82": {
        start: {
          line: 197,
          column: 4
        },
        end: {
          line: 231,
          column: 5
        }
      },
      "83": {
        start: {
          line: 200,
          column: 32
        },
        end: {
          line: 200,
          column: 62
        }
      },
      "84": {
        start: {
          line: 201,
          column: 31
        },
        end: {
          line: 201,
          column: 66
        }
      },
      "85": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 209,
          column: 10
        }
      },
      "86": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 211,
          column: 141
        }
      },
      "87": {
        start: {
          line: 215,
          column: 32
        },
        end: {
          line: 217,
          column: 13
        }
      },
      "88": {
        start: {
          line: 219,
          column: 31
        },
        end: {
          line: 221,
          column: 13
        }
      },
      "89": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 228,
          column: 10
        }
      },
      "90": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 230,
          column: 170
        }
      },
      "91": {
        start: {
          line: 234,
          column: 4
        },
        end: {
          line: 236,
          column: 5
        }
      },
      "92": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 235,
          column: 59
        }
      },
      "93": {
        start: {
          line: 237,
          column: 4
        },
        end: {
          line: 239,
          column: 5
        }
      },
      "94": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 238,
          column: 59
        }
      },
      "95": {
        start: {
          line: 242,
          column: 4
        },
        end: {
          line: 242,
          column: 49
        }
      },
      "96": {
        start: {
          line: 243,
          column: 4
        },
        end: {
          line: 243,
          column: 62
        }
      },
      "97": {
        start: {
          line: 244,
          column: 4
        },
        end: {
          line: 244,
          column: 51
        }
      },
      "98": {
        start: {
          line: 246,
          column: 4
        },
        end: {
          line: 246,
          column: 93
        }
      },
      "99": {
        start: {
          line: 248,
          column: 4
        },
        end: {
          line: 248,
          column: 22
        }
      },
      "100": {
        start: {
          line: 255,
          column: 4
        },
        end: {
          line: 258,
          column: 5
        }
      },
      "101": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 256,
          column: 79
        }
      },
      "102": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 257,
          column: 20
        }
      },
      "103": {
        start: {
          line: 260,
          column: 22
        },
        end: {
          line: 260,
          column: 32
        }
      },
      "104": {
        start: {
          line: 261,
          column: 4
        },
        end: {
          line: 391,
          column: 5
        }
      },
      "105": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 262,
          column: 67
        }
      },
      "106": {
        start: {
          line: 264,
          column: 28
        },
        end: {
          line: 264,
          column: 38
        }
      },
      "107": {
        start: {
          line: 265,
          column: 23
        },
        end: {
          line: 265,
          column: 42
        }
      },
      "108": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 266,
          column: 84
        }
      },
      "109": {
        start: {
          line: 269,
          column: 34
        },
        end: {
          line: 269,
          column: 62
        }
      },
      "110": {
        start: {
          line: 271,
          column: 27
        },
        end: {
          line: 295,
          column: 9
        }
      },
      "111": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 303,
          column: 11
        }
      },
      "112": {
        start: {
          line: 305,
          column: 26
        },
        end: {
          line: 305,
          column: 36
        }
      },
      "113": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 306,
          column: 36
        }
      },
      "114": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 307,
          column: 69
        }
      },
      "115": {
        start: {
          line: 310,
          column: 8
        },
        end: {
          line: 312,
          column: 11
        }
      },
      "116": {
        start: {
          line: 311,
          column: 12
        },
        end: {
          line: 311,
          column: 57
        }
      },
      "117": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 316,
          column: 11
        }
      },
      "118": {
        start: {
          line: 315,
          column: 12
        },
        end: {
          line: 315,
          column: 62
        }
      },
      "119": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 320,
          column: 11
        }
      },
      "120": {
        start: {
          line: 319,
          column: 12
        },
        end: {
          line: 319,
          column: 62
        }
      },
      "121": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 324,
          column: 11
        }
      },
      "122": {
        start: {
          line: 323,
          column: 12
        },
        end: {
          line: 323,
          column: 57
        }
      },
      "123": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 330,
          column: 11
        }
      },
      "124": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 328,
          column: 62
        }
      },
      "125": {
        start: {
          line: 329,
          column: 12
        },
        end: {
          line: 329,
          column: 41
        }
      },
      "126": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 335,
          column: 11
        }
      },
      "127": {
        start: {
          line: 333,
          column: 12
        },
        end: {
          line: 333,
          column: 60
        }
      },
      "128": {
        start: {
          line: 334,
          column: 12
        },
        end: {
          line: 334,
          column: 41
        }
      },
      "129": {
        start: {
          line: 338,
          column: 8
        },
        end: {
          line: 338,
          column: 74
        }
      },
      "130": {
        start: {
          line: 340,
          column: 31
        },
        end: {
          line: 359,
          column: 38
        }
      },
      "131": {
        start: {
          line: 341,
          column: 30
        },
        end: {
          line: 341,
          column: 40
        }
      },
      "132": {
        start: {
          line: 343,
          column: 27
        },
        end: {
          line: 348,
          column: 14
        }
      },
      "133": {
        start: {
          line: 346,
          column: 20
        },
        end: {
          line: 346,
          column: 106
        }
      },
      "134": {
        start: {
          line: 346,
          column: 37
        },
        end: {
          line: 346,
          column: 98
        }
      },
      "135": {
        start: {
          line: 350,
          column: 12
        },
        end: {
          line: 350,
          column: 102
        }
      },
      "136": {
        start: {
          line: 353,
          column: 31
        },
        end: {
          line: 353,
          column: 41
        }
      },
      "137": {
        start: {
          line: 354,
          column: 12
        },
        end: {
          line: 354,
          column: 51
        }
      },
      "138": {
        start: {
          line: 355,
          column: 12
        },
        end: {
          line: 355,
          column: 82
        }
      },
      "139": {
        start: {
          line: 357,
          column: 12
        },
        end: {
          line: 357,
          column: 29
        }
      },
      "140": {
        start: {
          line: 358,
          column: 12
        },
        end: {
          line: 358,
          column: 73
        }
      },
      "141": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 363,
          column: 9
        }
      },
      "142": {
        start: {
          line: 362,
          column: 12
        },
        end: {
          line: 362,
          column: 88
        }
      },
      "143": {
        start: {
          line: 365,
          column: 8
        },
        end: {
          line: 365,
          column: 113
        }
      },
      "144": {
        start: {
          line: 367,
          column: 30
        },
        end: {
          line: 367,
          column: 52
        }
      },
      "145": {
        start: {
          line: 368,
          column: 8
        },
        end: {
          line: 368,
          column: 74
        }
      },
      "146": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 370,
          column: 29
        }
      },
      "147": {
        start: {
          line: 373,
          column: 8
        },
        end: {
          line: 373,
          column: 30
        }
      },
      "148": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 375,
          column: 20
        }
      },
      "149": {
        start: {
          line: 377,
          column: 30
        },
        end: {
          line: 377,
          column: 52
        }
      },
      "150": {
        start: {
          line: 378,
          column: 8
        },
        end: {
          line: 383,
          column: 11
        }
      },
      "151": {
        start: {
          line: 386,
          column: 8
        },
        end: {
          line: 386,
          column: 20
        }
      },
      "152": {
        start: {
          line: 387,
          column: 8
        },
        end: {
          line: 387,
          column: 30
        }
      },
      "153": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 388,
          column: 24
        }
      },
      "154": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 390,
          column: 20
        }
      },
      "155": {
        start: {
          line: 398,
          column: 4
        },
        end: {
          line: 398,
          column: 22
        }
      },
      "156": {
        start: {
          line: 398,
          column: 15
        },
        end: {
          line: 398,
          column: 22
        }
      },
      "157": {
        start: {
          line: 400,
          column: 4
        },
        end: {
          line: 400,
          column: 78
        }
      },
      "158": {
        start: {
          line: 403,
          column: 4
        },
        end: {
          line: 442,
          column: 5
        }
      },
      "159": {
        start: {
          line: 404,
          column: 32
        },
        end: {
          line: 434,
          column: 17
        }
      },
      "160": {
        start: {
          line: 405,
          column: 12
        },
        end: {
          line: 405,
          column: 48
        }
      },
      "161": {
        start: {
          line: 405,
          column: 41
        },
        end: {
          line: 405,
          column: 48
        }
      },
      "162": {
        start: {
          line: 407,
          column: 27
        },
        end: {
          line: 407,
          column: 42
        }
      },
      "163": {
        start: {
          line: 408,
          column: 49
        },
        end: {
          line: 408,
          column: 55
        }
      },
      "164": {
        start: {
          line: 411,
          column: 12
        },
        end: {
          line: 417,
          column: 13
        }
      },
      "165": {
        start: {
          line: 412,
          column: 16
        },
        end: {
          line: 412,
          column: 164
        }
      },
      "166": {
        start: {
          line: 414,
          column: 16
        },
        end: {
          line: 416,
          column: 17
        }
      },
      "167": {
        start: {
          line: 415,
          column: 20
        },
        end: {
          line: 415,
          column: 64
        }
      },
      "168": {
        start: {
          line: 420,
          column: 12
        },
        end: {
          line: 422,
          column: 13
        }
      },
      "169": {
        start: {
          line: 421,
          column: 16
        },
        end: {
          line: 421,
          column: 117
        }
      },
      "170": {
        start: {
          line: 425,
          column: 12
        },
        end: {
          line: 427,
          column: 13
        }
      },
      "171": {
        start: {
          line: 426,
          column: 16
        },
        end: {
          line: 426,
          column: 103
        }
      },
      "172": {
        start: {
          line: 430,
          column: 12
        },
        end: {
          line: 432,
          column: 13
        }
      },
      "173": {
        start: {
          line: 431,
          column: 16
        },
        end: {
          line: 431,
          column: 103
        }
      },
      "174": {
        start: {
          line: 436,
          column: 8
        },
        end: {
          line: 436,
          column: 68
        }
      },
      "175": {
        start: {
          line: 439,
          column: 8
        },
        end: {
          line: 439,
          column: 65
        }
      },
      "176": {
        start: {
          line: 439,
          column: 33
        },
        end: {
          line: 439,
          column: 63
        }
      },
      "177": {
        start: {
          line: 440,
          column: 8
        },
        end: {
          line: 440,
          column: 67
        }
      },
      "178": {
        start: {
          line: 440,
          column: 35
        },
        end: {
          line: 440,
          column: 65
        }
      },
      "179": {
        start: {
          line: 441,
          column: 8
        },
        end: {
          line: 441,
          column: 68
        }
      },
      "180": {
        start: {
          line: 441,
          column: 36
        },
        end: {
          line: 441,
          column: 66
        }
      },
      "181": {
        start: {
          line: 449,
          column: 4
        },
        end: {
          line: 451,
          column: 5
        }
      },
      "182": {
        start: {
          line: 450,
          column: 8
        },
        end: {
          line: 450,
          column: 86
        }
      },
      "183": {
        start: {
          line: 452,
          column: 4
        },
        end: {
          line: 452,
          column: 16
        }
      },
      "184": {
        start: {
          line: 456,
          column: 18
        },
        end: {
          line: 474,
          column: 1
        }
      },
      "185": {
        start: {
          line: 480,
          column: 16
        },
        end: {
          line: 480,
          column: 26
        }
      },
      "186": {
        start: {
          line: 482,
          column: 4
        },
        end: {
          line: 508,
          column: 5
        }
      },
      "187": {
        start: {
          line: 484,
          column: 12
        },
        end: {
          line: 484,
          column: 39
        }
      },
      "188": {
        start: {
          line: 485,
          column: 12
        },
        end: {
          line: 485,
          column: 46
        }
      },
      "189": {
        start: {
          line: 488,
          column: 12
        },
        end: {
          line: 488,
          column: 71
        }
      },
      "190": {
        start: {
          line: 489,
          column: 12
        },
        end: {
          line: 489,
          column: 106
        }
      },
      "191": {
        start: {
          line: 492,
          column: 12
        },
        end: {
          line: 494,
          column: 13
        }
      },
      "192": {
        start: {
          line: 493,
          column: 16
        },
        end: {
          line: 493,
          column: 62
        }
      },
      "193": {
        start: {
          line: 495,
          column: 12
        },
        end: {
          line: 495,
          column: 18
        }
      },
      "194": {
        start: {
          line: 498,
          column: 12
        },
        end: {
          line: 498,
          column: 39
        }
      },
      "195": {
        start: {
          line: 501,
          column: 12
        },
        end: {
          line: 501,
          column: 71
        }
      },
      "196": {
        start: {
          line: 502,
          column: 12
        },
        end: {
          line: 502,
          column: 106
        }
      },
      "197": {
        start: {
          line: 503,
          column: 12
        },
        end: {
          line: 503,
          column: 18
        }
      },
      "198": {
        start: {
          line: 506,
          column: 12
        },
        end: {
          line: 506,
          column: 43
        }
      },
      "199": {
        start: {
          line: 507,
          column: 12
        },
        end: {
          line: 507,
          column: 18
        }
      },
      "200": {
        start: {
          line: 511,
          column: 4
        },
        end: {
          line: 514,
          column: 5
        }
      },
      "201": {
        start: {
          line: 512,
          column: 8
        },
        end: {
          line: 512,
          column: 42
        }
      },
      "202": {
        start: {
          line: 513,
          column: 8
        },
        end: {
          line: 513,
          column: 69
        }
      },
      "203": {
        start: {
          line: 521,
          column: 4
        },
        end: {
          line: 523,
          column: 5
        }
      },
      "204": {
        start: {
          line: 522,
          column: 8
        },
        end: {
          line: 522,
          column: 15
        }
      },
      "205": {
        start: {
          line: 525,
          column: 16
        },
        end: {
          line: 525,
          column: 26
        }
      },
      "206": {
        start: {
          line: 526,
          column: 27
        },
        end: {
          line: 526,
          column: 39
        }
      },
      "207": {
        start: {
          line: 527,
          column: 27
        },
        end: {
          line: 527,
          column: 91
        }
      },
      "208": {
        start: {
          line: 527,
          column: 69
        },
        end: {
          line: 527,
          column: 90
        }
      },
      "209": {
        start: {
          line: 528,
          column: 27
        },
        end: {
          line: 528,
          column: 91
        }
      },
      "210": {
        start: {
          line: 528,
          column: 69
        },
        end: {
          line: 528,
          column: 90
        }
      },
      "211": {
        start: {
          line: 531,
          column: 33
        },
        end: {
          line: 531,
          column: 58
        }
      },
      "212": {
        start: {
          line: 532,
          column: 33
        },
        end: {
          line: 532,
          column: 58
        }
      },
      "213": {
        start: {
          line: 533,
          column: 31
        },
        end: {
          line: 533,
          column: 65
        }
      },
      "214": {
        start: {
          line: 535,
          column: 26
        },
        end: {
          line: 539,
          column: 5
        }
      },
      "215": {
        start: {
          line: 542,
          column: 4
        },
        end: {
          line: 559,
          column: 5
        }
      },
      "216": {
        start: {
          line: 543,
          column: 8
        },
        end: {
          line: 543,
          column: 76
        }
      },
      "217": {
        start: {
          line: 544,
          column: 8
        },
        end: {
          line: 544,
          column: 104
        }
      },
      "218": {
        start: {
          line: 545,
          column: 8
        },
        end: {
          line: 545,
          column: 84
        }
      },
      "219": {
        start: {
          line: 549,
          column: 9
        },
        end: {
          line: 559,
          column: 5
        }
      },
      "220": {
        start: {
          line: 550,
          column: 8
        },
        end: {
          line: 550,
          column: 75
        }
      },
      "221": {
        start: {
          line: 551,
          column: 8
        },
        end: {
          line: 551,
          column: 73
        }
      },
      "222": {
        start: {
          line: 552,
          column: 8
        },
        end: {
          line: 552,
          column: 84
        }
      },
      "223": {
        start: {
          line: 556,
          column: 9
        },
        end: {
          line: 559,
          column: 5
        }
      },
      "224": {
        start: {
          line: 557,
          column: 8
        },
        end: {
          line: 557,
          column: 73
        }
      },
      "225": {
        start: {
          line: 558,
          column: 8
        },
        end: {
          line: 558,
          column: 91
        }
      },
      "226": {
        start: {
          line: 561,
          column: 4
        },
        end: {
          line: 570,
          column: 6
        }
      },
      "227": {
        start: {
          line: 573,
          column: 4
        },
        end: {
          line: 575,
          column: 5
        }
      },
      "228": {
        start: {
          line: 574,
          column: 8
        },
        end: {
          line: 574,
          column: 189
        }
      },
      "229": {
        start: {
          line: 582,
          column: 4
        },
        end: {
          line: 587,
          column: 5
        }
      },
      "230": {
        start: {
          line: 583,
          column: 8
        },
        end: {
          line: 586,
          column: 10
        }
      },
      "231": {
        start: {
          line: 589,
          column: 16
        },
        end: {
          line: 589,
          column: 26
        }
      },
      "232": {
        start: {
          line: 590,
          column: 26
        },
        end: {
          line: 590,
          column: 74
        }
      },
      "233": {
        start: {
          line: 592,
          column: 4
        },
        end: {
          line: 612,
          column: 6
        }
      },
      "234": {
        start: {
          line: 620,
          column: 20
        },
        end: {
          line: 620,
          column: 59
        }
      },
      "235": {
        start: {
          line: 621,
          column: 22
        },
        end: {
          line: 621,
          column: 32
        }
      },
      "236": {
        start: {
          line: 623,
          column: 4
        },
        end: {
          line: 623,
          column: 95
        }
      },
      "237": {
        start: {
          line: 624,
          column: 4
        },
        end: {
          line: 624,
          column: 51
        }
      },
      "238": {
        start: {
          line: 626,
          column: 4
        },
        end: {
          line: 700,
          column: 5
        }
      },
      "239": {
        start: {
          line: 628,
          column: 23
        },
        end: {
          line: 628,
          column: 64
        }
      },
      "240": {
        start: {
          line: 630,
          column: 25
        },
        end: {
          line: 630,
          column: 47
        }
      },
      "241": {
        start: {
          line: 631,
          column: 8
        },
        end: {
          line: 631,
          column: 71
        }
      },
      "242": {
        start: {
          line: 632,
          column: 8
        },
        end: {
          line: 632,
          column: 81
        }
      },
      "243": {
        start: {
          line: 635,
          column: 8
        },
        end: {
          line: 644,
          column: 9
        }
      },
      "244": {
        start: {
          line: 636,
          column: 43
        },
        end: {
          line: 636,
          column: 74
        }
      },
      "245": {
        start: {
          line: 637,
          column: 30
        },
        end: {
          line: 637,
          column: 69
        }
      },
      "246": {
        start: {
          line: 638,
          column: 26
        },
        end: {
          line: 638,
          column: 48
        }
      },
      "247": {
        start: {
          line: 640,
          column: 12
        },
        end: {
          line: 640,
          column: 89
        }
      },
      "248": {
        start: {
          line: 643,
          column: 12
        },
        end: {
          line: 643,
          column: 94
        }
      },
      "249": {
        start: {
          line: 646,
          column: 8
        },
        end: {
          line: 646,
          column: 22
        }
      },
      "250": {
        start: {
          line: 648,
          column: 30
        },
        end: {
          line: 648,
          column: 53
        }
      },
      "251": {
        start: {
          line: 649,
          column: 30
        },
        end: {
          line: 649,
          column: 52
        }
      },
      "252": {
        start: {
          line: 651,
          column: 8
        },
        end: {
          line: 651,
          column: 104
        }
      },
      "253": {
        start: {
          line: 652,
          column: 8
        },
        end: {
          line: 652,
          column: 81
        }
      },
      "254": {
        start: {
          line: 655,
          column: 8
        },
        end: {
          line: 663,
          column: 9
        }
      },
      "255": {
        start: {
          line: 656,
          column: 43
        },
        end: {
          line: 656,
          column: 74
        }
      },
      "256": {
        start: {
          line: 657,
          column: 30
        },
        end: {
          line: 657,
          column: 69
        }
      },
      "257": {
        start: {
          line: 658,
          column: 26
        },
        end: {
          line: 658,
          column: 48
        }
      },
      "258": {
        start: {
          line: 659,
          column: 12
        },
        end: {
          line: 659,
          column: 96
        }
      },
      "259": {
        start: {
          line: 662,
          column: 12
        },
        end: {
          line: 662,
          column: 78
        }
      },
      "260": {
        start: {
          line: 665,
          column: 8
        },
        end: {
          line: 665,
          column: 22
        }
      },
      "261": {
        start: {
          line: 668,
          column: 30
        },
        end: {
          line: 668,
          column: 52
        }
      },
      "262": {
        start: {
          line: 669,
          column: 8
        },
        end: {
          line: 669,
          column: 94
        }
      },
      "263": {
        start: {
          line: 670,
          column: 8
        },
        end: {
          line: 684,
          column: 11
        }
      },
      "264": {
        start: {
          line: 687,
          column: 8
        },
        end: {
          line: 687,
          column: 35
        }
      },
      "265": {
        start: {
          line: 690,
          column: 8
        },
        end: {
          line: 697,
          column: 9
        }
      },
      "266": {
        start: {
          line: 691,
          column: 43
        },
        end: {
          line: 691,
          column: 74
        }
      },
      "267": {
        start: {
          line: 692,
          column: 30
        },
        end: {
          line: 692,
          column: 69
        }
      },
      "268": {
        start: {
          line: 693,
          column: 26
        },
        end: {
          line: 693,
          column: 48
        }
      },
      "269": {
        start: {
          line: 694,
          column: 12
        },
        end: {
          line: 694,
          column: 97
        }
      },
      "270": {
        start: {
          line: 696,
          column: 12
        },
        end: {
          line: 696,
          column: 78
        }
      },
      "271": {
        start: {
          line: 699,
          column: 8
        },
        end: {
          line: 699,
          column: 20
        }
      },
      "272": {
        start: {
          line: 707,
          column: 4
        },
        end: {
          line: 709,
          column: 5
        }
      },
      "273": {
        start: {
          line: 708,
          column: 8
        },
        end: {
          line: 708,
          column: 35
        }
      },
      "274": {
        start: {
          line: 711,
          column: 19
        },
        end: {
          line: 711,
          column: 39
        }
      },
      "275": {
        start: {
          line: 712,
          column: 4
        },
        end: {
          line: 722,
          column: 5
        }
      },
      "276": {
        start: {
          line: 713,
          column: 8
        },
        end: {
          line: 713,
          column: 36
        }
      },
      "277": {
        start: {
          line: 714,
          column: 23
        },
        end: {
          line: 714,
          column: 45
        }
      },
      "278": {
        start: {
          line: 715,
          column: 8
        },
        end: {
          line: 715,
          column: 37
        }
      },
      "279": {
        start: {
          line: 716,
          column: 8
        },
        end: {
          line: 716,
          column: 22
        }
      },
      "280": {
        start: {
          line: 718,
          column: 8
        },
        end: {
          line: 718,
          column: 39
        }
      },
      "281": {
        start: {
          line: 719,
          column: 8
        },
        end: {
          line: 719,
          column: 20
        }
      },
      "282": {
        start: {
          line: 721,
          column: 8
        },
        end: {
          line: 721,
          column: 25
        }
      },
      "283": {
        start: {
          line: 729,
          column: 4
        },
        end: {
          line: 756,
          column: 5
        }
      },
      "284": {
        start: {
          line: 731,
          column: 23
        },
        end: {
          line: 731,
          column: 127
        }
      },
      "285": {
        start: {
          line: 733,
          column: 8
        },
        end: {
          line: 739,
          column: 10
        }
      },
      "286": {
        start: {
          line: 742,
          column: 8
        },
        end: {
          line: 749,
          column: 9
        }
      },
      "287": {
        start: {
          line: 743,
          column: 12
        },
        end: {
          line: 748,
          column: 14
        }
      },
      "288": {
        start: {
          line: 751,
          column: 8
        },
        end: {
          line: 755,
          column: 10
        }
      },
      "289": {
        start: {
          line: 763,
          column: 4
        },
        end: {
          line: 779,
          column: 5
        }
      },
      "290": {
        start: {
          line: 764,
          column: 8
        },
        end: {
          line: 766,
          column: 9
        }
      },
      "291": {
        start: {
          line: 765,
          column: 12
        },
        end: {
          line: 765,
          column: 39
        }
      },
      "292": {
        start: {
          line: 767,
          column: 23
        },
        end: {
          line: 773,
          column: 23
        }
      },
      "293": {
        start: {
          line: 775,
          column: 8
        },
        end: {
          line: 775,
          column: 37
        }
      },
      "294": {
        start: {
          line: 777,
          column: 8
        },
        end: {
          line: 777,
          column: 77
        }
      },
      "295": {
        start: {
          line: 778,
          column: 8
        },
        end: {
          line: 778,
          column: 21
        }
      },
      "296": {
        start: {
          line: 786,
          column: 4
        },
        end: {
          line: 813,
          column: 5
        }
      },
      "297": {
        start: {
          line: 787,
          column: 8
        },
        end: {
          line: 789,
          column: 9
        }
      },
      "298": {
        start: {
          line: 788,
          column: 12
        },
        end: {
          line: 788,
          column: 39
        }
      },
      "299": {
        start: {
          line: 790,
          column: 23
        },
        end: {
          line: 798,
          column: 24
        }
      },
      "300": {
        start: {
          line: 800,
          column: 26
        },
        end: {
          line: 800,
          column: 28
        }
      },
      "301": {
        start: {
          line: 801,
          column: 8
        },
        end: {
          line: 803,
          column: 11
        }
      },
      "302": {
        start: {
          line: 802,
          column: 12
        },
        end: {
          line: 802,
          column: 51
        }
      },
      "303": {
        start: {
          line: 805,
          column: 8
        },
        end: {
          line: 805,
          column: 25
        }
      },
      "304": {
        start: {
          line: 807,
          column: 8
        },
        end: {
          line: 807,
          column: 64
        }
      },
      "305": {
        start: {
          line: 808,
          column: 28
        },
        end: {
          line: 808,
          column: 30
        }
      },
      "306": {
        start: {
          line: 809,
          column: 8
        },
        end: {
          line: 811,
          column: 11
        }
      },
      "307": {
        start: {
          line: 810,
          column: 12
        },
        end: {
          line: 810,
          column: 38
        }
      },
      "308": {
        start: {
          line: 812,
          column: 8
        },
        end: {
          line: 812,
          column: 27
        }
      },
      "309": {
        start: {
          line: 819,
          column: 24
        },
        end: {
          line: 862,
          column: 1
        }
      },
      "310": {
        start: {
          line: 868,
          column: 28
        },
        end: {
          line: 868,
          column: 38
        }
      },
      "311": {
        start: {
          line: 869,
          column: 4
        },
        end: {
          line: 869,
          column: 87
        }
      },
      "312": {
        start: {
          line: 871,
          column: 4
        },
        end: {
          line: 1009,
          column: 5
        }
      },
      "313": {
        start: {
          line: 873,
          column: 8
        },
        end: {
          line: 873,
          column: 35
        }
      },
      "314": {
        start: {
          line: 874,
          column: 8
        },
        end: {
          line: 874,
          column: 83
        }
      },
      "315": {
        start: {
          line: 876,
          column: 26
        },
        end: {
          line: 882,
          column: 9
        }
      },
      "316": {
        start: {
          line: 884,
          column: 8
        },
        end: {
          line: 884,
          column: 102
        }
      },
      "317": {
        start: {
          line: 887,
          column: 32
        },
        end: {
          line: 887,
          column: 42
        }
      },
      "318": {
        start: {
          line: 888,
          column: 34
        },
        end: {
          line: 888,
          column: 62
        }
      },
      "319": {
        start: {
          line: 889,
          column: 35
        },
        end: {
          line: 889,
          column: 63
        }
      },
      "320": {
        start: {
          line: 891,
          column: 8
        },
        end: {
          line: 891,
          column: 99
        }
      },
      "321": {
        start: {
          line: 894,
          column: 27
        },
        end: {
          line: 920,
          column: 9
        }
      },
      "322": {
        start: {
          line: 897,
          column: 63
        },
        end: {
          line: 897,
          column: 87
        }
      },
      "323": {
        start: {
          line: 898,
          column: 62
        },
        end: {
          line: 898,
          column: 87
        }
      },
      "324": {
        start: {
          line: 902,
          column: 68
        },
        end: {
          line: 902,
          column: 92
        }
      },
      "325": {
        start: {
          line: 903,
          column: 67
        },
        end: {
          line: 903,
          column: 92
        }
      },
      "326": {
        start: {
          line: 907,
          column: 70
        },
        end: {
          line: 907,
          column: 94
        }
      },
      "327": {
        start: {
          line: 908,
          column: 69
        },
        end: {
          line: 908,
          column: 94
        }
      },
      "328": {
        start: {
          line: 912,
          column: 68
        },
        end: {
          line: 912,
          column: 92
        }
      },
      "329": {
        start: {
          line: 913,
          column: 67
        },
        end: {
          line: 913,
          column: 92
        }
      },
      "330": {
        start: {
          line: 917,
          column: 67
        },
        end: {
          line: 917,
          column: 91
        }
      },
      "331": {
        start: {
          line: 918,
          column: 66
        },
        end: {
          line: 918,
          column: 91
        }
      },
      "332": {
        start: {
          line: 923,
          column: 30
        },
        end: {
          line: 924,
          column: 98
        }
      },
      "333": {
        start: {
          line: 925,
          column: 30
        },
        end: {
          line: 926,
          column: 106
        }
      },
      "334": {
        start: {
          line: 927,
          column: 29
        },
        end: {
          line: 928,
          column: 103
        }
      },
      "335": {
        start: {
          line: 930,
          column: 39
        },
        end: {
          line: 930,
          column: 88
        }
      },
      "336": {
        start: {
          line: 933,
          column: 32
        },
        end: {
          line: 933,
          column: 34
        }
      },
      "337": {
        start: {
          line: 934,
          column: 8
        },
        end: {
          line: 934,
          column: 119
        }
      },
      "338": {
        start: {
          line: 934,
          column: 48
        },
        end: {
          line: 934,
          column: 119
        }
      },
      "339": {
        start: {
          line: 934,
          column: 105
        },
        end: {
          line: 934,
          column: 116
        }
      },
      "340": {
        start: {
          line: 935,
          column: 8
        },
        end: {
          line: 935,
          column: 134
        }
      },
      "341": {
        start: {
          line: 935,
          column: 53
        },
        end: {
          line: 935,
          column: 134
        }
      },
      "342": {
        start: {
          line: 935,
          column: 115
        },
        end: {
          line: 935,
          column: 131
        }
      },
      "343": {
        start: {
          line: 937,
          column: 35
        },
        end: {
          line: 937,
          column: 63
        }
      },
      "344": {
        start: {
          line: 940,
          column: 8
        },
        end: {
          line: 956,
          column: 11
        }
      },
      "345": {
        start: {
          line: 959,
          column: 8
        },
        end: {
          line: 966,
          column: 9
        }
      },
      "346": {
        start: {
          line: 960,
          column: 12
        },
        end: {
          line: 965,
          column: 15
        }
      },
      "347": {
        start: {
          line: 969,
          column: 8
        },
        end: {
          line: 979,
          column: 11
        }
      },
      "348": {
        start: {
          line: 970,
          column: 12
        },
        end: {
          line: 978,
          column: 13
        }
      },
      "349": {
        start: {
          line: 971,
          column: 16
        },
        end: {
          line: 977,
          column: 19
        }
      },
      "350": {
        start: {
          line: 981,
          column: 8
        },
        end: {
          line: 991,
          column: 10
        }
      },
      "351": {
        start: {
          line: 994,
          column: 30
        },
        end: {
          line: 994,
          column: 58
        }
      },
      "352": {
        start: {
          line: 995,
          column: 8
        },
        end: {
          line: 1000,
          column: 11
        }
      },
      "353": {
        start: {
          line: 1002,
          column: 8
        },
        end: {
          line: 1008,
          column: 10
        }
      },
      "354": {
        start: {
          line: 1016,
          column: 20
        },
        end: {
          line: 1016,
          column: 22
        }
      },
      "355": {
        start: {
          line: 1018,
          column: 4
        },
        end: {
          line: 1020,
          column: 5
        }
      },
      "356": {
        start: {
          line: 1018,
          column: 32
        },
        end: {
          line: 1018,
          column: 59
        }
      },
      "357": {
        start: {
          line: 1019,
          column: 8
        },
        end: {
          line: 1019,
          column: 53
        }
      },
      "358": {
        start: {
          line: 1021,
          column: 4
        },
        end: {
          line: 1023,
          column: 5
        }
      },
      "359": {
        start: {
          line: 1021,
          column: 32
        },
        end: {
          line: 1021,
          column: 55
        }
      },
      "360": {
        start: {
          line: 1022,
          column: 8
        },
        end: {
          line: 1022,
          column: 63
        }
      },
      "361": {
        start: {
          line: 1024,
          column: 4
        },
        end: {
          line: 1026,
          column: 5
        }
      },
      "362": {
        start: {
          line: 1024,
          column: 32
        },
        end: {
          line: 1024,
          column: 53
        }
      },
      "363": {
        start: {
          line: 1025,
          column: 8
        },
        end: {
          line: 1025,
          column: 53
        }
      },
      "364": {
        start: {
          line: 1027,
          column: 4
        },
        end: {
          line: 1029,
          column: 5
        }
      },
      "365": {
        start: {
          line: 1027,
          column: 32
        },
        end: {
          line: 1027,
          column: 57
        }
      },
      "366": {
        start: {
          line: 1028,
          column: 8
        },
        end: {
          line: 1028,
          column: 59
        }
      },
      "367": {
        start: {
          line: 1031,
          column: 4
        },
        end: {
          line: 1031,
          column: 19
        }
      },
      "368": {
        start: {
          line: 1038,
          column: 20
        },
        end: {
          line: 1043,
          column: 5
        }
      },
      "369": {
        start: {
          line: 1045,
          column: 4
        },
        end: {
          line: 1045,
          column: 75
        }
      },
      "370": {
        start: {
          line: 1052,
          column: 4
        },
        end: {
          line: 1059,
          column: 5
        }
      },
      "371": {
        start: {
          line: 1053,
          column: 34
        },
        end: {
          line: 1053,
          column: 67
        }
      },
      "372": {
        start: {
          line: 1054,
          column: 30
        },
        end: {
          line: 1054,
          column: 87
        }
      },
      "373": {
        start: {
          line: 1054,
          column: 61
        },
        end: {
          line: 1054,
          column: 86
        }
      },
      "374": {
        start: {
          line: 1056,
          column: 8
        },
        end: {
          line: 1058,
          column: 9
        }
      },
      "375": {
        start: {
          line: 1057,
          column: 12
        },
        end: {
          line: 1057,
          column: 86
        }
      },
      "376": {
        start: {
          line: 1061,
          column: 4
        },
        end: {
          line: 1061,
          column: 37
        }
      },
      "377": {
        start: {
          line: 1069,
          column: 4
        },
        end: {
          line: 1074,
          column: 5
        }
      },
      "378": {
        start: {
          line: 1070,
          column: 8
        },
        end: {
          line: 1070,
          column: 25
        }
      },
      "379": {
        start: {
          line: 1071,
          column: 8
        },
        end: {
          line: 1071,
          column: 20
        }
      },
      "380": {
        start: {
          line: 1072,
          column: 8
        },
        end: {
          line: 1072,
          column: 30
        }
      },
      "381": {
        start: {
          line: 1073,
          column: 8
        },
        end: {
          line: 1073,
          column: 24
        }
      },
      "382": {
        start: {
          line: 1081,
          column: 4
        },
        end: {
          line: 1081,
          column: 57
        }
      },
      "383": {
        start: {
          line: 1082,
          column: 22
        },
        end: {
          line: 1082,
          column: 32
        }
      },
      "384": {
        start: {
          line: 1084,
          column: 4
        },
        end: {
          line: 1114,
          column: 5
        }
      },
      "385": {
        start: {
          line: 1086,
          column: 8
        },
        end: {
          line: 1088,
          column: 9
        }
      },
      "386": {
        start: {
          line: 1087,
          column: 12
        },
        end: {
          line: 1087,
          column: 39
        }
      },
      "387": {
        start: {
          line: 1091,
          column: 31
        },
        end: {
          line: 1091,
          column: 32
        }
      },
      "388": {
        start: {
          line: 1092,
          column: 29
        },
        end: {
          line: 1092,
          column: 31
        }
      },
      "389": {
        start: {
          line: 1094,
          column: 8
        },
        end: {
          line: 1107,
          column: 9
        }
      },
      "390": {
        start: {
          line: 1094,
          column: 21
        },
        end: {
          line: 1094,
          column: 22
        }
      },
      "391": {
        start: {
          line: 1095,
          column: 12
        },
        end: {
          line: 1106,
          column: 14
        }
      },
      "392": {
        start: {
          line: 1097,
          column: 20
        },
        end: {
          line: 1104,
          column: 21
        }
      },
      "393": {
        start: {
          line: 1098,
          column: 39
        },
        end: {
          line: 1098,
          column: 59
        }
      },
      "394": {
        start: {
          line: 1099,
          column: 24
        },
        end: {
          line: 1099,
          column: 55
        }
      },
      "395": {
        start: {
          line: 1100,
          column: 24
        },
        end: {
          line: 1100,
          column: 41
        }
      },
      "396": {
        start: {
          line: 1101,
          column: 24
        },
        end: {
          line: 1101,
          column: 82
        }
      },
      "397": {
        start: {
          line: 1103,
          column: 24
        },
        end: {
          line: 1103,
          column: 94
        }
      },
      "398": {
        start: {
          line: 1109,
          column: 8
        },
        end: {
          line: 1109,
          column: 40
        }
      },
      "399": {
        start: {
          line: 1110,
          column: 8
        },
        end: {
          line: 1110,
          column: 84
        }
      },
      "400": {
        start: {
          line: 1113,
          column: 8
        },
        end: {
          line: 1113,
          column: 79
        }
      },
      "401": {
        start: {
          line: 1121,
          column: 4
        },
        end: {
          line: 1121,
          column: 82
        }
      },
      "402": {
        start: {
          line: 1122,
          column: 28
        },
        end: {
          line: 1122,
          column: 38
        }
      },
      "403": {
        start: {
          line: 1124,
          column: 4
        },
        end: {
          line: 1137,
          column: 5
        }
      },
      "404": {
        start: {
          line: 1126,
          column: 8
        },
        end: {
          line: 1126,
          column: 35
        }
      },
      "405": {
        start: {
          line: 1129,
          column: 8
        },
        end: {
          line: 1129,
          column: 32
        }
      },
      "406": {
        start: {
          line: 1131,
          column: 8
        },
        end: {
          line: 1131,
          column: 103
        }
      },
      "407": {
        start: {
          line: 1132,
          column: 8
        },
        end: {
          line: 1132,
          column: 20
        }
      },
      "408": {
        start: {
          line: 1135,
          column: 8
        },
        end: {
          line: 1135,
          column: 81
        }
      },
      "409": {
        start: {
          line: 1136,
          column: 8
        },
        end: {
          line: 1136,
          column: 21
        }
      },
      "410": {
        start: {
          line: 1144,
          column: 4
        },
        end: {
          line: 1169,
          column: 5
        }
      },
      "411": {
        start: {
          line: 1145,
          column: 25
        },
        end: {
          line: 1145,
          column: 49
        }
      },
      "412": {
        start: {
          line: 1148,
          column: 25
        },
        end: {
          line: 1157,
          column: 9
        }
      },
      "413": {
        start: {
          line: 1159,
          column: 8
        },
        end: {
          line: 1164,
          column: 9
        }
      },
      "414": {
        start: {
          line: 1160,
          column: 26
        },
        end: {
          line: 1160,
          column: 49
        }
      },
      "415": {
        start: {
          line: 1161,
          column: 12
        },
        end: {
          line: 1163,
          column: 13
        }
      },
      "416": {
        start: {
          line: 1162,
          column: 16
        },
        end: {
          line: 1162,
          column: 32
        }
      },
      "417": {
        start: {
          line: 1166,
          column: 8
        },
        end: {
          line: 1166,
          column: 25
        }
      },
      "418": {
        start: {
          line: 1168,
          column: 8
        },
        end: {
          line: 1168,
          column: 25
        }
      },
      "419": {
        start: {
          line: 1176,
          column: 4
        },
        end: {
          line: 1179,
          column: 5
        }
      },
      "420": {
        start: {
          line: 1177,
          column: 8
        },
        end: {
          line: 1177,
          column: 25
        }
      },
      "421": {
        start: {
          line: 1178,
          column: 8
        },
        end: {
          line: 1178,
          column: 20
        }
      },
      "422": {
        start: {
          line: 1180,
          column: 4
        },
        end: {
          line: 1180,
          column: 26
        }
      },
      "423": {
        start: {
          line: 1181,
          column: 4
        },
        end: {
          line: 1181,
          column: 20
        }
      },
      "424": {
        start: {
          line: 1182,
          column: 4
        },
        end: {
          line: 1182,
          column: 55
        }
      },
      "425": {
        start: {
          line: 1185,
          column: 0
        },
        end: {
          line: 1202,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "getDbConfig",
        decl: {
          start: {
            line: 34,
            column: 15
          },
          end: {
            line: 34,
            column: 26
          }
        },
        loc: {
          start: {
            line: 34,
            column: 29
          },
          end: {
            line: 180,
            column: 1
          }
        },
        line: 34
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 132,
            column: 52
          },
          end: {
            line: 132,
            column: 53
          }
        },
        loc: {
          start: {
            line: 132,
            column: 61
          },
          end: {
            line: 132,
            column: 75
          }
        },
        line: 132
      },
      "2": {
        name: "calculateOptimalPoolConfig",
        decl: {
          start: {
            line: 185,
            column: 9
          },
          end: {
            line: 185,
            column: 35
          }
        },
        loc: {
          start: {
            line: 185,
            column: 38
          },
          end: {
            line: 249,
            column: 1
          }
        },
        line: 185
      },
      "3": {
        name: "initializeDatabase",
        decl: {
          start: {
            line: 254,
            column: 15
          },
          end: {
            line: 254,
            column: 33
          }
        },
        loc: {
          start: {
            line: 254,
            column: 36
          },
          end: {
            line: 392,
            column: 1
          }
        },
        line: 254
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 310,
            column: 27
          },
          end: {
            line: 310,
            column: 28
          }
        },
        loc: {
          start: {
            line: 310,
            column: 33
          },
          end: {
            line: 312,
            column: 9
          }
        },
        line: 310
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 314,
            column: 27
          },
          end: {
            line: 314,
            column: 28
          }
        },
        loc: {
          start: {
            line: 314,
            column: 33
          },
          end: {
            line: 316,
            column: 9
          }
        },
        line: 314
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 318,
            column: 26
          },
          end: {
            line: 318,
            column: 27
          }
        },
        loc: {
          start: {
            line: 318,
            column: 32
          },
          end: {
            line: 320,
            column: 9
          }
        },
        line: 318
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 322,
            column: 25
          },
          end: {
            line: 322,
            column: 26
          }
        },
        loc: {
          start: {
            line: 322,
            column: 34
          },
          end: {
            line: 324,
            column: 9
          }
        },
        line: 322
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 327,
            column: 27
          },
          end: {
            line: 327,
            column: 28
          }
        },
        loc: {
          start: {
            line: 327,
            column: 33
          },
          end: {
            line: 330,
            column: 9
          }
        },
        line: 327
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 332,
            column: 27
          },
          end: {
            line: 332,
            column: 28
          }
        },
        loc: {
          start: {
            line: 332,
            column: 33
          },
          end: {
            line: 335,
            column: 9
          }
        },
        line: 332
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 340,
            column: 61
          },
          end: {
            line: 340,
            column: 62
          }
        },
        loc: {
          start: {
            line: 340,
            column: 80
          },
          end: {
            line: 359,
            column: 9
          }
        },
        line: 340
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 345,
            column: 28
          },
          end: {
            line: 345,
            column: 29
          }
        },
        loc: {
          start: {
            line: 346,
            column: 20
          },
          end: {
            line: 346,
            column: 106
          }
        },
        line: 346
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 346,
            column: 31
          },
          end: {
            line: 346,
            column: 32
          }
        },
        loc: {
          start: {
            line: 346,
            column: 37
          },
          end: {
            line: 346,
            column: 98
          }
        },
        line: 346
      },
      "13": {
        name: "startPoolMonitoring",
        decl: {
          start: {
            line: 397,
            column: 9
          },
          end: {
            line: 397,
            column: 28
          }
        },
        loc: {
          start: {
            line: 397,
            column: 31
          },
          end: {
            line: 443,
            column: 1
          }
        },
        line: 397
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 404,
            column: 44
          },
          end: {
            line: 404,
            column: 45
          }
        },
        loc: {
          start: {
            line: 404,
            column: 50
          },
          end: {
            line: 434,
            column: 9
          }
        },
        line: 404
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 439,
            column: 27
          },
          end: {
            line: 439,
            column: 28
          }
        },
        loc: {
          start: {
            line: 439,
            column: 33
          },
          end: {
            line: 439,
            column: 63
          }
        },
        line: 439
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 440,
            column: 29
          },
          end: {
            line: 440,
            column: 30
          }
        },
        loc: {
          start: {
            line: 440,
            column: 35
          },
          end: {
            line: 440,
            column: 65
          }
        },
        line: 440
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 441,
            column: 30
          },
          end: {
            line: 441,
            column: 31
          }
        },
        loc: {
          start: {
            line: 441,
            column: 36
          },
          end: {
            line: 441,
            column: 66
          }
        },
        line: 441
      },
      "18": {
        name: "getPool",
        decl: {
          start: {
            line: 448,
            column: 9
          },
          end: {
            line: 448,
            column: 16
          }
        },
        loc: {
          start: {
            line: 448,
            column: 19
          },
          end: {
            line: 453,
            column: 1
          }
        },
        line: 448
      },
      "19": {
        name: "updatePoolMetrics",
        decl: {
          start: {
            line: 479,
            column: 9
          },
          end: {
            line: 479,
            column: 26
          }
        },
        loc: {
          start: {
            line: 479,
            column: 34
          },
          end: {
            line: 515,
            column: 1
          }
        },
        line: 479
      },
      "20": {
        name: "generateAdaptiveRecommendations",
        decl: {
          start: {
            line: 520,
            column: 9
          },
          end: {
            line: 520,
            column: 40
          }
        },
        loc: {
          start: {
            line: 520,
            column: 43
          },
          end: {
            line: 576,
            column: 1
          }
        },
        line: 520
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 527,
            column: 61
          },
          end: {
            line: 527,
            column: 62
          }
        },
        loc: {
          start: {
            line: 527,
            column: 69
          },
          end: {
            line: 527,
            column: 90
          }
        },
        line: 527
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 528,
            column: 61
          },
          end: {
            line: 528,
            column: 62
          }
        },
        loc: {
          start: {
            line: 528,
            column: 69
          },
          end: {
            line: 528,
            column: 90
          }
        },
        line: 528
      },
      "23": {
        name: "getPoolStatus",
        decl: {
          start: {
            line: 581,
            column: 9
          },
          end: {
            line: 581,
            column: 22
          }
        },
        loc: {
          start: {
            line: 581,
            column: 25
          },
          end: {
            line: 613,
            column: 1
          }
        },
        line: 581
      },
      "24": {
        name: "query",
        decl: {
          start: {
            line: 619,
            column: 15
          },
          end: {
            line: 619,
            column: 20
          }
        },
        loc: {
          start: {
            line: 619,
            column: 58
          },
          end: {
            line: 701,
            column: 1
          }
        },
        line: 619
      },
      "25": {
        name: "transaction",
        decl: {
          start: {
            line: 706,
            column: 15
          },
          end: {
            line: 706,
            column: 26
          }
        },
        loc: {
          start: {
            line: 706,
            column: 37
          },
          end: {
            line: 723,
            column: 1
          }
        },
        line: 706
      },
      "26": {
        name: "healthCheck",
        decl: {
          start: {
            line: 728,
            column: 15
          },
          end: {
            line: 728,
            column: 26
          }
        },
        loc: {
          start: {
            line: 728,
            column: 29
          },
          end: {
            line: 757,
            column: 1
          }
        },
        line: 728
      },
      "27": {
        name: "tableExists",
        decl: {
          start: {
            line: 762,
            column: 15
          },
          end: {
            line: 762,
            column: 26
          }
        },
        loc: {
          start: {
            line: 762,
            column: 38
          },
          end: {
            line: 780,
            column: 1
          }
        },
        line: 762
      },
      "28": {
        name: "tablesExist",
        decl: {
          start: {
            line: 785,
            column: 15
          },
          end: {
            line: 785,
            column: 26
          }
        },
        loc: {
          start: {
            line: 785,
            column: 39
          },
          end: {
            line: 814,
            column: 1
          }
        },
        line: 785
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 801,
            column: 28
          },
          end: {
            line: 801,
            column: 29
          }
        },
        loc: {
          start: {
            line: 801,
            column: 35
          },
          end: {
            line: 803,
            column: 9
          }
        },
        line: 801
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 809,
            column: 27
          },
          end: {
            line: 809,
            column: 28
          }
        },
        loc: {
          start: {
            line: 809,
            column: 35
          },
          end: {
            line: 811,
            column: 9
          }
        },
        line: 809
      },
      "31": {
        name: "validateDatabaseSchema",
        decl: {
          start: {
            line: 867,
            column: 15
          },
          end: {
            line: 867,
            column: 37
          }
        },
        loc: {
          start: {
            line: 867,
            column: 66
          },
          end: {
            line: 1010,
            column: 1
          }
        },
        line: 867
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 897,
            column: 54
          },
          end: {
            line: 897,
            column: 55
          }
        },
        loc: {
          start: {
            line: 897,
            column: 63
          },
          end: {
            line: 897,
            column: 87
          }
        },
        line: 897
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 898,
            column: 53
          },
          end: {
            line: 898,
            column: 54
          }
        },
        loc: {
          start: {
            line: 898,
            column: 62
          },
          end: {
            line: 898,
            column: 87
          }
        },
        line: 898
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 902,
            column: 59
          },
          end: {
            line: 902,
            column: 60
          }
        },
        loc: {
          start: {
            line: 902,
            column: 68
          },
          end: {
            line: 902,
            column: 92
          }
        },
        line: 902
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 903,
            column: 58
          },
          end: {
            line: 903,
            column: 59
          }
        },
        loc: {
          start: {
            line: 903,
            column: 67
          },
          end: {
            line: 903,
            column: 92
          }
        },
        line: 903
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 907,
            column: 61
          },
          end: {
            line: 907,
            column: 62
          }
        },
        loc: {
          start: {
            line: 907,
            column: 70
          },
          end: {
            line: 907,
            column: 94
          }
        },
        line: 907
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 908,
            column: 60
          },
          end: {
            line: 908,
            column: 61
          }
        },
        loc: {
          start: {
            line: 908,
            column: 69
          },
          end: {
            line: 908,
            column: 94
          }
        },
        line: 908
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 912,
            column: 59
          },
          end: {
            line: 912,
            column: 60
          }
        },
        loc: {
          start: {
            line: 912,
            column: 68
          },
          end: {
            line: 912,
            column: 92
          }
        },
        line: 912
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 913,
            column: 58
          },
          end: {
            line: 913,
            column: 59
          }
        },
        loc: {
          start: {
            line: 913,
            column: 67
          },
          end: {
            line: 913,
            column: 92
          }
        },
        line: 913
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 917,
            column: 58
          },
          end: {
            line: 917,
            column: 59
          }
        },
        loc: {
          start: {
            line: 917,
            column: 67
          },
          end: {
            line: 917,
            column: 91
          }
        },
        line: 917
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 918,
            column: 57
          },
          end: {
            line: 918,
            column: 58
          }
        },
        loc: {
          start: {
            line: 918,
            column: 66
          },
          end: {
            line: 918,
            column: 91
          }
        },
        line: 918
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 934,
            column: 100
          },
          end: {
            line: 934,
            column: 101
          }
        },
        loc: {
          start: {
            line: 934,
            column: 105
          },
          end: {
            line: 934,
            column: 116
          }
        },
        line: 934
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 935,
            column: 110
          },
          end: {
            line: 935,
            column: 111
          }
        },
        loc: {
          start: {
            line: 935,
            column: 115
          },
          end: {
            line: 935,
            column: 131
          }
        },
        line: 935
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 969,
            column: 43
          },
          end: {
            line: 969,
            column: 44
          }
        },
        loc: {
          start: {
            line: 969,
            column: 65
          },
          end: {
            line: 979,
            column: 9
          }
        },
        line: 969
      },
      "45": {
        name: "getCriticalFeatureImpact",
        decl: {
          start: {
            line: 1015,
            column: 9
          },
          end: {
            line: 1015,
            column: 33
          }
        },
        loc: {
          start: {
            line: 1015,
            column: 49
          },
          end: {
            line: 1032,
            column: 1
          }
        },
        line: 1015
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 1018,
            column: 27
          },
          end: {
            line: 1018,
            column: 28
          }
        },
        loc: {
          start: {
            line: 1018,
            column: 32
          },
          end: {
            line: 1018,
            column: 59
          }
        },
        line: 1018
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 1021,
            column: 27
          },
          end: {
            line: 1021,
            column: 28
          }
        },
        loc: {
          start: {
            line: 1021,
            column: 32
          },
          end: {
            line: 1021,
            column: 55
          }
        },
        line: 1021
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 1024,
            column: 27
          },
          end: {
            line: 1024,
            column: 28
          }
        },
        loc: {
          start: {
            line: 1024,
            column: 32
          },
          end: {
            line: 1024,
            column: 53
          }
        },
        line: 1024
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 1027,
            column: 27
          },
          end: {
            line: 1027,
            column: 28
          }
        },
        loc: {
          start: {
            line: 1027,
            column: 32
          },
          end: {
            line: 1027,
            column: 57
          }
        },
        line: 1027
      },
      "50": {
        name: "getCategoryImpact",
        decl: {
          start: {
            line: 1037,
            column: 9
          },
          end: {
            line: 1037,
            column: 26
          }
        },
        loc: {
          start: {
            line: 1037,
            column: 37
          },
          end: {
            line: 1046,
            column: 1
          }
        },
        line: 1037
      },
      "51": {
        name: "safeQuery",
        decl: {
          start: {
            line: 1051,
            column: 15
          },
          end: {
            line: 1051,
            column: 24
          }
        },
        loc: {
          start: {
            line: 1051,
            column: 65
          },
          end: {
            line: 1062,
            column: 1
          }
        },
        line: 1051
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 1054,
            column: 52
          },
          end: {
            line: 1054,
            column: 53
          }
        },
        loc: {
          start: {
            line: 1054,
            column: 61
          },
          end: {
            line: 1054,
            column: 86
          }
        },
        line: 1054
      },
      "53": {
        name: "closeDatabase",
        decl: {
          start: {
            line: 1068,
            column: 15
          },
          end: {
            line: 1068,
            column: 28
          }
        },
        loc: {
          start: {
            line: 1068,
            column: 31
          },
          end: {
            line: 1075,
            column: 1
          }
        },
        line: 1068
      },
      "54": {
        name: "warmConnections",
        decl: {
          start: {
            line: 1080,
            column: 15
          },
          end: {
            line: 1080,
            column: 30
          }
        },
        loc: {
          start: {
            line: 1080,
            column: 33
          },
          end: {
            line: 1115,
            column: 1
          }
        },
        line: 1080
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 1096,
            column: 17
          },
          end: {
            line: 1096,
            column: 18
          }
        },
        loc: {
          start: {
            line: 1096,
            column: 29
          },
          end: {
            line: 1105,
            column: 17
          }
        },
        line: 1096
      },
      "56": {
        name: "initForLambda",
        decl: {
          start: {
            line: 1120,
            column: 15
          },
          end: {
            line: 1120,
            column: 28
          }
        },
        loc: {
          start: {
            line: 1120,
            column: 31
          },
          end: {
            line: 1138,
            column: 1
          }
        },
        line: 1120
      },
      "57": {
        name: "extractTableName",
        decl: {
          start: {
            line: 1143,
            column: 9
          },
          end: {
            line: 1143,
            column: 25
          }
        },
        loc: {
          start: {
            line: 1143,
            column: 31
          },
          end: {
            line: 1170,
            column: 1
          }
        },
        line: 1143
      },
      "58": {
        name: "resetDatabaseState",
        decl: {
          start: {
            line: 1175,
            column: 15
          },
          end: {
            line: 1175,
            column: 33
          }
        },
        loc: {
          start: {
            line: 1175,
            column: 36
          },
          end: {
            line: 1183,
            column: 1
          }
        },
        line: 1175
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 41
          }
        }, {
          start: {
            line: 28,
            column: 45
          },
          end: {
            line: 28,
            column: 67
          }
        }, {
          start: {
            line: 28,
            column: 71
          },
          end: {
            line: 28,
            column: 82
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "2": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "3": {
        loc: {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 43,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 43,
            column: 31
          }
        }, {
          start: {
            line: 43,
            column: 35
          },
          end: {
            line: 43,
            column: 54
          }
        }, {
          start: {
            line: 43,
            column: 58
          },
          end: {
            line: 43,
            column: 81
          }
        }],
        line: 43
      },
      "4": {
        loc: {
          start: {
            line: 47,
            column: 22
          },
          end: {
            line: 47,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 22
          },
          end: {
            line: 47,
            column: 41
          }
        }, {
          start: {
            line: 47,
            column: 45
          },
          end: {
            line: 47,
            column: 68
          }
        }],
        line: 47
      },
      "5": {
        loc: {
          start: {
            line: 48,
            column: 22
          },
          end: {
            line: 48,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 22
          },
          end: {
            line: 48,
            column: 51
          }
        }, {
          start: {
            line: 48,
            column: 55
          },
          end: {
            line: 48,
            column: 59
          }
        }],
        line: 48
      },
      "6": {
        loc: {
          start: {
            line: 49,
            column: 26
          },
          end: {
            line: 49,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 26
          },
          end: {
            line: 49,
            column: 45
          }
        }, {
          start: {
            line: 49,
            column: 49
          },
          end: {
            line: 49,
            column: 72
          }
        }, {
          start: {
            line: 49,
            column: 76
          },
          end: {
            line: 49,
            column: 84
          }
        }],
        line: 49
      },
      "7": {
        loc: {
          start: {
            line: 50,
            column: 22
          },
          end: {
            line: 50,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 22
          },
          end: {
            line: 50,
            column: 41
          }
        }, {
          start: {
            line: 50,
            column: 45
          },
          end: {
            line: 50,
            column: 68
          }
        }],
        line: 50
      },
      "8": {
        loc: {
          start: {
            line: 52,
            column: 21
          },
          end: {
            line: 52,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 52,
            column: 53
          },
          end: {
            line: 52,
            column: 82
          }
        }, {
          start: {
            line: 52,
            column: 85
          },
          end: {
            line: 52,
            column: 90
          }
        }],
        line: 52
      },
      "9": {
        loc: {
          start: {
            line: 53,
            column: 21
          },
          end: {
            line: 53,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 21
          },
          end: {
            line: 53,
            column: 54
          }
        }, {
          start: {
            line: 53,
            column: 58
          },
          end: {
            line: 53,
            column: 59
          }
        }],
        line: 53
      },
      "10": {
        loc: {
          start: {
            line: 54,
            column: 35
          },
          end: {
            line: 54,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 35
          },
          end: {
            line: 54,
            column: 77
          }
        }, {
          start: {
            line: 54,
            column: 81
          },
          end: {
            line: 54,
            column: 86
          }
        }],
        line: 54
      },
      "11": {
        loc: {
          start: {
            line: 55,
            column: 41
          },
          end: {
            line: 55,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 41
          },
          end: {
            line: 55,
            column: 81
          }
        }, {
          start: {
            line: 55,
            column: 85
          },
          end: {
            line: 55,
            column: 90
          }
        }],
        line: 55
      },
      "12": {
        loc: {
          start: {
            line: 59,
            column: 38
          },
          end: {
            line: 59,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 59,
            column: 53
          },
          end: {
            line: 59,
            column: 62
          }
        }, {
          start: {
            line: 59,
            column: 65
          },
          end: {
            line: 59,
            column: 75
          }
        }],
        line: 59
      },
      "13": {
        loc: {
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 106,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 106,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "14": {
        loc: {
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 69,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 69,
            column: 31
          }
        }, {
          start: {
            line: 69,
            column: 35
          },
          end: {
            line: 69,
            column: 54
          }
        }, {
          start: {
            line: 69,
            column: 58
          },
          end: {
            line: 69,
            column: 83
          }
        }],
        line: 69
      },
      "15": {
        loc: {
          start: {
            line: 80,
            column: 12
          },
          end: {
            line: 82,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 12
          },
          end: {
            line: 82,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "16": {
        loc: {
          start: {
            line: 87,
            column: 22
          },
          end: {
            line: 87,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 22
          },
          end: {
            line: 87,
            column: 41
          }
        }, {
          start: {
            line: 87,
            column: 45
          },
          end: {
            line: 87,
            column: 68
          }
        }],
        line: 87
      },
      "17": {
        loc: {
          start: {
            line: 88,
            column: 22
          },
          end: {
            line: 88,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 22
          },
          end: {
            line: 88,
            column: 51
          }
        }, {
          start: {
            line: 88,
            column: 55
          },
          end: {
            line: 88,
            column: 59
          }
        }],
        line: 88
      },
      "18": {
        loc: {
          start: {
            line: 89,
            column: 26
          },
          end: {
            line: 89,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 26
          },
          end: {
            line: 89,
            column: 45
          }
        }, {
          start: {
            line: 89,
            column: 49
          },
          end: {
            line: 89,
            column: 72
          }
        }, {
          start: {
            line: 89,
            column: 76
          },
          end: {
            line: 89,
            column: 84
          }
        }],
        line: 89
      },
      "19": {
        loc: {
          start: {
            line: 90,
            column: 22
          },
          end: {
            line: 90,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 22
          },
          end: {
            line: 90,
            column: 41
          }
        }, {
          start: {
            line: 90,
            column: 45
          },
          end: {
            line: 90,
            column: 68
          }
        }],
        line: 90
      },
      "20": {
        loc: {
          start: {
            line: 92,
            column: 21
          },
          end: {
            line: 92,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 92,
            column: 53
          },
          end: {
            line: 92,
            column: 82
          }
        }, {
          start: {
            line: 92,
            column: 85
          },
          end: {
            line: 92,
            column: 90
          }
        }],
        line: 92
      },
      "21": {
        loc: {
          start: {
            line: 93,
            column: 21
          },
          end: {
            line: 93,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 21
          },
          end: {
            line: 93,
            column: 54
          }
        }, {
          start: {
            line: 93,
            column: 58
          },
          end: {
            line: 93,
            column: 59
          }
        }],
        line: 93
      },
      "22": {
        loc: {
          start: {
            line: 94,
            column: 35
          },
          end: {
            line: 94,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 35
          },
          end: {
            line: 94,
            column: 77
          }
        }, {
          start: {
            line: 94,
            column: 81
          },
          end: {
            line: 94,
            column: 86
          }
        }],
        line: 94
      },
      "23": {
        loc: {
          start: {
            line: 95,
            column: 41
          },
          end: {
            line: 95,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 41
          },
          end: {
            line: 95,
            column: 81
          }
        }, {
          start: {
            line: 95,
            column: 85
          },
          end: {
            line: 95,
            column: 90
          }
        }],
        line: 95
      },
      "24": {
        loc: {
          start: {
            line: 99,
            column: 38
          },
          end: {
            line: 99,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 99,
            column: 53
          },
          end: {
            line: 99,
            column: 62
          }
        }, {
          start: {
            line: 99,
            column: 65
          },
          end: {
            line: 99,
            column: 75
          }
        }],
        line: 99
      },
      "25": {
        loc: {
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "26": {
        loc: {
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "27": {
        loc: {
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "28": {
        loc: {
          start: {
            line: 141,
            column: 18
          },
          end: {
            line: 141,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 141,
            column: 18
          },
          end: {
            line: 141,
            column: 29
          }
        }, {
          start: {
            line: 141,
            column: 33
          },
          end: {
            line: 141,
            column: 56
          }
        }],
        line: 141
      },
      "29": {
        loc: {
          start: {
            line: 142,
            column: 18
          },
          end: {
            line: 142,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 142,
            column: 18
          },
          end: {
            line: 142,
            column: 39
          }
        }, {
          start: {
            line: 142,
            column: 43
          },
          end: {
            line: 142,
            column: 47
          }
        }],
        line: 142
      },
      "30": {
        loc: {
          start: {
            line: 143,
            column: 22
          },
          end: {
            line: 143,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 143,
            column: 22
          },
          end: {
            line: 143,
            column: 35
          }
        }, {
          start: {
            line: 143,
            column: 39
          },
          end: {
            line: 143,
            column: 47
          }
        }],
        line: 143
      },
      "31": {
        loc: {
          start: {
            line: 147,
            column: 17
          },
          end: {
            line: 147,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 147,
            column: 17
          },
          end: {
            line: 147,
            column: 50
          }
        }, {
          start: {
            line: 147,
            column: 54
          },
          end: {
            line: 147,
            column: 55
          }
        }],
        line: 147
      },
      "32": {
        loc: {
          start: {
            line: 148,
            column: 31
          },
          end: {
            line: 148,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 31
          },
          end: {
            line: 148,
            column: 73
          }
        }, {
          start: {
            line: 148,
            column: 77
          },
          end: {
            line: 148,
            column: 82
          }
        }],
        line: 148
      },
      "33": {
        loc: {
          start: {
            line: 149,
            column: 37
          },
          end: {
            line: 149,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 149,
            column: 37
          },
          end: {
            line: 149,
            column: 77
          }
        }, {
          start: {
            line: 149,
            column: 81
          },
          end: {
            line: 149,
            column: 86
          }
        }],
        line: 149
      },
      "34": {
        loc: {
          start: {
            line: 188,
            column: 20
          },
          end: {
            line: 188,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 188,
            column: 20
          },
          end: {
            line: 188,
            column: 40
          }
        }, {
          start: {
            line: 188,
            column: 44
          },
          end: {
            line: 188,
            column: 57
          }
        }],
        line: 188
      },
      "35": {
        loc: {
          start: {
            line: 192,
            column: 30
          },
          end: {
            line: 192,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 192,
            column: 30
          },
          end: {
            line: 192,
            column: 80
          }
        }, {
          start: {
            line: 192,
            column: 84
          },
          end: {
            line: 192,
            column: 86
          }
        }],
        line: 192
      },
      "36": {
        loc: {
          start: {
            line: 193,
            column: 26
          },
          end: {
            line: 193,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 193,
            column: 26
          },
          end: {
            line: 193,
            column: 73
          }
        }, {
          start: {
            line: 193,
            column: 77
          },
          end: {
            line: 193,
            column: 79
          }
        }],
        line: 193
      },
      "37": {
        loc: {
          start: {
            line: 197,
            column: 4
          },
          end: {
            line: 231,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 4
          },
          end: {
            line: 231,
            column: 5
          }
        }, {
          start: {
            line: 213,
            column: 11
          },
          end: {
            line: 231,
            column: 5
          }
        }],
        line: 197
      },
      "38": {
        loc: {
          start: {
            line: 215,
            column: 32
          },
          end: {
            line: 217,
            column: 13
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 216,
            column: 12
          },
          end: {
            line: 216,
            column: 54
          }
        }, {
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 217,
            column: 13
          }
        }],
        line: 215
      },
      "39": {
        loc: {
          start: {
            line: 219,
            column: 31
          },
          end: {
            line: 221,
            column: 13
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 220,
            column: 12
          },
          end: {
            line: 220,
            column: 39
          }
        }, {
          start: {
            line: 221,
            column: 12
          },
          end: {
            line: 221,
            column: 13
          }
        }],
        line: 219
      },
      "40": {
        loc: {
          start: {
            line: 230,
            column: 26
          },
          end: {
            line: 230,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 230,
            column: 41
          },
          end: {
            line: 230,
            column: 53
          }
        }, {
          start: {
            line: 230,
            column: 56
          },
          end: {
            line: 230,
            column: 69
          }
        }],
        line: 230
      },
      "41": {
        loc: {
          start: {
            line: 234,
            column: 4
          },
          end: {
            line: 236,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 4
          },
          end: {
            line: 236,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "42": {
        loc: {
          start: {
            line: 237,
            column: 4
          },
          end: {
            line: 239,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 4
          },
          end: {
            line: 239,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "43": {
        loc: {
          start: {
            line: 255,
            column: 4
          },
          end: {
            line: 258,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 4
          },
          end: {
            line: 258,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 255
      },
      "44": {
        loc: {
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 255,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 255,
            column: 21
          }
        }, {
          start: {
            line: 255,
            column: 25
          },
          end: {
            line: 255,
            column: 29
          }
        }],
        line: 255
      },
      "45": {
        loc: {
          start: {
            line: 361,
            column: 8
          },
          end: {
            line: 363,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 361,
            column: 8
          },
          end: {
            line: 363,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 361
      },
      "46": {
        loc: {
          start: {
            line: 398,
            column: 4
          },
          end: {
            line: 398,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 398,
            column: 4
          },
          end: {
            line: 398,
            column: 22
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 398
      },
      "47": {
        loc: {
          start: {
            line: 403,
            column: 4
          },
          end: {
            line: 442,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 403,
            column: 4
          },
          end: {
            line: 442,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 403
      },
      "48": {
        loc: {
          start: {
            line: 405,
            column: 12
          },
          end: {
            line: 405,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 405,
            column: 12
          },
          end: {
            line: 405,
            column: 48
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 405
      },
      "49": {
        loc: {
          start: {
            line: 405,
            column: 16
          },
          end: {
            line: 405,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 405,
            column: 16
          },
          end: {
            line: 405,
            column: 21
          }
        }, {
          start: {
            line: 405,
            column: 25
          },
          end: {
            line: 405,
            column: 39
          }
        }],
        line: 405
      },
      "50": {
        loc: {
          start: {
            line: 411,
            column: 12
          },
          end: {
            line: 417,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 411,
            column: 12
          },
          end: {
            line: 417,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 411
      },
      "51": {
        loc: {
          start: {
            line: 411,
            column: 16
          },
          end: {
            line: 411,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 411,
            column: 16
          },
          end: {
            line: 411,
            column: 47
          }
        }, {
          start: {
            line: 411,
            column: 51
          },
          end: {
            line: 411,
            column: 79
          }
        }],
        line: 411
      },
      "52": {
        loc: {
          start: {
            line: 414,
            column: 16
          },
          end: {
            line: 416,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 414,
            column: 16
          },
          end: {
            line: 416,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 414
      },
      "53": {
        loc: {
          start: {
            line: 420,
            column: 12
          },
          end: {
            line: 422,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 420,
            column: 12
          },
          end: {
            line: 422,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 420
      },
      "54": {
        loc: {
          start: {
            line: 425,
            column: 12
          },
          end: {
            line: 427,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 425,
            column: 12
          },
          end: {
            line: 427,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 425
      },
      "55": {
        loc: {
          start: {
            line: 430,
            column: 12
          },
          end: {
            line: 432,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 430,
            column: 12
          },
          end: {
            line: 432,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 430
      },
      "56": {
        loc: {
          start: {
            line: 449,
            column: 4
          },
          end: {
            line: 451,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 449,
            column: 4
          },
          end: {
            line: 451,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 449
      },
      "57": {
        loc: {
          start: {
            line: 449,
            column: 8
          },
          end: {
            line: 449,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 449,
            column: 8
          },
          end: {
            line: 449,
            column: 13
          }
        }, {
          start: {
            line: 449,
            column: 17
          },
          end: {
            line: 449,
            column: 31
          }
        }],
        line: 449
      },
      "58": {
        loc: {
          start: {
            line: 482,
            column: 4
          },
          end: {
            line: 508,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 483,
            column: 8
          },
          end: {
            line: 495,
            column: 18
          }
        }, {
          start: {
            line: 497,
            column: 8
          },
          end: {
            line: 503,
            column: 18
          }
        }, {
          start: {
            line: 505,
            column: 8
          },
          end: {
            line: 507,
            column: 18
          }
        }],
        line: 482
      },
      "59": {
        loc: {
          start: {
            line: 492,
            column: 12
          },
          end: {
            line: 494,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 492,
            column: 12
          },
          end: {
            line: 494,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 492
      },
      "60": {
        loc: {
          start: {
            line: 492,
            column: 16
          },
          end: {
            line: 492,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 492,
            column: 16
          },
          end: {
            line: 492,
            column: 20
          }
        }, {
          start: {
            line: 492,
            column: 24
          },
          end: {
            line: 492,
            column: 69
          }
        }],
        line: 492
      },
      "61": {
        loc: {
          start: {
            line: 511,
            column: 4
          },
          end: {
            line: 514,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 511,
            column: 4
          },
          end: {
            line: 514,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 511
      },
      "62": {
        loc: {
          start: {
            line: 521,
            column: 4
          },
          end: {
            line: 523,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 521,
            column: 4
          },
          end: {
            line: 523,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 521
      },
      "63": {
        loc: {
          start: {
            line: 521,
            column: 8
          },
          end: {
            line: 521,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 521,
            column: 8
          },
          end: {
            line: 521,
            column: 13
          }
        }, {
          start: {
            line: 521,
            column: 17
          },
          end: {
            line: 521,
            column: 54
          }
        }],
        line: 521
      },
      "64": {
        loc: {
          start: {
            line: 542,
            column: 4
          },
          end: {
            line: 559,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 542,
            column: 4
          },
          end: {
            line: 559,
            column: 5
          }
        }, {
          start: {
            line: 549,
            column: 9
          },
          end: {
            line: 559,
            column: 5
          }
        }],
        line: 542
      },
      "65": {
        loc: {
          start: {
            line: 542,
            column: 8
          },
          end: {
            line: 542,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 542,
            column: 8
          },
          end: {
            line: 542,
            column: 32
          }
        }, {
          start: {
            line: 542,
            column: 36
          },
          end: {
            line: 542,
            column: 79
          }
        }],
        line: 542
      },
      "66": {
        loc: {
          start: {
            line: 549,
            column: 9
          },
          end: {
            line: 559,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 549,
            column: 9
          },
          end: {
            line: 559,
            column: 5
          }
        }, {
          start: {
            line: 556,
            column: 9
          },
          end: {
            line: 559,
            column: 5
          }
        }],
        line: 549
      },
      "67": {
        loc: {
          start: {
            line: 549,
            column: 13
          },
          end: {
            line: 549,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 549,
            column: 13
          },
          end: {
            line: 549,
            column: 37
          }
        }, {
          start: {
            line: 549,
            column: 41
          },
          end: {
            line: 549,
            column: 61
          }
        }],
        line: 549
      },
      "68": {
        loc: {
          start: {
            line: 556,
            column: 9
          },
          end: {
            line: 559,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 556,
            column: 9
          },
          end: {
            line: 559,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 556
      },
      "69": {
        loc: {
          start: {
            line: 573,
            column: 4
          },
          end: {
            line: 575,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 573,
            column: 4
          },
          end: {
            line: 575,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 573
      },
      "70": {
        loc: {
          start: {
            line: 582,
            column: 4
          },
          end: {
            line: 587,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 582,
            column: 4
          },
          end: {
            line: 587,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 582
      },
      "71": {
        loc: {
          start: {
            line: 619,
            column: 27
          },
          end: {
            line: 619,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 619,
            column: 36
          },
          end: {
            line: 619,
            column: 38
          }
        }],
        line: 619
      },
      "72": {
        loc: {
          start: {
            line: 619,
            column: 40
          },
          end: {
            line: 619,
            column: 56
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 619,
            column: 52
          },
          end: {
            line: 619,
            column: 56
          }
        }],
        line: 619
      },
      "73": {
        loc: {
          start: {
            line: 632,
            column: 53
          },
          end: {
            line: 632,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 632,
            column: 53
          },
          end: {
            line: 632,
            column: 72
          }
        }, {
          start: {
            line: 632,
            column: 76
          },
          end: {
            line: 632,
            column: 77
          }
        }],
        line: 632
      },
      "74": {
        loc: {
          start: {
            line: 652,
            column: 53
          },
          end: {
            line: 652,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 652,
            column: 53
          },
          end: {
            line: 652,
            column: 72
          }
        }, {
          start: {
            line: 652,
            column: 76
          },
          end: {
            line: 652,
            column: 77
          }
        }],
        line: 652
      },
      "75": {
        loc: {
          start: {
            line: 707,
            column: 4
          },
          end: {
            line: 709,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 707,
            column: 4
          },
          end: {
            line: 709,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 707
      },
      "76": {
        loc: {
          start: {
            line: 707,
            column: 8
          },
          end: {
            line: 707,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 707,
            column: 8
          },
          end: {
            line: 707,
            column: 22
          }
        }, {
          start: {
            line: 707,
            column: 26
          },
          end: {
            line: 707,
            column: 31
          }
        }],
        line: 707
      },
      "77": {
        loc: {
          start: {
            line: 742,
            column: 8
          },
          end: {
            line: 749,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 742,
            column: 8
          },
          end: {
            line: 749,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 742
      },
      "78": {
        loc: {
          start: {
            line: 764,
            column: 8
          },
          end: {
            line: 766,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 764,
            column: 8
          },
          end: {
            line: 766,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 764
      },
      "79": {
        loc: {
          start: {
            line: 764,
            column: 12
          },
          end: {
            line: 764,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 764,
            column: 12
          },
          end: {
            line: 764,
            column: 26
          }
        }, {
          start: {
            line: 764,
            column: 30
          },
          end: {
            line: 764,
            column: 35
          }
        }],
        line: 764
      },
      "80": {
        loc: {
          start: {
            line: 787,
            column: 8
          },
          end: {
            line: 789,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 787,
            column: 8
          },
          end: {
            line: 789,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 787
      },
      "81": {
        loc: {
          start: {
            line: 787,
            column: 12
          },
          end: {
            line: 787,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 787,
            column: 12
          },
          end: {
            line: 787,
            column: 26
          }
        }, {
          start: {
            line: 787,
            column: 30
          },
          end: {
            line: 787,
            column: 35
          }
        }],
        line: 787
      },
      "82": {
        loc: {
          start: {
            line: 867,
            column: 38
          },
          end: {
            line: 867,
            column: 64
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 867,
            column: 50
          },
          end: {
            line: 867,
            column: 64
          }
        }],
        line: 867
      },
      "83": {
        loc: {
          start: {
            line: 934,
            column: 8
          },
          end: {
            line: 934,
            column: 119
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 934,
            column: 8
          },
          end: {
            line: 934,
            column: 119
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 934
      },
      "84": {
        loc: {
          start: {
            line: 935,
            column: 8
          },
          end: {
            line: 935,
            column: 134
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 935,
            column: 8
          },
          end: {
            line: 935,
            column: 134
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 935
      },
      "85": {
        loc: {
          start: {
            line: 959,
            column: 8
          },
          end: {
            line: 966,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 959,
            column: 8
          },
          end: {
            line: 966,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 959
      },
      "86": {
        loc: {
          start: {
            line: 970,
            column: 12
          },
          end: {
            line: 978,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 970,
            column: 12
          },
          end: {
            line: 978,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 970
      },
      "87": {
        loc: {
          start: {
            line: 970,
            column: 16
          },
          end: {
            line: 970,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 970,
            column: 16
          },
          end: {
            line: 970,
            column: 39
          }
        }, {
          start: {
            line: 970,
            column: 43
          },
          end: {
            line: 970,
            column: 66
          }
        }],
        line: 970
      },
      "88": {
        loc: {
          start: {
            line: 1018,
            column: 4
          },
          end: {
            line: 1020,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1018,
            column: 4
          },
          end: {
            line: 1020,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1018
      },
      "89": {
        loc: {
          start: {
            line: 1021,
            column: 4
          },
          end: {
            line: 1023,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1021,
            column: 4
          },
          end: {
            line: 1023,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1021
      },
      "90": {
        loc: {
          start: {
            line: 1024,
            column: 4
          },
          end: {
            line: 1026,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1024,
            column: 4
          },
          end: {
            line: 1026,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1024
      },
      "91": {
        loc: {
          start: {
            line: 1027,
            column: 4
          },
          end: {
            line: 1029,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1027,
            column: 4
          },
          end: {
            line: 1029,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1027
      },
      "92": {
        loc: {
          start: {
            line: 1045,
            column: 11
          },
          end: {
            line: 1045,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1045,
            column: 11
          },
          end: {
            line: 1045,
            column: 28
          }
        }, {
          start: {
            line: 1045,
            column: 32
          },
          end: {
            line: 1045,
            column: 74
          }
        }],
        line: 1045
      },
      "93": {
        loc: {
          start: {
            line: 1051,
            column: 31
          },
          end: {
            line: 1051,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1051,
            column: 40
          },
          end: {
            line: 1051,
            column: 42
          }
        }],
        line: 1051
      },
      "94": {
        loc: {
          start: {
            line: 1051,
            column: 44
          },
          end: {
            line: 1051,
            column: 63
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 1051,
            column: 61
          },
          end: {
            line: 1051,
            column: 63
          }
        }],
        line: 1051
      },
      "95": {
        loc: {
          start: {
            line: 1052,
            column: 4
          },
          end: {
            line: 1059,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1052,
            column: 4
          },
          end: {
            line: 1059,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1052
      },
      "96": {
        loc: {
          start: {
            line: 1056,
            column: 8
          },
          end: {
            line: 1058,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1056,
            column: 8
          },
          end: {
            line: 1058,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1056
      },
      "97": {
        loc: {
          start: {
            line: 1069,
            column: 4
          },
          end: {
            line: 1074,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1069,
            column: 4
          },
          end: {
            line: 1074,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1069
      },
      "98": {
        loc: {
          start: {
            line: 1086,
            column: 8
          },
          end: {
            line: 1088,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1086,
            column: 8
          },
          end: {
            line: 1088,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1086
      },
      "99": {
        loc: {
          start: {
            line: 1086,
            column: 12
          },
          end: {
            line: 1086,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 1086,
            column: 12
          },
          end: {
            line: 1086,
            column: 26
          }
        }, {
          start: {
            line: 1086,
            column: 30
          },
          end: {
            line: 1086,
            column: 35
          }
        }],
        line: 1086
      },
      "100": {
        loc: {
          start: {
            line: 1161,
            column: 12
          },
          end: {
            line: 1163,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1161,
            column: 12
          },
          end: {
            line: 1163,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1161
      },
      "101": {
        loc: {
          start: {
            line: 1176,
            column: 4
          },
          end: {
            line: 1179,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 1176,
            column: 4
          },
          end: {
            line: 1179,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 1176
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0,
      "308": 0,
      "309": 0,
      "310": 0,
      "311": 0,
      "312": 0,
      "313": 0,
      "314": 0,
      "315": 0,
      "316": 0,
      "317": 0,
      "318": 0,
      "319": 0,
      "320": 0,
      "321": 0,
      "322": 0,
      "323": 0,
      "324": 0,
      "325": 0,
      "326": 0,
      "327": 0,
      "328": 0,
      "329": 0,
      "330": 0,
      "331": 0,
      "332": 0,
      "333": 0,
      "334": 0,
      "335": 0,
      "336": 0,
      "337": 0,
      "338": 0,
      "339": 0,
      "340": 0,
      "341": 0,
      "342": 0,
      "343": 0,
      "344": 0,
      "345": 0,
      "346": 0,
      "347": 0,
      "348": 0,
      "349": 0,
      "350": 0,
      "351": 0,
      "352": 0,
      "353": 0,
      "354": 0,
      "355": 0,
      "356": 0,
      "357": 0,
      "358": 0,
      "359": 0,
      "360": 0,
      "361": 0,
      "362": 0,
      "363": 0,
      "364": 0,
      "365": 0,
      "366": 0,
      "367": 0,
      "368": 0,
      "369": 0,
      "370": 0,
      "371": 0,
      "372": 0,
      "373": 0,
      "374": 0,
      "375": 0,
      "376": 0,
      "377": 0,
      "378": 0,
      "379": 0,
      "380": 0,
      "381": 0,
      "382": 0,
      "383": 0,
      "384": 0,
      "385": 0,
      "386": 0,
      "387": 0,
      "388": 0,
      "389": 0,
      "390": 0,
      "391": 0,
      "392": 0,
      "393": 0,
      "394": 0,
      "395": 0,
      "396": 0,
      "397": 0,
      "398": 0,
      "399": 0,
      "400": 0,
      "401": 0,
      "402": 0,
      "403": 0,
      "404": 0,
      "405": 0,
      "406": 0,
      "407": 0,
      "408": 0,
      "409": 0,
      "410": 0,
      "411": 0,
      "412": 0,
      "413": 0,
      "414": 0,
      "415": 0,
      "416": 0,
      "417": 0,
      "418": 0,
      "419": 0,
      "420": 0,
      "421": 0,
      "422": 0,
      "423": 0,
      "424": 0,
      "425": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0],
      "72": [0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0],
      "92": [0, 0],
      "93": [0],
      "94": [0],
      "95": [0, 0],
      "96": [0, 0],
      "97": [0, 0],
      "98": [0, 0],
      "99": [0, 0],
      "100": [0, 0],
      "101": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "455eb7ff664ead02f646944dfd2ec9b0373b76f0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_auk92v9qg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_auk92v9qg();
cov_auk92v9qg().s[0]++;
// Load environment variables first
require('dotenv').config();

// CIRCUIT BREAKER FIX: Use new database connection manager with integrated circuit breaker
const databaseManager =
/* istanbul ignore next */
(cov_auk92v9qg().s[1]++, require('./databaseConnectionManager'));

// Legacy imports for compatibility (will be removed in future versions)
const {
  Pool
} =
/* istanbul ignore next */
(cov_auk92v9qg().s[2]++, require('pg'));
const {
  SecretsManagerClient,
  GetSecretValueCommand
} =
/* istanbul ignore next */
(cov_auk92v9qg().s[3]++, require('@aws-sdk/client-secrets-manager'));
const {
  getTimeout,
  withDatabaseTimeout
} =
/* istanbul ignore next */
(cov_auk92v9qg().s[4]++, require('./timeoutManager'));
const ConnectionRetry =
/* istanbul ignore next */
(cov_auk92v9qg().s[5]++, require('./connectionRetry'));

// Legacy global state (for backward compatibility)
let pool =
/* istanbul ignore next */
(cov_auk92v9qg().s[6]++, null);
let dbInitialized =
/* istanbul ignore next */
(cov_auk92v9qg().s[7]++, false);
let dbConfig =
/* istanbul ignore next */
(cov_auk92v9qg().s[8]++, null);

// Initialize connection retry utility (legacy)
const connectionRetry =
/* istanbul ignore next */
(cov_auk92v9qg().s[9]++, new ConnectionRetry({
  maxRetries: 3,
  initialDelay: 1000,
  maxDelay: 10000,
  backoffMultiplier: 2
}));

// Configure AWS SDK for Secrets Manager
const secretsManager =
/* istanbul ignore next */
(cov_auk92v9qg().s[10]++, new SecretsManagerClient({
  region:
  /* istanbul ignore next */
  (cov_auk92v9qg().b[0][0]++, process.env.WEBAPP_AWS_REGION) ||
  /* istanbul ignore next */
  (cov_auk92v9qg().b[0][1]++, process.env.AWS_REGION) ||
  /* istanbul ignore next */
  (cov_auk92v9qg().b[0][2]++, 'us-east-1')
}));

/**
 * Get database configuration from environment variables or AWS Secrets Manager with enhanced error handling
 */
async function getDbConfig() {
  /* istanbul ignore next */
  cov_auk92v9qg().f[0]++;
  cov_auk92v9qg().s[11]++;
  if (dbConfig) {
    /* istanbul ignore next */
    cov_auk92v9qg().b[1][0]++;
    cov_auk92v9qg().s[12]++;
    console.log('✅ Using cached database config');
    /* istanbul ignore next */
    cov_auk92v9qg().s[13]++;
    return dbConfig;
  } else
  /* istanbul ignore next */
  {
    cov_auk92v9qg().b[1][1]++;
  }
  const configStart =
  /* istanbul ignore next */
  (cov_auk92v9qg().s[14]++, Date.now());
  /* istanbul ignore next */
  cov_auk92v9qg().s[15]++;
  try {
    /* istanbul ignore next */
    cov_auk92v9qg().s[16]++;
    // First try direct environment variables (full set)
    if (
    /* istanbul ignore next */
    (cov_auk92v9qg().b[3][0]++, process.env.DB_HOST) &&
    /* istanbul ignore next */
    (cov_auk92v9qg().b[3][1]++, process.env.DB_USER) &&
    /* istanbul ignore next */
    (cov_auk92v9qg().b[3][2]++, process.env.DB_PASSWORD)) {
      /* istanbul ignore next */
      cov_auk92v9qg().b[2][0]++;
      cov_auk92v9qg().s[17]++;
      console.log('🔧 Using complete direct database environment variables');
      /* istanbul ignore next */
      cov_auk92v9qg().s[18]++;
      dbConfig = {
        host:
        /* istanbul ignore next */
        (cov_auk92v9qg().b[4][0]++, process.env.DB_HOST) ||
        /* istanbul ignore next */
        (cov_auk92v9qg().b[4][1]++, process.env.DB_ENDPOINT),
        port:
        /* istanbul ignore next */
        (cov_auk92v9qg().b[5][0]++, parseInt(process.env.DB_PORT)) ||
        /* istanbul ignore next */
        (cov_auk92v9qg().b[5][1]++, 5432),
        database:
        /* istanbul ignore next */
        (cov_auk92v9qg().b[6][0]++, process.env.DB_NAME) ||
        /* istanbul ignore next */
        (cov_auk92v9qg().b[6][1]++, process.env.DB_DATABASE) ||
        /* istanbul ignore next */
        (cov_auk92v9qg().b[6][2]++, 'stocks'),
        user:
        /* istanbul ignore next */
        (cov_auk92v9qg().b[7][0]++, process.env.DB_USER) ||
        /* istanbul ignore next */
        (cov_auk92v9qg().b[7][1]++, process.env.DB_USERNAME),
        password: process.env.DB_PASSWORD,
        ssl: process.env.DB_SSL === 'true' ?
        /* istanbul ignore next */
        (cov_auk92v9qg().b[8][0]++, {
          rejectUnauthorized: false
        }) :
        /* istanbul ignore next */
        (cov_auk92v9qg().b[8][1]++, false),
        max:
        /* istanbul ignore next */
        (cov_auk92v9qg().b[9][0]++, parseInt(process.env.DB_POOL_MAX)) ||
        /* istanbul ignore next */
        (cov_auk92v9qg().b[9][1]++, 3),
        idleTimeoutMillis:
        /* istanbul ignore next */
        (cov_auk92v9qg().b[10][0]++, parseInt(process.env.DB_POOL_IDLE_TIMEOUT)) ||
        /* istanbul ignore next */
        (cov_auk92v9qg().b[10][1]++, 30000),
        connectionTimeoutMillis:
        /* istanbul ignore next */
        (cov_auk92v9qg().b[11][0]++, parseInt(process.env.DB_CONNECT_TIMEOUT)) ||
        /* istanbul ignore next */
        (cov_auk92v9qg().b[11][1]++, 20000)
      };
      /* istanbul ignore next */
      cov_auk92v9qg().s[19]++;
      console.log('✅ Database config loaded from complete environment variables');
      /* istanbul ignore next */
      cov_auk92v9qg().s[20]++;
      console.log(`   🔒 SSL: ${dbConfig.ssl ?
      /* istanbul ignore next */
      (cov_auk92v9qg().b[12][0]++, 'enabled') :
      /* istanbul ignore next */
      (cov_auk92v9qg().b[12][1]++, 'disabled')}`);
      /* istanbul ignore next */
      cov_auk92v9qg().s[21]++;
      console.log(`   🏊 Pool Max: ${dbConfig.max}`);
      /* istanbul ignore next */
      cov_auk92v9qg().s[22]++;
      console.log(`   🏗️ Host: ${dbConfig.host}:${dbConfig.port}`);
      /* istanbul ignore next */
      cov_auk92v9qg().s[23]++;
      console.log(`   📚 Database: ${dbConfig.database}`);
      /* istanbul ignore next */
      cov_auk92v9qg().s[24]++;
      console.log(`   👤 User: ${dbConfig.user}`);
      /* istanbul ignore next */
      cov_auk92v9qg().s[25]++;
      return dbConfig;
    } else
    /* istanbul ignore next */
    {
      cov_auk92v9qg().b[2][1]++;
    }

    // Hybrid approach: use environment variables but get password from secret
    cov_auk92v9qg().s[26]++;
    if (
    /* istanbul ignore next */
    (cov_auk92v9qg().b[14][0]++, process.env.DB_HOST) &&
    /* istanbul ignore next */
    (cov_auk92v9qg().b[14][1]++, process.env.DB_USER) &&
    /* istanbul ignore next */
    (cov_auk92v9qg().b[14][2]++, process.env.DB_SECRET_ARN)) {
      /* istanbul ignore next */
      cov_auk92v9qg().b[13][0]++;
      cov_auk92v9qg().s[27]++;
      console.log('🔧 Using hybrid approach: env vars + secret for password');
      const secretArn =
      /* istanbul ignore next */
      (cov_auk92v9qg().s[28]++, process.env.DB_SECRET_ARN);
      /* istanbul ignore next */
      cov_auk92v9qg().s[29]++;
      console.log(`🔑 Getting password from Secrets Manager: ${secretArn}`);

      // Use diagnostic tool to get password from secret
      const SecretsManagerDiagnostic =
      /* istanbul ignore next */
      (cov_auk92v9qg().s[30]++, require('./secretsManagerDiagnostic'));
      const diagnostic =
      /* istanbul ignore next */
      (cov_auk92v9qg().s[31]++, new SecretsManagerDiagnostic());
      const diagnosis =
      /* istanbul ignore next */
      (cov_auk92v9qg().s[32]++, await diagnostic.diagnoseSecret(secretArn));
      /* istanbul ignore next */
      cov_auk92v9qg().s[33]++;
      if (!diagnosis.success) {
        /* istanbul ignore next */
        cov_auk92v9qg().b[15][0]++;
        cov_auk92v9qg().s[34]++;
        throw new Error(`Failed to get password from Secrets Manager: ${diagnosis.error}`);
      } else
      /* istanbul ignore next */
      {
        cov_auk92v9qg().b[15][1]++;
      }
      const secret =
      /* istanbul ignore next */
      (cov_auk92v9qg().s[35]++, diagnosis.config);
      /* istanbul ignore next */
      cov_auk92v9qg().s[36]++;
      dbConfig = {
        host:
        /* istanbul ignore next */
        (cov_auk92v9qg().b[16][0]++, process.env.DB_HOST) ||
        /* istanbul ignore next */
        (cov_auk92v9qg().b[16][1]++, process.env.DB_ENDPOINT),
        port:
        /* istanbul ignore next */
        (cov_auk92v9qg().b[17][0]++, parseInt(process.env.DB_PORT)) ||
        /* istanbul ignore next */
        (cov_auk92v9qg().b[17][1]++, 5432),
        database:
        /* istanbul ignore next */
        (cov_auk92v9qg().b[18][0]++, process.env.DB_NAME) ||
        /* istanbul ignore next */
        (cov_auk92v9qg().b[18][1]++, process.env.DB_DATABASE) ||
        /* istanbul ignore next */
        (cov_auk92v9qg().b[18][2]++, 'stocks'),
        user:
        /* istanbul ignore next */
        (cov_auk92v9qg().b[19][0]++, process.env.DB_USER) ||
        /* istanbul ignore next */
        (cov_auk92v9qg().b[19][1]++, process.env.DB_USERNAME),
        password: secret.password,
        // Password from secret
        ssl: process.env.DB_SSL === 'true' ?
        /* istanbul ignore next */
        (cov_auk92v9qg().b[20][0]++, {
          rejectUnauthorized: false
        }) :
        /* istanbul ignore next */
        (cov_auk92v9qg().b[20][1]++, false),
        max:
        /* istanbul ignore next */
        (cov_auk92v9qg().b[21][0]++, parseInt(process.env.DB_POOL_MAX)) ||
        /* istanbul ignore next */
        (cov_auk92v9qg().b[21][1]++, 3),
        idleTimeoutMillis:
        /* istanbul ignore next */
        (cov_auk92v9qg().b[22][0]++, parseInt(process.env.DB_POOL_IDLE_TIMEOUT)) ||
        /* istanbul ignore next */
        (cov_auk92v9qg().b[22][1]++, 30000),
        connectionTimeoutMillis:
        /* istanbul ignore next */
        (cov_auk92v9qg().b[23][0]++, parseInt(process.env.DB_CONNECT_TIMEOUT)) ||
        /* istanbul ignore next */
        (cov_auk92v9qg().b[23][1]++, 20000)
      };
      /* istanbul ignore next */
      cov_auk92v9qg().s[37]++;
      console.log('✅ Database config loaded from hybrid env vars + secret');
      /* istanbul ignore next */
      cov_auk92v9qg().s[38]++;
      console.log(`   🔒 SSL: ${dbConfig.ssl ?
      /* istanbul ignore next */
      (cov_auk92v9qg().b[24][0]++, 'enabled') :
      /* istanbul ignore next */
      (cov_auk92v9qg().b[24][1]++, 'disabled')}`);
      /* istanbul ignore next */
      cov_auk92v9qg().s[39]++;
      console.log(`   🏊 Pool Max: ${dbConfig.max}`);
      /* istanbul ignore next */
      cov_auk92v9qg().s[40]++;
      console.log(`   🏗️ Host: ${dbConfig.host}:${dbConfig.port}`);
      /* istanbul ignore next */
      cov_auk92v9qg().s[41]++;
      console.log(`   📚 Database: ${dbConfig.database}`);
      /* istanbul ignore next */
      cov_auk92v9qg().s[42]++;
      console.log(`   👤 User: ${dbConfig.user}`);
      /* istanbul ignore next */
      cov_auk92v9qg().s[43]++;
      return dbConfig;
    } else
    /* istanbul ignore next */
    {
      cov_auk92v9qg().b[13][1]++;
    }

    // Fallback to Secrets Manager if environment variables not available
    const secretArn =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[44]++, process.env.DB_SECRET_ARN);
    /* istanbul ignore next */
    cov_auk92v9qg().s[45]++;
    if (!secretArn) {
      /* istanbul ignore next */
      cov_auk92v9qg().b[25][0]++;
      cov_auk92v9qg().s[46]++;
      throw new Error(`Database configuration incomplete. Available: DB_HOST=${!!process.env.DB_HOST}, DB_USER=${!!process.env.DB_USER}, DB_PASSWORD=${!!process.env.DB_PASSWORD}, DB_SECRET_ARN=${!!process.env.DB_SECRET_ARN}. Need either complete env vars or DB_SECRET_ARN.`);
    } else
    /* istanbul ignore next */
    {
      cov_auk92v9qg().b[25][1]++;
    }
    cov_auk92v9qg().s[47]++;
    console.log(`🔑 Getting DB credentials from Secrets Manager: ${secretArn}`);
    const secretStart =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[48]++, Date.now());

    // Use diagnostic tool to properly handle secret retrieval
    const SecretsManagerDiagnostic =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[49]++, require('./secretsManagerDiagnostic'));
    const diagnostic =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[50]++, new SecretsManagerDiagnostic());
    const diagnosis =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[51]++, await diagnostic.diagnoseSecret(secretArn));
    /* istanbul ignore next */
    cov_auk92v9qg().s[52]++;
    console.log(`✅ Secrets Manager responded in ${Date.now() - secretStart}ms using method: ${diagnosis.method}`);
    /* istanbul ignore next */
    cov_auk92v9qg().s[53]++;
    if (!diagnosis.success) {
      /* istanbul ignore next */
      cov_auk92v9qg().b[26][0]++;
      cov_auk92v9qg().s[54]++;
      throw new Error(`Secrets Manager diagnosis failed: ${diagnosis.error}`);
    } else
    /* istanbul ignore next */
    {
      cov_auk92v9qg().b[26][1]++;
    }
    const secret =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[55]++, diagnosis.config);

    // Validate required fields
    const requiredFields =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[56]++, ['host', 'username', 'password', 'dbname']);
    const missingFields =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[57]++, requiredFields.filter(field => {
      /* istanbul ignore next */
      cov_auk92v9qg().f[1]++;
      cov_auk92v9qg().s[58]++;
      return !secret[field];
    }));
    /* istanbul ignore next */
    cov_auk92v9qg().s[59]++;
    if (missingFields.length > 0) {
      /* istanbul ignore next */
      cov_auk92v9qg().b[27][0]++;
      cov_auk92v9qg().s[60]++;
      console.error('❌ Missing required database fields:', missingFields);
      /* istanbul ignore next */
      cov_auk92v9qg().s[61]++;
      console.error('❌ Available fields:', Object.keys(secret));
      /* istanbul ignore next */
      cov_auk92v9qg().s[62]++;
      throw new Error(`Missing required database configuration fields: ${missingFields.join(', ')}`);
    } else
    /* istanbul ignore next */
    {
      cov_auk92v9qg().b[27][1]++;
    }
    cov_auk92v9qg().s[63]++;
    dbConfig = {
      host:
      /* istanbul ignore next */
      (cov_auk92v9qg().b[28][0]++, secret.host) ||
      /* istanbul ignore next */
      (cov_auk92v9qg().b[28][1]++, process.env.DB_ENDPOINT),
      port:
      /* istanbul ignore next */
      (cov_auk92v9qg().b[29][0]++, parseInt(secret.port)) ||
      /* istanbul ignore next */
      (cov_auk92v9qg().b[29][1]++, 5432),
      database:
      /* istanbul ignore next */
      (cov_auk92v9qg().b[30][0]++, secret.dbname) ||
      /* istanbul ignore next */
      (cov_auk92v9qg().b[30][1]++, 'stocks'),
      user: secret.username,
      password: secret.password,
      ssl: false,
      // Match working ECS task configuration - no SSL for RDS in public subnets
      max:
      /* istanbul ignore next */
      (cov_auk92v9qg().b[31][0]++, parseInt(process.env.DB_POOL_MAX)) ||
      /* istanbul ignore next */
      (cov_auk92v9qg().b[31][1]++, 3),
      idleTimeoutMillis:
      /* istanbul ignore next */
      (cov_auk92v9qg().b[32][0]++, parseInt(process.env.DB_POOL_IDLE_TIMEOUT)) ||
      /* istanbul ignore next */
      (cov_auk92v9qg().b[32][1]++, 30000),
      connectionTimeoutMillis:
      /* istanbul ignore next */
      (cov_auk92v9qg().b[33][0]++, parseInt(process.env.DB_CONNECT_TIMEOUT)) ||
      /* istanbul ignore next */
      (cov_auk92v9qg().b[33][1]++, 20000)
    };
    /* istanbul ignore next */
    cov_auk92v9qg().s[64]++;
    console.log('✅ Database config loaded from Secrets Manager successfully');
    /* istanbul ignore next */
    cov_auk92v9qg().s[65]++;
    console.log(`   🔒 SSL: disabled (matching working ECS task configuration)`);
    /* istanbul ignore next */
    cov_auk92v9qg().s[66]++;
    console.log(`   🏊 Pool Max: ${dbConfig.max}`);
    /* istanbul ignore next */
    cov_auk92v9qg().s[67]++;
    console.log(`   🏗️ Host: ${dbConfig.host}:${dbConfig.port}`);
    /* istanbul ignore next */
    cov_auk92v9qg().s[68]++;
    console.log(`   📚 Database: ${dbConfig.database}`);
    /* istanbul ignore next */
    cov_auk92v9qg().s[69]++;
    console.log(`   👤 User: ${dbConfig.user}`);
    /* istanbul ignore next */
    cov_auk92v9qg().s[70]++;
    return dbConfig;
  } catch (error) {
    /* istanbul ignore next */
    cov_auk92v9qg().s[71]++;
    console.error('❌ Failed to get database config:', error.message);
    /* istanbul ignore next */
    cov_auk92v9qg().s[72]++;
    console.error('❌ Error details:', {
      code: error.code,
      stack: error.stack?.split('\n').slice(0, 3).join('\n')
    });

    // Provide helpful troubleshooting info
    /* istanbul ignore next */
    cov_auk92v9qg().s[73]++;
    console.error('❌ Database configuration troubleshooting:');
    /* istanbul ignore next */
    cov_auk92v9qg().s[74]++;
    console.error('   Set DB_HOST, DB_USER, DB_PASSWORD environment variables');
    /* istanbul ignore next */
    cov_auk92v9qg().s[75]++;
    console.error('   Current environment variables:', {
      DB_HOST: !!process.env.DB_HOST,
      DB_USER: !!process.env.DB_USER,
      DB_PASSWORD: !!process.env.DB_PASSWORD,
      DB_SECRET_ARN: !!process.env.DB_SECRET_ARN,
      DB_ENDPOINT: !!process.env.DB_ENDPOINT
    });
    /* istanbul ignore next */
    cov_auk92v9qg().s[76]++;
    throw error;
  }
}

/**
 * Calculate optimal pool configuration based on environment and expected load
 */
function calculateOptimalPoolConfig() {
  /* istanbul ignore next */
  cov_auk92v9qg().f[2]++;
  // Environment detection
  const isLambda =
  /* istanbul ignore next */
  (cov_auk92v9qg().s[77]++, !!process.env.AWS_LAMBDA_FUNCTION_NAME);
  const nodeEnv =
  /* istanbul ignore next */
  (cov_auk92v9qg().s[78]++,
  /* istanbul ignore next */
  (cov_auk92v9qg().b[34][0]++, process.env.NODE_ENV) ||
  /* istanbul ignore next */
  (cov_auk92v9qg().b[34][1]++, 'development'));
  const isProduction =
  /* istanbul ignore next */
  (cov_auk92v9qg().s[79]++, nodeEnv === 'production');

  // Lambda concurrent execution limits and expected load
  const lambdaConcurrency =
  /* istanbul ignore next */
  (cov_auk92v9qg().s[80]++,
  /* istanbul ignore next */
  (cov_auk92v9qg().b[35][0]++, parseInt(process.env.LAMBDA_CONCURRENT_EXECUTIONS)) ||
  /* istanbul ignore next */
  (cov_auk92v9qg().b[35][1]++, 10));
  const expectedUsers =
  /* istanbul ignore next */
  (cov_auk92v9qg().s[81]++,
  /* istanbul ignore next */
  (cov_auk92v9qg().b[36][0]++, parseInt(process.env.EXPECTED_CONCURRENT_USERS)) ||
  /* istanbul ignore next */
  (cov_auk92v9qg().b[36][1]++, 25));
  let poolConfig;
  /* istanbul ignore next */
  cov_auk92v9qg().s[82]++;
  if (isLambda) {
    /* istanbul ignore next */
    cov_auk92v9qg().b[37][0]++;
    // Lambda-specific pool configuration
    // Each Lambda execution needs 1-2 connections depending on the request
    const baseConnections =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[83]++, Math.min(lambdaConcurrency, 5)); // Base connections
    const maxConnections =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[84]++, Math.min(lambdaConcurrency * 2, 20)); // Max for bursts
    /* istanbul ignore next */
    cov_auk92v9qg().s[85]++;
    poolConfig = {
      min: Math.max(1, Math.floor(baseConnections / 2)),
      // Keep some connections alive
      max: maxConnections,
      // Aggressive acquisition for Lambda
      acquireTimeoutMillis: 8000,
      createTimeoutMillis: 15000
    };
    /* istanbul ignore next */
    cov_auk92v9qg().s[86]++;
    console.log(`🏊 Lambda pool config: ${poolConfig.min}-${poolConfig.max} connections for ${lambdaConcurrency} concurrent executions`);
  } else {
    /* istanbul ignore next */
    cov_auk92v9qg().b[37][1]++;
    // Local development or container-based deployment
    const baseConnections =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[87]++, isProduction ?
    /* istanbul ignore next */
    (cov_auk92v9qg().b[38][0]++, Math.min(Math.ceil(expectedUsers / 3), 15)) :
    /* istanbul ignore next */
    (// Production: assume 3 users per connection
    cov_auk92v9qg().b[38][1]++, 3)); // Development: small pool

    const maxConnections =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[88]++, isProduction ?
    /* istanbul ignore next */
    (cov_auk92v9qg().b[39][0]++, Math.min(expectedUsers, 50)) :
    /* istanbul ignore next */
    (// Production: scale with users
    cov_auk92v9qg().b[39][1]++, 5)); // Development: limited
    /* istanbul ignore next */
    cov_auk92v9qg().s[89]++;
    poolConfig = {
      min: Math.max(1, Math.floor(baseConnections / 2)),
      max: maxConnections,
      acquireTimeoutMillis: 10000,
      createTimeoutMillis: 20000
    };
    /* istanbul ignore next */
    cov_auk92v9qg().s[90]++;
    console.log(`🏊 ${isProduction ?
    /* istanbul ignore next */
    (cov_auk92v9qg().b[40][0]++, 'Production') :
    /* istanbul ignore next */
    (cov_auk92v9qg().b[40][1]++, 'Development')} pool config: ${poolConfig.min}-${poolConfig.max} connections for ${expectedUsers} expected users`);
  }

  // Override from environment variables if provided
  /* istanbul ignore next */
  cov_auk92v9qg().s[91]++;
  if (process.env.DB_POOL_MIN) {
    /* istanbul ignore next */
    cov_auk92v9qg().b[41][0]++;
    cov_auk92v9qg().s[92]++;
    poolConfig.min = parseInt(process.env.DB_POOL_MIN);
  } else
  /* istanbul ignore next */
  {
    cov_auk92v9qg().b[41][1]++;
  }
  cov_auk92v9qg().s[93]++;
  if (process.env.DB_POOL_MAX) {
    /* istanbul ignore next */
    cov_auk92v9qg().b[42][0]++;
    cov_auk92v9qg().s[94]++;
    poolConfig.max = parseInt(process.env.DB_POOL_MAX);
  } else
  /* istanbul ignore next */
  {
    cov_auk92v9qg().b[42][1]++;
  }

  // Validate configuration
  cov_auk92v9qg().s[95]++;
  poolConfig.min = Math.max(1, poolConfig.min);
  /* istanbul ignore next */
  cov_auk92v9qg().s[96]++;
  poolConfig.max = Math.max(poolConfig.min, poolConfig.max);
  /* istanbul ignore next */
  cov_auk92v9qg().s[97]++;
  poolConfig.max = Math.min(poolConfig.max, 100); // Hard limit for safety
  /* istanbul ignore next */
  cov_auk92v9qg().s[98]++;
  console.log(`🎯 Final pool configuration: min=${poolConfig.min}, max=${poolConfig.max}`);
  /* istanbul ignore next */
  cov_auk92v9qg().s[99]++;
  return poolConfig;
}

/**
 * Initialize database connection pool
 */
async function initializeDatabase() {
  /* istanbul ignore next */
  cov_auk92v9qg().f[3]++;
  cov_auk92v9qg().s[100]++;
  if (
  /* istanbul ignore next */
  (cov_auk92v9qg().b[44][0]++, dbInitialized) &&
  /* istanbul ignore next */
  (cov_auk92v9qg().b[44][1]++, pool)) {
    /* istanbul ignore next */
    cov_auk92v9qg().b[43][0]++;
    cov_auk92v9qg().s[101]++;
    console.log('✅ Database already initialized, returning existing pool');
    /* istanbul ignore next */
    cov_auk92v9qg().s[102]++;
    return pool;
  } else
  /* istanbul ignore next */
  {
    cov_auk92v9qg().b[43][1]++;
  }
  const initStart =
  /* istanbul ignore next */
  (cov_auk92v9qg().s[103]++, Date.now());
  /* istanbul ignore next */
  cov_auk92v9qg().s[104]++;
  try {
    /* istanbul ignore next */
    cov_auk92v9qg().s[105]++;
    console.log('🔄 Initializing database connection pool...');
    const configStart =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[106]++, Date.now());
    const config =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[107]++, await getDbConfig());
    /* istanbul ignore next */
    cov_auk92v9qg().s[108]++;
    console.log(`✅ Database config retrieved in ${Date.now() - configStart}ms`);

    // Dynamic connection pool sizing based on Lambda concurrency
    const dynamicPoolConfig =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[109]++, calculateOptimalPoolConfig());
    const poolConfig =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[110]++, {
      ...config,
      ...dynamicPoolConfig,
      idleTimeoutMillis: 30000,
      // Longer timeout for Lambda
      connectionTimeoutMillis: 15000,
      // Longer timeout for cold starts
      acquireTimeoutMillis: 10000,
      // Longer acquire timeout for cold starts
      createTimeoutMillis: 15000,
      // Longer create timeout for cold starts
      destroyTimeoutMillis: 5000,
      // Keep destroy timeout short
      createRetryIntervalMillis: 1000,
      // Slower retry for stability
      reapIntervalMillis: 5000,
      // Less frequent cleanup for Lambda
      keepAlive: true,
      // Keep connections alive
      keepAliveInitialDelayMillis: 10000,
      // Advanced pool management
      allowExitOnIdle: false,
      // Don't exit when idle
      acquireTimeoutMillis: 8000,
      // Reasonable timeout for acquiring connections
      propagateCreateError: false,
      // Don't propagate connection creation errors immediately
      // Lazy initialization and connection optimization
      lazy: true,
      // Enable lazy connection creation
      evictionRunIntervalMillis: 30000,
      // Run eviction every 30 seconds
      numTestsPerEvictionRun: 3,
      // Test 3 connections per eviction run
      softIdleTimeoutMillis: 60000,
      // Soft idle timeout (1 minute)
      testOnBorrow: true,
      // Test connections when borrowing
      testOnReturn: false,
      // Don't test on return for performance
      testWhileIdle: true // Test idle connections
    });
    /* istanbul ignore next */
    cov_auk92v9qg().s[111]++;
    console.log(`🏊 Creating pool with config:`, {
      host: poolConfig.host,
      port: poolConfig.port,
      database: poolConfig.database,
      max: poolConfig.max,
      connectionTimeoutMillis: poolConfig.connectionTimeoutMillis
    });
    const poolStart =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[112]++, Date.now());
    /* istanbul ignore next */
    cov_auk92v9qg().s[113]++;
    pool = new Pool(poolConfig);
    /* istanbul ignore next */
    cov_auk92v9qg().s[114]++;
    console.log(`✅ Pool created in ${Date.now() - poolStart}ms`);

    // Add pool event listeners for monitoring
    /* istanbul ignore next */
    cov_auk92v9qg().s[115]++;
    pool.on('connect', () => {
      /* istanbul ignore next */
      cov_auk92v9qg().f[4]++;
      cov_auk92v9qg().s[116]++;
      console.log('🔗 Pool: New client connected');
    });
    /* istanbul ignore next */
    cov_auk92v9qg().s[117]++;
    pool.on('acquire', () => {
      /* istanbul ignore next */
      cov_auk92v9qg().f[5]++;
      cov_auk92v9qg().s[118]++;
      console.log('📤 Pool: Client acquired from pool');
    });
    /* istanbul ignore next */
    cov_auk92v9qg().s[119]++;
    pool.on('remove', () => {
      /* istanbul ignore next */
      cov_auk92v9qg().f[6]++;
      cov_auk92v9qg().s[120]++;
      console.log('🗑️ Pool: Client removed from pool');
    });
    /* istanbul ignore next */
    cov_auk92v9qg().s[121]++;
    pool.on('error', err => {
      /* istanbul ignore next */
      cov_auk92v9qg().f[7]++;
      cov_auk92v9qg().s[122]++;
      console.error('💥 Pool error:', err.message);
    });

    // Enhanced pool monitoring for concurrent user scaling
    /* istanbul ignore next */
    cov_auk92v9qg().s[123]++;
    pool.on('acquire', () => {
      /* istanbul ignore next */
      cov_auk92v9qg().f[8]++;
      cov_auk92v9qg().s[124]++;
      console.log('📤 Pool: Client acquired from pool');
      /* istanbul ignore next */
      cov_auk92v9qg().s[125]++;
      updatePoolMetrics('acquire');
    });
    /* istanbul ignore next */
    cov_auk92v9qg().s[126]++;
    pool.on('release', () => {
      /* istanbul ignore next */
      cov_auk92v9qg().f[9]++;
      cov_auk92v9qg().s[127]++;
      console.log('📥 Pool: Client released to pool');
      /* istanbul ignore next */
      cov_auk92v9qg().s[128]++;
      updatePoolMetrics('release');
    });

    // Test connection with retry logic
    /* istanbul ignore next */
    cov_auk92v9qg().s[129]++;
    console.log('🧪 Testing database connection with retry logic...');
    const connectionTest =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[130]++, await connectionRetry.execute(async attempt => {
      /* istanbul ignore next */
      cov_auk92v9qg().f[10]++;
      const testStart =
      /* istanbul ignore next */
      (cov_auk92v9qg().s[131]++, Date.now());
      const client =
      /* istanbul ignore next */
      (cov_auk92v9qg().s[132]++, await Promise.race([pool.connect(), new Promise((_, reject) => {
        /* istanbul ignore next */
        cov_auk92v9qg().f[11]++;
        cov_auk92v9qg().s[133]++;
        return setTimeout(() => {
          /* istanbul ignore next */
          cov_auk92v9qg().f[12]++;
          cov_auk92v9qg().s[134]++;
          return reject(new Error('Connection test timeout after 15 seconds'));
        }, 15000);
      })]));
      /* istanbul ignore next */
      cov_auk92v9qg().s[135]++;
      console.log(`✅ Client connected in ${Date.now() - testStart}ms (attempt ${attempt + 1})`);

      // Use the simplest possible query
      const queryStart =
      /* istanbul ignore next */
      (cov_auk92v9qg().s[136]++, Date.now());
      /* istanbul ignore next */
      cov_auk92v9qg().s[137]++;
      await client.query('SELECT 1 as test');
      /* istanbul ignore next */
      cov_auk92v9qg().s[138]++;
      console.log(`✅ Test query completed in ${Date.now() - queryStart}ms`);
      /* istanbul ignore next */
      cov_auk92v9qg().s[139]++;
      client.release();
      /* istanbul ignore next */
      cov_auk92v9qg().s[140]++;
      return {
        connected: true,
        duration: Date.now() - testStart
      };
    }, 'database connection test'));
    /* istanbul ignore next */
    cov_auk92v9qg().s[141]++;
    if (!connectionTest.success) {
      /* istanbul ignore next */
      cov_auk92v9qg().b[45][0]++;
      cov_auk92v9qg().s[142]++;
      throw new Error(`Database connection test failed: ${connectionTest.error}`);
    } else
    /* istanbul ignore next */
    {
      cov_auk92v9qg().b[45][1]++;
    }
    cov_auk92v9qg().s[143]++;
    console.log(`🎯 Database connection test completed successfully in ${connectionTest.attempts} attempts`);
    const totalDuration =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[144]++, Date.now() - initStart);
    /* istanbul ignore next */
    cov_auk92v9qg().s[145]++;
    console.log(`✅ Database fully initialized in ${totalDuration}ms`);
    /* istanbul ignore next */
    cov_auk92v9qg().s[146]++;
    dbInitialized = true;

    // Start pool monitoring for concurrent user scaling
    /* istanbul ignore next */
    cov_auk92v9qg().s[147]++;
    startPoolMonitoring();
    /* istanbul ignore next */
    cov_auk92v9qg().s[148]++;
    return pool;
  } catch (error) {
    const errorDuration =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[149]++, Date.now() - initStart);
    /* istanbul ignore next */
    cov_auk92v9qg().s[150]++;
    console.error(`❌ Database initialization failed after ${errorDuration}ms:`, {
      message: error.message,
      code: error.code,
      detail: error.detail,
      hint: error.hint
    });

    // Reset state on failure
    /* istanbul ignore next */
    cov_auk92v9qg().s[151]++;
    pool = null;
    /* istanbul ignore next */
    cov_auk92v9qg().s[152]++;
    dbInitialized = false;
    /* istanbul ignore next */
    cov_auk92v9qg().s[153]++;
    dbConfig = null;
    /* istanbul ignore next */
    cov_auk92v9qg().s[154]++;
    throw error;
  }
}

/**
 * Start pool monitoring for concurrent user scaling
 */
function startPoolMonitoring() {
  /* istanbul ignore next */
  cov_auk92v9qg().f[13]++;
  cov_auk92v9qg().s[155]++;
  if (!pool) {
    /* istanbul ignore next */
    cov_auk92v9qg().b[46][0]++;
    cov_auk92v9qg().s[156]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_auk92v9qg().b[46][1]++;
  }
  cov_auk92v9qg().s[157]++;
  console.log('📊 Starting pool monitoring for concurrent user scaling...');

  // Pool monitoring only in development environment to avoid Lambda memory leaks
  /* istanbul ignore next */
  cov_auk92v9qg().s[158]++;
  if (process.env.NODE_ENV === 'development') {
    /* istanbul ignore next */
    cov_auk92v9qg().b[47][0]++;
    const monitorInterval =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[159]++, setInterval(() => {
      /* istanbul ignore next */
      cov_auk92v9qg().f[14]++;
      cov_auk92v9qg().s[160]++;
      if (
      /* istanbul ignore next */
      (cov_auk92v9qg().b[49][0]++, !pool) ||
      /* istanbul ignore next */
      (cov_auk92v9qg().b[49][1]++, !dbInitialized)) {
        /* istanbul ignore next */
        cov_auk92v9qg().b[48][0]++;
        cov_auk92v9qg().s[161]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_auk92v9qg().b[48][1]++;
      }
      const status =
      /* istanbul ignore next */
      (cov_auk92v9qg().s[162]++, getPoolStatus());
      const {
        metrics,
        recommendations
      } =
      /* istanbul ignore next */
      (cov_auk92v9qg().s[163]++, status);

      // Log status if utilization is high or recommendations available
      /* istanbul ignore next */
      cov_auk92v9qg().s[164]++;
      if (
      /* istanbul ignore next */
      (cov_auk92v9qg().b[51][0]++, metrics.utilizationPercent > 70) ||
      /* istanbul ignore next */
      (cov_auk92v9qg().b[51][1]++, recommendations.currentStats)) {
        /* istanbul ignore next */
        cov_auk92v9qg().b[50][0]++;
        cov_auk92v9qg().s[165]++;
        console.log(`📊 Pool Status: ${status.totalCount}/${status.max} connections (${metrics.utilizationPercent}% util), ${status.waitingCount} waiting`);
        /* istanbul ignore next */
        cov_auk92v9qg().s[166]++;
        if (recommendations.reason !== 'Current configuration optimal') {
          /* istanbul ignore next */
          cov_auk92v9qg().b[52][0]++;
          cov_auk92v9qg().s[167]++;
          console.log(`💡 ${recommendations.reason}`);
        } else
        /* istanbul ignore next */
        {
          cov_auk92v9qg().b[52][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_auk92v9qg().b[50][1]++;
      }

      // Warn on high utilization
      cov_auk92v9qg().s[168]++;
      if (metrics.utilizationPercent > 90) {
        /* istanbul ignore next */
        cov_auk92v9qg().b[53][0]++;
        cov_auk92v9qg().s[169]++;
        console.warn(`⚠️ Pool utilization very high (${metrics.utilizationPercent}%) - consider scaling up`);
      } else
      /* istanbul ignore next */
      {
        cov_auk92v9qg().b[53][1]++;
      }

      // Warn on connection queue buildup
      cov_auk92v9qg().s[170]++;
      if (status.waitingCount > 5) {
        /* istanbul ignore next */
        cov_auk92v9qg().b[54][0]++;
        cov_auk92v9qg().s[171]++;
        console.warn(`⚠️ ${status.waitingCount} connections waiting - pool may be undersized`);
      } else
      /* istanbul ignore next */
      {
        cov_auk92v9qg().b[54][1]++;
      }

      // Warn on high error rate
      cov_auk92v9qg().s[172]++;
      if (metrics.errorRate > 0.1) {
        /* istanbul ignore next */
        cov_auk92v9qg().b[55][0]++;
        cov_auk92v9qg().s[173]++;
        console.warn(`⚠️ High connection error rate: ${Math.round(metrics.errorRate * 100)}%`);
      } else
      /* istanbul ignore next */
      {
        cov_auk92v9qg().b[55][1]++;
      }
    }, 30000)); // Every 30 seconds
    /* istanbul ignore next */
    cov_auk92v9qg().s[174]++;
    console.log('✅ Pool monitoring started (development mode)');

    // Clear interval on process exit to prevent memory leaks
    /* istanbul ignore next */
    cov_auk92v9qg().s[175]++;
    process.on('exit', () => {
      /* istanbul ignore next */
      cov_auk92v9qg().f[15]++;
      cov_auk92v9qg().s[176]++;
      return clearInterval(monitorInterval);
    });
    /* istanbul ignore next */
    cov_auk92v9qg().s[177]++;
    process.on('SIGINT', () => {
      /* istanbul ignore next */
      cov_auk92v9qg().f[16]++;
      cov_auk92v9qg().s[178]++;
      return clearInterval(monitorInterval);
    });
    /* istanbul ignore next */
    cov_auk92v9qg().s[179]++;
    process.on('SIGTERM', () => {
      /* istanbul ignore next */
      cov_auk92v9qg().f[17]++;
      cov_auk92v9qg().s[180]++;
      return clearInterval(monitorInterval);
    });
  } else
  /* istanbul ignore next */
  {
    cov_auk92v9qg().b[47][1]++;
  }
}

/**
 * Get database connection pool
 */
function getPool() {
  /* istanbul ignore next */
  cov_auk92v9qg().f[18]++;
  cov_auk92v9qg().s[181]++;
  if (
  /* istanbul ignore next */
  (cov_auk92v9qg().b[57][0]++, !pool) ||
  /* istanbul ignore next */
  (cov_auk92v9qg().b[57][1]++, !dbInitialized)) {
    /* istanbul ignore next */
    cov_auk92v9qg().b[56][0]++;
    cov_auk92v9qg().s[182]++;
    throw new Error('Database not initialized. Call initializeDatabase() first.');
  } else
  /* istanbul ignore next */
  {
    cov_auk92v9qg().b[56][1]++;
  }
  cov_auk92v9qg().s[183]++;
  return pool;
}

// Pool metrics for monitoring and adaptive scaling
let poolMetrics =
/* istanbul ignore next */
(cov_auk92v9qg().s[184]++, {
  acquireCount: 0,
  releaseCount: 0,
  peakConnections: 0,
  averageAcquireTime: 0,
  connectionErrors: 0,
  lastAcquireTime: 0,
  startTime: Date.now(),
  // Adaptive scaling metrics - fixed size arrays to prevent memory leaks
  recentAcquires: new Array(100).fill(0),
  // Circular buffer for last 100 acquires
  recentReleases: new Array(100).fill(0),
  // Circular buffer for last 100 releases
  acquireIndex: 0,
  releaseIndex: 0,
  adaptiveRecommendations: {
    suggestedMin: null,
    suggestedMax: null,
    lastRecommendation: 0
  }
});

/**
 * Update pool metrics for monitoring and adaptive scaling
 */
function updatePoolMetrics(event) {
  /* istanbul ignore next */
  cov_auk92v9qg().f[19]++;
  const now =
  /* istanbul ignore next */
  (cov_auk92v9qg().s[185]++, Date.now());
  /* istanbul ignore next */
  cov_auk92v9qg().s[186]++;
  switch (event) {
    case 'acquire':
      /* istanbul ignore next */
      cov_auk92v9qg().b[58][0]++;
      cov_auk92v9qg().s[187]++;
      poolMetrics.acquireCount++;
      /* istanbul ignore next */
      cov_auk92v9qg().s[188]++;
      poolMetrics.lastAcquireTime = now;

      // Use circular buffer to prevent memory leaks
      /* istanbul ignore next */
      cov_auk92v9qg().s[189]++;
      poolMetrics.recentAcquires[poolMetrics.acquireIndex] = now;
      /* istanbul ignore next */
      cov_auk92v9qg().s[190]++;
      poolMetrics.acquireIndex = (poolMetrics.acquireIndex + 1) % poolMetrics.recentAcquires.length;

      // Track peak connections
      /* istanbul ignore next */
      cov_auk92v9qg().s[191]++;
      if (
      /* istanbul ignore next */
      (cov_auk92v9qg().b[60][0]++, pool) &&
      /* istanbul ignore next */
      (cov_auk92v9qg().b[60][1]++, pool.totalCount > poolMetrics.peakConnections)) {
        /* istanbul ignore next */
        cov_auk92v9qg().b[59][0]++;
        cov_auk92v9qg().s[192]++;
        poolMetrics.peakConnections = pool.totalCount;
      } else
      /* istanbul ignore next */
      {
        cov_auk92v9qg().b[59][1]++;
      }
      cov_auk92v9qg().s[193]++;
      break;
    case 'release':
      /* istanbul ignore next */
      cov_auk92v9qg().b[58][1]++;
      cov_auk92v9qg().s[194]++;
      poolMetrics.releaseCount++;

      // Use circular buffer to prevent memory leaks
      /* istanbul ignore next */
      cov_auk92v9qg().s[195]++;
      poolMetrics.recentReleases[poolMetrics.releaseIndex] = now;
      /* istanbul ignore next */
      cov_auk92v9qg().s[196]++;
      poolMetrics.releaseIndex = (poolMetrics.releaseIndex + 1) % poolMetrics.recentReleases.length;
      /* istanbul ignore next */
      cov_auk92v9qg().s[197]++;
      break;
    case 'error':
      /* istanbul ignore next */
      cov_auk92v9qg().b[58][2]++;
      cov_auk92v9qg().s[198]++;
      poolMetrics.connectionErrors++;
      /* istanbul ignore next */
      cov_auk92v9qg().s[199]++;
      break;
  }

  // Generate adaptive recommendations every 2 minutes
  /* istanbul ignore next */
  cov_auk92v9qg().s[200]++;
  if (now - poolMetrics.adaptiveRecommendations.lastRecommendation > 120000) {
    /* istanbul ignore next */
    cov_auk92v9qg().b[61][0]++;
    cov_auk92v9qg().s[201]++;
    generateAdaptiveRecommendations();
    /* istanbul ignore next */
    cov_auk92v9qg().s[202]++;
    poolMetrics.adaptiveRecommendations.lastRecommendation = now;
  } else
  /* istanbul ignore next */
  {
    cov_auk92v9qg().b[61][1]++;
  }
}

/**
 * Generate adaptive pool sizing recommendations based on usage patterns
 */
function generateAdaptiveRecommendations() {
  /* istanbul ignore next */
  cov_auk92v9qg().f[20]++;
  cov_auk92v9qg().s[203]++;
  if (
  /* istanbul ignore next */
  (cov_auk92v9qg().b[63][0]++, !pool) ||
  /* istanbul ignore next */
  (cov_auk92v9qg().b[63][1]++, poolMetrics.recentAcquires.length < 3)) {
    /* istanbul ignore next */
    cov_auk92v9qg().b[62][0]++;
    cov_auk92v9qg().s[204]++;
    return; // Not enough data
  } else
  /* istanbul ignore next */
  {
    cov_auk92v9qg().b[62][1]++;
  }
  const now =
  /* istanbul ignore next */
  (cov_auk92v9qg().s[205]++, Date.now());
  const fiveMinutesAgo =
  /* istanbul ignore next */
  (cov_auk92v9qg().s[206]++, now - 300000);
  const recentAcquires =
  /* istanbul ignore next */
  (cov_auk92v9qg().s[207]++, poolMetrics.recentAcquires.filter(time => {
    /* istanbul ignore next */
    cov_auk92v9qg().f[21]++;
    cov_auk92v9qg().s[208]++;
    return time > fiveMinutesAgo;
  }));
  const recentReleases =
  /* istanbul ignore next */
  (cov_auk92v9qg().s[209]++, poolMetrics.recentReleases.filter(time => {
    /* istanbul ignore next */
    cov_auk92v9qg().f[22]++;
    cov_auk92v9qg().s[210]++;
    return time > fiveMinutesAgo;
  }));

  // Calculate concurrent connection usage pattern
  const avgAcquiresPerMinute =
  /* istanbul ignore next */
  (cov_auk92v9qg().s[211]++, recentAcquires.length / 5);
  const avgReleasesPerMinute =
  /* istanbul ignore next */
  (cov_auk92v9qg().s[212]++, recentReleases.length / 5);
  const currentUtilization =
  /* istanbul ignore next */
  (cov_auk92v9qg().s[213]++, pool.totalCount / pool.options.max);
  let recommendations =
  /* istanbul ignore next */
  (cov_auk92v9qg().s[214]++, {
    suggestedMin: pool.options.min,
    suggestedMax: pool.options.max,
    reason: 'Current configuration optimal'
  });

  // High utilization - recommend scaling up
  /* istanbul ignore next */
  cov_auk92v9qg().s[215]++;
  if (
  /* istanbul ignore next */
  (cov_auk92v9qg().b[65][0]++, currentUtilization > 0.8) &&
  /* istanbul ignore next */
  (cov_auk92v9qg().b[65][1]++, avgAcquiresPerMinute > avgReleasesPerMinute)) {
    /* istanbul ignore next */
    cov_auk92v9qg().b[64][0]++;
    cov_auk92v9qg().s[216]++;
    recommendations.suggestedMax = Math.min(pool.options.max * 1.5, 50);
    /* istanbul ignore next */
    cov_auk92v9qg().s[217]++;
    recommendations.suggestedMin = Math.min(pool.options.min + 2, recommendations.suggestedMax / 2);
    /* istanbul ignore next */
    cov_auk92v9qg().s[218]++;
    recommendations.reason = 'High utilization detected - recommend scaling up';
  }

  // Low utilization - recommend scaling down (but conservatively)
  else {
    /* istanbul ignore next */
    cov_auk92v9qg().b[64][1]++;
    cov_auk92v9qg().s[219]++;
    if (
    /* istanbul ignore next */
    (cov_auk92v9qg().b[67][0]++, currentUtilization < 0.3) &&
    /* istanbul ignore next */
    (cov_auk92v9qg().b[67][1]++, pool.options.max > 5)) {
      /* istanbul ignore next */
      cov_auk92v9qg().b[66][0]++;
      cov_auk92v9qg().s[220]++;
      recommendations.suggestedMax = Math.max(pool.options.max * 0.8, 5);
      /* istanbul ignore next */
      cov_auk92v9qg().s[221]++;
      recommendations.suggestedMin = Math.max(pool.options.min - 1, 1);
      /* istanbul ignore next */
      cov_auk92v9qg().s[222]++;
      recommendations.reason = 'Low utilization detected - consider scaling down';
    }

    // High error rate - recommend more conservative settings
    else {
      /* istanbul ignore next */
      cov_auk92v9qg().b[66][1]++;
      cov_auk92v9qg().s[223]++;
      if (poolMetrics.connectionErrors > 5) {
        /* istanbul ignore next */
        cov_auk92v9qg().b[68][0]++;
        cov_auk92v9qg().s[224]++;
        recommendations.suggestedMax = Math.max(pool.options.max - 2, 3);
        /* istanbul ignore next */
        cov_auk92v9qg().s[225]++;
        recommendations.reason = 'High error rate - recommend more conservative pool size';
      } else
      /* istanbul ignore next */
      {
        cov_auk92v9qg().b[68][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_auk92v9qg().s[226]++;
  poolMetrics.adaptiveRecommendations = {
    ...recommendations,
    lastRecommendation: Date.now(),
    currentStats: {
      utilization: currentUtilization,
      acquiresPerMinute: avgAcquiresPerMinute,
      releasesPerMinute: avgReleasesPerMinute,
      errorRate: poolMetrics.connectionErrors / Math.max(poolMetrics.acquireCount, 1)
    }
  };

  // Log recommendations if significant change suggested
  /* istanbul ignore next */
  cov_auk92v9qg().s[227]++;
  if (Math.abs(recommendations.suggestedMax - pool.options.max) > 2) {
    /* istanbul ignore next */
    cov_auk92v9qg().b[69][0]++;
    cov_auk92v9qg().s[228]++;
    console.log(`🎯 Pool scaling recommendation: ${pool.options.min}-${pool.options.max} → ${recommendations.suggestedMin}-${recommendations.suggestedMax} (${recommendations.reason})`);
  } else
  /* istanbul ignore next */
  {
    cov_auk92v9qg().b[69][1]++;
  }
}

/**
 * Get detailed pool status for monitoring
 */
function getPoolStatus() {
  /* istanbul ignore next */
  cov_auk92v9qg().f[23]++;
  cov_auk92v9qg().s[229]++;
  if (!pool) {
    /* istanbul ignore next */
    cov_auk92v9qg().b[70][0]++;
    cov_auk92v9qg().s[230]++;
    return {
      initialized: false,
      error: 'Pool not initialized'
    };
  } else
  /* istanbul ignore next */
  {
    cov_auk92v9qg().b[70][1]++;
  }
  const now =
  /* istanbul ignore next */
  (cov_auk92v9qg().s[231]++, Date.now());
  const uptimeSeconds =
  /* istanbul ignore next */
  (cov_auk92v9qg().s[232]++, Math.floor((now - poolMetrics.startTime) / 1000));
  /* istanbul ignore next */
  cov_auk92v9qg().s[233]++;
  return {
    initialized: dbInitialized,
    // Current pool state
    totalCount: pool.totalCount,
    idleCount: pool.idleCount,
    waitingCount: pool.waitingCount,
    min: pool.options.min,
    max: pool.options.max,
    connectionTimeoutMillis: pool.options.connectionTimeoutMillis,
    idleTimeoutMillis: pool.options.idleTimeoutMillis,
    // Performance metrics
    metrics: {
      ...poolMetrics,
      uptimeSeconds,
      utilizationPercent: Math.round(pool.totalCount / pool.options.max * 100),
      acquiresPerSecond: poolMetrics.acquireCount / Math.max(uptimeSeconds, 1),
      errorRate: poolMetrics.connectionErrors / Math.max(poolMetrics.acquireCount, 1)
    },
    // Adaptive recommendations
    recommendations: poolMetrics.adaptiveRecommendations
  };
}

/**
 * CIRCUIT BREAKER FIX: Execute a database query with circuit breaker protection
 * This function now uses the new database connection manager with integrated circuit breaker
 */
async function query(text, params =
/* istanbul ignore next */
(cov_auk92v9qg().b[71][0]++, []), timeoutMs =
/* istanbul ignore next */
(cov_auk92v9qg().b[72][0]++, null)) {
  /* istanbul ignore next */
  cov_auk92v9qg().f[24]++;
  const queryId =
  /* istanbul ignore next */
  (cov_auk92v9qg().s[234]++, Math.random().toString(36).substr(2, 9));
  const startTime =
  /* istanbul ignore next */
  (cov_auk92v9qg().s[235]++, Date.now());
  /* istanbul ignore next */
  cov_auk92v9qg().s[236]++;
  console.log(`🔍 [${queryId}] QUERY START (Circuit Breaker): ${text.substring(0, 100)}...`);
  /* istanbul ignore next */
  cov_auk92v9qg().s[237]++;
  console.log(`🔍 [${queryId}] Params:`, params);
  /* istanbul ignore next */
  cov_auk92v9qg().s[238]++;
  try {
    // Use new database manager with circuit breaker protection
    const result =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[239]++, await databaseManager.query(text, params));
    const duration =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[240]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_auk92v9qg().s[241]++;
    console.log(`✅ [${queryId}] Query completed in ${duration}ms`);
    /* istanbul ignore next */
    cov_auk92v9qg().s[242]++;
    console.log(`✅ [${queryId}] Rows returned: ${
    /* istanbul ignore next */
    (cov_auk92v9qg().b[73][0]++, result.rows?.length) ||
    /* istanbul ignore next */
    (cov_auk92v9qg().b[73][1]++, 0)}`);

    // Track performance metrics (legacy compatibility)
    /* istanbul ignore next */
    cov_auk92v9qg().s[243]++;
    try {
      const {
        performanceMonitor
      } =
      /* istanbul ignore next */
      (cov_auk92v9qg().s[244]++, require('./performanceMonitor'));
      const operation =
      /* istanbul ignore next */
      (cov_auk92v9qg().s[245]++, text.trim().split(' ')[0].toUpperCase());
      const table =
      /* istanbul ignore next */
      (cov_auk92v9qg().s[246]++, extractTableName(text));
      /* istanbul ignore next */
      cov_auk92v9qg().s[247]++;
      performanceMonitor.recordDatabaseOperation(operation, table, duration, true);
    } catch (perfError) {
      /* istanbul ignore next */
      cov_auk92v9qg().s[248]++;
      // Performance monitoring is optional - don't fail the query
      console.warn(`⚠️ [${queryId}] Performance monitoring failed:`, perfError.message);
    }
    /* istanbul ignore next */
    cov_auk92v9qg().s[249]++;
    return result;
    const queryDuration =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[250]++, Date.now() - queryStart);
    const totalDuration =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[251]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_auk92v9qg().s[252]++;
    console.log(`✅ [${queryId}] Query completed in ${queryDuration}ms (total: ${totalDuration}ms)`);
    /* istanbul ignore next */
    cov_auk92v9qg().s[253]++;
    console.log(`✅ [${queryId}] Rows returned: ${
    /* istanbul ignore next */
    (cov_auk92v9qg().b[74][0]++, result.rows?.length) ||
    /* istanbul ignore next */
    (cov_auk92v9qg().b[74][1]++, 0)}`);

    // Track performance metrics
    /* istanbul ignore next */
    cov_auk92v9qg().s[254]++;
    try {
      const {
        performanceMonitor
      } =
      /* istanbul ignore next */
      (cov_auk92v9qg().s[255]++, require('./performanceMonitor'));
      const operation =
      /* istanbul ignore next */
      (cov_auk92v9qg().s[256]++, text.trim().split(' ')[0].toUpperCase());
      const table =
      /* istanbul ignore next */
      (cov_auk92v9qg().s[257]++, extractTableName(text));
      /* istanbul ignore next */
      cov_auk92v9qg().s[258]++;
      performanceMonitor.trackDbOperation(operation, table, queryDuration, true, queryId);
    } catch (perfError) {
      /* istanbul ignore next */
      cov_auk92v9qg().s[259]++;
      // Don't fail the query if performance monitoring fails
      console.warn('Performance monitoring failed:', perfError.message);
    }
    /* istanbul ignore next */
    cov_auk92v9qg().s[260]++;
    return result;
  } catch (error) {
    const errorDuration =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[261]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_auk92v9qg().s[262]++;
    console.error(`❌ [${queryId}] Query failed after ${errorDuration}ms:`, error.message);
    /* istanbul ignore next */
    cov_auk92v9qg().s[263]++;
    console.error(`❌ [${queryId}] Error details:`, {
      code: error.code,
      severity: error.severity,
      detail: error.detail,
      hint: error.hint,
      position: error.position,
      internalPosition: error.internalPosition,
      internalQuery: error.internalQuery,
      where: error.where,
      schema: error.schema,
      table: error.table,
      column: error.column,
      dataType: error.dataType,
      constraint: error.constraint
    });

    // Update pool metrics for connection errors
    /* istanbul ignore next */
    cov_auk92v9qg().s[264]++;
    updatePoolMetrics('error');

    // Track performance metrics for failed queries
    /* istanbul ignore next */
    cov_auk92v9qg().s[265]++;
    try {
      const {
        performanceMonitor
      } =
      /* istanbul ignore next */
      (cov_auk92v9qg().s[266]++, require('./performanceMonitor'));
      const operation =
      /* istanbul ignore next */
      (cov_auk92v9qg().s[267]++, text.trim().split(' ')[0].toUpperCase());
      const table =
      /* istanbul ignore next */
      (cov_auk92v9qg().s[268]++, extractTableName(text));
      /* istanbul ignore next */
      cov_auk92v9qg().s[269]++;
      performanceMonitor.trackDbOperation(operation, table, errorDuration, false, queryId);
    } catch (perfError) {
      /* istanbul ignore next */
      cov_auk92v9qg().s[270]++;
      console.warn('Performance monitoring failed:', perfError.message);
    }
    /* istanbul ignore next */
    cov_auk92v9qg().s[271]++;
    throw error;
  }
}

/**
 * Execute a transaction
 */
async function transaction(callback) {
  /* istanbul ignore next */
  cov_auk92v9qg().f[25]++;
  cov_auk92v9qg().s[272]++;
  if (
  /* istanbul ignore next */
  (cov_auk92v9qg().b[76][0]++, !dbInitialized) ||
  /* istanbul ignore next */
  (cov_auk92v9qg().b[76][1]++, !pool)) {
    /* istanbul ignore next */
    cov_auk92v9qg().b[75][0]++;
    cov_auk92v9qg().s[273]++;
    await initializeDatabase();
  } else
  /* istanbul ignore next */
  {
    cov_auk92v9qg().b[75][1]++;
  }
  const client =
  /* istanbul ignore next */
  (cov_auk92v9qg().s[274]++, await pool.connect());
  /* istanbul ignore next */
  cov_auk92v9qg().s[275]++;
  try {
    /* istanbul ignore next */
    cov_auk92v9qg().s[276]++;
    await client.query('BEGIN');
    const result =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[277]++, await callback(client));
    /* istanbul ignore next */
    cov_auk92v9qg().s[278]++;
    await client.query('COMMIT');
    /* istanbul ignore next */
    cov_auk92v9qg().s[279]++;
    return result;
  } catch (error) {
    /* istanbul ignore next */
    cov_auk92v9qg().s[280]++;
    await client.query('ROLLBACK');
    /* istanbul ignore next */
    cov_auk92v9qg().s[281]++;
    throw error;
  } finally {
    /* istanbul ignore next */
    cov_auk92v9qg().s[282]++;
    client.release();
  }
}

/**
 * CIRCUIT BREAKER FIX: Health check using new database manager with circuit breaker
 */
async function healthCheck() {
  /* istanbul ignore next */
  cov_auk92v9qg().f[26]++;
  cov_auk92v9qg().s[283]++;
  try {
    // Use new database manager with circuit breaker protection
    const result =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[284]++, await databaseManager.query('SELECT NOW() as timestamp, current_database() as db, version() as version'));
    /* istanbul ignore next */
    cov_auk92v9qg().s[285]++;
    return {
      status: 'healthy',
      database: result.rows[0].db,
      timestamp: result.rows[0].timestamp,
      version: result.rows[0].version.split(' ')[0],
      note: 'Database connection verified with circuit breaker protection'
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_auk92v9qg().s[286]++;
    // Check if this is a circuit breaker error and provide helpful info
    if (error.message.includes('Circuit breaker is OPEN')) {
      /* istanbul ignore next */
      cov_auk92v9qg().b[77][0]++;
      cov_auk92v9qg().s[287]++;
      return {
        status: 'circuit_breaker_open',
        error: error.message,
        note: 'Database access blocked by circuit breaker. Use emergency reset endpoint if needed.',
        recovery: 'POST /api/health/emergency/reset-circuit-breaker'
      };
    } else
    /* istanbul ignore next */
    {
      cov_auk92v9qg().b[77][1]++;
    }
    cov_auk92v9qg().s[288]++;
    return {
      status: 'unhealthy',
      error: error.message,
      note: 'Database connection failed - check configuration and network connectivity'
    };
  }
}

/**
 * Check if a table exists in the database
 */
async function tableExists(tableName) {
  /* istanbul ignore next */
  cov_auk92v9qg().f[27]++;
  cov_auk92v9qg().s[289]++;
  try {
    /* istanbul ignore next */
    cov_auk92v9qg().s[290]++;
    if (
    /* istanbul ignore next */
    (cov_auk92v9qg().b[79][0]++, !dbInitialized) ||
    /* istanbul ignore next */
    (cov_auk92v9qg().b[79][1]++, !pool)) {
      /* istanbul ignore next */
      cov_auk92v9qg().b[78][0]++;
      cov_auk92v9qg().s[291]++;
      await initializeDatabase();
    } else
    /* istanbul ignore next */
    {
      cov_auk92v9qg().b[78][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[292]++, await query(`
            SELECT EXISTS (
                SELECT FROM information_schema.tables 
                WHERE table_schema = 'public' 
                AND table_name = $1
            )
        `, [tableName]));
    /* istanbul ignore next */
    cov_auk92v9qg().s[293]++;
    return result.rows[0].exists;
  } catch (error) {
    /* istanbul ignore next */
    cov_auk92v9qg().s[294]++;
    console.error(`Error checking if table ${tableName} exists:`, error);
    /* istanbul ignore next */
    cov_auk92v9qg().s[295]++;
    return false;
  }
}

/**
 * Check if multiple tables exist
 */
async function tablesExist(tableNames) {
  /* istanbul ignore next */
  cov_auk92v9qg().f[28]++;
  cov_auk92v9qg().s[296]++;
  try {
    /* istanbul ignore next */
    cov_auk92v9qg().s[297]++;
    if (
    /* istanbul ignore next */
    (cov_auk92v9qg().b[81][0]++, !dbInitialized) ||
    /* istanbul ignore next */
    (cov_auk92v9qg().b[81][1]++, !pool)) {
      /* istanbul ignore next */
      cov_auk92v9qg().b[80][0]++;
      cov_auk92v9qg().s[298]++;
      await initializeDatabase();
    } else
    /* istanbul ignore next */
    {
      cov_auk92v9qg().b[80][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[299]++, await query(`
            SELECT table_name, 
                   EXISTS (
                       SELECT FROM information_schema.tables 
                       WHERE table_schema = 'public' 
                       AND table_name = t.table_name
                   ) as exists
            FROM unnest($1::text[]) AS t(table_name)
        `, [tableNames]));
    const existsMap =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[300]++, {});
    /* istanbul ignore next */
    cov_auk92v9qg().s[301]++;
    result.rows.forEach(row => {
      /* istanbul ignore next */
      cov_auk92v9qg().f[29]++;
      cov_auk92v9qg().s[302]++;
      existsMap[row.table_name] = row.exists;
    });
    /* istanbul ignore next */
    cov_auk92v9qg().s[303]++;
    return existsMap;
  } catch (error) {
    /* istanbul ignore next */
    cov_auk92v9qg().s[304]++;
    console.error('Error checking if tables exist:', error);
    const fallbackMap =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[305]++, {});
    /* istanbul ignore next */
    cov_auk92v9qg().s[306]++;
    tableNames.forEach(name => {
      /* istanbul ignore next */
      cov_auk92v9qg().f[30]++;
      cov_auk92v9qg().s[307]++;
      fallbackMap[name] = false;
    });
    /* istanbul ignore next */
    cov_auk92v9qg().s[308]++;
    return fallbackMap;
  }
}

/**
 * Comprehensive database schema validation
 */
const REQUIRED_SCHEMA =
/* istanbul ignore next */
(cov_auk92v9qg().s[309]++, {
  // Core user and authentication tables
  core: ['user_api_keys', 'users'],
  // Portfolio and trading tables
  portfolio: ['portfolio_holdings', 'portfolio_metadata', 'trading_orders'],
  // Market data tables
  market_data: ['symbols', 'stock_symbols', 'price_daily', 'market_data'],
  // Analytics and scoring tables
  analytics: ['buy_sell_daily', 'buy_sell_weekly', 'buy_sell_monthly', 'technicals_daily', 'fundamentals', 'scores'],
  // Optional enhancement tables
  optional: ['patterns', 'sentiment', 'earnings', 'risk_metrics', 'alerts', 'swing_trader', 'company_profile', 'key_metrics']
});

/**
 * Comprehensive database schema validation with detailed logging
 */
async function validateDatabaseSchema(requestId =
/* istanbul ignore next */
(cov_auk92v9qg().b[82][0]++, 'schema-check')) {
  /* istanbul ignore next */
  cov_auk92v9qg().f[31]++;
  const validationStart =
  /* istanbul ignore next */
  (cov_auk92v9qg().s[310]++, Date.now());
  /* istanbul ignore next */
  cov_auk92v9qg().s[311]++;
  console.log(`🔍 [${requestId}] Starting comprehensive database schema validation`);
  /* istanbul ignore next */
  cov_auk92v9qg().s[312]++;
  try {
    /* istanbul ignore next */
    cov_auk92v9qg().s[313]++;
    // Initialize database if needed
    await initializeDatabase();
    /* istanbul ignore next */
    cov_auk92v9qg().s[314]++;
    console.log(`✅ [${requestId}] Database initialized for schema validation`);
    const allTables =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[315]++, [...REQUIRED_SCHEMA.core, ...REQUIRED_SCHEMA.portfolio, ...REQUIRED_SCHEMA.market_data, ...REQUIRED_SCHEMA.analytics, ...REQUIRED_SCHEMA.optional]);
    /* istanbul ignore next */
    cov_auk92v9qg().s[316]++;
    console.log(`🔍 [${requestId}] Checking ${allTables.length} tables across schema categories`);

    // Check table existence
    const tableCheckStart =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[317]++, Date.now());
    const tableExistenceMap =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[318]++, await tablesExist(allTables));
    const tableCheckDuration =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[319]++, Date.now() - tableCheckStart);
    /* istanbul ignore next */
    cov_auk92v9qg().s[320]++;
    console.log(`✅ [${requestId}] Table existence check completed in ${tableCheckDuration}ms`);

    // Categorize results
    const validation =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[321]++, {
      core: {
        required: REQUIRED_SCHEMA.core,
        existing: REQUIRED_SCHEMA.core.filter(table => {
          /* istanbul ignore next */
          cov_auk92v9qg().f[32]++;
          cov_auk92v9qg().s[322]++;
          return tableExistenceMap[table];
        }),
        missing: REQUIRED_SCHEMA.core.filter(table => {
          /* istanbul ignore next */
          cov_auk92v9qg().f[33]++;
          cov_auk92v9qg().s[323]++;
          return !tableExistenceMap[table];
        })
      },
      portfolio: {
        required: REQUIRED_SCHEMA.portfolio,
        existing: REQUIRED_SCHEMA.portfolio.filter(table => {
          /* istanbul ignore next */
          cov_auk92v9qg().f[34]++;
          cov_auk92v9qg().s[324]++;
          return tableExistenceMap[table];
        }),
        missing: REQUIRED_SCHEMA.portfolio.filter(table => {
          /* istanbul ignore next */
          cov_auk92v9qg().f[35]++;
          cov_auk92v9qg().s[325]++;
          return !tableExistenceMap[table];
        })
      },
      market_data: {
        required: REQUIRED_SCHEMA.market_data,
        existing: REQUIRED_SCHEMA.market_data.filter(table => {
          /* istanbul ignore next */
          cov_auk92v9qg().f[36]++;
          cov_auk92v9qg().s[326]++;
          return tableExistenceMap[table];
        }),
        missing: REQUIRED_SCHEMA.market_data.filter(table => {
          /* istanbul ignore next */
          cov_auk92v9qg().f[37]++;
          cov_auk92v9qg().s[327]++;
          return !tableExistenceMap[table];
        })
      },
      analytics: {
        required: REQUIRED_SCHEMA.analytics,
        existing: REQUIRED_SCHEMA.analytics.filter(table => {
          /* istanbul ignore next */
          cov_auk92v9qg().f[38]++;
          cov_auk92v9qg().s[328]++;
          return tableExistenceMap[table];
        }),
        missing: REQUIRED_SCHEMA.analytics.filter(table => {
          /* istanbul ignore next */
          cov_auk92v9qg().f[39]++;
          cov_auk92v9qg().s[329]++;
          return !tableExistenceMap[table];
        })
      },
      optional: {
        required: REQUIRED_SCHEMA.optional,
        existing: REQUIRED_SCHEMA.optional.filter(table => {
          /* istanbul ignore next */
          cov_auk92v9qg().f[40]++;
          cov_auk92v9qg().s[330]++;
          return tableExistenceMap[table];
        }),
        missing: REQUIRED_SCHEMA.optional.filter(table => {
          /* istanbul ignore next */
          cov_auk92v9qg().f[41]++;
          cov_auk92v9qg().s[331]++;
          return !tableExistenceMap[table];
        })
      }
    });

    // Calculate overall health
    const totalRequired =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[332]++, REQUIRED_SCHEMA.core.length + REQUIRED_SCHEMA.portfolio.length + REQUIRED_SCHEMA.market_data.length + REQUIRED_SCHEMA.analytics.length);
    const totalExisting =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[333]++, validation.core.existing.length + validation.portfolio.existing.length + validation.market_data.existing.length + validation.analytics.existing.length);
    const totalMissing =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[334]++, validation.core.missing.length + validation.portfolio.missing.length + validation.market_data.missing.length + validation.analytics.missing.length);
    const schemaHealthPercentage =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[335]++, Math.round(totalExisting / totalRequired * 100));

    // Determine criticality
    const criticalMissing =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[336]++, []);
    /* istanbul ignore next */
    cov_auk92v9qg().s[337]++;
    if (validation.core.missing.length > 0) {
      /* istanbul ignore next */
      cov_auk92v9qg().b[83][0]++;
      cov_auk92v9qg().s[338]++;
      criticalMissing.push(...validation.core.missing.map(t => {
        /* istanbul ignore next */
        cov_auk92v9qg().f[42]++;
        cov_auk92v9qg().s[339]++;
        return `core.${t}`;
      }));
    } else
    /* istanbul ignore next */
    {
      cov_auk92v9qg().b[83][1]++;
    }
    cov_auk92v9qg().s[340]++;
    if (validation.portfolio.missing.length > 0) {
      /* istanbul ignore next */
      cov_auk92v9qg().b[84][0]++;
      cov_auk92v9qg().s[341]++;
      criticalMissing.push(...validation.portfolio.missing.map(t => {
        /* istanbul ignore next */
        cov_auk92v9qg().f[43]++;
        cov_auk92v9qg().s[342]++;
        return `portfolio.${t}`;
      }));
    } else
    /* istanbul ignore next */
    {
      cov_auk92v9qg().b[84][1]++;
    }
    const validationDuration =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[343]++, Date.now() - validationStart);

    // Comprehensive logging
    /* istanbul ignore next */
    cov_auk92v9qg().s[344]++;
    console.log(`📊 [${requestId}] Database schema validation completed in ${validationDuration}ms`, {
      overall: {
        healthPercentage: schemaHealthPercentage,
        totalRequired,
        totalExisting,
        totalMissing,
        optionalExisting: validation.optional.existing.length,
        optionalMissing: validation.optional.missing.length
      },
      categories: {
        core: `${validation.core.existing.length}/${validation.core.required.length}`,
        portfolio: `${validation.portfolio.existing.length}/${validation.portfolio.required.length}`,
        market_data: `${validation.market_data.existing.length}/${validation.market_data.required.length}`,
        analytics: `${validation.analytics.existing.length}/${validation.analytics.required.length}`,
        optional: `${validation.optional.existing.length}/${validation.optional.required.length}`
      }
    });

    // Log critical issues
    /* istanbul ignore next */
    cov_auk92v9qg().s[345]++;
    if (criticalMissing.length > 0) {
      /* istanbul ignore next */
      cov_auk92v9qg().b[85][0]++;
      cov_auk92v9qg().s[346]++;
      console.error(`❌ [${requestId}] CRITICAL: Missing essential database tables:`, {
        criticalMissing,
        impact: 'Core application functionality will fail',
        recommendation: 'Run database initialization scripts immediately',
        affectedFeatures: getCriticalFeatureImpact(criticalMissing)
      });
    } else
    /* istanbul ignore next */
    {
      cov_auk92v9qg().b[85][1]++;
    }

    // Log category-specific issues
    cov_auk92v9qg().s[347]++;
    Object.entries(validation).forEach(([category, info]) => {
      /* istanbul ignore next */
      cov_auk92v9qg().f[44]++;
      cov_auk92v9qg().s[348]++;
      if (
      /* istanbul ignore next */
      (cov_auk92v9qg().b[87][0]++, info.missing.length > 0) &&
      /* istanbul ignore next */
      (cov_auk92v9qg().b[87][1]++, category !== 'optional')) {
        /* istanbul ignore next */
        cov_auk92v9qg().b[86][0]++;
        cov_auk92v9qg().s[349]++;
        console.error(`❌ [${requestId}] Missing ${category} tables:`, {
          category,
          missingTables: info.missing,
          existingTables: info.existing,
          impact: getCategoryImpact(category),
          recommendation: `Create missing ${category} tables`
        });
      } else
      /* istanbul ignore next */
      {
        cov_auk92v9qg().b[86][1]++;
      }
    });
    /* istanbul ignore next */
    cov_auk92v9qg().s[350]++;
    return {
      valid: criticalMissing.length === 0,
      healthPercentage: schemaHealthPercentage,
      validation,
      criticalMissing,
      totalRequired,
      totalExisting,
      validationDuration,
      requestId,
      timestamp: new Date().toISOString()
    };
  } catch (error) {
    const errorDuration =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[351]++, Date.now() - validationStart);
    /* istanbul ignore next */
    cov_auk92v9qg().s[352]++;
    console.error(`❌ [${requestId}] Database schema validation FAILED after ${errorDuration}ms:`, {
      error: error.message,
      errorStack: error.stack,
      impact: 'Cannot determine database schema health',
      recommendation: 'Check database connectivity and permissions'
    });
    /* istanbul ignore next */
    cov_auk92v9qg().s[353]++;
    return {
      valid: false,
      error: error.message,
      validationDuration: errorDuration,
      requestId,
      timestamp: new Date().toISOString()
    };
  }
}

/**
 * Get impact description for missing critical tables
 */
function getCriticalFeatureImpact(missingTables) {
  /* istanbul ignore next */
  cov_auk92v9qg().f[45]++;
  const impacts =
  /* istanbul ignore next */
  (cov_auk92v9qg().s[354]++, []);
  /* istanbul ignore next */
  cov_auk92v9qg().s[355]++;
  if (missingTables.some(t => {
    /* istanbul ignore next */
    cov_auk92v9qg().f[46]++;
    cov_auk92v9qg().s[356]++;
    return t.includes('user_api_keys');
  })) {
    /* istanbul ignore next */
    cov_auk92v9qg().b[88][0]++;
    cov_auk92v9qg().s[357]++;
    impacts.push('API key management will fail');
  } else
  /* istanbul ignore next */
  {
    cov_auk92v9qg().b[88][1]++;
  }
  cov_auk92v9qg().s[358]++;
  if (missingTables.some(t => {
    /* istanbul ignore next */
    cov_auk92v9qg().f[47]++;
    cov_auk92v9qg().s[359]++;
    return t.includes('portfolio');
  })) {
    /* istanbul ignore next */
    cov_auk92v9qg().b[89][0]++;
    cov_auk92v9qg().s[360]++;
    impacts.push('Portfolio functionality will be broken');
  } else
  /* istanbul ignore next */
  {
    cov_auk92v9qg().b[89][1]++;
  }
  cov_auk92v9qg().s[361]++;
  if (missingTables.some(t => {
    /* istanbul ignore next */
    cov_auk92v9qg().f[48]++;
    cov_auk92v9qg().s[362]++;
    return t.includes('trading');
  })) {
    /* istanbul ignore next */
    cov_auk92v9qg().b[90][0]++;
    cov_auk92v9qg().s[363]++;
    impacts.push('Trading operations will fail');
  } else
  /* istanbul ignore next */
  {
    cov_auk92v9qg().b[90][1]++;
  }
  cov_auk92v9qg().s[364]++;
  if (missingTables.some(t => {
    /* istanbul ignore next */
    cov_auk92v9qg().f[49]++;
    cov_auk92v9qg().s[365]++;
    return t.includes('market_data');
  })) {
    /* istanbul ignore next */
    cov_auk92v9qg().b[91][0]++;
    cov_auk92v9qg().s[366]++;
    impacts.push('Market data display will be broken');
  } else
  /* istanbul ignore next */
  {
    cov_auk92v9qg().b[91][1]++;
  }
  cov_auk92v9qg().s[367]++;
  return impacts;
}

/**
 * Get category-specific impact description
 */
function getCategoryImpact(category) {
  /* istanbul ignore next */
  cov_auk92v9qg().f[50]++;
  const impacts =
  /* istanbul ignore next */
  (cov_auk92v9qg().s[368]++, {
    core: 'User authentication and API key management will fail',
    portfolio: 'Portfolio tracking and management features will be broken',
    market_data: 'Stock data and market information will be unavailable',
    analytics: 'Trading signals and analysis features will not work'
  });
  /* istanbul ignore next */
  cov_auk92v9qg().s[369]++;
  return /* istanbul ignore next */(cov_auk92v9qg().b[92][0]++, impacts[category]) ||
  /* istanbul ignore next */
  (cov_auk92v9qg().b[92][1]++, 'Some application features may be limited');
}

/**
 * Safe query that checks table existence first with comprehensive validation
 */
async function safeQuery(text, params =
/* istanbul ignore next */
(cov_auk92v9qg().b[93][0]++, []), requiredTables =
/* istanbul ignore next */
(cov_auk92v9qg().b[94][0]++, [])) {
  /* istanbul ignore next */
  cov_auk92v9qg().f[51]++;
  cov_auk92v9qg().s[370]++;
  if (requiredTables.length > 0) {
    /* istanbul ignore next */
    cov_auk92v9qg().b[95][0]++;
    const tableExistenceMap =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[371]++, await tablesExist(requiredTables));
    const missingTables =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[372]++, requiredTables.filter(table => {
      /* istanbul ignore next */
      cov_auk92v9qg().f[52]++;
      cov_auk92v9qg().s[373]++;
      return !tableExistenceMap[table];
    }));
    /* istanbul ignore next */
    cov_auk92v9qg().s[374]++;
    if (missingTables.length > 0) {
      /* istanbul ignore next */
      cov_auk92v9qg().b[96][0]++;
      cov_auk92v9qg().s[375]++;
      throw new Error(`Required tables not found: ${missingTables.join(', ')}`);
    } else
    /* istanbul ignore next */
    {
      cov_auk92v9qg().b[96][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_auk92v9qg().b[95][1]++;
  }
  cov_auk92v9qg().s[376]++;
  return await query(text, params);
}

/**
 * Close database connections
 */
async function closeDatabase() {
  /* istanbul ignore next */
  cov_auk92v9qg().f[53]++;
  cov_auk92v9qg().s[377]++;
  if (pool) {
    /* istanbul ignore next */
    cov_auk92v9qg().b[97][0]++;
    cov_auk92v9qg().s[378]++;
    await pool.end();
    /* istanbul ignore next */
    cov_auk92v9qg().s[379]++;
    pool = null;
    /* istanbul ignore next */
    cov_auk92v9qg().s[380]++;
    dbInitialized = false;
    /* istanbul ignore next */
    cov_auk92v9qg().s[381]++;
    dbConfig = null;
  } else
  /* istanbul ignore next */
  {
    cov_auk92v9qg().b[97][1]++;
  }
}

/**
 * Warm up database connections to reduce cold start latency
 */
async function warmConnections() {
  /* istanbul ignore next */
  cov_auk92v9qg().f[54]++;
  cov_auk92v9qg().s[382]++;
  console.log('🔥 Warming up database connections...');
  const warmStart =
  /* istanbul ignore next */
  (cov_auk92v9qg().s[383]++, Date.now());
  /* istanbul ignore next */
  cov_auk92v9qg().s[384]++;
  try {
    /* istanbul ignore next */
    cov_auk92v9qg().s[385]++;
    // Initialize database if not already done
    if (
    /* istanbul ignore next */
    (cov_auk92v9qg().b[99][0]++, !dbInitialized) ||
    /* istanbul ignore next */
    (cov_auk92v9qg().b[99][1]++, !pool)) {
      /* istanbul ignore next */
      cov_auk92v9qg().b[98][0]++;
      cov_auk92v9qg().s[386]++;
      await initializeDatabase();
    } else
    /* istanbul ignore next */
    {
      cov_auk92v9qg().b[98][1]++;
    }

    // Create and test connections up to pool max
    const maxConnections =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[387]++, 2); // Match our pool max
    const warmPromises =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[388]++, []);
    /* istanbul ignore next */
    cov_auk92v9qg().s[389]++;
    for (let i =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[390]++, 0); i < maxConnections; i++) {
      /* istanbul ignore next */
      cov_auk92v9qg().s[391]++;
      warmPromises.push((async () => {
        /* istanbul ignore next */
        cov_auk92v9qg().f[55]++;
        cov_auk92v9qg().s[392]++;
        try {
          const client =
          /* istanbul ignore next */
          (cov_auk92v9qg().s[393]++, await pool.connect());
          /* istanbul ignore next */
          cov_auk92v9qg().s[394]++;
          await client.query('SELECT 1'); // Simple test query
          /* istanbul ignore next */
          cov_auk92v9qg().s[395]++;
          client.release();
          /* istanbul ignore next */
          cov_auk92v9qg().s[396]++;
          console.log(`🔥 Connection ${i + 1} warmed successfully`);
        } catch (error) {
          /* istanbul ignore next */
          cov_auk92v9qg().s[397]++;
          console.warn(`⚠️ Failed to warm connection ${i + 1}:`, error.message);
        }
      })());
    }
    /* istanbul ignore next */
    cov_auk92v9qg().s[398]++;
    await Promise.all(warmPromises);
    /* istanbul ignore next */
    cov_auk92v9qg().s[399]++;
    console.log(`✅ Database connections warmed in ${Date.now() - warmStart}ms`);
  } catch (error) {
    /* istanbul ignore next */
    cov_auk92v9qg().s[400]++;
    console.error('❌ Failed to warm database connections:', error.message);
  }
}

/**
 * Lambda-optimized database initialization with connection warming
 */
async function initForLambda() {
  /* istanbul ignore next */
  cov_auk92v9qg().f[56]++;
  cov_auk92v9qg().s[401]++;
  console.log('🚀 Initializing database for Lambda with connection warming...');
  const lambdaInitStart =
  /* istanbul ignore next */
  (cov_auk92v9qg().s[402]++, Date.now());
  /* istanbul ignore next */
  cov_auk92v9qg().s[403]++;
  try {
    /* istanbul ignore next */
    cov_auk92v9qg().s[404]++;
    // Initialize database
    await initializeDatabase();

    // Warm connections to reduce future cold start latency
    /* istanbul ignore next */
    cov_auk92v9qg().s[405]++;
    await warmConnections();
    /* istanbul ignore next */
    cov_auk92v9qg().s[406]++;
    console.log(`🚀 Lambda database initialization complete in ${Date.now() - lambdaInitStart}ms`);
    /* istanbul ignore next */
    cov_auk92v9qg().s[407]++;
    return true;
  } catch (error) {
    /* istanbul ignore next */
    cov_auk92v9qg().s[408]++;
    console.error('❌ Lambda database initialization failed:', error.message);
    /* istanbul ignore next */
    cov_auk92v9qg().s[409]++;
    return false;
  }
}

/**
 * Extract table name from SQL query for performance tracking
 */
function extractTableName(sql) {
  /* istanbul ignore next */
  cov_auk92v9qg().f[57]++;
  cov_auk92v9qg().s[410]++;
  try {
    const cleanSql =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[411]++, sql.trim().toLowerCase());

    // Match common SQL patterns
    const patterns =
    /* istanbul ignore next */
    (cov_auk92v9qg().s[412]++, [/^insert\s+into\s+([a-zA-Z_][a-zA-Z0-9_]*)/, /^update\s+([a-zA-Z_][a-zA-Z0-9_]*)/, /^delete\s+from\s+([a-zA-Z_][a-zA-Z0-9_]*)/, /^select\s+.*?\s+from\s+([a-zA-Z_][a-zA-Z0-9_]*)/, /^create\s+table\s+([a-zA-Z_][a-zA-Z0-9_]*)/, /^drop\s+table\s+([a-zA-Z_][a-zA-Z0-9_]*)/, /^truncate\s+table\s+([a-zA-Z_][a-zA-Z0-9_]*)/, /^alter\s+table\s+([a-zA-Z_][a-zA-Z0-9_]*)/]);
    /* istanbul ignore next */
    cov_auk92v9qg().s[413]++;
    for (const pattern of patterns) {
      const match =
      /* istanbul ignore next */
      (cov_auk92v9qg().s[414]++, cleanSql.match(pattern));
      /* istanbul ignore next */
      cov_auk92v9qg().s[415]++;
      if (match) {
        /* istanbul ignore next */
        cov_auk92v9qg().b[100][0]++;
        cov_auk92v9qg().s[416]++;
        return match[1];
      } else
      /* istanbul ignore next */
      {
        cov_auk92v9qg().b[100][1]++;
      }
    }
    /* istanbul ignore next */
    cov_auk92v9qg().s[417]++;
    return 'unknown';
  } catch (error) {
    /* istanbul ignore next */
    cov_auk92v9qg().s[418]++;
    return 'unknown';
  }
}

/**
 * Reset database state for testing purposes
 */
async function resetDatabaseState() {
  /* istanbul ignore next */
  cov_auk92v9qg().f[58]++;
  cov_auk92v9qg().s[419]++;
  if (pool) {
    /* istanbul ignore next */
    cov_auk92v9qg().b[101][0]++;
    cov_auk92v9qg().s[420]++;
    await pool.end();
    /* istanbul ignore next */
    cov_auk92v9qg().s[421]++;
    pool = null;
  } else
  /* istanbul ignore next */
  {
    cov_auk92v9qg().b[101][1]++;
  }
  cov_auk92v9qg().s[422]++;
  dbInitialized = false;
  /* istanbul ignore next */
  cov_auk92v9qg().s[423]++;
  dbConfig = null;
  /* istanbul ignore next */
  cov_auk92v9qg().s[424]++;
  console.log('🔄 Database state reset for testing');
}
/* istanbul ignore next */
cov_auk92v9qg().s[425]++;
module.exports = {
  initializeDatabase,
  initForLambda,
  warmConnections,
  getPool,
  getPoolStatus,
  query,
  safeQuery,
  tableExists,
  tablesExist,
  validateDatabaseSchema,
  transaction,
  closeDatabase,
  healthCheck,
  resetDatabaseState,
  REQUIRED_SCHEMA,
  extractTableName
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,