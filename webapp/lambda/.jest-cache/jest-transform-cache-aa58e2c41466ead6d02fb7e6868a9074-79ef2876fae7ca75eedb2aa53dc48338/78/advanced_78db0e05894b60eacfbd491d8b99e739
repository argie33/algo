6912b38f6f74ea87b7ed099e1a4ccb09
/* istanbul ignore next */
function cov_qzbtihnc1() {
  var path = "/home/stocks/algo/webapp/lambda/routes/advanced.js";
  var hash = "099376852e8ad11c4ecf3788edb797e25d355a32";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/stocks/algo/webapp/lambda/routes/advanced.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 16
        },
        end: {
          line: 1,
          column: 34
        }
      },
      "1": {
        start: {
          line: 2,
          column: 15
        },
        end: {
          line: 2,
          column: 31
        }
      },
      "2": {
        start: {
          line: 3,
          column: 27
        },
        end: {
          line: 3,
          column: 64
        }
      },
      "3": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 40,
          column: 1
        }
      },
      "4": {
        start: {
          line: 11,
          column: 27
        },
        end: {
          line: 11,
          column: 63
        }
      },
      "5": {
        start: {
          line: 12,
          column: 2
        },
        end: {
          line: 12,
          column: 82
        }
      },
      "6": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 56
        }
      },
      "7": {
        start: {
          line: 15,
          column: 2
        },
        end: {
          line: 15,
          column: 69
        }
      },
      "8": {
        start: {
          line: 17,
          column: 15
        },
        end: {
          line: 17,
          column: 44
        }
      },
      "9": {
        start: {
          line: 18,
          column: 2
        },
        end: {
          line: 18,
          column: 43
        }
      },
      "10": {
        start: {
          line: 20,
          column: 2
        },
        end: {
          line: 20,
          column: 72
        }
      },
      "11": {
        start: {
          line: 21,
          column: 2
        },
        end: {
          line: 21,
          column: 80
        }
      },
      "12": {
        start: {
          line: 22,
          column: 2
        },
        end: {
          line: 22,
          column: 70
        }
      },
      "13": {
        start: {
          line: 23,
          column: 2
        },
        end: {
          line: 23,
          column: 60
        }
      },
      "14": {
        start: {
          line: 24,
          column: 2
        },
        end: {
          line: 24,
          column: 68
        }
      },
      "15": {
        start: {
          line: 25,
          column: 2
        },
        end: {
          line: 25,
          column: 58
        }
      },
      "16": {
        start: {
          line: 28,
          column: 2
        },
        end: {
          line: 28,
          column: 87
        }
      },
      "17": {
        start: {
          line: 30,
          column: 2
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "18": {
        start: {
          line: 36,
          column: 2
        },
        end: {
          line: 39,
          column: 4
        }
      },
      "19": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 39
        }
      },
      "20": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 11
        }
      },
      "21": {
        start: {
          line: 43,
          column: 23
        },
        end: {
          line: 49,
          column: 1
        }
      },
      "22": {
        start: {
          line: 44,
          column: 2
        },
        end: {
          line: 48,
          column: 3
        }
      },
      "23": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 45,
          column: 51
        }
      },
      "24": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 47,
          column: 41
        }
      },
      "25": {
        start: {
          line: 54,
          column: 0
        },
        end: {
          line: 63,
          column: 1
        }
      },
      "26": {
        start: {
          line: 55,
          column: 2
        },
        end: {
          line: 55,
          column: 79
        }
      },
      "27": {
        start: {
          line: 55,
          column: 31
        },
        end: {
          line: 55,
          column: 79
        }
      },
      "28": {
        start: {
          line: 56,
          column: 2
        },
        end: {
          line: 56,
          column: 90
        }
      },
      "29": {
        start: {
          line: 56,
          column: 35
        },
        end: {
          line: 56,
          column: 90
        }
      },
      "30": {
        start: {
          line: 57,
          column: 2
        },
        end: {
          line: 57,
          column: 75
        }
      },
      "31": {
        start: {
          line: 57,
          column: 30
        },
        end: {
          line: 57,
          column: 75
        }
      },
      "32": {
        start: {
          line: 58,
          column: 2
        },
        end: {
          line: 58,
          column: 69
        }
      },
      "33": {
        start: {
          line: 58,
          column: 25
        },
        end: {
          line: 58,
          column: 69
        }
      },
      "34": {
        start: {
          line: 59,
          column: 2
        },
        end: {
          line: 59,
          column: 75
        }
      },
      "35": {
        start: {
          line: 59,
          column: 29
        },
        end: {
          line: 59,
          column: 75
        }
      },
      "36": {
        start: {
          line: 60,
          column: 2
        },
        end: {
          line: 60,
          column: 66
        }
      },
      "37": {
        start: {
          line: 60,
          column: 24
        },
        end: {
          line: 60,
          column: 66
        }
      },
      "38": {
        start: {
          line: 62,
          column: 2
        },
        end: {
          line: 62,
          column: 93
        }
      },
      "39": {
        start: {
          line: 66,
          column: 34
        },
        end: {
          line: 124,
          column: 1
        }
      },
      "40": {
        start: {
          line: 130,
          column: 0
        },
        end: {
          line: 187,
          column: 2
        }
      },
      "41": {
        start: {
          line: 133,
          column: 26
        },
        end: {
          line: 133,
          column: 83
        }
      },
      "42": {
        start: {
          line: 134,
          column: 57
        },
        end: {
          line: 134,
          column: 65
        }
      },
      "43": {
        start: {
          line: 135,
          column: 22
        },
        end: {
          line: 135,
          column: 32
        }
      },
      "44": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 185,
          column: 5
        }
      },
      "45": {
        start: {
          line: 138,
          column: 6
        },
        end: {
          line: 140,
          column: 7
        }
      },
      "46": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 127
        }
      },
      "47": {
        start: {
          line: 142,
          column: 6
        },
        end: {
          line: 148,
          column: 9
        }
      },
      "48": {
        start: {
          line: 150,
          column: 25
        },
        end: {
          line: 150,
          column: 99
        }
      },
      "49": {
        start: {
          line: 151,
          column: 29
        },
        end: {
          line: 151,
          column: 51
        }
      },
      "50": {
        start: {
          line: 153,
          column: 6
        },
        end: {
          line: 158,
          column: 9
        }
      },
      "51": {
        start: {
          line: 160,
          column: 6
        },
        end: {
          line: 170,
          column: 10
        }
      },
      "52": {
        start: {
          line: 173,
          column: 6
        },
        end: {
          line: 179,
          column: 9
        }
      },
      "53": {
        start: {
          line: 181,
          column: 6
        },
        end: {
          line: 184,
          column: 10
        }
      },
      "54": {
        start: {
          line: 193,
          column: 0
        },
        end: {
          line: 253,
          column: 2
        }
      },
      "55": {
        start: {
          line: 197,
          column: 26
        },
        end: {
          line: 197,
          column: 43
        }
      },
      "56": {
        start: {
          line: 198,
          column: 57
        },
        end: {
          line: 198,
          column: 70
        }
      },
      "57": {
        start: {
          line: 199,
          column: 22
        },
        end: {
          line: 199,
          column: 32
        }
      },
      "58": {
        start: {
          line: 201,
          column: 4
        },
        end: {
          line: 251,
          column: 5
        }
      },
      "59": {
        start: {
          line: 202,
          column: 6
        },
        end: {
          line: 208,
          column: 9
        }
      },
      "60": {
        start: {
          line: 211,
          column: 31
        },
        end: {
          line: 211,
          column: 90
        }
      },
      "61": {
        start: {
          line: 213,
          column: 6
        },
        end: {
          line: 217,
          column: 7
        }
      },
      "62": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 216,
          column: 12
        }
      },
      "63": {
        start: {
          line: 219,
          column: 26
        },
        end: {
          line: 219,
          column: 73
        }
      },
      "64": {
        start: {
          line: 220,
          column: 33
        },
        end: {
          line: 220,
          column: 123
        }
      },
      "65": {
        start: {
          line: 221,
          column: 29
        },
        end: {
          line: 221,
          column: 51
        }
      },
      "66": {
        start: {
          line: 223,
          column: 6
        },
        end: {
          line: 228,
          column: 9
        }
      },
      "67": {
        start: {
          line: 230,
          column: 6
        },
        end: {
          line: 237,
          column: 10
        }
      },
      "68": {
        start: {
          line: 240,
          column: 6
        },
        end: {
          line: 245,
          column: 9
        }
      },
      "69": {
        start: {
          line: 247,
          column: 6
        },
        end: {
          line: 250,
          column: 10
        }
      },
      "70": {
        start: {
          line: 259,
          column: 0
        },
        end: {
          line: 308,
          column: 2
        }
      },
      "71": {
        start: {
          line: 262,
          column: 26
        },
        end: {
          line: 262,
          column: 43
        }
      },
      "72": {
        start: {
          line: 263,
          column: 24
        },
        end: {
          line: 263,
          column: 38
        }
      },
      "73": {
        start: {
          line: 264,
          column: 22
        },
        end: {
          line: 264,
          column: 32
        }
      },
      "74": {
        start: {
          line: 266,
          column: 4
        },
        end: {
          line: 306,
          column: 5
        }
      },
      "75": {
        start: {
          line: 267,
          column: 6
        },
        end: {
          line: 271,
          column: 9
        }
      },
      "76": {
        start: {
          line: 273,
          column: 28
        },
        end: {
          line: 273,
          column: 102
        }
      },
      "77": {
        start: {
          line: 274,
          column: 29
        },
        end: {
          line: 274,
          column: 51
        }
      },
      "78": {
        start: {
          line: 276,
          column: 6
        },
        end: {
          line: 283,
          column: 9
        }
      },
      "79": {
        start: {
          line: 285,
          column: 6
        },
        end: {
          line: 292,
          column: 10
        }
      },
      "80": {
        start: {
          line: 295,
          column: 6
        },
        end: {
          line: 300,
          column: 9
        }
      },
      "81": {
        start: {
          line: 302,
          column: 6
        },
        end: {
          line: 305,
          column: 10
        }
      },
      "82": {
        start: {
          line: 314,
          column: 0
        },
        end: {
          line: 368,
          column: 2
        }
      },
      "83": {
        start: {
          line: 318,
          column: 26
        },
        end: {
          line: 318,
          column: 43
        }
      },
      "84": {
        start: {
          line: 319,
          column: 79
        },
        end: {
          line: 319,
          column: 92
        }
      },
      "85": {
        start: {
          line: 320,
          column: 22
        },
        end: {
          line: 320,
          column: 32
        }
      },
      "86": {
        start: {
          line: 322,
          column: 4
        },
        end: {
          line: 366,
          column: 5
        }
      },
      "87": {
        start: {
          line: 323,
          column: 6
        },
        end: {
          line: 331,
          column: 9
        }
      },
      "88": {
        start: {
          line: 333,
          column: 29
        },
        end: {
          line: 333,
          column: 119
        }
      },
      "89": {
        start: {
          line: 334,
          column: 29
        },
        end: {
          line: 334,
          column: 51
        }
      },
      "90": {
        start: {
          line: 336,
          column: 6
        },
        end: {
          line: 343,
          column: 9
        }
      },
      "91": {
        start: {
          line: 345,
          column: 6
        },
        end: {
          line: 352,
          column: 10
        }
      },
      "92": {
        start: {
          line: 355,
          column: 6
        },
        end: {
          line: 360,
          column: 9
        }
      },
      "93": {
        start: {
          line: 362,
          column: 6
        },
        end: {
          line: 365,
          column: 10
        }
      },
      "94": {
        start: {
          line: 374,
          column: 0
        },
        end: {
          line: 423,
          column: 2
        }
      },
      "95": {
        start: {
          line: 378,
          column: 26
        },
        end: {
          line: 378,
          column: 43
        }
      },
      "96": {
        start: {
          line: 379,
          column: 47
        },
        end: {
          line: 379,
          column: 60
        }
      },
      "97": {
        start: {
          line: 380,
          column: 22
        },
        end: {
          line: 380,
          column: 32
        }
      },
      "98": {
        start: {
          line: 382,
          column: 4
        },
        end: {
          line: 421,
          column: 5
        }
      },
      "99": {
        start: {
          line: 383,
          column: 6
        },
        end: {
          line: 387,
          column: 9
        }
      },
      "100": {
        start: {
          line: 389,
          column: 30
        },
        end: {
          line: 389,
          column: 89
        }
      },
      "101": {
        start: {
          line: 390,
          column: 29
        },
        end: {
          line: 390,
          column: 51
        }
      },
      "102": {
        start: {
          line: 392,
          column: 6
        },
        end: {
          line: 398,
          column: 9
        }
      },
      "103": {
        start: {
          line: 400,
          column: 6
        },
        end: {
          line: 407,
          column: 10
        }
      },
      "104": {
        start: {
          line: 410,
          column: 6
        },
        end: {
          line: 415,
          column: 9
        }
      },
      "105": {
        start: {
          line: 417,
          column: 6
        },
        end: {
          line: 420,
          column: 10
        }
      },
      "106": {
        start: {
          line: 429,
          column: 0
        },
        end: {
          line: 478,
          column: 2
        }
      },
      "107": {
        start: {
          line: 433,
          column: 26
        },
        end: {
          line: 433,
          column: 43
        }
      },
      "108": {
        start: {
          line: 434,
          column: 39
        },
        end: {
          line: 434,
          column: 52
        }
      },
      "109": {
        start: {
          line: 435,
          column: 22
        },
        end: {
          line: 435,
          column: 32
        }
      },
      "110": {
        start: {
          line: 437,
          column: 4
        },
        end: {
          line: 476,
          column: 5
        }
      },
      "111": {
        start: {
          line: 438,
          column: 6
        },
        end: {
          line: 442,
          column: 9
        }
      },
      "112": {
        start: {
          line: 444,
          column: 30
        },
        end: {
          line: 444,
          column: 93
        }
      },
      "113": {
        start: {
          line: 445,
          column: 29
        },
        end: {
          line: 445,
          column: 51
        }
      },
      "114": {
        start: {
          line: 447,
          column: 6
        },
        end: {
          line: 453,
          column: 9
        }
      },
      "115": {
        start: {
          line: 455,
          column: 6
        },
        end: {
          line: 462,
          column: 10
        }
      },
      "116": {
        start: {
          line: 465,
          column: 6
        },
        end: {
          line: 470,
          column: 9
        }
      },
      "117": {
        start: {
          line: 472,
          column: 6
        },
        end: {
          line: 475,
          column: 10
        }
      },
      "118": {
        start: {
          line: 484,
          column: 0
        },
        end: {
          line: 529,
          column: 2
        }
      },
      "119": {
        start: {
          line: 487,
          column: 26
        },
        end: {
          line: 487,
          column: 43
        }
      },
      "120": {
        start: {
          line: 488,
          column: 22
        },
        end: {
          line: 488,
          column: 32
        }
      },
      "121": {
        start: {
          line: 490,
          column: 4
        },
        end: {
          line: 527,
          column: 5
        }
      },
      "122": {
        start: {
          line: 491,
          column: 6
        },
        end: {
          line: 494,
          column: 9
        }
      },
      "123": {
        start: {
          line: 496,
          column: 32
        },
        end: {
          line: 496,
          column: 97
        }
      },
      "124": {
        start: {
          line: 497,
          column: 29
        },
        end: {
          line: 497,
          column: 51
        }
      },
      "125": {
        start: {
          line: 499,
          column: 6
        },
        end: {
          line: 504,
          column: 9
        }
      },
      "126": {
        start: {
          line: 506,
          column: 6
        },
        end: {
          line: 513,
          column: 10
        }
      },
      "127": {
        start: {
          line: 516,
          column: 6
        },
        end: {
          line: 521,
          column: 9
        }
      },
      "128": {
        start: {
          line: 523,
          column: 6
        },
        end: {
          line: 526,
          column: 10
        }
      },
      "129": {
        start: {
          line: 535,
          column: 0
        },
        end: {
          line: 579,
          column: 2
        }
      },
      "130": {
        start: {
          line: 538,
          column: 26
        },
        end: {
          line: 538,
          column: 43
        }
      },
      "131": {
        start: {
          line: 539,
          column: 22
        },
        end: {
          line: 539,
          column: 32
        }
      },
      "132": {
        start: {
          line: 541,
          column: 4
        },
        end: {
          line: 577,
          column: 5
        }
      },
      "133": {
        start: {
          line: 542,
          column: 6
        },
        end: {
          line: 545,
          column: 9
        }
      },
      "134": {
        start: {
          line: 547,
          column: 35
        },
        end: {
          line: 547,
          column: 103
        }
      },
      "135": {
        start: {
          line: 548,
          column: 29
        },
        end: {
          line: 548,
          column: 51
        }
      },
      "136": {
        start: {
          line: 550,
          column: 6
        },
        end: {
          line: 554,
          column: 9
        }
      },
      "137": {
        start: {
          line: 556,
          column: 6
        },
        end: {
          line: 563,
          column: 10
        }
      },
      "138": {
        start: {
          line: 566,
          column: 6
        },
        end: {
          line: 571,
          column: 9
        }
      },
      "139": {
        start: {
          line: 573,
          column: 6
        },
        end: {
          line: 576,
          column: 10
        }
      },
      "140": {
        start: {
          line: 585,
          column: 0
        },
        end: {
          line: 629,
          column: 2
        }
      },
      "141": {
        start: {
          line: 588,
          column: 26
        },
        end: {
          line: 588,
          column: 43
        }
      },
      "142": {
        start: {
          line: 589,
          column: 22
        },
        end: {
          line: 589,
          column: 32
        }
      },
      "143": {
        start: {
          line: 591,
          column: 4
        },
        end: {
          line: 627,
          column: 5
        }
      },
      "144": {
        start: {
          line: 592,
          column: 6
        },
        end: {
          line: 595,
          column: 9
        }
      },
      "145": {
        start: {
          line: 597,
          column: 27
        },
        end: {
          line: 597,
          column: 89
        }
      },
      "146": {
        start: {
          line: 598,
          column: 29
        },
        end: {
          line: 598,
          column: 51
        }
      },
      "147": {
        start: {
          line: 600,
          column: 6
        },
        end: {
          line: 604,
          column: 9
        }
      },
      "148": {
        start: {
          line: 606,
          column: 6
        },
        end: {
          line: 613,
          column: 10
        }
      },
      "149": {
        start: {
          line: 616,
          column: 6
        },
        end: {
          line: 621,
          column: 9
        }
      },
      "150": {
        start: {
          line: 623,
          column: 6
        },
        end: {
          line: 626,
          column: 10
        }
      },
      "151": {
        start: {
          line: 635,
          column: 0
        },
        end: {
          line: 642,
          column: 3
        }
      },
      "152": {
        start: {
          line: 636,
          column: 2
        },
        end: {
          line: 641,
          column: 6
        }
      },
      "153": {
        start: {
          line: 648,
          column: 0
        },
        end: {
          line: 701,
          column: 3
        }
      },
      "154": {
        start: {
          line: 649,
          column: 24
        },
        end: {
          line: 649,
          column: 41
        }
      },
      "155": {
        start: {
          line: 650,
          column: 20
        },
        end: {
          line: 650,
          column: 30
        }
      },
      "156": {
        start: {
          line: 652,
          column: 2
        },
        end: {
          line: 700,
          column: 3
        }
      },
      "157": {
        start: {
          line: 653,
          column: 4
        },
        end: {
          line: 655,
          column: 7
        }
      },
      "158": {
        start: {
          line: 657,
          column: 25
        },
        end: {
          line: 671,
          column: 5
        }
      },
      "159": {
        start: {
          line: 673,
          column: 27
        },
        end: {
          line: 673,
          column: 49
        }
      },
      "160": {
        start: {
          line: 675,
          column: 4
        },
        end: {
          line: 678,
          column: 7
        }
      },
      "161": {
        start: {
          line: 680,
          column: 4
        },
        end: {
          line: 687,
          column: 8
        }
      },
      "162": {
        start: {
          line: 690,
          column: 4
        },
        end: {
          line: 694,
          column: 7
        }
      },
      "163": {
        start: {
          line: 696,
          column: 4
        },
        end: {
          line: 699,
          column: 8
        }
      },
      "164": {
        start: {
          line: 703,
          column: 0
        },
        end: {
          line: 703,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 36,
            column: 21
          },
          end: {
            line: 36,
            column: 22
          }
        },
        loc: {
          start: {
            line: 36,
            column: 41
          },
          end: {
            line: 39,
            column: 3
          }
        },
        line: 36
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 43,
            column: 23
          },
          end: {
            line: 43,
            column: 24
          }
        },
        loc: {
          start: {
            line: 43,
            column: 68
          },
          end: {
            line: 49,
            column: 1
          }
        },
        line: 43
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 132,
            column: 2
          },
          end: {
            line: 132,
            column: 3
          }
        },
        loc: {
          start: {
            line: 132,
            column: 22
          },
          end: {
            line: 186,
            column: 3
          }
        },
        line: 132
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 196,
            column: 2
          },
          end: {
            line: 196,
            column: 3
          }
        },
        loc: {
          start: {
            line: 196,
            column: 22
          },
          end: {
            line: 252,
            column: 3
          }
        },
        line: 196
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 261,
            column: 2
          },
          end: {
            line: 261,
            column: 3
          }
        },
        loc: {
          start: {
            line: 261,
            column: 22
          },
          end: {
            line: 307,
            column: 3
          }
        },
        line: 261
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 317,
            column: 2
          },
          end: {
            line: 317,
            column: 3
          }
        },
        loc: {
          start: {
            line: 317,
            column: 22
          },
          end: {
            line: 367,
            column: 3
          }
        },
        line: 317
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 377,
            column: 2
          },
          end: {
            line: 377,
            column: 3
          }
        },
        loc: {
          start: {
            line: 377,
            column: 22
          },
          end: {
            line: 422,
            column: 3
          }
        },
        line: 377
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 432,
            column: 2
          },
          end: {
            line: 432,
            column: 3
          }
        },
        loc: {
          start: {
            line: 432,
            column: 22
          },
          end: {
            line: 477,
            column: 3
          }
        },
        line: 432
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 486,
            column: 2
          },
          end: {
            line: 486,
            column: 3
          }
        },
        loc: {
          start: {
            line: 486,
            column: 22
          },
          end: {
            line: 528,
            column: 3
          }
        },
        line: 486
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 537,
            column: 2
          },
          end: {
            line: 537,
            column: 3
          }
        },
        loc: {
          start: {
            line: 537,
            column: 22
          },
          end: {
            line: 578,
            column: 3
          }
        },
        line: 537
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 587,
            column: 2
          },
          end: {
            line: 587,
            column: 3
          }
        },
        loc: {
          start: {
            line: 587,
            column: 22
          },
          end: {
            line: 628,
            column: 3
          }
        },
        line: 587
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 635,
            column: 22
          },
          end: {
            line: 635,
            column: 23
          }
        },
        loc: {
          start: {
            line: 635,
            column: 36
          },
          end: {
            line: 642,
            column: 1
          }
        },
        line: 635
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 648,
            column: 27
          },
          end: {
            line: 648,
            column: 28
          }
        },
        loc: {
          start: {
            line: 648,
            column: 47
          },
          end: {
            line: 701,
            column: 1
          }
        },
        line: 648
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 43,
            column: 50
          },
          end: {
            line: 43,
            column: 63
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 43,
            column: 61
          },
          end: {
            line: 43,
            column: 63
          }
        }],
        line: 43
      },
      "1": {
        loc: {
          start: {
            line: 44,
            column: 2
          },
          end: {
            line: 48,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 2
          },
          end: {
            line: 48,
            column: 3
          }
        }, {
          start: {
            line: 46,
            column: 9
          },
          end: {
            line: 48,
            column: 3
          }
        }],
        line: 44
      },
      "2": {
        loc: {
          start: {
            line: 55,
            column: 2
          },
          end: {
            line: 55,
            column: 79
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 2
          },
          end: {
            line: 55,
            column: 79
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "3": {
        loc: {
          start: {
            line: 56,
            column: 2
          },
          end: {
            line: 56,
            column: 90
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 2
          },
          end: {
            line: 56,
            column: 90
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "4": {
        loc: {
          start: {
            line: 57,
            column: 2
          },
          end: {
            line: 57,
            column: 75
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 2
          },
          end: {
            line: 57,
            column: 75
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "5": {
        loc: {
          start: {
            line: 58,
            column: 2
          },
          end: {
            line: 58,
            column: 69
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 2
          },
          end: {
            line: 58,
            column: 69
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "6": {
        loc: {
          start: {
            line: 59,
            column: 2
          },
          end: {
            line: 59,
            column: 75
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 2
          },
          end: {
            line: 59,
            column: 75
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "7": {
        loc: {
          start: {
            line: 60,
            column: 2
          },
          end: {
            line: 60,
            column: 66
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 2
          },
          end: {
            line: 60,
            column: 66
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "8": {
        loc: {
          start: {
            line: 133,
            column: 26
          },
          end: {
            line: 133,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 133,
            column: 26
          },
          end: {
            line: 133,
            column: 57
          }
        }, {
          start: {
            line: 133,
            column: 61
          },
          end: {
            line: 133,
            column: 83
          }
        }],
        line: 133
      },
      "9": {
        loc: {
          start: {
            line: 134,
            column: 20
          },
          end: {
            line: 134,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 134,
            column: 32
          },
          end: {
            line: 134,
            column: 36
          }
        }],
        line: 134
      },
      "10": {
        loc: {
          start: {
            line: 134,
            column: 38
          },
          end: {
            line: 134,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 134,
            column: 49
          },
          end: {
            line: 134,
            column: 52
          }
        }],
        line: 134
      },
      "11": {
        loc: {
          start: {
            line: 138,
            column: 6
          },
          end: {
            line: 140,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 6
          },
          end: {
            line: 140,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "12": {
        loc: {
          start: {
            line: 213,
            column: 6
          },
          end: {
            line: 217,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 6
          },
          end: {
            line: 217,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "13": {
        loc: {
          start: {
            line: 213,
            column: 10
          },
          end: {
            line: 213,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 10
          },
          end: {
            line: 213,
            column: 27
          }
        }, {
          start: {
            line: 213,
            column: 31
          },
          end: {
            line: 213,
            column: 60
          }
        }],
        line: 213
      },
      "14": {
        loc: {
          start: {
            line: 263,
            column: 24
          },
          end: {
            line: 263,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 263,
            column: 24
          },
          end: {
            line: 263,
            column: 32
          }
        }, {
          start: {
            line: 263,
            column: 36
          },
          end: {
            line: 263,
            column: 38
          }
        }],
        line: 263
      },
      "15": {
        loc: {
          start: {
            line: 279,
            column: 19
          },
          end: {
            line: 279,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 279,
            column: 19
          },
          end: {
            line: 279,
            column: 50
          }
        }, {
          start: {
            line: 279,
            column: 54
          },
          end: {
            line: 279,
            column: 55
          }
        }],
        line: 279
      },
      "16": {
        loc: {
          start: {
            line: 280,
            column: 16
          },
          end: {
            line: 280,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 280,
            column: 16
          },
          end: {
            line: 280,
            column: 59
          }
        }, {
          start: {
            line: 280,
            column: 63
          },
          end: {
            line: 280,
            column: 64
          }
        }],
        line: 280
      },
      "17": {
        loc: {
          start: {
            line: 319,
            column: 51
          },
          end: {
            line: 319,
            column: 74
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 319,
            column: 68
          },
          end: {
            line: 319,
            column: 74
          }
        }],
        line: 319
      },
      "18": {
        loc: {
          start: {
            line: 339,
            column: 21
          },
          end: {
            line: 339,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 339,
            column: 21
          },
          end: {
            line: 339,
            column: 69
          }
        }, {
          start: {
            line: 339,
            column: 73
          },
          end: {
            line: 339,
            column: 74
          }
        }],
        line: 339
      },
      "19": {
        loc: {
          start: {
            line: 340,
            column: 20
          },
          end: {
            line: 340,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 340,
            column: 20
          },
          end: {
            line: 340,
            column: 73
          }
        }, {
          start: {
            line: 340,
            column: 77
          },
          end: {
            line: 340,
            column: 78
          }
        }],
        line: 340
      },
      "20": {
        loc: {
          start: {
            line: 379,
            column: 12
          },
          end: {
            line: 379,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 379,
            column: 27
          },
          end: {
            line: 379,
            column: 42
          }
        }],
        line: 379
      },
      "21": {
        loc: {
          start: {
            line: 434,
            column: 12
          },
          end: {
            line: 434,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 434,
            column: 19
          },
          end: {
            line: 434,
            column: 34
          }
        }],
        line: 434
      },
      "22": {
        loc: {
          start: {
            line: 501,
            column: 23
          },
          end: {
            line: 501,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 501,
            column: 23
          },
          end: {
            line: 501,
            column: 58
          }
        }, {
          start: {
            line: 501,
            column: 62
          },
          end: {
            line: 501,
            column: 63
          }
        }],
        line: 501
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0],
      "10": [0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0],
      "21": [0],
      "22": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "099376852e8ad11c4ecf3788edb797e25d355a32"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_qzbtihnc1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_qzbtihnc1();
const express =
/* istanbul ignore next */
(cov_qzbtihnc1().s[0]++, require('express'));
const router =
/* istanbul ignore next */
(cov_qzbtihnc1().s[1]++, express.Router());
const {
  success,
  error
} =
/* istanbul ignore next */
(cov_qzbtihnc1().s[2]++, require('../utils/responseFormatter'));

// Import dependencies with error handling
let logger, createValidationMiddleware, authenticateUser;
let AdvancedSignalProcessor, PortfolioOptimizationEngine, AutomatedTradingEngine;
let BacktestingEngine, MarketAnalyticsEngine, DashboardService;
/* istanbul ignore next */
cov_qzbtihnc1().s[3]++;
try {
  const structuredLogger =
  /* istanbul ignore next */
  (cov_qzbtihnc1().s[4]++, require('../utils/structuredLogger'));
  /* istanbul ignore next */
  cov_qzbtihnc1().s[5]++;
  logger = structuredLogger.createLogger('financial-platform', 'advanced-routes');
  const validation =
  /* istanbul ignore next */
  (cov_qzbtihnc1().s[6]++, require('../middleware/validation'));
  /* istanbul ignore next */
  cov_qzbtihnc1().s[7]++;
  createValidationMiddleware = validation.createValidationMiddleware;
  const auth =
  /* istanbul ignore next */
  (cov_qzbtihnc1().s[8]++, require('../middleware/auth'));
  /* istanbul ignore next */
  cov_qzbtihnc1().s[9]++;
  authenticateUser = auth.authenticateUser;
  /* istanbul ignore next */
  cov_qzbtihnc1().s[10]++;
  AdvancedSignalProcessor = require('../utils/advancedSignalProcessor');
  /* istanbul ignore next */
  cov_qzbtihnc1().s[11]++;
  PortfolioOptimizationEngine = require('../utils/portfolioOptimizationEngine');
  /* istanbul ignore next */
  cov_qzbtihnc1().s[12]++;
  AutomatedTradingEngine = require('../utils/automatedTradingEngine');
  /* istanbul ignore next */
  cov_qzbtihnc1().s[13]++;
  BacktestingEngine = require('../utils/backtestingEngine');
  /* istanbul ignore next */
  cov_qzbtihnc1().s[14]++;
  MarketAnalyticsEngine = require('../utils/marketAnalyticsEngine');
  /* istanbul ignore next */
  cov_qzbtihnc1().s[15]++;
  DashboardService = require('../utils/dashboardService');
} catch (loadError) {
  /* istanbul ignore next */
  cov_qzbtihnc1().s[16]++;
  console.warn('Some advanced trading dependencies not available:', loadError.message);
  // Create fallback logger
  /* istanbul ignore next */
  cov_qzbtihnc1().s[17]++;
  logger = {
    info: console.log,
    error: console.error,
    warn: console.warn
  };
  // Create fallback auth middleware
  /* istanbul ignore next */
  cov_qzbtihnc1().s[18]++;
  authenticateUser = (req, res, next) => {
    /* istanbul ignore next */
    cov_qzbtihnc1().f[0]++;
    cov_qzbtihnc1().s[19]++;
    req.user = {
      userId: 'demo-user'
    };
    /* istanbul ignore next */
    cov_qzbtihnc1().s[20]++;
    next();
  };
}

// Wrapper to match the expected createResponse signature
/* istanbul ignore next */
cov_qzbtihnc1().s[21]++;
const createResponse = (isSuccess, message, data, metadata =
/* istanbul ignore next */
(cov_qzbtihnc1().b[0][0]++, {})) => {
  /* istanbul ignore next */
  cov_qzbtihnc1().f[1]++;
  cov_qzbtihnc1().s[22]++;
  if (isSuccess) {
    /* istanbul ignore next */
    cov_qzbtihnc1().b[1][0]++;
    cov_qzbtihnc1().s[23]++;
    return success(data, {
      message,
      ...metadata
    });
  } else {
    /* istanbul ignore next */
    cov_qzbtihnc1().b[1][1]++;
    cov_qzbtihnc1().s[24]++;
    return error(message, 500, metadata);
  }
};

// Initialize services conditionally
let signalProcessor, portfolioOptimizer, tradingEngine, backtestingEngine, marketAnalytics, dashboardService;
/* istanbul ignore next */
cov_qzbtihnc1().s[25]++;
try {
  /* istanbul ignore next */
  cov_qzbtihnc1().s[26]++;
  if (AdvancedSignalProcessor) {
    /* istanbul ignore next */
    cov_qzbtihnc1().b[2][0]++;
    cov_qzbtihnc1().s[27]++;
    signalProcessor = new AdvancedSignalProcessor();
  } else
  /* istanbul ignore next */
  {
    cov_qzbtihnc1().b[2][1]++;
  }
  cov_qzbtihnc1().s[28]++;
  if (PortfolioOptimizationEngine) {
    /* istanbul ignore next */
    cov_qzbtihnc1().b[3][0]++;
    cov_qzbtihnc1().s[29]++;
    portfolioOptimizer = new PortfolioOptimizationEngine();
  } else
  /* istanbul ignore next */
  {
    cov_qzbtihnc1().b[3][1]++;
  }
  cov_qzbtihnc1().s[30]++;
  if (AutomatedTradingEngine) {
    /* istanbul ignore next */
    cov_qzbtihnc1().b[4][0]++;
    cov_qzbtihnc1().s[31]++;
    tradingEngine = new AutomatedTradingEngine();
  } else
  /* istanbul ignore next */
  {
    cov_qzbtihnc1().b[4][1]++;
  }
  cov_qzbtihnc1().s[32]++;
  if (BacktestingEngine) {
    /* istanbul ignore next */
    cov_qzbtihnc1().b[5][0]++;
    cov_qzbtihnc1().s[33]++;
    backtestingEngine = new BacktestingEngine();
  } else
  /* istanbul ignore next */
  {
    cov_qzbtihnc1().b[5][1]++;
  }
  cov_qzbtihnc1().s[34]++;
  if (MarketAnalyticsEngine) {
    /* istanbul ignore next */
    cov_qzbtihnc1().b[6][0]++;
    cov_qzbtihnc1().s[35]++;
    marketAnalytics = new MarketAnalyticsEngine();
  } else
  /* istanbul ignore next */
  {
    cov_qzbtihnc1().b[6][1]++;
  }
  cov_qzbtihnc1().s[36]++;
  if (DashboardService) {
    /* istanbul ignore next */
    cov_qzbtihnc1().b[7][0]++;
    cov_qzbtihnc1().s[37]++;
    dashboardService = new DashboardService();
  } else
  /* istanbul ignore next */
  {
    cov_qzbtihnc1().b[7][1]++;
  }
} catch (serviceError) {
  /* istanbul ignore next */
  cov_qzbtihnc1().s[38]++;
  console.warn('Could not initialize some advanced trading services:', serviceError.message);
}

// Validation schemas
const advancedValidationSchemas =
/* istanbul ignore next */
(cov_qzbtihnc1().s[39]++, {
  generateSignals: {
    type: 'object',
    properties: {
      symbol: {
        type: 'string',
        pattern: '^[A-Z]{1,5}$'
      },
      timeframe: {
        type: 'string',
        enum: ['1m', '5m', '15m', '1h', '4h', '1d']
      },
      lookback: {
        type: 'integer',
        minimum: 10,
        maximum: 1000
      }
    },
    required: ['symbol'],
    additionalProperties: false
  },
  optimizePortfolio: {
    type: 'object',
    properties: {
      riskTolerance: {
        type: 'number',
        minimum: 0,
        maximum: 1
      },
      targetReturn: {
        type: 'number'
      },
      constraints: {
        type: 'object',
        properties: {
          maxWeight: {
            type: 'number',
            minimum: 0,
            maximum: 1
          },
          minWeight: {
            type: 'number',
            minimum: 0,
            maximum: 1
          }
        }
      }
    },
    additionalProperties: false
  },
  runBacktest: {
    type: 'object',
    properties: {
      symbols: {
        type: 'array',
        items: {
          type: 'string',
          pattern: '^[A-Z]{1,5}$'
        },
        minItems: 1,
        maxItems: 50
      },
      startDate: {
        type: 'string',
        format: 'date'
      },
      endDate: {
        type: 'string',
        format: 'date'
      },
      strategy: {
        type: 'string',
        enum: ['ma_crossover_rsi', 'momentum', 'mean_reversion', 'custom']
      },
      initialCapital: {
        type: 'number',
        minimum: 1000,
        maximum: 10000000
      }
    },
    required: ['symbols', 'startDate', 'endDate', 'strategy'],
    additionalProperties: false
  },
  marketAnalytics: {
    type: 'object',
    properties: {
      analysisType: {
        type: 'string',
        enum: ['comprehensive', 'overview', 'sector', 'sentiment', 'volatility', 'momentum', 'correlation', 'regime', 'anomaly', 'liquidity', 'risk']
      }
    },
    additionalProperties: false
  },
  dashboard: {
    type: 'object',
    properties: {
      type: {
        type: 'string',
        enum: ['comprehensive', 'portfolio', 'market', 'signals', 'performance', 'risk', 'trading', 'research', 'alerts', 'news', 'watchlist']
      }
    },
    additionalProperties: false
  }
});

/**
 * Advanced Signal Generation
 * POST /api/advanced/signals/generate
 */
/* istanbul ignore next */
cov_qzbtihnc1().s[40]++;
router.post('/signals/generate', authenticateUser, async (req, res) => {
  /* istanbul ignore next */
  cov_qzbtihnc1().f[2]++;
  const correlationId =
  /* istanbul ignore next */
  (cov_qzbtihnc1().s[41]++,
  /* istanbul ignore next */
  (cov_qzbtihnc1().b[8][0]++, req.headers['x-correlation-id']) ||
  /* istanbul ignore next */
  (cov_qzbtihnc1().b[8][1]++, 'signal-' + Date.now()));
  const {
    symbol,
    timeframe =
    /* istanbul ignore next */
    (cov_qzbtihnc1().b[9][0]++, '1d'),
    lookback =
    /* istanbul ignore next */
    (cov_qzbtihnc1().b[10][0]++, 100)
  } =
  /* istanbul ignore next */
  (cov_qzbtihnc1().s[42]++, req.body);
  const startTime =
  /* istanbul ignore next */
  (cov_qzbtihnc1().s[43]++, Date.now());
  /* istanbul ignore next */
  cov_qzbtihnc1().s[44]++;
  try {
    /* istanbul ignore next */
    cov_qzbtihnc1().s[45]++;
    if (!signalProcessor) {
      /* istanbul ignore next */
      cov_qzbtihnc1().b[11][0]++;
      cov_qzbtihnc1().s[46]++;
      return res.status(503).json(createResponse(false, 'Signal processing service not available', null, {
        correlationId
      }));
    } else
    /* istanbul ignore next */
    {
      cov_qzbtihnc1().b[11][1]++;
    }
    cov_qzbtihnc1().s[47]++;
    logger.info('Advanced signal generation requested', {
      userId: req.user.userId,
      symbol,
      timeframe,
      lookback,
      correlationId
    });
    const signalData =
    /* istanbul ignore next */
    (cov_qzbtihnc1().s[48]++, await signalProcessor.generateAdvancedSignals(symbol, timeframe, lookback));
    const processingTime =
    /* istanbul ignore next */
    (cov_qzbtihnc1().s[49]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_qzbtihnc1().s[50]++;
    logger.info('Advanced signal generation completed', {
      userId: req.user.userId,
      symbol,
      processingTime,
      correlationId
    });
    /* istanbul ignore next */
    cov_qzbtihnc1().s[51]++;
    res.json(createResponse(true, 'Advanced signals generated successfully', {
      symbol,
      signals: signalData,
      metadata: {
        timeframe,
        lookback,
        processingTime,
        correlationId,
        timestamp: new Date().toISOString()
      }
    }));
  } catch (error) {
    /* istanbul ignore next */
    cov_qzbtihnc1().s[52]++;
    logger.error('Advanced signal generation failed', {
      userId: req.user.userId,
      symbol,
      error: error.message,
      correlationId,
      processingTime: Date.now() - startTime
    });
    /* istanbul ignore next */
    cov_qzbtihnc1().s[53]++;
    res.status(500).json(createResponse(false, 'Failed to generate advanced signals', {
      error: error.message,
      correlationId
    }));
  }
});

/**
 * Portfolio Optimization
 * POST /api/advanced/portfolio/optimize
 */
/* istanbul ignore next */
cov_qzbtihnc1().s[54]++;
router.post('/portfolio/optimize', authenticateUser, createValidationMiddleware(advancedValidationSchemas.optimizePortfolio), async (req, res) => {
  /* istanbul ignore next */
  cov_qzbtihnc1().f[3]++;
  const correlationId =
  /* istanbul ignore next */
  (cov_qzbtihnc1().s[55]++, req.correlationId);
  const {
    riskTolerance,
    targetReturn,
    constraints
  } =
  /* istanbul ignore next */
  (cov_qzbtihnc1().s[56]++, req.validated);
  const startTime =
  /* istanbul ignore next */
  (cov_qzbtihnc1().s[57]++, Date.now());
  /* istanbul ignore next */
  cov_qzbtihnc1().s[58]++;
  try {
    /* istanbul ignore next */
    cov_qzbtihnc1().s[59]++;
    logger.info('Portfolio optimization requested', {
      userId: req.user.userId,
      riskTolerance,
      targetReturn,
      constraints,
      correlationId
    });

    // Get user's current portfolio
    const currentPortfolio =
    /* istanbul ignore next */
    (cov_qzbtihnc1().s[60]++, await dashboardService.getCurrentPortfolio(req.user.userId));
    /* istanbul ignore next */
    cov_qzbtihnc1().s[61]++;
    if (
    /* istanbul ignore next */
    (cov_qzbtihnc1().b[13][0]++, !currentPortfolio) ||
    /* istanbul ignore next */
    (cov_qzbtihnc1().b[13][1]++, currentPortfolio.length === 0)) {
      /* istanbul ignore next */
      cov_qzbtihnc1().b[12][0]++;
      cov_qzbtihnc1().s[62]++;
      return res.status(400).json(createResponse(false, 'No portfolio positions found for optimization', {
        correlationId
      }));
    } else
    /* istanbul ignore next */
    {
      cov_qzbtihnc1().b[12][1]++;
    }
    const preferences =
    /* istanbul ignore next */
    (cov_qzbtihnc1().s[63]++, {
      riskTolerance,
      targetReturn,
      ...constraints
    });
    const optimizationResult =
    /* istanbul ignore next */
    (cov_qzbtihnc1().s[64]++, await portfolioOptimizer.optimizePortfolio(currentPortfolio, req.user.userId, preferences));
    const processingTime =
    /* istanbul ignore next */
    (cov_qzbtihnc1().s[65]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_qzbtihnc1().s[66]++;
    logger.info('Portfolio optimization completed', {
      userId: req.user.userId,
      success: optimizationResult.success,
      processingTime,
      correlationId
    });
    /* istanbul ignore next */
    cov_qzbtihnc1().s[67]++;
    res.json(createResponse(true, 'Portfolio optimization completed successfully', {
      optimization: optimizationResult,
      metadata: {
        processingTime,
        correlationId,
        timestamp: new Date().toISOString()
      }
    }));
  } catch (error) {
    /* istanbul ignore next */
    cov_qzbtihnc1().s[68]++;
    logger.error('Portfolio optimization failed', {
      userId: req.user.userId,
      error: error.message,
      correlationId,
      processingTime: Date.now() - startTime
    });
    /* istanbul ignore next */
    cov_qzbtihnc1().s[69]++;
    res.status(500).json(createResponse(false, 'Failed to optimize portfolio', {
      error: error.message,
      correlationId
    }));
  }
});

/**
 * Automated Trading Execution
 * POST /api/advanced/trading/execute
 */
/* istanbul ignore next */
cov_qzbtihnc1().s[70]++;
router.post('/trading/execute', authenticateUser, async (req, res) => {
  /* istanbul ignore next */
  cov_qzbtihnc1().f[4]++;
  const correlationId =
  /* istanbul ignore next */
  (cov_qzbtihnc1().s[71]++, req.correlationId);
  const preferences =
  /* istanbul ignore next */
  (cov_qzbtihnc1().s[72]++,
  /* istanbul ignore next */
  (cov_qzbtihnc1().b[14][0]++, req.body) ||
  /* istanbul ignore next */
  (cov_qzbtihnc1().b[14][1]++, {}));
  const startTime =
  /* istanbul ignore next */
  (cov_qzbtihnc1().s[73]++, Date.now());
  /* istanbul ignore next */
  cov_qzbtihnc1().s[74]++;
  try {
    /* istanbul ignore next */
    cov_qzbtihnc1().s[75]++;
    logger.info('Automated trading execution requested', {
      userId: req.user.userId,
      preferences,
      correlationId
    });
    const tradingResult =
    /* istanbul ignore next */
    (cov_qzbtihnc1().s[76]++, await tradingEngine.executeAutomatedStrategy(req.user.userId, preferences));
    const processingTime =
    /* istanbul ignore next */
    (cov_qzbtihnc1().s[77]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_qzbtihnc1().s[78]++;
    logger.info('Automated trading execution completed', {
      userId: req.user.userId,
      success: tradingResult.success,
      decisions:
      /* istanbul ignore next */
      (cov_qzbtihnc1().b[15][0]++, tradingResult.decisions?.length) ||
      /* istanbul ignore next */
      (cov_qzbtihnc1().b[15][1]++, 0),
      orders:
      /* istanbul ignore next */
      (cov_qzbtihnc1().b[16][0]++, tradingResult.executionPlan?.orders?.length) ||
      /* istanbul ignore next */
      (cov_qzbtihnc1().b[16][1]++, 0),
      processingTime,
      correlationId
    });
    /* istanbul ignore next */
    cov_qzbtihnc1().s[79]++;
    res.json(createResponse(true, 'Automated trading execution completed successfully', {
      trading: tradingResult,
      metadata: {
        processingTime,
        correlationId,
        timestamp: new Date().toISOString()
      }
    }));
  } catch (error) {
    /* istanbul ignore next */
    cov_qzbtihnc1().s[80]++;
    logger.error('Automated trading execution failed', {
      userId: req.user.userId,
      error: error.message,
      correlationId,
      processingTime: Date.now() - startTime
    });
    /* istanbul ignore next */
    cov_qzbtihnc1().s[81]++;
    res.status(500).json(createResponse(false, 'Failed to execute automated trading', {
      error: error.message,
      correlationId
    }));
  }
});

/**
 * Backtesting Engine
 * POST /api/advanced/backtest/run
 */
/* istanbul ignore next */
cov_qzbtihnc1().s[82]++;
router.post('/backtest/run', authenticateUser, createValidationMiddleware(advancedValidationSchemas.runBacktest), async (req, res) => {
  /* istanbul ignore next */
  cov_qzbtihnc1().f[5]++;
  const correlationId =
  /* istanbul ignore next */
  (cov_qzbtihnc1().s[83]++, req.correlationId);
  const {
    symbols,
    startDate,
    endDate,
    strategy,
    initialCapital =
    /* istanbul ignore next */
    (cov_qzbtihnc1().b[17][0]++, 100000)
  } =
  /* istanbul ignore next */
  (cov_qzbtihnc1().s[84]++, req.validated);
  const startTime =
  /* istanbul ignore next */
  (cov_qzbtihnc1().s[85]++, Date.now());
  /* istanbul ignore next */
  cov_qzbtihnc1().s[86]++;
  try {
    /* istanbul ignore next */
    cov_qzbtihnc1().s[87]++;
    logger.info('Backtesting requested', {
      userId: req.user.userId,
      symbols: symbols.length,
      startDate,
      endDate,
      strategy,
      initialCapital,
      correlationId
    });
    const backtestResult =
    /* istanbul ignore next */
    (cov_qzbtihnc1().s[88]++, await backtestingEngine.runBacktest(symbols, startDate, endDate, strategy, initialCapital));
    const processingTime =
    /* istanbul ignore next */
    (cov_qzbtihnc1().s[89]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_qzbtihnc1().s[90]++;
    logger.info('Backtesting completed', {
      userId: req.user.userId,
      success: backtestResult.success,
      totalTrades:
      /* istanbul ignore next */
      (cov_qzbtihnc1().b[18][0]++, backtestResult.backtest?.results?.trades?.length) ||
      /* istanbul ignore next */
      (cov_qzbtihnc1().b[18][1]++, 0),
      finalValue:
      /* istanbul ignore next */
      (cov_qzbtihnc1().b[19][0]++, backtestResult.backtest?.results?.finalPortfolioValue) ||
      /* istanbul ignore next */
      (cov_qzbtihnc1().b[19][1]++, 0),
      processingTime,
      correlationId
    });
    /* istanbul ignore next */
    cov_qzbtihnc1().s[91]++;
    res.json(createResponse(true, 'Backtesting completed successfully', {
      backtest: backtestResult,
      metadata: {
        processingTime,
        correlationId,
        timestamp: new Date().toISOString()
      }
    }));
  } catch (error) {
    /* istanbul ignore next */
    cov_qzbtihnc1().s[92]++;
    logger.error('Backtesting failed', {
      userId: req.user.userId,
      error: error.message,
      correlationId,
      processingTime: Date.now() - startTime
    });
    /* istanbul ignore next */
    cov_qzbtihnc1().s[93]++;
    res.status(500).json(createResponse(false, 'Failed to run backtest', {
      error: error.message,
      correlationId
    }));
  }
});

/**
 * Market Analytics
 * GET /api/advanced/market/analytics
 */
/* istanbul ignore next */
cov_qzbtihnc1().s[94]++;
router.get('/market/analytics', authenticateUser, createValidationMiddleware(advancedValidationSchemas.marketAnalytics), async (req, res) => {
  /* istanbul ignore next */
  cov_qzbtihnc1().f[6]++;
  const correlationId =
  /* istanbul ignore next */
  (cov_qzbtihnc1().s[95]++, req.correlationId);
  const {
    analysisType =
    /* istanbul ignore next */
    (cov_qzbtihnc1().b[20][0]++, 'comprehensive')
  } =
  /* istanbul ignore next */
  (cov_qzbtihnc1().s[96]++, req.validated);
  const startTime =
  /* istanbul ignore next */
  (cov_qzbtihnc1().s[97]++, Date.now());
  /* istanbul ignore next */
  cov_qzbtihnc1().s[98]++;
  try {
    /* istanbul ignore next */
    cov_qzbtihnc1().s[99]++;
    logger.info('Market analytics requested', {
      userId: req.user.userId,
      analysisType,
      correlationId
    });
    const analyticsResult =
    /* istanbul ignore next */
    (cov_qzbtihnc1().s[100]++, await marketAnalytics.generateMarketAnalytics(analysisType));
    const processingTime =
    /* istanbul ignore next */
    (cov_qzbtihnc1().s[101]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_qzbtihnc1().s[102]++;
    logger.info('Market analytics completed', {
      userId: req.user.userId,
      success: analyticsResult.success,
      analysisType,
      processingTime,
      correlationId
    });
    /* istanbul ignore next */
    cov_qzbtihnc1().s[103]++;
    res.json(createResponse(true, 'Market analytics generated successfully', {
      analytics: analyticsResult,
      metadata: {
        processingTime,
        correlationId,
        timestamp: new Date().toISOString()
      }
    }));
  } catch (error) {
    /* istanbul ignore next */
    cov_qzbtihnc1().s[104]++;
    logger.error('Market analytics failed', {
      userId: req.user.userId,
      error: error.message,
      correlationId,
      processingTime: Date.now() - startTime
    });
    /* istanbul ignore next */
    cov_qzbtihnc1().s[105]++;
    res.status(500).json(createResponse(false, 'Failed to generate market analytics', {
      error: error.message,
      correlationId
    }));
  }
});

/**
 * Advanced Dashboard
 * GET /api/advanced/dashboard
 */
/* istanbul ignore next */
cov_qzbtihnc1().s[106]++;
router.get('/dashboard', authenticateUser, createValidationMiddleware(advancedValidationSchemas.dashboard), async (req, res) => {
  /* istanbul ignore next */
  cov_qzbtihnc1().f[7]++;
  const correlationId =
  /* istanbul ignore next */
  (cov_qzbtihnc1().s[107]++, req.correlationId);
  const {
    type =
    /* istanbul ignore next */
    (cov_qzbtihnc1().b[21][0]++, 'comprehensive')
  } =
  /* istanbul ignore next */
  (cov_qzbtihnc1().s[108]++, req.validated);
  const startTime =
  /* istanbul ignore next */
  (cov_qzbtihnc1().s[109]++, Date.now());
  /* istanbul ignore next */
  cov_qzbtihnc1().s[110]++;
  try {
    /* istanbul ignore next */
    cov_qzbtihnc1().s[111]++;
    logger.info('Advanced dashboard requested', {
      userId: req.user.userId,
      type,
      correlationId
    });
    const dashboardResult =
    /* istanbul ignore next */
    (cov_qzbtihnc1().s[112]++, await dashboardService.generateDashboard(req.user.userId, type));
    const processingTime =
    /* istanbul ignore next */
    (cov_qzbtihnc1().s[113]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_qzbtihnc1().s[114]++;
    logger.info('Advanced dashboard completed', {
      userId: req.user.userId,
      success: dashboardResult.success,
      type,
      processingTime,
      correlationId
    });
    /* istanbul ignore next */
    cov_qzbtihnc1().s[115]++;
    res.json(createResponse(true, 'Advanced dashboard generated successfully', {
      dashboard: dashboardResult,
      metadata: {
        processingTime,
        correlationId,
        timestamp: new Date().toISOString()
      }
    }));
  } catch (error) {
    /* istanbul ignore next */
    cov_qzbtihnc1().s[116]++;
    logger.error('Advanced dashboard failed', {
      userId: req.user.userId,
      error: error.message,
      correlationId,
      processingTime: Date.now() - startTime
    });
    /* istanbul ignore next */
    cov_qzbtihnc1().s[117]++;
    res.status(500).json(createResponse(false, 'Failed to generate advanced dashboard', {
      error: error.message,
      correlationId
    }));
  }
});

/**
 * Portfolio Analysis
 * GET /api/advanced/portfolio/analysis
 */
/* istanbul ignore next */
cov_qzbtihnc1().s[118]++;
router.get('/portfolio/analysis', authenticateUser, async (req, res) => {
  /* istanbul ignore next */
  cov_qzbtihnc1().f[8]++;
  const correlationId =
  /* istanbul ignore next */
  (cov_qzbtihnc1().s[119]++, req.correlationId);
  const startTime =
  /* istanbul ignore next */
  (cov_qzbtihnc1().s[120]++, Date.now());
  /* istanbul ignore next */
  cov_qzbtihnc1().s[121]++;
  try {
    /* istanbul ignore next */
    cov_qzbtihnc1().s[122]++;
    logger.info('Portfolio analysis requested', {
      userId: req.user.userId,
      correlationId
    });
    const portfolioAnalysis =
    /* istanbul ignore next */
    (cov_qzbtihnc1().s[123]++, await dashboardService.generatePortfolioOverview(req.user.userId));
    const processingTime =
    /* istanbul ignore next */
    (cov_qzbtihnc1().s[124]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_qzbtihnc1().s[125]++;
    logger.info('Portfolio analysis completed', {
      userId: req.user.userId,
      holdingsCount:
      /* istanbul ignore next */
      (cov_qzbtihnc1().b[22][0]++, portfolioAnalysis?.holdings?.length) ||
      /* istanbul ignore next */
      (cov_qzbtihnc1().b[22][1]++, 0),
      processingTime,
      correlationId
    });
    /* istanbul ignore next */
    cov_qzbtihnc1().s[126]++;
    res.json(createResponse(true, 'Portfolio analysis completed successfully', {
      analysis: portfolioAnalysis,
      metadata: {
        processingTime,
        correlationId,
        timestamp: new Date().toISOString()
      }
    }));
  } catch (error) {
    /* istanbul ignore next */
    cov_qzbtihnc1().s[127]++;
    logger.error('Portfolio analysis failed', {
      userId: req.user.userId,
      error: error.message,
      correlationId,
      processingTime: Date.now() - startTime
    });
    /* istanbul ignore next */
    cov_qzbtihnc1().s[128]++;
    res.status(500).json(createResponse(false, 'Failed to analyze portfolio', {
      error: error.message,
      correlationId
    }));
  }
});

/**
 * Performance Analytics
 * GET /api/advanced/performance
 */
/* istanbul ignore next */
cov_qzbtihnc1().s[129]++;
router.get('/performance', authenticateUser, async (req, res) => {
  /* istanbul ignore next */
  cov_qzbtihnc1().f[9]++;
  const correlationId =
  /* istanbul ignore next */
  (cov_qzbtihnc1().s[130]++, req.correlationId);
  const startTime =
  /* istanbul ignore next */
  (cov_qzbtihnc1().s[131]++, Date.now());
  /* istanbul ignore next */
  cov_qzbtihnc1().s[132]++;
  try {
    /* istanbul ignore next */
    cov_qzbtihnc1().s[133]++;
    logger.info('Performance analytics requested', {
      userId: req.user.userId,
      correlationId
    });
    const performanceAnalytics =
    /* istanbul ignore next */
    (cov_qzbtihnc1().s[134]++, await dashboardService.generatePerformanceAnalytics(req.user.userId));
    const processingTime =
    /* istanbul ignore next */
    (cov_qzbtihnc1().s[135]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_qzbtihnc1().s[136]++;
    logger.info('Performance analytics completed', {
      userId: req.user.userId,
      processingTime,
      correlationId
    });
    /* istanbul ignore next */
    cov_qzbtihnc1().s[137]++;
    res.json(createResponse(true, 'Performance analytics generated successfully', {
      performance: performanceAnalytics,
      metadata: {
        processingTime,
        correlationId,
        timestamp: new Date().toISOString()
      }
    }));
  } catch (error) {
    /* istanbul ignore next */
    cov_qzbtihnc1().s[138]++;
    logger.error('Performance analytics failed', {
      userId: req.user.userId,
      error: error.message,
      correlationId,
      processingTime: Date.now() - startTime
    });
    /* istanbul ignore next */
    cov_qzbtihnc1().s[139]++;
    res.status(500).json(createResponse(false, 'Failed to generate performance analytics', {
      error: error.message,
      correlationId
    }));
  }
});

/**
 * Risk Management
 * GET /api/advanced/risk
 */
/* istanbul ignore next */
cov_qzbtihnc1().s[140]++;
router.get('/risk', authenticateUser, async (req, res) => {
  /* istanbul ignore next */
  cov_qzbtihnc1().f[10]++;
  const correlationId =
  /* istanbul ignore next */
  (cov_qzbtihnc1().s[141]++, req.correlationId);
  const startTime =
  /* istanbul ignore next */
  (cov_qzbtihnc1().s[142]++, Date.now());
  /* istanbul ignore next */
  cov_qzbtihnc1().s[143]++;
  try {
    /* istanbul ignore next */
    cov_qzbtihnc1().s[144]++;
    logger.info('Risk management analysis requested', {
      userId: req.user.userId,
      correlationId
    });
    const riskAnalysis =
    /* istanbul ignore next */
    (cov_qzbtihnc1().s[145]++, await dashboardService.generateRiskManagement(req.user.userId));
    const processingTime =
    /* istanbul ignore next */
    (cov_qzbtihnc1().s[146]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_qzbtihnc1().s[147]++;
    logger.info('Risk management analysis completed', {
      userId: req.user.userId,
      processingTime,
      correlationId
    });
    /* istanbul ignore next */
    cov_qzbtihnc1().s[148]++;
    res.json(createResponse(true, 'Risk management analysis completed successfully', {
      risk: riskAnalysis,
      metadata: {
        processingTime,
        correlationId,
        timestamp: new Date().toISOString()
      }
    }));
  } catch (error) {
    /* istanbul ignore next */
    cov_qzbtihnc1().s[149]++;
    logger.error('Risk management analysis failed', {
      userId: req.user.userId,
      error: error.message,
      correlationId,
      processingTime: Date.now() - startTime
    });
    /* istanbul ignore next */
    cov_qzbtihnc1().s[150]++;
    res.status(500).json(createResponse(false, 'Failed to analyze risk management', {
      error: error.message,
      correlationId
    }));
  }
});

/**
 * Basic Health Check (simplified)
 * GET /api/advanced/health  
 */
/* istanbul ignore next */
cov_qzbtihnc1().s[151]++;
router.get('/health', (req, res) => {
  /* istanbul ignore next */
  cov_qzbtihnc1().f[11]++;
  cov_qzbtihnc1().s[152]++;
  res.json(success({
    status: 'healthy',
    service: 'advanced-trading',
    timestamp: new Date().toISOString(),
    message: 'Advanced Trading service is operational'
  }));
});

/**
 * Full Health Check
 * GET /api/advanced/health-full
 */
/* istanbul ignore next */
cov_qzbtihnc1().s[153]++;
router.get('/health-full', async (req, res) => {
  /* istanbul ignore next */
  cov_qzbtihnc1().f[12]++;
  const correlationId =
  /* istanbul ignore next */
  (cov_qzbtihnc1().s[154]++, req.correlationId);
  const startTime =
  /* istanbul ignore next */
  (cov_qzbtihnc1().s[155]++, Date.now());
  /* istanbul ignore next */
  cov_qzbtihnc1().s[156]++;
  try {
    /* istanbul ignore next */
    cov_qzbtihnc1().s[157]++;
    logger.info('Advanced features health check requested', {
      correlationId
    });
    const healthStatus =
    /* istanbul ignore next */
    (cov_qzbtihnc1().s[158]++, {
      status: 'healthy',
      services: {
        signalProcessor: 'operational',
        portfolioOptimizer: 'operational',
        tradingEngine: 'operational',
        backtestingEngine: 'operational',
        marketAnalytics: 'operational',
        dashboardService: 'operational'
      },
      timestamp: new Date().toISOString(),
      uptime: process.uptime(),
      memory: process.memoryUsage(),
      correlationId
    });
    const processingTime =
    /* istanbul ignore next */
    (cov_qzbtihnc1().s[159]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_qzbtihnc1().s[160]++;
    logger.info('Advanced features health check completed', {
      processingTime,
      correlationId
    });
    /* istanbul ignore next */
    cov_qzbtihnc1().s[161]++;
    res.json(createResponse(true, 'Advanced features are healthy', {
      health: healthStatus,
      metadata: {
        processingTime,
        correlationId,
        timestamp: new Date().toISOString()
      }
    }));
  } catch (error) {
    /* istanbul ignore next */
    cov_qzbtihnc1().s[162]++;
    logger.error('Advanced features health check failed', {
      error: error.message,
      correlationId,
      processingTime: Date.now() - startTime
    });
    /* istanbul ignore next */
    cov_qzbtihnc1().s[163]++;
    res.status(500).json(createResponse(false, 'Advanced features health check failed', {
      error: error.message,
      correlationId
    }));
  }
});
/* istanbul ignore next */
cov_qzbtihnc1().s[164]++;
module.exports = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,