{"version":3,"names":["cov_2du5k6xyqd","actualCoverage","CognitoJwtVerifier","s","require","SecretsManagerClient","GetSecretValueCommand","crypto","secretsManager","region","b","process","env","AWS_DEFAULT_REGION","AWS_REGION","cognitoConfig","configLoadPromise","loadCognitoConfig","f","COGNITO_SECRET_ARN","console","log","command","SecretId","response","send","secret","JSON","parse","SecretString","userPoolId","clientId","domain","COGNITO_USER_POOL_ID","COGNITO_CLIENT_ID","warn","error","verifier","verifierPromise","getVerifier","config","create","tokenUse","authenticateToken","req","res","next","startTime","Date","now","requestId","headers","randomUUID","clientIp","connection","remoteAddress","userAgent","method","path","NODE_ENV","substring","hasUserPoolId","hasClientId","hasSecretArn","timestamp","toISOString","authHeader","token","split","jwtVerifier","cognitoConfigLoaded","secretArn","status","json","message","details","configStatus","undefined","authHeaderPresent","expectedFormat","payload","verify","user","sub","email","username","role","groups","authenticatedAt","tokenIssuedAt","iat","tokenExpiresAt","exp","givenName","given_name","familyName","family_name","phoneNumber","phone_number","phoneNumberVerified","phone_number_verified","emailVerified","email_verified","organization","jobTitle","riskTolerance","investmentExperience","accreditedInvestor","userId","duration","name","stack","errorType","code","errorName","requireRole","roles","userRole","userGroups","hasRole","includes","hasGroup","some","join","optionalAuth","module","exports"],"sources":["auth-backup.js"],"sourcesContent":["const { CognitoJwtVerifier } = require('aws-jwt-verify');\nconst { SecretsManagerClient, GetSecretValueCommand } = require('@aws-sdk/client-secrets-manager');\nconst crypto = require('crypto');\n\n// Initialize secrets manager client\nconst secretsManager = new SecretsManagerClient({\n  region: process.env.AWS_DEFAULT_REGION || process.env.AWS_REGION || 'us-east-1'\n});\n\n// Cache for Cognito config\nlet cognitoConfig = null;\nlet configLoadPromise = null;\n\n// Load Cognito configuration from Secrets Manager or environment\nasync function loadCognitoConfig() {\n  // If already loaded, return cached config\n  if (cognitoConfig) {\n    return cognitoConfig;\n  }\n\n  // If loading is in progress, wait for it\n  if (configLoadPromise) {\n    return configLoadPromise;\n  }\n\n  // Start loading config\n  configLoadPromise = (async () => {\n    try {\n      // First try to load from Secrets Manager if ARN is provided\n      if (process.env.COGNITO_SECRET_ARN) {\n        console.log('Loading Cognito config from Secrets Manager...');\n        const command = new GetSecretValueCommand({\n          SecretId: process.env.COGNITO_SECRET_ARN\n        });\n        const response = await secretsManager.send(command);\n        const secret = JSON.parse(response.SecretString);\n        \n        cognitoConfig = {\n          userPoolId: secret.userPoolId,\n          clientId: secret.clientId,\n          domain: secret.domain,\n          region: secret.region\n        };\n        \n        console.log('Cognito config loaded from Secrets Manager');\n        return cognitoConfig;\n      }\n      \n      // Fall back to environment variables\n      if (process.env.COGNITO_USER_POOL_ID && process.env.COGNITO_CLIENT_ID) {\n        cognitoConfig = {\n          userPoolId: process.env.COGNITO_USER_POOL_ID,\n          clientId: process.env.COGNITO_CLIENT_ID,\n          region: process.env.AWS_DEFAULT_REGION || process.env.AWS_REGION || 'us-east-1'\n        };\n        \n        console.log('Cognito config loaded from environment variables');\n        return cognitoConfig;\n      }\n      \n      console.warn('No Cognito configuration found');\n      return null;\n    } catch (error) {\n      console.error('Failed to load Cognito config:', error);\n      configLoadPromise = null; // Reset to allow retry\n      return null;\n    }\n  })();\n\n  return configLoadPromise;\n}\n\n// Create JWT verifier\nlet verifier = null;\nlet verifierPromise = null;\n\nasync function getVerifier() {\n  if (verifier) {\n    return verifier;\n  }\n\n  if (verifierPromise) {\n    return verifierPromise;\n  }\n\n  verifierPromise = (async () => {\n    const config = await loadCognitoConfig();\n    \n    if (!config) {\n      console.warn('Cognito configuration not available. Authentication will be disabled.');\n      return null;\n    }\n\n    try {\n      verifier = CognitoJwtVerifier.create({\n        userPoolId: config.userPoolId,\n        tokenUse: 'access',\n        clientId: config.clientId,\n      });\n      \n      console.log('Cognito JWT verifier created successfully');\n      return verifier;\n    } catch (error) {\n      console.error('Failed to create Cognito JWT verifier:', error);\n      verifierPromise = null; // Reset to allow retry\n      return null;\n    }\n  })();\n\n  return verifierPromise;\n}\n\n// Bulletproof Authentication middleware with comprehensive security\nconst authenticateToken = async (req, res, next) => {\n  const startTime = Date.now();\n  const requestId = req.headers['x-request-id'] || crypto.randomUUID();\n  const clientIp = req.headers['x-forwarded-for'] || req.connection.remoteAddress;\n  const userAgent = req.headers['user-agent'] || 'unknown';\n  \n  try {\n    console.log(`üîê [${requestId}] Authentication middleware called for ${req.method} ${req.path}`);\n    console.log(`üåç [${requestId}] Security Context:`, {\n      NODE_ENV: process.env.NODE_ENV,\n      clientIp,\n      userAgent: userAgent.substring(0, 100), // Truncate for logging\n      hasUserPoolId: !!process.env.COGNITO_USER_POOL_ID,\n      hasClientId: !!process.env.COGNITO_CLIENT_ID,\n      hasSecretArn: !!process.env.COGNITO_SECRET_ARN,\n      timestamp: new Date().toISOString()\n    });\n    \n    // SECURITY: Remove development bypass to prevent production exploitation\n    // Development bypass completely removed for security reasons\n    // All requests must use proper Cognito authentication\n    \n    // Note: Development bypass was removed due to security risk\n    // Use proper Cognito tokens even in development environment\n    \n    // Check for demo/development tokens first\n    const authHeader = req.headers['authorization'];\n    const token = authHeader && authHeader.split(' ')[1]; // Bearer TOKEN\n    \n    console.log(`üé´ [${requestId}] Authorization header present:`, !!authHeader);\n    console.log(`üé´ [${requestId}] Token extracted:`, !!token);\n\n    // Get verifier (will load config if needed)\n    console.log(`üîç [${requestId}] Getting JWT verifier...`);\n    const jwtVerifier = await getVerifier();\n\n    // If no verifier is available, check if we should allow in development\n    if (!jwtVerifier) {\n      console.error(`‚ùå [${requestId}] JWT verifier not available`);\n      console.error(`‚ùå [${requestId}] Config status:`, {\n        cognitoConfigLoaded: !!cognitoConfig,\n        userPoolId: process.env.COGNITO_USER_POOL_ID ? 'SET' : 'MISSING',\n        clientId: process.env.COGNITO_CLIENT_ID ? 'SET' : 'MISSING',\n        secretArn: process.env.COGNITO_SECRET_ARN ? 'SET' : 'MISSING'\n      });\n      \n      return res.status(503).json({\n        error: 'Authentication service unavailable',\n        message: 'Unable to verify authentication tokens. Please check Cognito configuration.',\n        details: process.env.NODE_ENV === 'development' ? {\n          requestId,\n          configStatus: {\n            userPoolId: !!process.env.COGNITO_USER_POOL_ID,\n            clientId: !!process.env.COGNITO_CLIENT_ID,\n            secretArn: !!process.env.COGNITO_SECRET_ARN\n          }\n        } : undefined\n      });\n    }\n\n    // Token already extracted above\n    if (!token) {\n      console.error(`‚ùå [${requestId}] No token found in Authorization header`);\n      return res.status(401).json({\n        error: 'Authentication required',\n        message: 'Access token is missing from Authorization header',\n        details: {\n          requestId,\n          authHeaderPresent: !!authHeader,\n          expectedFormat: 'Bearer <token>'\n        }\n      });\n    }\n\n    console.log(`‚úÖ [${requestId}] Token found, verifying with Cognito...`);\n    // Verify the JWT token\n    const payload = await jwtVerifier.verify(token);\n    console.log(`üéØ [${requestId}] Token verified successfully`);\n    \n    // Add comprehensive user information to request with security context\n    req.user = {\n      sub: payload.sub,\n      email: payload.email,\n      username: payload.username,\n      role: payload['custom:role'] || 'user',\n      groups: payload['cognito:groups'] || [],\n      // Security context\n      clientIp,\n      userAgent,\n      requestId,\n      authenticatedAt: new Date().toISOString(),\n      tokenIssuedAt: new Date(payload.iat * 1000).toISOString(),\n      tokenExpiresAt: new Date(payload.exp * 1000).toISOString(),\n      // Enhanced profile attributes for financial platform\n      givenName: payload.given_name,\n      familyName: payload.family_name,\n      phoneNumber: payload.phone_number,\n      phoneNumberVerified: payload.phone_number_verified,\n      emailVerified: payload.email_verified,\n      organization: payload['custom:organization'],\n      jobTitle: payload['custom:job_title'],\n      riskTolerance: payload['custom:risk_tolerance'],\n      investmentExperience: payload['custom:investment_experience'],\n      accreditedInvestor: payload['custom:accredited_investor']\n    };\n\n    // Log successful authentication with security details\n    console.log(`‚úÖ [${requestId}] User authenticated successfully:`, {\n      userId: req.user.sub,\n      email: req.user.email,\n      role: req.user.role,\n      clientIp,\n      userAgent: userAgent.substring(0, 50),\n      authenticatedAt: req.user.authenticatedAt,\n      tokenExpiresAt: req.user.tokenExpiresAt\n    });\n\n    const duration = Date.now() - startTime;\n    console.log(`üë§ [${requestId}] User authenticated in ${duration}ms:`, {\n      sub: req.user.sub,\n      email: req.user.email,\n      username: req.user.username,\n      role: req.user.role\n    });\n\n    next();\n  } catch (error) {\n    const duration = Date.now() - startTime;\n    console.error(`‚ùå [${requestId}] Authentication error after ${duration}ms:`, {\n      name: error.name,\n      message: error.message,\n      stack: process.env.NODE_ENV === 'development' ? error.stack : undefined\n    });\n    \n    // Handle specific JWT errors\n    if (error.name === 'TokenExpiredError') {\n      console.error(`üïê [${requestId}] Token expired`);\n      return res.status(401).json({\n        error: 'Token expired',\n        message: 'Your session has expired. Please log in again.',\n        details: { requestId, errorType: 'TOKEN_EXPIRED' }\n      });\n    }\n    \n    if (error.name === 'JsonWebTokenError') {\n      console.error(`üö´ [${requestId}] Invalid token format`);\n      return res.status(401).json({\n        error: 'Invalid token',\n        message: 'The provided token is invalid.',\n        details: { requestId, errorType: 'TOKEN_INVALID' }\n      });\n    }\n\n    if (error.name === 'JwtVerifyError') {\n      console.error(`üö´ [${requestId}] JWT verification failed:`, error.message);\n      return res.status(401).json({\n        error: 'Token verification failed',\n        message: 'Unable to verify the provided token.',\n        details: { requestId, errorType: 'JWT_VERIFY_ERROR' }\n      });\n    }\n\n    // Handle network/service errors\n    if (error.code === 'ENOTFOUND' || error.code === 'ECONNREFUSED') {\n      console.error(`üåê [${requestId}] Network error during token verification`);\n      return res.status(503).json({\n        error: 'Authentication service unavailable',\n        message: 'Unable to connect to authentication service.',\n        details: { requestId, errorType: 'NETWORK_ERROR' }\n      });\n    }\n\n    console.error(`üî• [${requestId}] Generic authentication failure:`, error);\n    return res.status(401).json({\n      error: 'Authentication failed',\n      message: 'Could not verify authentication token',\n      details: { \n        requestId, \n        errorType: 'UNKNOWN_ERROR',\n        errorName: error.name\n      }\n    });\n  }\n};\n\n// Authorization middleware for role-based access\nconst requireRole = (roles) => {\n  return (req, res, next) => {\n    if (!req.user) {\n      return res.status(401).json({\n        error: 'Authentication required',\n        message: 'User must be authenticated to access this resource'\n      });\n    }\n\n    const userRole = req.user.role;\n    const userGroups = req.user.groups || [];\n    \n    // Check if user has required role or is in required group\n    const hasRole = roles.includes(userRole);\n    const hasGroup = roles.some(role => userGroups.includes(role));\n    \n    if (!hasRole && !hasGroup) {\n      return res.status(403).json({\n        error: 'Insufficient permissions',\n        message: `Access denied. Required roles: ${roles.join(', ')}`\n      });\n    }\n\n    next();\n  };\n};\n\n// Optional authentication middleware (doesn't fail if no token)\nconst optionalAuth = async (req, res, next) => {\n  try {\n    const authHeader = req.headers['authorization'];\n    const token = authHeader && authHeader.split(' ')[1];\n\n    // REMOVED: Development token handling - using Cognito only\n\n    // Get verifier\n    const jwtVerifier = await getVerifier();\n\n    if (token && jwtVerifier) {\n      const payload = await jwtVerifier.verify(token);\n      req.user = {\n        sub: payload.sub,\n        email: payload.email,\n        username: payload.username,\n        role: payload['custom:role'] || 'user',\n        groups: payload['cognito:groups'] || []\n      };\n    }\n    // If no token or verifier, continue without setting req.user\n  } catch (error) {\n    // Silently continue without authentication\n    console.log('Optional auth failed:', error.message);\n  }\n  \n  next();\n};\n\nmodule.exports = {\n  authenticateToken,\n  requireRole,\n  optionalAuth\n};"],"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","ignoreList":[]}