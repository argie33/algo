a23f4cce97b41dc4f157d88dca7b2a20
/* istanbul ignore next */
function cov_2du5k6xyqd() {
  var path = "/home/stocks/algo/webapp/lambda/middleware/auth-backup.js";
  var hash = "cb723437ce3c6ab0a58c0c554c0a90eeb7d7b7fb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/stocks/algo/webapp/lambda/middleware/auth-backup.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 31
        },
        end: {
          line: 1,
          column: 56
        }
      },
      "1": {
        start: {
          line: 2,
          column: 56
        },
        end: {
          line: 2,
          column: 98
        }
      },
      "2": {
        start: {
          line: 3,
          column: 15
        },
        end: {
          line: 3,
          column: 32
        }
      },
      "3": {
        start: {
          line: 6,
          column: 23
        },
        end: {
          line: 8,
          column: 2
        }
      },
      "4": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 24
        }
      },
      "5": {
        start: {
          line: 12,
          column: 24
        },
        end: {
          line: 12,
          column: 28
        }
      },
      "6": {
        start: {
          line: 17,
          column: 2
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "7": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 25
        }
      },
      "8": {
        start: {
          line: 22,
          column: 2
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "9": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 29
        }
      },
      "10": {
        start: {
          line: 27,
          column: 2
        },
        end: {
          line: 68,
          column: 7
        }
      },
      "11": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 67,
          column: 5
        }
      },
      "12": {
        start: {
          line: 30,
          column: 6
        },
        end: {
          line: 47,
          column: 7
        }
      },
      "13": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 70
        }
      },
      "14": {
        start: {
          line: 32,
          column: 24
        },
        end: {
          line: 34,
          column: 10
        }
      },
      "15": {
        start: {
          line: 35,
          column: 25
        },
        end: {
          line: 35,
          column: 59
        }
      },
      "16": {
        start: {
          line: 36,
          column: 23
        },
        end: {
          line: 36,
          column: 56
        }
      },
      "17": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 43,
          column: 10
        }
      },
      "18": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 66
        }
      },
      "19": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 29
        }
      },
      "20": {
        start: {
          line: 50,
          column: 6
        },
        end: {
          line: 59,
          column: 7
        }
      },
      "21": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 55,
          column: 10
        }
      },
      "22": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 72
        }
      },
      "23": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 29
        }
      },
      "24": {
        start: {
          line: 61,
          column: 6
        },
        end: {
          line: 61,
          column: 53
        }
      },
      "25": {
        start: {
          line: 62,
          column: 6
        },
        end: {
          line: 62,
          column: 18
        }
      },
      "26": {
        start: {
          line: 64,
          column: 6
        },
        end: {
          line: 64,
          column: 61
        }
      },
      "27": {
        start: {
          line: 65,
          column: 6
        },
        end: {
          line: 65,
          column: 31
        }
      },
      "28": {
        start: {
          line: 66,
          column: 6
        },
        end: {
          line: 66,
          column: 18
        }
      },
      "29": {
        start: {
          line: 70,
          column: 2
        },
        end: {
          line: 70,
          column: 27
        }
      },
      "30": {
        start: {
          line: 74,
          column: 15
        },
        end: {
          line: 74,
          column: 19
        }
      },
      "31": {
        start: {
          line: 75,
          column: 22
        },
        end: {
          line: 75,
          column: 26
        }
      },
      "32": {
        start: {
          line: 78,
          column: 2
        },
        end: {
          line: 80,
          column: 3
        }
      },
      "33": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 79,
          column: 20
        }
      },
      "34": {
        start: {
          line: 82,
          column: 2
        },
        end: {
          line: 84,
          column: 3
        }
      },
      "35": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 83,
          column: 27
        }
      },
      "36": {
        start: {
          line: 86,
          column: 2
        },
        end: {
          line: 108,
          column: 7
        }
      },
      "37": {
        start: {
          line: 87,
          column: 19
        },
        end: {
          line: 87,
          column: 44
        }
      },
      "38": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 92,
          column: 5
        }
      },
      "39": {
        start: {
          line: 90,
          column: 6
        },
        end: {
          line: 90,
          column: 92
        }
      },
      "40": {
        start: {
          line: 91,
          column: 6
        },
        end: {
          line: 91,
          column: 18
        }
      },
      "41": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 107,
          column: 5
        }
      },
      "42": {
        start: {
          line: 95,
          column: 6
        },
        end: {
          line: 99,
          column: 9
        }
      },
      "43": {
        start: {
          line: 101,
          column: 6
        },
        end: {
          line: 101,
          column: 63
        }
      },
      "44": {
        start: {
          line: 102,
          column: 6
        },
        end: {
          line: 102,
          column: 22
        }
      },
      "45": {
        start: {
          line: 104,
          column: 6
        },
        end: {
          line: 104,
          column: 69
        }
      },
      "46": {
        start: {
          line: 105,
          column: 6
        },
        end: {
          line: 105,
          column: 29
        }
      },
      "47": {
        start: {
          line: 106,
          column: 6
        },
        end: {
          line: 106,
          column: 18
        }
      },
      "48": {
        start: {
          line: 110,
          column: 2
        },
        end: {
          line: 110,
          column: 25
        }
      },
      "49": {
        start: {
          line: 114,
          column: 26
        },
        end: {
          line: 297,
          column: 1
        }
      },
      "50": {
        start: {
          line: 115,
          column: 20
        },
        end: {
          line: 115,
          column: 30
        }
      },
      "51": {
        start: {
          line: 116,
          column: 20
        },
        end: {
          line: 116,
          column: 70
        }
      },
      "52": {
        start: {
          line: 117,
          column: 19
        },
        end: {
          line: 117,
          column: 81
        }
      },
      "53": {
        start: {
          line: 118,
          column: 20
        },
        end: {
          line: 118,
          column: 58
        }
      },
      "54": {
        start: {
          line: 120,
          column: 2
        },
        end: {
          line: 296,
          column: 3
        }
      },
      "55": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 121,
          column: 100
        }
      },
      "56": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 130,
          column: 7
        }
      },
      "57": {
        start: {
          line: 140,
          column: 23
        },
        end: {
          line: 140,
          column: 51
        }
      },
      "58": {
        start: {
          line: 141,
          column: 18
        },
        end: {
          line: 141,
          column: 56
        }
      },
      "59": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 143,
          column: 81
        }
      },
      "60": {
        start: {
          line: 144,
          column: 4
        },
        end: {
          line: 144,
          column: 63
        }
      },
      "61": {
        start: {
          line: 147,
          column: 4
        },
        end: {
          line: 147,
          column: 61
        }
      },
      "62": {
        start: {
          line: 148,
          column: 24
        },
        end: {
          line: 148,
          column: 43
        }
      },
      "63": {
        start: {
          line: 151,
          column: 4
        },
        end: {
          line: 172,
          column: 5
        }
      },
      "64": {
        start: {
          line: 152,
          column: 6
        },
        end: {
          line: 152,
          column: 67
        }
      },
      "65": {
        start: {
          line: 153,
          column: 6
        },
        end: {
          line: 158,
          column: 9
        }
      },
      "66": {
        start: {
          line: 160,
          column: 6
        },
        end: {
          line: 171,
          column: 9
        }
      },
      "67": {
        start: {
          line: 175,
          column: 4
        },
        end: {
          line: 186,
          column: 5
        }
      },
      "68": {
        start: {
          line: 176,
          column: 6
        },
        end: {
          line: 176,
          column: 79
        }
      },
      "69": {
        start: {
          line: 177,
          column: 6
        },
        end: {
          line: 185,
          column: 9
        }
      },
      "70": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 188,
          column: 75
        }
      },
      "71": {
        start: {
          line: 190,
          column: 20
        },
        end: {
          line: 190,
          column: 51
        }
      },
      "72": {
        start: {
          line: 191,
          column: 4
        },
        end: {
          line: 191,
          column: 65
        }
      },
      "73": {
        start: {
          line: 194,
          column: 4
        },
        end: {
          line: 218,
          column: 6
        }
      },
      "74": {
        start: {
          line: 221,
          column: 4
        },
        end: {
          line: 229,
          column: 7
        }
      },
      "75": {
        start: {
          line: 231,
          column: 21
        },
        end: {
          line: 231,
          column: 43
        }
      },
      "76": {
        start: {
          line: 232,
          column: 4
        },
        end: {
          line: 237,
          column: 7
        }
      },
      "77": {
        start: {
          line: 239,
          column: 4
        },
        end: {
          line: 239,
          column: 11
        }
      },
      "78": {
        start: {
          line: 241,
          column: 21
        },
        end: {
          line: 241,
          column: 43
        }
      },
      "79": {
        start: {
          line: 242,
          column: 4
        },
        end: {
          line: 246,
          column: 7
        }
      },
      "80": {
        start: {
          line: 249,
          column: 4
        },
        end: {
          line: 256,
          column: 5
        }
      },
      "81": {
        start: {
          line: 250,
          column: 6
        },
        end: {
          line: 250,
          column: 55
        }
      },
      "82": {
        start: {
          line: 251,
          column: 6
        },
        end: {
          line: 255,
          column: 9
        }
      },
      "83": {
        start: {
          line: 258,
          column: 4
        },
        end: {
          line: 265,
          column: 5
        }
      },
      "84": {
        start: {
          line: 259,
          column: 6
        },
        end: {
          line: 259,
          column: 62
        }
      },
      "85": {
        start: {
          line: 260,
          column: 6
        },
        end: {
          line: 264,
          column: 9
        }
      },
      "86": {
        start: {
          line: 267,
          column: 4
        },
        end: {
          line: 274,
          column: 5
        }
      },
      "87": {
        start: {
          line: 268,
          column: 6
        },
        end: {
          line: 268,
          column: 81
        }
      },
      "88": {
        start: {
          line: 269,
          column: 6
        },
        end: {
          line: 273,
          column: 9
        }
      },
      "89": {
        start: {
          line: 277,
          column: 4
        },
        end: {
          line: 284,
          column: 5
        }
      },
      "90": {
        start: {
          line: 278,
          column: 6
        },
        end: {
          line: 278,
          column: 81
        }
      },
      "91": {
        start: {
          line: 279,
          column: 6
        },
        end: {
          line: 283,
          column: 9
        }
      },
      "92": {
        start: {
          line: 286,
          column: 4
        },
        end: {
          line: 286,
          column: 78
        }
      },
      "93": {
        start: {
          line: 287,
          column: 4
        },
        end: {
          line: 295,
          column: 7
        }
      },
      "94": {
        start: {
          line: 300,
          column: 20
        },
        end: {
          line: 325,
          column: 1
        }
      },
      "95": {
        start: {
          line: 301,
          column: 2
        },
        end: {
          line: 324,
          column: 4
        }
      },
      "96": {
        start: {
          line: 302,
          column: 4
        },
        end: {
          line: 307,
          column: 5
        }
      },
      "97": {
        start: {
          line: 303,
          column: 6
        },
        end: {
          line: 306,
          column: 9
        }
      },
      "98": {
        start: {
          line: 309,
          column: 21
        },
        end: {
          line: 309,
          column: 34
        }
      },
      "99": {
        start: {
          line: 310,
          column: 23
        },
        end: {
          line: 310,
          column: 44
        }
      },
      "100": {
        start: {
          line: 313,
          column: 20
        },
        end: {
          line: 313,
          column: 44
        }
      },
      "101": {
        start: {
          line: 314,
          column: 21
        },
        end: {
          line: 314,
          column: 66
        }
      },
      "102": {
        start: {
          line: 314,
          column: 40
        },
        end: {
          line: 314,
          column: 65
        }
      },
      "103": {
        start: {
          line: 316,
          column: 4
        },
        end: {
          line: 321,
          column: 5
        }
      },
      "104": {
        start: {
          line: 317,
          column: 6
        },
        end: {
          line: 320,
          column: 9
        }
      },
      "105": {
        start: {
          line: 323,
          column: 4
        },
        end: {
          line: 323,
          column: 11
        }
      },
      "106": {
        start: {
          line: 328,
          column: 21
        },
        end: {
          line: 355,
          column: 1
        }
      },
      "107": {
        start: {
          line: 329,
          column: 2
        },
        end: {
          line: 352,
          column: 3
        }
      },
      "108": {
        start: {
          line: 330,
          column: 23
        },
        end: {
          line: 330,
          column: 51
        }
      },
      "109": {
        start: {
          line: 331,
          column: 18
        },
        end: {
          line: 331,
          column: 56
        }
      },
      "110": {
        start: {
          line: 336,
          column: 24
        },
        end: {
          line: 336,
          column: 43
        }
      },
      "111": {
        start: {
          line: 338,
          column: 4
        },
        end: {
          line: 347,
          column: 5
        }
      },
      "112": {
        start: {
          line: 339,
          column: 22
        },
        end: {
          line: 339,
          column: 53
        }
      },
      "113": {
        start: {
          line: 340,
          column: 6
        },
        end: {
          line: 346,
          column: 8
        }
      },
      "114": {
        start: {
          line: 351,
          column: 4
        },
        end: {
          line: 351,
          column: 56
        }
      },
      "115": {
        start: {
          line: 354,
          column: 2
        },
        end: {
          line: 354,
          column: 9
        }
      },
      "116": {
        start: {
          line: 357,
          column: 0
        },
        end: {
          line: 361,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "loadCognitoConfig",
        decl: {
          start: {
            line: 15,
            column: 15
          },
          end: {
            line: 15,
            column: 32
          }
        },
        loc: {
          start: {
            line: 15,
            column: 35
          },
          end: {
            line: 71,
            column: 1
          }
        },
        line: 15
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 27,
            column: 23
          },
          end: {
            line: 27,
            column: 24
          }
        },
        loc: {
          start: {
            line: 27,
            column: 35
          },
          end: {
            line: 68,
            column: 3
          }
        },
        line: 27
      },
      "2": {
        name: "getVerifier",
        decl: {
          start: {
            line: 77,
            column: 15
          },
          end: {
            line: 77,
            column: 26
          }
        },
        loc: {
          start: {
            line: 77,
            column: 29
          },
          end: {
            line: 111,
            column: 1
          }
        },
        line: 77
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 86,
            column: 21
          },
          end: {
            line: 86,
            column: 22
          }
        },
        loc: {
          start: {
            line: 86,
            column: 33
          },
          end: {
            line: 108,
            column: 3
          }
        },
        line: 86
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 114,
            column: 26
          },
          end: {
            line: 114,
            column: 27
          }
        },
        loc: {
          start: {
            line: 114,
            column: 52
          },
          end: {
            line: 297,
            column: 1
          }
        },
        line: 114
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 300,
            column: 20
          },
          end: {
            line: 300,
            column: 21
          }
        },
        loc: {
          start: {
            line: 300,
            column: 31
          },
          end: {
            line: 325,
            column: 1
          }
        },
        line: 300
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 301,
            column: 9
          },
          end: {
            line: 301,
            column: 10
          }
        },
        loc: {
          start: {
            line: 301,
            column: 29
          },
          end: {
            line: 324,
            column: 3
          }
        },
        line: 301
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 314,
            column: 32
          },
          end: {
            line: 314,
            column: 33
          }
        },
        loc: {
          start: {
            line: 314,
            column: 40
          },
          end: {
            line: 314,
            column: 65
          }
        },
        line: 314
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 328,
            column: 21
          },
          end: {
            line: 328,
            column: 22
          }
        },
        loc: {
          start: {
            line: 328,
            column: 47
          },
          end: {
            line: 355,
            column: 1
          }
        },
        line: 328
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 7,
            column: 10
          },
          end: {
            line: 7,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 7,
            column: 10
          },
          end: {
            line: 7,
            column: 40
          }
        }, {
          start: {
            line: 7,
            column: 44
          },
          end: {
            line: 7,
            column: 66
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 81
          }
        }],
        line: 7
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 2
          },
          end: {
            line: 19,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 2
          },
          end: {
            line: 19,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 2
          },
          end: {
            line: 24,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 2
          },
          end: {
            line: 24,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 30,
            column: 6
          },
          end: {
            line: 47,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 6
          },
          end: {
            line: 47,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "4": {
        loc: {
          start: {
            line: 50,
            column: 6
          },
          end: {
            line: 59,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 6
          },
          end: {
            line: 59,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "5": {
        loc: {
          start: {
            line: 50,
            column: 10
          },
          end: {
            line: 50,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 10
          },
          end: {
            line: 50,
            column: 42
          }
        }, {
          start: {
            line: 50,
            column: 46
          },
          end: {
            line: 50,
            column: 75
          }
        }],
        line: 50
      },
      "6": {
        loc: {
          start: {
            line: 54,
            column: 18
          },
          end: {
            line: 54,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 18
          },
          end: {
            line: 54,
            column: 48
          }
        }, {
          start: {
            line: 54,
            column: 52
          },
          end: {
            line: 54,
            column: 74
          }
        }, {
          start: {
            line: 54,
            column: 78
          },
          end: {
            line: 54,
            column: 89
          }
        }],
        line: 54
      },
      "7": {
        loc: {
          start: {
            line: 78,
            column: 2
          },
          end: {
            line: 80,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 2
          },
          end: {
            line: 80,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "8": {
        loc: {
          start: {
            line: 82,
            column: 2
          },
          end: {
            line: 84,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 2
          },
          end: {
            line: 84,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "9": {
        loc: {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 92,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 92,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "10": {
        loc: {
          start: {
            line: 116,
            column: 20
          },
          end: {
            line: 116,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 20
          },
          end: {
            line: 116,
            column: 47
          }
        }, {
          start: {
            line: 116,
            column: 51
          },
          end: {
            line: 116,
            column: 70
          }
        }],
        line: 116
      },
      "11": {
        loc: {
          start: {
            line: 117,
            column: 19
          },
          end: {
            line: 117,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 117,
            column: 19
          },
          end: {
            line: 117,
            column: 49
          }
        }, {
          start: {
            line: 117,
            column: 53
          },
          end: {
            line: 117,
            column: 81
          }
        }],
        line: 117
      },
      "12": {
        loc: {
          start: {
            line: 118,
            column: 20
          },
          end: {
            line: 118,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 118,
            column: 20
          },
          end: {
            line: 118,
            column: 45
          }
        }, {
          start: {
            line: 118,
            column: 49
          },
          end: {
            line: 118,
            column: 58
          }
        }],
        line: 118
      },
      "13": {
        loc: {
          start: {
            line: 141,
            column: 18
          },
          end: {
            line: 141,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 141,
            column: 18
          },
          end: {
            line: 141,
            column: 28
          }
        }, {
          start: {
            line: 141,
            column: 32
          },
          end: {
            line: 141,
            column: 56
          }
        }],
        line: 141
      },
      "14": {
        loc: {
          start: {
            line: 151,
            column: 4
          },
          end: {
            line: 172,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 4
          },
          end: {
            line: 172,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "15": {
        loc: {
          start: {
            line: 155,
            column: 20
          },
          end: {
            line: 155,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 155,
            column: 55
          },
          end: {
            line: 155,
            column: 60
          }
        }, {
          start: {
            line: 155,
            column: 63
          },
          end: {
            line: 155,
            column: 72
          }
        }],
        line: 155
      },
      "16": {
        loc: {
          start: {
            line: 156,
            column: 18
          },
          end: {
            line: 156,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 156,
            column: 50
          },
          end: {
            line: 156,
            column: 55
          }
        }, {
          start: {
            line: 156,
            column: 58
          },
          end: {
            line: 156,
            column: 67
          }
        }],
        line: 156
      },
      "17": {
        loc: {
          start: {
            line: 157,
            column: 19
          },
          end: {
            line: 157,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 157,
            column: 52
          },
          end: {
            line: 157,
            column: 57
          }
        }, {
          start: {
            line: 157,
            column: 60
          },
          end: {
            line: 157,
            column: 69
          }
        }],
        line: 157
      },
      "18": {
        loc: {
          start: {
            line: 163,
            column: 17
          },
          end: {
            line: 170,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 163,
            column: 58
          },
          end: {
            line: 170,
            column: 9
          }
        }, {
          start: {
            line: 170,
            column: 12
          },
          end: {
            line: 170,
            column: 21
          }
        }],
        line: 163
      },
      "19": {
        loc: {
          start: {
            line: 175,
            column: 4
          },
          end: {
            line: 186,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 4
          },
          end: {
            line: 186,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 175
      },
      "20": {
        loc: {
          start: {
            line: 198,
            column: 12
          },
          end: {
            line: 198,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 198,
            column: 12
          },
          end: {
            line: 198,
            column: 34
          }
        }, {
          start: {
            line: 198,
            column: 38
          },
          end: {
            line: 198,
            column: 44
          }
        }],
        line: 198
      },
      "21": {
        loc: {
          start: {
            line: 199,
            column: 14
          },
          end: {
            line: 199,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 199,
            column: 14
          },
          end: {
            line: 199,
            column: 39
          }
        }, {
          start: {
            line: 199,
            column: 43
          },
          end: {
            line: 199,
            column: 45
          }
        }],
        line: 199
      },
      "22": {
        loc: {
          start: {
            line: 245,
            column: 13
          },
          end: {
            line: 245,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 245,
            column: 54
          },
          end: {
            line: 245,
            column: 65
          }
        }, {
          start: {
            line: 245,
            column: 68
          },
          end: {
            line: 245,
            column: 77
          }
        }],
        line: 245
      },
      "23": {
        loc: {
          start: {
            line: 249,
            column: 4
          },
          end: {
            line: 256,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 4
          },
          end: {
            line: 256,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 249
      },
      "24": {
        loc: {
          start: {
            line: 258,
            column: 4
          },
          end: {
            line: 265,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 258,
            column: 4
          },
          end: {
            line: 265,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 258
      },
      "25": {
        loc: {
          start: {
            line: 267,
            column: 4
          },
          end: {
            line: 274,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 267,
            column: 4
          },
          end: {
            line: 274,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 267
      },
      "26": {
        loc: {
          start: {
            line: 277,
            column: 4
          },
          end: {
            line: 284,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 4
          },
          end: {
            line: 284,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      },
      "27": {
        loc: {
          start: {
            line: 277,
            column: 8
          },
          end: {
            line: 277,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 277,
            column: 8
          },
          end: {
            line: 277,
            column: 34
          }
        }, {
          start: {
            line: 277,
            column: 38
          },
          end: {
            line: 277,
            column: 67
          }
        }],
        line: 277
      },
      "28": {
        loc: {
          start: {
            line: 302,
            column: 4
          },
          end: {
            line: 307,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 302,
            column: 4
          },
          end: {
            line: 307,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 302
      },
      "29": {
        loc: {
          start: {
            line: 310,
            column: 23
          },
          end: {
            line: 310,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 310,
            column: 23
          },
          end: {
            line: 310,
            column: 38
          }
        }, {
          start: {
            line: 310,
            column: 42
          },
          end: {
            line: 310,
            column: 44
          }
        }],
        line: 310
      },
      "30": {
        loc: {
          start: {
            line: 316,
            column: 4
          },
          end: {
            line: 321,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 316,
            column: 4
          },
          end: {
            line: 321,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 316
      },
      "31": {
        loc: {
          start: {
            line: 316,
            column: 8
          },
          end: {
            line: 316,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 316,
            column: 8
          },
          end: {
            line: 316,
            column: 16
          }
        }, {
          start: {
            line: 316,
            column: 20
          },
          end: {
            line: 316,
            column: 29
          }
        }],
        line: 316
      },
      "32": {
        loc: {
          start: {
            line: 331,
            column: 18
          },
          end: {
            line: 331,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 331,
            column: 18
          },
          end: {
            line: 331,
            column: 28
          }
        }, {
          start: {
            line: 331,
            column: 32
          },
          end: {
            line: 331,
            column: 56
          }
        }],
        line: 331
      },
      "33": {
        loc: {
          start: {
            line: 338,
            column: 4
          },
          end: {
            line: 347,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 338,
            column: 4
          },
          end: {
            line: 347,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 338
      },
      "34": {
        loc: {
          start: {
            line: 338,
            column: 8
          },
          end: {
            line: 338,
            column: 28
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 338,
            column: 8
          },
          end: {
            line: 338,
            column: 13
          }
        }, {
          start: {
            line: 338,
            column: 17
          },
          end: {
            line: 338,
            column: 28
          }
        }],
        line: 338
      },
      "35": {
        loc: {
          start: {
            line: 344,
            column: 14
          },
          end: {
            line: 344,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 344,
            column: 14
          },
          end: {
            line: 344,
            column: 36
          }
        }, {
          start: {
            line: 344,
            column: 40
          },
          end: {
            line: 344,
            column: 46
          }
        }],
        line: 344
      },
      "36": {
        loc: {
          start: {
            line: 345,
            column: 16
          },
          end: {
            line: 345,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 345,
            column: 16
          },
          end: {
            line: 345,
            column: 41
          }
        }, {
          start: {
            line: 345,
            column: 45
          },
          end: {
            line: 345,
            column: 47
          }
        }],
        line: 345
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "cb723437ce3c6ab0a58c0c554c0a90eeb7d7b7fb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2du5k6xyqd = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2du5k6xyqd();
const {
  CognitoJwtVerifier
} =
/* istanbul ignore next */
(cov_2du5k6xyqd().s[0]++, require('aws-jwt-verify'));
const {
  SecretsManagerClient,
  GetSecretValueCommand
} =
/* istanbul ignore next */
(cov_2du5k6xyqd().s[1]++, require('@aws-sdk/client-secrets-manager'));
const crypto =
/* istanbul ignore next */
(cov_2du5k6xyqd().s[2]++, require('crypto'));

// Initialize secrets manager client
const secretsManager =
/* istanbul ignore next */
(cov_2du5k6xyqd().s[3]++, new SecretsManagerClient({
  region:
  /* istanbul ignore next */
  (cov_2du5k6xyqd().b[0][0]++, process.env.AWS_DEFAULT_REGION) ||
  /* istanbul ignore next */
  (cov_2du5k6xyqd().b[0][1]++, process.env.AWS_REGION) ||
  /* istanbul ignore next */
  (cov_2du5k6xyqd().b[0][2]++, 'us-east-1')
}));

// Cache for Cognito config
let cognitoConfig =
/* istanbul ignore next */
(cov_2du5k6xyqd().s[4]++, null);
let configLoadPromise =
/* istanbul ignore next */
(cov_2du5k6xyqd().s[5]++, null);

// Load Cognito configuration from Secrets Manager or environment
async function loadCognitoConfig() {
  /* istanbul ignore next */
  cov_2du5k6xyqd().f[0]++;
  cov_2du5k6xyqd().s[6]++;
  // If already loaded, return cached config
  if (cognitoConfig) {
    /* istanbul ignore next */
    cov_2du5k6xyqd().b[1][0]++;
    cov_2du5k6xyqd().s[7]++;
    return cognitoConfig;
  } else
  /* istanbul ignore next */
  {
    cov_2du5k6xyqd().b[1][1]++;
  }

  // If loading is in progress, wait for it
  cov_2du5k6xyqd().s[8]++;
  if (configLoadPromise) {
    /* istanbul ignore next */
    cov_2du5k6xyqd().b[2][0]++;
    cov_2du5k6xyqd().s[9]++;
    return configLoadPromise;
  } else
  /* istanbul ignore next */
  {
    cov_2du5k6xyqd().b[2][1]++;
  }

  // Start loading config
  cov_2du5k6xyqd().s[10]++;
  configLoadPromise = (async () => {
    /* istanbul ignore next */
    cov_2du5k6xyqd().f[1]++;
    cov_2du5k6xyqd().s[11]++;
    try {
      /* istanbul ignore next */
      cov_2du5k6xyqd().s[12]++;
      // First try to load from Secrets Manager if ARN is provided
      if (process.env.COGNITO_SECRET_ARN) {
        /* istanbul ignore next */
        cov_2du5k6xyqd().b[3][0]++;
        cov_2du5k6xyqd().s[13]++;
        console.log('Loading Cognito config from Secrets Manager...');
        const command =
        /* istanbul ignore next */
        (cov_2du5k6xyqd().s[14]++, new GetSecretValueCommand({
          SecretId: process.env.COGNITO_SECRET_ARN
        }));
        const response =
        /* istanbul ignore next */
        (cov_2du5k6xyqd().s[15]++, await secretsManager.send(command));
        const secret =
        /* istanbul ignore next */
        (cov_2du5k6xyqd().s[16]++, JSON.parse(response.SecretString));
        /* istanbul ignore next */
        cov_2du5k6xyqd().s[17]++;
        cognitoConfig = {
          userPoolId: secret.userPoolId,
          clientId: secret.clientId,
          domain: secret.domain,
          region: secret.region
        };
        /* istanbul ignore next */
        cov_2du5k6xyqd().s[18]++;
        console.log('Cognito config loaded from Secrets Manager');
        /* istanbul ignore next */
        cov_2du5k6xyqd().s[19]++;
        return cognitoConfig;
      } else
      /* istanbul ignore next */
      {
        cov_2du5k6xyqd().b[3][1]++;
      }

      // Fall back to environment variables
      cov_2du5k6xyqd().s[20]++;
      if (
      /* istanbul ignore next */
      (cov_2du5k6xyqd().b[5][0]++, process.env.COGNITO_USER_POOL_ID) &&
      /* istanbul ignore next */
      (cov_2du5k6xyqd().b[5][1]++, process.env.COGNITO_CLIENT_ID)) {
        /* istanbul ignore next */
        cov_2du5k6xyqd().b[4][0]++;
        cov_2du5k6xyqd().s[21]++;
        cognitoConfig = {
          userPoolId: process.env.COGNITO_USER_POOL_ID,
          clientId: process.env.COGNITO_CLIENT_ID,
          region:
          /* istanbul ignore next */
          (cov_2du5k6xyqd().b[6][0]++, process.env.AWS_DEFAULT_REGION) ||
          /* istanbul ignore next */
          (cov_2du5k6xyqd().b[6][1]++, process.env.AWS_REGION) ||
          /* istanbul ignore next */
          (cov_2du5k6xyqd().b[6][2]++, 'us-east-1')
        };
        /* istanbul ignore next */
        cov_2du5k6xyqd().s[22]++;
        console.log('Cognito config loaded from environment variables');
        /* istanbul ignore next */
        cov_2du5k6xyqd().s[23]++;
        return cognitoConfig;
      } else
      /* istanbul ignore next */
      {
        cov_2du5k6xyqd().b[4][1]++;
      }
      cov_2du5k6xyqd().s[24]++;
      console.warn('No Cognito configuration found');
      /* istanbul ignore next */
      cov_2du5k6xyqd().s[25]++;
      return null;
    } catch (error) {
      /* istanbul ignore next */
      cov_2du5k6xyqd().s[26]++;
      console.error('Failed to load Cognito config:', error);
      /* istanbul ignore next */
      cov_2du5k6xyqd().s[27]++;
      configLoadPromise = null; // Reset to allow retry
      /* istanbul ignore next */
      cov_2du5k6xyqd().s[28]++;
      return null;
    }
  })();
  /* istanbul ignore next */
  cov_2du5k6xyqd().s[29]++;
  return configLoadPromise;
}

// Create JWT verifier
let verifier =
/* istanbul ignore next */
(cov_2du5k6xyqd().s[30]++, null);
let verifierPromise =
/* istanbul ignore next */
(cov_2du5k6xyqd().s[31]++, null);
async function getVerifier() {
  /* istanbul ignore next */
  cov_2du5k6xyqd().f[2]++;
  cov_2du5k6xyqd().s[32]++;
  if (verifier) {
    /* istanbul ignore next */
    cov_2du5k6xyqd().b[7][0]++;
    cov_2du5k6xyqd().s[33]++;
    return verifier;
  } else
  /* istanbul ignore next */
  {
    cov_2du5k6xyqd().b[7][1]++;
  }
  cov_2du5k6xyqd().s[34]++;
  if (verifierPromise) {
    /* istanbul ignore next */
    cov_2du5k6xyqd().b[8][0]++;
    cov_2du5k6xyqd().s[35]++;
    return verifierPromise;
  } else
  /* istanbul ignore next */
  {
    cov_2du5k6xyqd().b[8][1]++;
  }
  cov_2du5k6xyqd().s[36]++;
  verifierPromise = (async () => {
    /* istanbul ignore next */
    cov_2du5k6xyqd().f[3]++;
    const config =
    /* istanbul ignore next */
    (cov_2du5k6xyqd().s[37]++, await loadCognitoConfig());
    /* istanbul ignore next */
    cov_2du5k6xyqd().s[38]++;
    if (!config) {
      /* istanbul ignore next */
      cov_2du5k6xyqd().b[9][0]++;
      cov_2du5k6xyqd().s[39]++;
      console.warn('Cognito configuration not available. Authentication will be disabled.');
      /* istanbul ignore next */
      cov_2du5k6xyqd().s[40]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_2du5k6xyqd().b[9][1]++;
    }
    cov_2du5k6xyqd().s[41]++;
    try {
      /* istanbul ignore next */
      cov_2du5k6xyqd().s[42]++;
      verifier = CognitoJwtVerifier.create({
        userPoolId: config.userPoolId,
        tokenUse: 'access',
        clientId: config.clientId
      });
      /* istanbul ignore next */
      cov_2du5k6xyqd().s[43]++;
      console.log('Cognito JWT verifier created successfully');
      /* istanbul ignore next */
      cov_2du5k6xyqd().s[44]++;
      return verifier;
    } catch (error) {
      /* istanbul ignore next */
      cov_2du5k6xyqd().s[45]++;
      console.error('Failed to create Cognito JWT verifier:', error);
      /* istanbul ignore next */
      cov_2du5k6xyqd().s[46]++;
      verifierPromise = null; // Reset to allow retry
      /* istanbul ignore next */
      cov_2du5k6xyqd().s[47]++;
      return null;
    }
  })();
  /* istanbul ignore next */
  cov_2du5k6xyqd().s[48]++;
  return verifierPromise;
}

// Bulletproof Authentication middleware with comprehensive security
/* istanbul ignore next */
cov_2du5k6xyqd().s[49]++;
const authenticateToken = async (req, res, next) => {
  /* istanbul ignore next */
  cov_2du5k6xyqd().f[4]++;
  const startTime =
  /* istanbul ignore next */
  (cov_2du5k6xyqd().s[50]++, Date.now());
  const requestId =
  /* istanbul ignore next */
  (cov_2du5k6xyqd().s[51]++,
  /* istanbul ignore next */
  (cov_2du5k6xyqd().b[10][0]++, req.headers['x-request-id']) ||
  /* istanbul ignore next */
  (cov_2du5k6xyqd().b[10][1]++, crypto.randomUUID()));
  const clientIp =
  /* istanbul ignore next */
  (cov_2du5k6xyqd().s[52]++,
  /* istanbul ignore next */
  (cov_2du5k6xyqd().b[11][0]++, req.headers['x-forwarded-for']) ||
  /* istanbul ignore next */
  (cov_2du5k6xyqd().b[11][1]++, req.connection.remoteAddress));
  const userAgent =
  /* istanbul ignore next */
  (cov_2du5k6xyqd().s[53]++,
  /* istanbul ignore next */
  (cov_2du5k6xyqd().b[12][0]++, req.headers['user-agent']) ||
  /* istanbul ignore next */
  (cov_2du5k6xyqd().b[12][1]++, 'unknown'));
  /* istanbul ignore next */
  cov_2du5k6xyqd().s[54]++;
  try {
    /* istanbul ignore next */
    cov_2du5k6xyqd().s[55]++;
    console.log(`🔐 [${requestId}] Authentication middleware called for ${req.method} ${req.path}`);
    /* istanbul ignore next */
    cov_2du5k6xyqd().s[56]++;
    console.log(`🌍 [${requestId}] Security Context:`, {
      NODE_ENV: process.env.NODE_ENV,
      clientIp,
      userAgent: userAgent.substring(0, 100),
      // Truncate for logging
      hasUserPoolId: !!process.env.COGNITO_USER_POOL_ID,
      hasClientId: !!process.env.COGNITO_CLIENT_ID,
      hasSecretArn: !!process.env.COGNITO_SECRET_ARN,
      timestamp: new Date().toISOString()
    });

    // SECURITY: Remove development bypass to prevent production exploitation
    // Development bypass completely removed for security reasons
    // All requests must use proper Cognito authentication

    // Note: Development bypass was removed due to security risk
    // Use proper Cognito tokens even in development environment

    // Check for demo/development tokens first
    const authHeader =
    /* istanbul ignore next */
    (cov_2du5k6xyqd().s[57]++, req.headers['authorization']);
    const token =
    /* istanbul ignore next */
    (cov_2du5k6xyqd().s[58]++,
    /* istanbul ignore next */
    (cov_2du5k6xyqd().b[13][0]++, authHeader) &&
    /* istanbul ignore next */
    (cov_2du5k6xyqd().b[13][1]++, authHeader.split(' ')[1])); // Bearer TOKEN
    /* istanbul ignore next */
    cov_2du5k6xyqd().s[59]++;
    console.log(`🎫 [${requestId}] Authorization header present:`, !!authHeader);
    /* istanbul ignore next */
    cov_2du5k6xyqd().s[60]++;
    console.log(`🎫 [${requestId}] Token extracted:`, !!token);

    // Get verifier (will load config if needed)
    /* istanbul ignore next */
    cov_2du5k6xyqd().s[61]++;
    console.log(`🔍 [${requestId}] Getting JWT verifier...`);
    const jwtVerifier =
    /* istanbul ignore next */
    (cov_2du5k6xyqd().s[62]++, await getVerifier());

    // If no verifier is available, check if we should allow in development
    /* istanbul ignore next */
    cov_2du5k6xyqd().s[63]++;
    if (!jwtVerifier) {
      /* istanbul ignore next */
      cov_2du5k6xyqd().b[14][0]++;
      cov_2du5k6xyqd().s[64]++;
      console.error(`❌ [${requestId}] JWT verifier not available`);
      /* istanbul ignore next */
      cov_2du5k6xyqd().s[65]++;
      console.error(`❌ [${requestId}] Config status:`, {
        cognitoConfigLoaded: !!cognitoConfig,
        userPoolId: process.env.COGNITO_USER_POOL_ID ?
        /* istanbul ignore next */
        (cov_2du5k6xyqd().b[15][0]++, 'SET') :
        /* istanbul ignore next */
        (cov_2du5k6xyqd().b[15][1]++, 'MISSING'),
        clientId: process.env.COGNITO_CLIENT_ID ?
        /* istanbul ignore next */
        (cov_2du5k6xyqd().b[16][0]++, 'SET') :
        /* istanbul ignore next */
        (cov_2du5k6xyqd().b[16][1]++, 'MISSING'),
        secretArn: process.env.COGNITO_SECRET_ARN ?
        /* istanbul ignore next */
        (cov_2du5k6xyqd().b[17][0]++, 'SET') :
        /* istanbul ignore next */
        (cov_2du5k6xyqd().b[17][1]++, 'MISSING')
      });
      /* istanbul ignore next */
      cov_2du5k6xyqd().s[66]++;
      return res.status(503).json({
        error: 'Authentication service unavailable',
        message: 'Unable to verify authentication tokens. Please check Cognito configuration.',
        details: process.env.NODE_ENV === 'development' ?
        /* istanbul ignore next */
        (cov_2du5k6xyqd().b[18][0]++, {
          requestId,
          configStatus: {
            userPoolId: !!process.env.COGNITO_USER_POOL_ID,
            clientId: !!process.env.COGNITO_CLIENT_ID,
            secretArn: !!process.env.COGNITO_SECRET_ARN
          }
        }) :
        /* istanbul ignore next */
        (cov_2du5k6xyqd().b[18][1]++, undefined)
      });
    } else
    /* istanbul ignore next */
    {
      cov_2du5k6xyqd().b[14][1]++;
    }

    // Token already extracted above
    cov_2du5k6xyqd().s[67]++;
    if (!token) {
      /* istanbul ignore next */
      cov_2du5k6xyqd().b[19][0]++;
      cov_2du5k6xyqd().s[68]++;
      console.error(`❌ [${requestId}] No token found in Authorization header`);
      /* istanbul ignore next */
      cov_2du5k6xyqd().s[69]++;
      return res.status(401).json({
        error: 'Authentication required',
        message: 'Access token is missing from Authorization header',
        details: {
          requestId,
          authHeaderPresent: !!authHeader,
          expectedFormat: 'Bearer <token>'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_2du5k6xyqd().b[19][1]++;
    }
    cov_2du5k6xyqd().s[70]++;
    console.log(`✅ [${requestId}] Token found, verifying with Cognito...`);
    // Verify the JWT token
    const payload =
    /* istanbul ignore next */
    (cov_2du5k6xyqd().s[71]++, await jwtVerifier.verify(token));
    /* istanbul ignore next */
    cov_2du5k6xyqd().s[72]++;
    console.log(`🎯 [${requestId}] Token verified successfully`);

    // Add comprehensive user information to request with security context
    /* istanbul ignore next */
    cov_2du5k6xyqd().s[73]++;
    req.user = {
      sub: payload.sub,
      email: payload.email,
      username: payload.username,
      role:
      /* istanbul ignore next */
      (cov_2du5k6xyqd().b[20][0]++, payload['custom:role']) ||
      /* istanbul ignore next */
      (cov_2du5k6xyqd().b[20][1]++, 'user'),
      groups:
      /* istanbul ignore next */
      (cov_2du5k6xyqd().b[21][0]++, payload['cognito:groups']) ||
      /* istanbul ignore next */
      (cov_2du5k6xyqd().b[21][1]++, []),
      // Security context
      clientIp,
      userAgent,
      requestId,
      authenticatedAt: new Date().toISOString(),
      tokenIssuedAt: new Date(payload.iat * 1000).toISOString(),
      tokenExpiresAt: new Date(payload.exp * 1000).toISOString(),
      // Enhanced profile attributes for financial platform
      givenName: payload.given_name,
      familyName: payload.family_name,
      phoneNumber: payload.phone_number,
      phoneNumberVerified: payload.phone_number_verified,
      emailVerified: payload.email_verified,
      organization: payload['custom:organization'],
      jobTitle: payload['custom:job_title'],
      riskTolerance: payload['custom:risk_tolerance'],
      investmentExperience: payload['custom:investment_experience'],
      accreditedInvestor: payload['custom:accredited_investor']
    };

    // Log successful authentication with security details
    /* istanbul ignore next */
    cov_2du5k6xyqd().s[74]++;
    console.log(`✅ [${requestId}] User authenticated successfully:`, {
      userId: req.user.sub,
      email: req.user.email,
      role: req.user.role,
      clientIp,
      userAgent: userAgent.substring(0, 50),
      authenticatedAt: req.user.authenticatedAt,
      tokenExpiresAt: req.user.tokenExpiresAt
    });
    const duration =
    /* istanbul ignore next */
    (cov_2du5k6xyqd().s[75]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_2du5k6xyqd().s[76]++;
    console.log(`👤 [${requestId}] User authenticated in ${duration}ms:`, {
      sub: req.user.sub,
      email: req.user.email,
      username: req.user.username,
      role: req.user.role
    });
    /* istanbul ignore next */
    cov_2du5k6xyqd().s[77]++;
    next();
  } catch (error) {
    const duration =
    /* istanbul ignore next */
    (cov_2du5k6xyqd().s[78]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_2du5k6xyqd().s[79]++;
    console.error(`❌ [${requestId}] Authentication error after ${duration}ms:`, {
      name: error.name,
      message: error.message,
      stack: process.env.NODE_ENV === 'development' ?
      /* istanbul ignore next */
      (cov_2du5k6xyqd().b[22][0]++, error.stack) :
      /* istanbul ignore next */
      (cov_2du5k6xyqd().b[22][1]++, undefined)
    });

    // Handle specific JWT errors
    /* istanbul ignore next */
    cov_2du5k6xyqd().s[80]++;
    if (error.name === 'TokenExpiredError') {
      /* istanbul ignore next */
      cov_2du5k6xyqd().b[23][0]++;
      cov_2du5k6xyqd().s[81]++;
      console.error(`🕐 [${requestId}] Token expired`);
      /* istanbul ignore next */
      cov_2du5k6xyqd().s[82]++;
      return res.status(401).json({
        error: 'Token expired',
        message: 'Your session has expired. Please log in again.',
        details: {
          requestId,
          errorType: 'TOKEN_EXPIRED'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_2du5k6xyqd().b[23][1]++;
    }
    cov_2du5k6xyqd().s[83]++;
    if (error.name === 'JsonWebTokenError') {
      /* istanbul ignore next */
      cov_2du5k6xyqd().b[24][0]++;
      cov_2du5k6xyqd().s[84]++;
      console.error(`🚫 [${requestId}] Invalid token format`);
      /* istanbul ignore next */
      cov_2du5k6xyqd().s[85]++;
      return res.status(401).json({
        error: 'Invalid token',
        message: 'The provided token is invalid.',
        details: {
          requestId,
          errorType: 'TOKEN_INVALID'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_2du5k6xyqd().b[24][1]++;
    }
    cov_2du5k6xyqd().s[86]++;
    if (error.name === 'JwtVerifyError') {
      /* istanbul ignore next */
      cov_2du5k6xyqd().b[25][0]++;
      cov_2du5k6xyqd().s[87]++;
      console.error(`🚫 [${requestId}] JWT verification failed:`, error.message);
      /* istanbul ignore next */
      cov_2du5k6xyqd().s[88]++;
      return res.status(401).json({
        error: 'Token verification failed',
        message: 'Unable to verify the provided token.',
        details: {
          requestId,
          errorType: 'JWT_VERIFY_ERROR'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_2du5k6xyqd().b[25][1]++;
    }

    // Handle network/service errors
    cov_2du5k6xyqd().s[89]++;
    if (
    /* istanbul ignore next */
    (cov_2du5k6xyqd().b[27][0]++, error.code === 'ENOTFOUND') ||
    /* istanbul ignore next */
    (cov_2du5k6xyqd().b[27][1]++, error.code === 'ECONNREFUSED')) {
      /* istanbul ignore next */
      cov_2du5k6xyqd().b[26][0]++;
      cov_2du5k6xyqd().s[90]++;
      console.error(`🌐 [${requestId}] Network error during token verification`);
      /* istanbul ignore next */
      cov_2du5k6xyqd().s[91]++;
      return res.status(503).json({
        error: 'Authentication service unavailable',
        message: 'Unable to connect to authentication service.',
        details: {
          requestId,
          errorType: 'NETWORK_ERROR'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_2du5k6xyqd().b[26][1]++;
    }
    cov_2du5k6xyqd().s[92]++;
    console.error(`🔥 [${requestId}] Generic authentication failure:`, error);
    /* istanbul ignore next */
    cov_2du5k6xyqd().s[93]++;
    return res.status(401).json({
      error: 'Authentication failed',
      message: 'Could not verify authentication token',
      details: {
        requestId,
        errorType: 'UNKNOWN_ERROR',
        errorName: error.name
      }
    });
  }
};

// Authorization middleware for role-based access
/* istanbul ignore next */
cov_2du5k6xyqd().s[94]++;
const requireRole = roles => {
  /* istanbul ignore next */
  cov_2du5k6xyqd().f[5]++;
  cov_2du5k6xyqd().s[95]++;
  return (req, res, next) => {
    /* istanbul ignore next */
    cov_2du5k6xyqd().f[6]++;
    cov_2du5k6xyqd().s[96]++;
    if (!req.user) {
      /* istanbul ignore next */
      cov_2du5k6xyqd().b[28][0]++;
      cov_2du5k6xyqd().s[97]++;
      return res.status(401).json({
        error: 'Authentication required',
        message: 'User must be authenticated to access this resource'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2du5k6xyqd().b[28][1]++;
    }
    const userRole =
    /* istanbul ignore next */
    (cov_2du5k6xyqd().s[98]++, req.user.role);
    const userGroups =
    /* istanbul ignore next */
    (cov_2du5k6xyqd().s[99]++,
    /* istanbul ignore next */
    (cov_2du5k6xyqd().b[29][0]++, req.user.groups) ||
    /* istanbul ignore next */
    (cov_2du5k6xyqd().b[29][1]++, []));

    // Check if user has required role or is in required group
    const hasRole =
    /* istanbul ignore next */
    (cov_2du5k6xyqd().s[100]++, roles.includes(userRole));
    const hasGroup =
    /* istanbul ignore next */
    (cov_2du5k6xyqd().s[101]++, roles.some(role => {
      /* istanbul ignore next */
      cov_2du5k6xyqd().f[7]++;
      cov_2du5k6xyqd().s[102]++;
      return userGroups.includes(role);
    }));
    /* istanbul ignore next */
    cov_2du5k6xyqd().s[103]++;
    if (
    /* istanbul ignore next */
    (cov_2du5k6xyqd().b[31][0]++, !hasRole) &&
    /* istanbul ignore next */
    (cov_2du5k6xyqd().b[31][1]++, !hasGroup)) {
      /* istanbul ignore next */
      cov_2du5k6xyqd().b[30][0]++;
      cov_2du5k6xyqd().s[104]++;
      return res.status(403).json({
        error: 'Insufficient permissions',
        message: `Access denied. Required roles: ${roles.join(', ')}`
      });
    } else
    /* istanbul ignore next */
    {
      cov_2du5k6xyqd().b[30][1]++;
    }
    cov_2du5k6xyqd().s[105]++;
    next();
  };
};

// Optional authentication middleware (doesn't fail if no token)
/* istanbul ignore next */
cov_2du5k6xyqd().s[106]++;
const optionalAuth = async (req, res, next) => {
  /* istanbul ignore next */
  cov_2du5k6xyqd().f[8]++;
  cov_2du5k6xyqd().s[107]++;
  try {
    const authHeader =
    /* istanbul ignore next */
    (cov_2du5k6xyqd().s[108]++, req.headers['authorization']);
    const token =
    /* istanbul ignore next */
    (cov_2du5k6xyqd().s[109]++,
    /* istanbul ignore next */
    (cov_2du5k6xyqd().b[32][0]++, authHeader) &&
    /* istanbul ignore next */
    (cov_2du5k6xyqd().b[32][1]++, authHeader.split(' ')[1]));

    // REMOVED: Development token handling - using Cognito only

    // Get verifier
    const jwtVerifier =
    /* istanbul ignore next */
    (cov_2du5k6xyqd().s[110]++, await getVerifier());
    /* istanbul ignore next */
    cov_2du5k6xyqd().s[111]++;
    if (
    /* istanbul ignore next */
    (cov_2du5k6xyqd().b[34][0]++, token) &&
    /* istanbul ignore next */
    (cov_2du5k6xyqd().b[34][1]++, jwtVerifier)) {
      /* istanbul ignore next */
      cov_2du5k6xyqd().b[33][0]++;
      const payload =
      /* istanbul ignore next */
      (cov_2du5k6xyqd().s[112]++, await jwtVerifier.verify(token));
      /* istanbul ignore next */
      cov_2du5k6xyqd().s[113]++;
      req.user = {
        sub: payload.sub,
        email: payload.email,
        username: payload.username,
        role:
        /* istanbul ignore next */
        (cov_2du5k6xyqd().b[35][0]++, payload['custom:role']) ||
        /* istanbul ignore next */
        (cov_2du5k6xyqd().b[35][1]++, 'user'),
        groups:
        /* istanbul ignore next */
        (cov_2du5k6xyqd().b[36][0]++, payload['cognito:groups']) ||
        /* istanbul ignore next */
        (cov_2du5k6xyqd().b[36][1]++, [])
      };
    } else
    /* istanbul ignore next */
    {
      cov_2du5k6xyqd().b[33][1]++;
    }
    // If no token or verifier, continue without setting req.user
  } catch (error) {
    /* istanbul ignore next */
    cov_2du5k6xyqd().s[114]++;
    // Silently continue without authentication
    console.log('Optional auth failed:', error.message);
  }
  /* istanbul ignore next */
  cov_2du5k6xyqd().s[115]++;
  next();
};
/* istanbul ignore next */
cov_2du5k6xyqd().s[116]++;
module.exports = {
  authenticateToken,
  requireRole,
  optionalAuth
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,