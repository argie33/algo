{"version":3,"names":["cov_jovcd8b61","actualCoverage","axios","s","require","query","timeoutHelper","NewsAnalyzer","constructor","f","sources","reliability","bias","categories","fetchNewsFromSources","newsItems","fetchFromAlphaVantage","fetchFromPolygon","fetchFromYahooFinance","fetchFromMarketaux","fetchFromNewsAPI","results","Promise","allSettled","forEach","result","index","b","status","value","push","console","warn","reason","length","log","getMockNewsData","error","response","newsApiCall","get","params","function","apikey","process","env","ALPHAVANTAGE_API_KEY","limit","timeout","operation","retries","data","feed","map","item","title","content","summary","source","author","authors","published_at","time_published","url","category","categorizeNews","symbol","extractSymbol","keywords","extractKeywords","source_type","message","POLYGON_API_KEY","description","publisher","name","published_utc","article_url","rssFeeds","Date","toISOString","feedError","api_token","MARKETAUX_API_KEY","language","snippet","apiKey","NEWS_API_KEY","q","sortBy","pageSize","articles","publishedAt","mockNews","now","text","lowerText","toLowerCase","Object","entries","some","keyword","includes","symbolRegex","matches","match","commonWords","filteredSymbols","filter","words","replace","split","word","stopWords","filteredWords","wordFreq","sort","a","slice","calculateReliabilityScore","sourceName","calculateImpactScore","article","score","categoryWeights","impactKeywords","titleLower","keywordCount","Math","min","calculateRelevanceScore","userSymbols","categoryRelevance","hoursSincePublished","getTime","processAndStoreNews","processedNews","processedItem","substring","impact_score","relevance_score","module","exports"],"sources":["newsAnalyzer.js"],"sourcesContent":["const axios = require('axios');\nconst { query } = require('./database');\nconst timeoutHelper = require('./timeoutHelper');\n\nclass NewsAnalyzer {\n  constructor() {\n    this.sources = {\n      'Reuters': { reliability: 0.95, bias: 0.1 },\n      'Bloomberg': { reliability: 0.92, bias: 0.15 },\n      'Wall Street Journal': { reliability: 0.90, bias: 0.2 },\n      'Financial Times': { reliability: 0.88, bias: 0.15 },\n      'MarketWatch': { reliability: 0.85, bias: 0.25 },\n      'Yahoo Finance': { reliability: 0.75, bias: 0.3 },\n      'CNN Business': { reliability: 0.80, bias: 0.35 },\n      'CNBC': { reliability: 0.82, bias: 0.3 },\n      'Seeking Alpha': { reliability: 0.70, bias: 0.4 },\n      'Benzinga': { reliability: 0.65, bias: 0.45 },\n      'TradingView': { reliability: 0.60, bias: 0.5 },\n      'Motley Fool': { reliability: 0.55, bias: 0.6 }\n    };\n    \n    this.categories = {\n      'earnings': ['earnings', 'quarterly', 'revenue', 'profit', 'eps'],\n      'merger': ['merger', 'acquisition', 'takeover', 'buyout', 'deal'],\n      'regulatory': ['regulatory', 'sec', 'fda', 'government', 'policy'],\n      'analyst': ['analyst', 'rating', 'upgrade', 'downgrade', 'target'],\n      'economic': ['economic', 'gdp', 'inflation', 'fed', 'interest'],\n      'technology': ['technology', 'tech', 'software', 'hardware', 'ai'],\n      'healthcare': ['healthcare', 'pharma', 'drug', 'medical', 'biotech'],\n      'energy': ['energy', 'oil', 'gas', 'renewable', 'solar'],\n      'finance': ['bank', 'financial', 'credit', 'loan', 'mortgage'],\n      'retail': ['retail', 'consumer', 'sales', 'store', 'shopping']\n    };\n  }\n\n  async fetchNewsFromSources() {\n    const newsItems = [];\n    \n    try {\n      // Try multiple free news sources\n      const sources = [\n        this.fetchFromAlphaVantage(),\n        this.fetchFromPolygon(),\n        this.fetchFromYahooFinance(),\n        this.fetchFromMarketaux(),\n        this.fetchFromNewsAPI()\n      ];\n      \n      const results = await Promise.allSettled(sources);\n      \n      results.forEach((result, index) => {\n        if (result.status === 'fulfilled' && result.value) {\n          newsItems.push(...result.value);\n        } else {\n          console.warn(`News source ${index + 1} failed:`, result.reason);\n        }\n      });\n      \n      // If no sources work, return mock data\n      if (newsItems.length === 0) {\n        console.log('All news sources failed, using mock data');\n        return this.getMockNewsData();\n      }\n      \n      return newsItems;\n    } catch (error) {\n      console.error('Error fetching news:', error);\n      return this.getMockNewsData();\n    }\n  }\n\n  async fetchFromAlphaVantage() {\n    try {\n      // AlphaVantage has a free news API with improved timeout handling\n      const response = await timeoutHelper.newsApiCall(async () => {\n        return axios.get('https://www.alphavantage.co/query', {\n          params: {\n            function: 'NEWS_SENTIMENT',\n            apikey: process.env.ALPHAVANTAGE_API_KEY || 'demo',\n            limit: 50\n          },\n          timeout: 8000\n        });\n      }, {\n        operation: 'alphavantage-news',\n        retries: 1\n      });\n      \n      if (response.data && response.data.feed) {\n        return response.data.feed.map(item => ({\n          title: item.title,\n          content: item.summary,\n          source: item.source,\n          author: item.authors || 'Unknown',\n          published_at: item.time_published,\n          url: item.url,\n          category: this.categorizeNews(item.title + ' ' + item.summary),\n          symbol: this.extractSymbol(item.title + ' ' + item.summary),\n          keywords: this.extractKeywords(item.title + ' ' + item.summary),\n          summary: item.summary,\n          source_type: 'alphavantage'\n        }));\n      }\n      \n      return [];\n    } catch (error) {\n      console.error('Error fetching from AlphaVantage:', error.message);\n      return [];\n    }\n  }\n\n  async fetchFromPolygon() {\n    try {\n      // Polygon has a free tier with improved timeout handling\n      const response = await timeoutHelper.newsApiCall(async () => {\n        return axios.get('https://api.polygon.io/v2/reference/news', {\n          params: {\n            apikey: process.env.POLYGON_API_KEY || 'demo',\n            limit: 50\n          },\n          timeout: 8000\n        });\n      }, {\n        operation: 'polygon-news',\n        retries: 1\n      });\n      \n      if (response.data && response.data.results) {\n        return response.data.results.map(item => ({\n          title: item.title,\n          content: item.description,\n          source: item.publisher.name,\n          author: item.author || 'Unknown',\n          published_at: item.published_utc,\n          url: item.article_url,\n          category: this.categorizeNews(item.title + ' ' + item.description),\n          symbol: this.extractSymbol(item.title + ' ' + item.description),\n          keywords: this.extractKeywords(item.title + ' ' + item.description),\n          summary: item.description,\n          source_type: 'polygon'\n        }));\n      }\n      \n      return [];\n    } catch (error) {\n      console.error('Error fetching from Polygon:', error.message);\n      return [];\n    }\n  }\n\n  async fetchFromYahooFinance() {\n    try {\n      // Yahoo Finance RSS feeds (free)\n      const rssFeeds = [\n        'https://feeds.finance.yahoo.com/rss/2.0/headline',\n        'https://feeds.finance.yahoo.com/rss/2.0/topstories'\n      ];\n      \n      const newsItems = [];\n      \n      for (const feed of rssFeeds) {\n        try {\n          const response = await timeoutHelper.newsApiCall(async () => {\n            return axios.get(feed, { timeout: 8000 });\n          }, {\n            operation: 'yahoo-rss',\n            retries: 0\n          });\n          // Parse RSS would require xml2js, for now return mock structure\n          newsItems.push({\n            title: 'Yahoo Finance Market Update',\n            content: 'Latest market news from Yahoo Finance',\n            source: 'Yahoo Finance',\n            author: 'Yahoo Finance',\n            published_at: new Date().toISOString(),\n            url: 'https://finance.yahoo.com',\n            category: 'market',\n            symbol: null,\n            keywords: ['market', 'update', 'finance'],\n            summary: 'Latest market news from Yahoo Finance',\n            source_type: 'yahoo'\n          });\n        } catch (feedError) {\n          console.warn(`Failed to fetch Yahoo feed ${feed}:`, feedError.message);\n        }\n      }\n      \n      return newsItems;\n    } catch (error) {\n      console.error('Error fetching from Yahoo Finance:', error.message);\n      return [];\n    }\n  }\n\n  async fetchFromMarketaux() {\n    try {\n      // Marketaux has a free tier with improved timeout handling\n      const response = await timeoutHelper.newsApiCall(async () => {\n        return axios.get('https://api.marketaux.com/v1/news/all', {\n          params: {\n            api_token: process.env.MARKETAUX_API_KEY || 'demo',\n            limit: 50,\n            language: 'en'\n          },\n          timeout: 8000\n        });\n      }, {\n        operation: 'marketaux-news',\n        retries: 1\n      });\n      \n      if (response.data && response.data.data) {\n        return response.data.data.map(item => ({\n          title: item.title,\n          content: item.description,\n          source: item.source,\n          author: item.source,\n          published_at: item.published_at,\n          url: item.url,\n          category: this.categorizeNews(item.title + ' ' + item.description),\n          symbol: this.extractSymbol(item.title + ' ' + item.description),\n          keywords: this.extractKeywords(item.title + ' ' + item.description),\n          summary: item.snippet,\n          source_type: 'marketaux'\n        }));\n      }\n      \n      return [];\n    } catch (error) {\n      console.error('Error fetching from Marketaux:', error.message);\n      return [];\n    }\n  }\n\n  async fetchFromNewsAPI() {\n    try {\n      // NewsAPI has a free tier with improved timeout handling\n      const response = await timeoutHelper.newsApiCall(async () => {\n        return axios.get('https://newsapi.org/v2/everything', {\n          params: {\n            apiKey: process.env.NEWS_API_KEY || 'demo',\n            q: 'stocks OR trading OR market OR finance',\n            language: 'en',\n            sortBy: 'publishedAt',\n            pageSize: 50\n          },\n          timeout: 8000\n        });\n      }, {\n        operation: 'newsapi-news',\n        retries: 1\n      });\n      \n      if (response.data && response.data.articles) {\n        return response.data.articles.map(item => ({\n          title: item.title,\n          content: item.description,\n          source: item.source.name,\n          author: item.author || 'Unknown',\n          published_at: item.publishedAt,\n          url: item.url,\n          category: this.categorizeNews(item.title + ' ' + item.description),\n          symbol: this.extractSymbol(item.title + ' ' + item.description),\n          keywords: this.extractKeywords(item.title + ' ' + item.description),\n          summary: item.description,\n          source_type: 'newsapi'\n        }));\n      }\n      \n      return [];\n    } catch (error) {\n      console.error('Error fetching from NewsAPI:', error.message);\n      return [];\n    }\n  }\n\n  getMockNewsData() {\n    const mockNews = [\n      {\n        title: 'Apple Reports Strong Q4 Earnings, Revenue Beats Expectations',\n        content: 'Apple Inc. reported fourth-quarter earnings that exceeded analyst expectations, driven by strong iPhone sales and services revenue growth.',\n        source: 'Reuters',\n        author: 'Financial Reporter',\n        published_at: new Date(Date.now() - 3600000).toISOString(),\n        url: 'https://example.com/apple-earnings',\n        category: 'earnings',\n        symbol: 'AAPL',\n        keywords: ['Apple', 'earnings', 'iPhone', 'revenue', 'Q4'],\n        summary: 'Apple beats Q4 earnings expectations with strong iPhone sales',\n        source_type: 'mock'\n      },\n      {\n        title: 'Federal Reserve Signals Potential Rate Cut in 2024',\n        content: 'The Federal Reserve indicated it may consider lowering interest rates in 2024 if inflation continues to moderate.',\n        source: 'Bloomberg',\n        author: 'Economics Team',\n        published_at: new Date(Date.now() - 7200000).toISOString(),\n        url: 'https://example.com/fed-rates',\n        category: 'economic',\n        symbol: null,\n        keywords: ['Federal Reserve', 'interest rates', 'inflation', '2024'],\n        summary: 'Fed signals potential rate cuts as inflation moderates',\n        source_type: 'mock'\n      },\n      {\n        title: 'Tesla Stock Surges on Strong China Sales Data',\n        content: 'Tesla shares jumped 5% in pre-market trading after reporting stronger-than-expected vehicle deliveries in China.',\n        source: 'MarketWatch',\n        author: 'Auto Industry Reporter',\n        published_at: new Date(Date.now() - 10800000).toISOString(),\n        url: 'https://example.com/tesla-china',\n        category: 'earnings',\n        symbol: 'TSLA',\n        keywords: ['Tesla', 'China', 'deliveries', 'stock'],\n        summary: 'Tesla stock rises on strong China delivery numbers',\n        source_type: 'mock'\n      },\n      {\n        title: 'Microsoft Announces AI Partnership with OpenAI',\n        content: 'Microsoft announced a deeper partnership with OpenAI to integrate advanced AI capabilities across its product suite.',\n        source: 'Wall Street Journal',\n        author: 'Technology Reporter',\n        published_at: new Date(Date.now() - 14400000).toISOString(),\n        url: 'https://example.com/microsoft-ai',\n        category: 'technology',\n        symbol: 'MSFT',\n        keywords: ['Microsoft', 'AI', 'OpenAI', 'partnership'],\n        summary: 'Microsoft deepens AI partnership with OpenAI',\n        source_type: 'mock'\n      },\n      {\n        title: 'Market Volatility Expected as Earnings Season Begins',\n        content: 'Wall Street analysts predict increased market volatility as major companies begin reporting quarterly earnings.',\n        source: 'CNBC',\n        author: 'Market Analyst',\n        published_at: new Date(Date.now() - 18000000).toISOString(),\n        url: 'https://example.com/earnings-season',\n        category: 'market',\n        symbol: null,\n        keywords: ['market', 'volatility', 'earnings', 'season'],\n        summary: 'Analysts expect volatility during earnings season',\n        source_type: 'mock'\n      }\n    ];\n    \n    return mockNews;\n  }\n\n  categorizeNews(text) {\n    const lowerText = text.toLowerCase();\n    \n    for (const [category, keywords] of Object.entries(this.categories)) {\n      if (keywords.some(keyword => lowerText.includes(keyword))) {\n        return category;\n      }\n    }\n    \n    return 'general';\n  }\n\n  extractSymbol(text) {\n    // Look for stock symbols in text (3-5 uppercase letters)\n    const symbolRegex = /\\b[A-Z]{3,5}\\b/g;\n    const matches = text.match(symbolRegex);\n    \n    if (matches) {\n      // Filter out common words that might match the pattern\n      const commonWords = ['THE', 'AND', 'FOR', 'ARE', 'BUT', 'NOT', 'YOU', 'ALL', 'CAN', 'HER', 'WAS', 'ONE', 'OUR', 'OUT', 'DAY', 'GET', 'HAS', 'HIM', 'HIS', 'HOW', 'ITS', 'NEW', 'NOW', 'OLD', 'SEE', 'TWO', 'WHO', 'BOY', 'DID', 'HAS', 'LET', 'PUT', 'SAY', 'SHE', 'TOO', 'USE'];\n      const filteredSymbols = matches.filter(symbol => !commonWords.includes(symbol));\n      \n      if (filteredSymbols.length > 0) {\n        return filteredSymbols[0]; // Return first potential symbol\n      }\n    }\n    \n    return null;\n  }\n\n  extractKeywords(text) {\n    // Simple keyword extraction\n    const words = text.toLowerCase()\n      .replace(/[^\\w\\s]/g, '')\n      .split(/\\s+/)\n      .filter(word => word.length > 3);\n    \n    // Remove common stop words\n    const stopWords = ['this', 'that', 'with', 'have', 'will', 'been', 'from', 'they', 'know', 'want', 'been', 'good', 'much', 'some', 'time', 'very', 'when', 'come', 'here', 'just', 'like', 'long', 'make', 'many', 'over', 'such', 'take', 'than', 'them', 'well', 'were'];\n    \n    const filteredWords = words.filter(word => !stopWords.includes(word));\n    \n    // Get word frequency\n    const wordFreq = {};\n    filteredWords.forEach(word => {\n      wordFreq[word] = (wordFreq[word] || 0) + 1;\n    });\n    \n    // Sort by frequency and return top keywords\n    return Object.entries(wordFreq)\n      .sort((a, b) => b[1] - a[1])\n      .slice(0, 10)\n      .map(([word]) => word);\n  }\n\n  calculateReliabilityScore(sourceName) {\n    const source = this.sources[sourceName];\n    if (source) {\n      return source.reliability;\n    }\n    \n    // Default reliability for unknown sources\n    return 0.5;\n  }\n\n  calculateImpactScore(article) {\n    let score = 0.5; // Base score\n    \n    // Source reliability\n    score += this.calculateReliabilityScore(article.source) * 0.3;\n    \n    // Category impact\n    const categoryWeights = {\n      'earnings': 0.9,\n      'merger': 0.8,\n      'regulatory': 0.7,\n      'analyst': 0.6,\n      'economic': 0.8,\n      'technology': 0.6,\n      'healthcare': 0.7,\n      'energy': 0.6,\n      'finance': 0.7,\n      'retail': 0.5\n    };\n    \n    score += (categoryWeights[article.category] || 0.5) * 0.3;\n    \n    // Symbol mention\n    if (article.symbol) {\n      score += 0.2;\n    }\n    \n    // Title keywords\n    const impactKeywords = ['earnings', 'merger', 'acquisition', 'bankruptcy', 'lawsuit', 'fda', 'approval'];\n    const titleLower = article.title.toLowerCase();\n    const keywordCount = impactKeywords.filter(keyword => titleLower.includes(keyword)).length;\n    score += Math.min(keywordCount * 0.1, 0.2);\n    \n    return Math.min(score, 1.0);\n  }\n\n  calculateRelevanceScore(article, userSymbols = []) {\n    let score = 0.5; // Base score\n    \n    // User symbol relevance\n    if (article.symbol && userSymbols.includes(article.symbol)) {\n      score += 0.3;\n    }\n    \n    // Category relevance\n    const categoryRelevance = {\n      'earnings': 0.9,\n      'analyst': 0.8,\n      'merger': 0.7,\n      'regulatory': 0.6,\n      'economic': 0.7,\n      'technology': 0.6,\n      'healthcare': 0.6,\n      'energy': 0.5,\n      'finance': 0.6,\n      'retail': 0.5\n    };\n    \n    score += (categoryRelevance[article.category] || 0.5) * 0.2;\n    \n    // Recency bonus\n    const hoursSincePublished = (Date.now() - new Date(article.published_at).getTime()) / (1000 * 60 * 60);\n    if (hoursSincePublished < 24) {\n      score += 0.1 * (1 - hoursSincePublished / 24);\n    }\n    \n    return Math.min(score, 1.0);\n  }\n\n  async processAndStoreNews(newsItems, userSymbols = []) {\n    const processedNews = [];\n    \n    for (const item of newsItems) {\n      try {\n        const processedItem = {\n          title: item.title,\n          content: item.content || '',\n          source: item.source,\n          author: item.author || 'Unknown',\n          published_at: item.published_at,\n          url: item.url,\n          category: item.category,\n          symbol: item.symbol,\n          keywords: item.keywords || [],\n          summary: item.summary || item.content?.substring(0, 200) + '...',\n          impact_score: this.calculateImpactScore(item),\n          relevance_score: this.calculateRelevanceScore(item, userSymbols),\n          source_type: item.source_type || 'unknown'\n        };\n        \n        processedNews.push(processedItem);\n      } catch (error) {\n        console.error('Error processing news item:', error);\n      }\n    }\n    \n    return processedNews;\n  }\n}\n\nmodule.exports = NewsAnalyzer;"],"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","ignoreList":[]}