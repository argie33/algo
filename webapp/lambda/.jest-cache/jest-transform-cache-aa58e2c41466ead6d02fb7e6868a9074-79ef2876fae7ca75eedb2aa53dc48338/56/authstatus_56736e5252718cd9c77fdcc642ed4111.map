{"version":3,"names":["cov_26s7sudbz8","actualCoverage","express","s","require","router","Router","getAuthStatus","generateTestToken","authenticateToken","success","error","get","req","res","f","isDevelopment","b","process","env","NODE_ENV","status","json","message","userId","query","Date","now","email","token","usage","header","curlExample","expiresIn","warning","err","console","authHeader","headers","split","user","id","sub","username","role","groups","authMethod","authenticatedAt","tokenInfo","issuedAt","tokenIssuedAt","expiresAt","tokenExpiresAt","profile","givenName","familyName","emailVerified","phoneNumber","phoneNumberVerified","customAttributes","organization","jobTitle","riskTolerance","investmentExperience","accreditedInvestor","session","clientIp","requestId","baseUrl","protocol","testToken","endpoints","url","method","description","requiresAuth","sampleToken","curlExamples","module","exports"],"sources":["auth-status.js"],"sourcesContent":["/**\n * Authentication Status and Management Routes\n * Provides authentication status, token generation, and debugging\n */\n\nconst express = require('express');\nconst router = express.Router();\nconst { getAuthStatus, generateTestToken, authenticateToken } = require('../middleware/auth');\nconst { success, error } = require('../utils/responseFormatter');\n\n/**\n * GET /api/auth-status/status\n * Get current authentication system status\n */\nrouter.get('/status', getAuthStatus);\n\n/**\n * GET /api/auth-status/generate-dev-token\n * Generate a development token for testing (development mode only)\n */\nrouter.get('/generate-dev-token', async (req, res) => {\n  try {\n    const isDevelopment = process.env.NODE_ENV === 'development' || !process.env.NODE_ENV;\n    \n    if (!isDevelopment) {\n      return res.status(403).json({\n        success: false,\n        error: 'Development token generation not allowed in production',\n        message: 'This endpoint is only available in development mode'\n      });\n    }\n\n    const userId = req.query.userId || 'dev-user-' + Date.now();\n    const email = req.query.email || 'dev@example.com';\n    \n    const token = generateTestToken(userId, email);\n    \n    res.json({\n      success: true,\n      message: 'Development token generated successfully',\n      token: token,\n      usage: {\n        header: `Authorization: Bearer ${token}`,\n        curlExample: `curl -H \"Authorization: Bearer ${token}\" http://localhost:3000/api/health`,\n        userId: userId,\n        email: email,\n        expiresIn: '24 hours'\n      },\n      warning: 'This token is for development use only and should never be used in production'\n    });\n    \n  } catch (err) {\n    console.error('Failed to generate development token:', err);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to generate development token',\n      message: err.message\n    });\n  }\n});\n\n/**\n * GET /api/auth-status/validate-token\n * Validate the current token and return user information\n */\nrouter.get('/validate-token', authenticateToken, async (req, res) => {\n  try {\n    const authHeader = req.headers['authorization'];\n    const token = authHeader && authHeader.split(' ')[1];\n    \n    if (!token) {\n      return res.status(401).json({\n        success: false,\n        error: 'No token provided',\n        message: 'Authorization header with Bearer token is required'\n      });\n    }\n\n    // The token validation will be handled by the auth middleware\n    // If we get here, the token is valid\n    res.json({\n      success: true,\n      message: 'Token is valid',\n      user: req.user ? {\n        id: req.user.sub,\n        email: req.user.email,\n        username: req.user.username,\n        role: req.user.role,\n        groups: req.user.groups,\n        authMethod: req.user.authMethod,\n        isDevelopment: req.user.isDevelopment,\n        authenticatedAt: req.user.authenticatedAt\n      } : null,\n      tokenInfo: {\n        issuedAt: req.user?.tokenIssuedAt,\n        expiresAt: req.user?.tokenExpiresAt,\n        authMethod: req.user?.authMethod\n      }\n    });\n    \n  } catch (err) {\n    console.error('Token validation error:', err);\n    res.status(401).json({\n      success: false,\n      error: 'Token validation failed',\n      message: err.message\n    });\n  }\n});\n\n/**\n * GET /api/auth-status/user-info\n * Get current authenticated user information\n */\nrouter.get('/user-info', authenticateToken, async (req, res) => {\n  try {\n    if (!req.user) {\n      return res.status(401).json({\n        success: false,\n        error: 'Not authenticated',\n        message: 'User is not authenticated'\n      });\n    }\n\n    res.json({\n      success: true,\n      user: {\n        id: req.user.sub,\n        email: req.user.email,\n        username: req.user.username,\n        role: req.user.role,\n        groups: req.user.groups,\n        profile: {\n          givenName: req.user.givenName,\n          familyName: req.user.familyName,\n          emailVerified: req.user.emailVerified,\n          phoneNumber: req.user.phoneNumber,\n          phoneNumberVerified: req.user.phoneNumberVerified\n        },\n        customAttributes: {\n          organization: req.user.organization,\n          jobTitle: req.user.jobTitle,\n          riskTolerance: req.user.riskTolerance,\n          investmentExperience: req.user.investmentExperience,\n          accreditedInvestor: req.user.accreditedInvestor\n        },\n        session: {\n          authenticatedAt: req.user.authenticatedAt,\n          authMethod: req.user.authMethod,\n          isDevelopment: req.user.isDevelopment,\n          clientIp: req.user.clientIp,\n          requestId: req.user.requestId\n        }\n      }\n    });\n    \n  } catch (err) {\n    console.error('User info error:', err);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get user information',\n      message: err.message\n    });\n  }\n});\n\n/**\n * GET /api/auth-status/test-endpoints\n * Test different authentication scenarios\n */\nrouter.get('/test-endpoints', async (req, res) => {\n  try {\n    const isDevelopment = process.env.NODE_ENV === 'development' || !process.env.NODE_ENV;\n    \n    if (!isDevelopment) {\n      return res.status(403).json({\n        success: false,\n        error: 'Test endpoints not available in production'\n      });\n    }\n\n    const baseUrl = req.protocol + '://' + req.get('host');\n    const testToken = generateTestToken('test-user', 'test@example.com');\n    \n    res.json({\n      success: true,\n      message: 'Authentication test endpoints',\n      endpoints: {\n        'auth-status': {\n          url: `${baseUrl}/api/auth-status/status`,\n          method: 'GET',\n          description: 'Get authentication system status',\n          requiresAuth: false\n        },\n        'generate-token': {\n          url: `${baseUrl}/api/auth-status/generate-dev-token`,\n          method: 'GET',\n          description: 'Generate development token',\n          requiresAuth: false\n        },\n        'validate-token': {\n          url: `${baseUrl}/api/auth-status/validate-token`,\n          method: 'GET',\n          description: 'Validate provided token',\n          requiresAuth: true,\n          header: `Authorization: Bearer ${testToken}`\n        },\n        'user-info': {\n          url: `${baseUrl}/api/auth-status/user-info`,\n          method: 'GET',\n          description: 'Get authenticated user information',\n          requiresAuth: true,\n          header: `Authorization: Bearer ${testToken}`\n        },\n        'health-check': {\n          url: `${baseUrl}/api/health/api-services`,\n          method: 'GET',\n          description: 'Test API services with authentication',\n          requiresAuth: false\n        }\n      },\n      sampleToken: testToken,\n      curlExamples: {\n        'test-without-auth': `curl \"${baseUrl}/api/auth-status/status\"`,\n        'test-with-auth': `curl -H \"Authorization: Bearer ${testToken}\" \"${baseUrl}/api/auth-status/user-info\"`,\n        'test-api-services': `curl -H \"Authorization: Bearer ${testToken}\" \"${baseUrl}/api/health/api-services\"`\n      }\n    });\n    \n  } catch (err) {\n    console.error('Test endpoints error:', err);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to generate test endpoints',\n      message: err.message\n    });\n  }\n});\n\nmodule.exports = router;"],"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","ignoreList":[]}