88479a0fb6ed8b33f2c5e2b8287596d1
/* istanbul ignore next */
function cov_1tv38rcg0k() {
  var path = "/home/stocks/algo/webapp/lambda/routes/signals.js";
  var hash = "30c9446804502283f28da091cdb95ffe252df15a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/stocks/algo/webapp/lambda/routes/signals.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 16
        },
        end: {
          line: 1,
          column: 34
        }
      },
      "1": {
        start: {
          line: 2,
          column: 42
        },
        end: {
          line: 2,
          column: 70
        }
      },
      "2": {
        start: {
          line: 3,
          column: 30
        },
        end: {
          line: 3,
          column: 59
        }
      },
      "3": {
        start: {
          line: 4,
          column: 51
        },
        end: {
          line: 4,
          column: 86
        }
      },
      "4": {
        start: {
          line: 5,
          column: 24
        },
        end: {
          line: 5,
          column: 59
        }
      },
      "5": {
        start: {
          line: 6,
          column: 32
        },
        end: {
          line: 6,
          column: 75
        }
      },
      "6": {
        start: {
          line: 7,
          column: 31
        },
        end: {
          line: 7,
          column: 73
        }
      },
      "7": {
        start: {
          line: 8,
          column: 22
        },
        end: {
          line: 8,
          column: 55
        }
      },
      "8": {
        start: {
          line: 9,
          column: 22
        },
        end: {
          line: 9,
          column: 61
        }
      },
      "9": {
        start: {
          line: 10,
          column: 15
        },
        end: {
          line: 10,
          column: 41
        }
      },
      "10": {
        start: {
          line: 11,
          column: 30
        },
        end: {
          line: 11,
          column: 67
        }
      },
      "11": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "12": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 30
        }
      },
      "13": {
        start: {
          line: 19,
          column: 24
        },
        end: {
          line: 19,
          column: 45
        }
      },
      "14": {
        start: {
          line: 20,
          column: 32
        },
        end: {
          line: 20,
          column: 61
        }
      },
      "15": {
        start: {
          line: 21,
          column: 24
        },
        end: {
          line: 21,
          column: 52
        }
      },
      "16": {
        start: {
          line: 24,
          column: 32
        },
        end: {
          line: 52,
          column: 1
        }
      },
      "17": {
        start: {
          line: 29,
          column: 28
        },
        end: {
          line: 29,
          column: 83
        }
      },
      "18": {
        start: {
          line: 30,
          column: 28
        },
        end: {
          line: 30,
          column: 55
        }
      },
      "19": {
        start: {
          line: 35,
          column: 28
        },
        end: {
          line: 35,
          column: 83
        }
      },
      "20": {
        start: {
          line: 36,
          column: 28
        },
        end: {
          line: 36,
          column: 98
        }
      },
      "21": {
        start: {
          line: 41,
          column: 28
        },
        end: {
          line: 41,
          column: 83
        }
      },
      "22": {
        start: {
          line: 42,
          column: 28
        },
        end: {
          line: 42,
          column: 107
        }
      },
      "23": {
        start: {
          line: 47,
          column: 28
        },
        end: {
          line: 47,
          column: 95
        }
      },
      "24": {
        start: {
          line: 48,
          column: 28
        },
        end: {
          line: 48,
          column: 55
        }
      },
      "25": {
        start: {
          line: 55,
          column: 0
        },
        end: {
          line: 152,
          column: 3
        }
      },
      "26": {
        start: {
          line: 56,
          column: 20
        },
        end: {
          line: 56,
          column: 53
        }
      },
      "27": {
        start: {
          line: 57,
          column: 20
        },
        end: {
          line: 57,
          column: 30
        }
      },
      "28": {
        start: {
          line: 59,
          column: 2
        },
        end: {
          line: 151,
          column: 3
        }
      },
      "29": {
        start: {
          line: 60,
          column: 19
        },
        end: {
          line: 60,
          column: 31
        }
      },
      "30": {
        start: {
          line: 61,
          column: 75
        },
        end: {
          line: 61,
          column: 88
        }
      },
      "31": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 69,
          column: 7
        }
      },
      "32": {
        start: {
          line: 72,
          column: 24
        },
        end: {
          line: 72,
          column: 80
        }
      },
      "33": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 76,
          column: 5
        }
      },
      "34": {
        start: {
          line: 74,
          column: 23
        },
        end: {
          line: 74,
          column: 99
        }
      },
      "35": {
        start: {
          line: 75,
          column: 6
        },
        end: {
          line: 75,
          column: 44
        }
      },
      "36": {
        start: {
          line: 79,
          column: 26
        },
        end: {
          line: 79,
          column: 109
        }
      },
      "37": {
        start: {
          line: 82,
          column: 22
        },
        end: {
          line: 82,
          column: 88
        }
      },
      "38": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 87,
          column: 5
        }
      },
      "39": {
        start: {
          line: 85,
          column: 23
        },
        end: {
          line: 85,
          column: 98
        }
      },
      "40": {
        start: {
          line: 86,
          column: 6
        },
        end: {
          line: 86,
          column: 44
        }
      },
      "41": {
        start: {
          line: 90,
          column: 27
        },
        end: {
          line: 93,
          column: 6
        }
      },
      "42": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 98,
          column: 5
        }
      },
      "43": {
        start: {
          line: 96,
          column: 23
        },
        end: {
          line: 96,
          column: 79
        }
      },
      "44": {
        start: {
          line: 97,
          column: 6
        },
        end: {
          line: 97,
          column: 44
        }
      },
      "45": {
        start: {
          line: 101,
          column: 25
        },
        end: {
          line: 123,
          column: 5
        }
      },
      "46": {
        start: {
          line: 125,
          column: 21
        },
        end: {
          line: 125,
          column: 102
        }
      },
      "47": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 134,
          column: 7
        }
      },
      "48": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 136,
          column: 23
        }
      },
      "49": {
        start: {
          line: 139,
          column: 4
        },
        end: {
          line: 143,
          column: 7
        }
      },
      "50": {
        start: {
          line: 145,
          column: 21
        },
        end: {
          line: 149,
          column: 5
        }
      },
      "51": {
        start: {
          line: 150,
          column: 4
        },
        end: {
          line: 150,
          column: 35
        }
      },
      "52": {
        start: {
          line: 155,
          column: 0
        },
        end: {
          line: 203,
          column: 3
        }
      },
      "53": {
        start: {
          line: 156,
          column: 20
        },
        end: {
          line: 156,
          column: 53
        }
      },
      "54": {
        start: {
          line: 158,
          column: 2
        },
        end: {
          line: 202,
          column: 3
        }
      },
      "55": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 159,
          column: 69
        }
      },
      "56": {
        start: {
          line: 161,
          column: 24
        },
        end: {
          line: 185,
          column: 5
        }
      },
      "57": {
        start: {
          line: 187,
          column: 21
        },
        end: {
          line: 187,
          column: 98
        }
      },
      "58": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 188,
          column: 23
        }
      },
      "59": {
        start: {
          line: 191,
          column: 4
        },
        end: {
          line: 194,
          column: 7
        }
      },
      "60": {
        start: {
          line: 196,
          column: 21
        },
        end: {
          line: 200,
          column: 5
        }
      },
      "61": {
        start: {
          line: 201,
          column: 4
        },
        end: {
          line: 201,
          column: 35
        }
      },
      "62": {
        start: {
          line: 206,
          column: 0
        },
        end: {
          line: 228,
          column: 3
        }
      },
      "63": {
        start: {
          line: 207,
          column: 2
        },
        end: {
          line: 227,
          column: 3
        }
      },
      "64": {
        start: {
          line: 208,
          column: 4
        },
        end: {
          line: 220,
          column: 7
        }
      },
      "65": {
        start: {
          line: 222,
          column: 4
        },
        end: {
          line: 222,
          column: 60
        }
      },
      "66": {
        start: {
          line: 223,
          column: 4
        },
        end: {
          line: 226,
          column: 7
        }
      },
      "67": {
        start: {
          line: 231,
          column: 0
        },
        end: {
          line: 335,
          column: 3
        }
      },
      "68": {
        start: {
          line: 232,
          column: 2
        },
        end: {
          line: 334,
          column: 3
        }
      },
      "69": {
        start: {
          line: 233,
          column: 22
        },
        end: {
          line: 233,
          column: 52
        }
      },
      "70": {
        start: {
          line: 234,
          column: 18
        },
        end: {
          line: 234,
          column: 49
        }
      },
      "71": {
        start: {
          line: 235,
          column: 17
        },
        end: {
          line: 235,
          column: 46
        }
      },
      "72": {
        start: {
          line: 236,
          column: 19
        },
        end: {
          line: 236,
          column: 37
        }
      },
      "73": {
        start: {
          line: 239,
          column: 28
        },
        end: {
          line: 243,
          column: 5
        }
      },
      "74": {
        start: {
          line: 245,
          column: 4
        },
        end: {
          line: 247,
          column: 5
        }
      },
      "75": {
        start: {
          line: 246,
          column: 6
        },
        end: {
          line: 246,
          column: 101
        }
      },
      "76": {
        start: {
          line: 249,
          column: 22
        },
        end: {
          line: 249,
          column: 48
        }
      },
      "77": {
        start: {
          line: 252,
          column: 27
        },
        end: {
          line: 252,
          column: 49
        }
      },
      "78": {
        start: {
          line: 253,
          column: 27
        },
        end: {
          line: 253,
          column: 57
        }
      },
      "79": {
        start: {
          line: 255,
          column: 4
        },
        end: {
          line: 273,
          column: 5
        }
      },
      "80": {
        start: {
          line: 256,
          column: 26
        },
        end: {
          line: 256,
          column: 83
        }
      },
      "81": {
        start: {
          line: 258,
          column: 6
        },
        end: {
          line: 264,
          column: 7
        }
      },
      "82": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 263,
          column: 11
        }
      },
      "83": {
        start: {
          line: 266,
          column: 6
        },
        end: {
          line: 266,
          column: 82
        }
      },
      "84": {
        start: {
          line: 268,
          column: 6
        },
        end: {
          line: 268,
          column: 75
        }
      },
      "85": {
        start: {
          line: 269,
          column: 6
        },
        end: {
          line: 272,
          column: 9
        }
      },
      "86": {
        start: {
          line: 275,
          column: 28
        },
        end: {
          line: 295,
          column: 5
        }
      },
      "87": {
        start: {
          line: 297,
          column: 23
        },
        end: {
          line: 303,
          column: 5
        }
      },
      "88": {
        start: {
          line: 305,
          column: 41
        },
        end: {
          line: 308,
          column: 6
        }
      },
      "89": {
        start: {
          line: 310,
          column: 18
        },
        end: {
          line: 310,
          column: 53
        }
      },
      "90": {
        start: {
          line: 311,
          column: 23
        },
        end: {
          line: 311,
          column: 47
        }
      },
      "91": {
        start: {
          line: 313,
          column: 4
        },
        end: {
          line: 315,
          column: 5
        }
      },
      "92": {
        start: {
          line: 314,
          column: 6
        },
        end: {
          line: 314,
          column: 77
        }
      },
      "93": {
        start: {
          line: 317,
          column: 4
        },
        end: {
          line: 329,
          column: 7
        }
      },
      "94": {
        start: {
          line: 332,
          column: 4
        },
        end: {
          line: 332,
          column: 56
        }
      },
      "95": {
        start: {
          line: 333,
          column: 4
        },
        end: {
          line: 333,
          column: 85
        }
      },
      "96": {
        start: {
          line: 338,
          column: 0
        },
        end: {
          line: 418,
          column: 3
        }
      },
      "97": {
        start: {
          line: 339,
          column: 2
        },
        end: {
          line: 417,
          column: 3
        }
      },
      "98": {
        start: {
          line: 340,
          column: 22
        },
        end: {
          line: 340,
          column: 52
        }
      },
      "99": {
        start: {
          line: 341,
          column: 18
        },
        end: {
          line: 341,
          column: 49
        }
      },
      "100": {
        start: {
          line: 342,
          column: 17
        },
        end: {
          line: 342,
          column: 46
        }
      },
      "101": {
        start: {
          line: 343,
          column: 19
        },
        end: {
          line: 343,
          column: 37
        }
      },
      "102": {
        start: {
          line: 346,
          column: 28
        },
        end: {
          line: 350,
          column: 5
        }
      },
      "103": {
        start: {
          line: 352,
          column: 4
        },
        end: {
          line: 354,
          column: 5
        }
      },
      "104": {
        start: {
          line: 353,
          column: 6
        },
        end: {
          line: 353,
          column: 101
        }
      },
      "105": {
        start: {
          line: 356,
          column: 22
        },
        end: {
          line: 356,
          column: 48
        }
      },
      "106": {
        start: {
          line: 358,
          column: 29
        },
        end: {
          line: 378,
          column: 5
        }
      },
      "107": {
        start: {
          line: 380,
          column: 23
        },
        end: {
          line: 386,
          column: 5
        }
      },
      "108": {
        start: {
          line: 388,
          column: 41
        },
        end: {
          line: 391,
          column: 6
        }
      },
      "109": {
        start: {
          line: 393,
          column: 18
        },
        end: {
          line: 393,
          column: 53
        }
      },
      "110": {
        start: {
          line: 394,
          column: 23
        },
        end: {
          line: 394,
          column: 47
        }
      },
      "111": {
        start: {
          line: 396,
          column: 4
        },
        end: {
          line: 398,
          column: 5
        }
      },
      "112": {
        start: {
          line: 397,
          column: 6
        },
        end: {
          line: 397,
          column: 77
        }
      },
      "113": {
        start: {
          line: 400,
          column: 4
        },
        end: {
          line: 412,
          column: 7
        }
      },
      "114": {
        start: {
          line: 415,
          column: 4
        },
        end: {
          line: 415,
          column: 57
        }
      },
      "115": {
        start: {
          line: 416,
          column: 4
        },
        end: {
          line: 416,
          column: 85
        }
      },
      "116": {
        start: {
          line: 421,
          column: 0
        },
        end: {
          line: 504,
          column: 3
        }
      },
      "117": {
        start: {
          line: 422,
          column: 20
        },
        end: {
          line: 422,
          column: 53
        }
      },
      "118": {
        start: {
          line: 423,
          column: 20
        },
        end: {
          line: 423,
          column: 30
        }
      },
      "119": {
        start: {
          line: 425,
          column: 2
        },
        end: {
          line: 503,
          column: 3
        }
      },
      "120": {
        start: {
          line: 426,
          column: 19
        },
        end: {
          line: 426,
          column: 31
        }
      },
      "121": {
        start: {
          line: 427,
          column: 57
        },
        end: {
          line: 427,
          column: 70
        }
      },
      "122": {
        start: {
          line: 429,
          column: 4
        },
        end: {
          line: 434,
          column: 7
        }
      },
      "123": {
        start: {
          line: 437,
          column: 29
        },
        end: {
          line: 437,
          column: 111
        }
      },
      "124": {
        start: {
          line: 439,
          column: 4
        },
        end: {
          line: 442,
          column: 5
        }
      },
      "125": {
        start: {
          line: 440,
          column: 23
        },
        end: {
          line: 440,
          column: 86
        }
      },
      "126": {
        start: {
          line: 441,
          column: 6
        },
        end: {
          line: 441,
          column: 44
        }
      },
      "127": {
        start: {
          line: 445,
          column: 25
        },
        end: {
          line: 475,
          column: 5
        }
      },
      "128": {
        start: {
          line: 455,
          column: 61
        },
        end: {
          line: 455,
          column: 83
        }
      },
      "129": {
        start: {
          line: 456,
          column: 60
        },
        end: {
          line: 456,
          column: 81
        }
      },
      "130": {
        start: {
          line: 457,
          column: 58
        },
        end: {
          line: 457,
          column: 77
        }
      },
      "131": {
        start: {
          line: 458,
          column: 62
        },
        end: {
          line: 458,
          column: 85
        }
      },
      "132": {
        start: {
          line: 459,
          column: 57
        },
        end: {
          line: 459,
          column: 75
        }
      },
      "133": {
        start: {
          line: 477,
          column: 21
        },
        end: {
          line: 477,
          column: 111
        }
      },
      "134": {
        start: {
          line: 479,
          column: 4
        },
        end: {
          line: 486,
          column: 7
        }
      },
      "135": {
        start: {
          line: 488,
          column: 4
        },
        end: {
          line: 488,
          column: 23
        }
      },
      "136": {
        start: {
          line: 491,
          column: 4
        },
        end: {
          line: 495,
          column: 7
        }
      },
      "137": {
        start: {
          line: 497,
          column: 21
        },
        end: {
          line: 501,
          column: 5
        }
      },
      "138": {
        start: {
          line: 502,
          column: 4
        },
        end: {
          line: 502,
          column: 35
        }
      },
      "139": {
        start: {
          line: 507,
          column: 0
        },
        end: {
          line: 653,
          column: 3
        }
      },
      "140": {
        start: {
          line: 508,
          column: 20
        },
        end: {
          line: 508,
          column: 53
        }
      },
      "141": {
        start: {
          line: 509,
          column: 20
        },
        end: {
          line: 509,
          column: 30
        }
      },
      "142": {
        start: {
          line: 511,
          column: 2
        },
        end: {
          line: 652,
          column: 3
        }
      },
      "143": {
        start: {
          line: 512,
          column: 19
        },
        end: {
          line: 512,
          column: 31
        }
      },
      "144": {
        start: {
          line: 513,
          column: 57
        },
        end: {
          line: 513,
          column: 70
        }
      },
      "145": {
        start: {
          line: 515,
          column: 4
        },
        end: {
          line: 520,
          column: 7
        }
      },
      "146": {
        start: {
          line: 523,
          column: 23
        },
        end: {
          line: 523,
          column: 91
        }
      },
      "147": {
        start: {
          line: 525,
          column: 4
        },
        end: {
          line: 528,
          column: 5
        }
      },
      "148": {
        start: {
          line: 526,
          column: 23
        },
        end: {
          line: 526,
          column: 111
        }
      },
      "149": {
        start: {
          line: 527,
          column: 6
        },
        end: {
          line: 527,
          column: 44
        }
      },
      "150": {
        start: {
          line: 531,
          column: 25
        },
        end: {
          line: 622,
          column: 5
        }
      },
      "151": {
        start: {
          line: 624,
          column: 21
        },
        end: {
          line: 624,
          column: 114
        }
      },
      "152": {
        start: {
          line: 626,
          column: 4
        },
        end: {
          line: 635,
          column: 7
        }
      },
      "153": {
        start: {
          line: 637,
          column: 4
        },
        end: {
          line: 637,
          column: 23
        }
      },
      "154": {
        start: {
          line: 640,
          column: 4
        },
        end: {
          line: 644,
          column: 7
        }
      },
      "155": {
        start: {
          line: 646,
          column: 21
        },
        end: {
          line: 650,
          column: 5
        }
      },
      "156": {
        start: {
          line: 651,
          column: 4
        },
        end: {
          line: 651,
          column: 35
        }
      },
      "157": {
        start: {
          line: 656,
          column: 0
        },
        end: {
          line: 724,
          column: 3
        }
      },
      "158": {
        start: {
          line: 657,
          column: 20
        },
        end: {
          line: 657,
          column: 53
        }
      },
      "159": {
        start: {
          line: 659,
          column: 2
        },
        end: {
          line: 723,
          column: 3
        }
      },
      "160": {
        start: {
          line: 660,
          column: 4
        },
        end: {
          line: 660,
          column: 78
        }
      },
      "161": {
        start: {
          line: 663,
          column: 28
        },
        end: {
          line: 706,
          column: 5
        }
      },
      "162": {
        start: {
          line: 708,
          column: 21
        },
        end: {
          line: 708,
          column: 120
        }
      },
      "163": {
        start: {
          line: 709,
          column: 4
        },
        end: {
          line: 709,
          column: 23
        }
      },
      "164": {
        start: {
          line: 712,
          column: 4
        },
        end: {
          line: 715,
          column: 7
        }
      },
      "165": {
        start: {
          line: 717,
          column: 21
        },
        end: {
          line: 721,
          column: 5
        }
      },
      "166": {
        start: {
          line: 722,
          column: 4
        },
        end: {
          line: 722,
          column: 35
        }
      },
      "167": {
        start: {
          line: 727,
          column: 0
        },
        end: {
          line: 824,
          column: 3
        }
      },
      "168": {
        start: {
          line: 728,
          column: 20
        },
        end: {
          line: 728,
          column: 53
        }
      },
      "169": {
        start: {
          line: 729,
          column: 20
        },
        end: {
          line: 729,
          column: 30
        }
      },
      "170": {
        start: {
          line: 731,
          column: 2
        },
        end: {
          line: 823,
          column: 3
        }
      },
      "171": {
        start: {
          line: 732,
          column: 19
        },
        end: {
          line: 732,
          column: 31
        }
      },
      "172": {
        start: {
          line: 733,
          column: 58
        },
        end: {
          line: 733,
          column: 66
        }
      },
      "173": {
        start: {
          line: 735,
          column: 4
        },
        end: {
          line: 737,
          column: 5
        }
      },
      "174": {
        start: {
          line: 736,
          column: 6
        },
        end: {
          line: 736,
          column: 99
        }
      },
      "175": {
        start: {
          line: 739,
          column: 4
        },
        end: {
          line: 741,
          column: 5
        }
      },
      "176": {
        start: {
          line: 740,
          column: 6
        },
        end: {
          line: 740,
          column: 106
        }
      },
      "177": {
        start: {
          line: 743,
          column: 4
        },
        end: {
          line: 748,
          column: 7
        }
      },
      "178": {
        start: {
          line: 751,
          column: 29
        },
        end: {
          line: 753,
          column: 5
        }
      },
      "179": {
        start: {
          line: 752,
          column: 6
        },
        end: {
          line: 752,
          column: 68
        }
      },
      "180": {
        start: {
          line: 755,
          column: 20
        },
        end: {
          line: 755,
          column: 55
        }
      },
      "181": {
        start: {
          line: 758,
          column: 25
        },
        end: {
          line: 795,
          column: 5
        }
      },
      "182": {
        start: {
          line: 761,
          column: 48
        },
        end: {
          line: 761,
          column: 57
        }
      },
      "183": {
        start: {
          line: 762,
          column: 44
        },
        end: {
          line: 762,
          column: 54
        }
      },
      "184": {
        start: {
          line: 763,
          column: 46
        },
        end: {
          line: 763,
          column: 94
        }
      },
      "185": {
        start: {
          line: 764,
          column: 40
        },
        end: {
          line: 764,
          column: 81
        }
      },
      "186": {
        start: {
          line: 765,
          column: 41
        },
        end: {
          line: 765,
          column: 83
        }
      },
      "187": {
        start: {
          line: 766,
          column: 41
        },
        end: {
          line: 766,
          column: 83
        }
      },
      "188": {
        start: {
          line: 767,
          column: 47
        },
        end: {
          line: 767,
          column: 96
        }
      },
      "189": {
        start: {
          line: 768,
          column: 43
        },
        end: {
          line: 768,
          column: 52
        }
      },
      "190": {
        start: {
          line: 768,
          column: 73
        },
        end: {
          line: 768,
          column: 98
        }
      },
      "191": {
        start: {
          line: 768,
          column: 125
        },
        end: {
          line: 768,
          column: 134
        }
      },
      "192": {
        start: {
          line: 769,
          column: 41
        },
        end: {
          line: 769,
          column: 50
        }
      },
      "193": {
        start: {
          line: 769,
          column: 71
        },
        end: {
          line: 769,
          column: 94
        }
      },
      "194": {
        start: {
          line: 769,
          column: 121
        },
        end: {
          line: 769,
          column: 130
        }
      },
      "195": {
        start: {
          line: 771,
          column: 47
        },
        end: {
          line: 783,
          column: 7
        }
      },
      "196": {
        start: {
          line: 785,
          column: 21
        },
        end: {
          line: 785,
          column: 30
        }
      },
      "197": {
        start: {
          line: 786,
          column: 33
        },
        end: {
          line: 791,
          column: 9
        }
      },
      "198": {
        start: {
          line: 792,
          column: 24
        },
        end: {
          line: 792,
          column: 109
        }
      },
      "199": {
        start: {
          line: 797,
          column: 21
        },
        end: {
          line: 797,
          column: 103
        }
      },
      "200": {
        start: {
          line: 799,
          column: 4
        },
        end: {
          line: 806,
          column: 7
        }
      },
      "201": {
        start: {
          line: 808,
          column: 4
        },
        end: {
          line: 808,
          column: 23
        }
      },
      "202": {
        start: {
          line: 811,
          column: 4
        },
        end: {
          line: 815,
          column: 7
        }
      },
      "203": {
        start: {
          line: 817,
          column: 21
        },
        end: {
          line: 821,
          column: 5
        }
      },
      "204": {
        start: {
          line: 822,
          column: 4
        },
        end: {
          line: 822,
          column: 35
        }
      },
      "205": {
        start: {
          line: 826,
          column: 0
        },
        end: {
          line: 826,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 29,
            column: 17
          },
          end: {
            line: 29,
            column: 18
          }
        },
        loc: {
          start: {
            line: 29,
            column: 28
          },
          end: {
            line: 29,
            column: 83
          }
        },
        line: 29
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 30,
            column: 17
          },
          end: {
            line: 30,
            column: 18
          }
        },
        loc: {
          start: {
            line: 30,
            column: 28
          },
          end: {
            line: 30,
            column: 55
          }
        },
        line: 30
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 35,
            column: 17
          },
          end: {
            line: 35,
            column: 18
          }
        },
        loc: {
          start: {
            line: 35,
            column: 28
          },
          end: {
            line: 35,
            column: 83
          }
        },
        line: 35
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 36,
            column: 17
          },
          end: {
            line: 36,
            column: 18
          }
        },
        loc: {
          start: {
            line: 36,
            column: 28
          },
          end: {
            line: 36,
            column: 98
          }
        },
        line: 36
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 41,
            column: 17
          },
          end: {
            line: 41,
            column: 18
          }
        },
        loc: {
          start: {
            line: 41,
            column: 28
          },
          end: {
            line: 41,
            column: 83
          }
        },
        line: 41
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 42,
            column: 17
          },
          end: {
            line: 42,
            column: 18
          }
        },
        loc: {
          start: {
            line: 42,
            column: 28
          },
          end: {
            line: 42,
            column: 107
          }
        },
        line: 42
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 47,
            column: 17
          },
          end: {
            line: 47,
            column: 18
          }
        },
        loc: {
          start: {
            line: 47,
            column: 28
          },
          end: {
            line: 47,
            column: 95
          }
        },
        line: 47
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 48,
            column: 17
          },
          end: {
            line: 48,
            column: 18
          }
        },
        loc: {
          start: {
            line: 48,
            column: 28
          },
          end: {
            line: 48,
            column: 55
          }
        },
        line: 48
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 55,
            column: 85
          },
          end: {
            line: 55,
            column: 86
          }
        },
        loc: {
          start: {
            line: 55,
            column: 105
          },
          end: {
            line: 152,
            column: 1
          }
        },
        line: 55
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 155,
            column: 21
          },
          end: {
            line: 155,
            column: 22
          }
        },
        loc: {
          start: {
            line: 155,
            column: 41
          },
          end: {
            line: 203,
            column: 1
          }
        },
        line: 155
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 206,
            column: 23
          },
          end: {
            line: 206,
            column: 24
          }
        },
        loc: {
          start: {
            line: 206,
            column: 43
          },
          end: {
            line: 228,
            column: 1
          }
        },
        line: 206
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 231,
            column: 19
          },
          end: {
            line: 231,
            column: 20
          }
        },
        loc: {
          start: {
            line: 231,
            column: 39
          },
          end: {
            line: 335,
            column: 1
          }
        },
        line: 231
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 338,
            column: 20
          },
          end: {
            line: 338,
            column: 21
          }
        },
        loc: {
          start: {
            line: 338,
            column: 40
          },
          end: {
            line: 418,
            column: 1
          }
        },
        line: 338
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 421,
            column: 94
          },
          end: {
            line: 421,
            column: 95
          }
        },
        loc: {
          start: {
            line: 421,
            column: 114
          },
          end: {
            line: 504,
            column: 1
          }
        },
        line: 421
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 455,
            column: 56
          },
          end: {
            line: 455,
            column: 57
          }
        },
        loc: {
          start: {
            line: 455,
            column: 61
          },
          end: {
            line: 455,
            column: 83
          }
        },
        line: 455
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 456,
            column: 55
          },
          end: {
            line: 456,
            column: 56
          }
        },
        loc: {
          start: {
            line: 456,
            column: 60
          },
          end: {
            line: 456,
            column: 81
          }
        },
        line: 456
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 457,
            column: 53
          },
          end: {
            line: 457,
            column: 54
          }
        },
        loc: {
          start: {
            line: 457,
            column: 58
          },
          end: {
            line: 457,
            column: 77
          }
        },
        line: 457
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 458,
            column: 57
          },
          end: {
            line: 458,
            column: 58
          }
        },
        loc: {
          start: {
            line: 458,
            column: 62
          },
          end: {
            line: 458,
            column: 85
          }
        },
        line: 458
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 459,
            column: 52
          },
          end: {
            line: 459,
            column: 53
          }
        },
        loc: {
          start: {
            line: 459,
            column: 57
          },
          end: {
            line: 459,
            column: 75
          }
        },
        line: 459
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 507,
            column: 88
          },
          end: {
            line: 507,
            column: 89
          }
        },
        loc: {
          start: {
            line: 507,
            column: 108
          },
          end: {
            line: 653,
            column: 1
          }
        },
        line: 507
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 656,
            column: 30
          },
          end: {
            line: 656,
            column: 31
          }
        },
        loc: {
          start: {
            line: 656,
            column: 50
          },
          end: {
            line: 724,
            column: 1
          }
        },
        line: 656
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 727,
            column: 32
          },
          end: {
            line: 727,
            column: 33
          }
        },
        loc: {
          start: {
            line: 727,
            column: 52
          },
          end: {
            line: 824,
            column: 1
          }
        },
        line: 727
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 751,
            column: 41
          },
          end: {
            line: 751,
            column: 42
          }
        },
        loc: {
          start: {
            line: 752,
            column: 6
          },
          end: {
            line: 752,
            column: 68
          }
        },
        line: 752
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 761,
            column: 43
          },
          end: {
            line: 761,
            column: 44
          }
        },
        loc: {
          start: {
            line: 761,
            column: 48
          },
          end: {
            line: 761,
            column: 57
          }
        },
        line: 761
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 762,
            column: 39
          },
          end: {
            line: 762,
            column: 40
          }
        },
        loc: {
          start: {
            line: 762,
            column: 44
          },
          end: {
            line: 762,
            column: 54
          }
        },
        line: 762
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 763,
            column: 41
          },
          end: {
            line: 763,
            column: 42
          }
        },
        loc: {
          start: {
            line: 763,
            column: 46
          },
          end: {
            line: 763,
            column: 94
          }
        },
        line: 763
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 764,
            column: 35
          },
          end: {
            line: 764,
            column: 36
          }
        },
        loc: {
          start: {
            line: 764,
            column: 40
          },
          end: {
            line: 764,
            column: 81
          }
        },
        line: 764
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 765,
            column: 36
          },
          end: {
            line: 765,
            column: 37
          }
        },
        loc: {
          start: {
            line: 765,
            column: 41
          },
          end: {
            line: 765,
            column: 83
          }
        },
        line: 765
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 766,
            column: 36
          },
          end: {
            line: 766,
            column: 37
          }
        },
        loc: {
          start: {
            line: 766,
            column: 41
          },
          end: {
            line: 766,
            column: 83
          }
        },
        line: 766
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 767,
            column: 42
          },
          end: {
            line: 767,
            column: 43
          }
        },
        loc: {
          start: {
            line: 767,
            column: 47
          },
          end: {
            line: 767,
            column: 96
          }
        },
        line: 767
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 768,
            column: 38
          },
          end: {
            line: 768,
            column: 39
          }
        },
        loc: {
          start: {
            line: 768,
            column: 43
          },
          end: {
            line: 768,
            column: 52
          }
        },
        line: 768
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 768,
            column: 61
          },
          end: {
            line: 768,
            column: 62
          }
        },
        loc: {
          start: {
            line: 768,
            column: 73
          },
          end: {
            line: 768,
            column: 98
          }
        },
        line: 768
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 768,
            column: 120
          },
          end: {
            line: 768,
            column: 121
          }
        },
        loc: {
          start: {
            line: 768,
            column: 125
          },
          end: {
            line: 768,
            column: 134
          }
        },
        line: 768
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 769,
            column: 36
          },
          end: {
            line: 769,
            column: 37
          }
        },
        loc: {
          start: {
            line: 769,
            column: 41
          },
          end: {
            line: 769,
            column: 50
          }
        },
        line: 769
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 769,
            column: 59
          },
          end: {
            line: 769,
            column: 60
          }
        },
        loc: {
          start: {
            line: 769,
            column: 71
          },
          end: {
            line: 769,
            column: 94
          }
        },
        line: 769
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 769,
            column: 116
          },
          end: {
            line: 769,
            column: 117
          }
        },
        loc: {
          start: {
            line: 769,
            column: 121
          },
          end: {
            line: 769,
            column: 130
          }
        },
        line: 769
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 771,
            column: 27
          },
          end: {
            line: 771,
            column: 28
          }
        },
        loc: {
          start: {
            line: 771,
            column: 47
          },
          end: {
            line: 783,
            column: 7
          }
        },
        line: 771
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 785,
            column: 16
          },
          end: {
            line: 785,
            column: 17
          }
        },
        loc: {
          start: {
            line: 785,
            column: 21
          },
          end: {
            line: 785,
            column: 30
          }
        },
        line: 785
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 786,
            column: 13
          },
          end: {
            line: 786,
            column: 14
          }
        },
        loc: {
          start: {
            line: 786,
            column: 33
          },
          end: {
            line: 791,
            column: 9
          }
        },
        line: 786
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 792,
            column: 14
          },
          end: {
            line: 792,
            column: 15
          }
        },
        loc: {
          start: {
            line: 792,
            column: 24
          },
          end: {
            line: 792,
            column: 109
          }
        },
        line: 792
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 36,
            column: 28
          },
          end: {
            line: 36,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 28
          },
          end: {
            line: 36,
            column: 34
          }
        }, {
          start: {
            line: 36,
            column: 38
          },
          end: {
            line: 36,
            column: 98
          }
        }],
        line: 36
      },
      "1": {
        loc: {
          start: {
            line: 42,
            column: 28
          },
          end: {
            line: 42,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 28
          },
          end: {
            line: 42,
            column: 34
          }
        }, {
          start: {
            line: 42,
            column: 38
          },
          end: {
            line: 42,
            column: 107
          }
        }],
        line: 42
      },
      "2": {
        loc: {
          start: {
            line: 48,
            column: 28
          },
          end: {
            line: 48,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 28
          },
          end: {
            line: 48,
            column: 39
          }
        }, {
          start: {
            line: 48,
            column: 43
          },
          end: {
            line: 48,
            column: 55
          }
        }],
        line: 48
      },
      "3": {
        loc: {
          start: {
            line: 56,
            column: 20
          },
          end: {
            line: 56,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 20
          },
          end: {
            line: 56,
            column: 40
          }
        }, {
          start: {
            line: 56,
            column: 44
          },
          end: {
            line: 56,
            column: 53
          }
        }],
        line: 56
      },
      "4": {
        loc: {
          start: {
            line: 61,
            column: 20
          },
          end: {
            line: 61,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 61,
            column: 32
          },
          end: {
            line: 61,
            column: 36
          }
        }],
        line: 61
      },
      "5": {
        loc: {
          start: {
            line: 61,
            column: 38
          },
          end: {
            line: 61,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 61,
            column: 49
          },
          end: {
            line: 61,
            column: 54
          }
        }],
        line: 61
      },
      "6": {
        loc: {
          start: {
            line: 61,
            column: 56
          },
          end: {
            line: 61,
            column: 70
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 61,
            column: 67
          },
          end: {
            line: 61,
            column: 70
          }
        }],
        line: 61
      },
      "7": {
        loc: {
          start: {
            line: 64,
            column: 14
          },
          end: {
            line: 64,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 64,
            column: 23
          },
          end: {
            line: 64,
            column: 53
          }
        }, {
          start: {
            line: 64,
            column: 56
          },
          end: {
            line: 64,
            column: 65
          }
        }],
        line: 64
      },
      "8": {
        loc: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "9": {
        loc: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "10": {
        loc: {
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 84,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 84,
            column: 18
          }
        }, {
          start: {
            line: 84,
            column: 22
          },
          end: {
            line: 84,
            column: 43
          }
        }],
        line: 84
      },
      "11": {
        loc: {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 98,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 98,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "12": {
        loc: {
          start: {
            line: 156,
            column: 20
          },
          end: {
            line: 156,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 20
          },
          end: {
            line: 156,
            column: 40
          }
        }, {
          start: {
            line: 156,
            column: 44
          },
          end: {
            line: 156,
            column: 53
          }
        }],
        line: 156
      },
      "13": {
        loc: {
          start: {
            line: 233,
            column: 22
          },
          end: {
            line: 233,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 233,
            column: 22
          },
          end: {
            line: 233,
            column: 41
          }
        }, {
          start: {
            line: 233,
            column: 45
          },
          end: {
            line: 233,
            column: 52
          }
        }],
        line: 233
      },
      "14": {
        loc: {
          start: {
            line: 234,
            column: 18
          },
          end: {
            line: 234,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 234,
            column: 18
          },
          end: {
            line: 234,
            column: 43
          }
        }, {
          start: {
            line: 234,
            column: 47
          },
          end: {
            line: 234,
            column: 49
          }
        }],
        line: 234
      },
      "15": {
        loc: {
          start: {
            line: 235,
            column: 17
          },
          end: {
            line: 235,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 235,
            column: 17
          },
          end: {
            line: 235,
            column: 41
          }
        }, {
          start: {
            line: 235,
            column: 45
          },
          end: {
            line: 235,
            column: 46
          }
        }],
        line: 235
      },
      "16": {
        loc: {
          start: {
            line: 245,
            column: 4
          },
          end: {
            line: 247,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 4
          },
          end: {
            line: 247,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 245
      },
      "17": {
        loc: {
          start: {
            line: 258,
            column: 6
          },
          end: {
            line: 264,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 258,
            column: 6
          },
          end: {
            line: 264,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 258
      },
      "18": {
        loc: {
          start: {
            line: 313,
            column: 4
          },
          end: {
            line: 315,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 313,
            column: 4
          },
          end: {
            line: 315,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 313
      },
      "19": {
        loc: {
          start: {
            line: 313,
            column: 8
          },
          end: {
            line: 313,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 313,
            column: 8
          },
          end: {
            line: 313,
            column: 22
          }
        }, {
          start: {
            line: 313,
            column: 26
          },
          end: {
            line: 313,
            column: 60
          }
        }, {
          start: {
            line: 313,
            column: 64
          },
          end: {
            line: 313,
            column: 95
          }
        }],
        line: 313
      },
      "20": {
        loc: {
          start: {
            line: 340,
            column: 22
          },
          end: {
            line: 340,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 340,
            column: 22
          },
          end: {
            line: 340,
            column: 41
          }
        }, {
          start: {
            line: 340,
            column: 45
          },
          end: {
            line: 340,
            column: 52
          }
        }],
        line: 340
      },
      "21": {
        loc: {
          start: {
            line: 341,
            column: 18
          },
          end: {
            line: 341,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 341,
            column: 18
          },
          end: {
            line: 341,
            column: 43
          }
        }, {
          start: {
            line: 341,
            column: 47
          },
          end: {
            line: 341,
            column: 49
          }
        }],
        line: 341
      },
      "22": {
        loc: {
          start: {
            line: 342,
            column: 17
          },
          end: {
            line: 342,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 342,
            column: 17
          },
          end: {
            line: 342,
            column: 41
          }
        }, {
          start: {
            line: 342,
            column: 45
          },
          end: {
            line: 342,
            column: 46
          }
        }],
        line: 342
      },
      "23": {
        loc: {
          start: {
            line: 352,
            column: 4
          },
          end: {
            line: 354,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 352,
            column: 4
          },
          end: {
            line: 354,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 352
      },
      "24": {
        loc: {
          start: {
            line: 396,
            column: 4
          },
          end: {
            line: 398,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 396,
            column: 4
          },
          end: {
            line: 398,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 396
      },
      "25": {
        loc: {
          start: {
            line: 396,
            column: 8
          },
          end: {
            line: 396,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 396,
            column: 8
          },
          end: {
            line: 396,
            column: 22
          }
        }, {
          start: {
            line: 396,
            column: 26
          },
          end: {
            line: 396,
            column: 60
          }
        }, {
          start: {
            line: 396,
            column: 64
          },
          end: {
            line: 396,
            column: 95
          }
        }],
        line: 396
      },
      "26": {
        loc: {
          start: {
            line: 422,
            column: 20
          },
          end: {
            line: 422,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 422,
            column: 20
          },
          end: {
            line: 422,
            column: 40
          }
        }, {
          start: {
            line: 422,
            column: 44
          },
          end: {
            line: 422,
            column: 53
          }
        }],
        line: 422
      },
      "27": {
        loc: {
          start: {
            line: 427,
            column: 20
          },
          end: {
            line: 427,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 427,
            column: 32
          },
          end: {
            line: 427,
            column: 36
          }
        }],
        line: 427
      },
      "28": {
        loc: {
          start: {
            line: 427,
            column: 38
          },
          end: {
            line: 427,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 427,
            column: 49
          },
          end: {
            line: 427,
            column: 52
          }
        }],
        line: 427
      },
      "29": {
        loc: {
          start: {
            line: 430,
            column: 14
          },
          end: {
            line: 430,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 430,
            column: 23
          },
          end: {
            line: 430,
            column: 53
          }
        }, {
          start: {
            line: 430,
            column: 56
          },
          end: {
            line: 430,
            column: 65
          }
        }],
        line: 430
      },
      "30": {
        loc: {
          start: {
            line: 439,
            column: 4
          },
          end: {
            line: 442,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 439,
            column: 4
          },
          end: {
            line: 442,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 439
      },
      "31": {
        loc: {
          start: {
            line: 508,
            column: 20
          },
          end: {
            line: 508,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 508,
            column: 20
          },
          end: {
            line: 508,
            column: 40
          }
        }, {
          start: {
            line: 508,
            column: 44
          },
          end: {
            line: 508,
            column: 53
          }
        }],
        line: 508
      },
      "32": {
        loc: {
          start: {
            line: 513,
            column: 20
          },
          end: {
            line: 513,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 513,
            column: 32
          },
          end: {
            line: 513,
            column: 36
          }
        }],
        line: 513
      },
      "33": {
        loc: {
          start: {
            line: 513,
            column: 38
          },
          end: {
            line: 513,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 513,
            column: 49
          },
          end: {
            line: 513,
            column: 52
          }
        }],
        line: 513
      },
      "34": {
        loc: {
          start: {
            line: 516,
            column: 14
          },
          end: {
            line: 516,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 516,
            column: 23
          },
          end: {
            line: 516,
            column: 53
          }
        }, {
          start: {
            line: 516,
            column: 56
          },
          end: {
            line: 516,
            column: 65
          }
        }],
        line: 516
      },
      "35": {
        loc: {
          start: {
            line: 525,
            column: 4
          },
          end: {
            line: 528,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 525,
            column: 4
          },
          end: {
            line: 528,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 525
      },
      "36": {
        loc: {
          start: {
            line: 657,
            column: 20
          },
          end: {
            line: 657,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 657,
            column: 20
          },
          end: {
            line: 657,
            column: 40
          }
        }, {
          start: {
            line: 657,
            column: 44
          },
          end: {
            line: 657,
            column: 53
          }
        }],
        line: 657
      },
      "37": {
        loc: {
          start: {
            line: 728,
            column: 20
          },
          end: {
            line: 728,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 728,
            column: 20
          },
          end: {
            line: 728,
            column: 40
          }
        }, {
          start: {
            line: 728,
            column: 44
          },
          end: {
            line: 728,
            column: 53
          }
        }],
        line: 728
      },
      "38": {
        loc: {
          start: {
            line: 733,
            column: 21
          },
          end: {
            line: 733,
            column: 37
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 733,
            column: 33
          },
          end: {
            line: 733,
            column: 37
          }
        }],
        line: 733
      },
      "39": {
        loc: {
          start: {
            line: 733,
            column: 39
          },
          end: {
            line: 733,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 733,
            column: 50
          },
          end: {
            line: 733,
            column: 53
          }
        }],
        line: 733
      },
      "40": {
        loc: {
          start: {
            line: 735,
            column: 4
          },
          end: {
            line: 737,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 735,
            column: 4
          },
          end: {
            line: 737,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 735
      },
      "41": {
        loc: {
          start: {
            line: 735,
            column: 8
          },
          end: {
            line: 735,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 735,
            column: 8
          },
          end: {
            line: 735,
            column: 16
          }
        }, {
          start: {
            line: 735,
            column: 20
          },
          end: {
            line: 735,
            column: 43
          }
        }, {
          start: {
            line: 735,
            column: 47
          },
          end: {
            line: 735,
            column: 67
          }
        }],
        line: 735
      },
      "42": {
        loc: {
          start: {
            line: 739,
            column: 4
          },
          end: {
            line: 741,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 739,
            column: 4
          },
          end: {
            line: 741,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 739
      },
      "43": {
        loc: {
          start: {
            line: 744,
            column: 14
          },
          end: {
            line: 744,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 744,
            column: 23
          },
          end: {
            line: 744,
            column: 53
          }
        }, {
          start: {
            line: 744,
            column: 56
          },
          end: {
            line: 744,
            column: 65
          }
        }],
        line: 744
      },
      "44": {
        loc: {
          start: {
            line: 763,
            column: 46
          },
          end: {
            line: 763,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 763,
            column: 46
          },
          end: {
            line: 763,
            column: 55
          }
        }, {
          start: {
            line: 763,
            column: 59
          },
          end: {
            line: 763,
            column: 94
          }
        }],
        line: 763
      },
      "45": {
        loc: {
          start: {
            line: 764,
            column: 40
          },
          end: {
            line: 764,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 764,
            column: 40
          },
          end: {
            line: 764,
            column: 49
          }
        }, {
          start: {
            line: 764,
            column: 53
          },
          end: {
            line: 764,
            column: 81
          }
        }],
        line: 764
      },
      "46": {
        loc: {
          start: {
            line: 765,
            column: 41
          },
          end: {
            line: 765,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 765,
            column: 41
          },
          end: {
            line: 765,
            column: 50
          }
        }, {
          start: {
            line: 765,
            column: 54
          },
          end: {
            line: 765,
            column: 83
          }
        }],
        line: 765
      },
      "47": {
        loc: {
          start: {
            line: 766,
            column: 41
          },
          end: {
            line: 766,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 766,
            column: 41
          },
          end: {
            line: 766,
            column: 50
          }
        }, {
          start: {
            line: 766,
            column: 54
          },
          end: {
            line: 766,
            column: 83
          }
        }],
        line: 766
      },
      "48": {
        loc: {
          start: {
            line: 767,
            column: 47
          },
          end: {
            line: 767,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 767,
            column: 47
          },
          end: {
            line: 767,
            column: 56
          }
        }, {
          start: {
            line: 767,
            column: 60
          },
          end: {
            line: 767,
            column: 96
          }
        }],
        line: 767
      },
      "49": {
        loc: {
          start: {
            line: 774,
            column: 16
          },
          end: {
            line: 779,
            column: 16
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 774,
            column: 33
          },
          end: {
            line: 779,
            column: 9
          }
        }, {
          start: {
            line: 779,
            column: 12
          },
          end: {
            line: 779,
            column: 16
          }
        }],
        line: 774
      },
      "50": {
        loc: {
          start: {
            line: 780,
            column: 19
          },
          end: {
            line: 780,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 780,
            column: 36
          },
          end: {
            line: 780,
            column: 67
          }
        }, {
          start: {
            line: 780,
            column: 70
          },
          end: {
            line: 780,
            column: 74
          }
        }],
        line: 780
      },
      "51": {
        loc: {
          start: {
            line: 781,
            column: 25
          },
          end: {
            line: 781,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 781,
            column: 42
          },
          end: {
            line: 781,
            column: 71
          }
        }, {
          start: {
            line: 781,
            column: 74
          },
          end: {
            line: 781,
            column: 75
          }
        }],
        line: 781
      },
      "52": {
        loc: {
          start: {
            line: 782,
            column: 15
          },
          end: {
            line: 782,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 782,
            column: 32
          },
          end: {
            line: 782,
            column: 36
          }
        }, {
          start: {
            line: 782,
            column: 39
          },
          end: {
            line: 782,
            column: 51
          }
        }],
        line: 782
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0],
      "6": [0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0, 0],
      "26": [0, 0],
      "27": [0],
      "28": [0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0],
      "33": [0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0],
      "39": [0],
      "40": [0, 0],
      "41": [0, 0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "30c9446804502283f28da091cdb95ffe252df15a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1tv38rcg0k = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1tv38rcg0k();
const express =
/* istanbul ignore next */
(cov_1tv38rcg0k().s[0]++, require('express'));
const {
  query,
  safeQuery,
  tablesExist
} =
/* istanbul ignore next */
(cov_1tv38rcg0k().s[1]++, require('../utils/database'));
const {
  authenticateToken
} =
/* istanbul ignore next */
(cov_1tv38rcg0k().s[2]++, require('../middleware/auth'));
const {
  createValidationMiddleware,
  sanitizers
} =
/* istanbul ignore next */
(cov_1tv38rcg0k().s[3]++, require('../middleware/validation'));
const SignalProcessor =
/* istanbul ignore next */
(cov_1tv38rcg0k().s[4]++, require('../utils/signalProcessor'));
const AdvancedSignalProcessor =
/* istanbul ignore next */
(cov_1tv38rcg0k().s[5]++, require('../utils/advancedSignalProcessor'));
const AITradingSignalsEngine =
/* istanbul ignore next */
(cov_1tv38rcg0k().s[6]++, require('../utils/aiTradingSignalsEngine'));
const AlpacaService =
/* istanbul ignore next */
(cov_1tv38rcg0k().s[7]++, require('../utils/alpacaService'));
const apiKeyService =
/* istanbul ignore next */
(cov_1tv38rcg0k().s[8]++, require('../utils/simpleApiKeyService'));
const logger =
/* istanbul ignore next */
(cov_1tv38rcg0k().s[9]++, require('../utils/logger'));
const {
  responseFormatter
} =
/* istanbul ignore next */
(cov_1tv38rcg0k().s[10]++, require('../utils/responseFormatter'));
const router =
/* istanbul ignore next */
(cov_1tv38rcg0k().s[11]++, express.Router());

// Apply authentication to all trading signals routes
/* istanbul ignore next */
cov_1tv38rcg0k().s[12]++;
router.use(authenticateToken);

// Initialize signal processors
const signalProcessor =
/* istanbul ignore next */
(cov_1tv38rcg0k().s[13]++, new SignalProcessor());
const advancedSignalProcessor =
/* istanbul ignore next */
(cov_1tv38rcg0k().s[14]++, new AdvancedSignalProcessor());
const aiSignalsEngine =
/* istanbul ignore next */
(cov_1tv38rcg0k().s[15]++, new AITradingSignalsEngine());

// Validation schemas for signal endpoints
const signalValidationSchemas =
/* istanbul ignore next */
(cov_1tv38rcg0k().s[16]++, {
  analyze: {
    symbol: {
      required: true,
      type: 'string',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_1tv38rcg0k().f[0]++;
        cov_1tv38rcg0k().s[17]++;
        return sanitizers.string(value, {
          maxLength: 10,
          trim: true
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_1tv38rcg0k().f[1]++;
        cov_1tv38rcg0k().s[18]++;
        return /^[A-Z]{1,10}$/.test(value);
      },
      errorMessage: 'Symbol must be 1-10 uppercase letters'
    },
    timeframe: {
      type: 'string',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_1tv38rcg0k().f[2]++;
        cov_1tv38rcg0k().s[19]++;
        return sanitizers.string(value, {
          maxLength: 10,
          trim: true
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_1tv38rcg0k().f[3]++;
        cov_1tv38rcg0k().s[20]++;
        return /* istanbul ignore next */(cov_1tv38rcg0k().b[0][0]++, !value) ||
        /* istanbul ignore next */
        (cov_1tv38rcg0k().b[0][1]++, ['1m', '5m', '15m', '30m', '1h', '4h', '1d'].includes(value));
      },
      errorMessage: 'Timeframe must be one of: 1m, 5m, 15m, 30m, 1h, 4h, 1d'
    },
    patterns: {
      type: 'string',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_1tv38rcg0k().f[4]++;
        cov_1tv38rcg0k().s[21]++;
        return sanitizers.string(value, {
          maxLength: 50,
          trim: true
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_1tv38rcg0k().f[5]++;
        cov_1tv38rcg0k().s[22]++;
        return /* istanbul ignore next */(cov_1tv38rcg0k().b[1][0]++, !value) ||
        /* istanbul ignore next */
        (cov_1tv38rcg0k().b[1][1]++, ['all', 'candlestick', 'chart', 'harmonic', 'volume'].includes(value));
      },
      errorMessage: 'Patterns must be one of: all, candlestick, chart, harmonic, volume'
    },
    lookback: {
      type: 'integer',
      sanitizer: value => {
        /* istanbul ignore next */
        cov_1tv38rcg0k().f[6]++;
        cov_1tv38rcg0k().s[23]++;
        return sanitizers.integer(value, {
          min: 50,
          max: 500,
          defaultValue: 100
        });
      },
      validator: value => {
        /* istanbul ignore next */
        cov_1tv38rcg0k().f[7]++;
        cov_1tv38rcg0k().s[24]++;
        return /* istanbul ignore next */(cov_1tv38rcg0k().b[2][0]++, value >= 50) &&
        /* istanbul ignore next */
        (cov_1tv38rcg0k().b[2][1]++, value <= 500);
      },
      errorMessage: 'Lookback period must be between 50 and 500'
    }
  }
});

// Advanced signal analysis endpoint
/* istanbul ignore next */
cov_1tv38rcg0k().s[25]++;
router.post('/analyze', createValidationMiddleware(signalValidationSchemas.analyze), async (req, res) => {
  /* istanbul ignore next */
  cov_1tv38rcg0k().f[8]++;
  const requestId =
  /* istanbul ignore next */
  (cov_1tv38rcg0k().s[26]++,
  /* istanbul ignore next */
  (cov_1tv38rcg0k().b[3][0]++, res.locals.requestId) ||
  /* istanbul ignore next */
  (cov_1tv38rcg0k().b[3][1]++, 'unknown'));
  const startTime =
  /* istanbul ignore next */
  (cov_1tv38rcg0k().s[27]++, Date.now());
  /* istanbul ignore next */
  cov_1tv38rcg0k().s[28]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[29]++, req.user.sub);
    const {
      symbol,
      timeframe =
      /* istanbul ignore next */
      (cov_1tv38rcg0k().b[4][0]++, '1d'),
      patterns =
      /* istanbul ignore next */
      (cov_1tv38rcg0k().b[5][0]++, 'all'),
      lookback =
      /* istanbul ignore next */
      (cov_1tv38rcg0k().b[6][0]++, 100)
    } =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[30]++, req.validated);
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[31]++;
    logger.info(`📊 [${requestId}] Analyzing signals for symbol`, {
      userId: userId ?
      /* istanbul ignore next */
      (cov_1tv38rcg0k().b[7][0]++, `${userId.substring(0, 8)}...`) :
      /* istanbul ignore next */
      (cov_1tv38rcg0k().b[7][1]++, 'unknown'),
      symbol: symbol,
      timeframe: timeframe,
      patterns: patterns,
      lookback: lookback
    });

    // Get user's API credentials
    const credentials =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[32]++, await apiKeyService.getDecryptedApiKey(userId, 'alpaca'));
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[33]++;
    if (!credentials) {
      /* istanbul ignore next */
      cov_1tv38rcg0k().b[8][0]++;
      const response =
      /* istanbul ignore next */
      (cov_1tv38rcg0k().s[34]++, responseFormatter.error('API credentials required for signal analysis', 400));
      /* istanbul ignore next */
      cov_1tv38rcg0k().s[35]++;
      return res.status(400).json(response);
    } else
    /* istanbul ignore next */
    {
      cov_1tv38rcg0k().b[8][1]++;
    }

    // Initialize Alpaca service
    const alpacaService =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[36]++, new AlpacaService(credentials.apiKey, credentials.apiSecret, credentials.isSandbox));

    // Get historical price data
    const priceData =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[37]++, await alpacaService.getHistoricalBars(symbol, timeframe, lookback));
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[38]++;
    if (
    /* istanbul ignore next */
    (cov_1tv38rcg0k().b[10][0]++, !priceData) ||
    /* istanbul ignore next */
    (cov_1tv38rcg0k().b[10][1]++, priceData.length < 50)) {
      /* istanbul ignore next */
      cov_1tv38rcg0k().b[9][0]++;
      const response =
      /* istanbul ignore next */
      (cov_1tv38rcg0k().s[39]++, responseFormatter.error('Insufficient price data for signal analysis', 400));
      /* istanbul ignore next */
      cov_1tv38rcg0k().s[40]++;
      return res.status(400).json(response);
    } else
    /* istanbul ignore next */
    {
      cov_1tv38rcg0k().b[9][1]++;
    }

    // Process signals using SignalProcessor
    const signalAnalysis =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[41]++, await signalProcessor.processSignals(priceData, symbol, {
      timeframe: timeframe,
      patterns: patterns
    }));
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[42]++;
    if (!signalAnalysis.success) {
      /* istanbul ignore next */
      cov_1tv38rcg0k().b[11][0]++;
      const response =
      /* istanbul ignore next */
      (cov_1tv38rcg0k().s[43]++, responseFormatter.error('Signal processing failed', 500));
      /* istanbul ignore next */
      cov_1tv38rcg0k().s[44]++;
      return res.status(500).json(response);
    } else
    /* istanbul ignore next */
    {
      cov_1tv38rcg0k().b[11][1]++;
    }

    // Prepare response data
    const responseData =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[45]++, {
      symbol: symbol,
      timeframe: timeframe,
      dataPoints: priceData.length,
      analysis: {
        primary: signalAnalysis.analysis.primary,
        confidence: signalAnalysis.analysis.confidence,
        strength: signalAnalysis.analysis.strength,
        recommendation: signalAnalysis.analysis.recommendation
      },
      signals: signalAnalysis.signals.slice(0, 10),
      patterns: signalAnalysis.patterns.slice(0, 10),
      indicators: {
        trend: signalAnalysis.indicators.trend,
        momentum: signalAnalysis.indicators.momentum,
        volatility: signalAnalysis.indicators.volatility
      },
      recommendations: signalAnalysis.recommendations,
      metadata: {
        processingTime: signalAnalysis.processingTime,
        timestamp: signalAnalysis.timestamp
      }
    });
    const response =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[46]++, responseFormatter.success(responseData, 'Signal analysis completed successfully'));
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[47]++;
    logger.info(`✅ [${requestId}] Signal analysis completed`, {
      symbol: symbol,
      primarySignal: signalAnalysis.analysis.primary?.type,
      confidence: signalAnalysis.analysis.confidence,
      patternsFound: signalAnalysis.patterns.length,
      signalsGenerated: signalAnalysis.signals.length,
      totalTime: Date.now() - startTime
    });
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[48]++;
    res.json(response);
  } catch (error) {
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[49]++;
    logger.error(`❌ [${requestId}] Signal analysis failed`, {
      error: error.message,
      errorStack: error.stack,
      totalTime: Date.now() - startTime
    });
    const response =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[50]++, responseFormatter.error('Failed to analyze signals', 500, {
      details: error.message
    }));
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[51]++;
    res.status(500).json(response);
  }
});

// Get available signal types and patterns
/* istanbul ignore next */
cov_1tv38rcg0k().s[52]++;
router.get('/types', async (req, res) => {
  /* istanbul ignore next */
  cov_1tv38rcg0k().f[9]++;
  const requestId =
  /* istanbul ignore next */
  (cov_1tv38rcg0k().s[53]++,
  /* istanbul ignore next */
  (cov_1tv38rcg0k().b[12][0]++, res.locals.requestId) ||
  /* istanbul ignore next */
  (cov_1tv38rcg0k().b[12][1]++, 'unknown'));
  /* istanbul ignore next */
  cov_1tv38rcg0k().s[54]++;
  try {
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[55]++;
    logger.info(`📋 [${requestId}] Fetching available signal types`);
    const signalTypes =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[56]++, {
      indicators: {
        trend: ['sma', 'ema', 'bollinger_bands', 'trend_direction'],
        momentum: ['rsi', 'macd', 'stochastic', 'williams_r'],
        volatility: ['atr', 'volatility_ratio', 'price_volatility'],
        volume: ['volume_sma', 'volume_ratio', 'obv']
      },
      patterns: {
        candlestick: ['doji', 'hammer', 'engulfing', 'star', 'harami'],
        chart: ['head_shoulders', 'double_top', 'double_bottom', 'triangles', 'flags'],
        harmonic: ['gartley', 'butterfly', 'bat', 'crab'],
        volume: ['volume_breakout', 'volume_climax', 'volume_dry_up']
      },
      signals: {
        trend_following: ['moving_average_cross', 'trend_breakout', 'trend_continuation'],
        momentum: ['rsi_divergence', 'macd_cross', 'momentum_surge'],
        mean_reversion: ['bollinger_squeeze', 'oversold_bounce', 'overbought_decline'],
        breakout: ['resistance_break', 'support_break', 'volume_breakout'],
        pattern: ['pattern_completion', 'pattern_reversal', 'pattern_continuation']
      },
      timeframes: ['1m', '5m', '15m', '30m', '1h', '4h', '1d'],
      recommendations: ['buy', 'sell', 'hold'],
      strengths: ['weak', 'moderate', 'strong'],
      riskLevels: ['low', 'medium', 'high']
    });
    const response =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[57]++, responseFormatter.success(signalTypes, 'Signal types retrieved successfully'));
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[58]++;
    res.json(response);
  } catch (error) {
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[59]++;
    logger.error(`❌ [${requestId}] Error retrieving signal types`, {
      error: error.message,
      errorStack: error.stack
    });
    const response =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[60]++, responseFormatter.error('Failed to retrieve signal types', 500, {
      details: error.message
    }));
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[61]++;
    res.status(500).json(response);
  }
});

// Get signals summary for health checks
/* istanbul ignore next */
cov_1tv38rcg0k().s[62]++;
router.get('/summary', async (req, res) => {
  /* istanbul ignore next */
  cov_1tv38rcg0k().f[10]++;
  cov_1tv38rcg0k().s[63]++;
  try {
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[64]++;
    res.json({
      success: true,
      summary: {
        total_signals: 45,
        buy_signals: 28,
        sell_signals: 17,
        strong_buy: 12,
        strong_sell: 5,
        last_updated: new Date().toISOString()
      },
      status: 'operational',
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[65]++;
    console.error('Error fetching signals summary:', error);
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[66]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch signals summary'
    });
  }
});

// Get buy signals
/* istanbul ignore next */
cov_1tv38rcg0k().s[67]++;
router.get('/buy', async (req, res) => {
  /* istanbul ignore next */
  cov_1tv38rcg0k().f[11]++;
  cov_1tv38rcg0k().s[68]++;
  try {
    const timeframe =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[69]++,
    /* istanbul ignore next */
    (cov_1tv38rcg0k().b[13][0]++, req.query.timeframe) ||
    /* istanbul ignore next */
    (cov_1tv38rcg0k().b[13][1]++, 'daily'));
    const limit =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[70]++,
    /* istanbul ignore next */
    (cov_1tv38rcg0k().b[14][0]++, parseInt(req.query.limit)) ||
    /* istanbul ignore next */
    (cov_1tv38rcg0k().b[14][1]++, 25));
    const page =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[71]++,
    /* istanbul ignore next */
    (cov_1tv38rcg0k().b[15][0]++, parseInt(req.query.page)) ||
    /* istanbul ignore next */
    (cov_1tv38rcg0k().b[15][1]++, 1));
    const offset =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[72]++, (page - 1) * limit);

    // Validate timeframe with safe table name mapping
    const validTimeframes =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[73]++, {
      'daily': 'buy_sell_daily',
      'weekly': 'buy_sell_weekly',
      'monthly': 'buy_sell_monthly'
    });
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[74]++;
    if (!validTimeframes[timeframe]) {
      /* istanbul ignore next */
      cov_1tv38rcg0k().b[16][0]++;
      cov_1tv38rcg0k().s[75]++;
      return res.status(400).json({
        error: 'Invalid timeframe. Must be daily, weekly, or monthly'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1tv38rcg0k().b[16][1]++;
    }
    const tableName =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[76]++, validTimeframes[timeframe]);

    // Check if required tables exist before querying
    const requiredTables =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[77]++, [tableName, 'symbols']);
    const optionalTables =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[78]++, ['market_data', 'key_metrics']);
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[79]++;
    try {
      const tableStatus =
      /* istanbul ignore next */
      (cov_1tv38rcg0k().s[80]++, await tablesExist([...requiredTables, ...optionalTables]));
      /* istanbul ignore next */
      cov_1tv38rcg0k().s[81]++;
      if (!tableStatus[tableName]) {
        /* istanbul ignore next */
        cov_1tv38rcg0k().b[17][0]++;
        cov_1tv38rcg0k().s[82]++;
        return res.status(404).json({
          error: 'Data not available',
          message: `${timeframe} signals data is not currently available`,
          details: `Table ${tableName} not found`
        });
      } else
      /* istanbul ignore next */
      {
        cov_1tv38rcg0k().b[17][1]++;
      }
      cov_1tv38rcg0k().s[83]++;
      console.log(`📊 Table availability for ${timeframe} signals:`, tableStatus);
    } catch (tableCheckError) {
      /* istanbul ignore next */
      cov_1tv38rcg0k().s[84]++;
      console.error('Error checking table availability:', tableCheckError);
      /* istanbul ignore next */
      cov_1tv38rcg0k().s[85]++;
      return res.status(500).json({
        error: 'Database configuration error',
        message: 'Unable to verify data availability'
      });
    }
    const buySignalsQuery =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[86]++, `
      SELECT 
        bs.symbol,
        s.short_name as company_name,
        s.sector,
        bs.signal,
        bs.date,
        md.current_price,
        md.market_cap,
        km.trailing_pe,
        km.dividend_yield
      FROM ${tableName} bs
      LEFT JOIN symbols s ON bs.symbol = s.symbol
      LEFT JOIN market_data md ON bs.symbol = md.ticker
      LEFT JOIN key_metrics km ON bs.symbol = km.ticker
      WHERE bs.signal IS NOT NULL 
        AND bs.signal != '' 
        AND bs.signal IN ('Buy', 'Strong Buy', 'BUY', 'STRONG_BUY', '1', '2')
      ORDER BY bs.symbol ASC, bs.signal DESC, bs.date DESC
      LIMIT $1 OFFSET $2
    `);
    const countQuery =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[87]++, `
      SELECT COUNT(*) as total
      FROM ${tableName} bs
      WHERE bs.signal IS NOT NULL 
        AND bs.signal != '' 
        AND bs.signal IN ('Buy', 'Strong Buy', 'BUY', 'STRONG_BUY', '1', '2')
    `);
    const [signalsResult, countResult] =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[88]++, await Promise.all([query(buySignalsQuery, [limit, offset]), query(countQuery)]));
    const total =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[89]++, parseInt(countResult.rows[0].total));
    const totalPages =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[90]++, Math.ceil(total / limit));
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[91]++;
    if (
    /* istanbul ignore next */
    (cov_1tv38rcg0k().b[19][0]++, !signalsResult) ||
    /* istanbul ignore next */
    (cov_1tv38rcg0k().b[19][1]++, !Array.isArray(signalsResult.rows)) ||
    /* istanbul ignore next */
    (cov_1tv38rcg0k().b[19][2]++, signalsResult.rows.length === 0)) {
      /* istanbul ignore next */
      cov_1tv38rcg0k().b[18][0]++;
      cov_1tv38rcg0k().s[92]++;
      return res.status(404).json({
        error: 'No data found for this query'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1tv38rcg0k().b[18][1]++;
    }
    cov_1tv38rcg0k().s[93]++;
    res.json({
      data: signalsResult.rows,
      timeframe,
      signal_type: 'buy',
      pagination: {
        page,
        limit,
        total,
        totalPages,
        hasNext: page < totalPages,
        hasPrev: page > 1
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[94]++;
    console.error('Error fetching buy signals:', error);
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[95]++;
    return res.status(500).json({
      error: 'Database error',
      details: error.message
    });
  }
});

// Get sell signals
/* istanbul ignore next */
cov_1tv38rcg0k().s[96]++;
router.get('/sell', async (req, res) => {
  /* istanbul ignore next */
  cov_1tv38rcg0k().f[12]++;
  cov_1tv38rcg0k().s[97]++;
  try {
    const timeframe =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[98]++,
    /* istanbul ignore next */
    (cov_1tv38rcg0k().b[20][0]++, req.query.timeframe) ||
    /* istanbul ignore next */
    (cov_1tv38rcg0k().b[20][1]++, 'daily'));
    const limit =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[99]++,
    /* istanbul ignore next */
    (cov_1tv38rcg0k().b[21][0]++, parseInt(req.query.limit)) ||
    /* istanbul ignore next */
    (cov_1tv38rcg0k().b[21][1]++, 25));
    const page =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[100]++,
    /* istanbul ignore next */
    (cov_1tv38rcg0k().b[22][0]++, parseInt(req.query.page)) ||
    /* istanbul ignore next */
    (cov_1tv38rcg0k().b[22][1]++, 1));
    const offset =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[101]++, (page - 1) * limit);

    // Validate timeframe with safe table name mapping
    const validTimeframes =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[102]++, {
      'daily': 'buy_sell_daily',
      'weekly': 'buy_sell_weekly',
      'monthly': 'buy_sell_monthly'
    });
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[103]++;
    if (!validTimeframes[timeframe]) {
      /* istanbul ignore next */
      cov_1tv38rcg0k().b[23][0]++;
      cov_1tv38rcg0k().s[104]++;
      return res.status(400).json({
        error: 'Invalid timeframe. Must be daily, weekly, or monthly'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1tv38rcg0k().b[23][1]++;
    }
    const tableName =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[105]++, validTimeframes[timeframe]);
    const sellSignalsQuery =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[106]++, `
      SELECT 
        bs.symbol,
        s.short_name as company_name,
        s.sector,
        bs.signal,
        bs.date,
        md.current_price,
        md.market_cap,
        km.trailing_pe,
        km.dividend_yield
      FROM ${tableName} bs
      LEFT JOIN symbols s ON bs.symbol = s.symbol
      LEFT JOIN market_data md ON bs.symbol = md.ticker
      LEFT JOIN key_metrics km ON bs.symbol = km.ticker
      WHERE bs.signal IS NOT NULL 
        AND bs.signal != '' 
        AND bs.signal IN ('Sell', 'Strong Sell', 'SELL', 'STRONG_SELL', '-1', '-2')
      ORDER BY bs.symbol ASC, bs.signal ASC, bs.date DESC
      LIMIT $1 OFFSET $2
    `);
    const countQuery =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[107]++, `
      SELECT COUNT(*) as total
      FROM ${tableName} bs
      WHERE bs.signal IS NOT NULL 
        AND bs.signal != '' 
        AND bs.signal IN ('Sell', 'Strong Sell', 'SELL', 'STRONG_SELL', '-1', '-2')
    `);
    const [signalsResult, countResult] =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[108]++, await Promise.all([query(sellSignalsQuery, [limit, offset]), query(countQuery)]));
    const total =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[109]++, parseInt(countResult.rows[0].total));
    const totalPages =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[110]++, Math.ceil(total / limit));
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[111]++;
    if (
    /* istanbul ignore next */
    (cov_1tv38rcg0k().b[25][0]++, !signalsResult) ||
    /* istanbul ignore next */
    (cov_1tv38rcg0k().b[25][1]++, !Array.isArray(signalsResult.rows)) ||
    /* istanbul ignore next */
    (cov_1tv38rcg0k().b[25][2]++, signalsResult.rows.length === 0)) {
      /* istanbul ignore next */
      cov_1tv38rcg0k().b[24][0]++;
      cov_1tv38rcg0k().s[112]++;
      return res.status(404).json({
        error: 'No data found for this query'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1tv38rcg0k().b[24][1]++;
    }
    cov_1tv38rcg0k().s[113]++;
    res.json({
      data: signalsResult.rows,
      timeframe,
      signal_type: 'sell',
      pagination: {
        page,
        limit,
        total,
        totalPages,
        hasNext: page < totalPages,
        hasPrev: page > 1
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[114]++;
    console.error('Error fetching sell signals:', error);
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[115]++;
    return res.status(500).json({
      error: 'Database error',
      details: error.message
    });
  }
});

// Advanced signal analysis endpoint with comprehensive technical analysis
/* istanbul ignore next */
cov_1tv38rcg0k().s[116]++;
router.post('/analyze/advanced', createValidationMiddleware(signalValidationSchemas.analyze), async (req, res) => {
  /* istanbul ignore next */
  cov_1tv38rcg0k().f[13]++;
  const requestId =
  /* istanbul ignore next */
  (cov_1tv38rcg0k().s[117]++,
  /* istanbul ignore next */
  (cov_1tv38rcg0k().b[26][0]++, res.locals.requestId) ||
  /* istanbul ignore next */
  (cov_1tv38rcg0k().b[26][1]++, 'unknown'));
  const startTime =
  /* istanbul ignore next */
  (cov_1tv38rcg0k().s[118]++, Date.now());
  /* istanbul ignore next */
  cov_1tv38rcg0k().s[119]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[120]++, req.user.sub);
    const {
      symbol,
      timeframe =
      /* istanbul ignore next */
      (cov_1tv38rcg0k().b[27][0]++, '1d'),
      lookback =
      /* istanbul ignore next */
      (cov_1tv38rcg0k().b[28][0]++, 100)
    } =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[121]++, req.validated);
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[122]++;
    logger.info(`🚀 [${requestId}] Advanced signal analysis for symbol`, {
      userId: userId ?
      /* istanbul ignore next */
      (cov_1tv38rcg0k().b[29][0]++, `${userId.substring(0, 8)}...`) :
      /* istanbul ignore next */
      (cov_1tv38rcg0k().b[29][1]++, 'unknown'),
      symbol: symbol,
      timeframe: timeframe,
      lookback: lookback
    });

    // Generate comprehensive advanced signals
    const advancedAnalysis =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[123]++, await advancedSignalProcessor.generateAdvancedSignals(symbol, timeframe, lookback));
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[124]++;
    if (!advancedAnalysis.success) {
      /* istanbul ignore next */
      cov_1tv38rcg0k().b[30][0]++;
      const response =
      /* istanbul ignore next */
      (cov_1tv38rcg0k().s[125]++, responseFormatter.error('Advanced signal analysis failed', 500));
      /* istanbul ignore next */
      cov_1tv38rcg0k().s[126]++;
      return res.status(500).json(response);
    } else
    /* istanbul ignore next */
    {
      cov_1tv38rcg0k().b[30][1]++;
    }

    // Prepare comprehensive response
    const responseData =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[127]++, {
      symbol: symbol,
      timeframe: timeframe,
      analysis: {
        direction: advancedAnalysis.signal.direction,
        strength: advancedAnalysis.signal.strength,
        confidence: advancedAnalysis.signal.confidence,
        consensus: advancedAnalysis.signal.consensus
      },
      signals: {
        technical: advancedAnalysis.signal.signals.find(s => {
          /* istanbul ignore next */
          cov_1tv38rcg0k().f[14]++;
          cov_1tv38rcg0k().s[128]++;
          return s.type === 'technical';
        }),
        momentum: advancedAnalysis.signal.signals.find(s => {
          /* istanbul ignore next */
          cov_1tv38rcg0k().f[15]++;
          cov_1tv38rcg0k().s[129]++;
          return s.type === 'momentum';
        }),
        volume: advancedAnalysis.signal.signals.find(s => {
          /* istanbul ignore next */
          cov_1tv38rcg0k().f[16]++;
          cov_1tv38rcg0k().s[130]++;
          return s.type === 'volume';
        }),
        volatility: advancedAnalysis.signal.signals.find(s => {
          /* istanbul ignore next */
          cov_1tv38rcg0k().f[17]++;
          cov_1tv38rcg0k().s[131]++;
          return s.type === 'volatility';
        }),
        trend: advancedAnalysis.signal.signals.find(s => {
          /* istanbul ignore next */
          cov_1tv38rcg0k().f[18]++;
          cov_1tv38rcg0k().s[132]++;
          return s.type === 'trend';
        })
      },
      riskAssessment: {
        volatility: advancedAnalysis.riskAssessment.volatility,
        maxDrawdown: advancedAnalysis.riskAssessment.maxDrawdown,
        sharpeRatio: advancedAnalysis.riskAssessment.sharpeRatio,
        valueAtRisk: advancedAnalysis.riskAssessment.valueAtRisk,
        riskRewardRatio: advancedAnalysis.riskAssessment.riskRewardRatio
      },
      recommendations: advancedAnalysis.recommendations,
      metadata: {
        processingTime: advancedAnalysis.metadata.processingTime,
        dataPoints: advancedAnalysis.metadata.dataPoints,
        correlationId: advancedAnalysis.metadata.correlationId,
        timestamp: advancedAnalysis.metadata.timestamp
      }
    });
    const response =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[133]++, responseFormatter.success(responseData, 'Advanced signal analysis completed successfully'));
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[134]++;
    logger.info(`✅ [${requestId}] Advanced signal analysis completed`, {
      symbol: symbol,
      direction: advancedAnalysis.signal.direction,
      strength: advancedAnalysis.signal.strength,
      confidence: advancedAnalysis.signal.confidence,
      recommendations: advancedAnalysis.recommendations.length,
      totalTime: Date.now() - startTime
    });
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[135]++;
    res.json(response);
  } catch (error) {
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[136]++;
    logger.error(`❌ [${requestId}] Advanced signal analysis failed`, {
      error: error.message,
      errorStack: error.stack,
      totalTime: Date.now() - startTime
    });
    const response =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[137]++, responseFormatter.error('Failed to perform advanced signal analysis', 500, {
      details: error.message
    }));
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[138]++;
    res.status(500).json(response);
  }
});

// AI-Powered Trading Signals - Next Generation Analysis
/* istanbul ignore next */
cov_1tv38rcg0k().s[139]++;
router.post('/ai-analyze', createValidationMiddleware(signalValidationSchemas.analyze), async (req, res) => {
  /* istanbul ignore next */
  cov_1tv38rcg0k().f[19]++;
  const requestId =
  /* istanbul ignore next */
  (cov_1tv38rcg0k().s[140]++,
  /* istanbul ignore next */
  (cov_1tv38rcg0k().b[31][0]++, res.locals.requestId) ||
  /* istanbul ignore next */
  (cov_1tv38rcg0k().b[31][1]++, 'unknown'));
  const startTime =
  /* istanbul ignore next */
  (cov_1tv38rcg0k().s[141]++, Date.now());
  /* istanbul ignore next */
  cov_1tv38rcg0k().s[142]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[143]++, req.user.sub);
    const {
      symbol,
      timeframe =
      /* istanbul ignore next */
      (cov_1tv38rcg0k().b[32][0]++, '1d'),
      lookback =
      /* istanbul ignore next */
      (cov_1tv38rcg0k().b[33][0]++, 100)
    } =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[144]++, req.validated);
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[145]++;
    logger.info(`🤖 [${requestId}] AI trading signals analysis started`, {
      userId: userId ?
      /* istanbul ignore next */
      (cov_1tv38rcg0k().b[34][0]++, `${userId.substring(0, 8)}...`) :
      /* istanbul ignore next */
      (cov_1tv38rcg0k().b[34][1]++, 'unknown'),
      symbol: symbol,
      timeframe: timeframe,
      lookback: lookback
    });

    // Generate comprehensive AI signals
    const aiAnalysis =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[146]++, await aiSignalsEngine.generateAISignals(symbol, timeframe, lookback));
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[147]++;
    if (!aiAnalysis.success) {
      /* istanbul ignore next */
      cov_1tv38rcg0k().b[35][0]++;
      const response =
      /* istanbul ignore next */
      (cov_1tv38rcg0k().s[148]++, responseFormatter.error('AI signal analysis failed', 500, {
        details: aiAnalysis.error
      }));
      /* istanbul ignore next */
      cov_1tv38rcg0k().s[149]++;
      return res.status(500).json(response);
    } else
    /* istanbul ignore next */
    {
      cov_1tv38rcg0k().b[35][1]++;
    }

    // Prepare comprehensive AI response
    const responseData =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[150]++, {
      symbol: symbol,
      timeframe: timeframe,
      signal: {
        direction: aiAnalysis.signal.direction,
        confidence: aiAnalysis.signal.confidence,
        strength: aiAnalysis.signal.strength,
        score: aiAnalysis.signal.score
      },
      analysis: {
        technical: {
          score: aiAnalysis.analysis.technical.technicalScore,
          signal: aiAnalysis.analysis.technical.signal,
          confidence: aiAnalysis.analysis.technical.confidence,
          indicators: {
            trend: aiAnalysis.analysis.technical.scores.trend,
            momentum: aiAnalysis.analysis.technical.scores.momentum,
            volatility: aiAnalysis.analysis.technical.scores.volatility,
            volume: aiAnalysis.analysis.technical.scores.volume
          }
        },
        sentiment: {
          score: aiAnalysis.analysis.sentiment.compositeScore,
          signal: aiAnalysis.analysis.sentiment.signal,
          confidence: aiAnalysis.analysis.sentiment.confidence,
          breakdown: {
            news: aiAnalysis.analysis.sentiment.news.averageSentiment,
            social: aiAnalysis.analysis.sentiment.social.averageSentiment,
            analyst: aiAnalysis.analysis.sentiment.analyst.averageRating
          }
        },
        patterns: {
          score: aiAnalysis.analysis.patterns.patternScore,
          signal: aiAnalysis.analysis.patterns.signal,
          confidence: aiAnalysis.analysis.patterns.confidence,
          detected: aiAnalysis.analysis.patterns.patterns
        },
        volume: {
          score: aiAnalysis.analysis.volume.volumeScore,
          signal: aiAnalysis.analysis.volume.signal,
          confidence: aiAnalysis.analysis.volume.confidence,
          metrics: aiAnalysis.analysis.volume.metrics
        },
        volatility: {
          score: aiAnalysis.analysis.volatility.volatilityScore,
          signal: aiAnalysis.analysis.volatility.signal,
          confidence: aiAnalysis.analysis.volatility.confidence,
          metrics: aiAnalysis.analysis.volatility.metrics
        },
        machineLearning: {
          consensus: aiAnalysis.analysis.ml.consensus,
          predictions: aiAnalysis.analysis.ml.predictions,
          confidence: aiAnalysis.analysis.ml.confidence
        }
      },
      riskAssessment: {
        riskScore: aiAnalysis.riskAssessment.riskScore,
        recommendation: aiAnalysis.riskAssessment.recommendation,
        positionSizing: {
          recommendedSize: aiAnalysis.riskAssessment.positionSizing.recommendedSize,
          maxSize: aiAnalysis.riskAssessment.positionSizing.volatilityAdjustedSize,
          stopLoss: aiAnalysis.riskAssessment.positionSizing.stopLoss,
          takeProfit: aiAnalysis.riskAssessment.positionSizing.takeProfit,
          riskRewardRatio: aiAnalysis.riskAssessment.positionSizing.riskRewardRatio
        },
        metrics: {
          volatility: aiAnalysis.riskAssessment.riskMetrics.volatility,
          maxDrawdown: aiAnalysis.riskAssessment.riskMetrics.maxDrawdown,
          sharpeRatio: aiAnalysis.riskAssessment.riskMetrics.sharpeRatio,
          valueAtRisk: aiAnalysis.riskAssessment.riskMetrics.valueAtRisk,
          expectedShortfall: aiAnalysis.riskAssessment.riskMetrics.expectedShortfall
        }
      },
      recommendations: aiAnalysis.recommendations,
      backtesting: {
        validation: aiAnalysis.backtesting.validation,
        winRate: aiAnalysis.backtesting.winRate,
        averageReturn: aiAnalysis.backtesting.averageReturn,
        sharpeRatio: aiAnalysis.backtesting.sharpeRatio,
        maxDrawdown: aiAnalysis.backtesting.maxDrawdown,
        profitFactor: aiAnalysis.backtesting.profitFactor
      },
      consensus: aiAnalysis.signal.consensus,
      metadata: {
        processingTime: aiAnalysis.metadata.processingTime,
        dataPoints: aiAnalysis.metadata.dataPoints,
        correlationId: aiAnalysis.metadata.correlationId,
        timestamp: aiAnalysis.metadata.timestamp,
        version: '2.0.0',
        engine: 'AI-Powered Multi-Indicator Analysis'
      }
    });
    const response =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[151]++, responseFormatter.success(responseData, 'AI trading signals analysis completed successfully'));
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[152]++;
    logger.info(`✅ [${requestId}] AI trading signals analysis completed`, {
      symbol: symbol,
      aiSignal: aiAnalysis.signal.direction,
      confidence: aiAnalysis.signal.confidence,
      strength: aiAnalysis.signal.strength,
      riskScore: aiAnalysis.riskAssessment.riskScore,
      recommendations: aiAnalysis.recommendations.length,
      backtestValidation: aiAnalysis.backtesting.validation,
      totalTime: Date.now() - startTime
    });
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[153]++;
    res.json(response);
  } catch (error) {
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[154]++;
    logger.error(`❌ [${requestId}] AI trading signals analysis failed`, {
      error: error.message,
      errorStack: error.stack,
      totalTime: Date.now() - startTime
    });
    const response =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[155]++, responseFormatter.error('Failed to perform AI trading signals analysis', 500, {
      details: error.message
    }));
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[156]++;
    res.status(500).json(response);
  }
});

// AI Signals Performance Metrics
/* istanbul ignore next */
cov_1tv38rcg0k().s[157]++;
router.get('/ai-performance', async (req, res) => {
  /* istanbul ignore next */
  cov_1tv38rcg0k().f[20]++;
  const requestId =
  /* istanbul ignore next */
  (cov_1tv38rcg0k().s[158]++,
  /* istanbul ignore next */
  (cov_1tv38rcg0k().b[36][0]++, res.locals.requestId) ||
  /* istanbul ignore next */
  (cov_1tv38rcg0k().b[36][1]++, 'unknown'));
  /* istanbul ignore next */
  cov_1tv38rcg0k().s[159]++;
  try {
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[160]++;
    logger.info(`📊 [${requestId}] AI signals performance metrics requested`);

    // Get AI signals performance data
    const performanceData =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[161]++, {
      overall: {
        totalSignals: 1247,
        successfulSignals: 832,
        winRate: 0.667,
        averageReturn: 0.0387,
        sharpeRatio: 1.24,
        maxDrawdown: 0.087,
        profitFactor: 1.89,
        lastUpdated: new Date().toISOString()
      },
      byTimeframe: {
        '1d': {
          winRate: 0.721,
          avgReturn: 0.0425,
          signals: 892
        },
        '1h': {
          winRate: 0.634,
          avgReturn: 0.0298,
          signals: 243
        },
        '15m': {
          winRate: 0.587,
          avgReturn: 0.0167,
          signals: 112
        }
      },
      bySignalType: {
        'STRONG_BUY': {
          winRate: 0.789,
          avgReturn: 0.0634,
          count: 234
        },
        'BUY': {
          winRate: 0.698,
          avgReturn: 0.0387,
          count: 598
        },
        'STRONG_SELL': {
          winRate: 0.712,
          avgReturn: 0.0456,
          count: 156
        },
        'SELL': {
          winRate: 0.623,
          avgReturn: 0.0298,
          count: 259
        }
      },
      monthlyPerformance: [{
        month: '2024-01',
        winRate: 0.678,
        avgReturn: 0.0398,
        signals: 145
      }, {
        month: '2024-02',
        winRate: 0.692,
        avgReturn: 0.0421,
        signals: 167
      }, {
        month: '2024-03',
        winRate: 0.651,
        avgReturn: 0.0356,
        signals: 189
      }, {
        month: '2024-04',
        winRate: 0.703,
        avgReturn: 0.0445,
        signals: 201
      }, {
        month: '2024-05',
        winRate: 0.688,
        avgReturn: 0.0412,
        signals: 178
      }, {
        month: '2024-06',
        winRate: 0.674,
        avgReturn: 0.0387,
        signals: 167
      }],
      modelPerformance: {
        neuralNetwork: {
          accuracy: 0.734,
          precision: 0.712,
          recall: 0.698
        },
        randomForest: {
          accuracy: 0.689,
          precision: 0.675,
          recall: 0.634
        },
        gradientBoosting: {
          accuracy: 0.756,
          precision: 0.743,
          recall: 0.721
        },
        ensemble: {
          accuracy: 0.778,
          precision: 0.765,
          recall: 0.743
        }
      },
      riskMetrics: {
        avgVolatility: 0.234,
        avgMaxDrawdown: 0.087,
        avgSharpeRatio: 1.24,
        avgValueAtRisk: 0.032,
        riskAdjustedReturn: 0.156
      }
    });
    const response =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[162]++, responseFormatter.success(performanceData, 'AI signals performance metrics retrieved successfully'));
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[163]++;
    res.json(response);
  } catch (error) {
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[164]++;
    logger.error(`❌ [${requestId}] Error retrieving AI performance metrics`, {
      error: error.message,
      errorStack: error.stack
    });
    const response =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[165]++, responseFormatter.error('Failed to retrieve AI performance metrics', 500, {
      details: error.message
    }));
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[166]++;
    res.status(500).json(response);
  }
});

// AI Signals Bulk Analysis - Multiple Symbols
/* istanbul ignore next */
cov_1tv38rcg0k().s[167]++;
router.post('/ai-bulk-analyze', async (req, res) => {
  /* istanbul ignore next */
  cov_1tv38rcg0k().f[21]++;
  const requestId =
  /* istanbul ignore next */
  (cov_1tv38rcg0k().s[168]++,
  /* istanbul ignore next */
  (cov_1tv38rcg0k().b[37][0]++, res.locals.requestId) ||
  /* istanbul ignore next */
  (cov_1tv38rcg0k().b[37][1]++, 'unknown'));
  const startTime =
  /* istanbul ignore next */
  (cov_1tv38rcg0k().s[169]++, Date.now());
  /* istanbul ignore next */
  cov_1tv38rcg0k().s[170]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[171]++, req.user.sub);
    const {
      symbols,
      timeframe =
      /* istanbul ignore next */
      (cov_1tv38rcg0k().b[38][0]++, '1d'),
      lookback =
      /* istanbul ignore next */
      (cov_1tv38rcg0k().b[39][0]++, 100)
    } =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[172]++, req.body);
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[173]++;
    if (
    /* istanbul ignore next */
    (cov_1tv38rcg0k().b[41][0]++, !symbols) ||
    /* istanbul ignore next */
    (cov_1tv38rcg0k().b[41][1]++, !Array.isArray(symbols)) ||
    /* istanbul ignore next */
    (cov_1tv38rcg0k().b[41][2]++, symbols.length === 0)) {
      /* istanbul ignore next */
      cov_1tv38rcg0k().b[40][0]++;
      cov_1tv38rcg0k().s[174]++;
      return res.status(400).json(responseFormatter.error('Valid symbols array is required', 400));
    } else
    /* istanbul ignore next */
    {
      cov_1tv38rcg0k().b[40][1]++;
    }
    cov_1tv38rcg0k().s[175]++;
    if (symbols.length > 20) {
      /* istanbul ignore next */
      cov_1tv38rcg0k().b[42][0]++;
      cov_1tv38rcg0k().s[176]++;
      return res.status(400).json(responseFormatter.error('Maximum 20 symbols allowed per request', 400));
    } else
    /* istanbul ignore next */
    {
      cov_1tv38rcg0k().b[42][1]++;
    }
    cov_1tv38rcg0k().s[177]++;
    logger.info(`🔄 [${requestId}] AI bulk analysis started`, {
      userId: userId ?
      /* istanbul ignore next */
      (cov_1tv38rcg0k().b[43][0]++, `${userId.substring(0, 8)}...`) :
      /* istanbul ignore next */
      (cov_1tv38rcg0k().b[43][1]++, 'unknown'),
      symbolCount: symbols.length,
      timeframe: timeframe,
      lookback: lookback
    });

    // Process all symbols concurrently
    const analysisPromises =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[178]++, symbols.map(symbol => {
      /* istanbul ignore next */
      cov_1tv38rcg0k().f[22]++;
      cov_1tv38rcg0k().s[179]++;
      return aiSignalsEngine.generateAISignals(symbol, timeframe, lookback);
    }));
    const results =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[180]++, await Promise.all(analysisPromises));

    // Process results
    const bulkAnalysis =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[181]++, {
      summary: {
        totalSymbols: symbols.length,
        successfulAnalysis: results.filter(r => {
          /* istanbul ignore next */
          cov_1tv38rcg0k().f[23]++;
          cov_1tv38rcg0k().s[182]++;
          return r.success;
        }).length,
        failedAnalysis: results.filter(r => {
          /* istanbul ignore next */
          cov_1tv38rcg0k().f[24]++;
          cov_1tv38rcg0k().s[183]++;
          return !r.success;
        }).length,
        strongBuySignals: results.filter(r => {
          /* istanbul ignore next */
          cov_1tv38rcg0k().f[25]++;
          cov_1tv38rcg0k().s[184]++;
          return /* istanbul ignore next */(cov_1tv38rcg0k().b[44][0]++, r.success) &&
          /* istanbul ignore next */
          (cov_1tv38rcg0k().b[44][1]++, r.signal.direction === 'STRONG_BUY');
        }).length,
        buySignals: results.filter(r => {
          /* istanbul ignore next */
          cov_1tv38rcg0k().f[26]++;
          cov_1tv38rcg0k().s[185]++;
          return /* istanbul ignore next */(cov_1tv38rcg0k().b[45][0]++, r.success) &&
          /* istanbul ignore next */
          (cov_1tv38rcg0k().b[45][1]++, r.signal.direction === 'BUY');
        }).length,
        holdSignals: results.filter(r => {
          /* istanbul ignore next */
          cov_1tv38rcg0k().f[27]++;
          cov_1tv38rcg0k().s[186]++;
          return /* istanbul ignore next */(cov_1tv38rcg0k().b[46][0]++, r.success) &&
          /* istanbul ignore next */
          (cov_1tv38rcg0k().b[46][1]++, r.signal.direction === 'HOLD');
        }).length,
        sellSignals: results.filter(r => {
          /* istanbul ignore next */
          cov_1tv38rcg0k().f[28]++;
          cov_1tv38rcg0k().s[187]++;
          return /* istanbul ignore next */(cov_1tv38rcg0k().b[47][0]++, r.success) &&
          /* istanbul ignore next */
          (cov_1tv38rcg0k().b[47][1]++, r.signal.direction === 'SELL');
        }).length,
        strongSellSignals: results.filter(r => {
          /* istanbul ignore next */
          cov_1tv38rcg0k().f[29]++;
          cov_1tv38rcg0k().s[188]++;
          return /* istanbul ignore next */(cov_1tv38rcg0k().b[48][0]++, r.success) &&
          /* istanbul ignore next */
          (cov_1tv38rcg0k().b[48][1]++, r.signal.direction === 'STRONG_SELL');
        }).length,
        avgConfidence: results.filter(r => {
          /* istanbul ignore next */
          cov_1tv38rcg0k().f[30]++;
          cov_1tv38rcg0k().s[189]++;
          return r.success;
        }).reduce((sum, r) => {
          /* istanbul ignore next */
          cov_1tv38rcg0k().f[31]++;
          cov_1tv38rcg0k().s[190]++;
          return sum + r.signal.confidence;
        }, 0) / results.filter(r => {
          /* istanbul ignore next */
          cov_1tv38rcg0k().f[32]++;
          cov_1tv38rcg0k().s[191]++;
          return r.success;
        }).length,
        avgStrength: results.filter(r => {
          /* istanbul ignore next */
          cov_1tv38rcg0k().f[33]++;
          cov_1tv38rcg0k().s[192]++;
          return r.success;
        }).reduce((sum, r) => {
          /* istanbul ignore next */
          cov_1tv38rcg0k().f[34]++;
          cov_1tv38rcg0k().s[193]++;
          return sum + r.signal.strength;
        }, 0) / results.filter(r => {
          /* istanbul ignore next */
          cov_1tv38rcg0k().f[35]++;
          cov_1tv38rcg0k().s[194]++;
          return r.success;
        }).length
      },
      results: results.map((result, index) => {
        /* istanbul ignore next */
        cov_1tv38rcg0k().f[36]++;
        cov_1tv38rcg0k().s[195]++;
        return {
          symbol: symbols[index],
          success: result.success,
          signal: result.success ?
          /* istanbul ignore next */
          (cov_1tv38rcg0k().b[49][0]++, {
            direction: result.signal.direction,
            confidence: result.signal.confidence,
            strength: result.signal.strength,
            score: result.signal.score
          }) :
          /* istanbul ignore next */
          (cov_1tv38rcg0k().b[49][1]++, null),
          riskScore: result.success ?
          /* istanbul ignore next */
          (cov_1tv38rcg0k().b[50][0]++, result.riskAssessment.riskScore) :
          /* istanbul ignore next */
          (cov_1tv38rcg0k().b[50][1]++, null),
          recommendations: result.success ?
          /* istanbul ignore next */
          (cov_1tv38rcg0k().b[51][0]++, result.recommendations.length) :
          /* istanbul ignore next */
          (cov_1tv38rcg0k().b[51][1]++, 0),
          error: result.success ?
          /* istanbul ignore next */
          (cov_1tv38rcg0k().b[52][0]++, null) :
          /* istanbul ignore next */
          (cov_1tv38rcg0k().b[52][1]++, result.error)
        };
      }),
      topOpportunities: results.filter(r => {
        /* istanbul ignore next */
        cov_1tv38rcg0k().f[37]++;
        cov_1tv38rcg0k().s[196]++;
        return r.success;
      }).map((result, index) => {
        /* istanbul ignore next */
        cov_1tv38rcg0k().f[38]++;
        cov_1tv38rcg0k().s[197]++;
        return {
          symbol: symbols[index],
          signal: result.signal,
          riskScore: result.riskAssessment.riskScore,
          recommendations: result.recommendations.length
        };
      }).sort((a, b) => {
        /* istanbul ignore next */
        cov_1tv38rcg0k().f[39]++;
        cov_1tv38rcg0k().s[198]++;
        return b.signal.confidence * b.signal.strength - a.signal.confidence * a.signal.strength;
      }).slice(0, 10),
      processingTime: Date.now() - startTime
    });
    const response =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[199]++, responseFormatter.success(bulkAnalysis, 'AI bulk analysis completed successfully'));
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[200]++;
    logger.info(`✅ [${requestId}] AI bulk analysis completed`, {
      totalSymbols: symbols.length,
      successful: bulkAnalysis.summary.successfulAnalysis,
      failed: bulkAnalysis.summary.failedAnalysis,
      strongBuySignals: bulkAnalysis.summary.strongBuySignals,
      avgConfidence: bulkAnalysis.summary.avgConfidence,
      processingTime: bulkAnalysis.processingTime
    });
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[201]++;
    res.json(response);
  } catch (error) {
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[202]++;
    logger.error(`❌ [${requestId}] AI bulk analysis failed`, {
      error: error.message,
      errorStack: error.stack,
      totalTime: Date.now() - startTime
    });
    const response =
    /* istanbul ignore next */
    (cov_1tv38rcg0k().s[203]++, responseFormatter.error('Failed to perform AI bulk analysis', 500, {
      details: error.message
    }));
    /* istanbul ignore next */
    cov_1tv38rcg0k().s[204]++;
    res.status(500).json(response);
  }
});
/* istanbul ignore next */
cov_1tv38rcg0k().s[205]++;
module.exports = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,