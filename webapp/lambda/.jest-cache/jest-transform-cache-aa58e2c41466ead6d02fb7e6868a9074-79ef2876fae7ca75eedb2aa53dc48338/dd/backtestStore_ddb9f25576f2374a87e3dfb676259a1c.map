{"version":3,"names":["cov_1xdsp17c8n","actualCoverage","fs","s","require","path","STORE_FILE","join","__dirname","loadStrategies","f","existsSync","b","JSON","parse","readFileSync","saveStrategies","strategies","writeFileSync","stringify","addStrategy","strategy","id","Date","now","toString","push","getStrategy","find","deleteStrategy","filter","module","exports"],"sources":["backtestStore.js"],"sourcesContent":["const fs = require('fs');\nconst path = require('path');\n\nconst STORE_FILE = path.join(__dirname, '../user_backtest_store.json');\n\nfunction loadStrategies() {\n  if (!fs.existsSync(STORE_FILE)) return [];\n  return JSON.parse(fs.readFileSync(STORE_FILE, 'utf8'));\n}\n\nfunction saveStrategies(strategies) {\n  fs.writeFileSync(STORE_FILE, JSON.stringify(strategies, null, 2));\n}\n\nfunction addStrategy(strategy) {\n  const strategies = loadStrategies();\n  strategy.id = Date.now().toString();\n  strategies.push(strategy);\n  saveStrategies(strategies);\n  return strategy;\n}\n\nfunction getStrategy(id) {\n  return loadStrategies().find(s => s.id === id);\n}\n\nfunction deleteStrategy(id) {\n  let strategies = loadStrategies();\n  strategies = strategies.filter(s => s.id !== id);\n  saveStrategies(strategies);\n}\n\nmodule.exports = {\n  loadStrategies,\n  saveStrategies,\n  addStrategy,\n  getStrategy,\n  deleteStrategy\n};\n"],"mappings":"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","ignoreList":[]}