{"version":3,"names":["cov_cx34umpbj","actualCoverage","REQUIRED_ENV_VARS","s","name","description","required","process","env","NODE_ENV","sensitive","default","EnvironmentValidator","constructor","f","validationResults","isValid","validateEnvironment","console","log","envVar","result","validateVariable","push","b","logResults","results","missingRequired","filter","r","warnings","warning","value","error","hasValue","minLength","length","match","includes","repeat","validCount","warningCount","errorCount","status","valueStatus","getEnvironmentSummary","valid","errors","total","module","exports"],"sources":["environmentValidator.js"],"sourcesContent":["// Environment Variable Validator\n// This module validates that all required environment variables are set\n\nconst REQUIRED_ENV_VARS = [\n  {\n    name: 'API_KEY_ENCRYPTION_SECRET_ARN',\n    description: 'ARN of the Secrets Manager secret containing API key encryption secret',\n    required: process.env.NODE_ENV === 'production',\n    sensitive: true\n  },\n  {\n    name: 'DB_SECRET_ARN',\n    description: 'ARN of the Secrets Manager secret containing database credentials',\n    required: true,\n    sensitive: true\n  },\n  {\n    name: 'DB_ENDPOINT',\n    description: 'RDS database endpoint',\n    required: true,\n    sensitive: false\n  },\n  {\n    name: 'COGNITO_SECRET_ARN',\n    description: 'ARN of the Secrets Manager secret containing Cognito configuration',\n    required: false,\n    sensitive: true\n  },\n  {\n    name: 'COGNITO_USER_POOL_ID',\n    description: 'Cognito User Pool ID for authentication',\n    required: false,\n    sensitive: false\n  },\n  {\n    name: 'COGNITO_CLIENT_ID',\n    description: 'Cognito App Client ID for authentication',\n    required: false,\n    sensitive: false\n  },\n  {\n    name: 'WEBAPP_AWS_REGION',\n    description: 'AWS region for the webapp deployment',\n    required: true,\n    sensitive: false\n  },\n  {\n    name: 'NODE_ENV',\n    description: 'Node.js environment (development, staging, production)',\n    required: false,\n    sensitive: false,\n    default: 'development'\n  }\n];\n\nclass EnvironmentValidator {\n  constructor() {\n    this.validationResults = [];\n    this.isValid = true;\n  }\n\n  validateEnvironment() {\n    console.log('🔍 Validating environment variables...');\n    \n    this.validationResults = [];\n    this.isValid = true;\n\n    for (const envVar of REQUIRED_ENV_VARS) {\n      const result = this.validateVariable(envVar);\n      this.validationResults.push(result);\n      \n      if (!result.isValid) {\n        this.isValid = false;\n      }\n    }\n\n    this.logResults();\n    return {\n      isValid: this.isValid,\n      results: this.validationResults,\n      missingRequired: this.validationResults.filter(r => !r.isValid && r.required),\n      warnings: this.validationResults.filter(r => r.warning)\n    };\n  }\n\n  validateVariable(envVar) {\n    const value = process.env[envVar.name];\n    const result = {\n      name: envVar.name,\n      description: envVar.description,\n      required: envVar.required,\n      isValid: true,\n      warning: null,\n      error: null,\n      hasValue: !!value\n    };\n\n    // Check if required variable is missing\n    if (envVar.required && !value) {\n      result.isValid = false;\n      result.error = `Required environment variable ${envVar.name} is not set`;\n      return result;\n    }\n\n    // Check if optional variable is missing but has default\n    if (!envVar.required && !value && envVar.default) {\n      result.warning = `Using default value for ${envVar.name}: ${envVar.default}`;\n      return result;\n    }\n\n    // Skip further validation if variable is not set and not required\n    if (!value) {\n      return result;\n    }\n\n    // Check minimum length\n    if (envVar.minLength && value.length < envVar.minLength) {\n      result.isValid = false;\n      result.error = `${envVar.name} must be at least ${envVar.minLength} characters long`;\n      return result;\n    }\n\n    // Additional validation for specific variables\n    switch (envVar.name) {\n      case 'COGNITO_USER_POOL_ID':\n        if (!value.match(/^[a-zA-Z0-9-_]+$/)) {\n          result.warning = `${envVar.name} format may be invalid`;\n        }\n        break;\n      case 'API_KEY_ENCRYPTION_SECRET_ARN':\n      case 'DB_SECRET_ARN':\n        if (!value.includes('arn:aws:secretsmanager:')) {\n          result.warning = `${envVar.name} does not appear to be a valid Secrets Manager ARN`;\n        }\n        break;\n      case 'WEBAPP_AWS_REGION':\n        if (!value.match(/^[a-z0-9-]+$/)) {\n          result.warning = `${envVar.name} format may be invalid`;\n        }\n        break;\n    }\n\n    return result;\n  }\n\n  logResults() {\n    console.log('\\n📋 Environment Variable Validation Results:');\n    console.log('=' .repeat(50));\n\n    let validCount = 0;\n    let warningCount = 0;\n    let errorCount = 0;\n\n    for (const result of this.validationResults) {\n      const status = result.isValid ? '✅' : '❌';\n      const valueStatus = result.hasValue ? \n        (result.required ? '[SET]' : '[SET]') : \n        (result.required ? '[MISSING]' : '[OPTIONAL]');\n      \n      console.log(`${status} ${result.name} ${valueStatus}`);\n      \n      if (result.error) {\n        console.log(`   ❌ Error: ${result.error}`);\n        errorCount++;\n      } else if (result.warning) {\n        console.log(`   ⚠️  Warning: ${result.warning}`);\n        warningCount++;\n      } else {\n        validCount++;\n      }\n    }\n\n    console.log('=' .repeat(50));\n    console.log(`📊 Summary: ${validCount} valid, ${warningCount} warnings, ${errorCount} errors`);\n    \n    if (this.isValid) {\n      console.log('✅ All required environment variables are configured correctly');\n    } else {\n      console.log('❌ Some required environment variables are missing or invalid');\n    }\n    console.log('');\n  }\n\n  getEnvironmentSummary() {\n    return {\n      valid: this.validationResults.filter(r => r.isValid).length,\n      warnings: this.validationResults.filter(r => r.warning).length,\n      errors: this.validationResults.filter(r => !r.isValid).length,\n      total: this.validationResults.length\n    };\n  }\n}\n\n// Export singleton instance\nmodule.exports = new EnvironmentValidator();"],"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","ignoreList":[]}