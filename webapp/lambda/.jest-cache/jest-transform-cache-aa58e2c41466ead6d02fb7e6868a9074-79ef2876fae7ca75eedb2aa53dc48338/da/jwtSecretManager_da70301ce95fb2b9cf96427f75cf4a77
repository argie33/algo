58de883cd295fa836df9c38d973fda81
/* istanbul ignore next */
function cov_vq5sls836() {
  var path = "/home/stocks/algo/webapp/lambda/utils/jwtSecretManager.js";
  var hash = "1ef919e81f8f847e088e0ee1a893449bf07b540b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/stocks/algo/webapp/lambda/utils/jwtSecretManager.js",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 32
        }
      },
      "1": {
        start: {
          line: 7,
          column: 98
        },
        end: {
          line: 7,
          column: 140
        }
      },
      "2": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 13,
          column: 11
        }
      },
      "3": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 30
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 35
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 32
        }
      },
      "6": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 26,
          column: 9
        }
      },
      "7": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 36
        }
      },
      "8": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 57
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 32
        }
      },
      "10": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "11": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 68
        }
      },
      "12": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 45,
          column: 13
        }
      },
      "13": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 77
        }
      },
      "14": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 56
        }
      },
      "15": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 53
        }
      },
      "16": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 38
        }
      },
      "17": {
        start: {
          line: 48,
          column: 30
        },
        end: {
          line: 48,
          column: 56
        }
      },
      "18": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 58,
          column: 13
        }
      },
      "19": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 81
        }
      },
      "20": {
        start: {
          line: 51,
          column: 31
        },
        end: {
          line: 51,
          column: 82
        }
      },
      "21": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 57,
          column: 17
        }
      },
      "22": {
        start: {
          line: 53,
          column: 20
        },
        end: {
          line: 53,
          column: 44
        }
      },
      "23": {
        start: {
          line: 54,
          column: 20
        },
        end: {
          line: 54,
          column: 49
        }
      },
      "24": {
        start: {
          line: 55,
          column: 20
        },
        end: {
          line: 55,
          column: 76
        }
      },
      "25": {
        start: {
          line: 56,
          column: 20
        },
        end: {
          line: 56,
          column: 34
        }
      },
      "26": {
        start: {
          line: 61,
          column: 38
        },
        end: {
          line: 61,
          column: 94
        }
      },
      "27": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 100
        }
      },
      "28": {
        start: {
          line: 64,
          column: 35
        },
        end: {
          line: 64,
          column: 94
        }
      },
      "29": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 70,
          column: 13
        }
      },
      "30": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 48
        }
      },
      "31": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 67,
          column: 53
        }
      },
      "32": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 68,
          column: 76
        }
      },
      "33": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 69,
          column: 38
        }
      },
      "34": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 80
        }
      },
      "35": {
        start: {
          line: 74,
          column: 30
        },
        end: {
          line: 74,
          column: 79
        }
      },
      "36": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 39
        }
      },
      "37": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 44
        }
      },
      "38": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 63
        }
      },
      "39": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 29
        }
      },
      "40": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 79
        }
      },
      "41": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 92,
          column: 13
        }
      },
      "42": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 87,
          column: 78
        }
      },
      "43": {
        start: {
          line: 88,
          column: 35
        },
        end: {
          line: 88,
          column: 73
        }
      },
      "44": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 89,
          column: 44
        }
      },
      "45": {
        start: {
          line: 90,
          column: 16
        },
        end: {
          line: 90,
          column: 49
        }
      },
      "46": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 91,
          column: 34
        }
      },
      "47": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 82
        }
      },
      "48": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 125,
          column: 9
        }
      },
      "49": {
        start: {
          line: 103,
          column: 28
        },
        end: {
          line: 103,
          column: 77
        }
      },
      "50": {
        start: {
          line: 104,
          column: 29
        },
        end: {
          line: 104,
          column: 68
        }
      },
      "51": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 108,
          column: 13
        }
      },
      "52": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 107,
          column: 57
        }
      },
      "53": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 117,
          column: 13
        }
      },
      "54": {
        start: {
          line: 112,
          column: 35
        },
        end: {
          line: 112,
          column: 68
        }
      },
      "55": {
        start: {
          line: 113,
          column: 16
        },
        end: {
          line: 113,
          column: 86
        }
      },
      "56": {
        start: {
          line: 116,
          column: 16
        },
        end: {
          line: 116,
          column: 45
        }
      },
      "57": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 123,
          column: 13
        }
      },
      "58": {
        start: {
          line: 121,
          column: 16
        },
        end: {
          line: 121,
          column: 64
        }
      },
      "59": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 122,
          column: 28
        }
      },
      "60": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 24
        }
      },
      "61": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 169,
          column: 9
        }
      },
      "62": {
        start: {
          line: 134,
          column: 30
        },
        end: {
          line: 134,
          column: 68
        }
      },
      "63": {
        start: {
          line: 136,
          column: 31
        },
        end: {
          line: 142,
          column: 13
        }
      },
      "64": {
        start: {
          line: 144,
          column: 34
        },
        end: {
          line: 154,
          column: 14
        }
      },
      "65": {
        start: {
          line: 156,
          column: 29
        },
        end: {
          line: 156,
          column: 74
        }
      },
      "66": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 69
        }
      },
      "67": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 162,
          column: 13
        }
      },
      "68": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 161,
          column: 102
        }
      },
      "69": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 29
        }
      },
      "70": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 75
        }
      },
      "71": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 24
        }
      },
      "72": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "73": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 36
        }
      },
      "74": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 182,
          column: 9
        }
      },
      "75": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 181,
          column: 56
        }
      },
      "76": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 184,
          column: 35
        }
      },
      "77": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 223,
          column: 9
        }
      },
      "78": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 62
        }
      },
      "79": {
        start: {
          line: 194,
          column: 30
        },
        end: {
          line: 194,
          column: 68
        }
      },
      "80": {
        start: {
          line: 195,
          column: 31
        },
        end: {
          line: 195,
          column: 117
        }
      },
      "81": {
        start: {
          line: 197,
          column: 31
        },
        end: {
          line: 204,
          column: 13
        }
      },
      "82": {
        start: {
          line: 206,
          column: 34
        },
        end: {
          line: 209,
          column: 14
        }
      },
      "83": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 211,
          column: 58
        }
      },
      "84": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 214,
          column: 44
        }
      },
      "85": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 215,
          column: 39
        }
      },
      "86": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 61
        }
      },
      "87": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 29
        }
      },
      "88": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 221,
          column: 74
        }
      },
      "89": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 24
        }
      },
      "90": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 236,
          column: 9
        }
      },
      "91": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 235,
          column: 14
        }
      },
      "92": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 244,
          column: 9
        }
      },
      "93": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 243,
          column: 14
        }
      },
      "94": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 252,
          column: 9
        }
      },
      "95": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 251,
          column: 14
        }
      },
      "96": {
        start: {
          line: 255,
          column: 28
        },
        end: {
          line: 255,
          column: 48
        }
      },
      "97": {
        start: {
          line: 256,
          column: 29
        },
        end: {
          line: 256,
          column: 56
        }
      },
      "98": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 264,
          column: 9
        }
      },
      "99": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 263,
          column: 14
        }
      },
      "100": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 271,
          column: 10
        }
      },
      "101": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 297,
          column: 9
        }
      },
      "102": {
        start: {
          line: 279,
          column: 12
        },
        end: {
          line: 279,
          column: 36
        }
      },
      "103": {
        start: {
          line: 281,
          column: 31
        },
        end: {
          line: 281,
          column: 79
        }
      },
      "104": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 289,
          column: 14
        }
      },
      "105": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 296,
          column: 14
        }
      },
      "106": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 304,
          column: 35
        }
      },
      "107": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 305,
          column: 30
        }
      },
      "108": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 306,
          column: 32
        }
      },
      "109": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 307,
          column: 51
        }
      },
      "110": {
        start: {
          line: 312,
          column: 25
        },
        end: {
          line: 312,
          column: 47
        }
      },
      "111": {
        start: {
          line: 314,
          column: 0
        },
        end: {
          line: 314,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 18
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 23
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        loc: {
          start: {
            line: 35,
            column: 35
          },
          end: {
            line: 96,
            column: 5
          }
        },
        line: 35
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        },
        loc: {
          start: {
            line: 101,
            column: 50
          },
          end: {
            line: 126,
            column: 5
          }
        },
        line: 101
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 131,
            column: 4
          },
          end: {
            line: 131,
            column: 5
          }
        },
        loc: {
          start: {
            line: 131,
            column: 42
          },
          end: {
            line: 170,
            column: 5
          }
        },
        line: 131
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 175,
            column: 4
          },
          end: {
            line: 175,
            column: 5
          }
        },
        loc: {
          start: {
            line: 175,
            column: 25
          },
          end: {
            line: 185,
            column: 5
          }
        },
        line: 175
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 190,
            column: 4
          },
          end: {
            line: 190,
            column: 5
          }
        },
        loc: {
          start: {
            line: 190,
            column: 28
          },
          end: {
            line: 224,
            column: 5
          }
        },
        line: 190
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 229,
            column: 4
          },
          end: {
            line: 229,
            column: 5
          }
        },
        loc: {
          start: {
            line: 229,
            column: 35
          },
          end: {
            line: 272,
            column: 5
          }
        },
        line: 229
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 277,
            column: 4
          },
          end: {
            line: 277,
            column: 5
          }
        },
        loc: {
          start: {
            line: 277,
            column: 26
          },
          end: {
            line: 298,
            column: 5
          }
        },
        line: 277
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 303,
            column: 4
          },
          end: {
            line: 303,
            column: 5
          }
        },
        loc: {
          start: {
            line: 303,
            column: 17
          },
          end: {
            line: 308,
            column: 5
          }
        },
        line: 303
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 12,
            column: 20
          },
          end: {
            line: 12,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 20
          },
          end: {
            line: 12,
            column: 49
          }
        }, {
          start: {
            line: 12,
            column: 53
          },
          end: {
            line: 12,
            column: 75
          }
        }, {
          start: {
            line: 12,
            column: 79
          },
          end: {
            line: 12,
            column: 90
          }
        }],
        line: 12
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 45,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 45,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "3": {
        loc: {
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "4": {
        loc: {
          start: {
            line: 52,
            column: 16
          },
          end: {
            line: 57,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 16
          },
          end: {
            line: 57,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "5": {
        loc: {
          start: {
            line: 61,
            column: 63
          },
          end: {
            line: 61,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 63
          },
          end: {
            line: 61,
            column: 83
          }
        }, {
          start: {
            line: 61,
            column: 87
          },
          end: {
            line: 61,
            column: 92
          }
        }],
        line: 61
      },
      "6": {
        loc: {
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 70,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 70,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "7": {
        loc: {
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 92,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 92,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "8": {
        loc: {
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 108,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 108,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "9": {
        loc: {
          start: {
            line: 113,
            column: 23
          },
          end: {
            line: 113,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 23
          },
          end: {
            line: 113,
            column: 44
          }
        }, {
          start: {
            line: 113,
            column: 48
          },
          end: {
            line: 113,
            column: 65
          }
        }, {
          start: {
            line: 113,
            column: 69
          },
          end: {
            line: 113,
            column: 85
          }
        }],
        line: 113
      },
      "10": {
        loc: {
          start: {
            line: 120,
            column: 12
          },
          end: {
            line: 123,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 12
          },
          end: {
            line: 123,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "11": {
        loc: {
          start: {
            line: 146,
            column: 75
          },
          end: {
            line: 146,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 75
          },
          end: {
            line: 146,
            column: 95
          }
        }, {
          start: {
            line: 146,
            column: 99
          },
          end: {
            line: 146,
            column: 104
          }
        }],
        line: 146
      },
      "12": {
        loc: {
          start: {
            line: 151,
            column: 49
          },
          end: {
            line: 151,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 151,
            column: 49
          },
          end: {
            line: 151,
            column: 69
          }
        }, {
          start: {
            line: 151,
            column: 73
          },
          end: {
            line: 151,
            column: 78
          }
        }],
        line: 151
      },
      "13": {
        loc: {
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 162,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 12
          },
          end: {
            line: 162,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "14": {
        loc: {
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "15": {
        loc: {
          start: {
            line: 180,
            column: 8
          },
          end: {
            line: 182,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 8
          },
          end: {
            line: 182,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 180
      },
      "16": {
        loc: {
          start: {
            line: 195,
            column: 31
          },
          end: {
            line: 195,
            column: 117
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 195,
            column: 31
          },
          end: {
            line: 195,
            column: 57
          }
        }, {
          start: {
            line: 195,
            column: 61
          },
          end: {
            line: 195,
            column: 117
          }
        }],
        line: 195
      },
      "17": {
        loc: {
          start: {
            line: 195,
            column: 86
          },
          end: {
            line: 195,
            column: 115
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 195,
            column: 86
          },
          end: {
            line: 195,
            column: 106
          }
        }, {
          start: {
            line: 195,
            column: 110
          },
          end: {
            line: 195,
            column: 115
          }
        }],
        line: 195
      },
      "18": {
        loc: {
          start: {
            line: 200,
            column: 73
          },
          end: {
            line: 200,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 200,
            column: 73
          },
          end: {
            line: 200,
            column: 92
          }
        }, {
          start: {
            line: 200,
            column: 96
          },
          end: {
            line: 200,
            column: 98
          }
        }],
        line: 200
      },
      "19": {
        loc: {
          start: {
            line: 230,
            column: 8
          },
          end: {
            line: 236,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 8
          },
          end: {
            line: 236,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 230
      },
      "20": {
        loc: {
          start: {
            line: 230,
            column: 12
          },
          end: {
            line: 230,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 230,
            column: 12
          },
          end: {
            line: 230,
            column: 19
          }
        }, {
          start: {
            line: 230,
            column: 23
          },
          end: {
            line: 230,
            column: 49
          }
        }],
        line: 230
      },
      "21": {
        loc: {
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 244,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 244,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 238
      },
      "22": {
        loc: {
          start: {
            line: 246,
            column: 8
          },
          end: {
            line: 252,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 8
          },
          end: {
            line: 252,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 246
      },
      "23": {
        loc: {
          start: {
            line: 258,
            column: 8
          },
          end: {
            line: 264,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 258,
            column: 8
          },
          end: {
            line: 264,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 258
      },
      "24": {
        loc: {
          start: {
            line: 285,
            column: 24
          },
          end: {
            line: 285,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 285,
            column: 49
          },
          end: {
            line: 285,
            column: 62
          }
        }, {
          start: {
            line: 285,
            column: 65
          },
          end: {
            line: 285,
            column: 82
          }
        }],
        line: 285
      },
      "25": {
        loc: {
          start: {
            line: 286,
            column: 24
          },
          end: {
            line: 286,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 286,
            column: 46
          },
          end: {
            line: 286,
            column: 72
          }
        }, {
          start: {
            line: 286,
            column: 75
          },
          end: {
            line: 286,
            column: 76
          }
        }],
        line: 286
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1ef919e81f8f847e088e0ee1a893449bf07b540b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_vq5sls836 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_vq5sls836();
/**
 * JWT Secret Management Service
 * Manages JWT secrets for API key service token generation and validation
 */

const crypto =
/* istanbul ignore next */
(cov_vq5sls836().s[0]++, require('crypto'));
const {
  SecretsManagerClient,
  GetSecretValueCommand,
  CreateSecretCommand,
  UpdateSecretCommand
} =
/* istanbul ignore next */
(cov_vq5sls836().s[1]++, require('@aws-sdk/client-secrets-manager'));
class JwtSecretManager {
  constructor() {
    /* istanbul ignore next */
    cov_vq5sls836().f[0]++;
    cov_vq5sls836().s[2]++;
    this.secretsManager = new SecretsManagerClient({
      region:
      /* istanbul ignore next */
      (cov_vq5sls836().b[0][0]++, process.env.WEBAPP_AWS_REGION) ||
      /* istanbul ignore next */
      (cov_vq5sls836().b[0][1]++, process.env.AWS_REGION) ||
      /* istanbul ignore next */
      (cov_vq5sls836().b[0][2]++, 'us-east-1')
    });
    /* istanbul ignore next */
    cov_vq5sls836().s[3]++;
    this.jwtSecret = null;
    /* istanbul ignore next */
    cov_vq5sls836().s[4]++;
    this.jwtSecretCache = null;
    /* istanbul ignore next */
    cov_vq5sls836().s[5]++;
    this.initPromise = null;
  }

  /**
   * Initialize JWT secret management
   */
  async initialize() {
    /* istanbul ignore next */
    cov_vq5sls836().f[1]++;
    cov_vq5sls836().s[6]++;
    if (this.initPromise) {
      /* istanbul ignore next */
      cov_vq5sls836().b[1][0]++;
      cov_vq5sls836().s[7]++;
      return this.initPromise;
    } else
    /* istanbul ignore next */
    {
      cov_vq5sls836().b[1][1]++;
    }
    cov_vq5sls836().s[8]++;
    this.initPromise = this._loadOrCreateJwtSecret();
    /* istanbul ignore next */
    cov_vq5sls836().s[9]++;
    return this.initPromise;
  }

  /**
   * Load existing JWT secret or create a new one
   */
  async _loadOrCreateJwtSecret() {
    /* istanbul ignore next */
    cov_vq5sls836().f[2]++;
    cov_vq5sls836().s[10]++;
    try {
      /* istanbul ignore next */
      cov_vq5sls836().s[11]++;
      console.log('🔐 Initializing JWT secret management...');

      // First try to load from environment (for local development)
      /* istanbul ignore next */
      cov_vq5sls836().s[12]++;
      if (process.env.JWT_SECRET) {
        /* istanbul ignore next */
        cov_vq5sls836().b[2][0]++;
        cov_vq5sls836().s[13]++;
        console.log('🔧 Using JWT secret from environment variable');
        /* istanbul ignore next */
        cov_vq5sls836().s[14]++;
        this.jwtSecret = process.env.JWT_SECRET;
        /* istanbul ignore next */
        cov_vq5sls836().s[15]++;
        this.jwtSecretCache = this.jwtSecret;
        /* istanbul ignore next */
        cov_vq5sls836().s[16]++;
        return this.jwtSecret;
      } else
      /* istanbul ignore next */
      {
        cov_vq5sls836().b[2][1]++;
      }

      // Try to load from AWS Secrets Manager
      const secretArn =
      /* istanbul ignore next */
      (cov_vq5sls836().s[17]++, process.env.JWT_SECRET_ARN);
      /* istanbul ignore next */
      cov_vq5sls836().s[18]++;
      if (secretArn) {
        /* istanbul ignore next */
        cov_vq5sls836().b[3][0]++;
        cov_vq5sls836().s[19]++;
        console.log('📡 Loading JWT secret from AWS Secrets Manager...');
        const secret =
        /* istanbul ignore next */
        (cov_vq5sls836().s[20]++, await this._loadSecretFromSecretsManager(secretArn));
        /* istanbul ignore next */
        cov_vq5sls836().s[21]++;
        if (secret) {
          /* istanbul ignore next */
          cov_vq5sls836().b[4][0]++;
          cov_vq5sls836().s[22]++;
          this.jwtSecret = secret;
          /* istanbul ignore next */
          cov_vq5sls836().s[23]++;
          this.jwtSecretCache = secret;
          /* istanbul ignore next */
          cov_vq5sls836().s[24]++;
          console.log('✅ JWT secret loaded from Secrets Manager');
          /* istanbul ignore next */
          cov_vq5sls836().s[25]++;
          return secret;
        } else
        /* istanbul ignore next */
        {
          cov_vq5sls836().b[4][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_vq5sls836().b[3][1]++;
      }

      // If no ARN provided, try default secret name
      const defaultSecretName =
      /* istanbul ignore next */
      (cov_vq5sls836().s[26]++, `stocks-app-jwt-secret-${
      /* istanbul ignore next */
      (cov_vq5sls836().b[5][0]++, process.env.NODE_ENV) ||
      /* istanbul ignore next */
      (cov_vq5sls836().b[5][1]++, 'dev')}`);
      /* istanbul ignore next */
      cov_vq5sls836().s[27]++;
      console.log(`🔍 Attempting to load JWT secret with default name: ${defaultSecretName}`);
      const existingSecret =
      /* istanbul ignore next */
      (cov_vq5sls836().s[28]++, await this._loadSecretFromSecretsManager(defaultSecretName));
      /* istanbul ignore next */
      cov_vq5sls836().s[29]++;
      if (existingSecret) {
        /* istanbul ignore next */
        cov_vq5sls836().b[6][0]++;
        cov_vq5sls836().s[30]++;
        this.jwtSecret = existingSecret;
        /* istanbul ignore next */
        cov_vq5sls836().s[31]++;
        this.jwtSecretCache = existingSecret;
        /* istanbul ignore next */
        cov_vq5sls836().s[32]++;
        console.log('✅ JWT secret loaded from default secret name');
        /* istanbul ignore next */
        cov_vq5sls836().s[33]++;
        return existingSecret;
      } else
      /* istanbul ignore next */
      {
        cov_vq5sls836().b[6][1]++;
      }

      // Create new JWT secret if none exists
      cov_vq5sls836().s[34]++;
      console.log('🆕 No existing JWT secret found, creating new one...');
      const newSecret =
      /* istanbul ignore next */
      (cov_vq5sls836().s[35]++, await this._createNewJwtSecret(defaultSecretName));
      /* istanbul ignore next */
      cov_vq5sls836().s[36]++;
      this.jwtSecret = newSecret;
      /* istanbul ignore next */
      cov_vq5sls836().s[37]++;
      this.jwtSecretCache = newSecret;
      /* istanbul ignore next */
      cov_vq5sls836().s[38]++;
      console.log('✅ New JWT secret created and cached');
      /* istanbul ignore next */
      cov_vq5sls836().s[39]++;
      return newSecret;
    } catch (error) {
      /* istanbul ignore next */
      cov_vq5sls836().s[40]++;
      console.error('❌ Failed to initialize JWT secret:', error.message);

      // Fallback for development: generate temporary secret
      /* istanbul ignore next */
      cov_vq5sls836().s[41]++;
      if (process.env.NODE_ENV !== 'production') {
        /* istanbul ignore next */
        cov_vq5sls836().b[7][0]++;
        cov_vq5sls836().s[42]++;
        console.warn('⚠️ Using temporary JWT secret for development');
        const tempSecret =
        /* istanbul ignore next */
        (cov_vq5sls836().s[43]++, crypto.randomBytes(64).toString('hex'));
        /* istanbul ignore next */
        cov_vq5sls836().s[44]++;
        this.jwtSecret = tempSecret;
        /* istanbul ignore next */
        cov_vq5sls836().s[45]++;
        this.jwtSecretCache = tempSecret;
        /* istanbul ignore next */
        cov_vq5sls836().s[46]++;
        return tempSecret;
      } else
      /* istanbul ignore next */
      {
        cov_vq5sls836().b[7][1]++;
      }
      cov_vq5sls836().s[47]++;
      throw new Error(`JWT secret initialization failed: ${error.message}`);
    }
  }

  /**
   * Load secret from AWS Secrets Manager
   */
  async _loadSecretFromSecretsManager(secretId) {
    /* istanbul ignore next */
    cov_vq5sls836().f[3]++;
    cov_vq5sls836().s[48]++;
    try {
      const command =
      /* istanbul ignore next */
      (cov_vq5sls836().s[49]++, new GetSecretValueCommand({
        SecretId: secretId
      }));
      const response =
      /* istanbul ignore next */
      (cov_vq5sls836().s[50]++, await this.secretsManager.send(command));
      /* istanbul ignore next */
      cov_vq5sls836().s[51]++;
      if (!response.SecretString) {
        /* istanbul ignore next */
        cov_vq5sls836().b[8][0]++;
        cov_vq5sls836().s[52]++;
        throw new Error('Secret value is empty');
      } else
      /* istanbul ignore next */
      {
        cov_vq5sls836().b[8][1]++;
      }

      // Try to parse as JSON first
      cov_vq5sls836().s[53]++;
      try {
        const secretData =
        /* istanbul ignore next */
        (cov_vq5sls836().s[54]++, JSON.parse(response.SecretString));
        /* istanbul ignore next */
        cov_vq5sls836().s[55]++;
        return /* istanbul ignore next */(cov_vq5sls836().b[9][0]++, secretData.JWT_SECRET) ||
        /* istanbul ignore next */
        (cov_vq5sls836().b[9][1]++, secretData.secret) ||
        /* istanbul ignore next */
        (cov_vq5sls836().b[9][2]++, secretData.value);
      } catch (parseError) {
        /* istanbul ignore next */
        cov_vq5sls836().s[56]++;
        // If not JSON, use as plain string
        return response.SecretString;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_vq5sls836().s[57]++;
      if (error.name === 'ResourceNotFoundException') {
        /* istanbul ignore next */
        cov_vq5sls836().b[10][0]++;
        cov_vq5sls836().s[58]++;
        console.log(`📝 Secret not found: ${secretId}`);
        /* istanbul ignore next */
        cov_vq5sls836().s[59]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_vq5sls836().b[10][1]++;
      }
      cov_vq5sls836().s[60]++;
      throw error;
    }
  }

  /**
   * Create new JWT secret in AWS Secrets Manager
   */
  async _createNewJwtSecret(secretName) {
    /* istanbul ignore next */
    cov_vq5sls836().f[4]++;
    cov_vq5sls836().s[61]++;
    try {
      // Generate cryptographically secure secret
      const jwtSecret =
      /* istanbul ignore next */
      (cov_vq5sls836().s[62]++, crypto.randomBytes(64).toString('hex'));
      const secretData =
      /* istanbul ignore next */
      (cov_vq5sls836().s[63]++, {
        JWT_SECRET: jwtSecret,
        created_at: new Date().toISOString(),
        purpose: 'API key service JWT token signing',
        algorithm: 'HS256',
        key_length: jwtSecret.length
      });
      const createCommand =
      /* istanbul ignore next */
      (cov_vq5sls836().s[64]++, new CreateSecretCommand({
        Name: secretName,
        Description: `JWT secret for stocks app API key service (${
        /* istanbul ignore next */
        (cov_vq5sls836().b[11][0]++, process.env.NODE_ENV) ||
        /* istanbul ignore next */
        (cov_vq5sls836().b[11][1]++, 'dev')})`,
        SecretString: JSON.stringify(secretData),
        Tags: [{
          Key: 'Application',
          Value: 'stocks-app'
        }, {
          Key: 'Component',
          Value: 'api-key-service'
        }, {
          Key: 'Environment',
          Value:
          /* istanbul ignore next */
          (cov_vq5sls836().b[12][0]++, process.env.NODE_ENV) ||
          /* istanbul ignore next */
          (cov_vq5sls836().b[12][1]++, 'dev')
        }, {
          Key: 'Purpose',
          Value: 'jwt-signing'
        }]
      }));
      const response =
      /* istanbul ignore next */
      (cov_vq5sls836().s[65]++, await this.secretsManager.send(createCommand));
      /* istanbul ignore next */
      cov_vq5sls836().s[66]++;
      console.log(`✅ Created new JWT secret: ${response.ARN}`);

      // Set environment variable for future use
      /* istanbul ignore next */
      cov_vq5sls836().s[67]++;
      if (!process.env.JWT_SECRET_ARN) {
        /* istanbul ignore next */
        cov_vq5sls836().b[13][0]++;
        cov_vq5sls836().s[68]++;
        console.log(`💡 Consider setting JWT_SECRET_ARN=${response.ARN} in your environment`);
      } else
      /* istanbul ignore next */
      {
        cov_vq5sls836().b[13][1]++;
      }
      cov_vq5sls836().s[69]++;
      return jwtSecret;
    } catch (error) {
      /* istanbul ignore next */
      cov_vq5sls836().s[70]++;
      console.error('❌ Failed to create JWT secret:', error.message);
      /* istanbul ignore next */
      cov_vq5sls836().s[71]++;
      throw error;
    }
  }

  /**
   * Get JWT secret (cached)
   */
  async getJwtSecret() {
    /* istanbul ignore next */
    cov_vq5sls836().f[5]++;
    cov_vq5sls836().s[72]++;
    if (!this.jwtSecretCache) {
      /* istanbul ignore next */
      cov_vq5sls836().b[14][0]++;
      cov_vq5sls836().s[73]++;
      await this.initialize();
    } else
    /* istanbul ignore next */
    {
      cov_vq5sls836().b[14][1]++;
    }
    cov_vq5sls836().s[74]++;
    if (!this.jwtSecretCache) {
      /* istanbul ignore next */
      cov_vq5sls836().b[15][0]++;
      cov_vq5sls836().s[75]++;
      throw new Error('JWT secret not available');
    } else
    /* istanbul ignore next */
    {
      cov_vq5sls836().b[15][1]++;
    }
    cov_vq5sls836().s[76]++;
    return this.jwtSecretCache;
  }

  /**
   * Rotate JWT secret (creates new secret and updates Secrets Manager)
   */
  async rotateJwtSecret() {
    /* istanbul ignore next */
    cov_vq5sls836().f[6]++;
    cov_vq5sls836().s[77]++;
    try {
      /* istanbul ignore next */
      cov_vq5sls836().s[78]++;
      console.log('🔄 Starting JWT secret rotation...');
      const newSecret =
      /* istanbul ignore next */
      (cov_vq5sls836().s[79]++, crypto.randomBytes(64).toString('hex'));
      const secretName =
      /* istanbul ignore next */
      (cov_vq5sls836().s[80]++,
      /* istanbul ignore next */
      (cov_vq5sls836().b[16][0]++, process.env.JWT_SECRET_ARN) ||
      /* istanbul ignore next */
      (cov_vq5sls836().b[16][1]++, `stocks-app-jwt-secret-${
      /* istanbul ignore next */
      (cov_vq5sls836().b[17][0]++, process.env.NODE_ENV) ||
      /* istanbul ignore next */
      (cov_vq5sls836().b[17][1]++, 'dev')}`));
      const secretData =
      /* istanbul ignore next */
      (cov_vq5sls836().s[81]++, {
        JWT_SECRET: newSecret,
        rotated_at: new Date().toISOString(),
        previous_secret_hash: crypto.createHash('sha256').update(
        /* istanbul ignore next */
        (cov_vq5sls836().b[18][0]++, this.jwtSecretCache) ||
        /* istanbul ignore next */
        (cov_vq5sls836().b[18][1]++, '')).digest('hex').substring(0, 16),
        purpose: 'API key service JWT token signing',
        algorithm: 'HS256',
        key_length: newSecret.length
      });
      const updateCommand =
      /* istanbul ignore next */
      (cov_vq5sls836().s[82]++, new UpdateSecretCommand({
        SecretId: secretName,
        SecretString: JSON.stringify(secretData)
      }));
      /* istanbul ignore next */
      cov_vq5sls836().s[83]++;
      await this.secretsManager.send(updateCommand);

      // Update cache
      /* istanbul ignore next */
      cov_vq5sls836().s[84]++;
      this.jwtSecretCache = newSecret;
      /* istanbul ignore next */
      cov_vq5sls836().s[85]++;
      this.jwtSecret = newSecret;
      /* istanbul ignore next */
      cov_vq5sls836().s[86]++;
      console.log('✅ JWT secret rotated successfully');
      /* istanbul ignore next */
      cov_vq5sls836().s[87]++;
      return newSecret;
    } catch (error) {
      /* istanbul ignore next */
      cov_vq5sls836().s[88]++;
      console.error('❌ JWT secret rotation failed:', error.message);
      /* istanbul ignore next */
      cov_vq5sls836().s[89]++;
      throw error;
    }
  }

  /**
   * Validate JWT secret strength
   */
  validateSecretStrength(secret) {
    /* istanbul ignore next */
    cov_vq5sls836().f[7]++;
    cov_vq5sls836().s[90]++;
    if (
    /* istanbul ignore next */
    (cov_vq5sls836().b[20][0]++, !secret) ||
    /* istanbul ignore next */
    (cov_vq5sls836().b[20][1]++, typeof secret !== 'string')) {
      /* istanbul ignore next */
      cov_vq5sls836().b[19][0]++;
      cov_vq5sls836().s[91]++;
      return {
        valid: false,
        reason: 'Secret is empty or not a string',
        recommendations: ['Provide a valid string secret']
      };
    } else
    /* istanbul ignore next */
    {
      cov_vq5sls836().b[19][1]++;
    }
    cov_vq5sls836().s[92]++;
    if (secret.length < 32) {
      /* istanbul ignore next */
      cov_vq5sls836().b[21][0]++;
      cov_vq5sls836().s[93]++;
      return {
        valid: false,
        reason: 'Secret is too short (minimum 32 characters)',
        recommendations: ['Use at least 32 characters for security', 'Consider using 64+ characters for production']
      };
    } else
    /* istanbul ignore next */
    {
      cov_vq5sls836().b[21][1]++;
    }
    cov_vq5sls836().s[94]++;
    if (secret.length < 64) {
      /* istanbul ignore next */
      cov_vq5sls836().b[22][0]++;
      cov_vq5sls836().s[95]++;
      return {
        valid: true,
        warnings: ['Consider using 64+ characters for enhanced security'],
        strength: 'adequate'
      };
    } else
    /* istanbul ignore next */
    {
      cov_vq5sls836().b[22][1]++;
    }

    // Check for entropy (not just repeated characters)
    const uniqueChars =
    /* istanbul ignore next */
    (cov_vq5sls836().s[96]++, new Set(secret).size);
    const entropyRatio =
    /* istanbul ignore next */
    (cov_vq5sls836().s[97]++, uniqueChars / secret.length);
    /* istanbul ignore next */
    cov_vq5sls836().s[98]++;
    if (entropyRatio < 0.5) {
      /* istanbul ignore next */
      cov_vq5sls836().b[23][0]++;
      cov_vq5sls836().s[99]++;
      return {
        valid: true,
        warnings: ['Secret has low entropy (many repeated characters)', 'Consider using crypto.randomBytes() for generation'],
        strength: 'low_entropy'
      };
    } else
    /* istanbul ignore next */
    {
      cov_vq5sls836().b[23][1]++;
    }
    cov_vq5sls836().s[100]++;
    return {
      valid: true,
      strength: 'strong',
      entropy: entropyRatio,
      length: secret.length
    };
  }

  /**
   * Get JWT secret information (without revealing the secret)
   */
  async getSecretInfo() {
    /* istanbul ignore next */
    cov_vq5sls836().f[8]++;
    cov_vq5sls836().s[101]++;
    try {
      /* istanbul ignore next */
      cov_vq5sls836().s[102]++;
      await this.initialize();
      const validation =
      /* istanbul ignore next */
      (cov_vq5sls836().s[103]++, this.validateSecretStrength(this.jwtSecretCache));
      /* istanbul ignore next */
      cov_vq5sls836().s[104]++;
      return {
        available: !!this.jwtSecretCache,
        source: process.env.JWT_SECRET ?
        /* istanbul ignore next */
        (cov_vq5sls836().b[24][0]++, 'environment') :
        /* istanbul ignore next */
        (cov_vq5sls836().b[24][1]++, 'secrets_manager'),
        length: this.jwtSecretCache ?
        /* istanbul ignore next */
        (cov_vq5sls836().b[25][0]++, this.jwtSecretCache.length) :
        /* istanbul ignore next */
        (cov_vq5sls836().b[25][1]++, 0),
        validation: validation,
        lastInitialized: new Date().toISOString()
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_vq5sls836().s[105]++;
      return {
        available: false,
        error: error.message,
        source: 'unknown'
      };
    }
  }

  /**
   * Clear cached secret (force reload on next access)
   */
  clearCache() {
    /* istanbul ignore next */
    cov_vq5sls836().f[9]++;
    cov_vq5sls836().s[106]++;
    this.jwtSecretCache = null;
    /* istanbul ignore next */
    cov_vq5sls836().s[107]++;
    this.jwtSecret = null;
    /* istanbul ignore next */
    cov_vq5sls836().s[108]++;
    this.initPromise = null;
    /* istanbul ignore next */
    cov_vq5sls836().s[109]++;
    console.log('🧹 JWT secret cache cleared');
  }
}

// Export singleton instance
const jwtSecretManager =
/* istanbul ignore next */
(cov_vq5sls836().s[110]++, new JwtSecretManager());
/* istanbul ignore next */
cov_vq5sls836().s[111]++;
module.exports = jwtSecretManager;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,