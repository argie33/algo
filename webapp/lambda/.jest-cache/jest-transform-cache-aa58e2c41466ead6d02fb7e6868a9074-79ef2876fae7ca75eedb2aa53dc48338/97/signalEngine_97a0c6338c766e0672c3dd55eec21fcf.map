{"version":3,"names":["cov_2c2zrgnet4","actualCoverage","query","s","require","FactorScoringEngine","SignalEngine","constructor","f","factorEngine","signalTypes","MOMENTUM_BREAKOUT","name","type","strength","timeframe","description","MEAN_REVERSION","GOLDEN_CROSS","EARNINGS_SURPRISE","VALUE_OPPORTUNITY","GROWTH_ACCELERATION","ANALYST_UPGRADE","INSTITUTIONAL_BUYING","RISK_ALERT","LIQUIDITY_CONCERN","generateSignalsForStock","symbol","stockData","getStockData","technicalData","getTechnicalData","b","Error","signals","push","generateTechnicalSignals","generateFundamentalSignals","generateSentimentSignals","generateRiskSignals","aggregateSignal","calculateAggregateSignal","sort","a","Math","abs","recommendation","getRecommendation","confidence","calculateConfidence","lastUpdated","Date","toISOString","error","console","rsi","macd","macd_signal","price_momentum_3m","triggers","timestamp","sma_20","sma_50","sma_200","bbands_upper","bbands_lower","bandWidth","bbands_middle","pe_ratio","pb_ratio","roe","revenue_growth","earnings_growth","operating_margin","net_margin","current_ratio","market_cap","debt_to_equity","beta","length","weightedSum","reduce","sum","signal","totalWeight","avgConfidence","signalDiversity","Set","map","size","diversityBonus","min","result","rows","generateSignalsForPortfolio","symbols","results","message","getMarketSignals","row","portfolioSignals","marketSentiment","calculateMarketSentiment","topSignals","filter","slice","validSignals","overall","score","bullishCount","bearishCount","neutralCount","totalScore","avgScore","totalStocks","getSignalsByType","signalType","limit","filteredSignals","stock","some","find","module","exports"],"sources":["signalEngine.js"],"sourcesContent":["const { query } = require('./database');\nconst FactorScoringEngine = require('./factorScoring');\n\nclass SignalEngine {\n  constructor() {\n    this.factorEngine = new FactorScoringEngine();\n    \n    // Signal types and their configurations\n    this.signalTypes = {\n      // Technical signals\n      MOMENTUM_BREAKOUT: {\n        name: 'Momentum Breakout',\n        type: 'technical',\n        strength: 0.8,\n        timeframe: 'short',\n        description: 'Stock breaking above resistance with strong momentum'\n      },\n      MEAN_REVERSION: {\n        name: 'Mean Reversion',\n        type: 'technical',\n        strength: 0.6,\n        timeframe: 'short',\n        description: 'Oversold stock showing signs of reversal'\n      },\n      GOLDEN_CROSS: {\n        name: 'Golden Cross',\n        type: 'technical',\n        strength: 0.7,\n        timeframe: 'medium',\n        description: 'Short-term MA crossing above long-term MA'\n      },\n      \n      // Fundamental signals\n      EARNINGS_SURPRISE: {\n        name: 'Earnings Surprise',\n        type: 'fundamental',\n        strength: 0.9,\n        timeframe: 'medium',\n        description: 'Company beating earnings expectations significantly'\n      },\n      VALUE_OPPORTUNITY: {\n        name: 'Value Opportunity',\n        type: 'fundamental',\n        strength: 0.7,\n        timeframe: 'long',\n        description: 'Undervalued stock with strong fundamentals'\n      },\n      GROWTH_ACCELERATION: {\n        name: 'Growth Acceleration',\n        type: 'fundamental',\n        strength: 0.8,\n        timeframe: 'long',\n        description: 'Company showing accelerating growth metrics'\n      },\n      \n      // Sentiment signals\n      ANALYST_UPGRADE: {\n        name: 'Analyst Upgrade',\n        type: 'sentiment',\n        strength: 0.6,\n        timeframe: 'short',\n        description: 'Recent analyst rating upgrades'\n      },\n      INSTITUTIONAL_BUYING: {\n        name: 'Institutional Buying',\n        type: 'sentiment',\n        strength: 0.7,\n        timeframe: 'medium',\n        description: 'Increased institutional ownership'\n      },\n      \n      // Risk signals\n      RISK_ALERT: {\n        name: 'Risk Alert',\n        type: 'risk',\n        strength: -0.8,\n        timeframe: 'short',\n        description: 'Elevated risk indicators detected'\n      },\n      LIQUIDITY_CONCERN: {\n        name: 'Liquidity Concern',\n        type: 'risk',\n        strength: -0.6,\n        timeframe: 'short',\n        description: 'Decreasing liquidity or increasing debt concerns'\n      }\n    };\n  }\n\n  // Generate signals for a single stock\n  async generateSignalsForStock(symbol) {\n    try {\n      // Get comprehensive stock data\n      const stockData = await this.getStockData(symbol);\n      const technicalData = await this.getTechnicalData(symbol);\n      \n      if (!stockData) {\n        throw new Error(`No data found for symbol: ${symbol}`);\n      }\n\n      const signals = [];\n\n      // Generate technical signals\n      signals.push(...await this.generateTechnicalSignals(symbol, technicalData));\n      \n      // Generate fundamental signals\n      signals.push(...await this.generateFundamentalSignals(symbol, stockData));\n      \n      // Generate sentiment signals\n      signals.push(...await this.generateSentimentSignals(symbol, stockData));\n      \n      // Generate risk signals\n      signals.push(...await this.generateRiskSignals(symbol, stockData));\n\n      // Calculate aggregate signal strength\n      const aggregateSignal = this.calculateAggregateSignal(signals);\n\n      return {\n        symbol,\n        signals: signals.sort((a, b) => Math.abs(b.strength) - Math.abs(a.strength)),\n        aggregateSignal,\n        recommendation: this.getRecommendation(aggregateSignal),\n        confidence: this.calculateConfidence(signals),\n        lastUpdated: new Date().toISOString()\n      };\n    } catch (error) {\n      console.error(`Error generating signals for ${symbol}:`, error);\n      throw error;\n    }\n  }\n\n  // Generate technical signals\n  async generateTechnicalSignals(symbol, technicalData) {\n    const signals = [];\n    \n    if (!technicalData) return signals;\n\n    // Momentum Breakout Signal\n    if (technicalData.rsi > 60 && technicalData.rsi < 80 && \n        technicalData.macd > technicalData.macd_signal && \n        technicalData.price_momentum_3m > 0.05) {\n      signals.push({\n        type: 'MOMENTUM_BREAKOUT',\n        strength: 0.8,\n        confidence: 0.75,\n        description: 'Strong momentum with RSI in bullish range',\n        triggers: ['RSI > 60', 'MACD > Signal', 'Positive 3M momentum'],\n        timestamp: new Date().toISOString()\n      });\n    }\n\n    // Mean Reversion Signal\n    if (technicalData.rsi < 30 && technicalData.rsi > 20 && \n        technicalData.price_momentum_3m < -0.1) {\n      signals.push({\n        type: 'MEAN_REVERSION',\n        strength: 0.6,\n        confidence: 0.65,\n        description: 'Oversold conditions with reversal potential',\n        triggers: ['RSI < 30', 'Negative 3M momentum'],\n        timestamp: new Date().toISOString()\n      });\n    }\n\n    // Golden Cross Signal\n    if (technicalData.sma_20 > technicalData.sma_50 && \n        technicalData.sma_50 > technicalData.sma_200) {\n      signals.push({\n        type: 'GOLDEN_CROSS',\n        strength: 0.7,\n        confidence: 0.7,\n        description: 'Bullish moving average alignment',\n        triggers: ['SMA20 > SMA50', 'SMA50 > SMA200'],\n        timestamp: new Date().toISOString()\n      });\n    }\n\n    // Bollinger Band Squeeze\n    if (technicalData.bbands_upper && technicalData.bbands_lower) {\n      const bandWidth = (technicalData.bbands_upper - technicalData.bbands_lower) / technicalData.bbands_middle;\n      if (bandWidth < 0.1) {\n        signals.push({\n          type: 'MOMENTUM_BREAKOUT',\n          strength: 0.5,\n          confidence: 0.6,\n          description: 'Bollinger Band squeeze indicating potential breakout',\n          triggers: ['Narrow Bollinger Bands'],\n          timestamp: new Date().toISOString()\n        });\n      }\n    }\n\n    return signals;\n  }\n\n  // Generate fundamental signals\n  async generateFundamentalSignals(symbol, stockData) {\n    const signals = [];\n\n    // Value Opportunity Signal\n    if (stockData.pe_ratio && stockData.pe_ratio < 15 && \n        stockData.pb_ratio && stockData.pb_ratio < 1.5 && \n        stockData.roe && stockData.roe > 0.1) {\n      signals.push({\n        type: 'VALUE_OPPORTUNITY',\n        strength: 0.7,\n        confidence: 0.8,\n        description: 'Undervalued stock with strong ROE',\n        triggers: ['PE < 15', 'PB < 1.5', 'ROE > 10%'],\n        timestamp: new Date().toISOString()\n      });\n    }\n\n    // Growth Acceleration Signal\n    if (stockData.revenue_growth && stockData.revenue_growth > 0.15 && \n        stockData.earnings_growth && stockData.earnings_growth > 0.2 && \n        stockData.roe && stockData.roe > 0.15) {\n      signals.push({\n        type: 'GROWTH_ACCELERATION',\n        strength: 0.8,\n        confidence: 0.85,\n        description: 'Strong revenue and earnings growth',\n        triggers: ['Revenue Growth > 15%', 'Earnings Growth > 20%', 'ROE > 15%'],\n        timestamp: new Date().toISOString()\n      });\n    }\n\n    // Earnings Quality Signal\n    if (stockData.operating_margin && stockData.operating_margin > 0.15 && \n        stockData.net_margin && stockData.net_margin > 0.1 && \n        stockData.current_ratio && stockData.current_ratio > 1.5) {\n      signals.push({\n        type: 'EARNINGS_SURPRISE',\n        strength: 0.6,\n        confidence: 0.7,\n        description: 'High-quality earnings with strong margins',\n        triggers: ['Operating Margin > 15%', 'Net Margin > 10%', 'Current Ratio > 1.5'],\n        timestamp: new Date().toISOString()\n      });\n    }\n\n    return signals;\n  }\n\n  // Generate sentiment signals\n  async generateSentimentSignals(symbol, stockData) {\n    const signals = [];\n\n    // This would typically integrate with analyst data, news sentiment, etc.\n    // For now, we'll use proxy indicators\n\n    // Institutional Interest (using market cap as proxy)\n    if (stockData.market_cap && stockData.market_cap > 10000000000) { // $10B+\n      signals.push({\n        type: 'INSTITUTIONAL_BUYING',\n        strength: 0.4,\n        confidence: 0.5,\n        description: 'Large cap stock with institutional interest',\n        triggers: ['Market Cap > $10B'],\n        timestamp: new Date().toISOString()\n      });\n    }\n\n    return signals;\n  }\n\n  // Generate risk signals\n  async generateRiskSignals(symbol, stockData) {\n    const signals = [];\n\n    // High Debt Signal\n    if (stockData.debt_to_equity && stockData.debt_to_equity > 1.0) {\n      signals.push({\n        type: 'RISK_ALERT',\n        strength: -0.6,\n        confidence: 0.8,\n        description: 'High debt-to-equity ratio',\n        triggers: ['Debt/Equity > 1.0'],\n        timestamp: new Date().toISOString()\n      });\n    }\n\n    // Liquidity Concern Signal\n    if (stockData.current_ratio && stockData.current_ratio < 1.0) {\n      signals.push({\n        type: 'LIQUIDITY_CONCERN',\n        strength: -0.7,\n        confidence: 0.85,\n        description: 'Low current ratio indicating liquidity issues',\n        triggers: ['Current Ratio < 1.0'],\n        timestamp: new Date().toISOString()\n      });\n    }\n\n    // High Volatility Signal\n    if (stockData.beta && stockData.beta > 2.0) {\n      signals.push({\n        type: 'RISK_ALERT',\n        strength: -0.4,\n        confidence: 0.6,\n        description: 'High beta indicating increased volatility',\n        triggers: ['Beta > 2.0'],\n        timestamp: new Date().toISOString()\n      });\n    }\n\n    return signals;\n  }\n\n  // Calculate aggregate signal strength\n  calculateAggregateSignal(signals) {\n    if (signals.length === 0) return 0;\n\n    const weightedSum = signals.reduce((sum, signal) => {\n      return sum + (signal.strength * signal.confidence);\n    }, 0);\n\n    const totalWeight = signals.reduce((sum, signal) => sum + signal.confidence, 0);\n\n    return totalWeight > 0 ? weightedSum / totalWeight : 0;\n  }\n\n  // Calculate overall confidence\n  calculateConfidence(signals) {\n    if (signals.length === 0) return 0;\n    \n    const avgConfidence = signals.reduce((sum, signal) => sum + signal.confidence, 0) / signals.length;\n    const signalDiversity = new Set(signals.map(s => s.type)).size;\n    const diversityBonus = Math.min(0.2, signalDiversity * 0.05);\n    \n    return Math.min(1.0, avgConfidence + diversityBonus);\n  }\n\n  // Get recommendation based on aggregate signal\n  getRecommendation(aggregateSignal) {\n    if (aggregateSignal >= 0.6) return 'Strong Buy';\n    if (aggregateSignal >= 0.3) return 'Buy';\n    if (aggregateSignal >= 0.1) return 'Weak Buy';\n    if (aggregateSignal >= -0.1) return 'Hold';\n    if (aggregateSignal >= -0.3) return 'Weak Sell';\n    if (aggregateSignal >= -0.6) return 'Sell';\n    return 'Strong Sell';\n  }\n\n  // Get stock data from database\n  async getStockData(symbol) {\n    try {\n      const result = await query(`\n        SELECT \n          sf.*,\n          sse.company_name,\n          sse.sector,\n          sse.exchange\n        FROM stock_fundamentals sf\n        JOIN stock_symbols_enhanced sse ON sf.symbol = sse.symbol\n        WHERE sf.symbol = $1\n      `, [symbol]);\n\n      return result.rows[0] || null;\n    } catch (error) {\n      console.error('Error fetching stock data:', error);\n      return null;\n    }\n  }\n\n  // Get technical data from database\n  async getTechnicalData(symbol) {\n    try {\n      const result = await query(`\n        SELECT *\n        FROM technical_data_daily\n        WHERE symbol = $1\n        ORDER BY date DESC\n        LIMIT 1\n      `, [symbol]);\n\n      return result.rows[0] || null;\n    } catch (error) {\n      console.error('Error fetching technical data:', error);\n      return null;\n    }\n  }\n\n  // Generate signals for multiple stocks\n  async generateSignalsForPortfolio(symbols) {\n    const results = [];\n    \n    for (const symbol of symbols) {\n      try {\n        const signals = await this.generateSignalsForStock(symbol);\n        results.push(signals);\n      } catch (error) {\n        console.error(`Error generating signals for ${symbol}:`, error);\n        results.push({\n          symbol,\n          signals: [],\n          aggregateSignal: 0,\n          recommendation: 'Hold',\n          confidence: 0,\n          error: error.message\n        });\n      }\n    }\n\n    return results;\n  }\n\n  // Get market-wide signals\n  async getMarketSignals() {\n    try {\n      // Get top stocks by market cap for market analysis\n      const result = await query(`\n        SELECT symbol\n        FROM stock_fundamentals sf\n        JOIN stock_symbols_enhanced sse ON sf.symbol = sse.symbol\n        WHERE market_cap > 1000000000\n        ORDER BY market_cap DESC\n        LIMIT 50\n      `);\n\n      const symbols = result.rows.map(row => row.symbol);\n      const portfolioSignals = await this.generateSignalsForPortfolio(symbols);\n      \n      // Calculate market sentiment\n      const marketSentiment = this.calculateMarketSentiment(portfolioSignals);\n      \n      return {\n        marketSentiment,\n        topSignals: portfolioSignals\n          .filter(s => Math.abs(s.aggregateSignal) > 0.3)\n          .sort((a, b) => Math.abs(b.aggregateSignal) - Math.abs(a.aggregateSignal))\n          .slice(0, 20),\n        lastUpdated: new Date().toISOString()\n      };\n    } catch (error) {\n      console.error('Error getting market signals:', error);\n      throw error;\n    }\n  }\n\n  // Calculate overall market sentiment\n  calculateMarketSentiment(portfolioSignals) {\n    const validSignals = portfolioSignals.filter(s => !s.error);\n    \n    if (validSignals.length === 0) {\n      return {\n        overall: 'Neutral',\n        score: 0,\n        bullishCount: 0,\n        bearishCount: 0,\n        neutralCount: 0\n      };\n    }\n\n    const totalScore = validSignals.reduce((sum, s) => sum + s.aggregateSignal, 0);\n    const avgScore = totalScore / validSignals.length;\n    \n    const bullishCount = validSignals.filter(s => s.aggregateSignal > 0.1).length;\n    const bearishCount = validSignals.filter(s => s.aggregateSignal < -0.1).length;\n    const neutralCount = validSignals.length - bullishCount - bearishCount;\n\n    let overall = 'Neutral';\n    if (avgScore > 0.2) overall = 'Bullish';\n    else if (avgScore < -0.2) overall = 'Bearish';\n\n    return {\n      overall,\n      score: avgScore,\n      bullishCount,\n      bearishCount,\n      neutralCount,\n      totalStocks: validSignals.length\n    };\n  }\n\n  // Get signals by type\n  async getSignalsByType(signalType, limit = 20) {\n    try {\n      // This would typically query a signals cache table\n      // For now, we'll generate signals for top stocks and filter\n      \n      const result = await query(`\n        SELECT symbol\n        FROM stock_fundamentals sf\n        JOIN stock_symbols_enhanced sse ON sf.symbol = sse.symbol\n        WHERE market_cap > 100000000\n        ORDER BY market_cap DESC\n        LIMIT 100\n      `);\n\n      const symbols = result.rows.map(row => row.symbol);\n      const portfolioSignals = await this.generateSignalsForPortfolio(symbols);\n      \n      const filteredSignals = portfolioSignals\n        .filter(stock => stock.signals.some(signal => signal.type === signalType))\n        .map(stock => ({\n          symbol: stock.symbol,\n          signal: stock.signals.find(signal => signal.type === signalType),\n          aggregateSignal: stock.aggregateSignal,\n          recommendation: stock.recommendation\n        }))\n        .sort((a, b) => Math.abs(b.signal.strength) - Math.abs(a.signal.strength))\n        .slice(0, limit);\n\n      return filteredSignals;\n    } catch (error) {\n      console.error('Error getting signals by type:', error);\n      throw error;\n    }\n  }\n}\n\nmodule.exports = SignalEngine;"],"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","ignoreList":[]}