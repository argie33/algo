d7b205f8432ef1ba23e514de51d004be
/* istanbul ignore next */
function cov_1wwik3boos() {
  var path = "/home/stocks/algo/webapp/lambda/routes/analysts.js";
  var hash = "bddd7317e4d2c7d7ad989c96c3eb300a542655e7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/stocks/algo/webapp/lambda/routes/analysts.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 16
        },
        end: {
          line: 1,
          column: 34
        }
      },
      "1": {
        start: {
          line: 2,
          column: 18
        },
        end: {
          line: 2,
          column: 46
        }
      },
      "2": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 31
        }
      },
      "3": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 73,
          column: 3
        }
      },
      "4": {
        start: {
          line: 8,
          column: 2
        },
        end: {
          line: 72,
          column: 3
        }
      },
      "5": {
        start: {
          line: 9,
          column: 17
        },
        end: {
          line: 9,
          column: 46
        }
      },
      "6": {
        start: {
          line: 10,
          column: 18
        },
        end: {
          line: 10,
          column: 49
        }
      },
      "7": {
        start: {
          line: 11,
          column: 19
        },
        end: {
          line: 11,
          column: 37
        }
      },
      "8": {
        start: {
          line: 12,
          column: 28
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "9": {
        start: {
          line: 28,
          column: 23
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "10": {
        start: {
          line: 33,
          column: 42
        },
        end: {
          line: 36,
          column: 6
        }
      },
      "11": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "12": {
        start: {
          line: 39,
          column: 6
        },
        end: {
          line: 39,
          column: 79
        }
      },
      "13": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "14": {
        start: {
          line: 42,
          column: 6
        },
        end: {
          line: 42,
          column: 80
        }
      },
      "15": {
        start: {
          line: 46,
          column: 23
        },
        end: {
          line: 49,
          column: 7
        }
      },
      "16": {
        start: {
          line: 46,
          column: 55
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "17": {
        start: {
          line: 51,
          column: 18
        },
        end: {
          line: 51,
          column: 53
        }
      },
      "18": {
        start: {
          line: 52,
          column: 23
        },
        end: {
          line: 52,
          column: 47
        }
      },
      "19": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 64,
          column: 7
        }
      },
      "20": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 67,
          column: 61
        }
      },
      "21": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 71,
          column: 7
        }
      },
      "22": {
        start: {
          line: 76,
          column: 0
        },
        end: {
          line: 106,
          column: 3
        }
      },
      "23": {
        start: {
          line: 77,
          column: 2
        },
        end: {
          line: 105,
          column: 3
        }
      },
      "24": {
        start: {
          line: 78,
          column: 23
        },
        end: {
          line: 78,
          column: 33
        }
      },
      "25": {
        start: {
          line: 80,
          column: 21
        },
        end: {
          line: 93,
          column: 5
        }
      },
      "26": {
        start: {
          line: 95,
          column: 19
        },
        end: {
          line: 95,
          column: 64
        }
      },
      "27": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 100,
          column: 7
        }
      },
      "28": {
        start: {
          line: 103,
          column: 4
        },
        end: {
          line: 103,
          column: 60
        }
      },
      "29": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 104,
          column: 71
        }
      },
      "30": {
        start: {
          line: 109,
          column: 0
        },
        end: {
          line: 138,
          column: 3
        }
      },
      "31": {
        start: {
          line: 110,
          column: 2
        },
        end: {
          line: 137,
          column: 3
        }
      },
      "32": {
        start: {
          line: 111,
          column: 23
        },
        end: {
          line: 111,
          column: 33
        }
      },
      "33": {
        start: {
          line: 113,
          column: 27
        },
        end: {
          line: 125,
          column: 5
        }
      },
      "34": {
        start: {
          line: 127,
          column: 19
        },
        end: {
          line: 127,
          column: 70
        }
      },
      "35": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 132,
          column: 7
        }
      },
      "36": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 135,
          column: 63
        }
      },
      "37": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 136,
          column: 74
        }
      },
      "38": {
        start: {
          line: 141,
          column: 0
        },
        end: {
          line: 169,
          column: 3
        }
      },
      "39": {
        start: {
          line: 142,
          column: 2
        },
        end: {
          line: 168,
          column: 3
        }
      },
      "40": {
        start: {
          line: 143,
          column: 23
        },
        end: {
          line: 143,
          column: 33
        }
      },
      "41": {
        start: {
          line: 145,
          column: 25
        },
        end: {
          line: 156,
          column: 5
        }
      },
      "42": {
        start: {
          line: 158,
          column: 19
        },
        end: {
          line: 158,
          column: 68
        }
      },
      "43": {
        start: {
          line: 160,
          column: 4
        },
        end: {
          line: 163,
          column: 7
        }
      },
      "44": {
        start: {
          line: 166,
          column: 4
        },
        end: {
          line: 166,
          column: 62
        }
      },
      "45": {
        start: {
          line: 167,
          column: 4
        },
        end: {
          line: 167,
          column: 73
        }
      },
      "46": {
        start: {
          line: 172,
          column: 0
        },
        end: {
          line: 201,
          column: 3
        }
      },
      "47": {
        start: {
          line: 173,
          column: 2
        },
        end: {
          line: 200,
          column: 3
        }
      },
      "48": {
        start: {
          line: 174,
          column: 23
        },
        end: {
          line: 174,
          column: 33
        }
      },
      "49": {
        start: {
          line: 176,
          column: 25
        },
        end: {
          line: 188,
          column: 5
        }
      },
      "50": {
        start: {
          line: 190,
          column: 19
        },
        end: {
          line: 190,
          column: 68
        }
      },
      "51": {
        start: {
          line: 192,
          column: 4
        },
        end: {
          line: 195,
          column: 7
        }
      },
      "52": {
        start: {
          line: 198,
          column: 4
        },
        end: {
          line: 198,
          column: 61
        }
      },
      "53": {
        start: {
          line: 199,
          column: 4
        },
        end: {
          line: 199,
          column: 72
        }
      },
      "54": {
        start: {
          line: 204,
          column: 0
        },
        end: {
          line: 249,
          column: 3
        }
      },
      "55": {
        start: {
          line: 205,
          column: 2
        },
        end: {
          line: 248,
          column: 3
        }
      },
      "56": {
        start: {
          line: 206,
          column: 23
        },
        end: {
          line: 206,
          column: 33
        }
      },
      "57": {
        start: {
          line: 208,
          column: 27
        },
        end: {
          line: 227,
          column: 5
        }
      },
      "58": {
        start: {
          line: 229,
          column: 19
        },
        end: {
          line: 229,
          column: 56
        }
      },
      "59": {
        start: {
          line: 231,
          column: 4
        },
        end: {
          line: 239,
          column: 7
        }
      },
      "60": {
        start: {
          line: 242,
          column: 4
        },
        end: {
          line: 242,
          column: 55
        }
      },
      "61": {
        start: {
          line: 243,
          column: 4
        },
        end: {
          line: 247,
          column: 7
        }
      },
      "62": {
        start: {
          line: 252,
          column: 0
        },
        end: {
          line: 298,
          column: 3
        }
      },
      "63": {
        start: {
          line: 253,
          column: 2
        },
        end: {
          line: 297,
          column: 3
        }
      },
      "64": {
        start: {
          line: 254,
          column: 23
        },
        end: {
          line: 254,
          column: 33
        }
      },
      "65": {
        start: {
          line: 256,
          column: 23
        },
        end: {
          line: 276,
          column: 5
        }
      },
      "66": {
        start: {
          line: 278,
          column: 19
        },
        end: {
          line: 278,
          column: 52
        }
      },
      "67": {
        start: {
          line: 280,
          column: 4
        },
        end: {
          line: 288,
          column: 7
        }
      },
      "68": {
        start: {
          line: 291,
          column: 4
        },
        end: {
          line: 291,
          column: 51
        }
      },
      "69": {
        start: {
          line: 292,
          column: 4
        },
        end: {
          line: 296,
          column: 7
        }
      },
      "70": {
        start: {
          line: 301,
          column: 0
        },
        end: {
          line: 345,
          column: 3
        }
      },
      "71": {
        start: {
          line: 302,
          column: 2
        },
        end: {
          line: 344,
          column: 3
        }
      },
      "72": {
        start: {
          line: 303,
          column: 23
        },
        end: {
          line: 303,
          column: 33
        }
      },
      "73": {
        start: {
          line: 305,
          column: 24
        },
        end: {
          line: 323,
          column: 5
        }
      },
      "74": {
        start: {
          line: 325,
          column: 19
        },
        end: {
          line: 325,
          column: 53
        }
      },
      "75": {
        start: {
          line: 327,
          column: 4
        },
        end: {
          line: 335,
          column: 7
        }
      },
      "76": {
        start: {
          line: 338,
          column: 4
        },
        end: {
          line: 338,
          column: 58
        }
      },
      "77": {
        start: {
          line: 339,
          column: 4
        },
        end: {
          line: 343,
          column: 7
        }
      },
      "78": {
        start: {
          line: 348,
          column: 0
        },
        end: {
          line: 389,
          column: 3
        }
      },
      "79": {
        start: {
          line: 349,
          column: 2
        },
        end: {
          line: 388,
          column: 3
        }
      },
      "80": {
        start: {
          line: 350,
          column: 23
        },
        end: {
          line: 350,
          column: 33
        }
      },
      "81": {
        start: {
          line: 352,
          column: 33
        },
        end: {
          line: 367,
          column: 5
        }
      },
      "82": {
        start: {
          line: 369,
          column: 19
        },
        end: {
          line: 369,
          column: 62
        }
      },
      "83": {
        start: {
          line: 371,
          column: 4
        },
        end: {
          line: 379,
          column: 7
        }
      },
      "84": {
        start: {
          line: 382,
          column: 4
        },
        end: {
          line: 382,
          column: 65
        }
      },
      "85": {
        start: {
          line: 383,
          column: 4
        },
        end: {
          line: 387,
          column: 7
        }
      },
      "86": {
        start: {
          line: 392,
          column: 0
        },
        end: {
          line: 440,
          column: 3
        }
      },
      "87": {
        start: {
          line: 393,
          column: 2
        },
        end: {
          line: 439,
          column: 3
        }
      },
      "88": {
        start: {
          line: 394,
          column: 23
        },
        end: {
          line: 394,
          column: 33
        }
      },
      "89": {
        start: {
          line: 405,
          column: 8
        },
        end: {
          line: 413,
          column: 6
        }
      },
      "90": {
        start: {
          line: 415,
          column: 4
        },
        end: {
          line: 430,
          column: 7
        }
      },
      "91": {
        start: {
          line: 433,
          column: 4
        },
        end: {
          line: 433,
          column: 58
        }
      },
      "92": {
        start: {
          line: 434,
          column: 4
        },
        end: {
          line: 438,
          column: 7
        }
      },
      "93": {
        start: {
          line: 443,
          column: 0
        },
        end: {
          line: 524,
          column: 3
        }
      },
      "94": {
        start: {
          line: 444,
          column: 2
        },
        end: {
          line: 523,
          column: 3
        }
      },
      "95": {
        start: {
          line: 445,
          column: 18
        },
        end: {
          line: 445,
          column: 49
        }
      },
      "96": {
        start: {
          line: 448,
          column: 28
        },
        end: {
          line: 453,
          column: 5
        }
      },
      "97": {
        start: {
          line: 455,
          column: 29
        },
        end: {
          line: 455,
          column: 57
        }
      },
      "98": {
        start: {
          line: 457,
          column: 4
        },
        end: {
          line: 468,
          column: 5
        }
      },
      "99": {
        start: {
          line: 458,
          column: 6
        },
        end: {
          line: 467,
          column: 9
        }
      },
      "100": {
        start: {
          line: 470,
          column: 27
        },
        end: {
          line: 470,
          column: 56
        }
      },
      "101": {
        start: {
          line: 473,
          column: 31
        },
        end: {
          line: 493,
          column: 5
        }
      },
      "102": {
        start: {
          line: 495,
          column: 26
        },
        end: {
          line: 495,
          column: 82
        }
      },
      "103": {
        start: {
          line: 498,
          column: 20
        },
        end: {
          line: 498,
          column: 44
        }
      },
      "104": {
        start: {
          line: 499,
          column: 21
        },
        end: {
          line: 499,
          column: 79
        }
      },
      "105": {
        start: {
          line: 499,
          column: 46
        },
        end: {
          line: 499,
          column: 78
        }
      },
      "106": {
        start: {
          line: 500,
          column: 23
        },
        end: {
          line: 500,
          column: 83
        }
      },
      "107": {
        start: {
          line: 500,
          column: 48
        },
        end: {
          line: 500,
          column: 82
        }
      },
      "108": {
        start: {
          line: 501,
          column: 21
        },
        end: {
          line: 501,
          column: 79
        }
      },
      "109": {
        start: {
          line: 501,
          column: 46
        },
        end: {
          line: 501,
          column: 78
        }
      },
      "110": {
        start: {
          line: 503,
          column: 4
        },
        end: {
          line: 515,
          column: 7
        }
      },
      "111": {
        start: {
          line: 518,
          column: 4
        },
        end: {
          line: 518,
          column: 67
        }
      },
      "112": {
        start: {
          line: 519,
          column: 4
        },
        end: {
          line: 522,
          column: 7
        }
      },
      "113": {
        start: {
          line: 526,
          column: 0
        },
        end: {
          line: 526,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 24
          },
          end: {
            line: 7,
            column: 25
          }
        },
        loc: {
          start: {
            line: 7,
            column: 44
          },
          end: {
            line: 73,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 46,
            column: 47
          },
          end: {
            line: 46,
            column: 48
          }
        },
        loc: {
          start: {
            line: 46,
            column: 55
          },
          end: {
            line: 49,
            column: 5
          }
        },
        line: 46
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 76,
            column: 39
          },
          end: {
            line: 76,
            column: 40
          }
        },
        loc: {
          start: {
            line: 76,
            column: 59
          },
          end: {
            line: 106,
            column: 1
          }
        },
        line: 76
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 109,
            column: 42
          },
          end: {
            line: 109,
            column: 43
          }
        },
        loc: {
          start: {
            line: 109,
            column: 62
          },
          end: {
            line: 138,
            column: 1
          }
        },
        line: 109
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 141,
            column: 41
          },
          end: {
            line: 141,
            column: 42
          }
        },
        loc: {
          start: {
            line: 141,
            column: 61
          },
          end: {
            line: 169,
            column: 1
          }
        },
        line: 141
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 172,
            column: 40
          },
          end: {
            line: 172,
            column: 41
          }
        },
        loc: {
          start: {
            line: 172,
            column: 60
          },
          end: {
            line: 201,
            column: 1
          }
        },
        line: 172
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 204,
            column: 37
          },
          end: {
            line: 204,
            column: 38
          }
        },
        loc: {
          start: {
            line: 204,
            column: 57
          },
          end: {
            line: 249,
            column: 1
          }
        },
        line: 204
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 252,
            column: 33
          },
          end: {
            line: 252,
            column: 34
          }
        },
        loc: {
          start: {
            line: 252,
            column: 53
          },
          end: {
            line: 298,
            column: 1
          }
        },
        line: 252
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 301,
            column: 40
          },
          end: {
            line: 301,
            column: 41
          }
        },
        loc: {
          start: {
            line: 301,
            column: 60
          },
          end: {
            line: 345,
            column: 1
          }
        },
        line: 301
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 348,
            column: 39
          },
          end: {
            line: 348,
            column: 40
          }
        },
        loc: {
          start: {
            line: 348,
            column: 59
          },
          end: {
            line: 389,
            column: 1
          }
        },
        line: 348
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 392,
            column: 32
          },
          end: {
            line: 392,
            column: 33
          }
        },
        loc: {
          start: {
            line: 392,
            column: 52
          },
          end: {
            line: 440,
            column: 1
          }
        },
        line: 392
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 443,
            column: 30
          },
          end: {
            line: 443,
            column: 31
          }
        },
        loc: {
          start: {
            line: 443,
            column: 50
          },
          end: {
            line: 524,
            column: 1
          }
        },
        line: 443
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 499,
            column: 36
          },
          end: {
            line: 499,
            column: 37
          }
        },
        loc: {
          start: {
            line: 499,
            column: 46
          },
          end: {
            line: 499,
            column: 78
          }
        },
        line: 499
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 500,
            column: 38
          },
          end: {
            line: 500,
            column: 39
          }
        },
        loc: {
          start: {
            line: 500,
            column: 48
          },
          end: {
            line: 500,
            column: 82
          }
        },
        line: 500
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 501,
            column: 36
          },
          end: {
            line: 501,
            column: 37
          }
        },
        loc: {
          start: {
            line: 501,
            column: 46
          },
          end: {
            line: 501,
            column: 78
          }
        },
        line: 501
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 17
          },
          end: {
            line: 9,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 17
          },
          end: {
            line: 9,
            column: 41
          }
        }, {
          start: {
            line: 9,
            column: 45
          },
          end: {
            line: 9,
            column: 46
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 10,
            column: 18
          },
          end: {
            line: 10,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 10,
            column: 18
          },
          end: {
            line: 10,
            column: 43
          }
        }, {
          start: {
            line: 10,
            column: 47
          },
          end: {
            line: 10,
            column: 49
          }
        }],
        line: 10
      },
      "2": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "3": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 23
          }
        }, {
          start: {
            line: 38,
            column: 27
          },
          end: {
            line: 38,
            column: 62
          }
        }],
        line: 38
      },
      "4": {
        loc: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "5": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 20
          }
        }, {
          start: {
            line: 41,
            column: 24
          },
          end: {
            line: 41,
            column: 56
          }
        }, {
          start: {
            line: 41,
            column: 60
          },
          end: {
            line: 41,
            column: 89
          }
        }],
        line: 41
      },
      "6": {
        loc: {
          start: {
            line: 445,
            column: 18
          },
          end: {
            line: 445,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 445,
            column: 18
          },
          end: {
            line: 445,
            column: 43
          }
        }, {
          start: {
            line: 445,
            column: 47
          },
          end: {
            line: 445,
            column: 49
          }
        }],
        line: 445
      },
      "7": {
        loc: {
          start: {
            line: 457,
            column: 4
          },
          end: {
            line: 468,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 457,
            column: 4
          },
          end: {
            line: 468,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 457
      },
      "8": {
        loc: {
          start: {
            line: 457,
            column: 8
          },
          end: {
            line: 457,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 457,
            column: 8
          },
          end: {
            line: 457,
            column: 30
          }
        }, {
          start: {
            line: 457,
            column: 34
          },
          end: {
            line: 457,
            column: 68
          }
        }],
        line: 457
      },
      "9": {
        loc: {
          start: {
            line: 498,
            column: 20
          },
          end: {
            line: 498,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 498,
            column: 20
          },
          end: {
            line: 498,
            column: 38
          }
        }, {
          start: {
            line: 498,
            column: 42
          },
          end: {
            line: 498,
            column: 44
          }
        }],
        line: 498
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bddd7317e4d2c7d7ad989c96c3eb300a542655e7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1wwik3boos = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1wwik3boos();
const express =
/* istanbul ignore next */
(cov_1wwik3boos().s[0]++, require('express'));
const {
  query
} =
/* istanbul ignore next */
(cov_1wwik3boos().s[1]++, require('../utils/database'));
const router =
/* istanbul ignore next */
(cov_1wwik3boos().s[2]++, express.Router());

// Get analyst upgrades/downgrades
/* istanbul ignore next */
cov_1wwik3boos().s[3]++;
router.get('/upgrades', async (req, res) => {
  /* istanbul ignore next */
  cov_1wwik3boos().f[0]++;
  cov_1wwik3boos().s[4]++;
  try {
    const page =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[5]++,
    /* istanbul ignore next */
    (cov_1wwik3boos().b[0][0]++, parseInt(req.query.page)) ||
    /* istanbul ignore next */
    (cov_1wwik3boos().b[0][1]++, 1));
    const limit =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[6]++,
    /* istanbul ignore next */
    (cov_1wwik3boos().b[1][0]++, parseInt(req.query.limit)) ||
    /* istanbul ignore next */
    (cov_1wwik3boos().b[1][1]++, 25));
    const offset =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[7]++, (page - 1) * limit);
    const upgradesQuery =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[8]++, `
      SELECT 
        aud.symbol,
        s.short_name AS company_name,
        aud.from_grade,
        aud.to_grade,
        aud.action,
        aud.firm,
        aud.date,
        aud.details
      FROM analyst_upgrade_downgrade aud
      LEFT JOIN symbols s ON aud.symbol = s.symbol
      ORDER BY aud.date DESC
      LIMIT $1 OFFSET $2
    `);
    const countQuery =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[9]++, `
      SELECT COUNT(*) as total
      FROM analyst_upgrade_downgrade
    `);
    const [upgradesResult, countResult] =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[10]++, await Promise.all([query(upgradesQuery, [limit, offset]), query(countQuery)]));
    /* istanbul ignore next */
    cov_1wwik3boos().s[11]++;
    if (
    /* istanbul ignore next */
    (cov_1wwik3boos().b[3][0]++, !upgradesResult) ||
    /* istanbul ignore next */
    (cov_1wwik3boos().b[3][1]++, !Array.isArray(upgradesResult.rows))) {
      /* istanbul ignore next */
      cov_1wwik3boos().b[2][0]++;
      cov_1wwik3boos().s[12]++;
      throw new Error('No rows returned from analyst_upgrade_downgrade query');
    } else
    /* istanbul ignore next */
    {
      cov_1wwik3boos().b[2][1]++;
    }
    cov_1wwik3boos().s[13]++;
    if (
    /* istanbul ignore next */
    (cov_1wwik3boos().b[5][0]++, !countResult) ||
    /* istanbul ignore next */
    (cov_1wwik3boos().b[5][1]++, !Array.isArray(countResult.rows)) ||
    /* istanbul ignore next */
    (cov_1wwik3boos().b[5][2]++, countResult.rows.length === 0)) {
      /* istanbul ignore next */
      cov_1wwik3boos().b[4][0]++;
      cov_1wwik3boos().s[14]++;
      throw new Error('No count returned from analyst_upgrade_downgrade query');
    } else
    /* istanbul ignore next */
    {
      cov_1wwik3boos().b[4][1]++;
    }

    // Map company_name to company for frontend compatibility
    const mappedRows =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[15]++, upgradesResult.rows.map(row => {
      /* istanbul ignore next */
      cov_1wwik3boos().f[1]++;
      cov_1wwik3boos().s[16]++;
      return {
        ...row,
        company: row.company_name
      };
    }));
    const total =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[17]++, parseInt(countResult.rows[0].total));
    const totalPages =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[18]++, Math.ceil(total / limit));
    /* istanbul ignore next */
    cov_1wwik3boos().s[19]++;
    res.json({
      data: mappedRows,
      pagination: {
        page,
        limit,
        total,
        totalPages,
        hasNext: page < totalPages,
        hasPrev: page > 1
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1wwik3boos().s[20]++;
    console.error('Error fetching analyst upgrades:', error);
    /* istanbul ignore next */
    cov_1wwik3boos().s[21]++;
    res.status(500).json({
      error: 'Failed to fetch analyst upgrades',
      message: error.message
    });
  }
});

// Get recommendations for specific stock
/* istanbul ignore next */
cov_1wwik3boos().s[22]++;
router.get('/:ticker/recommendations', async (req, res) => {
  /* istanbul ignore next */
  cov_1wwik3boos().f[2]++;
  cov_1wwik3boos().s[23]++;
  try {
    const {
      ticker
    } =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[24]++, req.params);
    const recQuery =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[25]++, `
      SELECT 
        period,
        strong_buy,
        buy,
        hold,
        sell,
        strong_sell,
        collected_date
      FROM analyst_recommendations
      WHERE symbol = $1
      ORDER BY collected_date DESC
      LIMIT 12
    `);
    const result =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[26]++, await query(recQuery, [ticker.toUpperCase()]));
    /* istanbul ignore next */
    cov_1wwik3boos().s[27]++;
    res.json({
      ticker: ticker.toUpperCase(),
      recommendations: result.rows
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1wwik3boos().s[28]++;
    console.error('Error fetching recommendations:', error);
    /* istanbul ignore next */
    cov_1wwik3boos().s[29]++;
    res.status(500).json({
      error: 'Failed to fetch recommendations'
    });
  }
});

// Get earnings estimates
/* istanbul ignore next */
cov_1wwik3boos().s[30]++;
router.get('/:ticker/earnings-estimates', async (req, res) => {
  /* istanbul ignore next */
  cov_1wwik3boos().f[3]++;
  cov_1wwik3boos().s[31]++;
  try {
    const {
      ticker
    } =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[32]++, req.params);
    const estimatesQuery =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[33]++, `
      SELECT 
        period,
        estimate,
        actual,
        difference,
        surprise_percent,
        reported_date
        FROM earnings_estimates
      WHERE symbol = $1
      ORDER BY reported_date DESC
      LIMIT 8
    `);
    const result =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[34]++, await query(estimatesQuery, [ticker.toUpperCase()]));
    /* istanbul ignore next */
    cov_1wwik3boos().s[35]++;
    res.json({
      ticker: ticker.toUpperCase(),
      estimates: result.rows
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1wwik3boos().s[36]++;
    console.error('Error fetching earnings estimates:', error);
    /* istanbul ignore next */
    cov_1wwik3boos().s[37]++;
    res.status(500).json({
      error: 'Failed to fetch earnings estimates'
    });
  }
});

// Get revenue estimates
/* istanbul ignore next */
cov_1wwik3boos().s[38]++;
router.get('/:ticker/revenue-estimates', async (req, res) => {
  /* istanbul ignore next */
  cov_1wwik3boos().f[4]++;
  cov_1wwik3boos().s[39]++;
  try {
    const {
      ticker
    } =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[40]++, req.params);
    const revenueQuery =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[41]++, `
      SELECT 
        period,
        estimate,
        actual,
        difference,
        surprise_percent,
        reported_date      FROM revenue_estimates
      WHERE symbol = $1
      ORDER BY reported_date DESC
      LIMIT 8
    `);
    const result =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[42]++, await query(revenueQuery, [ticker.toUpperCase()]));
    /* istanbul ignore next */
    cov_1wwik3boos().s[43]++;
    res.json({
      ticker: ticker.toUpperCase(),
      estimates: result.rows
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1wwik3boos().s[44]++;
    console.error('Error fetching revenue estimates:', error);
    /* istanbul ignore next */
    cov_1wwik3boos().s[45]++;
    res.status(500).json({
      error: 'Failed to fetch revenue estimates'
    });
  }
});

// Get earnings history
/* istanbul ignore next */
cov_1wwik3boos().s[46]++;
router.get('/:ticker/earnings-history', async (req, res) => {
  /* istanbul ignore next */
  cov_1wwik3boos().f[5]++;
  cov_1wwik3boos().s[47]++;
  try {
    const {
      ticker
    } =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[48]++, req.params);
    const historyQuery =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[49]++, `
      SELECT 
        quarter,
        estimate,
        actual,
        difference,
        surprise_percent,
        earnings_date
      FROM earnings_history
      WHERE symbol = $1
      ORDER BY earnings_date DESC
      LIMIT 12
    `);
    const result =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[50]++, await query(historyQuery, [ticker.toUpperCase()]));
    /* istanbul ignore next */
    cov_1wwik3boos().s[51]++;
    res.json({
      ticker: ticker.toUpperCase(),
      history: result.rows
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1wwik3boos().s[52]++;
    console.error('Error fetching earnings history:', error);
    /* istanbul ignore next */
    cov_1wwik3boos().s[53]++;
    res.status(500).json({
      error: 'Failed to fetch earnings history'
    });
  }
});

// Get EPS revisions for a ticker
/* istanbul ignore next */
cov_1wwik3boos().s[54]++;
router.get('/:ticker/eps-revisions', async (req, res) => {
  /* istanbul ignore next */
  cov_1wwik3boos().f[6]++;
  cov_1wwik3boos().s[55]++;
  try {
    const {
      ticker
    } =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[56]++, req.params);
    const revisionsQuery =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[57]++, `
      SELECT 
        symbol,
        period,
        up_last7days,
        up_last30days,
        down_last30days,
        down_last7days,
        fetched_at
      FROM eps_revisions
      WHERE UPPER(symbol) = UPPER($1)
      ORDER BY 
        CASE 
          WHEN period = '0q' THEN 1
          WHEN period = '+1q' THEN 2
          WHEN period = '0y' THEN 3
          WHEN period = '+1y' THEN 4
          ELSE 5
        END
    `);
    const result =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[58]++, await query(revisionsQuery, [ticker]));
    /* istanbul ignore next */
    cov_1wwik3boos().s[59]++;
    res.json({
      success: true,
      ticker: ticker.toUpperCase(),
      data: result.rows,
      metadata: {
        count: result.rows.length,
        timestamp: new Date().toISOString()
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1wwik3boos().s[60]++;
    console.error('EPS revisions fetch error:', error);
    /* istanbul ignore next */
    cov_1wwik3boos().s[61]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch EPS revisions',
      message: error.message
    });
  }
});

// Get EPS trend for a ticker
/* istanbul ignore next */
cov_1wwik3boos().s[62]++;
router.get('/:ticker/eps-trend', async (req, res) => {
  /* istanbul ignore next */
  cov_1wwik3boos().f[7]++;
  cov_1wwik3boos().s[63]++;
  try {
    const {
      ticker
    } =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[64]++, req.params);
    const trendQuery =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[65]++, `
      SELECT 
        symbol,
        period,
        current,
        days7ago,
        days30ago,
        days60ago,
        days90ago,
        fetched_at
      FROM eps_trend
      WHERE UPPER(symbol) = UPPER($1)
      ORDER BY 
        CASE 
          WHEN period = '0q' THEN 1
          WHEN period = '+1q' THEN 2
          WHEN period = '0y' THEN 3
          WHEN period = '+1y' THEN 4
          ELSE 5
        END
    `);
    const result =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[66]++, await query(trendQuery, [ticker]));
    /* istanbul ignore next */
    cov_1wwik3boos().s[67]++;
    res.json({
      success: true,
      ticker: ticker.toUpperCase(),
      data: result.rows,
      metadata: {
        count: result.rows.length,
        timestamp: new Date().toISOString()
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1wwik3boos().s[68]++;
    console.error('EPS trend fetch error:', error);
    /* istanbul ignore next */
    cov_1wwik3boos().s[69]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch EPS trend',
      message: error.message
    });
  }
});

// Get growth estimates for a ticker
/* istanbul ignore next */
cov_1wwik3boos().s[70]++;
router.get('/:ticker/growth-estimates', async (req, res) => {
  /* istanbul ignore next */
  cov_1wwik3boos().f[8]++;
  cov_1wwik3boos().s[71]++;
  try {
    const {
      ticker
    } =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[72]++, req.params);
    const growthQuery =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[73]++, `
      SELECT 
        symbol,
        period,
        stock_trend,
        index_trend,
        fetched_at
      FROM growth_estimates
      WHERE UPPER(symbol) = UPPER($1)
      ORDER BY 
        CASE 
          WHEN period = '0q' THEN 1 
          WHEN period = '+1q' THEN 2
          WHEN period = '0y' THEN 3
          WHEN period = '+1y' THEN 4
          WHEN period = '+5y' THEN 5
          ELSE 6
        END
    `);
    const result =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[74]++, await query(growthQuery, [ticker]));
    /* istanbul ignore next */
    cov_1wwik3boos().s[75]++;
    res.json({
      success: true,
      ticker: ticker.toUpperCase(),
      data: result.rows,
      metadata: {
        count: result.rows.length,
        timestamp: new Date().toISOString()
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1wwik3boos().s[76]++;
    console.error('Growth estimates fetch error:', error);
    /* istanbul ignore next */
    cov_1wwik3boos().s[77]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch growth estimates',
      message: error.message
    });
  }
});

// Get analyst recommendations for a ticker
/* istanbul ignore next */
cov_1wwik3boos().s[78]++;
router.get('/:ticker/recommendations', async (req, res) => {
  /* istanbul ignore next */
  cov_1wwik3boos().f[9]++;
  cov_1wwik3boos().s[79]++;
  try {
    const {
      ticker
    } =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[80]++, req.params);
    const recommendationsQuery =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[81]++, `
      SELECT 
        symbol,
        period,
        strong_buy,
        buy,
        hold,
        sell,
        strong_sell,
        collected_date,
        created_at
      FROM analyst_recommendations
      WHERE UPPER(symbol) = UPPER($1)
      ORDER BY collected_date DESC, period
      LIMIT 10
    `);
    const result =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[82]++, await query(recommendationsQuery, [ticker]));
    /* istanbul ignore next */
    cov_1wwik3boos().s[83]++;
    res.json({
      success: true,
      ticker: ticker.toUpperCase(),
      data: result.rows,
      metadata: {
        count: result.rows.length,
        timestamp: new Date().toISOString()
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1wwik3boos().s[84]++;
    console.error('Analyst recommendations fetch error:', error);
    /* istanbul ignore next */
    cov_1wwik3boos().s[85]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch analyst recommendations',
      message: error.message
    });
  }
});

// Get comprehensive analyst overview for a ticker
/* istanbul ignore next */
cov_1wwik3boos().s[86]++;
router.get('/:ticker/overview', async (req, res) => {
  /* istanbul ignore next */
  cov_1wwik3boos().f[10]++;
  cov_1wwik3boos().s[87]++;
  try {
    const {
      ticker
    } =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[88]++, req.params);

    // Get all analyst data in parallel
    const [earningsEstimates, revenueEstimates, earningsHistory, epsRevisions, epsTrend, growthEstimates, recommendations] =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[89]++, await Promise.all([query(`SELECT symbol, quarter, current_qtr, next_qtr, current_year, next_year, avg_estimate, fetched_at FROM earnings_estimates WHERE UPPER(symbol) = UPPER($1) ORDER BY fetched_at DESC`, [ticker]), query(`SELECT symbol, quarter, current_qtr, next_qtr, current_year, next_year, avg_estimate, fetched_at FROM revenue_estimates WHERE UPPER(symbol) = UPPER($1) ORDER BY fetched_at DESC`, [ticker]), query(`SELECT symbol, quarter, eps_actual, eps_estimate, difference, surprise_percent, date FROM earnings_history WHERE UPPER(symbol) = UPPER($1) ORDER BY quarter DESC LIMIT 20`, [ticker]), query(`SELECT symbol, current_qtr, next_qtr, current_year, next_year, num_analysts, fetched_at FROM eps_revisions WHERE UPPER(symbol) = UPPER($1) ORDER BY fetched_at DESC`, [ticker]), query(`SELECT symbol, current_qtr, next_qtr, current_year, next_year, trend, fetched_at FROM eps_trend WHERE UPPER(symbol) = UPPER($1) ORDER BY fetched_at DESC`, [ticker]), query(`SELECT symbol, current_qtr, next_qtr, current_year, next_year, peg_ratio, fetched_at FROM growth_estimates WHERE UPPER(symbol) = UPPER($1) ORDER BY fetched_at DESC`, [ticker]), query(`SELECT symbol, firm, rating, target_price, collected_date FROM analyst_recommendations WHERE UPPER(symbol) = UPPER($1) ORDER BY collected_date DESC LIMIT 10`, [ticker])]));
    /* istanbul ignore next */
    cov_1wwik3boos().s[90]++;
    res.json({
      success: true,
      ticker: ticker.toUpperCase(),
      data: {
        earnings_estimates: earningsEstimates.rows,
        revenue_estimates: revenueEstimates.rows,
        earnings_history: earningsHistory.rows,
        eps_revisions: epsRevisions.rows,
        eps_trend: epsTrend.rows,
        growth_estimates: growthEstimates.rows,
        recommendations: recommendations.rows
      },
      metadata: {
        timestamp: new Date().toISOString()
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1wwik3boos().s[91]++;
    console.error('Analyst overview fetch error:', error);
    /* istanbul ignore next */
    cov_1wwik3boos().s[92]++;
    res.status(500).json({
      success: false,
      error: 'Failed to fetch analyst overview',
      message: error.message
    });
  }
});

// Get recent analyst actions (upgrades/downgrades) for the most recent day
/* istanbul ignore next */
cov_1wwik3boos().s[93]++;
router.get('/recent-actions', async (req, res) => {
  /* istanbul ignore next */
  cov_1wwik3boos().f[11]++;
  cov_1wwik3boos().s[94]++;
  try {
    const limit =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[95]++,
    /* istanbul ignore next */
    (cov_1wwik3boos().b[6][0]++, parseInt(req.query.limit)) ||
    /* istanbul ignore next */
    (cov_1wwik3boos().b[6][1]++, 10));

    // Get the most recent date with analyst actions
    const recentDateQuery =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[96]++, `
      SELECT DISTINCT date 
      FROM analyst_upgrade_downgrade 
      ORDER BY date DESC 
      LIMIT 1
    `);
    const recentDateResult =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[97]++, await query(recentDateQuery));
    /* istanbul ignore next */
    cov_1wwik3boos().s[98]++;
    if (
    /* istanbul ignore next */
    (cov_1wwik3boos().b[8][0]++, !recentDateResult.rows) ||
    /* istanbul ignore next */
    (cov_1wwik3boos().b[8][1]++, recentDateResult.rows.length === 0)) {
      /* istanbul ignore next */
      cov_1wwik3boos().b[7][0]++;
      cov_1wwik3boos().s[99]++;
      return res.json({
        data: [],
        summary: {
          date: null,
          total_actions: 0,
          upgrades: 0,
          downgrades: 0
        },
        message: 'No analyst actions found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1wwik3boos().b[7][1]++;
    }
    const mostRecentDate =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[100]++, recentDateResult.rows[0].date);

    // Get all actions for the most recent date
    const recentActionsQuery =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[101]++, `
      SELECT 
        aud.symbol,
        s.short_name AS company_name,
        aud.from_grade,
        aud.to_grade,
        aud.action,
        aud.firm,
        aud.date,
        aud.details,
        CASE 
          WHEN LOWER(aud.action) LIKE '%up%' OR LOWER(aud.action) LIKE '%buy%' OR LOWER(aud.action) LIKE '%positive%' THEN 'upgrade'
          WHEN LOWER(aud.action) LIKE '%down%' OR LOWER(aud.action) LIKE '%sell%' OR LOWER(aud.action) LIKE '%negative%' THEN 'downgrade'
          ELSE 'neutral'
        END as action_type
      FROM analyst_upgrade_downgrade aud
      LEFT JOIN symbols s ON aud.symbol = s.symbol
      WHERE aud.date = $1
      ORDER BY aud.date DESC, aud.symbol ASC
      LIMIT $2
    `);
    const actionsResult =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[102]++, await query(recentActionsQuery, [mostRecentDate, limit]));

    // Count action types
    const actions =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[103]++,
    /* istanbul ignore next */
    (cov_1wwik3boos().b[9][0]++, actionsResult.rows) ||
    /* istanbul ignore next */
    (cov_1wwik3boos().b[9][1]++, []));
    const upgrades =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[104]++, actions.filter(action => {
      /* istanbul ignore next */
      cov_1wwik3boos().f[12]++;
      cov_1wwik3boos().s[105]++;
      return action.action_type === 'upgrade';
    }));
    const downgrades =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[106]++, actions.filter(action => {
      /* istanbul ignore next */
      cov_1wwik3boos().f[13]++;
      cov_1wwik3boos().s[107]++;
      return action.action_type === 'downgrade';
    }));
    const neutrals =
    /* istanbul ignore next */
    (cov_1wwik3boos().s[108]++, actions.filter(action => {
      /* istanbul ignore next */
      cov_1wwik3boos().f[14]++;
      cov_1wwik3boos().s[109]++;
      return action.action_type === 'neutral';
    }));
    /* istanbul ignore next */
    cov_1wwik3boos().s[110]++;
    res.json({
      data: actions,
      summary: {
        date: mostRecentDate,
        total_actions: actions.length,
        upgrades: upgrades.length,
        downgrades: downgrades.length,
        neutrals: neutrals.length
      },
      metadata: {
        timestamp: new Date().toISOString()
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1wwik3boos().s[111]++;
    console.error('Error fetching recent analyst actions:', error);
    /* istanbul ignore next */
    cov_1wwik3boos().s[112]++;
    res.status(500).json({
      error: 'Failed to fetch recent analyst actions',
      message: error.message
    });
  }
});
/* istanbul ignore next */
cov_1wwik3boos().s[113]++;
module.exports = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,